<Type Name="NameObjectCollectionBase" FullName="System.Collections.Specialized.NameObjectCollectionBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6b2ec8822634839b9828808f40b46b7bbe645737" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36644615" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class NameObjectCollectionBase : System.Collections.ICollection, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit NameObjectCollectionBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NameObjectCollectionBase&#xA;Implements ICollection, IDeserializationCallback, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameObjectCollectionBase abstract : System::Collections::ICollection, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type NameObjectCollectionBase = class&#xA;    interface ICollection&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="9e7a6-101">为关联的 <see cref="T:System.String" /> 键和 <see cref="T:System.Object" /> 值的集合（可通过键或索引来访问它）提供 <see langword="abstract" /> 基类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9e7a6-101">Provides the <see langword="abstract" /> base class for a collection of associated <see cref="T:System.String" /> keys and <see cref="T:System.Object" /> values that can be accessed either with the key or with the index.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-102">此类的基础结构是一个哈希表。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-102">The underlying structure for this class is a hash table.</span></span>  
  
 <span data-ttu-id="9e7a6-103">每个元素是一个键/值对。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-103">Each element is a key/value pair.</span></span>  
  
 <span data-ttu-id="9e7a6-104">容量<xref:System.Collections.Specialized.NameObjectCollectionBase>是元素的数目<xref:System.Collections.Specialized.NameObjectCollectionBase>可以保存。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-104">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="9e7a6-105">如元素添加到<xref:System.Collections.Specialized.NameObjectCollectionBase>，自动增加容量通过重新分配所需的方式。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-105">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required through reallocation.</span></span>  
  
 <span data-ttu-id="9e7a6-106">哈希代码提供程序分配中的键的哈希代码<xref:System.Collections.Specialized.NameObjectCollectionBase>实例。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-106">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance.</span></span> <span data-ttu-id="9e7a6-107">默认哈希代码提供程序是<xref:System.Collections.CaseInsensitiveHashCodeProvider>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-107">The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</span></span>  
  
 <span data-ttu-id="9e7a6-108">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-108">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="9e7a6-109">默认比较器是<xref:System.Collections.CaseInsensitiveComparer>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-109">The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.</span></span>  
  
 <span data-ttu-id="9e7a6-110">在.NET Framework 1.0 版中，此类使用区分区域性的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-110">In .NET Framework version 1.0, this class uses culture-sensitive string comparisons.</span></span> <span data-ttu-id="9e7a6-111">但是，在.NET Framework 1.1 和更高版本中，此类使用<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>比较字符串时。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-111">However, in .NET Framework version 1.1 and later, this class uses <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> when comparing strings.</span></span> <span data-ttu-id="9e7a6-112">有关如何区域性影响比较和排序的详细信息，请参阅[执行不区分区域性的字符串操作](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md)。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-112">For more information about how culture affects comparisons and sorting, see [Performing Culture-Insensitive String Operations](~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md).</span></span>  
  
 <span data-ttu-id="9e7a6-113">`null` 允许作为键或值。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-113">`null` is allowed as a key or as a value.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9e7a6-114"><xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A>方法之间没有区别`null`返回这是因为找不到指定的键和`null`因为与键关联的值返回这`null`。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-114">The <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> method does not distinguish between `null` which is returned because the specified key is not found and `null` which is returned because the value associated with the key is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-115">下面的代码示例演示如何实现和使用<xref:System.Collections.Specialized.NameObjectCollectionBase>类。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-115">The following code example shows how to implement and use the <xref:System.Collections.Specialized.NameObjectCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/CPP/nameobjectcollectionbase.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/CS/nameobjectcollectionbase.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/VB/nameobjectcollectionbase.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="9e7a6-116">公共静态 (<see langword="Shared" />在 Visual Basic 中) 的此类型的成员都是线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9e7a6-116">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="9e7a6-117">但不保证所有实例成员都是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9e7a6-117">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="9e7a6-118">此实现不提供同步 （线程安全） 包装器<see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />，但是，派生的类可以创建他们自己的同步的版本<see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />使用<see cref="P:System.Collections.ICollection.SyncRoot" />属性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9e7a6-118">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span>
      </span>
      <span data-ttu-id="9e7a6-119">枚举整个集合本质上不是线程安全的过程。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9e7a6-119">Enumerating through a collection is intrinsically not a thread safe procedure.</span>
      </span>
      <span data-ttu-id="9e7a6-120">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9e7a6-120">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="9e7a6-121">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9e7a6-121">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-122">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-122">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-123">初始化为空的 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-123">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-124">容量<xref:System.Collections.Specialized.NameObjectCollectionBase>是元素的数目，<xref:System.Collections.Specialized.NameObjectCollectionBase>可以保存。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-124">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="9e7a6-125">如元素添加到<xref:System.Collections.Specialized.NameObjectCollectionBase>，自动增加容量通过重新分配在内部数组所需的方式。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-125">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="9e7a6-126">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<xref:System.Collections.Specialized.NameObjectCollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-126">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="9e7a6-127">哈希代码提供程序分配中的键的哈希代码<xref:System.Collections.Specialized.NameObjectCollectionBase>实例。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-127">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance.</span></span> <span data-ttu-id="9e7a6-128">默认哈希代码提供程序是<xref:System.Collections.CaseInsensitiveHashCodeProvider>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-128">The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</span></span>  
  
 <span data-ttu-id="9e7a6-129">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-129">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="9e7a6-130">默认比较器是<xref:System.Collections.CaseInsensitiveComparer>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-130">The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.</span></span>  
  
 <span data-ttu-id="9e7a6-131">此构造函数是 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-131">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase (System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase(System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameObjectCollectionBase : System.Collections.IEqualityComparer -&gt; System.Collections.Specialized.NameObjectCollectionBase" Usage="new System.Collections.Specialized.NameObjectCollectionBase equalityComparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="equalityComparer">
          <span data-ttu-id="9e7a6-132">
            <see cref="T:System.Collections.IEqualityComparer" /> 对象，用于确定两个键是否相等，并为集合中的键生成哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-132">The <see cref="T:System.Collections.IEqualityComparer" /> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-133">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例，该实例为空、具有默认的初始容量并使用指定的 <see cref="T:System.Collections.IEqualityComparer" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-133">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is empty, has the default initial capacity, and uses the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-134">容量<xref:System.Collections.Specialized.NameObjectCollectionBase>对象是元素的数目，<xref:System.Collections.Specialized.NameObjectCollectionBase>可以保存。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-134">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> object is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="9e7a6-135">如元素添加到<xref:System.Collections.Specialized.NameObjectCollectionBase>，自动增加容量通过重新分配在内部数组所需的方式。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-135">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="9e7a6-136">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<xref:System.Collections.Specialized.NameObjectCollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-136">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="9e7a6-137"><xref:System.Collections.IEqualityComparer>对象组合比较器和哈希代码提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-137">The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.</span></span>  <span data-ttu-id="9e7a6-138">哈希代码提供程序分配中的键的哈希代码<xref:System.Collections.Specialized.NameObjectCollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-138">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  <span data-ttu-id="9e7a6-139">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-139">The comparer determines whether two keys are equal.</span></span>  
  
 <span data-ttu-id="9e7a6-140">此构造函数是 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-140">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameObjectCollectionBase : int -&gt; System.Collections.Specialized.NameObjectCollectionBase" Usage="new System.Collections.Specialized.NameObjectCollectionBase capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="9e7a6-141">
            <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例最初可以包含的项的大概数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-141">The approximate number of entries that the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance can initially contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-142">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例，该实例为空、具有指定的初始容量，并使用默认哈希代码提供程序和默认比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-142">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is empty, has the specified initial capacity, and uses the default hash code provider and the default comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-143">容量<xref:System.Collections.Specialized.NameObjectCollectionBase>是元素的数目，<xref:System.Collections.Specialized.NameObjectCollectionBase>可以保存。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-143">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="9e7a6-144">如元素添加到<xref:System.Collections.Specialized.NameObjectCollectionBase>，自动增加容量通过重新分配在内部数组所需的方式。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-144">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="9e7a6-145">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<xref:System.Collections.Specialized.NameObjectCollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-145">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="9e7a6-146">哈希代码提供程序分配中的键的哈希代码<xref:System.Collections.Specialized.NameObjectCollectionBase>实例。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-146">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance.</span></span> <span data-ttu-id="9e7a6-147">默认哈希代码提供程序是<xref:System.Collections.CaseInsensitiveHashCodeProvider>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-147">The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</span></span>  
  
 <span data-ttu-id="9e7a6-148">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-148">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="9e7a6-149">默认比较器是<xref:System.Collections.CaseInsensitiveComparer>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-149">The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.</span></span>  
  
 <span data-ttu-id="9e7a6-150">此构造函数是 O (`n`) 操作，其中`n`是`capacity`。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-150">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9e7a6-151">
            <paramref name="capacity" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-151">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase (System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Collections.IHashCodeProvider hashProvider, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (hashProvider As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase(System::Collections::IHashCodeProvider ^ hashProvider, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameObjectCollectionBase : System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Specialized.NameObjectCollectionBase" Usage="new System.Collections.Specialized.NameObjectCollectionBase (hashProvider, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use NameObjectCollectionBase(IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hashProvider" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="hashProvider">
          <span data-ttu-id="9e7a6-152">
            <see cref="T:System.Collections.IHashCodeProvider" />，它将为 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有键提供哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-152">The <see cref="T:System.Collections.IHashCodeProvider" /> that will supply the hash codes for all keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="9e7a6-153">
            <see cref="T:System.Collections.IComparer" />，用于确定两个键是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-153">The <see cref="T:System.Collections.IComparer" /> to use to determine whether two keys are equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-154">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例，该实例为空、具有默认初始容量，并使用指定的哈希代码提供程序和指定的比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-154">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is empty, has the default initial capacity, and uses the specified hash code provider and the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-155">容量<xref:System.Collections.Specialized.NameObjectCollectionBase>是元素的数目，<xref:System.Collections.Specialized.NameObjectCollectionBase>可以保存。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-155">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="9e7a6-156">如元素添加到<xref:System.Collections.Specialized.NameObjectCollectionBase>，自动增加容量通过重新分配在内部数组所需的方式。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-156">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="9e7a6-157">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<xref:System.Collections.Specialized.NameObjectCollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-157">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="9e7a6-158">哈希代码提供程序分配中的键的哈希代码<xref:System.Collections.Specialized.NameObjectCollectionBase>实例。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-158">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance.</span></span> <span data-ttu-id="9e7a6-159">默认哈希代码提供程序是<xref:System.Collections.CaseInsensitiveHashCodeProvider>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-159">The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</span></span>  
  
 <span data-ttu-id="9e7a6-160">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-160">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="9e7a6-161">默认比较器是<xref:System.Collections.CaseInsensitiveComparer>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-161">The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.</span></span>  
  
 <span data-ttu-id="9e7a6-162">此构造函数是 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-162">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase (int capacity, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (capacity As Integer, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase(int capacity, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameObjectCollectionBase : int * System.Collections.IEqualityComparer -&gt; System.Collections.Specialized.NameObjectCollectionBase" Usage="new System.Collections.Specialized.NameObjectCollectionBase (capacity, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="9e7a6-163">
            <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 对象最初可包含的大概项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-163">The approximate number of entries that the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> object can initially contain.</span>
          </span>
        </param>
        <param name="equalityComparer">
          <span data-ttu-id="9e7a6-164">
            <see cref="T:System.Collections.IEqualityComparer" /> 对象，用于确定两个键是否相等，并为集合中的键生成哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-164">The <see cref="T:System.Collections.IEqualityComparer" /> object to use to determine whether two keys are equal and to generate hash codes for the keys in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-165">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例，该实例为空、具有指定的初始容量并使用指定的 <see cref="T:System.Collections.IEqualityComparer" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-165">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is empty, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-166">容量<xref:System.Collections.Specialized.NameObjectCollectionBase>对象是元素的数目，<xref:System.Collections.Specialized.NameObjectCollectionBase>可以保存。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-166">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> object is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="9e7a6-167">如元素添加到<xref:System.Collections.Specialized.NameObjectCollectionBase>，自动增加容量通过重新分配在内部数组所需的方式。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-167">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="9e7a6-168">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<xref:System.Collections.Specialized.NameObjectCollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-168">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="9e7a6-169"><xref:System.Collections.IEqualityComparer>对象组合比较器和哈希代码提供程序。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-169">The <xref:System.Collections.IEqualityComparer> object combines the comparer and the hash code provider.</span></span>  <span data-ttu-id="9e7a6-170">哈希代码提供程序分配中的键的哈希代码<xref:System.Collections.Specialized.NameObjectCollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-170">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  <span data-ttu-id="9e7a6-171">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-171">The comparer determines whether two keys are equal.</span></span>  
  
 <span data-ttu-id="9e7a6-172">此构造函数是 O (`n`) 操作，其中`n`是`capacity`参数。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-172">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9e7a6-173">
            <paramref name="capacity" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-173">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameObjectCollectionBase : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Collections.Specialized.NameObjectCollectionBase" Usage="new System.Collections.Specialized.NameObjectCollectionBase (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="9e7a6-174">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，包含序列化新 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例所需的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-174">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the new <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="9e7a6-175">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，包含与新 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例关联的序列化流的源和目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-175">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the new <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-176">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例，该实例可序列化且使用指定的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 和 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-176">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is serializable and uses the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-177">此构造函数是 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-177">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NameObjectCollectionBase (int capacity, System.Collections.IHashCodeProvider hashProvider, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IHashCodeProvider hashProvider, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (capacity As Integer, hashProvider As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NameObjectCollectionBase(int capacity, System::Collections::IHashCodeProvider ^ hashProvider, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Specialized.NameObjectCollectionBase : int * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Specialized.NameObjectCollectionBase" Usage="new System.Collections.Specialized.NameObjectCollectionBase (capacity, hashProvider, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Please use NameObjectCollectionBase(Int32, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="hashProvider" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="9e7a6-178">
            <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例最初可以包含的项的大概数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-178">The approximate number of entries that the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance can initially contain.</span>
          </span>
        </param>
        <param name="hashProvider">
          <span data-ttu-id="9e7a6-179">
            <see cref="T:System.Collections.IHashCodeProvider" />，它将为 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有键提供哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-179">The <see cref="T:System.Collections.IHashCodeProvider" /> that will supply the hash codes for all keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="9e7a6-180">
            <see cref="T:System.Collections.IComparer" />，用于确定两个键是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-180">The <see cref="T:System.Collections.IComparer" /> to use to determine whether two keys are equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-181">初始化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 类的新实例，该实例为空且具有指定的初始容量，并使用指定的哈希代码提供程序和指定的比较器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-181">Initializes a new instance of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> class that is empty, has the specified initial capacity and uses the specified hash code provider and the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-182">容量<xref:System.Collections.Specialized.NameObjectCollectionBase>是元素的数目，<xref:System.Collections.Specialized.NameObjectCollectionBase>可以保存。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-182">The capacity of a <xref:System.Collections.Specialized.NameObjectCollectionBase> is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can hold.</span></span> <span data-ttu-id="9e7a6-183">如元素添加到<xref:System.Collections.Specialized.NameObjectCollectionBase>，自动增加容量通过重新分配在内部数组所需的方式。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-183">As elements are added to a <xref:System.Collections.Specialized.NameObjectCollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="9e7a6-184">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<xref:System.Collections.Specialized.NameObjectCollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-184">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="9e7a6-185">哈希代码提供程序分配中的键的哈希代码<xref:System.Collections.Specialized.NameObjectCollectionBase>实例。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-185">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Specialized.NameObjectCollectionBase> instance.</span></span> <span data-ttu-id="9e7a6-186">默认哈希代码提供程序是<xref:System.Collections.CaseInsensitiveHashCodeProvider>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-186">The default hash code provider is the <xref:System.Collections.CaseInsensitiveHashCodeProvider>.</span></span>  
  
 <span data-ttu-id="9e7a6-187">比较器确定两个键是否相等。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-187">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="9e7a6-188">默认比较器是<xref:System.Collections.CaseInsensitiveComparer>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-188">The default comparer is the <xref:System.Collections.CaseInsensitiveComparer>.</span></span>  
  
 <span data-ttu-id="9e7a6-189">此构造函数是 O (`n`) 操作，其中`n`是`capacity`。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-189">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9e7a6-190">
            <paramref name="capacity" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-190">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.Collections.CaseInsensitiveComparer" />
      </Docs>
    </Member>
    <Member MemberName="BaseAdd">
      <MemberSignature Language="C#" Value="protected void BaseAdd (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseAdd(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseAdd (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseAdd(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.BaseAdd : string * obj -&gt; unit" Usage="nameObjectCollectionBase.BaseAdd (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9e7a6-191">要添加的项的 <see cref="T:System.String" /> 键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-191">The <see cref="T:System.String" /> key of the entry to add.</span>
          </span>
          <span data-ttu-id="9e7a6-192">键可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-192">The key can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9e7a6-193">要添加的项的 <see cref="T:System.Object" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-193">The <see cref="T:System.Object" /> value of the entry to add.</span>
          </span>
          <span data-ttu-id="9e7a6-194">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-194">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-195">将具有指定键和值的项添加到 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-195">Adds an entry with the specified key and value into the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-196">如果<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>已经等于容量的容量<xref:System.Collections.Specialized.NameObjectCollectionBase>增加通过自动重新分配在内部数组和现有元素被复制到新数组中，在添加新的元素之前。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-196">If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Specialized.NameObjectCollectionBase> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="9e7a6-197">如果<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>小于容量，此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-197">If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation.</span></span> <span data-ttu-id="9e7a6-198">如果容量需要增加以容纳新元素，此方法会成为 O (`n`) 操作，其中`n`是<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-198">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-199">下面的代码示例使用<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd%2A>创建新<xref:System.Collections.Specialized.NameObjectCollectionBase>中元素<xref:System.Collections.IDictionary>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-199">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd%2A> to create a new <xref:System.Collections.Specialized.NameObjectCollectionBase> with elements from an <xref:System.Collections.IDictionary>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseAdd/CPP/nocb_baseadd.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseAdd/CS/nocb_baseadd.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseAdd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseAdd/VB/nocb_baseadd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9e7a6-200">该集合是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-200">The collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseClear">
      <MemberSignature Language="C#" Value="protected void BaseClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseClear();" />
      <MemberSignature Language="F#" Value="member this.BaseClear : unit -&gt; unit" Usage="nameObjectCollectionBase.BaseClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-201">移除 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-201">Removes all entries from the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-202"><xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> 是设置为零，并且集合的元素对其他对象的引用也被释放。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-202"><xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="9e7a6-203">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-203">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-204">下面的代码示例使用<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseClear%2A>删除所有元素从<xref:System.Collections.Specialized.NameObjectCollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-204">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseClear%2A> to remove all elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseClear/CPP/nocb_baseclear.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseClear/CS/nocb_baseclear.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseClear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseClear/VB/nocb_baseclear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9e7a6-205">该集合是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-205">The collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseGet">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-206">获取 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中指定项的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-206">Gets the value of the specified entry from the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseGet">
      <MemberSignature Language="C#" Value="protected object BaseGet (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object BaseGet(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGet (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ BaseGet(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseGet : int -&gt; obj" Usage="nameObjectCollectionBase.BaseGet index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9e7a6-207">要获取的值的从零开始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-207">The zero-based index of the value to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-208">获取 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例的指定索引处的项值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-208">Gets the value of the entry at the specified index of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e7a6-209">
            <see cref="T:System.Object" />，它表示指定索引处的项值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-209">An <see cref="T:System.Object" /> that represents the value of the entry at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-210">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-210">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-211">下面的代码示例使用<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A>和<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A>若要获取特定的键和值。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-211">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/CPP/nocb_baseget.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/CS/nocb_baseget.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/VB/nocb_baseget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9e7a6-212">
            <paramref name="index" /> 超出了集合的有效索引范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-212">
              <paramref name="index" /> is outside the valid range of indexes for the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseGet">
      <MemberSignature Language="C#" Value="protected object BaseGet (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object BaseGet(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGet (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ BaseGet(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.BaseGet : string -&gt; obj" Usage="nameObjectCollectionBase.BaseGet name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9e7a6-213">要获取的项的 <see cref="T:System.String" /> 键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-213">The <see cref="T:System.String" /> key of the entry to get.</span>
          </span>
          <span data-ttu-id="9e7a6-214">键可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-214">The key can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-215">获取 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中第一个具有指定键的项值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-215">Gets the value of the first entry with the specified key from the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e7a6-216">如果找到了表示第一个具有指定键的项值的 <see cref="T:System.Object" />，则为该对象；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-216">An <see cref="T:System.Object" /> that represents the value of the first entry with the specified key, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-217">如果集合包含具有指定键的多个条目，此方法将返回仅的第一个条目。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-217">If the collection contains multiple entries with the specified key, this method returns only the first entry.</span></span> <span data-ttu-id="9e7a6-218">若要使用相同的键获取后续项的值，请使用枚举器循环访问集合并对键进行比较。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-218">To get the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9e7a6-219">此方法返回`null`在以下情况： 1) 如果找不到指定的键;和 2） 如果找到指定的键，其关联的值为`null`。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-219">This method returns `null` in the following cases: 1) if the specified key is not found; and 2) if the specified key is found and its associated value is `null`.</span></span> <span data-ttu-id="9e7a6-220">此方法不区分两种情况。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-220">This method does not distinguish between the two cases.</span></span>  
  
 <span data-ttu-id="9e7a6-221">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-221">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-222">下面的代码示例使用<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A>和<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A>若要获取特定的键和值。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-222">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/CPP/nocb_baseget.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/CS/nocb_baseget.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/VB/nocb_baseget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="BaseGetAllKeys">
      <MemberSignature Language="C#" Value="protected string[] BaseGetAllKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string[] BaseGetAllKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetAllKeys () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::String ^&gt; ^ BaseGetAllKeys();" />
      <MemberSignature Language="F#" Value="member this.BaseGetAllKeys : unit -&gt; string[]" Usage="nameObjectCollectionBase.BaseGetAllKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-223">返回 <see cref="T:System.String" /> 数组，该数组包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-223">Returns a <see cref="T:System.String" /> array that contains all the keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e7a6-224">
            <see cref="T:System.String" /> 数组，该数组包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-224">A <see cref="T:System.String" /> array that contains all the keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-225">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-225">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-226">下面的代码示例使用<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A>和<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A>来获取键的数组或一组值。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-226">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A> to get an array of the keys or an array of the values.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGetAll/CPP/nocb_basegetall.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGetAll/CS/nocb_basegetall.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGetAll/VB/nocb_basegetall.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseGetAllValues">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-227">返回数组，该数组包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-227">Returns an array that contains all the values in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseGetAllValues">
      <MemberSignature Language="C#" Value="protected object[] BaseGetAllValues ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] BaseGetAllValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetAllValues () As Object()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ BaseGetAllValues();" />
      <MemberSignature Language="F#" Value="member this.BaseGetAllValues : unit -&gt; obj[]" Usage="nameObjectCollectionBase.BaseGetAllValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-228">返回 <see cref="T:System.Object" /> 数组，该数组包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-228">Returns an <see cref="T:System.Object" /> array that contains all the values in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e7a6-229">
            <see cref="T:System.Object" /> 数组，它包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-229">An <see cref="T:System.Object" /> array that contains all the values in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-230">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-230">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-231">下面的代码示例使用<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A>和<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A>来获取键的数组或一组值。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-231">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues%2A> to get an array of the keys or an array of the values.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGetAll/CPP/nocb_basegetall.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGetAll/CS/nocb_basegetall.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGetAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGetAll/VB/nocb_basegetall.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseGetAllValues">
      <MemberSignature Language="C#" Value="protected object[] BaseGetAllValues (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object[] BaseGetAllValues(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Object ^&gt; ^ BaseGetAllValues(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.BaseGetAllValues : Type -&gt; obj[]" Usage="nameObjectCollectionBase.BaseGetAllValues type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="9e7a6-232">表示要返回的数组类型的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-232">A <see cref="T:System.Type" /> that represents the type of array to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-233">返回指定类型的数组，该数组包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-233">Returns an array of the specified type that contains all the values in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e7a6-234">指定类型的数组，该数组包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-234">An array of the specified type that contains all the values in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-235">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-235">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9e7a6-236">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-236">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9e7a6-237">
            <paramref name="type" /> 不是有效的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-237">
              <paramref name="type" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="BaseGetKey">
      <MemberSignature Language="C#" Value="protected string BaseGetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string BaseGetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ BaseGetKey(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseGetKey : int -&gt; string" Usage="nameObjectCollectionBase.BaseGetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9e7a6-238">要获取的键的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-238">The zero-based index of the key to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-239">获取 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例的指定索引处的项键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-239">Gets the key of the entry at the specified index of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e7a6-240">表示指定索引处的项键的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-240">A <see cref="T:System.String" /> that represents the key of the entry at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-241">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-241">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-242">下面的代码示例使用<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A>和<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A>若要获取特定的键和值。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-242">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseGet%2A> to get specific keys and values.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/CPP/nocb_baseget.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/CS/nocb_baseget.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseGet/VB/nocb_baseget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9e7a6-243">
            <paramref name="index" /> 超出了集合的有效索引范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-243">
              <paramref name="index" /> is outside the valid range of indexes for the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseHasKeys">
      <MemberSignature Language="C#" Value="protected bool BaseHasKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool BaseHasKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseHasKeys () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseHasKeys();" />
      <MemberSignature Language="F#" Value="member this.BaseHasKeys : unit -&gt; bool" Usage="nameObjectCollectionBase.BaseHasKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-244">获取一个值，通过该值指示 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例是否包含键不为 <see langword="null" /> 的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-244">Gets a value indicating whether the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance contains entries whose keys are not <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e7a6-245">如果 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例包含键不为 <see langword="null" /> 的项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-245">
              <see langword="true" /> if the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance contains entries whose keys are not <see langword="null" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-246">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-246">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-247">下面的代码示例使用<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys%2A>确定集合是否包含键不`null`。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-247">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys%2A> to determine if the collection contains keys that are not `null`.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys/CPP/nocb_basehaskeys.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys/CS/nocb_basehaskeys.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys/VB/nocb_basehaskeys.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseRemove">
      <MemberSignature Language="C#" Value="protected void BaseRemove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseRemove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseRemove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseRemove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.BaseRemove : string -&gt; unit" Usage="nameObjectCollectionBase.BaseRemove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9e7a6-248">要移除的项的 <see cref="T:System.String" /> 键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-248">The <see cref="T:System.String" /> key of the entries to remove.</span>
          </span>
          <span data-ttu-id="9e7a6-249">键可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-249">The key can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-250">移除 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中具有指定键的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-250">Removes the entries with the specified key from the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-251">如果<xref:System.Collections.Specialized.NameObjectCollectionBase>不具有指定键，包含的元素<xref:System.Collections.Specialized.NameObjectCollectionBase>保持不变。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-251">If the <xref:System.Collections.Specialized.NameObjectCollectionBase> does not contain an element with the specified key, the <xref:System.Collections.Specialized.NameObjectCollectionBase> remains unchanged.</span></span> <span data-ttu-id="9e7a6-252">不引发异常。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-252">No exception is thrown.</span></span>  
  
 <span data-ttu-id="9e7a6-253">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-253">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="9e7a6-254">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-254">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="9e7a6-255">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-255">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="9e7a6-256">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-256">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-257">下面的代码示例使用<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A>和<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A>要从中移除元素<xref:System.Collections.Specialized.NameObjectCollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-257">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A> to remove elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseRemove/CPP/nocb_baseremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseRemove/CS/nocb_baseremove.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseRemove/VB/nocb_baseremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9e7a6-258">该集合是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-258">The collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseRemoveAt">
      <MemberSignature Language="C#" Value="protected void BaseRemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseRemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseRemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseRemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.BaseRemoveAt : int -&gt; unit" Usage="nameObjectCollectionBase.BaseRemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9e7a6-259">要移除的项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-259">The zero-based index of the entry to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-260">移除 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例的指定索引处的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-260">Removes the entry at the specified index of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-261">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-261">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="9e7a6-262">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-262">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="9e7a6-263">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-263">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="9e7a6-264">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-264">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-265">下面的代码示例使用<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A>和<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A>要从中移除元素<xref:System.Collections.Specialized.NameObjectCollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-265">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove%2A> and <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt%2A> to remove elements from a <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseRemove/CPP/nocb_baseremove.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseRemove/CS/nocb_baseremove.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseRemove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseRemove/VB/nocb_baseremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9e7a6-266">
            <paramref name="index" /> 超出了集合的有效索引范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-266">
              <paramref name="index" /> is outside the valid range of indexes for the collection.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9e7a6-267">该集合是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-267">The collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BaseSet">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-268">设置 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的项值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-268">Sets the value of an entry in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BaseSet">
      <MemberSignature Language="C#" Value="protected void BaseSet (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseSet(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseSet (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseSet(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.BaseSet : int * obj -&gt; unit" Usage="nameObjectCollectionBase.BaseSet (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9e7a6-269">要设置的项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-269">The zero-based index of the entry to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9e7a6-270">表示要设置的项的新值的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-270">The <see cref="T:System.Object" /> that represents the new value of the entry to set.</span>
          </span>
          <span data-ttu-id="9e7a6-271">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-271">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-272">设置 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例的指定索引处的项值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-272">Sets the value of the entry at the specified index of the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-273">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-273">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-274">下面的代码示例使用<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A>设置特定元素的值。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-274">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A> to set the value of a specific element.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseSet/CPP/nocb_baseset.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseSet/CS/nocb_baseset.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseSet/VB/nocb_baseset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9e7a6-275">该集合是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-275">The collection is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9e7a6-276">
            <paramref name="index" /> 超出了集合的有效索引范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-276">
              <paramref name="index" /> is outside the valid range of indexes for the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSet">
      <MemberSignature Language="C#" Value="protected void BaseSet (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseSet(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseSet (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseSet(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.BaseSet : string * obj -&gt; unit" Usage="nameObjectCollectionBase.BaseSet (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9e7a6-277">要设置的项的 <see cref="T:System.String" /> 键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-277">The <see cref="T:System.String" /> key of the entry to set.</span>
          </span>
          <span data-ttu-id="9e7a6-278">键可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-278">The key can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9e7a6-279">表示要设置的项的新值的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-279">The <see cref="T:System.Object" /> that represents the new value of the entry to set.</span>
          </span>
          <span data-ttu-id="9e7a6-280">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-280">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-281">为 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中第一个具有指定键的项设置值（如果有这样的项）；否则将具有指定键和值的项添加到 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-281">Sets the value of the first entry with the specified key in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance, if found; otherwise, adds an entry with the specified key and value into the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-282">如果集合包含具有指定键的多个条目，此方法会设置仅的第一个条目。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-282">If the collection contains multiple entries with the specified key, this method sets only the first entry.</span></span> <span data-ttu-id="9e7a6-283">若要使用相同的密钥设置后续项的值，请使用枚举器循环访问集合并对键进行比较。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-283">To set the values of subsequent entries with the same key, use the enumerator to iterate through the collection and compare the keys.</span></span>  
  
 <span data-ttu-id="9e7a6-284">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-284">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-285">下面的代码示例使用<xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A>设置特定元素的值。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-285">The following code example uses <xref:System.Collections.Specialized.NameObjectCollectionBase.BaseSet%2A> to set the value of a specific element.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseSet/CPP/nocb_baseset.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseSet/CS/nocb_baseset.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.BaseSet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.BaseSet/VB/nocb_baseset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9e7a6-286">该集合是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-286">The collection is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Specialized.NameObjectCollectionBase.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-287">获取包含在 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的键/值对的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-287">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e7a6-288">包含在 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的键/值对的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-288">The number of key/value pairs contained in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-289">容量是元素的数目，<xref:System.Collections.Specialized.NameObjectCollectionBase>可以存储。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-289">The capacity is the number of elements that the <xref:System.Collections.Specialized.NameObjectCollectionBase> can store.</span></span> <span data-ttu-id="9e7a6-290"><xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> 是中的实际的元素数目<xref:System.Collections.Specialized.NameObjectCollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-290"><xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Specialized.NameObjectCollectionBase>.</span></span>  
  
 <span data-ttu-id="9e7a6-291">容量始终是大于或等于<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-291">The capacity is always greater than or equal to <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span> <span data-ttu-id="9e7a6-292">如果<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>添加元素时超过容量，通过在复制旧元素和添加新的元素之前重新分配在内部数组自动增加容量。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-292">If <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A> exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="9e7a6-293">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-293">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="nameObjectCollectionBase.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-294">返回循环访问 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-294">Returns an enumerator that iterates through the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9e7a6-295">用于 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例的 <see cref="T:System.Collections.IEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-295">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-296">此枚举器返回的字符串形式的集合的键。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-296">This enumerator returns the keys of the collection as strings.</span></span>  
  
 <span data-ttu-id="9e7a6-297">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-297">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="9e7a6-298">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-298">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="9e7a6-299">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-299">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="9e7a6-300">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-300">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="9e7a6-301"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-301"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="9e7a6-302">在此位置上，未定义 <xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-302">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="9e7a6-303">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-303">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="9e7a6-304">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-304"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="9e7a6-305"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-305"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="9e7a6-306">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-306">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="9e7a6-307">当枚举器位于此位置上，后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-307">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="9e7a6-308">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，<xref:System.Collections.IEnumerator.Current%2A>是不确定的。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-308">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="9e7a6-309">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-309">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="9e7a6-310">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-310">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="9e7a6-311">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-311">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="9e7a6-312">该枚举数不具有独占访问集合的权限；因此，枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-312">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="9e7a6-313">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-313">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="9e7a6-314">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-314">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="9e7a6-315">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-315">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="nameObjectCollectionBase.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="9e7a6-316">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，该对象包含序列化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例所需的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-316">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="9e7a6-317">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，该对象包含与 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例关联的序列化流的源和目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-317">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-318">实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并返回序列化 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例所需的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-318">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-319">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-319">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9e7a6-320">
            <paramref name="info" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-320">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9e7a6-321">用于提供序列化服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-321">for providing serialization services.</span>
          </span>
          <span data-ttu-id="9e7a6-322">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />安全操作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-322">Associated enumeration:   <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="protected bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-323">获取或设置一个值，通过该值指示 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例是否为只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-323">Gets or sets a value indicating whether the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e7a6-324">如果 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-324">
              <see langword="true" /> if the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-325">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-325">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="9e7a6-326">集合是只读的是只是一个集合与防止集合; 进行修改的包装因此，如果对基础集合进行更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-326">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="9e7a6-327">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-327">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9e7a6-328">下面的代码示例创建只读集合。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-328">The following code example creates a read-only collection.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.IsReadOnly/CPP/nocb_isreadonly.cpp#1)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.IsReadOnly/CS/nocb_isreadonly.cs#1)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase.IsReadOnly/VB/nocb_isreadonly.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ Keys { System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" Usage="System.Collections.Specialized.NameObjectCollectionBase.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-329">获取 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> 实例，该实例包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-329">Gets a <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> instance that contains all the keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e7a6-330">
            <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> 实例，该实例包含 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 实例中的所有键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-330">A <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> instance that contains all the keys in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-331">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-331">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="nameObjectCollectionBase.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="9e7a6-332">反序列化事件源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-332">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-333">实现 <see cref="T:System.Runtime.Serialization.ISerializable" /> 接口，并在完成反序列化之后引发反序列化事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-333">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-334">虽然<xref:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization%2A>方法不是对默认情况下，COM 客户端可见继承<xref:System.Collections.Specialized.NameObjectCollectionBase>类可以公开它，并且可以在 COM 客户端导致意外行为。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-334">While the <xref:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization%2A> method is not visible to COM clients by default, inheriting the <xref:System.Collections.Specialized.NameObjectCollectionBase> class can expose it and can cause undesirable behavior in COM clients.</span></span>  
  
 <span data-ttu-id="9e7a6-335">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-335">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="9e7a6-336">与当前 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例关联的 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 对象无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-336">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance is invalid.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="9e7a6-337">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 复制的元素的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-337">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />.</span>
          </span>
          <span data-ttu-id="9e7a6-338">
            <see cref="T:System.Array" /> 必须具有从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-338">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9e7a6-339">
            <c>array</c> 中从零开始的索引，在此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-339">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9e7a6-340">从目标数组的指定索引处开始将整个 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 复制到兼容的一维 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-340">Copies the entire <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-341">指定的数组必须具有兼容类型。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-341">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="9e7a6-342">此方法使用<xref:System.Array.Copy%2A?displayProperty=nameWithType>要复制的元素。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-342">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="9e7a6-343">虽然<xref:System.Collections.Specialized.NameObjectCollectionBase.System%23Collections%23ICollection%23CopyTo%2A>方法不是对默认情况下，COM 客户端可见继承<xref:System.Collections.Specialized.NameObjectCollectionBase>类可以公开它，并且可以在 COM 客户端导致意外行为。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-343">While the <xref:System.Collections.Specialized.NameObjectCollectionBase.System%23Collections%23ICollection%23CopyTo%2A> method is not visible to COM clients by default, inheriting the <xref:System.Collections.Specialized.NameObjectCollectionBase> class can expose it and can cause undesirable behavior in COM clients.</span></span>  
  
 <span data-ttu-id="9e7a6-344">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-344">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Specialized.NameObjectCollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9e7a6-345">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-345">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9e7a6-346">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-346">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9e7a6-347">
            <paramref name="array" /> 是多维的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-347">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="9e7a6-348">-或-  源 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 中元素数量大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-348">-or-  The number of elements in the source <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="9e7a6-349">无法自动将源 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 的类型转换为目标 <paramref name="array" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-349">The type of the source <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-350">获取一个值，该值指示对 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 对象的访问是否同步（线程安全）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-350">Gets a value indicating whether access to the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> object is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e7a6-351">如果对 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 对象的访问是同步的（线程安全），则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-351">
              <see langword="true" /> if access to the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9e7a6-352">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-352">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-353">A<xref:System.Collections.Specialized.NameObjectCollectionBase>不同步对象。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-353">A <xref:System.Collections.Specialized.NameObjectCollectionBase> object is not synchronized.</span></span> <span data-ttu-id="9e7a6-354">派生的类可以提供的同步的版本<xref:System.Collections.Specialized.NameObjectCollectionBase>使用<xref:System.Collections.ICollection.SyncRoot%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-354">Derived classes can provide a synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase> using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="9e7a6-355">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-355">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9e7a6-356">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-356">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="9e7a6-357">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-357">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="9e7a6-358">下面的代码示例演示如何锁定集合使用<xref:System.Collections.ICollection.SyncRoot%2A>属性在整个枚举期间。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-358">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/CS/remarks.cs#2)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/VB/remarks.vb#2)]  
  
 <span data-ttu-id="9e7a6-359">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-359">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9e7a6-360">获取一个对象，该对象可用于同步对 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 对象的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-360">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9e7a6-361">一个对象，该对象可用于同步对 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 对象的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9e7a6-361">An object that can be used to synchronize access to the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9e7a6-362">派生的类可以提供自己的同步的版本<xref:System.Collections.Specialized.NameObjectCollectionBase>类使用<xref:System.Collections.ICollection.SyncRoot%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-362">Derived classes can provide their own synchronized version of the <xref:System.Collections.Specialized.NameObjectCollectionBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="9e7a6-363">同步代码必须在执行操作<xref:System.Collections.ICollection.SyncRoot%2A>属性<xref:System.Collections.Specialized.NameObjectCollectionBase>对象，不是直接对<xref:System.Collections.Specialized.NameObjectCollectionBase>对象。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-363">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.Specialized.NameObjectCollectionBase> object, not directly on the <xref:System.Collections.Specialized.NameObjectCollectionBase> object.</span></span> <span data-ttu-id="9e7a6-364">这样可确保对从其他对象派生的集合正确地执行操作。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-364">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="9e7a6-365">具体地说，这样可保持正确的同步，与可能同时对修改其他线程<xref:System.Collections.Specialized.NameObjectCollectionBase>对象。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-365">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Specialized.NameObjectCollectionBase> object.</span></span>  
  
 <span data-ttu-id="9e7a6-366">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-366">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9e7a6-367">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-367">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="9e7a6-368">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-368">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="9e7a6-369">下面的代码示例演示如何锁定集合使用<xref:System.Collections.ICollection.SyncRoot%2A>在整个枚举期间。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-369">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.NameObjectCollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.Specialized.NameObjectCollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/CS/remarks.cs#2)]
 [!code-vb[System.Collections.Specialized.NameObjectCollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.NameObjectCollectionBase/VB/remarks.vb#2)]  
  
 <span data-ttu-id="9e7a6-370">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="9e7a6-370">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
  </Members>
</Type>