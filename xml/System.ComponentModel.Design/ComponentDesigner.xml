<Type Name="ComponentDesigner" FullName="System.ComponentModel.Design.ComponentDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f167a4a6bd3caa5523f9f9dc81c18f3af7cad863" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36707896" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComponentDesigner : IDisposable, System.ComponentModel.Design.IComponentInitializer, System.ComponentModel.Design.IDesigner, System.ComponentModel.Design.IDesignerFilter, System.ComponentModel.Design.ITreeDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentDesigner extends System.Object implements class System.ComponentModel.Design.IComponentInitializer, class System.ComponentModel.Design.IDesigner, class System.ComponentModel.Design.IDesignerFilter, class System.ComponentModel.Design.ITreeDesigner, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentDesigner&#xA;Implements IComponentInitializer, IDesigner, IDesignerFilter, IDisposable, ITreeDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentDesigner : IDisposable, System::ComponentModel::Design::IComponentInitializer, System::ComponentModel::Design::IDesigner, System::ComponentModel::Design::IDesignerFilter, System::ComponentModel::Design::ITreeDesigner" />
  <TypeSignature Language="F#" Value="type ComponentDesigner = class&#xA;    interface ITreeDesigner&#xA;    interface IDesigner&#xA;    interface IDisposable&#xA;    interface IDesignerFilter&#xA;    interface IComponentInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IComponentInitializer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesignerFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.ITreeDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="a08eb-101">扩展组件的设计模式行为。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a08eb-101">Extends the design mode behavior of a component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-102"><xref:System.ComponentModel.Design.ComponentDesigner>基本设计器类提供一个简单的设计器，可以扩展在设计模式下的关联组件的行为。</span><span class="sxs-lookup"><span data-stu-id="a08eb-102">The <xref:System.ComponentModel.Design.ComponentDesigner> base designer class provides a simple designer that can extend the behavior of an associated component in design mode.</span></span>  
  
 <span data-ttu-id="a08eb-103"><xref:System.ComponentModel.Design.ComponentDesigner> 提供一个空<xref:System.ComponentModel.Design.IDesignerFilter>接口的实现，可以重写其方法，以在设计时调整特性、 属性和关联组件的事件。</span><span class="sxs-lookup"><span data-stu-id="a08eb-103"><xref:System.ComponentModel.Design.ComponentDesigner> provides an empty <xref:System.ComponentModel.Design.IDesignerFilter> interface implementation, whose methods can be overridden to adjust the attributes, properties and events of the associated component at design time.</span></span>  
  
 <span data-ttu-id="a08eb-104">你可以将一个设计器关联类型使用<xref:System.ComponentModel.DesignerAttribute>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-104">You can associate a designer with a type using a <xref:System.ComponentModel.DesignerAttribute>.</span></span> <span data-ttu-id="a08eb-105">有关自定义设计时行为的概述，请参阅[扩展设计时支持](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2)。</span><span class="sxs-lookup"><span data-stu-id="a08eb-105">For an overview of customizing design-time behavior, see [Extending Design-Time Support](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span></span>  
  
 <span data-ttu-id="a08eb-106"><xref:System.ComponentModel.Design.ComponentDesigner>类实现的继承的组件的属性描述符的特殊行为。</span><span class="sxs-lookup"><span data-stu-id="a08eb-106">The <xref:System.ComponentModel.Design.ComponentDesigner> class implements a special behavior for the property descriptors of inherited components.</span></span> <span data-ttu-id="a08eb-107">名为的内部类型`InheritedPropertyDescriptor`默认使用<xref:System.ComponentModel.Design.ComponentDesigner>实现代替从基类继承的属性。</span><span class="sxs-lookup"><span data-stu-id="a08eb-107">An internal type named `InheritedPropertyDescriptor` is used by the default <xref:System.ComponentModel.Design.ComponentDesigner> implementation to stand in for properties that are inherited from a base class.</span></span> <span data-ttu-id="a08eb-108">有两种情况下在其中添加这些属性描述符。</span><span class="sxs-lookup"><span data-stu-id="a08eb-108">There are two cases in which these property descriptors are added.</span></span>  
  
1.  <span data-ttu-id="a08eb-109">通过返回到根对象本身，<xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A?displayProperty=nameWithType>属性，因为从其基类继承。</span><span class="sxs-lookup"><span data-stu-id="a08eb-109">To the root object itself, which is returned by the <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A?displayProperty=nameWithType> property, because you are inheriting from its base class.</span></span>  
  
2.  <span data-ttu-id="a08eb-110">对在根对象的基类中找到的字段。</span><span class="sxs-lookup"><span data-stu-id="a08eb-110">To fields found in the base class of the root object.</span></span> <span data-ttu-id="a08eb-111">从基类的公共和受保护字段添加到设计器中，以便它们可以由用户操作。</span><span class="sxs-lookup"><span data-stu-id="a08eb-111">Public and protected fields from the base class are added to the designer so that they can be manipulated by the user.</span></span>  
  
 <span data-ttu-id="a08eb-112">`InheritedPropertyDescriptor`类修改属性的默认值，以便默认值是在对象实例化的当前值。</span><span class="sxs-lookup"><span data-stu-id="a08eb-112">The `InheritedPropertyDescriptor` class modifies the default value of a property, so that the default value is the current value at object instantiation.</span></span> <span data-ttu-id="a08eb-113">这是因为该属性继承自另一个实例。</span><span class="sxs-lookup"><span data-stu-id="a08eb-113">This is because the property is inherited from another instance.</span></span> <span data-ttu-id="a08eb-114">设计器定义重置的属性值，如将其设置为值的设置继承的类。</span><span class="sxs-lookup"><span data-stu-id="a08eb-114">The designer defines resetting the property value as setting it to the value that was set by the inherited class.</span></span> <span data-ttu-id="a08eb-115">此值可能与元数据中存储的默认值不同。</span><span class="sxs-lookup"><span data-stu-id="a08eb-115">This value may differ from the default value stored in metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a08eb-116">下面的代码示例提供了示例<xref:System.ComponentModel.Design.ComponentDesigner>实现和与设计器关联的组件示例。</span><span class="sxs-lookup"><span data-stu-id="a08eb-116">The following code example provides an example <xref:System.ComponentModel.Design.ComponentDesigner> implementation and an example component associated with the designer.</span></span> <span data-ttu-id="a08eb-117">设计器实现的重写<xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A>调用了基方法`Initialize`方法，重写<xref:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction%2A>方法，用于显示<xref:System.Windows.Forms.MessageBox>双击，该组件时，重写<xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>提供自定义的属性访问器<xref:System.ComponentModel.Design.DesignerVerb>到组件的快捷菜单的菜单命令。</span><span class="sxs-lookup"><span data-stu-id="a08eb-117">The designer implements an override of the <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method that calls the base `Initialize` method, an override of the <xref:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction%2A> method that displays a <xref:System.Windows.Forms.MessageBox> when the component is double-clicked, and an override of the <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> property accessor that supplies a custom <xref:System.ComponentModel.Design.DesignerVerb> menu command to the shortcut menu for the component.</span></span>  
  
 [!code-cpp[ComponentDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ComponentDesignerExample/CPP/examplecomponent.cpp#1)]
 [!code-csharp[ComponentDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ComponentDesignerExample/CS/examplecomponent.cs#1)]
 [!code-vb[ComponentDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ComponentDesignerExample/VB/examplecomponent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
    <altmember cref="T:System.ComponentModel.DesignerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-118">初始化 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-118">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActionLists : System.ComponentModel.Design.DesignerActionListCollection" Usage="System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-119">获取与设计器相关联的组件所支持的设计时操作列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-119">Gets the design-time action lists supported by the component associated with the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a08eb-120">与设计器相关联的组件所支持的设计时操作列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-120">The design-time action lists supported by the component associated with the designer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociatedComponents">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection AssociatedComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection AssociatedComponents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AssociatedComponents As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ AssociatedComponents { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedComponents : System.Collections.ICollection" Usage="System.ComponentModel.Design.ComponentDesigner.AssociatedComponents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-121">获取与设计器所管理的组件关联的组件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-121">Gets the collection of components associated with the component managed by the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a08eb-122">与设计器所管理的组件关联的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-122">The components that are associated with the component managed by the designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-123">此属性指示要复制或移动设计器在复制期间所管理的组件以及任何组件拖动或移动操作。</span><span class="sxs-lookup"><span data-stu-id="a08eb-123">This property indicates any components to copy or move along with the component managed by the designer during a copy, drag, or move operation.</span></span>  
  
 <span data-ttu-id="a08eb-124">如果此集合包含当前的设计模式文档中其他组件的引用，这些组件将复制以及设计器复制操作期间所管理的组件。</span><span class="sxs-lookup"><span data-stu-id="a08eb-124">If this collection contains references to other components in the current design mode document, those components will be copied along with the component managed by the designer during a copy operation.</span></span>  
  
 <span data-ttu-id="a08eb-125">选择设计器所管理的组件时，此集合被填充任何嵌套的控件。</span><span class="sxs-lookup"><span data-stu-id="a08eb-125">When the component managed by the designer is selected, this collection is filled with any nested controls.</span></span> <span data-ttu-id="a08eb-126">此集合还可以包含其他组件，如工具栏的按钮。</span><span class="sxs-lookup"><span data-stu-id="a08eb-126">This collection can also include other components, such as the buttons of a toolbar.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Component">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IComponent Component { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent Component" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Component" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Component As IComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IComponent ^ Component { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Component : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.ComponentDesigner.Component" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-127">获取此设计器正在设计的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-127">Gets the component this designer is designing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a08eb-128">由该设计器管理的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-128">The component managed by the designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-129"><xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A>方法<xref:System.ComponentModel.Design.ComponentDesigner>设置此属性。</span><span class="sxs-lookup"><span data-stu-id="a08eb-129">The <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method of <xref:System.ComponentModel.Design.ComponentDesigner> sets this property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a08eb-130">在重写<xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A>方法，一定要调用基类<xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A>方法，然后才能使用此属性。</span><span class="sxs-lookup"><span data-stu-id="a08eb-130">When overriding the <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method, be sure to call the base class <xref:System.ComponentModel.Design.ComponentDesigner.Initialize%2A> method before using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-131">释放由 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 占用的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-131">Releases the resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="componentDesigner.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-132">释放由 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 使用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-132">Releases all resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-133">在完成使用 <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> 后，应调用 <xref:System.ComponentModel.Design.ComponentDesigner>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-133">Call <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.ComponentDesigner>.</span></span> <span data-ttu-id="a08eb-134"><xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> 方法使 <xref:System.ComponentModel.Design.ComponentDesigner> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="a08eb-134">The <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.ComponentDesigner> in an unusable state.</span></span> <span data-ttu-id="a08eb-135">在调用<xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A>，必须释放对所有引用<xref:System.ComponentModel.Design.ComponentDesigner>以便垃圾回收器才能回收的内存，<xref:System.ComponentModel.Design.ComponentDesigner>占用。</span><span class="sxs-lookup"><span data-stu-id="a08eb-135">After calling <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.ComponentDesigner> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.ComponentDesigner> was occupying.</span></span> <span data-ttu-id="a08eb-136">有关详细信息，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="a08eb-136">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a08eb-137">每次释放对 <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.ComponentModel.Design.ComponentDesigner>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-137">Always call <xref:System.ComponentModel.Design.ComponentDesigner.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.ComponentDesigner>.</span></span> <span data-ttu-id="a08eb-138">否则，在垃圾回收器调用 <xref:System.ComponentModel.Design.ComponentDesigner> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="a08eb-138">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.ComponentDesigner> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="componentDesigner.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="a08eb-139">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-139">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-140">释放由 <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-140">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-141">此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-141">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="a08eb-142">`Dispose()` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="a08eb-142">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="a08eb-143"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="a08eb-143"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="a08eb-144">当`disposing`参数为 true 时，此方法释放由任何托管对象持有的全部资源此<xref:System.ComponentModel.Design.ComponentDesigner>引用。</span><span class="sxs-lookup"><span data-stu-id="a08eb-144">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Design.ComponentDesigner> references.</span></span> <span data-ttu-id="a08eb-145">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-145">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a08eb-146">
            <para>
              <see langword="Dispose" /> 可以多次调用由其他对象。在重写<see langword="Dispose(Boolean)" />请注意不要引用已释放的以前调用中的对象<see langword="Dispose" />。有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅 [实现释放 Method](~/docs/standard/garbage-collection/implementing-dispose.md)。有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅 [清洗向上非托管 Resources](~/docs/standard/garbage-collection/unmanaged.md) 和 [重写 Finalize 方法] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-146">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="componentDesigner.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-147">在源代码文件中为组件的默认事件创建方法签名，并将用户的光标定位到该位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-147">Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-148">在 Windows 窗体和 Web 窗体设计器中，当用户双击组件会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-148">In Windows Forms and Web Forms designers, this method is invoked when a user double-clicks a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Design.CheckoutException">
          <span data-ttu-id="a08eb-149">签出已签入源代码管理程序的文件的尝试失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-149">An attempt to check out a file that is checked into a source code management program failed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ComponentDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ComponentDesigner ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="componentDesigner.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-150">在垃圾回收将对象回收之前，尝试通过调用 <see langword="Dispose(false)" /> 来释放资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-150">Attempts to free resources by calling <see langword="Dispose(false)" /> before the object is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-151">此方法将替代<xref:System.Object.Finalize%2A?displayProperty=nameWithType>并清理资源通过调用`Dispose(false)`。</span><span class="sxs-lookup"><span data-stu-id="a08eb-151">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="a08eb-152">重写 `Dispose(Boolean)` 以自定义清理。</span><span class="sxs-lookup"><span data-stu-id="a08eb-152">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="a08eb-153">应用程序代码不应调用此方法。对象的`Finalize`方法过程中将自动调用垃圾回收，除非已通过调用禁用垃圾回收器的终止<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-153">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a08eb-154">有关详细信息，请参阅[Finalize 方法和析构函数](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)，[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)，和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span><span class="sxs-lookup"><span data-stu-id="a08eb-154">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="componentDesigner.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="a08eb-155">要请求的服务的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-155">The type of service to request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-156">尝试从设计器组件的设计模式站点检索指定类型的服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-156">Attempts to retrieve the specified type of service from the design mode site of the designer's component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a08eb-157">实现所请求服务的对象，在无法解析服务时则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-157">An object implementing the requested service, or <see langword="null" /> if the service cannot be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-158">此方法的默认实现组件的站点中请求服务。</span><span class="sxs-lookup"><span data-stu-id="a08eb-158">The default implementation of this method requests the service from the site of the component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a08eb-159">下面的代码示例演示如何将<xref:System.ComponentModel.Design.ComponentDesigner.GetService%2A>访问设计器服务的方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-159">The following code example demonstrates the use of the <xref:System.ComponentModel.Design.ComponentDesigner.GetService%2A> method to access designer services.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#7)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceAttribute">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.InheritanceAttribute InheritanceAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.InheritanceAttribute InheritanceAttribute" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property InheritanceAttribute As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::InheritanceAttribute ^ InheritanceAttribute { System::ComponentModel::InheritanceAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritanceAttribute : System.ComponentModel.InheritanceAttribute" Usage="System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-160">获取一个特性，该特性指示关联组件的继承类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-160">Gets an attribute that indicates the type of inheritance of the associated component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a08eb-161">关联组件的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-161">The <see cref="T:System.ComponentModel.InheritanceAttribute" /> for the associated component.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="protected bool Inherited { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Inherited" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Inherited { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Inherited : bool" Usage="System.ComponentModel.Design.ComponentDesigner.Inherited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-162">获取一个值，该值指示是否继承此组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-162">Gets a value indicating whether this component is inherited.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a08eb-163">如果继承此组件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-163">
              <see langword="true" /> if the component is inherited; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.ComponentModel.IComponent -&gt; unit&#xA;override this.Initialize : System.ComponentModel.IComponent -&gt; unit" Usage="componentDesigner.Initialize component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="a08eb-164">此设计器的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-164">The component for this designer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-165">使设计器准备查看、编辑和设计指定的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-165">Prepares the designer to view, edit, and design the specified component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-166">准备好使用设计器时，设计器宿主调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-166">The designer host calls this method when it is ready to use the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="InitializeExistingComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeExistingComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeExistingComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeExistingComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeExistingComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberSignature Language="F#" Value="abstract member InitializeExistingComponent : System.Collections.IDictionary -&gt; unit&#xA;override this.InitializeExistingComponent : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.InitializeExistingComponent defaultValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">
          <span data-ttu-id="a08eb-167">要应用到属性的默认值的名称/值字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-167">A name/value dictionary of default values to apply to properties.</span>
          </span>
          <span data-ttu-id="a08eb-168">如果未指定默认值，则可能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-168">May be <see langword="null" /> if no default values are specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-169">重新初始化现有组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-169">Reinitializes an existing component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-170"><xref:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent%2A>正在重新初始化现有组件时调用方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-170">The <xref:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent%2A> method is called when an existing component is being reinitialized.</span></span> <span data-ttu-id="a08eb-171">例如，这可能是后用户将一个组件拖动到另一个容器。</span><span class="sxs-lookup"><span data-stu-id="a08eb-171">For example, this may occur after the user drags a component to another container.</span></span>  
  
 <span data-ttu-id="a08eb-172">你可以使用`defaultValues`字典以应用推荐的默认值为属性; 但是，你不应修改组件属性，除了那些存储在字典中，因为此现有组件上可能已在其上设置的属性。</span><span class="sxs-lookup"><span data-stu-id="a08eb-172">You may use the `defaultValues` dictionary to apply recommended defaults to properties; however, you should not modify component properties aside from those stored in the dictionary, because this existing component may already have properties set on it.</span></span>  
  
 <span data-ttu-id="a08eb-173">此方法的默认实现没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="a08eb-173">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewComponent">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberSignature Language="F#" Value="abstract member InitializeNewComponent : System.Collections.IDictionary -&gt; unit&#xA;override this.InitializeNewComponent : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.InitializeNewComponent defaultValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">
          <span data-ttu-id="a08eb-174">要应用到属性的默认值的名称/值字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-174">A name/value dictionary of default values to apply to properties.</span>
          </span>
          <span data-ttu-id="a08eb-175">如果未指定默认值，则可能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-175">May be <see langword="null" /> if no default values are specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-176">初始化新创建的组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-176">Initializes a newly created component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-177"><xref:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent%2A>组件首先初始化时，通常首先添加到设计图面后调用方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-177">The <xref:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent%2A> method is called when a component is first initialized, typically after being first added to a design surface.</span></span>  
  
 <span data-ttu-id="a08eb-178">你可能会执行任何必要的初始化此组件，你可能忽略`defaultValues`字典完全。</span><span class="sxs-lookup"><span data-stu-id="a08eb-178">You may perform any necessary initialization of this component, and you may ignore the `defaultValues` dictionary altogether.</span></span>  
  
 <span data-ttu-id="a08eb-179">此方法的默认实现没有任何影响。</span><span class="sxs-lookup"><span data-stu-id="a08eb-179">The default implementation of this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNonDefault">
      <MemberSignature Language="C#" Value="public virtual void InitializeNonDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNonDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNonDefault ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNonDefault();" />
      <MemberSignature Language="F#" Value="abstract member InitializeNonDefault : unit -&gt; unit&#xA;override this.InitializeNonDefault : unit -&gt; unit" Usage="componentDesigner.InitializeNonDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeExistingComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-180">对已初始化为非默认设置的导入组件的设置进行初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-180">Initializes the settings for an imported component that is already initialized to settings other than the defaults.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-181">当与不在其默认状态，例如粘贴或移动与拖到设计器拖放操作的控件的控件关联的设计器时，调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-181">This method is called when the designer is associated with a control that is not in its default state, such as a control that you paste or move with a drag-and-drop operation onto the designer.</span></span> <span data-ttu-id="a08eb-182">此方法使实施者能修改或卷影组件的属性而不是初始化为其默认设置组件的属性有机会。</span><span class="sxs-lookup"><span data-stu-id="a08eb-182">This method provides an opportunity for implementers to modify or shadow the properties of the component rather than initialize the properties for the component to their defaults.</span></span> <span data-ttu-id="a08eb-183">在其他初始化函数后调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-183">This method is called after the other initialization functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeGetInheritanceAttribute">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute (System.ComponentModel.Design.ComponentDesigner toInvoke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.InheritanceAttribute InvokeGetInheritanceAttribute(class System.ComponentModel.Design.ComponentDesigner toInvoke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function InvokeGetInheritanceAttribute (toInvoke As ComponentDesigner) As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::InheritanceAttribute ^ InvokeGetInheritanceAttribute(System::ComponentModel::Design::ComponentDesigner ^ toInvoke);" />
      <MemberSignature Language="F#" Value="member this.InvokeGetInheritanceAttribute : System.ComponentModel.Design.ComponentDesigner -&gt; System.ComponentModel.InheritanceAttribute" Usage="componentDesigner.InvokeGetInheritanceAttribute toInvoke" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.ComponentModel.Design.ComponentDesigner" />
      </Parameters>
      <Docs>
        <param name="toInvoke">
          <span data-ttu-id="a08eb-184">要检索其继承特性的 <see cref="T:System.ComponentModel.Design.ComponentDesigner" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-184">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> whose inheritance attribute to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-185">获取指定 <see cref="T:System.ComponentModel.InheritanceAttribute" /> 的 <see cref="T:System.ComponentModel.Design.ComponentDesigner" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-185">Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a08eb-186">指定设计器的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-186">The <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified designer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComponentDefaults">
      <MemberSignature Language="C#" Value="public virtual void OnSetComponentDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSetComponentDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnSetComponentDefaults ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnSetComponentDefaults();" />
      <MemberSignature Language="F#" Value="abstract member OnSetComponentDefaults : unit -&gt; unit&#xA;override this.OnSetComponentDefaults : unit -&gt; unit" Usage="componentDesigner.OnSetComponentDefaults " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-187">设置组件的默认属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-187">Sets the default properties for the component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-188"><xref:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults%2A> 初始化设计器时调用。</span><span class="sxs-lookup"><span data-stu-id="a08eb-188"><xref:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults%2A> is called when the designer is initialized.</span></span> <span data-ttu-id="a08eb-189">这样设计器，以提供基组件的默认值。</span><span class="sxs-lookup"><span data-stu-id="a08eb-189">This allows the designer to provide default values for the base component.</span></span>  
  
 <span data-ttu-id="a08eb-190">一次调用此方法： 当你首次创建组件通过将其从工具箱拖到设计图面。</span><span class="sxs-lookup"><span data-stu-id="a08eb-190">This method is called only once: when you first create the component by dragging it from the Toolbox to the design surface.</span></span> <span data-ttu-id="a08eb-191">后续的初始化过程中的设计器不会调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-191">Subsequent initializations of the designer do not invoke this method.</span></span>  
  
 <span data-ttu-id="a08eb-192">如果默认属性是一个字符串，并且未已设置的属性，此方法的默认实现会将该组件的默认属性设置为组件的名称。</span><span class="sxs-lookup"><span data-stu-id="a08eb-192">The default implementation of this method sets the default property of the component to the name of the component if the default property is a string and the property is not already set.</span></span> <span data-ttu-id="a08eb-193">可以自定义此设计器设计的组件初始化派生类中实现此方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-193">This method can be implemented in a derived class to customize the initialization of the component that this designer is designing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentComponent">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.IComponent ParentComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent ParentComponent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParentComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::IComponent ^ ParentComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentComponent : System.ComponentModel.IComponent" Usage="System.ComponentModel.Design.ComponentDesigner.ParentComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-194">获取此设计器的父组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-194">Gets the parent component for this designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a08eb-195">此设计器的父组件，或者如果此设计器为根组件，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-195">The parent component for this designer, or <see langword="null" /> if this designer is the root component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-196">此属性提供了用于发现在设计器中的父关系的通用机制，并由<xref:System.ComponentModel.Design.ComponentDesigner>对象的<xref:System.ComponentModel.Design.ITreeDesigner>接口实现。</span><span class="sxs-lookup"><span data-stu-id="a08eb-196">This property provides a generic mechanism for discovering parent relationships within designers, and is used by the <xref:System.ComponentModel.Design.ComponentDesigner> object's <xref:System.ComponentModel.Design.ITreeDesigner> interface implementation.</span></span> <span data-ttu-id="a08eb-197">此属性只应返回`null`此设计器时的根组件。</span><span class="sxs-lookup"><span data-stu-id="a08eb-197">This property should only return `null` when this designer is the root component.</span></span> <span data-ttu-id="a08eb-198">此属性的默认实现返回的所有组件的根组件的根组件和它将返回`null`根组件。</span><span class="sxs-lookup"><span data-stu-id="a08eb-198">The default implementation of this property returns the root component for all components that are not the root component, and it returns `null` for the root component.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterAttributes : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PostFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="a08eb-199">组件的类的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-199">The attributes for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-200">允许设计器从通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中更改或移除项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-200">Allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-201">此方法使您能够更改或删除通过公开的属性字典内的项<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-201">This method provides a way to change or remove the items within the dictionary of attributes that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="a08eb-202">属性的字典中的键是属性中的值指定的类型标识符其<xref:System.Attribute.TypeId%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a08eb-202">The keys in the dictionary of attributes are the type identifiers of the attributes, as specified by the value of their <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="a08eb-203">对象属于类型<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-203">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="a08eb-204">之后，立即调用此方法<xref:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-204">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a08eb-205">
            <para>你可以直接筛选字典可通过访问<paramref name="attributes" />参数，或也可以将其保持不变。执行你自己的筛选后，如果你重写此方法，调用基实现。此外，你必须删除中的项<see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" />方法。相反，更改属性，若要隐藏项。你可能还会删除中的项<see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-205">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation after you perform your own filtering. In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" /> method. Instead, change attributes to hide items. You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterEvents : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PostFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="a08eb-206">组件的类的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-206">The events for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-207">允许设计器从通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中更改或移除项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-207">Allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-208">此方法使您能够更改或删除通过公开的事件字典内的项<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-208">This method provides a way to change or remove the items within the dictionary of events that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="a08eb-209">中的事件字典的键是事件的名称。</span><span class="sxs-lookup"><span data-stu-id="a08eb-209">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="a08eb-210">对象属于类型<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-210">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="a08eb-211">之后，立即调用此方法<xref:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-211">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a08eb-212">
            <para>你可以直接筛选字典可通过访问<paramref name="events" />参数，或也可以将其保持不变。执行你自己的筛选后，如果你重写此方法，调用基实现。此外，你必须删除中的项<see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" />方法。相反，更改属性，若要隐藏项。你可能还会删除中的项<see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-212">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation after you perform your own filtering. In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" /> method. Instead, change attributes to hide items. You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PostFilterProperties : System.Collections.IDictionary -&gt; unit&#xA;override this.PostFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PostFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="a08eb-213">组件的类的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-213">The properties for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-214">允许设计器从通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中更改或移除项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-214">Allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-215">此方法使您能够更改或删除通过公开的属性字典内的项<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-215">This method provides a way to change or remove the items within the dictionary of properties that are exposed through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="a08eb-216">属性的字典中的键是属性的名称。</span><span class="sxs-lookup"><span data-stu-id="a08eb-216">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="a08eb-217">对象属于类型<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-217">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="a08eb-218">之后，立即调用此方法<xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-218">This method is called immediately after the <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a08eb-219">
            <para>你可以直接筛选字典可通过访问<paramref name="properties" />参数，或也可以将其保持不变。执行你自己的筛选后，如果你重写此方法，调用基实现。此外，你必须删除中的项<see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" />方法。相反，更改属性，若要隐藏项。你可能还会删除中的项<see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-219">
              <para>You can directly filter the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation after you perform your own filtering. In addition, you must not remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" /> method. Instead, change attributes to hide items. You may also remove items in the <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterAttributes : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterAttributes : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PreFilterAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="a08eb-220">组件的类的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-220">The attributes for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-221">允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中添加项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-221">Allows a designer to add to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-222">此方法使您能够将项添加到设计器通过公开的属性的字典<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-222">This method provides a way to add items to the dictionary of attributes that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="a08eb-223">属性的字典中的键是属性中的值指定的类型标识符其<xref:System.Attribute.TypeId%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a08eb-223">The keys in the dictionary of attributes are the type identifiers of the attributes, as specified by the value of their <xref:System.Attribute.TypeId%2A> property.</span></span> <span data-ttu-id="a08eb-224">对象属于类型<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-224">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="a08eb-225">立即之前调用此方法<xref:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-225">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a08eb-226">
            <para>你可以直接修改字典可通过访问<paramref name="attributes" />参数，或也可以将其保持不变。如果你重写此方法，调用基实现，然后才能执行您自己的筛选。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-226">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="attributes" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterEvents : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterEvents : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PreFilterEvents events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="a08eb-227">组件的类的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-227">The events for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-228">允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中添加项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-228">Allows a designer to add to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-229">此方法使您能够将项目添加到设计器通过公开的事件字典<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-229">This method provides a way to add items to the dictionary of events that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="a08eb-230">中的事件字典的键是事件的名称。</span><span class="sxs-lookup"><span data-stu-id="a08eb-230">The keys in the dictionary of events are the names of the events.</span></span> <span data-ttu-id="a08eb-231">对象属于类型<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-231">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="a08eb-232">立即之前调用此方法<xref:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-232">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a08eb-233">
            <para>你可以直接修改字典可通过访问<paramref name="events" />参数，或也可以将其保持不变。如果你重写此方法，调用基实现，然后才能执行您自己的筛选。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-233">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="events" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected virtual void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterProperties : System.Collections.IDictionary -&gt; unit&#xA;override this.PreFilterProperties : System.Collections.IDictionary -&gt; unit" Usage="componentDesigner.PreFilterProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="a08eb-234">组件的类的特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-234">The properties for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-235">允许设计器在通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中添加项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-235">Allows a designer to add to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-236">此方法使您能够将项添加到设计器通过公开的属性的字典<xref:System.ComponentModel.TypeDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-236">This method provides a way to add items to the dictionary of properties that a designer exposes through a <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="a08eb-237">属性的字典中的键是属性的名称。</span><span class="sxs-lookup"><span data-stu-id="a08eb-237">The keys in the dictionary of properties are the names of the properties.</span></span> <span data-ttu-id="a08eb-238">对象属于类型<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-238">The objects are of type <xref:System.ComponentModel.PropertyDescriptor>.</span></span> <span data-ttu-id="a08eb-239">立即之前调用此方法<xref:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a08eb-239">This method is called immediately before the <xref:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a08eb-240">
            <para>你可以直接修改字典可通过访问<paramref name="properties" />参数，或也可以将其保持不变。如果你重写此方法，调用基实现，然后才能执行您自己的筛选。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-240">
              <para>You can directly modify the dictionary that is accessible through the <paramref name="properties" /> parameter, or you can leave it unchanged. If you override this method, call the base implementation before you perform your own filtering.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanged">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanged (System.ComponentModel.MemberDescriptor member, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanged(class System.ComponentModel.MemberDescriptor member, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseComponentChanged (member As MemberDescriptor, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseComponentChanged(System::ComponentModel::MemberDescriptor ^ member, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.RaiseComponentChanged : System.ComponentModel.MemberDescriptor * obj * obj -&gt; unit" Usage="componentDesigner.RaiseComponentChanged (member, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="a08eb-241">指示已更改的成员的 <see cref="T:System.ComponentModel.MemberDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-241">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that has been changed.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="a08eb-242">该成员的旧值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-242">The old value of the member.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="a08eb-243">该成员的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-243">The new value of the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-244">通知 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> 此组件已被更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-244">Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-245">调用此方法，仅当直接影响组件的属性时，而不是通过提供的访问器<xref:System.ComponentModel.MemberDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-245">Call this method only when you affect component properties directly and not through the accessors provided by <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="RaiseComponentChanging">
      <MemberSignature Language="C#" Value="protected void RaiseComponentChanging (System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseComponentChanging(class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseComponentChanging (member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseComponentChanging(System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="member this.RaiseComponentChanging : System.ComponentModel.MemberDescriptor -&gt; unit" Usage="componentDesigner.RaiseComponentChanging member" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="a08eb-246">指示即将被更改的成员的 <see cref="T:System.ComponentModel.MemberDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-246">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that is about to be changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-247">通知 <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> 此组件即将被更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-247">Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component is about to be changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-248">调用此方法，仅当直接影响组件的属性时，而不是通过提供的访问器<xref:System.ComponentModel.MemberDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="a08eb-248">Call this method only when you affect component properties directly and not through accessors provided by <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShadowProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection ShadowProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ComponentDesigner/ShadowPropertyCollection ShadowProperties" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ShadowProperties As ComponentDesigner.ShadowPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::ComponentDesigner::ShadowPropertyCollection ^ ShadowProperties { System::ComponentModel::Design::ComponentDesigner::ShadowPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ShadowProperties : System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" Usage="System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ComponentDesigner+ShadowPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-249">获取重写用户设置的属性值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-249">Gets a collection of property values that override user settings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a08eb-250">指示设计文档隐藏属性的 <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-250">A <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> that indicates the shadow properties of the design document.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PostFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PostFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="a08eb-251">组件的类的 <see cref="T:System.Attribute" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-251">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="a08eb-252">特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-252">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-253">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-253">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-254">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="a08eb-254">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a08eb-255">它只能在 <xref:System.ComponentModel.Design.ComponentDesigner> 实例强制转换为 <xref:System.ComponentModel.Design.IDesignerFilter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a08eb-255">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterEvents (events As IDictionary) Implements IDesignerFilter.PostFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PostFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="a08eb-256">
            <see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-256">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="a08eb-257">事件字典中的关键字是事件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-257">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-258">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-258">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-259">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="a08eb-259">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a08eb-260">它只能在 <xref:System.ComponentModel.Design.ComponentDesigner> 实例强制转换为 <xref:System.ComponentModel.Design.IDesignerFilter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a08eb-260">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PostFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PostFilterProperties (properties As IDictionary) Implements IDesignerFilter.PostFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PostFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="a08eb-261">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-261">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="a08eb-262">属性字典中的关键字是属性名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-262">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-263">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-263">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-264">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="a08eb-264">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a08eb-265">它只能在 <xref:System.ComponentModel.Design.ComponentDesigner> 实例强制转换为 <xref:System.ComponentModel.Design.IDesignerFilter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a08eb-265">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterAttributes (attributes As IDictionary) Implements IDesignerFilter.PreFilterAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System::Collections::IDictionary ^ attributes) = System::ComponentModel::Design::IDesignerFilter::PreFilterAttributes;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <span data-ttu-id="a08eb-266">组件的类的 <see cref="T:System.Attribute" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-266">The <see cref="T:System.Attribute" /> objects for the class of the component.</span>
          </span>
          <span data-ttu-id="a08eb-267">特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-267">The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-268">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-268">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-269">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="a08eb-269">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a08eb-270">它只能在 <xref:System.ComponentModel.Design.ComponentDesigner> 实例强制转换为 <xref:System.ComponentModel.Design.IDesignerFilter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a08eb-270">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterEvents">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterEvents (events As IDictionary) Implements IDesignerFilter.PreFilterEvents" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System::Collections::IDictionary ^ events) = System::ComponentModel::Design::IDesignerFilter::PreFilterEvents;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="a08eb-271">
            <see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-271">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component.</span>
          </span>
          <span data-ttu-id="a08eb-272">事件字典中的关键字是事件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-272">The keys in the dictionary of events are event names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-273">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-273">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-274">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="a08eb-274">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a08eb-275">它只能在 <xref:System.ComponentModel.Design.ComponentDesigner> 实例强制转换为 <xref:System.ComponentModel.Design.IDesignerFilter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a08eb-275">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.IDesignerFilter.PreFilterProperties">
      <MemberSignature Language="C#" Value="void IDesignerFilter.PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub PreFilterProperties (properties As IDictionary) Implements IDesignerFilter.PreFilterProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System::Collections::IDictionary ^ properties) = System::ComponentModel::Design::IDesignerFilter::PreFilterProperties;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="a08eb-276">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-276">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component.</span>
          </span>
          <span data-ttu-id="a08eb-277">属性字典中的关键字是属性名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-277">The keys in the dictionary of properties are property names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a08eb-278">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-278">For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-279">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="a08eb-279">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a08eb-280">它只能在 <xref:System.ComponentModel.Design.ComponentDesigner> 实例强制转换为 <xref:System.ComponentModel.Design.IDesignerFilter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a08eb-280">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.IDesignerFilter> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Children">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.ComponentModel.Design.ITreeDesigner.Children" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Children As ICollection Implements ITreeDesigner.Children" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.ComponentModel.Design.ITreeDesigner.Children { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.ComponentDesigner.System.ComponentModel.Design.ITreeDesigner.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-281">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-281">For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a08eb-282">
            <see cref="T:System.Collections.ICollection" />，其中包含在当前的父设计器中所包含的 <see cref="T:System.ComponentModel.Design.IDesigner" /> 设计器的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-282">An <see cref="T:System.Collections.ICollection" /> that contains the collection of <see cref="T:System.ComponentModel.Design.IDesigner" /> designers contained in the current parent designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-283">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="a08eb-283">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a08eb-284">它只能在 <xref:System.ComponentModel.Design.ComponentDesigner> 实例强制转换为 <xref:System.ComponentModel.Design.ITreeDesigner> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a08eb-284">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.ITreeDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.ITreeDesigner.Parent">
      <MemberSignature Language="C#" Value="System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.IDesigner System.ComponentModel.Design.ITreeDesigner.Parent" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Parent As IDesigner Implements ITreeDesigner.Parent" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Design::IDesigner ^ System.ComponentModel.Design.ITreeDesigner.Parent { System::ComponentModel::Design::IDesigner ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.ComponentDesigner.System.ComponentModel.Design.ITreeDesigner.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-285">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-285">For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a08eb-286">表示父设计器的 <see cref="T:System.ComponentModel.Design.IDesigner" />，如果没有父设计器，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-286">An <see cref="T:System.ComponentModel.Design.IDesigner" /> representing the parent designer, or <see langword="null" /> if there is no parent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-287">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="a08eb-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a08eb-288">它只能在 <xref:System.ComponentModel.Design.ComponentDesigner> 实例强制转换为 <xref:System.ComponentModel.Design.ITreeDesigner> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a08eb-288">It can be used only when the <xref:System.ComponentModel.Design.ComponentDesigner> instance is cast to an <xref:System.ComponentModel.Design.ITreeDesigner> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Verbs As DesignerVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerVerbCollection ^ Verbs { System::ComponentModel::Design::DesignerVerbCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : System.ComponentModel.Design.DesignerVerbCollection" Usage="System.ComponentModel.Design.ComponentDesigner.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a08eb-289">获取与设计器相关联的组件所支持的设计时谓词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-289">Gets the design-time verbs supported by the component that is associated with the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a08eb-290">
            <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> 对象的 <see cref="T:System.ComponentModel.Design.DesignerVerb" />，在没有可用设计器谓词的情况下为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-290">A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects, or <see langword="null" /> if no designer verbs are available.</span>
          </span>
          <span data-ttu-id="a08eb-291">此默认实现始终返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a08eb-291">This default implementation always returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a08eb-292">此方法返回`null`如果组件没有设计时谓词。</span><span class="sxs-lookup"><span data-stu-id="a08eb-292">This method returns `null` if the component has no design-time verbs.</span></span>  
  
 <span data-ttu-id="a08eb-293">设计时环境通常显示 （右键单击） 的快捷菜单中的此方法返回的谓词。</span><span class="sxs-lookup"><span data-stu-id="a08eb-293">The design-time environment typically displays verbs returned by this method in a shortcut (right-click) menu.</span></span> <span data-ttu-id="a08eb-294">当用户选择其中一个谓词，<xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>方法的相应<xref:System.ComponentModel.Design.DesignerVerb>调用。</span><span class="sxs-lookup"><span data-stu-id="a08eb-294">When a user selects one of the verbs, the <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A> method of the corresponding <xref:System.ComponentModel.Design.DesignerVerb> is invoked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a08eb-295">设计时环境通常会提供**属性**组件的快捷菜单上的命令。</span><span class="sxs-lookup"><span data-stu-id="a08eb-295">A design-time environment typically provides a **Properties** command on a component's shortcut menu.</span></span> <span data-ttu-id="a08eb-296">因此，不包括这样的项中的设计器指定的谓词的集合。</span><span class="sxs-lookup"><span data-stu-id="a08eb-296">Therefore, do not include such an entry in the collection of designer-specified verbs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
  </Members>
</Type>