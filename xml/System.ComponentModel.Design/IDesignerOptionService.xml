<Type Name="IDesignerOptionService" FullName="System.ComponentModel.Design.IDesignerOptionService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="692a05b8975c4b6c3315133959f8e5e232d78884" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30368491" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerOptionService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerOptionService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerOptionService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerOptionService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerOptionService" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>提供对设计器选项的访问；在 Visual Studio 开发环境中，设计器选项位于“选项”命令下的“工具”菜单上。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerOptionService> 提供用于检索和更新的 Windows 窗体设计器选项，它列出在对话框中显示的值的接口**选项**命令的**工具**菜单Visual Studio 开发环境。 <xref:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue%2A>方法检索指定选项的值。 <xref:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue%2A>方法设置的指定选项的指定的值。  
  
   
  
## Examples  
 下面的代码示例演示如何访问<xref:System.ComponentModel.Design.IDesignerOptionService>以显示标准选项的当前值。  
  
 [!code-cpp[IDesignerOptionServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CPP/idesigneroptionservicecontrol.cpp#1)]
 [!code-csharp[IDesignerOptionServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CS/idesigneroptionservicecontrol.cs#1)]
 [!code-vb[IDesignerOptionServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerOptionServiceExample/VB/idesigneroptionservicecontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
  </Docs>
  <Members>
    <Member MemberName="GetOptionValue">
      <MemberSignature Language="C#" Value="public object GetOptionValue (string pageName, string valueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOptionValue(string pageName, string valueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOptionValue (pageName As String, valueName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOptionValue(System::String ^ pageName, System::String ^ valueName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pageName">定义该选项的页的名称。</param>
        <param name="valueName">该选项属性的名称。</param>
        <summary>获取指定的 Windows 窗体设计器选项的值。</summary>
        <returns>指定选项的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `pageName`参数应包含"WindowsFormsDesigner\\*CategoryName*"，其中*CategoryName*是没有任何空白字符的选项类别名称。 通常"常规"类别名称。 因此，你可以访问与英语页名称"WindowsFormsDesigner\General"的"常规"设计器的选项类别。  
  
> [!NOTE]
>  始终应在英语中的页和值名称。 因此下, 表可用于帮助你访问所需的选项。  
  
 下表指示的英语值名称、 其数据格式，以及每个说明：  
  
|值名称|值格式|描述|  
|----------------|------------------|-----------------|  
|GridSize|<xref:System.Drawing.Size>|每个网格方形的大小。|  
|GridSize.Width|<xref:System.Int32>|每个网格方形的宽度。 此嵌套的属性是只读的访问通过设计器选项服务时。|  
|GridSize.Height|<xref:System.Int32>|每个网格方形的高度。 此嵌套的属性是只读的访问通过设计器选项服务时。|  
|ShowGrid|<xref:System.Boolean>|`true` 如果应显示网格;`false`如果应不显示网格。|  
|网格线对齐|<xref:System.Boolean>|`true` 如果组件的位置应对齐到网格;`false`如果位置应不一定对齐。|  
|LayoutMode|`Microsoft.VisualStudio.Windows.Forms.LayoutMode`|`SnapLines` 若要使用对齐线，或`SnapToGrid`对齐到网格中，控件|  
|ObjectBoundSmartTagAutoShow|<xref:System.Boolean>|如果允许组件的智能标记面板在创建时自动打开，则为 `true`；否则为 `false`。|  
|AutoToolboxPopulate|<xref:System.Boolean>|`true` 将解决方案的自定义控件和组件自动添加**工具箱**; 否则为`false`。|  
|UseOptimizedCodeGeneration|<xref:System.Boolean>|如果启用组件缓存，则为 `true`；否则为 `false`。|  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue%2A>的值的方法来查询`GridSize`选项。  
  
 [!code-cpp[IDesignerOptionServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CPP/idesigneroptionservicecontrol.cpp#2)]
 [!code-csharp[IDesignerOptionServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CS/idesigneroptionservicecontrol.cs#2)]
 [!code-vb[IDesignerOptionServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerOptionServiceExample/VB/idesigneroptionservicecontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(System.String,System.String,System.Object)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
      </Docs>
    </Member>
    <Member MemberName="SetOptionValue">
      <MemberSignature Language="C#" Value="public void SetOptionValue (string pageName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOptionValue(string pageName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOptionValue (pageName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOptionValue(System::String ^ pageName, System::String ^ valueName, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pageName">定义该选项的页的名称。</param>
        <param name="valueName">该选项属性的名称。</param>
        <param name="value">新值。</param>
        <summary>设置指定的 Windows 窗体设计器选项的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `pageName`参数应包含"WindowsFormsDesigner\C*ategoryName*"，其中*CategoryName*是没有任何空白字符的选项类别名称。 通常"常规"类别名称。 因此，你可以访问与英语页名称"WindowsFormsDesigner\General"的"常规"设计器的选项类别。  
  
> [!NOTE]
>  始终应在英语中的页和值名称。 因此下, 表可用于帮助你访问所需的选项。  
  
 下表指示的英语值名称、 其数据格式，以及每个说明：  
  
|值名称|值格式|描述|  
|----------------|------------------|-----------------|  
|GridSize|<xref:System.Drawing.Size>|每个网格方形的大小。|  
|GridSize.Width|<xref:System.Int32>|每个网格方形的宽度。 此嵌套的属性是只读的访问通过设计器选项服务时。|  
|GridSize.Height|<xref:System.Int32>|每个网格方形的高度。 此嵌套的属性是只读的访问通过设计器选项服务时。|  
|ShowGrid|<xref:System.Boolean>|`true` 如果应显示网格;`false`如果应不显示网格。|  
|网格线对齐|<xref:System.Boolean>|`true` 如果组件的位置应对齐到网格;`false`如果位置应不一定对齐。|  
|LayoutMode|`Microsoft.VisualStudio.Windows.Forms.LayoutMode`|`SnapLines` 若要使用对齐线，或`SnapToGrid`对齐到网格中，控件|  
|ObjectBoundSmartTagAutoShow|<xref:System.Boolean>|如果允许组件的智能标记面板在创建时自动打开，则为 `true`；否则为 `false`。|  
|AutoToolboxPopulate|<xref:System.Boolean>|`true` 将解决方案的自定义控件和组件自动添加**工具箱**; 否则为`false`。|  
|UseOptimizedCodeGeneration|<xref:System.Boolean>|如果启用组件缓存，则为 `true`；否则为 `false`。|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(System.String,System.String)" />
        <altmember cref="T:System.ComponentModel.Design.DesignerOptionService" />
      </Docs>
    </Member>
  </Members>
</Type>