<Type Name="ServiceCreatorCallback" FullName="System.ComponentModel.Design.ServiceCreatorCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c90603e409cdc79273157c81b7fe03ee8ca2561b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36705998" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate object ServiceCreatorCallback(IServiceContainer container, Type serviceType);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ServiceCreatorCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ServiceCreatorCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ServiceCreatorCallback(container As IServiceContainer, serviceType As Type) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ ServiceCreatorCallback(IServiceContainer ^ container, Type ^ serviceType);" />
  <TypeSignature Language="F#" Value="type ServiceCreatorCallback = delegate of IServiceContainer * Type -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="container" Type="System.ComponentModel.Design.IServiceContainer" />
    <Parameter Name="serviceType" Type="System.Type" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="container">请求创建服务的服务容器。</param>
    <param name="serviceType">要创建的服务的类型。</param>
    <summary>提供一种回调机制，它可以即需创建服务的实例。</summary>
    <returns>由 <paramref name="serviceType" /> 指定的服务；如果未能创建服务，则为 <see langword="null" />。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.ServiceCreatorCallback> 提供了一种机制来发布你可以请求在需要时创建的服务，而不是设计器加载时立即正在创建的服务。 如果服务不是必需的不能使用，你可以使用的回调函数。 使用发布的服务<xref:System.ComponentModel.Design.ServiceCreatorCallback>不使用尽可能多的其他资源，如果它不是请求和创建。 若要使用的回调函数来发布你的服务，将传递<xref:System.ComponentModel.Design.ServiceCreatorCallback>到<xref:System.ComponentModel.Design.IServiceContainer.AddService%2A>方法<xref:System.ComponentModel.Design.IServiceContainer>。  
  
   
  
## Examples  
 下面的代码示例演示如何发布服务使用的回调函数。  
  
 [!code-cpp[Classic ServiceCreatorCallback Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ServiceCreatorCallback Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceCreatorCallback Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ServiceCreatorCallback Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceCreatorCallback Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ServiceCreatorCallback Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)" />
    <altmember cref="T:System.ComponentModel.Design.IServiceContainer" />
  </Docs>
</Type>