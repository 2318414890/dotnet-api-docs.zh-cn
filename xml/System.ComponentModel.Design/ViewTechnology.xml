<Type Name="ViewTechnology" FullName="System.ComponentModel.Design.ViewTechnology">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fff5d748147fd78cbbb23d6ed86f58de2519eafc" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37694875" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ViewTechnology" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ViewTechnology extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.ViewTechnology" />
  <TypeSignature Language="VB.NET" Value="Public Enum ViewTechnology" />
  <TypeSignature Language="C++ CLI" Value="public enum class ViewTechnology" />
  <TypeSignature Language="F#" Value="type ViewTechnology = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8a67f-101">定义设计器宿主所支持的技术集的标识符。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a67f-101">Defines identifiers for a set of technologies that designer hosts support.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a67f-102">将替换视图适配器模型，并添加了功能<xref:System.ComponentModel.Design.ViewTechnology>功能; 但是，<xref:System.ComponentModel.Design.ViewTechnology>功能保留向后兼容性和将来使用，如果您选择。</span><span class="sxs-lookup"><span data-stu-id="8a67f-102">The view adapter model replaces and adds functionality to the <xref:System.ComponentModel.Design.ViewTechnology> feature; however, the <xref:System.ComponentModel.Design.ViewTechnology> feature is retained for both backward compatibility and future use, if you choose.</span></span> <span data-ttu-id="8a67f-103">有关详细信息，请参阅".NET 形状库： 示例设计器"Windows 窗体知识库中在http://windowsforms.net/articles/shapedesigner.aspx。</span><span class="sxs-lookup"><span data-stu-id="8a67f-103">For more information, see ".NET Shape Library: A Sample Designer" in the Windows Forms Knowledge Base at http://windowsforms.net/articles/shapedesigner.aspx.</span></span>  
  
 <span data-ttu-id="8a67f-104"><xref:System.ComponentModel.Design.ViewTechnology> 定义指示要用于控制设计器承载的文档的显示模式标识符。</span><span class="sxs-lookup"><span data-stu-id="8a67f-104"><xref:System.ComponentModel.Design.ViewTechnology> defines identifiers that can indicate the mode to use for controlling the display of a designer-hosted document.</span></span>  
  
 <span data-ttu-id="8a67f-105">仅应在设计器的托管环境中使用的默认值。</span><span class="sxs-lookup"><span data-stu-id="8a67f-105">You should only use the Default value in your designer hosting environment.</span></span> <span data-ttu-id="8a67f-106">在旧版[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]，则<xref:System.ComponentModel.Design.ViewTechnology.Default>枚举指定的 UI 模型根设计器支持的类型。</span><span class="sxs-lookup"><span data-stu-id="8a67f-106">In previous versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the <xref:System.ComponentModel.Design.ViewTechnology.Default> enumeration specified the type of UI model supported by a root designer.</span></span> <span data-ttu-id="8a67f-107">由于此模型不是可扩展的则应改用*视图适配器*模型。</span><span class="sxs-lookup"><span data-stu-id="8a67f-107">Because this model is not extensible, you should instead use a *view adapter* model.</span></span> <span data-ttu-id="8a67f-108">视图适配器是适应到另一种类型的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="8a67f-108">A view adapter is a type that adapts an object of one type to another.</span></span>  
  
 <span data-ttu-id="8a67f-109">例如，HTML 设计器可能会返回`DemoDOM`树作为其视图。</span><span class="sxs-lookup"><span data-stu-id="8a67f-109">For example, an HTML designer might return a `DemoDOM` tree as its view.</span></span> <span data-ttu-id="8a67f-110">HTML 设计器返回默认视图的技术。</span><span class="sxs-lookup"><span data-stu-id="8a67f-110">The HTML designer returns a view technology of Default.</span></span> <span data-ttu-id="8a67f-111">Windows 窗体宿主环境将具有一个或多个可用的视图适配器类。</span><span class="sxs-lookup"><span data-stu-id="8a67f-111">A Windows Forms hosting environment would have one or more view adapter classes available.</span></span> <span data-ttu-id="8a67f-112">如果一个这样的类可以转换`DemoDOM`到 Windows 窗体控件，宿主应用程序可以支持此类型的设计器。</span><span class="sxs-lookup"><span data-stu-id="8a67f-112">If one such class could convert the `DemoDOM` into a Windows Forms control, the hosting application can support this type of designer.</span></span> <span data-ttu-id="8a67f-113">如果没有适配器可以处理从设计器的返回的数据类型<xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>方法，在设计器的负载将失败，并且用户将看到错误。</span><span class="sxs-lookup"><span data-stu-id="8a67f-113">If no adapter can handle the data type returned from the designer’s <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> method, the load of the designer will fail, and the user will be presented with an error.</span></span>  
  
 <span data-ttu-id="8a67f-114">Visual Studio 具有可扩展方案用于提供视图适配器，因此它可以适应任何 UI 技术。</span><span class="sxs-lookup"><span data-stu-id="8a67f-114">Visual Studio has an extensible scheme for providing view adapters, so it can adapt to any UI technology.</span></span> <span data-ttu-id="8a67f-115">第三方技术提供商还可以提供适当的视图适配器，马上就可以使用其对象模型。</span><span class="sxs-lookup"><span data-stu-id="8a67f-115">Third-party technology providers can also offer an appropriate view adapter, and their object models are immediately consumable.</span></span>  
  
 <span data-ttu-id="8a67f-116">使用查看适配器的示例，请参阅".NET 形状库： 示例设计器"Windows 窗体知识库中在http://windowsforms.net/articles/shapedesigner.aspx。</span><span class="sxs-lookup"><span data-stu-id="8a67f-116">For an example that uses view adapters, see ".NET Shape Library: A Sample Designer" in the Windows Forms Knowledge Base at http://windowsforms.net/articles/shapedesigner.aspx.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a67f-117">下面的代码示例演示如何使用<xref:System.ComponentModel.Design.ViewTechnology.Default>在设计器中的类。</span><span class="sxs-lookup"><span data-stu-id="8a67f-117">The following code example demonstrates how to use the <xref:System.ComponentModel.Design.ViewTechnology.Default> class in a designer.</span></span> <span data-ttu-id="8a67f-118">此代码示例是为提供一个更大示例的一部分<xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>接口。</span><span class="sxs-lookup"><span data-stu-id="8a67f-118">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> interface.</span></span>  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Default = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 2" Usage="System.ComponentModel.Design.ViewTechnology.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a67f-119">指定默认的视图技术支持。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a67f-119">Specifies the default view technology support.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a67f-120">根设计器可能会返回任何类型的对象，但该对象必须是符合的适配器的主机的技术。</span><span class="sxs-lookup"><span data-stu-id="8a67f-120">The root designer may return any type of object, but the object must be compatible with an adapter for the technology of the host.</span></span> <span data-ttu-id="8a67f-121">宿主环境，如 Visual Studio 提供一种新的视图技术适配器插入方法。</span><span class="sxs-lookup"><span data-stu-id="8a67f-121">Hosting environments such as Visual Studio provide a way to plug in new view technology adapters.</span></span> <span data-ttu-id="8a67f-122">Windows 窗体设计器的默认视图对象是<xref:System.Windows.Forms.Control?displayProperty=nameWithType>实例。</span><span class="sxs-lookup"><span data-stu-id="8a67f-122">The default view object for the Windows Forms designer is a <xref:System.Windows.Forms.Control?displayProperty=nameWithType> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a67f-123">下面的代码示例演示如何使用<xref:System.ComponentModel.Design.ViewTechnology>在设计器中的类。</span><span class="sxs-lookup"><span data-stu-id="8a67f-123">The following code example demonstrates how to use the <xref:System.ComponentModel.Design.ViewTechnology> class in a designer.</span></span> <span data-ttu-id="8a67f-124">此代码示例是为提供一个更大示例的一部分<xref:System.ComponentModel.Design.IRootDesigner>接口。</span><span class="sxs-lookup"><span data-stu-id="8a67f-124">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.</span></span>  
  
 [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]
 [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]
 [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Passthrough">
      <MemberSignature Language="C#" Value="Passthrough" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology Passthrough = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberSignature Language="VB.NET" Value="Passthrough" />
      <MemberSignature Language="C++ CLI" Value="Passthrough" />
      <MemberSignature Language="F#" Value="Passthrough = 0" Usage="System.ComponentModel.Design.ViewTechnology.Passthrough" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a67f-125">表示将视图对象直接传递给开发环境的模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a67f-125">Represents a mode in which the view object is passed directly to the development environment.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a67f-126">视图对象必须实现任何开发环境需要的接口。</span><span class="sxs-lookup"><span data-stu-id="8a67f-126">The view object must implement any interfaces the development environment requires.</span></span> <span data-ttu-id="8a67f-127">在 Visual Studio 开发环境支持 ActiveX 控件、 活动文档或实现可通过 Visual Studio VSI （Visual Studio 集成） 计划 IVsWindowPane 接口的对象的视图对象。</span><span class="sxs-lookup"><span data-stu-id="8a67f-127">The Visual Studio development environment supports view objects that are either an ActiveX control, active document, or an object that implements the IVsWindowPane interface that is available through Visual Studio VSI (Visual Studio Integration) program.</span></span> <span data-ttu-id="8a67f-128">在 Visual Studio 开发环境提供对此视图技术的支持。</span><span class="sxs-lookup"><span data-stu-id="8a67f-128">The Visual Studio development environment provides support for this view technology.</span></span> <span data-ttu-id="8a67f-129">不一定能够在所有开发环境中使用此视图技术的支持。</span><span class="sxs-lookup"><span data-stu-id="8a67f-129">Support for this view technology is not necessarily available in all development environments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsForms">
      <MemberSignature Language="C#" Value="WindowsForms" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ComponentModel.Design.ViewTechnology WindowsForms = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberSignature Language="VB.NET" Value="WindowsForms" />
      <MemberSignature Language="C++ CLI" Value="WindowsForms" />
      <MemberSignature Language="F#" Value="WindowsForms = 1" Usage="System.ComponentModel.Design.ViewTechnology.WindowsForms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ViewTechnology</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a67f-130">表示由 Windows 窗体控件对象为根设计器提供显示的模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a67f-130">Represents a mode in which a Windows Forms control object provides the display for the root designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a67f-131">设计器宿主的 Windows 窗体控件填充开发环境文档窗口。</span><span class="sxs-lookup"><span data-stu-id="8a67f-131">The designer host fills the development environment document window with the Windows Forms control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a67f-132">下面的代码示例演示如何使用<xref:System.ComponentModel.Design.ViewTechnology>在设计器中的类。</span><span class="sxs-lookup"><span data-stu-id="8a67f-132">The following code example demonstrates how to use the <xref:System.ComponentModel.Design.ViewTechnology> class in a designer.</span></span> <span data-ttu-id="8a67f-133">此代码示例是为提供一个更大示例的一部分<xref:System.ComponentModel.Design.LocalizationExtenderProvider>类。</span><span class="sxs-lookup"><span data-stu-id="8a67f-133">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.LocalizationExtenderProvider> class.</span></span>  
  
 [!code-cpp[LocalizationExtenderProviderExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#1)]
 [!code-csharp[LocalizationExtenderProviderExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#1)]
 [!code-vb[LocalizationExtenderProviderExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>