<Type Name="UndoEngine+UndoUnit" FullName="System.ComponentModel.Design.UndoEngine+UndoUnit">
  <TypeSignature Language="C#" Value="protected class UndoEngine.UndoUnit" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit UndoEngine/UndoUnit extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
  <TypeSignature Language="VB.NET" Value="Protected Class UndoEngine.UndoUnit" />
  <TypeSignature Language="C++ CLI" Value="protected: ref class UndoEngine::UndoUnit" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="67e6a-101">封装用户可以撤消的工作单元。</span><span class="sxs-lookup"><span data-stu-id="67e6a-101">Encapsulates a unit of work that a user can undo.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67e6a-102"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit>类是中的嵌套的类<xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A>封装用户能否撤消的操作。</span><span class="sxs-lookup"><span data-stu-id="67e6a-102">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> class is a nested class within <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> that encapsulates an action that a user can undo.</span></span> <span data-ttu-id="67e6a-103">默认值<xref:System.ComponentModel.Design.UndoEngine.UndoUnit>实现监视更改通知，并建立的每个更改的事件的列表。</span><span class="sxs-lookup"><span data-stu-id="67e6a-103">The default <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementation monitors change notifications and builds up a list of events for each change.</span></span> <span data-ttu-id="67e6a-104">它将使用这些事件保存<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>。</span><span class="sxs-lookup"><span data-stu-id="67e6a-104">It saves these events using <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>.</span></span> <span data-ttu-id="67e6a-105"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit>接收事件通知的更改直接从<xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A>通过几个`public virtual`方法。</span><span class="sxs-lookup"><span data-stu-id="67e6a-105">An <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> receives event notifications for changes directly from <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine%2A> through several `public virtual` methods.</span></span> <span data-ttu-id="67e6a-106">你可以从派生<xref:System.ComponentModel.Design.UndoEngine.UndoUnit>和执行任何其他逻辑。</span><span class="sxs-lookup"><span data-stu-id="67e6a-106">You can derive from <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> and perform any additional logic.</span></span> <span data-ttu-id="67e6a-107">如果需要，可以完全绕过默认<xref:System.ComponentModel.Design.UndoEngine.UndoUnit>实现。</span><span class="sxs-lookup"><span data-stu-id="67e6a-107">If desired, you can completely bypass the default <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UndoUnit (System.ComponentModel.Design.UndoEngine engine, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.UndoEngine engine, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (engine As UndoEngine, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UndoUnit(System::ComponentModel::Design::UndoEngine ^ engine, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="engine" Type="System.ComponentModel.Design.UndoEngine" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="engine"><span data-ttu-id="67e6a-108">拥有此撤消单元的撤消引擎。</span><span class="sxs-lookup"><span data-stu-id="67e6a-108">The undo engine that owns this undo unit.</span></span></param>
        <param name="name"><span data-ttu-id="67e6a-109">此撤消单元的名称。</span><span class="sxs-lookup"><span data-stu-id="67e6a-109">The name for this undo unit.</span></span></param>
        <summary><span data-ttu-id="67e6a-110">初始化 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="67e6a-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="67e6a-111"><paramref name="engine" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="67e6a-111"><paramref name="engine" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67e6a-112">接收来自撤消引擎的调用以关闭此单元。</span><span class="sxs-lookup"><span data-stu-id="67e6a-112">Receives a call from the undo engine to close this unit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67e6a-113">当关闭单元时，它的各种事件方法可以起没有更多的事件。</span><span class="sxs-lookup"><span data-stu-id="67e6a-113">When a unit is closed, no more events can come into its various event methods.</span></span> <span data-ttu-id="67e6a-114"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit>本身可能此处采取措施以确保关闭当前打开的任何事件。</span><span class="sxs-lookup"><span data-stu-id="67e6a-114">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> itself may take action here to ensure that any events that are currently open are closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComponentAdded">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdded (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdded(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentAdded (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentAdded(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="67e6a-115">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="67e6a-115">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="67e6a-116">接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="67e6a-116">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentAdding">
      <MemberSignature Language="C#" Value="public virtual void ComponentAdding (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentAdding(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentAdding (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentAdding(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="67e6a-117">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="67e6a-117">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="67e6a-118">接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="67e6a-118">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanged (System.ComponentModel.Design.ComponentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanged(class System.ComponentModel.Design.ComponentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentChanged (e As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentChanged(System::ComponentModel::Design::ComponentChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="67e6a-119">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="67e6a-119">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="67e6a-120">接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="67e6a-120">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void ComponentChanging (System.ComponentModel.Design.ComponentChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentChanging(class System.ComponentModel.Design.ComponentChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentChanging (e As ComponentChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentChanging(System::ComponentModel::Design::ComponentChangingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="67e6a-121">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="67e6a-121">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="67e6a-122">接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="67e6a-122">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoved">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoved (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoved(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRemoved (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRemoved(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="67e6a-123">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="67e6a-123">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="67e6a-124">接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="67e6a-124">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRemoving">
      <MemberSignature Language="C#" Value="public virtual void ComponentRemoving (System.ComponentModel.Design.ComponentEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRemoving(class System.ComponentModel.Design.ComponentEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRemoving (e As ComponentEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRemoving(System::ComponentModel::Design::ComponentEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="67e6a-125">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="67e6a-125">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="67e6a-126">接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="67e6a-126">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="ComponentRename">
      <MemberSignature Language="C#" Value="public virtual void ComponentRename (System.ComponentModel.Design.ComponentRenameEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComponentRename(class System.ComponentModel.Design.ComponentRenameEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComponentRename (e As ComponentRenameEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComponentRename(System::ComponentModel::Design::ComponentRenameEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentRenameEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="67e6a-127">包含事件数据的 <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="67e6a-127">A <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="67e6a-128">接收来自 <see cref="T:System.ComponentModel.Design.UndoEngine" /> 的调用以响应 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="67e6a-128">Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="67e6a-129">要检索的服务类型。</span><span class="sxs-lookup"><span data-stu-id="67e6a-129">The type of service to retrieve.</span></span></param>
        <summary><span data-ttu-id="67e6a-130">获取所请求服务的实例。</span><span class="sxs-lookup"><span data-stu-id="67e6a-130">Gets an instance of the requested service.</span></span></summary>
        <returns><span data-ttu-id="67e6a-131">给定服务的实例；或者如果无法解析服务，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="67e6a-131">An instance of the given service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67e6a-132">获取一个值，该值指示 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 是否不包含事件。</span><span class="sxs-lookup"><span data-stu-id="67e6a-132">Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events.</span></span></summary>
        <value>
          <span data-ttu-id="67e6a-133">如果 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 不包含事件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="67e6a-133"><see langword="true" /> if the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67e6a-134">撤消引擎可能会丢弃空单元。</span><span class="sxs-lookup"><span data-stu-id="67e6a-134">The undo engine may discard empty units.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67e6a-135">获取 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="67e6a-135">Gets the name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span></span></summary>
        <value><span data-ttu-id="67e6a-136"><see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="67e6a-136">The name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67e6a-137">返回 <see cref="T:System.String" />，它表示单元的当前名称。</span><span class="sxs-lookup"><span data-stu-id="67e6a-137">Returns a <see cref="T:System.String" /> that represents the current name of the unit.</span></span></summary>
        <returns><span data-ttu-id="67e6a-138"><see cref="T:System.String" />，表示单元的当前名称。</span><span class="sxs-lookup"><span data-stu-id="67e6a-138">A <see cref="T:System.String" /> that represents the current name of the unit.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67e6a-139">执行撤消或重复操作。</span><span class="sxs-lookup"><span data-stu-id="67e6a-139">Performs an undo or redo action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67e6a-140">撤消操作本身切换撤消和重做状态，因此调用<xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A>两次将对象设置回其原始状态。</span><span class="sxs-lookup"><span data-stu-id="67e6a-140">Undo actions toggle themselves between undo and redo states, so calling <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> twice sets the object back to its original state.</span></span>  
  
 <span data-ttu-id="67e6a-141"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit>类最初假定，可撤消工作已完成，所以第一次调用到<xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A>撤消工作。</span><span class="sxs-lookup"><span data-stu-id="67e6a-141">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit> class initially assumes that the undoable work has already been done, so the first call to <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> undoes the work.</span></span> <span data-ttu-id="67e6a-142">下一个调用撤消上一个撤消操作中，执行重复操作。</span><span class="sxs-lookup"><span data-stu-id="67e6a-142">The next call undoes the previous undo operation, performing a redo.</span></span>  
  
 <span data-ttu-id="67e6a-143"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A>方法调用<xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>方法来执行撤消操作。</span><span class="sxs-lookup"><span data-stu-id="67e6a-143">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method calls the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> method to perform an undo operation.</span></span> <span data-ttu-id="67e6a-144"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A>方法本身工作以维护一致的状态内<xref:System.ComponentModel.Design.UndoEngine.UndoUnit>，甚至发生而引发的异常时<xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="67e6a-144">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method itself works to maintain consistent state within the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, even in the event of an exception thrown by <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="67e6a-145">不要调用<see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />方法直接; 重写此方法如果你想，但始终调用<see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />方法以执行撤消工作。</span><span class="sxs-lookup"><span data-stu-id="67e6a-145">Do not call the <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> method directly; override it if you want, but always call the <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method to perform undo work.</span></span> <span data-ttu-id="67e6a-146"><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />方法通知撤消引擎挂起撤消数据收集，直到当前的撤消操作完成。</span><span class="sxs-lookup"><span data-stu-id="67e6a-146">The <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method notifies the undo engine to suspend undo data gathering until the current undo operation is completed.</span></span> <span data-ttu-id="67e6a-147">这可以防止在对此单元执行的操作的响应中创建新的撤消单元。</span><span class="sxs-lookup"><span data-stu-id="67e6a-147">This prevents new undo units from being created in response to this unit doing work.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="UndoCore">
      <MemberSignature Language="C#" Value="protected virtual void UndoCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UndoCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub UndoCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void UndoCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="67e6a-148">由 <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> 调用以执行撤消操作。</span><span class="sxs-lookup"><span data-stu-id="67e6a-148">Called by <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> to perform an undo action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67e6a-149"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A>方法调用<xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>方法来执行撤消操作。</span><span class="sxs-lookup"><span data-stu-id="67e6a-149">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method calls the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A> method to perform an undo operation.</span></span> <span data-ttu-id="67e6a-150"><xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A>方法本身工作以维护一致的状态内<xref:System.ComponentModel.Design.UndoEngine.UndoUnit>，甚至发生而引发的异常时<xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="67e6a-150">The <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo%2A> method itself works to maintain consistent state within the <xref:System.ComponentModel.Design.UndoEngine.UndoUnit>, even in the event of an exception thrown by <xref:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="67e6a-151">不要调用<see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />方法直接; 重写此方法如果你想，但始终调用<see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />方法以执行撤消工作。</span><span class="sxs-lookup"><span data-stu-id="67e6a-151">Do not call the <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" /> method directly; override it if you want, but always call the <see langword="public" /><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method to perform undo work.</span></span> <span data-ttu-id="67e6a-152"><see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />方法通知撤消引擎挂起撤消操作数据收集，直到当前的撤消操作完成。</span><span class="sxs-lookup"><span data-stu-id="67e6a-152">The <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> method notifies the undo engine to suspend undo-operation data gathering until the current undo operation is completed.</span></span> <span data-ttu-id="67e6a-153">这可以防止在对此单元执行的操作的响应中创建新的撤消单元。</span><span class="sxs-lookup"><span data-stu-id="67e6a-153">This prevents new undo units from being created in response to this unit doing work.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.UndoEngine" />
        <altmember cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
        <altmember cref="T:System.ComponentModel.Design.IComponentChangeService" />
      </Docs>
    </Member>
    <Member MemberName="UndoEngine">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.UndoEngine UndoEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.UndoEngine UndoEngine" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property UndoEngine As UndoEngine" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::UndoEngine ^ UndoEngine { System::ComponentModel::Design::UndoEngine ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.UndoEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="67e6a-154">获取父 <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />。</span><span class="sxs-lookup"><span data-stu-id="67e6a-154">Gets the parent <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />.</span></span></summary>
        <value><span data-ttu-id="67e6a-155">附加此 <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> 的 <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />。</span><span class="sxs-lookup"><span data-stu-id="67e6a-155">The <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> to which this <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> is attached.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>