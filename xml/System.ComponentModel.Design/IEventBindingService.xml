<Type Name="IEventBindingService" FullName="System.ComponentModel.Design.IEventBindingService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4fbe8d7f5687f6997f29eeb575b245c28dcab515" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37695668" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEventBindingService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEventBindingService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IEventBindingService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEventBindingService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEventBindingService" />
  <TypeSignature Language="F#" Value="type IEventBindingService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="499c5-101">为注册组件事件的事件处理程序提供服务。</span>
      <span class="sxs-lookup">
        <span data-stu-id="499c5-101">Provides a service for registering event handlers for component events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="499c5-102">事件绑定服务提供了一种链接与设计器代码中的组件事件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="499c5-102">The event binding service provides a way to link an event handler with a component event from designer code.</span></span>  
  
 <span data-ttu-id="499c5-103">若要链接使用组件事件的事件处理程序<xref:System.ComponentModel.Design.IEventBindingService>，你必须首先获取<xref:System.ComponentModel.EventDescriptor>你想要链接的组件的事件。</span><span class="sxs-lookup"><span data-stu-id="499c5-103">To link an event handler with a component event using the <xref:System.ComponentModel.Design.IEventBindingService>, you must first obtain an <xref:System.ComponentModel.EventDescriptor> for the event of the component you intend to link.</span></span> <span data-ttu-id="499c5-104"><xref:System.ComponentModel.Design.IEventBindingService>提供一些方法，可以将转换<xref:System.ComponentModel.EventDescriptor>到<xref:System.ComponentModel.PropertyDescriptor>可以用于配置事件的事件处理程序方法名称。</span><span class="sxs-lookup"><span data-stu-id="499c5-104">The <xref:System.ComponentModel.Design.IEventBindingService> provides methods that can convert an <xref:System.ComponentModel.EventDescriptor> to a <xref:System.ComponentModel.PropertyDescriptor> which you can use to configure the event with an event handler method name.</span></span>  
  
 <span data-ttu-id="499c5-105"><xref:System.ComponentModel.TypeDescriptor>对象提供<xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>方法可用于获取<xref:System.ComponentModel.EventDescriptorCollection>包含<xref:System.ComponentModel.EventDescriptor>组件的每个事件的对象。</span><span class="sxs-lookup"><span data-stu-id="499c5-105">The <xref:System.ComponentModel.TypeDescriptor> object provides a <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that you can use to obtain an <xref:System.ComponentModel.EventDescriptorCollection> containing <xref:System.ComponentModel.EventDescriptor> objects for each event of a component.</span></span> <span data-ttu-id="499c5-106"><xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A>并<xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A>方法的<xref:System.ComponentModel.Design.IEventBindingService>返回<xref:System.ComponentModel.PropertyDescriptor>每个<xref:System.ComponentModel.EventDescriptor>传递给这两种方法。</span><span class="sxs-lookup"><span data-stu-id="499c5-106">The <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> and <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> methods of the <xref:System.ComponentModel.Design.IEventBindingService> return a <xref:System.ComponentModel.PropertyDescriptor> for each <xref:System.ComponentModel.EventDescriptor> passed to either method.</span></span> <span data-ttu-id="499c5-107">每个<xref:System.ComponentModel.PropertyDescriptor>从返回<xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A>或<xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A>属性类型为字符串。</span><span class="sxs-lookup"><span data-stu-id="499c5-107">Each <xref:System.ComponentModel.PropertyDescriptor> returned from <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> or <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> has a property type of string.</span></span> <span data-ttu-id="499c5-108">可以将此字符串设置为一个值，指示要链接具有使用的事件的事件处理程序方法的名称<xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>方法的<xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="499c5-108">You can set this string to a value that indicates the name of the event-handler method to link the event with using the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="499c5-109">下面的示例演示如何使用设计器<xref:System.ComponentModel.Design.IEventBindingService>链接在调用组件的设计器添加的自定义的快捷菜单命令时的设计时组件的事件与事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="499c5-109">The following example demonstrates a designer that uses the <xref:System.ComponentModel.Design.IEventBindingService> to link a component's event with an event handler at design time when the custom shortcut menu command that the designer adds for the component is invoked.</span></span> <span data-ttu-id="499c5-110">若要使用示例、 将其编译为类库、 添加从一个 Windows 窗体项目的引用，将该组件在类库中添加到工具箱中，右键单击工具箱并选择自定义工具箱...，选择类库然后单击确定，并添加到窗体将 EventControl 的实例。</span><span class="sxs-lookup"><span data-stu-id="499c5-110">To use the example, compile it to a class library, add a reference from a Windows Forms project, add the component in the class library to the Toolbox by right-clicking the Toolbox and selecting Customize Toolbox..., then choosing the class library and clicking OK, and add an instance of the EventControl to a Form.</span></span> <span data-ttu-id="499c5-111">右键单击将 EventControl，然后单击 Connect testEvent 快捷方式菜单命令。</span><span class="sxs-lookup"><span data-stu-id="499c5-111">Then right-click the EventControl and click the Connect testEvent shortcut menu command.</span></span> <span data-ttu-id="499c5-112">创建一个空事件处理程序方法，并将 EventControl 的 testEvent 方法将初始化为此事件处理程序在初始化代码中，窗体。</span><span class="sxs-lookup"><span data-stu-id="499c5-112">An empty event handler method is created and the EventControl's testEvent method is initialized to this event handler in the initialization code for the Form.</span></span>  
  
 [!code-cpp[IEventBindingServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IEventBindingServiceExample/CPP/source.cpp#1)]
 [!code-csharp[IEventBindingServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IEventBindingServiceExample/CS/source.cs#1)]
 [!code-vb[IEventBindingServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IEventBindingServiceExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
  </Docs>
  <Members>
    <Member MemberName="CreateUniqueMethodName">
      <MemberSignature Language="C#" Value="public string CreateUniqueMethodName (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateUniqueMethodName(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateUniqueMethodName (component As IComponent, e As EventDescriptor) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateUniqueMethodName(System::ComponentModel::IComponent ^ component, System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member CreateUniqueMethodName : System.ComponentModel.IComponent * System.ComponentModel.EventDescriptor -&gt; string" Usage="iEventBindingService.CreateUniqueMethodName (component, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="499c5-113">事件连接到的组件实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-113">The component instance the event is connected to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="499c5-114">要为其创建名称的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-114">The event to create a name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="499c5-115">为指定组件和事件的事件处理程序方法创建唯一的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-115">Creates a unique name for an event-handler method for the specified component and event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="499c5-116">为此事件的事件处理程序方法建议的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-116">The recommended name for the event-handler method for this event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="499c5-117">此方法返回与用户的源代码中的任何其他方法名称唯一的名称。</span><span class="sxs-lookup"><span data-stu-id="499c5-117">This method returns a name that is unique from any other method name in the user's source code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompatibleMethods">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetCompatibleMethods (System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetCompatibleMethods(class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompatibleMethods (e As EventDescriptor) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetCompatibleMethods(System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GetCompatibleMethods : System.ComponentModel.EventDescriptor -&gt; System.Collections.ICollection" Usage="iEventBindingService.GetCompatibleMethods e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="499c5-118">要为其获取兼容事件处理程序方法的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-118">The event to get the compatible event-handler methods for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="499c5-119">获取其方法签名与指定事件兼容的事件处理程序方法的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-119">Gets a collection of event-handler methods that have a method signature compatible with the specified event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="499c5-120">字符串的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-120">A collection of strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="499c5-121">集合中的每个字符串是方法的具有与指定事件兼容的方法签名的名称。</span><span class="sxs-lookup"><span data-stu-id="499c5-121">Each string in the collection is the name of a method that has a method signature compatible with the specified event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.EventDescriptor GetEvent (System.ComponentModel.PropertyDescriptor property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptor GetEvent(class System.ComponentModel.PropertyDescriptor property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvent (property As PropertyDescriptor) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::EventDescriptor ^ GetEvent(System::ComponentModel::PropertyDescriptor ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetEvent : System.ComponentModel.PropertyDescriptor -&gt; System.ComponentModel.EventDescriptor" Usage="iEventBindingService.GetEvent property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="499c5-122">表示事件的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-122">The property that represents an event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="499c5-123">为指定属性说明符（如果它表示事件）所表示的事件获取 <see cref="T:System.ComponentModel.EventDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-123">Gets an <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the specified property descriptor represents, if it represents an event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="499c5-124">属性所表示的事件的 <see cref="T:System.ComponentModel.EventDescriptor" />，或者在属性不表示事件的情况下为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-124">An <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the property represents, or <see langword="null" /> if the property does not represent an event.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetEventProperties (System.ComponentModel.EventDescriptorCollection events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetEventProperties(class System.ComponentModel.EventDescriptorCollection events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventProperties (events As EventDescriptorCollection) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetEventProperties(System::ComponentModel::EventDescriptorCollection ^ events);" />
      <MemberSignature Language="F#" Value="abstract member GetEventProperties : System.ComponentModel.EventDescriptorCollection -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iEventBindingService.GetEventProperties events" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.ComponentModel.EventDescriptorCollection" />
      </Parameters>
      <Docs>
        <param name="events">
          <span data-ttu-id="499c5-125">要转换为属性的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-125">The events to convert to properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="499c5-126">将一组事件说明符转换为一组属性说明符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-126">Converts a set of event descriptors to a set of property descriptors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="499c5-127">对事件集进行描述的 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-127">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that describe the event set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="499c5-128">每个返回<xref:System.ComponentModel.PropertyDescriptor>具有<xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A>的字符串。</span><span class="sxs-lookup"><span data-stu-id="499c5-128">Each returned <xref:System.ComponentModel.PropertyDescriptor> has a <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventProperty">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor GetEventProperty (System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor GetEventProperty(class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventProperty (e As EventDescriptor) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptor ^ GetEventProperty(System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member GetEventProperty : System.ComponentModel.EventDescriptor -&gt; System.ComponentModel.PropertyDescriptor" Usage="iEventBindingService.GetEventProperty e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="499c5-129">要转换的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-129">The event to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="499c5-130">将单个事件说明符转换为属性说明符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-130">Converts a single event descriptor to a property descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="499c5-131">对事件进行描述的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-131">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="499c5-132">返回<xref:System.ComponentModel.PropertyDescriptor>具有<xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A>的字符串。</span><span class="sxs-lookup"><span data-stu-id="499c5-132">The returned <xref:System.ComponentModel.PropertyDescriptor> has a <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowCode">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="499c5-133">显示设计器的用户代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-133">Displays the user code for the designer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode();" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : unit -&gt; bool" Usage="iEventBindingService.ShowCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="499c5-134">显示设计器的用户代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-134">Displays the user code for the designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="499c5-135">如果显示该代码，则为 <see langword="true" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-135">
              <see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="499c5-136">此方法显示在代码编辑器。</span><span class="sxs-lookup"><span data-stu-id="499c5-136">This method displays the code editor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode (lineNumber As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode(int lineNumber);" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : int -&gt; bool" Usage="iEventBindingService.ShowCode lineNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">
          <span data-ttu-id="499c5-137">要放置插入符号的行号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-137">The line number to place the caret on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="499c5-138">在指定行显示设计器的用户代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-138">Displays the user code for the designer at the specified line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="499c5-139">如果显示该代码，则为 <see langword="true" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-139">
              <see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="499c5-140">此方法显示在代码编辑器，并将光标置于指定的行上。</span><span class="sxs-lookup"><span data-stu-id="499c5-140">This method displays the code editor and positions the cursor on the specified line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public bool ShowCode (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowCode(class System.ComponentModel.IComponent component, class System.ComponentModel.EventDescriptor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowCode (component As IComponent, e As EventDescriptor) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShowCode(System::ComponentModel::IComponent ^ component, System::ComponentModel::EventDescriptor ^ e);" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : System.ComponentModel.IComponent * System.ComponentModel.EventDescriptor -&gt; bool" Usage="iEventBindingService.ShowCode (component, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="e" Type="System.ComponentModel.EventDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="499c5-141">事件要连接到组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-141">The component that the event is connected to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="499c5-142">要显示的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-142">The event to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="499c5-143">显示指定事件的用户代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-143">Displays the user code for the specified event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="499c5-144">如果显示该代码，则为 <see langword="true" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="499c5-144">
              <see langword="true" /> if the code is displayed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="499c5-145">此方法显示在代码编辑器，并将光标置于在指定的事件声明的行。</span><span class="sxs-lookup"><span data-stu-id="499c5-145">This method displays the code editor and positions the cursor on the line that the specified event is declared on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>