<Type Name="IDesignerFilter" FullName="System.ComponentModel.Design.IDesignerFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="805c7cd0acdb03070f0db4f5eea4cf81ee1b03b9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30369531" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerFilter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.IDesignerFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerFilter" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>提供使设计器能够访问和筛选 <see cref="T:System.ComponentModel.TypeDescriptor" /> 字典的接口，它存储组件设计器可以向设计时环境公开的属性、特性和事件说明符。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.Design.IDesignerFilter> 使设计器来筛选其关联的组件通过公开的属性、 属性和事件描述符集<xref:System.ComponentModel.TypeDescriptor>。 此接口的方法名称开头`Pre`名称开头的方法之后，立即调用`Post`。  
  
 如果你想要添加属性、 事件或属性描述符，使用<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>， <xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>，或<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>方法。  
  
 如果你想要更改或删除属性、 事件或属性描述符，使用<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>， <xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>，或<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>方法。  
  
   
  
## Examples  
 下面的示例演示如何重写<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>，向属性窗口添加设计器的属性，在设计时选择设计器的控件时。 请参阅示例<xref:System.Windows.Forms.Design.ControlDesigner>类设计器使用完整示例，<xref:System.ComponentModel.Design.IDesignerFilter>接口。  
  
 [!code-cpp[ControlDesignerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#2)]
 [!code-csharp[ControlDesignerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#2)]
 [!code-vb[ControlDesignerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName="PostFilterAttributes">
      <MemberSignature Language="C#" Value="public void PostFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">组件的类的 <see cref="T:System.Attribute" /> 对象。 特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</param>
        <summary>当在派生类中被重写后，允许设计器更改或移除它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使您能够更改或删除通过来实现此接口的设计器关联的组件公开的属性的字典中的项<xref:System.ComponentModel.TypeDescriptor>。  
  
 属性的字典中的键是属性的类型 Id。 对象属于类型<xref:System.Attribute>。 之后，立即调用此方法<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes%2A>。  
  
 属性的类型 ID 可以是任何对象。 默认情况下，<xref:System.Attribute>返回其<xref:System.Type>的值作为其<xref:System.Attribute.TypeId%2A>属性。 你可以检查<xref:System.Attribute.TypeId%2A>与已知等效字典中的特性<xref:System.Attribute.TypeId%2A>属性标识它，或使用<xref:System.Reflection>以确定其自身的属性对象。  
  
 当具有相同的属性<xref:System.Attribute.TypeId%2A>因为现有的或继承的属性添加到某一组件，则新特性将取代旧的属性。 许多属性而言，对于相同类型的新属性将替换先前类型的所有属性。 但是，某些类型的属性返回<xref:System.Attribute.TypeId%2A>，有选择地区分特性。 例如，为了提供不同类型的同时处于活动状态的设计器对于类型，如<xref:System.ComponentModel.Design.IRootDesigner>和<xref:System.ComponentModel.Design.IDesigner>、<xref:System.ComponentModel.DesignerAttribute>类返回<xref:System.Attribute.TypeId%2A>唯一标识该属性和基本设计器类型。 <xref:System.ComponentModel.DesignerAttribute>构造函数，可指定其特定的类型，除了设计器的基本设计器类型和<xref:System.ComponentModel.DesignerAttribute>返回<xref:System.Attribute.TypeId%2A>反映这。 因此在添加新<xref:System.ComponentModel.DesignerAttribute>具有与现有的基本设计器类型相同的类型的基本设计器类型<xref:System.ComponentModel.DesignerAttribute>，旧的属性将替换为新属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>你可以直接筛选字典可通过访问<paramref name="attributes" />参数，或也可以将其保持不变。 执行你自己的筛选后，如果你要重写此方法，调用基实现。</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterEvents">
      <MemberSignature Language="C#" Value="public void PostFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。 事件字典中的关键字是事件名。</param>
        <summary>当在派生类中重写后，允许设计器更改或移除它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法提供了一种方法来更改或删除项目在字典中的事件的通过公开<xref:System.ComponentModel.TypeDescriptor>。  
  
 中的事件字典的键是事件的名称。 对象属于类型<xref:System.ComponentModel.EventDescriptor>。 之后，立即调用此方法<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents%2A>。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>你可以直接筛选字典可通过访问<paramref name="events" />参数，或也可以将其保持不变。 执行你自己的筛选后，如果你要重写此方法，调用基实现。</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PostFilterProperties">
      <MemberSignature Language="C#" Value="public void PostFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。 属性字典中的关键字是属性名。</param>
        <summary>当在派生类中重写后，允许设计器更改或移除它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中的项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使您能够更改或删除通过公开的属性的字典中的项<xref:System.ComponentModel.TypeDescriptor>。  
  
 属性的字典中的键是属性的名称。 对象属于类型<xref:System.ComponentModel.PropertyDescriptor>。 之后，立即调用此方法<xref:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties%2A>。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>你可以直接筛选字典可通过访问<paramref name="properties" />参数，或也可以将其保持不变。 执行你自己的筛选后，如果你要重写此方法，调用基实现。</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterAttributes">
      <MemberSignature Language="C#" Value="public void PreFilterAttributes (System.Collections.IDictionary attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterAttributes(class System.Collections.IDictionary attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterAttributes (attributes As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterAttributes(System::Collections::IDictionary ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="attributes">组件的类的 <see cref="T:System.Attribute" /> 对象。 特性字典中的关键字是特性的 <see cref="P:System.Attribute.TypeId" /> 值。</param>
        <summary>当在派生类中被重写时，允许设计器将项添加到它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的特性集中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使您能够将项添加到通过来实现此接口的设计器关联的组件公开的属性的字典<xref:System.ComponentModel.TypeDescriptor>。  
  
 属性的字典中的键是属性的类型 Id。 对象属于类型<xref:System.Attribute>。 立即之前调用此方法<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes%2A>。  
  
 属性的类型 ID 可以是任何对象。 默认情况下，<xref:System.Attribute>返回其<xref:System.Type>的值作为其<xref:System.Attribute.TypeId%2A>属性。 你可以检查<xref:System.Attribute.TypeId%2A>与已知等效字典中的特性<xref:System.Attribute.TypeId%2A>属性标识它，或使用<xref:System.Reflection>以确定其自身的属性对象。  
  
 当具有相同的属性<xref:System.Attribute.TypeId%2A>因为现有的或继承的属性添加到某一组件，则新特性将取代旧的属性。 许多属性而言，对于相同类型的新属性将替换先前类型的所有属性。 但是，某些类型的属性返回<xref:System.Attribute.TypeId%2A>，有选择地区分特性。 例如，为了提供不同类型的同时处于活动状态的设计器对于类型，如<xref:System.ComponentModel.Design.IRootDesigner>和<xref:System.ComponentModel.Design.IDesigner>、<xref:System.ComponentModel.DesignerAttribute>类返回<xref:System.Attribute.TypeId%2A>唯一标识该属性和基本设计器类型。 <xref:System.ComponentModel.DesignerAttribute>构造函数，可指定其特定的类型，除了设计器的基本设计器类型和<xref:System.ComponentModel.DesignerAttribute>返回<xref:System.Attribute.TypeId%2A>反映这。 因此在添加新<xref:System.ComponentModel.DesignerAttribute>具有与现有的基本设计器类型相同的类型的基本设计器类型<xref:System.ComponentModel.DesignerAttribute>，旧的属性将替换为新属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>你可以直接筛选字典可通过访问<paramref name="attributes" />参数，或也可以将其保持不变。 执行你自己的筛选后，如果你要重写此方法，调用基实现。</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="public void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterEvents (events As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterEvents(System::Collections::IDictionary ^ events);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <see cref="T:System.ComponentModel.EventDescriptor" /> 对象，它表示组件的类的事件。 事件字典中的关键字是事件名。</param>
        <summary>当在派生类中被重写时，允许设计器将项添加到它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的事件集中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使您能够将项目添加到设计器通过公开的事件字典<xref:System.ComponentModel.TypeDescriptor>。  
  
 中的事件字典的键是事件的名称。 对象属于类型<xref:System.ComponentModel.EventDescriptor>。 立即之前调用此方法<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents%2A>。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>你可以直接修改字典可通过访问<paramref name="events" />参数，或也可以将其保持不变。 如果你要重写此方法，调用基实现，然后才能执行您自己的筛选。</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="public void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:System.ComponentModel.PropertyDescriptor" /> 对象，它表示组件的类的属性。 属性字典中的关键字是属性名。</param>
        <summary>当在派生类中被重写时，允许设计器将项添加到它通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公开的属性集中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法使您能够将项添加到设计器通过公开的属性的字典<xref:System.ComponentModel.TypeDescriptor>。  
  
 属性的字典中的键是属性的名称。 对象属于类型<xref:System.ComponentModel.PropertyDescriptor>。 立即之前调用此方法<xref:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties%2A>。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>你可以直接修改字典可通过访问<paramref name="properties" />参数，或也可以将其保持不变。 如果你要重写此方法，调用基实现，然后才能执行您自己的筛选。</para>
        </block>
        <altmember cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>