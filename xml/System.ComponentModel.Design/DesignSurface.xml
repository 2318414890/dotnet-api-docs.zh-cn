<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DesignSurface.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac53aa7493e17750216c5342b1ee5e784080710e3a2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3aa7493e17750216c5342b1ee5e784080710e3a2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Presents a user interface for designing components.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class implements what the user perceives as a designer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>类实现用户视为设计器。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> is the user interface the user manipulates to change design-time features.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> 是用户界面用户操作以更改设计时功能。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> provides a completely self-contained design surface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> 提供完全自包含的设计图面。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class may be used as a stand-alone designer, or it may be coupled with the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class to provide a common implementation for an application that hosts multiple <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>类可能使用作为独立的设计器中，或它可能也会使<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph>类以提供通用的应用程序承载多个实现<ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class can be used by itself, or the user can derive a new class from it and augment the behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>类可以由本身，或者用户可以从它派生新类并增加的行为。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class provides several design-time services automatically.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>类提供了一些设计时服务自动。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class adds all of its services in its constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>类添加其所有服务在其构造函数。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Most of these services can be overridden by replacing them in the protected <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> property.</source>
          <target state="translated">大多数这些服务可以重写通过替代它们在受保护<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>To replace a service, override the constructor, call base, and make any changes through the protected <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> property.</source>
          <target state="translated">若要替换服务，重写构造函数、 调用基类，和通过受保护的任何更改<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>All services that are added to the service container and that implement <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> are disposed when the design surface is disposed.</source>
          <target state="translated">所有服务，它添加到服务容器和实现<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>释放设计图面时，将释放。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The default set of replaceable services that the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class provides is shown in the following table.</source>
          <target state="translated">可替换的一组默认服务<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>类提供了以下表所示。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Service</source>
          <target state="translated">服务</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Enables objects that are not part of the container’s components collection to provide their own extender providers.</source>
          <target state="translated">支持不是容器的组件集合，以提供其自己的扩展程序提供程序的一部分的对象。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Used by <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> to get a list of extender providers.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>来获取扩展程序提供程序的列表。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>With this service, extender providers can live outside of the container.</source>
          <target state="translated">与此服务中，扩展程序提供程序可以实时容器之外。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides designer metadata hooks.</source>
          <target state="translated">提供了设计器元数据挂钩。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>This is the primary interface for metadata filtering.</source>
          <target state="translated">这是元数据筛选的主接口。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides a way to select components in the designer.</source>
          <target state="translated">使您能够在设计器中选择组件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides a way to get a name for objects, even when those objects are not sited.</source>
          <target state="translated">使您能够获取对象的名称，即使这些对象位置不正确。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Offers the design surface itself as a service.</source>
          <target state="translated">提供设计图面本身作为服务。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides a base class for getting and setting option values for a designer.</source>
          <target state="translated">用于获取和设置选项值为设计器提供基类。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The following table shows the non-replaceable services provided by default.</source>
          <target state="translated">下表显示非替换默认情况下提供的服务。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Service</source>
          <target state="translated">服务</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Raises events as changes are made to components.</source>
          <target state="translated">对组件进行更改时引发的事件。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Controls access to types, services, and transactions.</source>
          <target state="translated">控制对类型、 服务和事务的访问。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Master interface for designers.</source>
          <target state="translated">设计器的主接口。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Owns the set of components that are being designed.</source>
          <target state="translated">拥有正在设计的组件组。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Each designer has an <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> that owns the components.</source>
          <target state="translated">每个设计器有<ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph>拥有组件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Derives from <ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph> and provides a way to add and remove services from the designer.</source>
          <target state="translated">派生自<ph id="ph1">&lt;xref:System.IServiceProvider&gt;</ph>并提供了如何添加和从设计器中删除服务。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>In addition to these services, the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class also provides a single service that is available through a component’s site.</source>
          <target state="translated">除了这些服务，<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>类还提供了可通过组件的站点的单个服务。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>This service is unique for each component.</source>
          <target state="translated">此服务是唯一的每个组件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>The following table shows the services that cannot be replaced.</source>
          <target state="translated">下表显示不能被替换的服务。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Service</source>
          <target state="translated">服务</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>A generic dictionary of key/value pairs that can be used to store arbitrary data about a component.</source>
          <target state="translated">可以用于存储有关组件的任意数据的键/值对一个泛型字典。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>A container that enables a component to add additional child components to the designer.</source>
          <target state="translated">使组件能够将其他子组件添加到设计器的容器。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>These components will be part of the design surface, but will not participate in serialization.</source>
          <target state="translated">这些组件将作为一部分的设计图面上，但将不参与序列化。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>This is useful when you want to design a control that is capable of exposing a region of itself in a designer, but you do not want the region to participate in serialization.</source>
          <target state="translated">当你想要设计能够公开区域本身在设计器中，某个控件时，这非常有用，但你不想要参与序列化的区域。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>In addition to <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>, the site also implements the following interfaces.</source>
          <target state="translated">除了<ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>，此站点还实现以下接口。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Check for the existence of these interfaces, rather than use indiscriminate casting, because other site implementations may not implement them.</source>
          <target state="translated">检查存在这些接口，而不是使用不加选择地强制转换，因为其他站点实现可能不能实现它们。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Service</source>
          <target state="translated">服务</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Provides a way to get to the container of site-specific services.</source>
          <target state="translated">提供一种方法可用于访问特定于站点的服务的容器。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>For example, <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph> is a site-specific service.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDictionaryService&gt;</ph>是特定于站点的服务。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>With this service, you can add additional site-specific services.</source>
          <target state="translated">通过此服务，你可以添加其他特定于站点的服务。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>for full access to system resources.</source>
          <target state="translated">对系统资源的完全访问权限。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Demand values: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>.</source>
          <target state="translated">要求值： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>， <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Associated state:</source>
          <target state="translated">关联的状态：</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
          <source>The parent service provider, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no parent used to resolve services.</source>
          
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
          <source>When <ph id="ph1">`parentProvide`</ph> is present, designers contained within the surface can retrieve services from the application.</source>
          <target state="translated">当<ph id="ph1">`parentProvide`</ph>存在，则面中包含的设计器可以从应用程序中检索服务。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>The type of root component to create.</source>
          
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>When you use the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> constructor, it creates a simple designer loader that, in turn, creates a component of the given type and then ends the loading process.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph>构造函数，它会创建简单的设计器加载程序，反过来，创建给定类型的一个组件，并随后结束加载过程。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</source>
          <target state="translated">这是一种简单方法创建设计器中的，假定所有将外部完成保存状态。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>Internally, this calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> and passes the root component type.</source>
          <target state="translated">在内部，这将调用<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>并将传递根组件类型。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> overload is not affected by <ph id="ph2">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph>重载不会影响<ph id="ph2">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph> must be in the service container before the design surface loads.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>设计图面加载之前必须是服务容器中。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>If you need access to <ph id="ph1">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>, call the empty constructor, add the <ph id="ph2">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph> to the <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph> and call <ph id="ph4">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> with <ph id="ph5">`rootComponentType`</ph>.</source>
          <target state="translated">如果你需要访问<ph id="ph1">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>、 调用空构造函数、 添加<ph id="ph2">&lt;xref:System.Windows.Forms.Design.DesignerOptions&gt;</ph>到<ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface.ServiceContainer%2A&gt;</ph>并调用<ph id="ph4">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>与<ph id="ph5">`rootComponentType`</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source><ph id="ph1">&lt;paramref name="rootComponent" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>The parent service provider, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no parent used to resolve services.</source>
          
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>The type of root component to create.</source>
          
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>Using the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph> constructor creates a simple designer loader that creates a component of the given type and then ends the loading process.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.%23ctor%2A&gt;</ph>构造函数创建简单的设计器加载程序创建给定类型的一个组件，随后结束加载过程。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>This is a straightforward way to create a designer, under the assumption that all saving of state will be done externally.</source>
          <target state="translated">这是一种简单方法创建设计器中的，假定所有将外部完成保存状态。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>Internally, this calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> and passes the root component type.</source>
          <target state="translated">在内部，这将调用<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>并将传递根组件类型。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source><ph id="ph1">&lt;paramref name="rootComponent" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Begins the loading process.</source>
          
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>The designer loader to use for loading the designer.</source>
          
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>Begins the loading process with the given designer loader.</source>
          
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</source>
          <target state="translated">因此加载可能继续进行此调用已返回后，可以是异步的设计器加载。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>Attach an event handler to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph> event to be notified when the design surface has completed loading.</source>
          <target state="translated">附加到事件处理程序<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph>设计图面完成加载时要通知的事件。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>After <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>是调用，还可以立即获得视图设计器中，因为设计器加载程序必须提供至少的根组件在异步加载时。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source><ph id="ph1">&lt;paramref name="loader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>The type of component to create in design mode.</source>
          
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>Begins the loading process.</source>
          
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>When <ph id="ph1">`rootComponentType`</ph> is specified, a default designer loader that simply creates an instance of <ph id="ph2">`rootComponentType`</ph> will be used.</source>
          <target state="translated">当<ph id="ph1">`rootComponentType`</ph>指定，则默认设计器加载程序，只需创建的实例<ph id="ph2">`rootComponentType`</ph>将使用。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>Designer loading can be asynchronous, so the loading may continue to progress after this call has returned.</source>
          <target state="translated">因此加载可能继续进行此调用已返回后，可以是异步的设计器加载。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>Attach an event handler to the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph> event to be notified when the design surface has completed loading.</source>
          <target state="translated">附加到事件处理程序<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.LoadComplete&gt;</ph>设计图面完成加载时要通知的事件。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>After <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> is called, you can immediately obtain the view for the designer, because designer loaders must provide at least the root component when loading asynchronously.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>是调用，还可以立即获得视图设计器中，因为设计器加载程序必须提供至少的根组件在异步加载时。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> method creates an instance of the component type and initializes a designer for this instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>方法创建的组件类型的实例并初始化此实例的设计器。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph> event is raised before this method returns.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph>此方法返回之前，将引发事件。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source><ph id="ph1">&lt;paramref name="rootComponentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> implementation within the design surface.</source>
          
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> implementation within the design surface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>设计图面中的实现。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph> property holds all objects that are currently in design mode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph>属性将保存当前处于设计模式下的所有对象。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>When components are added to <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph>, their designer, if any, is loaded.</source>
          <target state="translated">当将组件添加到<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.ComponentContainer%2A&gt;</ph>，其设计器中，如果任何，则会加载。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>The component is sited with a site that provides full access to the design surface.</source>
          <target state="translated">提供到设计图面上的完全访问权限的站点组件所在。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The type of component to create.</source>
          
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>Creates an instance of a component.</source>
          
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The newly created component.</source>
          
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A&gt;</ph> method is called by the design surface’s <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A&gt;</ph> method to create an instance of a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateComponent%2A&gt;</ph>方法调用在设计图面<ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateComponent%2A&gt;</ph>方法来创建组件的实例。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The component should be created and added to the public container on the design surface.</source>
          <target state="translated">应创建的组件，并且将其添加到设计图面上的公共容器中。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source><ph id="ph1">&lt;paramref name="componentType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>The component for which the designer should be created.</source>
          
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to create a root designer; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to create a normal designer.</source>
          
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>Creates a designer when a component is added to the container.</source>
          
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>An instance of the requested designer, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching designer could be found.</source>
          
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph> method is called by the design surface’s <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> when a component is added to the container.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph>方法调用在设计图面<ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>时组件添加到容器。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>This method creates a designer, but does not initialize it.</source>
          <target state="translated">此方法创建设计器中，但不对其进行初始化。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>When it returns, the designer is initialized by the container.</source>
          <target state="translated">当它返回时，由容器初始化设计器。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph> can create two different types of designers: root designers and normal designers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateDesigner%2A&gt;</ph> 可以创建两个不同类型的设计器： 根设计器和普通设计器。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>A root designer is a designer for the root component in the design surface, which by definition is the first component added to the container.</source>
          <target state="translated">根设计器是用于在设计图面，即通过定义第一个组件添加到容器中的根组件的设计器。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>Root designers differ from normal designers because they are responsible for the user interface presented to the end user.</source>
          <target state="translated">根设计器不同于普通设计器，因为他们负责向最终用户显示的用户界面。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>Root designers typically coordinate with the rest of the designers on a design surface to provide this interface.</source>
          <target state="translated">根设计器通常协调与设计图面上的设计器，以提供此接口的其余部分。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>The default implementation of this method delegates to <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>, passing in <ph id="ph2">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph> as the designer type for root designers, or <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph> for normal designers.</source>
          <target state="translated">此方法的默认实现委托给<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>，并传入<ph id="ph2">&lt;xref:System.ComponentModel.Design.IRootDesigner&gt;</ph>作为根设计器的设计器类型或<ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesigner&gt;</ph>作为普通设计器。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>You can override this method to request a specific type of designer.</source>
          <target state="translated">你可以重写此方法来请求特定类型的设计器。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>The type to create.</source>
          
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>Creates an instance of the given type.</source>
          
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>The newly created object.</source>
          
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>If <ph id="ph1">`type`</ph> is an <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A&gt;</ph> searches for a constructor of type <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> first, followed by an empty constructor.</source>
          <target state="translated">如果<ph id="ph1">`type`</ph>是<ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>，<ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateInstance%2A&gt;</ph>搜索的类型的构造函数<ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph>首先后, 跟一个空构造函数。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Creates a container suitable for nesting controls or components.</source>
          
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>The component that manages the nested container.</source>
          
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>Creates a container suitable for nesting controls or components.</source>
          
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>The nested container.</source>
          
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</source>
          <target state="translated">将组件添加到嵌套容器创建其设计器，并使其适合所有服务可从设计图面。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>Components added to nested containers do not participate in serialization.</source>
          <target state="translated">添加到嵌套容器的组件不参与序列化。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source><ph id="ph1">&lt;paramref name="owningComponent" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>The component that manages the nested container.</source>
          
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>An additional name for the nested container.</source>
          
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>Creates a container suitable for nesting controls or components.</source>
          
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>The nested container.</source>
          
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>Adding a component to a nested container creates its designer and makes it eligible for all services available from the design surface.</source>
          <target state="translated">将组件添加到嵌套容器创建其设计器，并使其适合所有服务可从设计图面。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>Components added to nested containers do not participate in serialization.</source>
          <target state="translated">添加到嵌套容器的组件不参与序列化。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>You can provide an additional name for the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A&gt;</ph> method by passing a value into <ph id="ph2">`containerName`</ph>.</source>
          <target state="translated">你可以提供其他名称<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.CreateNestedContainer%2A&gt;</ph>方法，从而将值转换为<ph id="ph2">`containerName`</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="owningComponent" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.DesignSurface">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>The public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> method follows the standard <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">公共<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>方法遵循标准<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>模式。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Calling this method destroys the design surface.</source>
          <target state="translated">调用此方法将销毁设计图面。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">此方法的受保护的版本是<ph id="ph1">`virtual`</ph>，它遵循普通<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>模式。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Because <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>不具有任何本机代码，以清理时，它不具有终结器调用<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>If you need to call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>, you must add a finalizer yourself.</source>
          <target state="translated">如果你需要调用<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%28System.Boolean%29&gt;</ph>，你必须自己添加一个终结器。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> 后，应调用 <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> 方法使 <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> was occupying.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>以便垃圾回收器才能回收的内存，<ph id="ph3">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>占用。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> 的最后一个引用前，均应调用 <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否则，在垃圾回收器调用 <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> 对象的 <ph id="ph2">`Finalize`</ph> 方法之前，该对象正在使用的资源不会被释放。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>The public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose&gt;</ph> method follows the standard <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">公共<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose&gt;</ph>方法遵循标准<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>模式。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>Calling this method destroys the design surface.</source>
          <target state="translated">调用此方法将销毁设计图面。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
          <target state="translated">此方法的受保护的版本是<ph id="ph1">`virtual`</ph>，它遵循普通<ph id="ph2">&lt;xref:System.IDisposable&gt;</ph>模式。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>Because <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>不具有任何本机代码，以清理时，它不具有终结器调用<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>If you need to call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>, you must add a finalizer yourself.</source>
          <target state="translated">如果你需要调用<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>，你必须自己添加一个终结器。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 调用<ph id="ph2">`Dispose`</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> references.</source>
          <target state="translated">当<ph id="ph1">`disposing`</ph>参数为 true 时，此方法释放由任何托管对象持有的全部资源此<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>引用。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用每个引用对象的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以由其他对象多次调用。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>请注意不要引用已释放的以前调用中的对象<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>重写 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Disposed">
          <source>Occurs when the design surface is disposed.</source>
          
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Disposed">
          <source>The surface is only disposed when the public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph> method on <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> is called.</source>
          <target state="translated">图面是仅释放的在公共<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Dispose%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
          <source>Gets a value indicating whether the <bpt id="p1">**</bpt>Design-time Error List<ept id="p1">**</ept> is loading.</source>
          
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <bpt id="p1">**</bpt>Design-time Error List<ept id="p1">**</ept> is loading; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 如果<bpt id="p1">**</bpt>设计时错误列表<ept id="p1">**</ept>加载; 否则为<ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>Serializes changes to the design surface.</source>
          
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> method can be called to push changes made to the design surface down to the serializer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph>方法可以调用以进行推送到设计图面下序列化程序所做的更改。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>This ensures that the design surface and its serialized state are synchronized.</source>
          <target state="translated">这可确保设计图面和其序列化的状态同步。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>The actual implementation of this method is forwarded to the designer loader associated with design surface.</source>
          <target state="translated">此方法的实际实现转发到与设计图面关联的设计器加载程序。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>The designer loader may choose to defer changes until <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> is called, or it may choose to keep the serialized data up to date with all user changes.</source>
          <target state="translated">设计器加载程序可以选择更改推迟到<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph>调用时，它也可能选择序列化的数据保留最新的用户的所有更改。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.Flush">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph> method ensures that regardless of the model the designer loader chooses to use, the serialized state is synchronized with the actual design surface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flush%2A&gt;</ph>方法可确保，无论设计器加载程序选择使用的模式，如何序列化的状态同步与实际的设计图面。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Flushed">
          <source>Occurs when a call is made to the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /&gt;</ph> method of <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Flushed">
          <source>The designer loader is flushed first, and then the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flushed&gt;</ph> event is raised.</source>
          <target state="translated">首先，刷新设计器加载程序，然后<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Flushed&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>The type of service to retrieve.</source>
          
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>Gets a service from the service container.</source>
          
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>An object that implements, or is a derived class of, <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the service does not exist in the service container.</source>
          
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.GetService%2A&gt;</ph> method retrieves a service in the design surface’s service container.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.GetService%2A&gt;</ph>方法检索设计图面服务容器中的服务。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
          <source>In addition, this will forward to any service provider that was given to the design surface at construction time.</source>
          <target state="translated">此外，这将转发到任何服务提供程序在构造时提供给设计图面。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
          <source>Gets a value indicating whether the design surface is currently loaded.</source>
          
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the design surface is currently loaded; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 如果当前加载设计图面;否则为<ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>Occurs when the designer load has completed.</source>
          
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph> event is raised for successful loads as well as unsuccessful ones.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.Loaded&gt;</ph>成功加载，以及不成功的均将引发事件。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>If code in this event handler throws an exception, the designer is unloaded.</source>
          <target state="translated">如果此事件处理程序中的代码引发异常，则设计器将被卸载。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.LoadedEventArgs&gt;</ph> object can be used to determine if loading succeeded, and it can also provide a list of errors that occurred during the load.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.LoadedEventArgs&gt;</ph>对象可以用于确定加载是否成功，并且它还可以为在加载期间发生的错误的列表。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Loaded">
          <source>Errors can occur for successful loads as well, provided that the serialization system can tolerate errors.</source>
          <target state="translated">成功加载，前提是序列化系统可以承受错误可能发生错误。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
          <source>Returns a collection of loading errors or a void collection.</source>
          
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> of loading errors.</source>
          <target state="translated">A<ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>的加载错误。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Loading">
          <source>Occurs when the designer is about to be loaded.</source>
          
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.LoadedEventArgs" /&gt;</ph> that contains the event data.</source>
          
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /&gt;</ph> event.</source>
          
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /&gt;</ph> event.</source>
          
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /&gt;</ph> event.</source>
          
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /&gt;</ph> event.</source>
          
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /&gt;</ph> event.</source>
          
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>Gets the service container.</source>
          
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>The service container that provides all services to designers contained within the design surface.</source>
          <target state="translated">在设计图面中包含的设计器提供的所有服务的服务容器。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>At construction time, <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> adds default services into this service container.</source>
          <target state="translated">在构造时<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>将默认服务添加到此服务容器。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>You can leave the default services in their present state, or you can remove them and replace them with your own.</source>
          <target state="translated">您可以将默认服务留在其当前状态，也可以删除它们并将其替换为你自己。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>The default services are all demand-created, so there is no loss in performance for adding them at construction time.</source>
          <target state="translated">默认服务是所有按需创建，因此将它们添加在构造时的性能不会丢失。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Unloaded">
          <source>Occurs when a designer has finished unloading.</source>
          
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.Unloading">
          <source>Occurs when a designer is about to unload.</source>
          
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Unloading">
          <source>When a designer unloads, the entire state for that designer is destroyed, including the designer’s view.</source>
          <target state="translated">当卸载设计器时，被销毁该设计器的整个状态，包括设计器的视图。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.Unloading">
          <source>The view should be unparented at this time.</source>
          <target state="translated">此时，该视图应是没有父级。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>Gets the view for the root designer.</source>
          
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The view for the root designer.</source>
          <target state="translated">根设计器的视图。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> method must be called beforehand to start the loading process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>必须事先以启动加载过程调用方法。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>It is possible to return a view before the designer loader finishes loading because the root designer, which supplies the view, is the first object created by the designer loader.</source>
          <target state="translated">就可以返回的视图设计器加载程序完成加载因为根设计器中，提供该视图，是由设计器加载程序创建的第一个对象之前。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>If a view is unavailable, <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph> raises an exception.</source>
          <target state="translated">如果视图是不可用，<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.BeginLoad%2A&gt;</ph>引发异常。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The notion of a view technology is obsolete.</source>
          <target state="translated">视图技术的概念已废弃不用。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>But, it remains in the interfaces for root designers for backward compatibility.</source>
          <target state="translated">但是，其保留在接口中向后兼容性的根设计器。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>Its use is hidden from anyone using <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objects.</source>
          <target state="translated">其用途隐藏的任何人使用<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.View%2A&gt;</ph> property hides view technologies by passing the supported technologies back into the root designer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.View%2A&gt;</ph>属性通过将受支持的技术传递回根设计器隐藏视图技术。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The following code example shows how <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.View%2A&gt;</ph> hides view technologies.</source>
          <target state="translated">下面的代码示例演示如何<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface.View%2A&gt;</ph>隐藏查看技术。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed.</source>
          
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>More information may available in the <ph id="ph1">&lt;see cref="P:System.Exception.InnerException" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The designer loaded, but it does not offer a view compatible with this design surface.</source>
          
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Design.DesignSurface.View">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph> attached to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.DesignSurface" /&gt;</ph> has been disposed.</source>
          
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
          <source>Occurs when the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /&gt;</ph> method has been called on <ph id="ph2">&lt;see cref="T:System.ComponentModel.Design.IDesignerHost" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
          <source>If you want to support the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.Activate%2A&gt;</ph> method, your event handler should activate the window for this design surface.</source>
          <target state="translated">如果你想要支持<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.Activate%2A&gt;</ph>方法，事件处理程序应激活此设计图面的窗口。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>