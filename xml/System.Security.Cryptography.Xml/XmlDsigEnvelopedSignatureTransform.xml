<Type Name="XmlDsigEnvelopedSignatureTransform" FullName="System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbb9b808b73824ae2cb2b2b8dfa32c2a2ceceb85" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30500241" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDsigEnvelopedSignatureTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDsigEnvelopedSignatureTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDsigEnvelopedSignatureTransform&#xA;Inherits Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDsigEnvelopedSignatureTransform : System::Security::Cryptography::Xml::Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示由 W3C 定义的 XML 数字签名封装签名转换。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>类中删除`<Signature>`元素从 XML 文档之前，可以计算摘要。 使用此转换，也可以登录并验证 XML 文档的 XML 数字签名元素除外的所有元素。  
  
 尽管可以创建和插入 XML 文档签名，验证经过修改的文档使用嵌入的签名将失败，因为该文档现在包含其他元素。  此转换将移除`<Signature>`元素，并允许您以验证使用其原始格式的文档。  
  
 使用<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>类每当创建封装的签名中。  
  
 封装的签名转换有关的详细信息，请参阅部分 6.6.4 XMLDSIG 规范，这是可从在 www.w3.org/TR/xmldsig-core/ W3C。  
  
   
  
## Examples  
 本部分包含两个代码示例。 第一个示例演示如何对 XML 文件使用封装签名进行签名。 第二个示例演示如何使用的成员<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>类。  
  
 **示例 #1**  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 **示例 #2**  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#2)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#2)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigEnvelopedSignatureTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigEnvelopedSignatureTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用的成员<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>类。  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#2)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#2)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigEnvelopedSignatureTransform (bool includeComments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeComments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (includeComments As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigEnvelopedSignatureTransform(bool includeComments);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="includeComments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeComments">
          如果包含注释，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>如果指定了注释，则使用注释初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.%23ctor%2A>具有构造函数<xref:System.Boolean>值`true`以包括注释。 此代码示例摘自更大的示例为提供<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>类。  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的参数的 XML 表示形式，适合以 XMLDSIG <see langword="&lt;Transform&gt;" /> 元素的子元素的形成来包含这些参数。</summary>
        <returns>XML 节点的列表，这些节点表示描述 XMLDSIG <see langword="&lt;Transform&gt;" /> 元素中当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象所需的特定于转换的内容。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的输出。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的输出。</summary>
        <returns>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的输出。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的对象的类型必须是<xref:System.Xml.XmlNodeList>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput%2A> 方法。 此代码示例摘自更大的示例为提供<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>类。  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">包含的 XML 文档为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要返回的输出的类型。 <see cref="T:System.Xml.XmlNodeList" /> 是此参数的唯一有效类型。</param>
        <summary>返回 <see cref="T:System.Xml.XmlNodeList" /> 类型的当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的输出。</summary>
        <returns>
          <see cref="T:System.Xml.XmlNodeList" /> 类型的当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的输出。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的对象的类型必须是<xref:System.Xml.XmlNodeList>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput%2A>方法来检索当前的输出<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>对象。 此代码示例摘自更大的示例为提供<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>类。  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#9)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#9)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> 参数不是一个 <see cref="T:System.Xml.XmlNodeList" /> 对象。</exception>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)" /> 方法的有效输入。</summary>
        <value>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的一个有效输入类型数组；只能将属于这些类型之一的对象传递给当前 <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 方法。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有效的输入类型为<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>是<xref:System.IO.Stream>， <xref:System.Xml.XmlDocument>，和<xref:System.Xml.XmlNodeList>。  
  
   
  
## Examples  
 下面的代码示例演示如何调用<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes%2A>属性检索当前转换为有效的输入的类型。 此代码示例摘自更大的示例为提供<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>类。  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">要加载到当前 <see cref="T:System.Xml.XmlNodeList" /> 对象中的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />。</param>
        <summary>将指定的 <see cref="T:System.Xml.XmlNodeList" /> 分析为 <see langword="&lt;Transform&gt;" /> 元素的特定于转换的内容，并配置当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的内部状态以匹配 <see langword="&lt;Transform&gt;" /> 元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因为没有特定于转换的内容针对定义<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>，对此方法的调用不会更改所转换的状态。  
  
   
  
## Examples  
 下面的代码示例演示如何调用<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml%2A>使用指定的方法<xref:System.Xml.XmlNodeList>对象配置当前<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>对象。 此代码示例摘自更大的示例为提供<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>类。  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#11)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#11)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInput(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象中的输入。</param>
        <summary>将指定的输入加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 输入对象的类型必须是中的类型之一<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes%2A>属性。  
  
   
  
## Examples  
 下面的代码示例演示如何调用<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput%2A>使用指定的方法<xref:System.Xml.XmlDocument>对象作为输入。 此代码示例摘自更大的示例为提供<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>类。  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CPP/members.cpp#12)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/CS/members.cs#12)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigBase64Transform/VB/members.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="obj" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">包含的 XML 文档为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput" /> 方法的可能输出。</summary>
        <value>当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 对象的一个有效输出类型数组；从当前 <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> 方法只返回属于这些类型之一的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有效的输出类型<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>是<xref:System.Xml.XmlNodeList>和<xref:System.Xml.XmlDocument>。  
  
   
  
## Examples  
 下面的代码示例演示如何调用<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes%2A>属性来检索当前转换的有效的输出类型。 此代码示例摘自更大的示例为提供<xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>类。  
  
 [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/cpp/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>