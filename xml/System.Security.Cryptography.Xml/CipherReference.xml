<Type Name="CipherReference" FullName="System.Security.Cryptography.Xml.CipherReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="64b43fd179053e5176d29b19adf67766d9bc4793" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39141640" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CipherReference : System.Security.Cryptography.Xml.EncryptedReference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CipherReference extends System.Security.Cryptography.Xml.EncryptedReference" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.CipherReference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CipherReference&#xA;Inherits EncryptedReference" />
  <TypeSignature Language="C++ CLI" Value="public ref class CipherReference sealed : System::Security::Cryptography::Xml::EncryptedReference" />
  <TypeSignature Language="F#" Value="type CipherReference = class&#xA;    inherit EncryptedReference" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.EncryptedReference</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 XML 加密中的 <see langword="&lt;CipherReference&gt;" /> 元素。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类表示`<CipherReference>`XML 加密中的元素。 它标识源，处理时，将生成加密的数据。  
  
 加密所引用的数据的实际`<CipherReference>`通过以下过程。 `<CipherReference> URI`属性包含被取消引用统一资源标识符 (URI)。 如果`<CipherReference>`元素还包含转换链中，生成的取消引用 URI 数据转换为指定以产生加密的数据。 例如，如果加密的数据的 base64 编码的 XML 文档中，转换会指定 XPath 表达式后跟 base64 解码，因此可以提取加密的数据。  
  
 URI 和转换的语法是类似于 XML 数字签名。  但是，在 XML 数字签名，生成和验证处理相同的源数据开始，执行该转换的相同顺序。 XML 加密中解密应用程序已加密的数据和指定的转换。 转换将枚举中获取的加密的数据所需的顺序。  
  
 **请注意**默认情况下，您不能取消引用从具有未知的来源，如从网站上，文件文档的密码引用由于<xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A>属性是**null**。 例如，当您尝试解密文件包含`<CipherReference>`元素，它引用在 Web 上的文件<xref:System.Security.SecurityException>引发，即使请求由完全受信任的程序集。  
  
 如果确定你要解密的文档可以是受信任，你可以使用以下代码来更改此行为完全受信任的应用程序：  
  
```  
Evidence ev = new Evidence();  
ev.AddHost (new Zone(SecurityZone.MyComputer));  
EncryptedXml exml = new EncryptedXml(doc, ev);  
```  
  
   
  
## Examples  
 下面的代码示例创建的新实例<xref:System.Security.Cryptography.Xml.CipherReference>。  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数创建<xref:System.Security.Cryptography.Xml.CipherReference>对象，它提供的参考信息<xref:System.Security.Cryptography.Xml.CipherData>对象。 参考信息提供加密数据的位置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数创建<xref:System.Security.Cryptography.Xml.CipherReference>对象，它提供的参考信息<xref:System.Security.Cryptography.Xml.CipherData>对象。  
  
   
  
## Examples  
 下面的代码示例创建的新实例<xref:System.Security.Cryptography.Xml.CipherReference>。  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherReference (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherReference(System::String ^ uri);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherReference : string -&gt; System.Security.Cryptography.Xml.CipherReference" Usage="new System.Security.Cryptography.Xml.CipherReference uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">指向加密数据的统一资源标识符 (URI)。</param>
        <summary>使用指定的统一资源标识符 (URI) 初始化 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数创建<xref:System.Security.Cryptography.Xml.CipherReference>对象使用指向加密数据统一资源标识符 (URI)。 对象用来提供的参考信息<xref:System.Security.Cryptography.Xml.CipherData>对象。  
  
 一个 URI 可用于指定包含加密的数据的 XML 文件。 例如:  
  
 `String uri = "http://www.woodgrovebank.com/document.xml";`  
  
 部分 URI 还可用于指定是仅为一部分的 XML 文档进行加密。 例如，假设名为 document.xml XML 文档包含两个`MyForm`元素，如下面的 XML 代码示例中所示：  
  
 `<MyForm Id='Form1'>`  
  
 `<! -- Form data here -->`  
  
 `</MyForm>`  
  
 `<MyForm Id='Form2'>`  
  
 `<! -- Form data here -->`  
  
 `</MyForm>`  
  
 可以对中的内容进行加密`Form2`使用 URI 如下所示：  
  
 `String uri = "http://www.woodgrovebank.com/document.xml#Form2";`  
  
   
  
## Examples  
 下面的代码示例创建的新实例<xref:System.Security.Cryptography.Xml.CipherReference>。  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherReference (string uri, System.Security.Cryptography.Xml.TransformChain transformChain);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri, class System.Security.Cryptography.Xml.TransformChain transformChain) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherReference(System::String ^ uri, System::Security::Cryptography::Xml::TransformChain ^ transformChain);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public CipherReference (string uri, System.Security.Cryptography.Xml.TransformChain tc);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri, class System.Security.Cryptography.Xml.TransformChain tc) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String, tc As TransformChain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherReference(System::String ^ uri, System::Security::Cryptography::Xml::TransformChain ^ tc);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherReference : string * System.Security.Cryptography.Xml.TransformChain -&gt; System.Security.Cryptography.Xml.CipherReference" Usage="new System.Security.Cryptography.Xml.CipherReference (uri, tc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" Index="0" />
        <Parameter Name="transformChain" Type="System.Security.Cryptography.Xml.TransformChain" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="tc" Type="System.Security.Cryptography.Xml.TransformChain" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uri">指向加密数据的统一资源标识符 (URI)。</param>
        <param name="transformChain">一个 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象，用于描述对加密数据进行的转换。</param>
        <param name="tc">一个 <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> 对象，用于描述对加密数据进行的转换。</param>
        <summary>使用指定的统一资源标识符 (URI) 和转换链信息初始化 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数创建<xref:System.Security.Cryptography.Xml.CipherReference>对象使用统一资源标识符 (URI) 和转换链来指示已加密的数据。 对象用来提供的参考信息<xref:System.Security.Cryptography.Xml.CipherData>对象。  
  
   
  
## Examples  
 下面的代码示例创建的新实例<xref:System.Security.Cryptography.Xml.CipherReference>。  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="override this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="cipherReference.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 对象的 XML 表示形式。</summary>
        <returns>一个 <see cref="T:System.Xml.XmlElement" />，表示 XML 加密中的 <see langword="&lt;CipherReference&gt;" /> 元素。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于输出`<CipherReference>`中 XML 元素。  
  
   
  
## Examples  
 下面的代码示例显示了使用一种方法<xref:System.Security.Cryptography.Xml.CipherReference.GetXml%2A>方法。  
  
 [!code-cpp[CipherReference2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CipherReference2/CPP/example.cpp#1)]
 [!code-csharp[CipherReference2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CipherReference2/CS/example.cs#1)]
 [!code-vb[CipherReference2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CipherReference2/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> 值为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public override void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="override this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="cipherReference.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">一个 <see cref="T:System.Xml.XmlElement" /> 对象，表示要用作引用的一个 XML 元素。</param>
        <summary>将 XML 信息加载到 XML 加密的 <see langword="&lt;CipherReference&gt;" /> 元素中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法来加载到现有的 XML 元素<xref:System.Security.Cryptography.Xml.CipherReference>对象。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">提供的 <paramref name="value" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>