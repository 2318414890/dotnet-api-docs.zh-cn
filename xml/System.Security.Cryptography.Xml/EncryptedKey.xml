<Type Name="EncryptedKey" FullName="System.Security.Cryptography.Xml.EncryptedKey">
  <TypeSignature Language="C#" Value="public sealed class EncryptedKey : System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncryptedKey extends System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncryptedKey&#xA;Inherits EncryptedType" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedKey sealed : System::Security::Cryptography::Xml::EncryptedType" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.EncryptedType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="78fb9-101">表示 XML 加密中的 <see langword="&lt;EncryptedKey&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="78fb9-101">Represents the <see langword="&lt;EncryptedKey&gt;" /> element in XML encryption.</span></span> <span data-ttu-id="78fb9-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="78fb9-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78fb9-103">此类表示`<EncryptedKey>`XML 加密中的元素。</span><span class="sxs-lookup"><span data-stu-id="78fb9-103">This class represents the `<EncryptedKey>` element in XML encryption.</span></span> <span data-ttu-id="78fb9-104">`<EncryptedKey>`元素用于发送加密密钥。</span><span class="sxs-lookup"><span data-stu-id="78fb9-104">The `<EncryptedKey>` element is used to send encryption keys.</span></span> <span data-ttu-id="78fb9-105">它可以在独立的 XML 文档中创建、 放在一个应用程序文档，或位于`<EncryptedData>`元素的子级作为`<KeyInfo>`元素。</span><span class="sxs-lookup"><span data-stu-id="78fb9-105">It can be created in a stand-alone XML document, be placed within an application document, or be inside an `<EncryptedData>` element as a child of a `<KeyInfo>` element.</span></span> <span data-ttu-id="78fb9-106">到接收方始终加密密钥的值。</span><span class="sxs-lookup"><span data-stu-id="78fb9-106">The key value is always encrypted to the recipient.</span></span> <span data-ttu-id="78fb9-107">当`<EncryptedKey>`是解密，产生的密钥将提供给`<EncryptionMethod>`而无需进行任何其他处理的算法。</span><span class="sxs-lookup"><span data-stu-id="78fb9-107">When `<EncryptedKey>` is decrypted, the resulting key is made available to the `<EncryptionMethod>` algorithm without any additional processing.</span></span>  
  
 <span data-ttu-id="78fb9-108">`<EncryptedKey>`元素是类似于`<EncryptedData>`元素<xref:System.Security.Cryptography.Xml.EncryptedData>类相似，只不过加密的数据始终是密钥值。</span><span class="sxs-lookup"><span data-stu-id="78fb9-108">The `<EncryptedKey>` element is similar to the `<EncryptedData>` element of the <xref:System.Security.Cryptography.Xml.EncryptedData> class except that the data encrypted is always a key value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78fb9-109">下面的示例演示如何以加密和解密 XML 元素通过使用<xref:System.Security.Cryptography.Xml.EncryptedKey>类。</span><span class="sxs-lookup"><span data-stu-id="78fb9-109">The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class.</span></span> <span data-ttu-id="78fb9-110">此示例然后显示各个属性的值<xref:System.Security.Cryptography.Xml.EncryptedKey>到控制台的类。</span><span class="sxs-lookup"><span data-stu-id="78fb9-110">This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78fb9-111">初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="78fb9-111">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78fb9-112">此构造函数创建的新实例<xref:System.Security.Cryptography.Xml.EncryptedKey>类。</span><span class="sxs-lookup"><span data-stu-id="78fb9-112">This constructor creates a new instance of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class.</span></span> <span data-ttu-id="78fb9-113">有关 XML 加密标准的详细信息，请参阅上的 XML 加密语法和处理文档http://www.w3.org/TR/xmlenc-core/。</span><span class="sxs-lookup"><span data-stu-id="78fb9-113">For more information on XML encryption standards, see the XML Encryption Syntax and Processing document at http://www.w3.org/TR/xmlenc-core/.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78fb9-114">下面的示例演示如何以加密和解密 XML 元素通过使用<xref:System.Security.Cryptography.Xml.EncryptedKey>类。</span><span class="sxs-lookup"><span data-stu-id="78fb9-114">The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class.</span></span> <span data-ttu-id="78fb9-115">此示例然后显示各个属性的值<xref:System.Security.Cryptography.Xml.EncryptedKey>到控制台的类。</span><span class="sxs-lookup"><span data-stu-id="78fb9-115">This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddReference">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78fb9-116">将一个<see langword="" />引用元素添加到 <see langword="&amp;lt;ReferenceList&amp;gt;" /> 元素中。</span><span class="sxs-lookup"><span data-stu-id="78fb9-116">Adds a<see langword="" />reference element to the <see langword="&amp;lt;ReferenceList&amp;gt;" /> element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.DataReference dataReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.DataReference dataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::DataReference ^ dataReference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataReference" Type="System.Security.Cryptography.Xml.DataReference" />
      </Parameters>
      <Docs>
        <param name="dataReference"><span data-ttu-id="78fb9-117">要添加到 <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" /> 属性中的 <see cref="T:System.Security.Cryptography.Xml.DataReference" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="78fb9-117">A <see cref="T:System.Security.Cryptography.Xml.DataReference" /> object to add to the <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" /> property.</span></span></param>
        <summary><span data-ttu-id="78fb9-118">将一个 <see langword="&lt;DataReference&gt;" /> 元素添加到 <see langword="&lt;ReferenceList&gt;" /> 元素中。</span><span class="sxs-lookup"><span data-stu-id="78fb9-118">Adds a <see langword="&lt;DataReference&gt;" /> element to the <see langword="&lt;ReferenceList&gt;" /> element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78fb9-119">此方法将添加<xref:System.Security.Cryptography.Xml.DataReference>对象传递给<xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A>属性<xref:System.Security.Cryptography.Xml.EncryptedKey>对象。</span><span class="sxs-lookup"><span data-stu-id="78fb9-119">This method adds a <xref:System.Security.Cryptography.Xml.DataReference> object to the <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> property of the <xref:System.Security.Cryptography.Xml.EncryptedKey> object.</span></span> <span data-ttu-id="78fb9-120">`<DataReference>`元素指向使用中指定的密钥进行加密的加密数据`<EncryptedKey>`元素。</span><span class="sxs-lookup"><span data-stu-id="78fb9-120">The `<DataReference>` element points to encrypted data that was encrypted using the key specified in the `<EncryptedKey>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddReference">
      <MemberSignature Language="C#" Value="public void AddReference (System.Security.Cryptography.Xml.KeyReference keyReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReference(class System.Security.Cryptography.Xml.KeyReference keyReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReference(System::Security::Cryptography::Xml::KeyReference ^ keyReference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyReference" Type="System.Security.Cryptography.Xml.KeyReference" />
      </Parameters>
      <Docs>
        <param name="keyReference"><span data-ttu-id="78fb9-121">要添加到 <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" /> 属性中的 <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="78fb9-121">A <see cref="T:System.Security.Cryptography.Xml.KeyReference" /> object to add to the <see cref="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" /> property.</span></span></param>
        <summary><span data-ttu-id="78fb9-122">将一个 <see langword="&lt;KeyReference&gt;" /> 元素添加到 <see langword="&lt;ReferenceList&gt;" /> 元素中。</span><span class="sxs-lookup"><span data-stu-id="78fb9-122">Adds a <see langword="&lt;KeyReference&gt;" /> element to the <see langword="&lt;ReferenceList&gt;" /> element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78fb9-123">此方法将添加一个<xref:System.Security.Cryptography.Xml.KeyReference>对象传递给<xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A>属性<xref:System.Security.Cryptography.Xml.EncryptedKey>对象。</span><span class="sxs-lookup"><span data-stu-id="78fb9-123">This method adds A <xref:System.Security.Cryptography.Xml.KeyReference> object to the <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> property of the <xref:System.Security.Cryptography.Xml.EncryptedKey> object.</span></span> <span data-ttu-id="78fb9-124">`<KeyReference>`元素指向使用中指定的密钥进行加密的加密密钥`<EncryptedKey>`元素。</span><span class="sxs-lookup"><span data-stu-id="78fb9-124">The `<KeyReference>` element points to an encrypted key that was encrypted using the key specified in the `<EncryptedKey>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CarriedKeyName">
      <MemberSignature Language="C#" Value="public string CarriedKeyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CarriedKeyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName" />
      <MemberSignature Language="VB.NET" Value="Public Property CarriedKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CarriedKeyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="78fb9-125">获取或设置 XML 加密中的可选 <see langword="&lt;CarriedKeyName&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="78fb9-125">Gets or sets the optional <see langword="&lt;CarriedKeyName&gt;" /> element in XML encryption.</span></span></summary>
        <value><span data-ttu-id="78fb9-126">一个表示密钥值名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="78fb9-126">A string that represents a name for the key value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78fb9-127">`<CarriedKeyName>`元素是可选元素，它将与键值关联的用户可读名称。</span><span class="sxs-lookup"><span data-stu-id="78fb9-127">The `<CarriedKeyName>` element is an optional element that associates a user-readable name with a key value.</span></span> <span data-ttu-id="78fb9-128">然后可以使用此名称来引用密钥使用`<KeyName>`中的元素`<KeyInfo>`元素。</span><span class="sxs-lookup"><span data-stu-id="78fb9-128">This name can then be used to reference the key using the `<KeyName>` element within the `<KeyInfo>` element.</span></span> <span data-ttu-id="78fb9-129">相同`<CarriedKeyName>`元素值，与不同的 ID 值，可以在单个文档中出现多次。</span><span class="sxs-lookup"><span data-stu-id="78fb9-129">The same `<CarriedKeyName>` element value, unlike an ID value, can occur multiple times within a single document.</span></span> <span data-ttu-id="78fb9-130">键的值必须在所有相同`<EncryptedKey>`具有相同标识的元素`<CarriedKeyName>`XML 文档中的名称。</span><span class="sxs-lookup"><span data-stu-id="78fb9-130">The value of the key must be the same in all `<EncryptedKey>` elements identified with the same `<CarriedKeyName>` name within an XML document.</span></span> <span data-ttu-id="78fb9-131">请注意，因为为的值中无意义空白`<KeyName>`元素，空白也非常重要的值中`<CarriedKeyName>`元素。</span><span class="sxs-lookup"><span data-stu-id="78fb9-131">Note that because white space is significant in the value of the `<KeyName>` element, white space is also significant in the value of the `<CarriedKeyName>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78fb9-132">下面的示例演示如何以加密和解密 XML 元素通过使用<xref:System.Security.Cryptography.Xml.EncryptedKey>类。</span><span class="sxs-lookup"><span data-stu-id="78fb9-132">The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class.</span></span> <span data-ttu-id="78fb9-133">此示例然后显示各个属性的值<xref:System.Security.Cryptography.Xml.EncryptedKey>到控制台的类。</span><span class="sxs-lookup"><span data-stu-id="78fb9-133">This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78fb9-134">返回 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 对象的 XML 表示形式。</span><span class="sxs-lookup"><span data-stu-id="78fb9-134">Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object.</span></span></summary>
        <returns><span data-ttu-id="78fb9-135">一个 <see cref="T:System.Xml.XmlElement" />，表示 XML 加密中的 <see langword="&lt;EncryptedKey&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="78fb9-135">An <see cref="T:System.Xml.XmlElement" /> that represents the <see langword="&lt;EncryptedKey&gt;" /> element in XML encryption.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78fb9-136">使用此方法输出`<EncryptedKey>`中 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="78fb9-136">Use this method to output the `<EncryptedKey>` element in XML.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="78fb9-137"><see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="78fb9-137">The <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public override void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="78fb9-138"><see cref="T:System.Xml.XmlElement" /> 表示用于 <see langword="&lt;EncryptedKey&gt;" /> 元素的 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="78fb9-138">An <see cref="T:System.Xml.XmlElement" /> representing an XML element to use for the <see langword="&lt;EncryptedKey&gt;" /> element.</span></span></param>
        <summary><span data-ttu-id="78fb9-139">指定的 XML 将信息加载到 XML 加密的 <see langword="&lt;EncryptedKey&gt;" /> 元素中。</span><span class="sxs-lookup"><span data-stu-id="78fb9-139">Loads the specified XML information into the <see langword="&lt;EncryptedKey&gt;" /> element in XML encryption.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78fb9-140">使用此方法将现有的 XML 元素插入`<EncryptedKey>`元素表示由<xref:System.Security.Cryptography.Xml.EncryptedData>对象。</span><span class="sxs-lookup"><span data-stu-id="78fb9-140">Use this method to load an existing XML element into the `<EncryptedKey>` element represented by the <xref:System.Security.Cryptography.Xml.EncryptedData> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78fb9-141">下面的示例演示如何以加密和解密 XML 元素通过使用<xref:System.Security.Cryptography.Xml.EncryptedKey>类。</span><span class="sxs-lookup"><span data-stu-id="78fb9-141">The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class.</span></span> <span data-ttu-id="78fb9-142">此示例然后显示各个属性的值<xref:System.Security.Cryptography.Xml.EncryptedKey>到控制台的类。</span><span class="sxs-lookup"><span data-stu-id="78fb9-142">This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="78fb9-143"><paramref name="value" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="78fb9-143">The <paramref name="value" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="78fb9-144"><paramref name="value" /> 参数不包含 <see cref="T:System.Security.Cryptography.Xml.CipherData" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="78fb9-144">The <paramref name="value" /> parameter does not contain a <see cref="T:System.Security.Cryptography.Xml.CipherData" /> element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public string Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Recipient" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Recipient { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="78fb9-145">获取或设置 XML 加密中的可选 <see langword="Recipient" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="78fb9-145">Gets or sets the optional <see langword="Recipient" /> attribute in XML encryption.</span></span></summary>
        <value><span data-ttu-id="78fb9-146">一个表示 <see langword="Recipient" /> 特性值的字符串。</span><span class="sxs-lookup"><span data-stu-id="78fb9-146">A string representing the value of the <see langword="Recipient" /> attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78fb9-147">`<Recipient>`属性是一个可选属性，其中包含有关为哪个收件人此加密密钥值适用于的信息。</span><span class="sxs-lookup"><span data-stu-id="78fb9-147">The `<Recipient>` attribute is an optional attribute that contains information about which recipient this encrypted key value is intended for.</span></span> <span data-ttu-id="78fb9-148">其内容由应用程序决定。</span><span class="sxs-lookup"><span data-stu-id="78fb9-148">Its contents are application dependent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78fb9-149">下面的示例演示如何以加密和解密 XML 元素通过使用<xref:System.Security.Cryptography.Xml.EncryptedKey>类。</span><span class="sxs-lookup"><span data-stu-id="78fb9-149">The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class.</span></span> <span data-ttu-id="78fb9-150">此示例然后显示各个属性的值<xref:System.Security.Cryptography.Xml.EncryptedKey>到控制台的类。</span><span class="sxs-lookup"><span data-stu-id="78fb9-150">This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceList">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.ReferenceList ReferenceList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.ReferenceList ReferenceList" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferenceList As ReferenceList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::ReferenceList ^ ReferenceList { System::Security::Cryptography::Xml::ReferenceList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.ReferenceList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="78fb9-151">获取或设置 XML 加密中的 <see langword="&lt;ReferenceList&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="78fb9-151">Gets or sets the <see langword="&lt;ReferenceList&gt;" /> element in XML encryption.</span></span></summary>
        <value><span data-ttu-id="78fb9-152"><see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="78fb9-152">A <see cref="T:System.Security.Cryptography.Xml.ReferenceList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78fb9-153">`<ReferenceList>`元素是可选元素，其中包含指向数据和使用此密钥加密的密钥。</span><span class="sxs-lookup"><span data-stu-id="78fb9-153">The `<ReferenceList>` element is an optional element that contains pointers to data and keys encrypted using this key.</span></span> <span data-ttu-id="78fb9-154">引用列表可以包含对多个引用`<EncryptedKey>`和`<EncryptedData>`元素使用`<KeyReference>`和`<DataReference>`元素分别。</span><span class="sxs-lookup"><span data-stu-id="78fb9-154">The reference list can contain multiple references to the `<EncryptedKey>` and `<EncryptedData>` elements using the `<KeyReference>` and `<DataReference>` elements respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78fb9-155">下面的示例演示如何以加密和解密 XML 元素通过使用<xref:System.Security.Cryptography.Xml.EncryptedKey>类。</span><span class="sxs-lookup"><span data-stu-id="78fb9-155">The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class.</span></span> <span data-ttu-id="78fb9-156">此示例然后显示各个属性的值<xref:System.Security.Cryptography.Xml.EncryptedKey>到控制台的类。</span><span class="sxs-lookup"><span data-stu-id="78fb9-156">This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/cs/example.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedKey/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>