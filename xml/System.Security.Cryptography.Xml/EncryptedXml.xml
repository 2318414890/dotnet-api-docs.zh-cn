<Type Name="EncryptedXml" FullName="System.Security.Cryptography.Xml.EncryptedXml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32e00d51c4658034a1c210b4b0cd1633ecc1557e" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31780739" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EncryptedXml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedXml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedXml" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedXml" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedXml" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="48053-101">表示用于实现 XML 加密的进程模型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="48053-101">Represents the process model for implementing XML encryption.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-102"><xref:System.Security.Cryptography.Xml.EncryptedXml>类是.NET Framework 中的 XML 加密所用的主类。</span><span class="sxs-lookup"><span data-stu-id="48053-102">The <xref:System.Security.Cryptography.Xml.EncryptedXml> class is the main class used for XML encryption in the .NET Framework.</span></span> <span data-ttu-id="48053-103">XML 加密是一种基于标准的、 可互操作的方式来加密所有或部分 XML 文档或任何任意数据。</span><span class="sxs-lookup"><span data-stu-id="48053-103">XML Encryption is a standards-based, interoperable way to encrypt all or part of an XML document or any arbitrary data.</span></span> <span data-ttu-id="48053-104">.NET Framework XML 加密类实现万维网联合会 (W3C) 规范，对 XML 加密位于http://www.w3.org/TR/xmlenc-core/。</span><span class="sxs-lookup"><span data-stu-id="48053-104">The .NET Framework XML encryption classes implement the World Wide Web Consortium (W3C) specification for XML encryption located at http://www.w3.org/TR/xmlenc-core/.</span></span>  
  
 <span data-ttu-id="48053-105">使用<xref:System.Security.Cryptography.Xml.EncryptedXml>类无论何时需要以一种标准方式共享应用程序或组织之间的加密的 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="48053-105">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml> class whenever you need to share encrypted XML data between applications or organizations in a standard way.</span></span> <span data-ttu-id="48053-106">可以由任何实现 XML 加密的 W3C 规范解密使用此类加密的任何数据。</span><span class="sxs-lookup"><span data-stu-id="48053-106">Any data encrypted using this class can be decrypted by any implementation of the W3C specification for XML encryption.</span></span>  
  
 <span data-ttu-id="48053-107">XML 加密将任何纯文本 XML 元素或文档替换`<EncryptedData>`元素，它包含已加密 （或对密码文本） 的纯文本 XML 的表示形式或任意数据。</span><span class="sxs-lookup"><span data-stu-id="48053-107">XML encryption replaces any plain text XML element or document with the `<EncryptedData>` element, which contains an encrypted (or cipher text) representation of plain text XML or any arbitrary data.</span></span> <span data-ttu-id="48053-108">`<EncryptedData>`元素可以根据需要包含有关在何处可以找到将解密密码文本的密钥信息和哪种加密算法用于加密纯文本。</span><span class="sxs-lookup"><span data-stu-id="48053-108">The `<EncryptedData>` element can optionally contain information about where to find a key that will decrypt the cipher text, and which cryptographic algorithm was used to encrypt the plain text.</span></span>  
  
 <span data-ttu-id="48053-109">`<EncryptedKey>`元素是类似于`<EncryptedData>`样式和使用情况，但还允许你将对的值进行解密的密钥进行加密的元素`<EncryptedData>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-109">The `<EncryptedKey>` element is similar to the `<EncryptedData>` element in style and usage, except that it allows you to encrypt a key that will decrypt the value of the `<EncryptedData>` element.</span></span> <span data-ttu-id="48053-110">请注意，`<EncryptedKey>`元素和`<EncryptedData>`元素将永远不会包含未加密的密钥。</span><span class="sxs-lookup"><span data-stu-id="48053-110">Note that the `<EncryptedKey>` element and the `<EncryptedData>` element will never contain an unencrypted key.</span></span>  
  
 <span data-ttu-id="48053-111">使用以下方法之一来交换密钥信息：</span><span class="sxs-lookup"><span data-stu-id="48053-111">Use one of the following methods to exchange key information:</span></span>  
  
-   <span data-ttu-id="48053-112">不包括任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-112">Do not include any key information.</span></span> <span data-ttu-id="48053-113">如果选择此选项，则双方必须在交换加密的数据之前上算法和密钥达成一致。</span><span class="sxs-lookup"><span data-stu-id="48053-113">If you choose this option, both parties must agree on an algorithm and key before they exchange encrypted data.</span></span>  
  
-   <span data-ttu-id="48053-114">包含密钥的位置的统一资源标识符 (URI) 特性中`<RetrievalMethod>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-114">Include the location of the key in the Uniform Resource Identifier (URI) attribute of the `<RetrievalMethod>` element.</span></span> <span data-ttu-id="48053-115">双方必须同意在提前项的位置上，此位置必须保密。</span><span class="sxs-lookup"><span data-stu-id="48053-115">Both parties must agree on the key location ahead of time and this location must be kept secret.</span></span>  
  
-   <span data-ttu-id="48053-116">包括映射到中的键的字符串名称`<KeyName>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-116">Include a string name that maps to a key in the `<KeyName>` element.</span></span> <span data-ttu-id="48053-117">双方必须达成一致的密钥名称映射之前在交换加密的数据，并且必须将此映射保密。</span><span class="sxs-lookup"><span data-stu-id="48053-117">Both parties must agree on the key name mapping before they exchange encrypted data and this mapping must be kept secret.</span></span>  
  
-   <span data-ttu-id="48053-118">包括中的加密的密钥`<EncryptedKey>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-118">Include an encrypted key in the `<EncryptedKey>` element.</span></span> <span data-ttu-id="48053-119">双方上在交换加密的数据之前对加密的密钥进行解密的密钥必须一致。</span><span class="sxs-lookup"><span data-stu-id="48053-119">Both parties must agree on the key that decrypts the encrypted key before they exchange encrypted data.</span></span> <span data-ttu-id="48053-120">你可以选择性地包含的名称或位置将解密中的密钥的密钥`<EncryptedKey>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-120">You can optionally include a name or location of the key that will decrypt the key in the `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-121">下面的代码示例演示如何创建使用一个简单的实用程序类<xref:System.Security.Cryptography.TripleDES>算法加密 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-121">The following code example demonstrates how to create a simple utility class that uses the <xref:System.Security.Cryptography.TripleDES> algorithm to encrypt an XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.MainXMLEncDecryptDataOOP/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-122">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-122">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-123">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-123">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-124">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-124">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-125">此示例在解密方法用于查找适当的解密密钥加密 XML 文档中嵌入的密钥名称。</span><span class="sxs-lookup"><span data-stu-id="48053-125">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-126">下面的代码示例演示如何使用非对称密钥的 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-126">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="48053-127">此示例创建一个对称会话密钥进行加密文档，然后使用非对称密钥在 XML 文档中嵌入会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-127">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-128">下面的代码示例演示如何使用 X.509 证书 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-128">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="48053-129">此示例创建一个对称会话密钥进行加密文档，，然后使用 X.509 证书嵌入到 XML 文档中的会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-129">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="48053-130">初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-130">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="48053-131">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-131">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-132">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-132">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-133">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-133">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-134">此示例在解密方法用于查找适当的解密密钥加密 XML 文档中嵌入的密钥名称。</span><span class="sxs-lookup"><span data-stu-id="48053-134">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-135">下面的代码示例演示如何使用非对称密钥的 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-135">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="48053-136">此示例创建一个对称会话密钥进行加密文档，然后使用非对称密钥在 XML 文档中嵌入会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-136">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-137">下面的代码示例演示如何使用 X.509 证书 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-137">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="48053-138">此示例创建一个对称会话密钥进行加密文档，，然后使用 X.509 证书嵌入到 XML 文档中的会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-138">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48053-139">初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-139">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-140">这是为.NET Framework 中的 XML 加密的主类的默认构造函数。</span><span class="sxs-lookup"><span data-stu-id="48053-140">This is the default constructor for the main class for XML encryption in the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-141">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-141">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-142">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-142">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-143">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-143">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-144">此示例在解密方法用于查找适当的解密密钥加密 XML 文档中嵌入的密钥名称。</span><span class="sxs-lookup"><span data-stu-id="48053-144">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-145">下面的代码示例演示如何使用非对称密钥的 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-145">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="48053-146">此示例创建一个对称会话密钥进行加密文档，然后使用非对称密钥在 XML 文档中嵌入会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-146">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-147">下面的代码示例演示如何使用 X.509 证书 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-147">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="48053-148">此示例创建一个对称会话密钥进行加密文档，，然后使用 X.509 证书嵌入到 XML 文档中的会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-148">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (document As XmlDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="48053-149">一个 <see cref="T:System.Xml.XmlDocument" /> 对象，用于初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-149">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48053-150">使用指定的 XML 文档初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-150">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-151">使用此构造函数创建<xref:System.Security.Cryptography.Xml.EncryptedXml>对象时您想要指定要加密的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-151">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt.</span></span>  <span data-ttu-id="48053-152">`document`参数包含的 XML 元素的更高版本窗体中加密的 XML。</span><span class="sxs-lookup"><span data-stu-id="48053-152">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-153">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-153">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-154">此示例在解密方法用于查找适当的解密密钥加密 XML 文档中嵌入的密钥名称。</span><span class="sxs-lookup"><span data-stu-id="48053-154">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-155">下面的代码示例演示如何使用非对称密钥的 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-155">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="48053-156">此示例创建一个对称会话密钥进行加密文档，然后使用非对称密钥在 XML 文档中嵌入会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-156">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedXml (System.Xml.XmlDocument document, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument document, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.#ctor(System.Xml.XmlDocument,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedXml(System::Xml::XmlDocument ^ document, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="48053-157">一个 <see cref="T:System.Xml.XmlDocument" /> 对象，用于初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-157">An <see cref="T:System.Xml.XmlDocument" /> object used to initialize the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="48053-158">与 <see cref="T:System.Security.Policy.Evidence" /> 对象关联的 <see cref="T:System.Xml.XmlDocument" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-158">An <see cref="T:System.Security.Policy.Evidence" /> object associated with the <see cref="T:System.Xml.XmlDocument" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48053-159">使用指定的 XML 文档和证据初始化 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-159">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class using the specified XML document and evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-160">使用此构造函数创建<xref:System.Security.Cryptography.Xml.EncryptedXml>对象时您想要指定要加密，并提供安全证据的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-160">Use this constructor to create an <xref:System.Security.Cryptography.Xml.EncryptedXml> object when you want to specify the XML document to encrypt and provide security evidence.</span></span> <span data-ttu-id="48053-161">`document`参数包含的 XML 元素的更高版本窗体中加密的 XML。</span><span class="sxs-lookup"><span data-stu-id="48053-161">The `document` parameter comprises the XML elements that later form the encrypted XML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyNameMapping">
      <MemberSignature Language="C#" Value="public void AddKeyNameMapping (string keyName, object keyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddKeyNameMapping(string keyName, object keyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddKeyNameMapping (keyName As String, keyObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddKeyNameMapping(System::String ^ keyName, System::Object ^ keyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="keyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <span data-ttu-id="48053-162">要映射到 <c>keyObject</c> 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-162">The name to map to <c>keyObject</c>.</span>
          </span>
        </param>
        <param name="keyObject">
          <span data-ttu-id="48053-163">要映射到 <c>keyName</c> 的对称密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-163">The symmetric key to map to <c>keyName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48053-164">定义密钥名称和对称密钥或非对称密钥之间的映射。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-164">Defines a mapping between a key name and a symmetric key or an asymmetric key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-165"><xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A>方法允许您将对称密钥或非对称密钥映射到的字符串名称。</span><span class="sxs-lookup"><span data-stu-id="48053-165">The <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method allows you to map a symmetric key or an asymmetric key to a string name.</span></span> <span data-ttu-id="48053-166">此方法将添加的值`keyName`和`keyObject`参数到有效的密钥的表名称映射。</span><span class="sxs-lookup"><span data-stu-id="48053-166">This method adds the values of the `keyName` and `keyObject` parameters to a table of valid key name mappings.</span></span>  
  
 <span data-ttu-id="48053-167">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A>方法来清除密钥名称映射表。</span><span class="sxs-lookup"><span data-stu-id="48053-167">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings%2A> method to clear the key name mappings table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-168">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-168">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-169">此示例在解密方法用于查找适当的解密密钥加密 XML 文档中嵌入的密钥名称。</span><span class="sxs-lookup"><span data-stu-id="48053-169">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-170">
            <paramref name="keyName" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-170">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="48053-171">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-171">-or-</span>
          </span>
          <span data-ttu-id="48053-172">
            <paramref name="keyObject" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-172">The value of the <paramref name="keyObject" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="48053-173">
            <paramref name="keyObject" /> 参数的值不是 RSA 算法，也不是对称密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-173">The value of the <paramref name="keyObject" /> parameter is not an RSA algorithm or a symmetric key.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearKeyNameMappings">
      <MemberSignature Language="C#" Value="public void ClearKeyNameMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearKeyNameMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ClearKeyNameMappings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearKeyNameMappings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearKeyNameMappings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48053-174">重置所有密钥名称映射。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-174">Resets all key name mapping.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-175">使用此方法清除你使用设置的所有密钥名称映射<xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="48053-175">Use this method to clear all key name mapping that you have set using the <xref:System.Security.Cryptography.Xml.EncryptedXml.AddKeyNameMapping%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptData">
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public byte[] DecryptData (System.Security.Cryptography.Xml.EncryptedData encryptedData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DecryptData(class System.Security.Cryptography.Xml.EncryptedData encryptedData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptData(System.Security.Cryptography.Xml.EncryptedData,System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ DecryptData(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="48053-176">要解密的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-176">The data to decrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <summary>
          <span data-ttu-id="48053-177">使用指定的对称算法解密 <see langword="&lt;EncryptedData&gt;" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-177">Decrypts an <see langword="&lt;EncryptedData&gt;" /> element using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48053-178">一个字节数组，包含已解密的原始明文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-178">A byte array that contains the raw decrypted plain text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-179">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>方法以解密<xref:System.Security.Cryptography.Xml.EncryptedData>使用对称密钥的元素。</span><span class="sxs-lookup"><span data-stu-id="48053-179">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method to decrypt an <xref:System.Security.Cryptography.Xml.EncryptedData> element using a symmetric key.</span></span>  
  
 <span data-ttu-id="48053-180">请注意，<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>方法仅解密顶级 <`EncryptedData`> 标记。</span><span class="sxs-lookup"><span data-stu-id="48053-180">Note that the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method only decrypts top-level <`EncryptedData`> tags.</span></span>  <span data-ttu-id="48053-181">在情况下其中一个或多个 <`EncryptedData`> 标记已加密，并且包含在更高级别的 <`EncryptedData`> 标记中，你可以调用<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>为每个单独的方法。</span><span class="sxs-lookup"><span data-stu-id="48053-181">In cases where one or more <`EncryptedData`> tags have been encrypted and are contained within higher level <`EncryptedData`> tags, you can call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method separately for each one.</span></span>  <span data-ttu-id="48053-182">请参阅<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>有关代码示例的方法。</span><span class="sxs-lookup"><span data-stu-id="48053-182">See the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method for a code example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-183">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-183">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-184">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-184">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-185">
            <paramref name="encryptedData" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-185">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="48053-186">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-186">-or-</span>
          </span>
          <span data-ttu-id="48053-187">
            <paramref name="symmetricAlgorithm" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-187">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptDocument">
      <MemberSignature Language="C#" Value="public void DecryptDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DecryptDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument" />
      <MemberSignature Language="VB.NET" Value="Public Sub DecryptDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DecryptDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="48053-188">解密 XML 文档中所有在初始化 <see langword="&lt;EncryptedData&gt;" /> 类期间指定的 <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-188">Decrypts all <see langword="&lt;EncryptedData&gt;" /> elements of the XML document that were specified during initialization of the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-189"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>方法来解密所有`<EncryptedData>`在初始化期间加载 XML 文档的元素。</span><span class="sxs-lookup"><span data-stu-id="48053-189">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts all `<EncryptedData>` elements of the XML document loaded during initialization.</span></span> <span data-ttu-id="48053-190">调用此方法之后, 所有`<EncryptedData>`文档中的元素替换为纯文本版本。</span><span class="sxs-lookup"><span data-stu-id="48053-190">After you call this method, all `<EncryptedData>` elements in the document are replaced with plain text versions.</span></span>  
  
 <span data-ttu-id="48053-191"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>方法仅解密顶级`<EncryptedData>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-191">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only top-level `<EncryptedData>` elements.</span></span>  <span data-ttu-id="48053-192">如果你需要解密超级加密的文档 （不止一次加密的文档），则必须调用<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>方法重复直至将所有`<EncryptedData>`已解密元素。</span><span class="sxs-lookup"><span data-stu-id="48053-192">If you need to decrypt a super-encrypted document (a document that is encrypted more than once), you must call the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method repeatedly until all the `<EncryptedData>` elements have been decrypted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="48053-193"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A>方法对仅有效的 XML 数据进行解密。</span><span class="sxs-lookup"><span data-stu-id="48053-193">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument%2A> method decrypts only valid XML data.</span></span> <span data-ttu-id="48053-194">若要解密的任意数据，使用<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="48053-194">To decrypt arbitrary data, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptData%2A> method.</span></span>  
  
 <span data-ttu-id="48053-195">若要使用 XML 加密 X.509 证书，你必须具有 Microsoft 增强加密提供程序安装和 X.509 证书必须使用增强的提供程序。</span><span class="sxs-lookup"><span data-stu-id="48053-195">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="48053-196">如果你没有 Microsoft 增强加密提供程序安装或 X.509 证书不使用增强的提供程序， <xref:System.Security.Cryptography.CryptographicException> "未知错误"时，将引发解密 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-196">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-197">下面的代码示例演示如何使用非对称密钥的 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-197">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="48053-198">此示例创建一个对称会话密钥进行加密文档，然后使用非对称密钥在 XML 文档中嵌入会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-198">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-199">下面的代码示例演示如何使用 X.509 证书 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-199">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="48053-200">此示例创建一个对称会话密钥进行加密文档，，然后使用 X.509 证书嵌入到 XML 文档中的会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-200">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-201">下面的代码示例演示如何解密高级别 <`EncryptedData`> 包含另一个加密的标记 <`EncryptedData`> 标记。</span><span class="sxs-lookup"><span data-stu-id="48053-201">The following code example demonstrates how to decrypt a high level <`EncryptedData`> tag that contains another encrypted <`EncryptedData`> tag.</span></span>  
  
 [!code-csharp[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/csharp/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/Cryptography.XML.EncryptedDocument.DecryptDocument-SuperEncryption/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="48053-202">未找到用于解密文档的加密密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-202">The cryptographic key used to decrypt the document was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptEncryptedKey">
      <MemberSignature Language="C#" Value="public virtual byte[] DecryptEncryptedKey (System.Security.Cryptography.Xml.EncryptedKey encryptedKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] DecryptEncryptedKey(class System.Security.Cryptography.Xml.EncryptedKey encryptedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(System.Security.Cryptography.Xml.EncryptedKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ DecryptEncryptedKey(System::Security::Cryptography::Xml::EncryptedKey ^ encryptedKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Security.Cryptography.Xml.EncryptedKey" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="48053-203">包含要检索的密钥的 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-203">The <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> object that contains the key to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48053-204">确定由 <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> 元素表示的密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-204">Determines the key represented by the <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48053-205">一个包含密钥的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-205">A byte array that contains the key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-206"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A>方法对中包含加密的密钥进行解密`<EncryptedKey>`XML 文档的元素。</span><span class="sxs-lookup"><span data-stu-id="48053-206">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span>  
  
 <span data-ttu-id="48053-207">此递归方法查找所表示的密钥<xref:System.Security.Cryptography.Xml.EncryptedKey>对象。</span><span class="sxs-lookup"><span data-stu-id="48053-207">This recursive method finds the key represented by the <xref:System.Security.Cryptography.Xml.EncryptedKey> object.</span></span> <span data-ttu-id="48053-208">请注意，<xref:System.Security.Cryptography.Xml.EncryptedKey>对象可以包含另一个<xref:System.Security.Cryptography.Xml.EncryptedKey>对象，它指定其<xref:System.Security.Cryptography.Xml.KeyInfo>值。</span><span class="sxs-lookup"><span data-stu-id="48053-208">Note that an <xref:System.Security.Cryptography.Xml.EncryptedKey> object can contain another <xref:System.Security.Cryptography.Xml.EncryptedKey> object that specifies its <xref:System.Security.Cryptography.Xml.KeyInfo> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-209">
            <paramref name="encryptedKey" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-209">The value of the <paramref name="encryptedKey" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="48053-210">
            <paramref name="encryptedKey" /> 参数的值不是三重 DES Key Wrap 算法或高级加密标准 (AES) Key Wrap 算法（也称 Rijndael）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-210">The value of the <paramref name="encryptedKey" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DecryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="48053-211">解密 <see langword="&lt;EncryptedKey&gt;" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-211">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-212">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>方法以解密`<EncryptedKey>`元素和检索用于解密该元素的键。</span><span class="sxs-lookup"><span data-stu-id="48053-212">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method to decrypt an `<EncryptedKey>` element and retrieve the key used to decrypt that element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="48053-213">一个表示加密 <see langword="&lt;EncryptedKey&gt;" /> 元素的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-213">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <summary>
          <span data-ttu-id="48053-214">使用对称算法解密 <see langword="&lt;EncryptedKey&gt;" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-214">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using a symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48053-215">包含纯文本密钥的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-215">A byte array that contains the plain text key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-216"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>方法对中包含加密的密钥进行解密`<EncryptedKey>`XML 文档的元素。</span><span class="sxs-lookup"><span data-stu-id="48053-216">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="48053-217">此方法接受的值`symmetricAlgorithm`表示三重 DES 算法或 AES 密钥换行算法 （也称为 Rijndael） 的参数。</span><span class="sxs-lookup"><span data-stu-id="48053-217">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-218">
            <paramref name="keyData" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-218">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="48053-219">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-219">-or-</span>
          </span>
          <span data-ttu-id="48053-220">
            <paramref name="symmetricAlgorithm" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-220">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="48053-221">
            <paramref name="symmetricAlgorithm" /> 元素的值不是三重 DES Key Wrap 算法或高级加密标准 (AES) Key Wrap 算法（也称 Rijndael）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-221">The value of the <paramref name="symmetricAlgorithm" /> element is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptKey">
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static byte[] DecryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] DecryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ DecryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="48053-222">一个表示加密 <see langword="&lt;EncryptedKey&gt;" /> 元素的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-222">An array of bytes that represents an encrypted <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
        </param>
        <param name="rsa">
          <span data-ttu-id="48053-223">用于解密 <c>keyData</c> 的非对称密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-223">The asymmetric key used to decrypt <c>keyData</c>.</span>
          </span>
        </param>
        <param name="useOAEP">To be added.</param>
        <param name="fOAEP">To be added.</param>
        <summary>
          <span data-ttu-id="48053-224">使用非对称算法解密 <see langword="&lt;EncryptedKey&gt;" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-224">Decrypts an <see langword="&lt;EncryptedKey&gt;" /> element using an asymmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48053-225">包含纯文本密钥的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-225">A byte array that contains the plain text key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-226"><xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A>方法对中包含加密的密钥进行解密`<EncryptedKey>`XML 文档的元素。</span><span class="sxs-lookup"><span data-stu-id="48053-226">The <xref:System.Security.Cryptography.Xml.EncryptedXml.DecryptKey%2A> method decrypts an encrypted key contained within the `<EncryptedKey>` element of an XML document.</span></span> <span data-ttu-id="48053-227">此方法接受的值`rsa`表示 RSA PKCS #1 v1.5 算法或 RSA PKCS #1 类型 2 算法 （也称为 OAEP 填充） 的参数。</span><span class="sxs-lookup"><span data-stu-id="48053-227">This method accepts a value for the `rsa` parameter that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP padding).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-228">
            <paramref name="keyData" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-228">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="48053-229">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-229">-or-</span>
          </span>
          <span data-ttu-id="48053-230">
            <paramref name="rsa" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-230">The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DocumentEvidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence DocumentEvidence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence DocumentEvidence" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentEvidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ DocumentEvidence { System::Security::Policy::Evidence ^ get(); void set(System::Security::Policy::Evidence ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-231">获取或设置 <see cref="T:System.Xml.XmlDocument" /> 对象的证据，<see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> 对象从该对象构造。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-231">Gets or sets the evidence of the <see cref="T:System.Xml.XmlDocument" /> object from which the <see cref="T:System.Security.Cryptography.Xml.EncryptedXml" /> object is constructed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="48053-232">一个 <see cref="T:System.Security.Policy.Evidence" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-232">An <see cref="T:System.Security.Policy.Evidence" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-233">如果 XML 文档用于创建<xref:System.Security.Cryptography.Xml.EncryptedXml>对象中的任何安全证据，应添加到的证据<xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="48053-233">If the XML document used to create the <xref:System.Security.Cryptography.Xml.EncryptedXml> object has any security evidence, you should add the evidence to the <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> property.</span></span>  <span data-ttu-id="48053-234">如果你未设置此属性，任何关联<xref:System.Security.Cryptography.Xml.CipherReference>对象将不被取消引用因为它们将不授予所需的权限集。</span><span class="sxs-lookup"><span data-stu-id="48053-234">If you do not set this property, any associated <xref:System.Security.Cryptography.Xml.CipherReference> objects will not be dereferenced because they will not be granted the required permission set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-235">获取或设置 XML 加密所用的编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-235">Gets or sets the encoding used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="48053-236">一个 <see cref="T:System.Text.Encoding" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-236">An <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-237">Utf-8 编码是将的默认编码为 XML 加密。</span><span class="sxs-lookup"><span data-stu-id="48053-237">UTF-8 encoding is the default encoding for XML encryption.</span></span> <span data-ttu-id="48053-238">你可以使用此属性指定其他类型的编码从<xref:System.Text.Encoding>类，例如 utf-16 或 ASCII。</span><span class="sxs-lookup"><span data-stu-id="48053-238">You can use this property to specify other types of encoding from the <xref:System.Text.Encoding> class, such as UTF-16 or ASCII.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Encrypt">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="48053-239">使用指定的证书或密钥映射表中的密钥对元素的外部 XML 进行加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-239">Encrypts the outer XML of an element using the specified certificate or key in the key mapping table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="48053-240">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-240">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-241">下面的代码示例演示如何使用 X.509 证书 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-241">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="48053-242">此示例创建一个对称会话密钥进行加密文档，，然后使用 X.509 证书嵌入到 XML 文档中的会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-242">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, certificate As X509Certificate2) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="48053-243">要加密的 XML 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-243">The XML element to encrypt.</span>
          </span>
        </param>
        <param name="certificate">
          <span data-ttu-id="48053-244">要用于加密的 X.509 证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-244">The X.509 certificate to use for encryption.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48053-245">使用指定的 X.509 证书对元素的外部 XML 进行加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-245">Encrypts the outer XML of an element using the specified X.509 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48053-246">一个表示已加密 XML 数据的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-246">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> element that represents the encrypted XML data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-247"><xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A>方法是一种简便的方式使用证书对元素的外部 XML 进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-247">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method is a convenient way to encrypt the outer XML of an element using a certificate.</span></span> <span data-ttu-id="48053-248">此方法生成 256 位高级加密标准 (AES) 会话密钥加密的 XML 元素然后进行加密和签名 AES 密钥使用<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>对象。</span><span class="sxs-lookup"><span data-stu-id="48053-248">This method generates a 256-bit Advanced Encryption Standard (AES) session key to encrypt an XML element and then encrypts and signs the AES key using the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span> <span data-ttu-id="48053-249"><xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A>方法然后返回得到的 XML 作为<xref:System.Security.Cryptography.Xml.EncryptedData>元素。</span><span class="sxs-lookup"><span data-stu-id="48053-249">The <xref:System.Security.Cryptography.Xml.EncryptedXml.Encrypt%2A> method then returns the resulting XML as an <xref:System.Security.Cryptography.Xml.EncryptedData> element.</span></span>  
  
 <span data-ttu-id="48053-250">如果你需要更好地控制加密，因此你可以加密将信息放入`<CipherReference>`元素或指定是否应将整个 XML 元素或只是其内容加密，使用<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="48053-250">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="48053-251">若要使用 XML 加密 X.509 证书，你必须具有 Microsoft 增强加密提供程序安装和 X.509 证书必须使用增强的提供程序。</span><span class="sxs-lookup"><span data-stu-id="48053-251">To use XML Encryption with X.509 certificates, you must have the Microsoft Enhanced Cryptographic Provider installed and the X.509 certificate must use the Enhanced Provider.</span></span> <span data-ttu-id="48053-252">如果你没有 Microsoft 增强加密提供程序安装或 X.509 证书不使用增强的提供程序， <xref:System.Security.Cryptography.CryptographicException> "未知错误"时，将引发解密 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-252">If you do not have the Microsoft Enhanced Cryptographic Provider installed or the X.509 certificate does not use the Enhanced Provider, a <xref:System.Security.Cryptography.CryptographicException> with an "Unknown Error" will be thrown when you decrypt an XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-253">下面的代码示例演示如何使用 X.509 证书 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-253">The following code example demonstrates how to encrypt an XML document using an X.509 certificate.</span></span> <span data-ttu-id="48053-254">此示例创建一个对称会话密钥进行加密文档，，然后使用 X.509 证书嵌入到 XML 文档中的会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-254">This example creates a symmetric session key to encrypt the document and then uses the X.509 certificate to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CPP/Cryptography.XML.XMLEncMapKeyX509.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKeyX509#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKeyX509/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-255">
            <paramref name="inputElement" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-255">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="48053-256">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-256">-or-</span>
          </span>
          <span data-ttu-id="48053-257">
            <paramref name="certificate" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-257">The value of the <paramref name="certificate" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="48053-258">
            <paramref name="certificate" /> 参数的值不表示 RSA 密钥算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-258">The value of the <paramref name="certificate" /> parameter does not represent an RSA key algorithm.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.EncryptedData Encrypt (System.Xml.XmlElement inputElement, string keyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Xml.EncryptedData Encrypt(class System.Xml.XmlElement inputElement, string keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.Encrypt(System.Xml.XmlElement,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (inputElement As XmlElement, keyName As String) As EncryptedData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Xml::EncryptedData ^ Encrypt(System::Xml::XmlElement ^ inputElement, System::String ^ keyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptedData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="keyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="48053-259">要加密的 XML 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-259">The XML element to encrypt.</span>
          </span>
        </param>
        <param name="keyName">
          <span data-ttu-id="48053-260">可在密钥映射表中找到的密钥名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-260">A key name that can be found in the key mapping table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48053-261">使用在密钥映射表中指定的密钥对元素的外部 XML 进行加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-261">Encrypts the outer XML of an element using the specified key in the key mapping table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48053-262">一个表示已加密 XML 数据的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-262">An <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that represents the encrypted XML data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-263">此方法是元素的一种简便的方式使用密钥名称的外部 XML 进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-263">This method is a convenient way to encrypt the outer XML of an element using a key name.</span></span> <span data-ttu-id="48053-264">如果你需要更好地控制加密，因此你可以加密将信息放入`<CipherReference>`元素或指定是否应将整个 XML 元素或只是其内容加密，使用<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="48053-264">If you need more control over the encryption, so you can place the encrypted information into a `<CipherReference>` element or specify whether the entire XML element or just its contents should be encrypted, use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptData%2A> method overloads.</span></span>  
  
 <span data-ttu-id="48053-265">有关所有受支持的算法的列表，请参阅与关联的常量字段的列表<xref:System.Security.Cryptography.Xml.EncryptedXml>类。</span><span class="sxs-lookup"><span data-stu-id="48053-265">For a list of all supported algorithms, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-266">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-266">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CPP/Cryptography.XML.XMLEncMinimalDecrypt.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecrypt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecrypt/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-267">
            <paramref name="inputElement" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-267">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="48053-268">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-268">-or-</span>
          </span>
          <span data-ttu-id="48053-269">
            <paramref name="keyName" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-269">The value of the <paramref name="keyName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="48053-270">
            <paramref name="keyName" /> 参数的值与注册的密钥名称对不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-270">The value of the <paramref name="keyName" /> parameter does not match a registered key name pair.</span>
          </span>
          <span data-ttu-id="48053-271">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-271">-or-</span>
          </span>
          <span data-ttu-id="48053-272">不支持 <paramref name="keyName" /> 参数描述的加密密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-272">The cryptographic key described by the <paramref name="keyName" /> parameter is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptData">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="48053-273">使用对称算法对 XML 数据加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-273">Encrypts XML data using a symmetric algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="48053-274">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-274">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-275">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-275">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-276">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-276">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-277">此示例在解密方法用于查找适当的解密密钥加密 XML 文档中嵌入的密钥名称。</span><span class="sxs-lookup"><span data-stu-id="48053-277">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-278">下面的代码示例演示如何使用非对称密钥的 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-278">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="48053-279">此示例创建一个对称会话密钥进行加密文档，然后使用非对称密钥在 XML 文档中嵌入会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-279">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plaintext, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plaintext, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plaintext, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (byte[] plainText, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(unsigned int8[] plainText, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (plainText As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(cli::array &lt;System::Byte&gt; ^ plainText, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="plaintext" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="plainText" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="plainText">To be added.</param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <summary>
          <span data-ttu-id="48053-280">使用指定的对称算法对指定的字节数组中的数据进行加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-280">Encrypts data in the specified byte array using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48053-281">加密数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-281">A byte array of encrypted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-282">返回的字节数组可以放入`<CipherValue>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-282">The returned byte array can be placed into a `<CipherValue>` element.</span></span> <span data-ttu-id="48053-283">此方法假定数据中指定`plaintext`参数是一个包含 XML 数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="48053-283">This method assumes that the data specified in the `plaintext` parameter is a byte array that contains XML data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-284">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-284">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-285">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-285">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-286">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-286">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-287">此示例在解密方法用于查找适当的解密密钥加密 XML 文档中嵌入的密钥名称。</span><span class="sxs-lookup"><span data-stu-id="48053-287">This example embeds a key name in the encrypted XML document that the decrypting method uses to find the appropriate decryption key.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CPP/Cryptography.XML.XMLEncMapKey.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMapKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMapKey/VB/sample.vb#1)]  
  
 <span data-ttu-id="48053-288">下面的代码示例演示如何使用非对称密钥的 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-288">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="48053-289">此示例创建一个对称会话密钥进行加密文档，然后使用非对称密钥在 XML 文档中嵌入会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-289">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-290">
            <paramref name="plaintext" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-290">The value of the <paramref name="plaintext" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="48053-291">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-291">-or-</span>
          </span>
          <span data-ttu-id="48053-292">
            <paramref name="symmetricAlgorithm" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-292">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="48053-293">未能使用指定的参数加密此数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-293">The data could not be encrypted using the specified parameters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptData">
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm, bool content) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm, bool content);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public byte[] EncryptData (System.Xml.XmlElement inputElement, System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EncryptData(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.SymmetricAlgorithm symAlg, bool content) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptData(System.Xml.XmlElement,System.Security.Cryptography.SymmetricAlgorithm,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Function EncryptData (inputElement As XmlElement, symAlg As SymmetricAlgorithm, content As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EncryptData(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg, bool content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="content" Type="System.Boolean" Index="2" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="48053-294">要加密的元素或其内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-294">The element or its contents to encrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <param name="content">
          <span data-ttu-id="48053-295">如果仅加密元素的内容，则为 <see langword="true" />；如果要加密整个元素，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-295">
              <see langword="true" /> to encrypt only the contents of the element; <see langword="false" /> to encrypt the entire element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48053-296">使用指定的对称算法加密指定的元素或其内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-296">Encrypts the specified element or its contents using the specified symmetric algorithm.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48053-297">一个包含加密数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-297">A byte array that contains the encrypted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-298">返回的字节数组数据是值`<CipherValue>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-298">The returned byte array data is the value of the `<CipherValue>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-299">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-299">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-300">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-300">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-301">
            <paramref name="inputElement" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-301">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="48053-302">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-302">-or-</span>
          </span>
          <span data-ttu-id="48053-303">
            <paramref name="symmetricAlgorithm" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-303">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EncryptKey">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="48053-304">对接收方用来解密 <see langword="&lt;EncryptedData&gt;" /> 元素的密钥进行加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-304">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-305">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A>方法接收方用来解密的密钥进行加密`<EncryptedData>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-305">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="48053-306">此方法会将中的加密的密钥`<EncryptedKey>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-306">This method places the encrypted key within an `<EncryptedKey>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-307">下面的代码示例演示如何使用非对称密钥的 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-307">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="48053-308">此示例创建一个对称会话密钥进行加密文档，然后使用非对称密钥在 XML 文档中嵌入会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-308">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symmetricAlgorithm) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symmetricAlgorithm);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.SymmetricAlgorithm symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.SymmetricAlgorithm symAlg) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.SymmetricAlgorithm)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncryptKey (keyData As Byte(), symAlg As SymmetricAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::SymmetricAlgorithm ^ symAlg);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="symmetricAlgorithm" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlg" Type="System.Security.Cryptography.SymmetricAlgorithm" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="48053-309">要加密的密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-309">The key to encrypt.</span>
          </span>
        </param>
        <param name="symmetricAlgorithm">To be added.</param>
        <param name="symAlg">To be added.</param>
        <summary>
          <span data-ttu-id="48053-310">使用对称算法加密密钥，收件人使用此算法解密 <see langword="&lt;EncryptedData&gt;" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-310">Encrypts a key using a symmetric algorithm that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48053-311">一个字节数组，表示 <paramref name="keyData" /> 参数的加密值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-311">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-312">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A>方法接收方用来解密的密钥进行加密`<EncryptedData>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-312">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="48053-313">此方法接受的值`symmetricAlgorithm`表示三重 DES 算法或 AES 密钥换行算法 （也称为 Rijndael） 的参数。</span><span class="sxs-lookup"><span data-stu-id="48053-313">This method accepts a value for the `symmetricAlgorithm` parameter that represents either the Triple DES algorithm or the AES key wrap algorithm (also called Rijndael).</span></span>  
  
 <span data-ttu-id="48053-314">请注意，此方法将不会自动施加加密的密钥放`<EncryptedKey>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-314">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span>  <span data-ttu-id="48053-315">你必须手动创建`<EncryptedKey>`文档中的元素。</span><span class="sxs-lookup"><span data-stu-id="48053-315">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-316">
            <paramref name="keyData" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-316">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="48053-317">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-317">-or-</span>
          </span>
          <span data-ttu-id="48053-318">
            <paramref name="symmetricAlgorithm" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-318">The value of the <paramref name="symmetricAlgorithm" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="48053-319">
            <paramref name="symmetricAlgorithm" /> 参数的值不是三重 DES Key Wrap 算法或高级加密标准 (AES) Key Wrap 算法（也称 Rijndael）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-319">The value of the <paramref name="symmetricAlgorithm" /> parameter is not the Triple DES Key Wrap algorithm or the Advanced Encryption Standard (AES) Key Wrap algorithm (also called Rijndael).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptKey">
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool useOAEP) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool useOAEP);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public static byte[] EncryptKey (byte[] keyData, System.Security.Cryptography.RSA rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncryptKey(unsigned int8[] keyData, class System.Security.Cryptography.RSA rsa, bool fOAEP) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey(System.Byte[],System.Security.Cryptography.RSA,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ EncryptKey(cli::array &lt;System::Byte&gt; ^ keyData, System::Security::Cryptography::RSA ^ rsa, bool fOAEP);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Byte[]" Index="0" />
        <Parameter Name="rsa" Type="System.Security.Cryptography.RSA" Index="1" />
        <Parameter Name="useOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="fOAEP" Type="System.Boolean" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="48053-320">要加密的密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-320">The key to encrypt.</span>
          </span>
        </param>
        <param name="rsa">
          <span data-ttu-id="48053-321">用于加密 <c>keyData</c> 的非对称密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-321">The asymmetric key used to encrypt <c>keyData</c>.</span>
          </span>
        </param>
        <param name="useOAEP">To be added.</param>
        <param name="fOAEP">To be added.</param>
        <summary>
          <span data-ttu-id="48053-322">对接收方用来解密 <see langword="&lt;EncryptedData&gt;" /> 元素的密钥进行加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-322">Encrypts the key that a recipient uses to decrypt an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48053-323">一个字节数组，表示 <paramref name="keyData" /> 参数的加密值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-323">A byte array that represents the encrypted value of the <paramref name="keyData" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-324">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A>方法接收方用来解密的密钥进行加密`<EncryptedData>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-324">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.EncryptKey%2A> method to encrypt the key that a recipient uses to decrypt an `<EncryptedData>` element.</span></span> <span data-ttu-id="48053-325">此方法接受的值`rsa`表示 RSA PKCS #1 v1.5 算法或 RSA PKCS #1 类型 2 算法 （也称为 OAEP）。</span><span class="sxs-lookup"><span data-stu-id="48053-325">This method accepts a value for `rsa` that represents either the RSA PKCS#1 v1.5 algorithm or the RSA PKCS#1 type 2 algorithm (also called OAEP).</span></span>  
  
 <span data-ttu-id="48053-326">请注意，此方法将不会自动施加加密的密钥放`<EncryptedKey>`元素。</span><span class="sxs-lookup"><span data-stu-id="48053-326">Note that this method does not automatically place the encrypted key within an `<EncryptedKey>` element.</span></span>  <span data-ttu-id="48053-327">你必须手动创建`<EncryptedKey>`文档中的元素。</span><span class="sxs-lookup"><span data-stu-id="48053-327">You must manually create the `<EncryptedKey>` element within your document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-328">下面的代码示例演示如何使用非对称密钥的 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-328">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="48053-329">此示例创建一个对称会话密钥进行加密文档，然后使用非对称密钥在 XML 文档中嵌入会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-329">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-330">
            <paramref name="keyData" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-330">The value of the <paramref name="keyData" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="48053-331">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-331">-or-</span>
          </span>
          <span data-ttu-id="48053-332">
            <paramref name="rsa" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-332">The value of the <paramref name="rsa" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionIV">
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public virtual byte[] GetDecryptionIV (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDecryptionIV(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionIV(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDecryptionIV(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="48053-333">包含要检索的初始化向量 (IV) 的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-333">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the initialization vector (IV) to retrieve.</span>
          </span>
        </param>
        <param name="symmetricAlgorithmUri">To be added.</param>
        <param name="symAlgUri">To be added.</param>
        <summary>
          <span data-ttu-id="48053-334">从 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象中检索解密初始化向量 (IV)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-334">Retrieves the decryption initialization vector (IV) from an <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48053-335">一个包含解密初始化向量 (IV) 的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-335">A byte array that contains the decryption initialization vector (IV).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-336">给定<xref:System.Security.Cryptography.Xml.EncryptedData>对象，此方法检索解密初始化向量 (IV)。</span><span class="sxs-lookup"><span data-stu-id="48053-336">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method retrieves the decryption initialization vector (IV).</span></span> <span data-ttu-id="48053-337">默认行为以第一个字节的形式检索 IV<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>字节数组。</span><span class="sxs-lookup"><span data-stu-id="48053-337">The default behavior retrieves the IV as the first bytes of the <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> byte array.</span></span>  
  
 <span data-ttu-id="48053-338">有关支持的统一资源标识符 (URI) 值的列表`symmetricAlgorithmUri`参数，与关联的常量字段的列表，请参阅<xref:System.Security.Cryptography.Xml.EncryptedXml>类。</span><span class="sxs-lookup"><span data-stu-id="48053-338">For a list of Uniform Resource Identifier (URI) values supported by the `symmetricAlgorithmUri` parameter, see the list of constant fields associated with the <xref:System.Security.Cryptography.Xml.EncryptedXml> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-339">
            <paramref name="encryptedData" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-339">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="48053-340">
            <paramref name="encryptedData" /> 参数的值有一个 NULL <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-340">The value of the <paramref name="encryptedData" /> parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span>
          </span>
          <span data-ttu-id="48053-341">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-341">-or-</span>
          </span>
          <span data-ttu-id="48053-342">
            <paramref name="symmetricAlgorithmUrisymAlgUri" /> 参数的值不是受支持的算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-342">The value of the <paramref name="symmetricAlgorithmUrisymAlgUri" /> parameter is not a supported algorithm.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionKey">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symmetricAlgorithmUri) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symmetricAlgorithmUri);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey (System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetDecryptionKey(class System.Security.Cryptography.Xml.EncryptedData encryptedData, string symAlgUri) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(System.Security.Cryptography.Xml.EncryptedData,System.String)" FrameworkAlternate="xamarinmac-3.0;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::SymmetricAlgorithm ^ GetDecryptionKey(System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, System::String ^ symAlgUri);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" Index="0" />
        <Parameter Name="symmetricAlgorithmUri" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="symAlgUri" Type="System.String" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="48053-343">包含要检索的解密密钥的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-343">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object that contains the decryption key to retrieve.</span>
          </span>
        </param>
        <param name="symmetricAlgorithmUri">To be added.</param>
        <param name="symAlgUri">To be added.</param>
        <summary>
          <span data-ttu-id="48053-344">从指定的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象中检索解密密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-344">Retrieves the decryption key from the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48053-345">一个与解密密钥关联的 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-345">A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> object associated with the decryption key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-346">给定<xref:System.Security.Cryptography.Xml.EncryptedData>对象，此方法查找可用来检索纯文本数据的解密密钥。</span><span class="sxs-lookup"><span data-stu-id="48053-346">Given an <xref:System.Security.Cryptography.Xml.EncryptedData> object, this method looks for the decryption key that can be used to retrieve the plain text data.</span></span> <span data-ttu-id="48053-347">如果指定的密钥名称，则该方法中寻找对称算法或密钥名称与关联的密钥名称映射中定义的非对称算法。</span><span class="sxs-lookup"><span data-stu-id="48053-347">If a key name is specified, the method looks for the symmetric algorithm or asymmetric algorithm that is associated with the key name as defined in the key name mapping.</span></span> <span data-ttu-id="48053-348">否则为如果检索方法或<xref:System.Security.Cryptography.Xml.EncryptedKey>指定对象，该方法加载<xref:System.Security.Cryptography.Xml.EncryptedKey>对象并调用<xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="48053-348">Otherwise, if a retrieval method or an <xref:System.Security.Cryptography.Xml.EncryptedKey> object is specified, the method loads the <xref:System.Security.Cryptography.Xml.EncryptedKey> object and calls the <xref:System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-349">
            <paramref name="encryptedData" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-349">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="48053-350">encryptedData 参数有一个 NULL <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-350">The encryptedData parameter has an <see cref="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" /> property that is null.</span>
          </span>
          <span data-ttu-id="48053-351">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-351">-or-</span>
          </span>
          <span data-ttu-id="48053-352">无法使用指定的参数检索加密密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-352">The encrypted key cannot be retrieved using the specified parameters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdElement">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetIdElement(class System.Xml.XmlDocument document, string idValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement(System.Xml.XmlDocument,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdElement (document As XmlDocument, idValue As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlElement ^ GetIdElement(System::Xml::XmlDocument ^ document, System::String ^ idValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Xml.XmlDocument" />
        <Parameter Name="idValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="48053-353">一个 <see cref="T:System.Xml.XmlDocument" /> 对象，包含具有 ID 值的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-353">An <see cref="T:System.Xml.XmlDocument" /> object that contains an element with an ID value.</span>
          </span>
        </param>
        <param name="idValue">
          <span data-ttu-id="48053-354">一个表示 ID 值的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-354">A string that represents the ID value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48053-355">确定如何解析内部统一资源标识符 (URI) 引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-355">Determines how to resolve internal Uniform Resource Identifier (URI) references.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48053-356">一个包含 ID 的 <see cref="T:System.Xml.XmlElement" /> 对象，此 ID 指示如何解析内部统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-356">An <see cref="T:System.Xml.XmlElement" /> object that contains an ID indicating how internal Uniform Resource Identifiers (URIs) are to be resolved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-357"><xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A>方法确定如何解析内部统一资源标识符 (Uri)。</span><span class="sxs-lookup"><span data-stu-id="48053-357">The <xref:System.Security.Cryptography.Xml.EncryptedXml.GetIdElement%2A> method determines how to resolve internal Uniform Resource Identifiers (URIs).</span></span> <span data-ttu-id="48053-358">它查找具有指定值的元素，或具有 ID 属性具有指定的值的元素。</span><span class="sxs-lookup"><span data-stu-id="48053-358">It looks for elements with a specified value or for elements with an ID attribute that has a specified value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CipherMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CipherMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As CipherMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CipherMode Mode { System::Security::Cryptography::CipherMode get(); void set(System::Security::Cryptography::CipherMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-359">获取或设置 XML 加密所用的密码模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-359">Gets or sets the cipher mode used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="48053-360">
            <see cref="T:System.Security.Cryptography.CipherMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-360">One of the <see cref="T:System.Security.Cryptography.CipherMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-361">密码块链接 (CBC) 模式是 XML 加密的默认密码模式。</span><span class="sxs-lookup"><span data-stu-id="48053-361">Cipher Block Chaining (CBC) mode is the default cipher mode for XML encryption.</span></span> <span data-ttu-id="48053-362">你可以使用此属性指定的其他密码模式<xref:System.Security.Cryptography.CipherMode>枚举，如密码反馈 (CFB) 模式。</span><span class="sxs-lookup"><span data-stu-id="48053-362">You can use this property to specify other cipher modes of the <xref:System.Security.Cryptography.CipherMode> enumeration, such as Cipher Feedback (CFB) mode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-363">获取或设置 XML 加密所用的填充模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-363">Gets or sets the padding mode used for XML encryption.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="48053-364">指定加密所用的填充类型的 <see cref="T:System.Security.Cryptography.PaddingMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-364">One of the <see cref="T:System.Security.Cryptography.PaddingMode" /> values that specifies the type of padding used for encryption.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-365">ISO 10126 填充状态是 XML 加密的默认填充模式。</span><span class="sxs-lookup"><span data-stu-id="48053-365">ISO-10126 padding is the default padding mode for XML encryption.</span></span> <span data-ttu-id="48053-366">你可以使用此属性指定的其他填充模式<xref:System.Security.Cryptography.PaddingMode>枚举，如 ANSI X9.23 或 PKCS #5。</span><span class="sxs-lookup"><span data-stu-id="48053-366">You can use this property to specify other padding modes of the <xref:System.Security.Cryptography.PaddingMode> enumeration, such as ANSI X9.23 or PKCS#5.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recipient">
      <MemberSignature Language="C#" Value="public string Recipient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Recipient" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Recipient" />
      <MemberSignature Language="VB.NET" Value="Public Property Recipient As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Recipient { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-367">获取或设置加密密钥信息的收件人。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-367">Gets or sets the recipient of the encrypted key information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="48053-368">加密密钥信息的收件人。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-368">The recipient of the encrypted key information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-369">你可以访问<xref:System.Security.Cryptography.Xml.EncryptedXml>通过检查引用的密钥名称对象<xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="48053-369">You can access the <xref:System.Security.Cryptography.Xml.EncryptedXml> object referenced by a key name by examining the <xref:System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName%2A> property.</span></span>  
  
 <span data-ttu-id="48053-370">使用<xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A>属性来标识<xref:System.Security.Cryptography.Xml.EncryptedXml>当前收件人可以解密要检索的解密密钥的元素。</span><span class="sxs-lookup"><span data-stu-id="48053-370">Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.Recipient%2A> property to identify the <xref:System.Security.Cryptography.Xml.EncryptedXml> element that the current recipient can decrypt to retrieve a decryption key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceData">
      <MemberSignature Language="C#" Value="public void ReplaceData (System.Xml.XmlElement inputElement, byte[] decryptedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReplaceData(class System.Xml.XmlElement inputElement, unsigned int8[] decryptedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData(System.Xml.XmlElement,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceData (inputElement As XmlElement, decryptedData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceData(System::Xml::XmlElement ^ inputElement, cli::array &lt;System::Byte&gt; ^ decryptedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="decryptedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="48053-371">要替换的 <see langword="&lt;EncryptedData&gt;" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-371">The <see langword="&lt;EncryptedData&gt;" /> element to replace.</span>
          </span>
        </param>
        <param name="decryptedData">
          <span data-ttu-id="48053-372">要替换 <c>inputElement</c> 的解密数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-372">The decrypted data to replace <c>inputElement</c> with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48053-373">将 <see langword="&lt;EncryptedData&gt;" /> 元素替换为指定的解密字节序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-373">Replaces an <see langword="&lt;EncryptedData&gt;" /> element with a specified decrypted sequence of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-374"><xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A>方法替换`<EncryptedData>`具有的值的元素`decryptedData`参数。</span><span class="sxs-lookup"><span data-stu-id="48053-374">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceData%2A> method replaces an `<EncryptedData>` element with the value of the `decryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-375">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-375">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-376">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-376">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-377">
            <paramref name="inputElement" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-377">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="48053-378">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-378">-or-</span>
          </span>
          <span data-ttu-id="48053-379">
            <paramref name="decryptedData" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-379">The value of the <paramref name="decryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceElement">
      <MemberSignature Language="C#" Value="public static void ReplaceElement (System.Xml.XmlElement inputElement, System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReplaceElement(class System.Xml.XmlElement inputElement, class System.Security.Cryptography.Xml.EncryptedData encryptedData, bool content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement(System.Xml.XmlElement,System.Security.Cryptography.Xml.EncryptedData,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReplaceElement(System::Xml::XmlElement ^ inputElement, System::Security::Cryptography::Xml::EncryptedData ^ encryptedData, bool content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputElement" Type="System.Xml.XmlElement" />
        <Parameter Name="encryptedData" Type="System.Security.Cryptography.Xml.EncryptedData" />
        <Parameter Name="content" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputElement">
          <span data-ttu-id="48053-380">要替换为 <see langword="&lt;EncryptedData&gt;" /> 元素的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-380">The element to replace with an <see langword="&lt;EncryptedData&gt;" /> element.</span>
          </span>
        </param>
        <param name="encryptedData">
          <span data-ttu-id="48053-381">要替换 <c>inputElement</c> 参数的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-381">The <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object to replace the <c>inputElement</c> parameter with.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="48053-382">如果仅替换元素内容，则为 <see langword="true" />；如果要替换整个元素，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-382">
              <see langword="true" /> to replace only the contents of the element; <see langword="false" /> to replace the entire element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48053-383">将指定的元素替换为指定的 <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-383">Replaces the specified element with the specified <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-384"><xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A>方法替换`inputElement`参数与指定的值`encryptedData`参数。</span><span class="sxs-lookup"><span data-stu-id="48053-384">The <xref:System.Security.Cryptography.Xml.EncryptedXml.ReplaceElement%2A> method replaces the `inputElement` parameter with the value specified by the `encryptedData` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-385">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-385">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-386">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-386">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48053-387">
            <paramref name="inputElement" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-387">The value of the <paramref name="inputElement" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="48053-388">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-388">-or-</span>
          </span>
          <span data-ttu-id="48053-389">
            <paramref name="encryptedData" /> 参数的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-389">The value of the <paramref name="encryptedData" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver { System::Xml::XmlResolver ^ get(); void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-390">获取或设置文档对象模型 (DOM) 使用的 <see cref="T:System.Xml.XmlResolver" /> 对象以解析外部 XML 引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-390">Gets or sets the <see cref="T:System.Xml.XmlResolver" /> object used by the Document Object Model (DOM) to resolve external XML references.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="48053-391">一个 <see cref="T:System.Xml.XmlResolver" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-391">An <see cref="T:System.Xml.XmlResolver" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-392">此属性包含<xref:System.Xml.XmlResolver>对象用于解析外部 XML 资源，如实体、 文档类型定义 (Dtd) 或架构。</span><span class="sxs-lookup"><span data-stu-id="48053-392">This property contains an <xref:System.Xml.XmlResolver> object used to resolve external XML resources such as entities, document type definitions (DTDs), or schemas.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDSigSearchDepth">
      <MemberSignature Language="C#" Value="public int XmlDSigSearchDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 XmlDSigSearchDepth" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedXml.XmlDSigSearchDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDSigSearchDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int XmlDSigSearchDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-393">获取或设置 XML 数字签名递归深度以避免无穷递归和堆栈溢出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-393">Gets or sets the XML digital signature recursion depth to prevent infinite recursion and stack overflow.</span>
          </span>
          <span data-ttu-id="48053-394">如果包括了 URI 的数字签名 XML 随后指回原始 XML，则可能发生这种情况。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-394">This might happen if the digital signature XML contains the URI which then points back to the original XML.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="48053-395">返回 <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-395">Returns <see cref="T:System.Int32" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128KeyWrapUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-396">表示 128 位高级加密标准 (AES) 密钥包装算法（也称作“Rijndael 密钥包装算法”）的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-396">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="48053-397">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-397">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-398">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl>字段是"http://www.w3.org/2001/04/xmlenc#kw-aes128"。</span><span class="sxs-lookup"><span data-stu-id="48053-398">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes128".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES128Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES128Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES128Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES128Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES128Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-399">表示 128 位高级加密标准 (AES) 密钥包装算法（也称作“Rijndael 密钥包装算法”）的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-399">Represents the namespace Uniform Resource Identifier (URI) for the 128-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="48053-400">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-400">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-401">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url>字段是"http://www.w3.org/2001/04/xmlenc#aes128-cbc"。</span><span class="sxs-lookup"><span data-stu-id="48053-401">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES128Url> field is "http://www.w3.org/2001/04/xmlenc#aes128-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-402">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-402">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-403">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-403">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192KeyWrapUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-404">表示 192 位高级加密标准 (AES) 密钥包装算法（也称作“Rijndael 密钥包装算法”）的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-404">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="48053-405">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-405">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-406">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl>字段是"http://www.w3.org/2001/04/xmlenc#kw-aes192"。</span><span class="sxs-lookup"><span data-stu-id="48053-406">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes192".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES192Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES192Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES192Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES192Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES192Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-407">表示 192 位高级加密标准 (AES) 密钥包装算法（也称作“Rijndael 密钥包装算法”）的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-407">Represents the namespace Uniform Resource Identifier (URI) for the 192-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="48053-408">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-408">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-409">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url>字段是"http://www.w3.org/2001/04/xmlenc#aes192-cbc"。</span><span class="sxs-lookup"><span data-stu-id="48053-409">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES192Url> field is "http://www.w3.org/2001/04/xmlenc#aes192-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-410">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-410">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-411">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-411">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256KeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256KeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256KeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256KeyWrapUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-412">表示 256 位高级加密标准 (AES) 密钥包装算法（也称作“Rijndael 密钥包装算法”）的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-412">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) Key Wrap algorithm (also known as the Rijndael Key Wrap algorithm).</span>
          </span>
          <span data-ttu-id="48053-413">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-413">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-414">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl>字段是"http://www.w3.org/2001/04/xmlenc#kw-aes256"。</span><span class="sxs-lookup"><span data-stu-id="48053-414">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256KeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-aes256".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncAES256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncAES256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncAES256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncAES256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncAES256Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-415">表示 256 位高级加密标准 (AES) 密钥包装算法（也称作“Rijndael 密钥包装算法”）的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-415">Represents the namespace Uniform Resource Identifier (URI) for the 256-bit Advanced Encryption Standard (AES) algorithm (also known as the Rijndael algorithm).</span>
          </span>
          <span data-ttu-id="48053-416">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-416">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-417">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url>字段是"http://www.w3.org/2001/04/xmlenc#aes256-cbc"。</span><span class="sxs-lookup"><span data-stu-id="48053-417">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncAES256Url> field is "http://www.w3.org/2001/04/xmlenc#aes256-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-418">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-418">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-419">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-419">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncDESUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-420">表示数字加密标准 (DES) 算法对应的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-420">Represents the namespace Uniform Resource Identifier (URI) for the Digital Encryption Standard (DES) algorithm.</span>
          </span>
          <span data-ttu-id="48053-421">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-421">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-422">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl>字段是"http://www.w3.org/2001/04/xmlenc#des-cbc"。</span><span class="sxs-lookup"><span data-stu-id="48053-422">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncDESUrl> field is "http://www.w3.org/2001/04/xmlenc#des-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-423">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-423">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-424">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-424">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementContentUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementContentUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementContentUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementContentUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementContentUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-425">表示 XML 加密元素内容对应的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-425">Represents the namespace Uniform Resource Identifier (URI) for XML encryption element content.</span>
          </span>
          <span data-ttu-id="48053-426">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-426">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-427">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl>字段是"http://www.w3.org/2001/04/xmlenc#Content"。</span><span class="sxs-lookup"><span data-stu-id="48053-427">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementContentUrl> field is "http://www.w3.org/2001/04/xmlenc#Content".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncElementUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncElementUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncElementUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncElementUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncElementUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-428">表示 XML 加密元素对应的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-428">Represents the namespace Uniform Resource Identifier (URI) for an XML encryption element.</span>
          </span>
          <span data-ttu-id="48053-429">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-429">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-430">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl>字段是"http://www.w3.org/2001/04/xmlenc#Element"。</span><span class="sxs-lookup"><span data-stu-id="48053-430">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncElementUrl> field is "http://www.w3.org/2001/04/xmlenc#Element".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-431">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-431">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-432">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-432">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncEncryptedKeyUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncEncryptedKeyUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncEncryptedKeyUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncEncryptedKeyUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-433">表示 XML 加密 <see langword="&lt;EncryptedKey&gt;" /> 元素对应的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-433">Represents the namespace Uniform Resource Identifier (URI) for the XML encryption <see langword="&lt;EncryptedKey&gt;" /> element.</span>
          </span>
          <span data-ttu-id="48053-434">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-434">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-435">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl>字段是"http://www.w3.org/2001/04/xmlenc#EncryptedKey"。</span><span class="sxs-lookup"><span data-stu-id="48053-435">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncEncryptedKeyUrl> field is "http://www.w3.org/2001/04/xmlenc#EncryptedKey".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncNamespaceUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncNamespaceUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncNamespaceUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncNamespaceUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncNamespaceUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-436">表示“XML 加密语法和处理”对应的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-436">Represents the namespace Uniform Resource Identifier (URI) for XML encryption syntax and processing.</span>
          </span>
          <span data-ttu-id="48053-437">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-437">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-438">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl>字段是"http://www.w3.org/2001/04/xmlenc#"。</span><span class="sxs-lookup"><span data-stu-id="48053-438">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncNamespaceUrl> field is "http://www.w3.org/2001/04/xmlenc#".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSA15Url">
      <MemberSignature Language="C#" Value="public const string XmlEncRSA15Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSA15Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSA15Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSA15Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-439">表示 RSA 公钥加密标准 (PKCS) 1.5 版算法对应的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-439">Represents the namespace Uniform Resource Identifier (URI) for the RSA Public Key Cryptography Standard (PKCS) Version 1.5 algorithm.</span>
          </span>
          <span data-ttu-id="48053-440">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-440">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-441">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>字段是"http://www.w3.org/2001/04/xmlenc#rsa-1_5"。</span><span class="sxs-lookup"><span data-stu-id="48053-441">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> field is "http://www.w3.org/2001/04/xmlenc#rsa-1_5".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-442">下面的代码示例演示如何使用非对称密钥的 XML 文档进行加密。</span><span class="sxs-lookup"><span data-stu-id="48053-442">The following code example demonstrates how to encrypt an XML document using an asymmetric key.</span></span> <span data-ttu-id="48053-443">此示例创建一个对称会话密钥进行加密文档，然后使用非对称密钥在 XML 文档中嵌入会话密钥的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="48053-443">This example creates a symmetric session key to encrypt the document and then uses the asymmetric key to embed an encrypted version of the session key into the XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncImbedKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncImbedKey/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncRSAOAEPUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncRSAOAEPUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncRSAOAEPUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncRSAOAEPUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncRSAOAEPUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-444">表示 RSA 优化非对称加密填充 (OAEP) 加密算法对应的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-444">Represents the namespace Uniform Resource Identifier (URI) for the RSA Optimal Asymmetric Encryption Padding (OAEP) encryption algorithm.</span>
          </span>
          <span data-ttu-id="48053-445">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-445">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-446">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>字段是"http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p"。</span><span class="sxs-lookup"><span data-stu-id="48053-446">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> field is "http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA256Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA256Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA256Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA256Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA256Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-447">表示 SHA-256 算法对应的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-447">Represents the namespace Uniform Resource Identifier (URI) for the SHA-256 algorithm.</span>
          </span>
          <span data-ttu-id="48053-448">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-448">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-449">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url>字段是"http://www.w3.org/2001/04/xmlenc#sha256"。</span><span class="sxs-lookup"><span data-stu-id="48053-449">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA256Url> field is "http://www.w3.org/2001/04/xmlenc#sha256".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncSHA512Url">
      <MemberSignature Language="C#" Value="public const string XmlEncSHA512Url;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncSHA512Url" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncSHA512Url As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncSHA512Url;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-450">表示 SHA-512 算法对应的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-450">Represents the namespace Uniform Resource Identifier (URI) for the SHA-512 algorithm.</span>
          </span>
          <span data-ttu-id="48053-451">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-451">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-452">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url>字段是"http://www.w3.org/2001/04/xmlenc#sha512"。</span><span class="sxs-lookup"><span data-stu-id="48053-452">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncSHA512Url> field is "http://www.w3.org/2001/04/xmlenc#sha512".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESKeyWrapUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESKeyWrapUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESKeyWrapUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESKeyWrapUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-453">表示三重 DES Key Wrap 算法对应的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-453">Represents the namespace Uniform Resource Identifier (URI) for the TRIPLEDES key wrap algorithm.</span>
          </span>
          <span data-ttu-id="48053-454">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-454">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-455">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl>字段是"http://www.w3.org/2001/04/xmlenc#kw-tripledes"。</span><span class="sxs-lookup"><span data-stu-id="48053-455">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESKeyWrapUrl> field is "http://www.w3.org/2001/04/xmlenc#kw-tripledes".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEncTripleDESUrl">
      <MemberSignature Language="C#" Value="public const string XmlEncTripleDESUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string XmlEncTripleDESUrl" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl" />
      <MemberSignature Language="VB.NET" Value="Public Const XmlEncTripleDESUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ XmlEncTripleDESUrl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="48053-456">表示三重 DES 算法对应的命名空间统一资源标识符 (URI)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-456">Represents the namespace Uniform Resource Identifier (URI) for the Triple DES algorithm.</span>
          </span>
          <span data-ttu-id="48053-457">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48053-457">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48053-458">值<xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl>字段是"http://www.w3.org/2001/04/xmlenc#tripledes-cbc"。</span><span class="sxs-lookup"><span data-stu-id="48053-458">The value of the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncTripleDESUrl> field is "http://www.w3.org/2001/04/xmlenc#tripledes-cbc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48053-459">下面的代码示例演示如何加密使用对称密钥对 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="48053-459">The following code example demonstrates how to encrypt an XML document using a symmetric key.</span></span> <span data-ttu-id="48053-460">此示例不包括加密的 XML 文档中的任何密钥信息。</span><span class="sxs-lookup"><span data-stu-id="48053-460">This example does not include any key information in the encrypted XML document.</span></span>  
  
 [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CPP/Cryptography.XML.XMLEncMinimalDecryptData.cpp#1)]
 [!code-csharp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XMLEncMinimalDecryptData/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>