<Type Name="Transform" FullName="System.Security.Cryptography.Xml.Transform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="afb624786d1fa0aa41242b575e94134805c5b00f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30499381" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Transform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class Transform abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示可用在 XML 数字签名中的所有 <see langword="&lt;Transform&gt;" /> 元素从中派生的抽象基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当执行 XML 签名和验证，<`Transform`> 元素描述签名者如何转换已签名的数据对象。  文档的验证然后使用 <`Transform`> 元素以相同的方式转换已签名的数据。  如果验证程序无法以相同的方式转换已签名的数据，无法验证文档。  
  
 使用派生自的类<xref:System.Security.Cryptography.Xml.Transform>类无论何时需要将一个或多个转换对象添加到加密的 XML 文档或签名的 XML 文档。  
  
 有关详细信息`<Transform>`元素，请参阅 XMLDSIG 规范，这是可从在 www.w3.org/TR/xmldsig-core/ World Wide Web Consortium (W3C) 或可从在 www.w3.org W3C 的 XML 加密规范/ TR/xmlenc 核 /。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Transform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.Algorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property Algorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Algorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于标识当前转换所执行的算法的统一资源标识符 (URI)。</summary>
        <value>标识由当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象执行的算法的 URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性对应于<xref:System.Security.Cryptography.Xml.Transform.Algorithm%2A>属性`<Transform>`XMLDSIG 签名中的元素。 例如，该算法的 Base64 解码转换定义为 URI http://www.w3.org/2000/09/xmldsig#base64 XMLDSIG 规范 （部分 6.6.2） 中。  
  
 你可以方便地使用设置此值与关联的静态字段之一<xref:System.Security.Cryptography.Xml.SignedXml>类。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlElement Context" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlElement ^ Context { System::Xml::XmlElement ^ get(); void set(System::Xml::XmlElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:System.Xml.XmlElement" /> 对象，该对象表示当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象运行的文档上下文。</summary>
        <value>一个 <see cref="T:System.Xml.XmlElement" /> 对象，表示当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象运行的文档上下文。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当签名文档，<xref:System.Security.Cryptography.Xml.Transform.Context%2A>属性表示的值传递给<xref:System.Security.Cryptography.Xml.SignedXml>构造函数。  验证文档时<xref:System.Security.Cryptography.Xml.Transform.Context%2A>属性表示<xref:System.Security.Cryptography.Xml.Signature>对象。  
  
 <xref:System.Security.Cryptography.Xml.Transform.Context%2A>期间签名计算和检查，但在调用转换之前自动设置属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigestedOutput">
      <MemberSignature Language="C#" Value="public virtual byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetDigestedOutput(class System.Security.Cryptography.HashAlgorithm hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDigestedOutput (hash As HashAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetDigestedOutput(System::Security::Cryptography::HashAlgorithm ^ hash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="hash">用于创建摘要的 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> 对象。</param>
        <summary>当在派生类中重写时，返回与 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象关联的摘要。</summary>
        <returns>与 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象关联的摘要。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected abstract System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当在派生类中重写时，返回 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的参数的 XML 表示形式，适合以 XMLDSIG<see langword="&lt;Transform&gt;" /> 元素的子元素的形式包含这些参数。</summary>
        <returns>XML 节点的列表，这些节点表示描述 XMLDSIG <see langword="&lt;Transform&gt;" /> 元素中当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象所需的特定于转换的内容。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 如果<xref:System.Security.Cryptography.Xml.Transform>对象表示使用的 XPath 表达式的 XPath 转换`self::text()`，调用<xref:System.Security.Cryptography.Xml.Transform.GetInnerXml%2A>导致<xref:System.Xml.XmlNodeList>表示下面的 XML 元素的对象：  
  
```  
<XPath>   
  self::text()   
</XPath>  
```  
  
 此元素对应于特定于转换的内容的`<Transform>`XMLDSIG 规范的 4.3.3.4 节中定义的元素。 为上述 XPath 转换整个`<Transform>`元素是，如下所示：  
  
```  
<Transform Algorithm="http://www.w3.org/TR/1999/REC-xpath-19991116">   
  <XPath>   
    self::text()   
  </XPath>   
</Transform>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的输出。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public abstract object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetOutput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当在派生类中重写时，返回当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的输出。</summary>
        <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的输出。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public abstract object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetOutput(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要返回的输出的类型。 此类型必须是 <see cref="P:System.Security.Cryptography.Xml.Transform.OutputTypes" /> 属性中的类型之一。</param>
        <summary>当在派生类中重写时，返回指定类型的当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的输出。</summary>
        <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象作为指定类型对象的输出。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.Xml.Transform.GetOutput%2A>后它在以前通过调用设置的值上运行，方法将返回当前转换的输出<xref:System.Security.Cryptography.Xml.Transform.LoadInput%2A>方法。  
  
 返回的对象的类型必须是中的类型对象之一<xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的 XML 表示形式。</summary>
        <returns>当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的 XML 表示形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlElement>此方法返回的对象是否符合 XML 方案`<Transform>`4.3.3.4 XMLDSIG 规范的节中定义的元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public abstract Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在派生类中重写时，获取一个类型数组，这些类型是当前 <see cref="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 方法的有效输入。</summary>
        <value>当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的一个有效输入类型数组；只能将属于这些类型之一的对象传递给当前 <see cref="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 方法。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的数组<xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A>属性必须包含至少一个元素，因为每个<xref:System.Security.Cryptography.Xml.Transform>对象必须接受至少一种类型作为有效输入。  
  
 A<xref:System.Security.Cryptography.Xml.Transform>对象通常接受一个或多个以下类型作为输入： <xref:System.IO.Stream>， <xref:System.Xml.XmlDocument>，或<xref:System.Xml.XmlNodeList>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public abstract void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">
          <see cref="T:System.Xml.XmlNodeList" /> 对象，它指定当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的特定于转换的内容。</param>
        <summary>当在派生类中重写时，将指定的 <see cref="T:System.Xml.XmlNodeList" /> 对象分析为 <see langword="&lt;Transform&gt;" /> 元素的特定于转换的内容，并配置当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的内部状态以匹配 <see langword="&lt;Transform&gt;" /> 元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于处理的子元素`<Transform>`元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public abstract void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadInput(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象中的输入。</param>
        <summary>在派生类中重写时，将指定的输入加载到当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 输入对象的类型必须是中的类型之一<xref:System.Security.Cryptography.Xml.Transform.InputTypes%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public abstract Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在派生类中重写时，获取一个类型数组，这些类型是当前 <see cref="M:System.Security.Cryptography.Xml.Transform.GetOutput" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 方法的可能输出。</summary>
        <value>当前 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 对象的一个有效输出类型数组；从当前 <see cref="M:System.Security.Cryptography.Xml.Transform.GetOutput" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 方法只返回属于这些类型之一的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回的数组<xref:System.Security.Cryptography.Xml.Transform.OutputTypes%2A>属性必须包含至少一个元素，因为每个转换必须生成至少一种类型作为输出。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropagatedNamespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable PropagatedNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable PropagatedNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropagatedNamespaces As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ PropagatedNamespaces { System::Collections::Hashtable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个 <see cref="T:System.Collections.Hashtable" /> 对象，该对象包含传播到签名中的命名空间。</summary>
        <value>一个 <see cref="T:System.Collections.Hashtable" /> 对象，包含传播到签名中的命名空间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML 命名空间用于区分不同文档中元素的具有相同的名称。  
  
 <xref:System.Collections.Hashtable>键<xref:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces%2A>属性是命名空间前缀和<xref:System.Collections.Hashtable>的值为命名空间统一资源标识符 (Uri)。  
  
 <xref:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces%2A>期间签名计算和检查，但在调用转换之前自动设置属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Security.Cryptography.Xml.Transform.PropagatedNamespaces" /> 属性已设置为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver Resolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver Resolver" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Transform.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public Property Resolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ Resolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>设置当前的 <see cref="T:System.Xml.XmlResolver" /> 对象。</summary>
        <value>当前的 <see cref="T:System.Xml.XmlResolver" /> 对象。 此属性默认为 <see cref="T:System.Xml.XmlSecureResolver" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlResolver>类解析由统一资源标识符 (URI) 命名的外部 XML 资源。 如果你不信任的源的 XML 文件，你可能不想要允许访问计算机资源由 URI 命名的 XML 文件。 <xref:System.Security.Cryptography.Xml.Transform.Resolver%2A>属性允许您控制的 XML 文件具有对计算机资源通过指定不同的访问级别<xref:System.Xml.XmlResolver>对象。 如果你不希望允许任何访问，你可以将此属性设置为`null`(`Nothing`在 Visual Basic 中)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>