<Type Name="XmlDsigExcC14NTransform" FullName="System.Security.Cryptography.Xml.XmlDsigExcC14NTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="632b98055e3b4c97be0ca62a0ff43ff9812a03ec" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDsigExcC14NTransform : System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDsigExcC14NTransform extends System.Security.Cryptography.Xml.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDsigExcC14NTransform&#xA;Inherits Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDsigExcC14NTransform : System::Security::Cryptography::Xml::Transform" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="160f6-101">表示由万维网联合会 (W3C) 定义的数字签名的专用 C14N XML 规范化转换（不带注释）。</span>
      <span class="sxs-lookup">
        <span data-stu-id="160f6-101">Represents the exclusive C14N XML canonicalization transform for a digital signature as defined by the World Wide Web Consortium (W3C), without comments.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="160f6-102"><xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>类表示不带批注的独占 C14N XML 规范化转换。</span><span class="sxs-lookup"><span data-stu-id="160f6-102">The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class represents the exclusive C14N XML canonicalization transform without comments.</span></span>  <span data-ttu-id="160f6-103">此类是类似于<xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>类，该类允许签名者可以创建使用 XML 文档的规范格式的摘要。</span><span class="sxs-lookup"><span data-stu-id="160f6-103">This class is similar to the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class, which allows a signer to create a digest using the canonical form of an XML document.</span></span>  <span data-ttu-id="160f6-104">但是，<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>类排除上级上下文从规范化子文档。</span><span class="sxs-lookup"><span data-stu-id="160f6-104">However, the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class excludes ancestor context from a canonicalized subdocument.</span></span>  
  
 <span data-ttu-id="160f6-105">使用<xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>类需要进行规范化 XML 时子文档，以便它独立于其 XML 上下文。</span><span class="sxs-lookup"><span data-stu-id="160f6-105">Use the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class when you need to canonicalize an XML subdocument so that it is independent from its XML context.</span></span> <span data-ttu-id="160f6-106">例如，应用程序如使用的 Web 服务中复杂通信协议签名 XML 通常需要这种方式规范化 XML。</span><span class="sxs-lookup"><span data-stu-id="160f6-106">For example, applications such as Web services that use signed XML within complex communication protocols often need to canonicalize XML in this manner.</span></span>  <span data-ttu-id="160f6-107">此类应用程序通常信封各种动态构造的元素，其可显著更改该文档并导致 XML 签名验证失败中的 XML。</span><span class="sxs-lookup"><span data-stu-id="160f6-107">Such applications often envelop XML within various dynamically constructed elements, which can substantially change the document and cause XML signature verification to fail.</span></span>  <span data-ttu-id="160f6-108"><xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>类从规范子文档中排除此类上级上下文，从而解决了此问题。</span><span class="sxs-lookup"><span data-stu-id="160f6-108">The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class solves this problem by excluding such ancestor context from the canonical subdocument.</span></span>  
  
 <span data-ttu-id="160f6-109">通常情况下，你不要规范化转换类的新实例。</span><span class="sxs-lookup"><span data-stu-id="160f6-109">Typically, you do not create a new instance of a canonicalization transform class.</span></span> <span data-ttu-id="160f6-110">若要指定规范化转换，请将传递描述到转换的统一资源标识符 (URI)<xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A>属性，它是可从访问<xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="160f6-110">To specify a canonicalization transform, pass the Uniform Resource Identifier (URI) that describes a transform to the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.</span></span> <span data-ttu-id="160f6-111">若要获取的规范化转换的引用，使用<xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A>属性，它是可从访问<xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="160f6-111">To acquire a reference to the canonicalization transform, use the <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethodObject%2A> property, which is accessible from the <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> property.</span></span>  
  
 <span data-ttu-id="160f6-112">将要求你将创建规范化转换类的新实例，仅当你想要手动哈希处理 XML 文档，或者使用你自己的规范化算法。</span><span class="sxs-lookup"><span data-stu-id="160f6-112">You are required to create a new instance of a canonicalization transform class only when you want to manually hash an XML document or use your own canonicalization algorithm.</span></span>  
  
 <span data-ttu-id="160f6-113">用于描述的 URI<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>类定义由<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl>字段。</span><span class="sxs-lookup"><span data-stu-id="160f6-113">The URI that describes the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl> field.</span></span>  
  
 <span data-ttu-id="160f6-114">用于描述的 URI<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>类定义由<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl>字段。</span><span class="sxs-lookup"><span data-stu-id="160f6-114">The URI that describes the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl> field.</span></span>  
  
 <span data-ttu-id="160f6-115">有关专用 C14N 转换的详细信息，请参阅 XMLDSIG 规范，这是可从在 www.w3.org/TR/xmldsig-core/ World Wide Web Consortium (W3C)。</span><span class="sxs-lookup"><span data-stu-id="160f6-115">For more information about the exclusive C14N transform, see the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/.</span></span> <span data-ttu-id="160f6-116">W3C 规范 XML 规范，位于 www.w3.org/2001/10/xml-exc-c14n 中定义的规范化算法。</span><span class="sxs-lookup"><span data-stu-id="160f6-116">The canonicalization algorithm is defined in the W3C Canonical XML specification, which is available at www.w3.org/2001/10/xml-exc-c14n.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="160f6-117">下面的代码示例演示如何使用 XML 文档进行签名<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>类通过封装签名。</span><span class="sxs-lookup"><span data-stu-id="160f6-117">The following code example shows how to sign an XML document with the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class using an envelope signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CS/example.cs#1)]
 [!code-vb[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="160f6-118">初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="160f6-119">初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-119">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NTransform (bool includeComments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeComments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (includeComments As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NTransform(bool includeComments);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="includeComments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeComments">
          <span data-ttu-id="160f6-120">如果包含注释，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-120">
              <see langword="true" /> to include comments; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="160f6-121">通过指定一个确定是否包含注释的值来初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-121">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class specifying a value that determines whether to include comments.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NTransform (string inclusiveNamespacesPrefixList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string inclusiveNamespacesPrefixList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inclusiveNamespacesPrefixList As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NTransform(System::String ^ inclusiveNamespacesPrefixList);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inclusiveNamespacesPrefixList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inclusiveNamespacesPrefixList">
          <span data-ttu-id="160f6-122">要使用标准规范化算法来规范化的命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-122">The namespace prefixes to canonicalize using the standard canonicalization algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="160f6-123">初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 类的一个新实例，并指定要使用标准规范化算法来规范化的命名空间前缀列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-123">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class specifying a list of namespace prefixes to canonicalize using the standard canonicalization algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="160f6-124">`inclusiveNamespacesPrefixList`参数包含空格分隔的使用标准的规范化算法，而不是专用规范化算法来规范化的命名空间前缀列表。</span><span class="sxs-lookup"><span data-stu-id="160f6-124">The `inclusiveNamespacesPrefixList` parameter contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.</span></span>  <span data-ttu-id="160f6-125">若要指定默认命名空间，没有前缀，传递的特殊前缀"#default"。</span><span class="sxs-lookup"><span data-stu-id="160f6-125">To specify the default namespace, which does not have a prefix, pass the special prefix "#default".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDsigExcC14NTransform (bool includeComments, string inclusiveNamespacesPrefixList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool includeComments, string inclusiveNamespacesPrefixList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.#ctor(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (includeComments As Boolean, inclusiveNamespacesPrefixList As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDsigExcC14NTransform(bool includeComments, System::String ^ inclusiveNamespacesPrefixList);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="includeComments" Type="System.Boolean" />
        <Parameter Name="inclusiveNamespacesPrefixList" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="includeComments">
          <span data-ttu-id="160f6-126">如果包含注释，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-126">
              <see langword="true" /> to include comments; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="inclusiveNamespacesPrefixList">
          <span data-ttu-id="160f6-127">要使用标准规范化算法来规范化的命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-127">The namespace prefixes to canonicalize using the standard canonicalization algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="160f6-128">通过指定是否包含注释并指定命名空间前缀的列表来初始化 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-128">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> class specifying whether to include comments, and specifying a list of namespace prefixes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="160f6-129">`inclusiveNamespacesPrefixList`参数包含空格分隔的使用标准的规范化算法，而不是专用规范化算法来规范化的命名空间前缀列表。</span><span class="sxs-lookup"><span data-stu-id="160f6-129">The `inclusiveNamespacesPrefixList` parameter contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.</span></span>  <span data-ttu-id="160f6-130">若要指定默认命名空间，没有前缀，传递的特殊前缀"#default"。</span><span class="sxs-lookup"><span data-stu-id="160f6-130">To specify the default namespace, which does not have a prefix, pass the special prefix "#default".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigestedOutput">
      <MemberSignature Language="C#" Value="public override byte[] GetDigestedOutput (System.Security.Cryptography.HashAlgorithm hash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetDigestedOutput(class System.Security.Cryptography.HashAlgorithm hash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDigestedOutput (hash As HashAlgorithm) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetDigestedOutput(System::Security::Cryptography::HashAlgorithm ^ hash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="hash">
          <span data-ttu-id="160f6-131">用于创建摘要的 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-131">The <see cref="T:System.Security.Cryptography.HashAlgorithm" /> object used to create a digest.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="160f6-132">返回与 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象关联的摘要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-132">Returns the digest associated with a <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="160f6-133">与 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象关联的摘要。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-133">The digest associated with a <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInnerXml">
      <MemberSignature Language="C#" Value="protected override System.Xml.XmlNodeList GetInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XmlNodeList GetInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetInnerXml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetInnerXml () As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XmlNodeList ^ GetInnerXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="160f6-134">返回 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的参数的 XML 表示形式，适合以 XMLDSIG <see langword="&lt;Transform&gt;" /> 元素的子元素的形式来包含这些参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-134">Returns an XML representation of the parameters of a <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object that are suitable to be included as subelements of an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="160f6-135">XML 节点的列表，这些节点表示描述 XMLDSIG <see langword="&lt;Transform&gt;" /> 元素中当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象所需的特定于转换的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-135">A list of the XML nodes that represent the transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutput">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="160f6-136">返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-136">Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOutput () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="160f6-137">返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的输出</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-137">Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="160f6-138">当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-138">The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutput">
      <MemberSignature Language="C#" Value="public override object GetOutput (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetOutput(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetOutput(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="160f6-139">要返回的输出的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-139">The type of the output to return.</span>
          </span>
          <span data-ttu-id="160f6-140">此类型必须是 <see cref="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes" /> 属性中的类型之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-140">This must be one of the types in the <see cref="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="160f6-141">返回当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象作为指定类型对象的输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-141">Returns the output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object as an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="160f6-142">当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象作为指定类型对象的输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-142">The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object as an object of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="160f6-143"><xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput%2A>后它在以前通过调用设置的值上运行，方法将返回当前转换的输出<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="160f6-143">The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput%2A> method returns the output of the current transform after it is run on the value previously set by a call to the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput%2A> method.</span></span>  
  
 <span data-ttu-id="160f6-144">返回的对象的类型必须是中的类型对象之一<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="160f6-144">The type of the returned object must be one of the type objects in the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="160f6-145">
            <paramref name="type" /> 参数不是 <see cref="T:System.IO.Stream" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-145">The <paramref name="type" /> parameter is not a <see cref="T:System.IO.Stream" /> object.</span>
          </span>
          <span data-ttu-id="160f6-146">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-146">-or-</span>
          </span>
          <span data-ttu-id="160f6-147">
            <paramref name="type" /> 参数不从 <see cref="T:System.IO.Stream" /> 对象派生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-147">The <paramref name="type" /> parameter does not derive from a <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InclusiveNamespacesPrefixList">
      <MemberSignature Language="C#" Value="public string InclusiveNamespacesPrefixList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InclusiveNamespacesPrefixList" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList" />
      <MemberSignature Language="VB.NET" Value="Public Property InclusiveNamespacesPrefixList As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InclusiveNamespacesPrefixList { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="160f6-148">获取或设置一个字符串，此字符串包含要使用标准规范化算法来规范化的命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-148">Gets or sets a string that contains namespace prefixes to canonicalize using the standard canonicalization algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="160f6-149">一个字符串，包含要使用标准规范化算法来规范化的命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-149">A string that contains namespace prefixes to canonicalize using the standard canonicalization algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="160f6-150"><xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList%2A>属性包含空格分隔的使用标准的规范化算法，而不是专用规范化算法来规范化的命名空间前缀列表。</span><span class="sxs-lookup"><span data-stu-id="160f6-150">The <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InclusiveNamespacesPrefixList%2A> property contains a whitespace-delimited list of namespace prefixes to canonicalize using the standard canonicalization algorithm rather than the exclusive canonicalization algorithm.</span></span>  <span data-ttu-id="160f6-151">若要指定默认命名空间，没有前缀，传递的特殊前缀"#default"。</span><span class="sxs-lookup"><span data-stu-id="160f6-151">To specify the default namespace, which does not have a prefix, pass the special prefix "#default".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="160f6-152">下面的代码示例演示如何使用 XML 文档进行签名<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>类通过封装签名。</span><span class="sxs-lookup"><span data-stu-id="160f6-152">The following code example shows how to sign an XML document with the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class using an envelope signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CPP/example.cpp#1)]
 [!code-csharp[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/CS/example.cs#1)]
 [!code-vb[Cryptography.XML.XmlDsigExcC14NTransform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.XmlDsigExcC14NTransform/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputTypes">
      <MemberSignature Language="C#" Value="public override Type[] InputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] InputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ InputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="160f6-153">获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> 方法的有效输入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-153">Gets an array of types that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="160f6-154">当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的一个有效输入类型数组；只能将属于这些类型之一的对象传递给当前 <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-154">An array of valid input types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object; you can pass only objects of one of these types to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="160f6-155">返回的数组<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A>属性必须包含至少一个元素，因为每个<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>对象必须接受至少一种类型作为有效输入。</span><span class="sxs-lookup"><span data-stu-id="160f6-155">The array returned by the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A> property must contain at least one element because every <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> object must accept at least one type as valid input.</span></span>  
  
 <span data-ttu-id="160f6-156">A<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>对象通常接受一个或多个以下类型作为输入： <xref:System.IO.Stream>， <xref:System.Xml.XmlDocument>，或<xref:System.Xml.XmlNodeList>。</span><span class="sxs-lookup"><span data-stu-id="160f6-156">A <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> object typically accepts one or more of the following types as input: <xref:System.IO.Stream>, <xref:System.Xml.XmlDocument>, or <xref:System.Xml.XmlNodeList>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInnerXml">
      <MemberSignature Language="C#" Value="public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInnerXml(class System.Xml.XmlNodeList nodeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInnerXml (nodeList As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInnerXml(System::Xml::XmlNodeList ^ nodeList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeList" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="nodeList">
          <span data-ttu-id="160f6-157">
            <see cref="T:System.Xml.XmlNodeList" /> 对象，它指定当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的特定于转换的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-157">An <see cref="T:System.Xml.XmlNodeList" /> object that specifies transform-specific content for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="160f6-158">将指定的 <see cref="T:System.Xml.XmlNodeList" /> 对象分析为 <see langword="&lt;Transform&gt;" /> 元素的特定于转换的内容，并配置当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的内部状态以匹配 <see langword="&lt;Transform&gt;" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-158">Parses the specified <see cref="T:System.Xml.XmlNodeList" /> object as transform-specific content of a <see langword="&lt;Transform&gt;" /> element and configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object to match the <see langword="&lt;Transform&gt;" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="160f6-159">此方法用于处理的子元素`<Transform>`元素。</span><span class="sxs-lookup"><span data-stu-id="160f6-159">This method is used to process subelements of a `<Transform>` element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadInput">
      <MemberSignature Language="C#" Value="public override void LoadInput (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadInput(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.LoadInput(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadInput (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadInput(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="160f6-160">要加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象中的输入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-160">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="160f6-161">在派生类中重写时，将指定的输入加载到当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-161">When overridden in a derived class, loads the specified input into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="160f6-162">输入对象的类型必须是中的类型之一<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="160f6-162">The type of the input object must be one of the types in the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.InputTypes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="160f6-163">
            <paramref name="obj" /> 参数不是 <see cref="T:System.IO.Stream" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-163">The <paramref name="obj" /> parameter is not a <see cref="T:System.IO.Stream" /> object.</span>
          </span>
          <span data-ttu-id="160f6-164">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-164">-or-</span>
          </span>
          <span data-ttu-id="160f6-165">
            <paramref name="obj" /> 参数不是一个 <see cref="T:System.Xml.XmlDocument" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-165">The <paramref name="obj" /> parameter is not an <see cref="T:System.Xml.XmlDocument" /> object.</span>
          </span>
          <span data-ttu-id="160f6-166">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-166">-or-</span>
          </span>
          <span data-ttu-id="160f6-167">
            <paramref name="obj" /> 参数不是一个 <see cref="T:System.Xml.XmlNodeList" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-167">The <paramref name="obj" /> parameter is not an <see cref="T:System.Xml.XmlNodeList" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OutputTypes">
      <MemberSignature Language="C#" Value="public override Type[] OutputTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] OutputTypes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property OutputTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Type ^&gt; ^ OutputTypes { cli::array &lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="160f6-168">获取一个类型数组，这些类型是当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的 <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> 方法的可能输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-168">Gets an array of types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="160f6-169">当前 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 对象的一个有效输出类型数组；当前 <see cref="Overload:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> 对象的 <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> 方法只返回属于这些类型之一的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="160f6-169">An array of valid output types for the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object; the <see cref="Overload:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform" /> object return only objects of one of these types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="160f6-170">返回的数组<xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A>属性必须包含至少一个元素，因为每个转换必须生成至少一种类型作为输出。</span><span class="sxs-lookup"><span data-stu-id="160f6-170">The array returned by the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform.OutputTypes%2A> property must contain at least one element because every transform must generate at least one type as output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>