<Type Name="Reference" FullName="System.Security.Cryptography.Xml.Reference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="be428e35487c5b111ea7f5c872ed491f03f42806" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36625859" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Reference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Reference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.Reference" />
  <TypeSignature Language="VB.NET" Value="Public Class Reference" />
  <TypeSignature Language="C++ CLI" Value="public ref class Reference" />
  <TypeSignature Language="F#" Value="type Reference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ee3e2-101">Represents the <see langword="&lt;reference&gt;" /> element of an XML signature.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee3e2-101">Represents the <see langword="&lt;reference&gt;" /> element of an XML signature.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee3e2-102"><xref:System.Security.Cryptography.Xml.Reference>对象所表示 <`reference`> 元素的 XML 数字签名规范所定义的 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-102">The <xref:System.Security.Cryptography.Xml.Reference> object represents the <`reference`> element of an XML digital signature defined by the XML digital signature specification.</span></span>  
  
 <span data-ttu-id="ee3e2-103">使用<xref:System.Security.Cryptography.Xml.Reference>对象来指定以下信息：</span><span class="sxs-lookup"><span data-stu-id="ee3e2-103">Use the <xref:System.Security.Cryptography.Xml.Reference> object to specify the following information:</span></span>  
  
-   <span data-ttu-id="ee3e2-104">用来登录的数据对象的摘要算法。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-104">The digest algorithm used to sign of the data object.</span></span>  <span data-ttu-id="ee3e2-105">此值是必需的。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-105">This value is required.</span></span>  
  
-   <span data-ttu-id="ee3e2-106">统一资源标识符 (URI) 的数据对象进行签名。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-106">The Uniform Resource Identifier (URI) of the data object to sign.</span></span> <span data-ttu-id="ee3e2-107">URI 可以指定文件路径或 XML 文档中的特定元素。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-107">The URI can specify a file path or specific elements within an XML document.</span></span>  <span data-ttu-id="ee3e2-108">此值是必需的。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-108">This value is required.</span></span>  
  
-   <span data-ttu-id="ee3e2-109">要在生成摘要之前应用转换的链。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-109">A chain of transforms to apply before generating the digest.</span></span> <span data-ttu-id="ee3e2-110">此值为可选值。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-110">This value is optional.</span></span>  
  
-   <span data-ttu-id="ee3e2-111">要签名的对象类型。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-111">The type of object to sign.</span></span>  <span data-ttu-id="ee3e2-112">此值为可选值。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-112">This value is optional.</span></span>  
  
-   <span data-ttu-id="ee3e2-113">用于引用当前的唯一标识符`<reference>`元素。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-113">A unique identifier used to reference the current `<reference>` element.</span></span>  <span data-ttu-id="ee3e2-114">此值为可选值。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-114">This value is optional.</span></span>  
  
 <span data-ttu-id="ee3e2-115">有关详细信息 <`reference`> 元素，请参阅 W3C www.w3.org/TR/xmldsig-core/ 规范。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-115">For more information about the <`reference`> element, see the W3C specification at www.w3.org/TR/xmldsig-core/.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee3e2-116">下面的代码示例演示如何生成和验证封装的 XML 签名使用<xref:System.Security.Cryptography.Xml.Reference>对象。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-116">The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ee3e2-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-117">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee3e2-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with default properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with default properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ee3e2-119">下面的代码示例演示如何生成和验证封装的 XML 签名使用<xref:System.Security.Cryptography.Xml.Reference>对象。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-119">The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 <span data-ttu-id="ee3e2-120">下面的代码示例演示如何生成和验证分离的 XML 签名使用<xref:System.Security.Cryptography.Xml.Reference>对象。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-120">The following code example demonstrates how to generate and verify a detached XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.Reference : System.IO.Stream -&gt; System.Security.Cryptography.Xml.Reference" Usage="new System.Security.Cryptography.Xml.Reference stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="ee3e2-121">The <see cref="T:System.IO.Stream" /> with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-121">The <see cref="T:System.IO.Stream" /> with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee3e2-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with a hash value of the specified <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with a hash value of the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee3e2-123">此构造函数初始化<xref:System.Security.Cryptography.Xml.Reference>对象到对应的哈希值`stream`参数。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-123">This constructor initializes the <xref:System.Security.Cryptography.Xml.Reference> object to the hash value that corresponds to the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference(System::String ^ uri);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.Reference : string -&gt; System.Security.Cryptography.Xml.Reference" Usage="new System.Security.Cryptography.Xml.Reference uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="ee3e2-124">The <see cref="T:System.Uri" /> with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-124">The <see cref="T:System.Uri" /> with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee3e2-125">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with the specified <see cref="T:System.Uri" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-125">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with the specified <see cref="T:System.Uri" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee3e2-126">此构造函数初始化<xref:System.Security.Cryptography.Xml.Reference>进行特殊处理的 URI 中的数据的对象`""`， `#xpointer(/)`，和`#xxxx`。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-126">This constructor initializes the <xref:System.Security.Cryptography.Xml.Reference> object to the data at the URI with special processing for `""`, `#xpointer(/)`, and `#xxxx`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee3e2-127">下面的代码示例使用<xref:System.Security.Cryptography.Xml.Reference>类进行签名和验证使用封装签名的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-127">The following code example uses the <xref:System.Security.Cryptography.Xml.Reference> class to sign and verify an XML document using an envelope signature.</span></span>  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTransform">
      <MemberSignature Language="C#" Value="public void AddTransform (System.Security.Cryptography.Xml.Transform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTransform(class System.Security.Cryptography.Xml.Transform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTransform(System::Security::Cryptography::Xml::Transform ^ transform);" />
      <MemberSignature Language="F#" Value="member this.AddTransform : System.Security.Cryptography.Xml.Transform -&gt; unit" Usage="reference.AddTransform transform" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="System.Security.Cryptography.Xml.Transform" />
      </Parameters>
      <Docs>
        <param name="transform">
          <span data-ttu-id="ee3e2-128">The transform to be added to the list of transforms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-128">The transform to be added to the list of transforms.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee3e2-129">Adds a <see cref="T:System.Security.Cryptography.Xml.Transform" /> object to the list of transforms to be performed on the data before passing it to the digest algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-129">Adds a <see cref="T:System.Security.Cryptography.Xml.Transform" /> object to the list of transforms to be performed on the data before passing it to the digest algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee3e2-130"><xref:System.Security.Cryptography.Xml.Reference.AddTransform%2A>方法修改`<Transform>`元素和关联的子元素的 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-130">The <xref:System.Security.Cryptography.Xml.Reference.AddTransform%2A> method modifies the `<Transform>` element and associated subelements of an XML digital signature.</span></span>  
  
 <span data-ttu-id="ee3e2-131">转换应用于已添加的顺序。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-131">Transforms are applied in the order in which they were added.</span></span> <span data-ttu-id="ee3e2-132">如果没有指定任何转换，则所需的最低转换会自动添加。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-132">If no transforms are specified, the minimum required transforms are added automatically.</span></span>  
  
 <span data-ttu-id="ee3e2-133">有关 XML 数字签名的详细信息，请参阅在 www.w3.org/TR/xmldsig-core/ W3C 规范。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-133">For more information about XML digital signatures, see the W3C specification at www.w3.org/TR/xmldsig-core/.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee3e2-134">下面的代码示例演示如何生成和验证封装的 XML 签名使用<xref:System.Security.Cryptography.Xml.Reference>对象。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-134">The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 <span data-ttu-id="ee3e2-135">下面的代码示例演示如何生成和验证分离的 XML 签名使用<xref:System.Security.Cryptography.Xml.Reference>对象。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-135">The following code example demonstrates how to generate and verify a detached XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee3e2-136">The <paramref name="transform" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-136">The <paramref name="transform" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DigestMethod">
      <MemberSignature Language="C#" Value="public string DigestMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DigestMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.DigestMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DigestMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DigestMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DigestMethod : string with get, set" Usage="System.Security.Cryptography.Xml.Reference.DigestMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee3e2-137">Gets or sets the digest method Uniform Resource Identifier (URI) of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-137">Gets or sets the digest method Uniform Resource Identifier (URI) of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee3e2-138">Digest 方法当前 URI <see cref="T:System.Security.Cryptography.Xml.Reference" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-138">The digest method URI of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
          <span data-ttu-id="ee3e2-139">默认值为“http://www.w3.org/2000/09/xmldsig#sha1”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-139">The default value is "http://www.w3.org/2000/09/xmldsig#sha1".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee3e2-140"><xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>属性使用 URI 字符串来表示 <`DigestMethod`> 元素的 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-140">The <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> property uses a URI string to represent the <`DigestMethod`> element of an XML digital signature.</span></span>  
  
 <span data-ttu-id="ee3e2-141">Digest 方法是用于对哈希算法<xref:System.Security.Cryptography.Xml.Reference>。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-141">The digest method is the algorithm used to hash the <xref:System.Security.Cryptography.Xml.Reference>.</span></span> <span data-ttu-id="ee3e2-142">默认算法是<xref:System.Security.Cryptography.SHA1>。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-142">The default algorithm is <xref:System.Security.Cryptography.SHA1>.</span></span>  
  
 <span data-ttu-id="ee3e2-143">有关 XML 数字签名的详细信息，请参阅在 www.w3.org/TR/xmldsig-core/ W3C 规范。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-143">For more information about XML digital signatures, see the W3C specification at www.w3.org/TR/xmldsig-core/.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DigestValue">
      <MemberSignature Language="C#" Value="public byte[] DigestValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DigestValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.DigestValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DigestValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DigestValue { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DigestValue : byte[] with get, set" Usage="System.Security.Cryptography.Xml.Reference.DigestValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee3e2-144">Gets or sets the digest value of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-144">Gets or sets the digest value of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee3e2-145">当前的摘要值<see cref="T:System.Security.Cryptography.Xml.Reference" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-145">The digest value of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee3e2-146"><xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A>属性使用的字节数组来表示 <`DigestValue`> 元素的 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-146">The <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> property uses an array of bytes to represent the <`DigestValue`> element of an XML digital signature.</span></span>  
  
 <span data-ttu-id="ee3e2-147"><xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A>属性包含所描述的对象的摘要的 Base 64 编码值<xref:System.Security.Cryptography.Xml.Reference.Uri%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-147">The <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> property contains the Base 64 encoded value of the digest of the object described by the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property.</span></span>  
  
 <span data-ttu-id="ee3e2-148"><xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A>属性自动填充合适的值，无论何时调用<xref:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature%2A>。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-148">The <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> property is automatically populated with the appropriate value whenever you make a call to <xref:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature%2A>.</span></span>  
  
 <span data-ttu-id="ee3e2-149">有关 XML 数字签名的详细信息，请参阅在 www.w3.org/TR/xmldsig-core/ W3C 规范。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-149">For more information about XML digital signatures, see the W3C specification at www.w3.org/TR/xmldsig-core/.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="member this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="reference.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee3e2-150">Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-150">Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee3e2-151">The XML representation of the <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-151">The XML representation of the <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="ee3e2-152">The <see cref="P:System.Security.Cryptography.Xml.Reference.DigestMethod" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-152">The <see cref="P:System.Security.Cryptography.Xml.Reference.DigestMethod" /> property is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ee3e2-153">-or-  The <see cref="P:System.Security.Cryptography.Xml.Reference.DigestValue" /> property is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-153">-or-  The <see cref="P:System.Security.Cryptography.Xml.Reference.DigestValue" /> property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Security.Cryptography.Xml.Reference.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee3e2-154">Gets or sets the ID of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-154">Gets or sets the ID of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee3e2-155">当前的 ID <see cref="T:System.Security.Cryptography.Xml.Reference" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-155">The ID of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
          <span data-ttu-id="ee3e2-156">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-156">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee3e2-157">使用<xref:System.Security.Cryptography.Xml.Reference.Id%2A>属性将字符串 ID 添加到当前的 XML 表示<xref:System.Security.Cryptography.Xml.Reference>元素。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-157">Use the <xref:System.Security.Cryptography.Xml.Reference.Id%2A> property to add a string ID to the XML representation of the current <xref:System.Security.Cryptography.Xml.Reference> element.</span></span> <span data-ttu-id="ee3e2-158">使用的 ID 为引用<xref:System.Security.Cryptography.Xml.Reference>另一个位置中的元素。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-158">The ID is used to reference the <xref:System.Security.Cryptography.Xml.Reference> element from another location.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="member this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="reference.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ee3e2-159">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.Reference" /> state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-159">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.Reference" /> state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee3e2-160">Loads a <see cref="T:System.Security.Cryptography.Xml.Reference" /> state from an XML element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-160">Loads a <see cref="T:System.Security.Cryptography.Xml.Reference" /> state from an XML element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee3e2-161">The <paramref name="value" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-161">The <paramref name="value" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="ee3e2-162">The <paramref name="value" /> parameter does not contain any transforms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-162">The <paramref name="value" /> parameter does not contain any transforms.</span>
          </span>
          <span data-ttu-id="ee3e2-163">-or-  The <paramref name="value" /> parameter contains an unknown transform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-163">-or-  The <paramref name="value" /> parameter contains an unknown transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransformChain">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.TransformChain TransformChain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.TransformChain TransformChain" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.TransformChain" />
      <MemberSignature Language="VB.NET" Value="Public Property TransformChain As TransformChain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::TransformChain ^ TransformChain { System::Security::Cryptography::Xml::TransformChain ^ get(); void set(System::Security::Cryptography::Xml::TransformChain ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransformChain : System.Security.Cryptography.Xml.TransformChain with get, set" Usage="System.Security.Cryptography.Xml.Reference.TransformChain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.TransformChain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee3e2-164">Gets the transform chain of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-164">Gets the transform chain of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee3e2-165">当前转换链<see cref="T:System.Security.Cryptography.Xml.Reference" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-165">The transform chain of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee3e2-166"><xref:System.Security.Cryptography.Xml.Reference.TransformChain%2A>属性表示 <`Transform`> 元素和关联的子元素的 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-166">The <xref:System.Security.Cryptography.Xml.Reference.TransformChain%2A> property represents the <`Transform`> element and associated subelements of an XML digital signature.</span></span>  
  
 <span data-ttu-id="ee3e2-167">转换链已转换的有序列的表。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-167">The transform chain is an ordered list of transforms.</span></span> <span data-ttu-id="ee3e2-168">这些转换的输出构成中指定的哈希算法的输入<xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-168">The output of these transforms constitutes the input to the hash algorithm specified in the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> property.</span></span>  
  
 <span data-ttu-id="ee3e2-169">有关 XML 数字签名的详细信息，请参阅在 www.w3.org/TR/xmldsig-core/ W3C 规范。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-169">For more information about XML digital signatures, see the W3C specification at www.w3.org/TR/xmldsig-core/.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Security.Cryptography.Xml.Reference.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee3e2-170">Gets or sets the type of the object being signed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-170">Gets or sets the type of the object being signed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee3e2-171">被签名的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-171">The type of the object being signed.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uri : string with get, set" Usage="System.Security.Cryptography.Xml.Reference.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee3e2-172">Gets or sets the <see cref="T:System.Uri" /> of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-172">Gets or sets the <see cref="T:System.Uri" /> of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee3e2-173">当前 <see cref="T:System.Security.Cryptography.Xml.Reference" /> 的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee3e2-173">The <see cref="T:System.Uri" /> of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee3e2-174"><xref:System.Security.Cryptography.Xml.Reference.Uri%2A>属性使用字符串统一资源标识符 (URI) 来表示 <`URI`> 元素的 XML 数字签名。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-174">The <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property uses a string Uniform Resource Identifier (URI) to represent the <`URI`> element of an XML digital signature.</span></span>  
  
 <span data-ttu-id="ee3e2-175">使用<xref:System.Security.Cryptography.Xml.Reference.Uri%2A>属性指定的文档进行签名，以及指定当前的 XML 文档进行签名，或以指示应签名整个文档的元素的位置。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-175">Use the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property to specify the location of a document to sign, and to specify which element of the current XML document to sign or to indicate that the entire document should be signed.</span></span>  
  
 <span data-ttu-id="ee3e2-176">若要成功创建的 XML 数字签名，必须设置<xref:System.Security.Cryptography.Xml.Reference.Uri%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-176">To successfully create an XML digital signature, you must set the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property.</span></span> <span data-ttu-id="ee3e2-177">下表介绍了可以将传递到的值<xref:System.Security.Cryptography.Xml.Reference.Uri%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-177">The following table describes the values that you can pass to the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property.</span></span>  
  
|<span data-ttu-id="ee3e2-178">要签名的对象</span><span class="sxs-lookup"><span data-stu-id="ee3e2-178">Object to sign</span></span>|<span data-ttu-id="ee3e2-179">传递给值<xref:System.Security.Cryptography.Xml.Reference.Uri%2A>属性</span><span class="sxs-lookup"><span data-stu-id="ee3e2-179">Value passed to the <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> property</span></span>|  
|--------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="ee3e2-180">使用封装的签名中的整个 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-180">An entire XML document using an enveloped signature.</span></span>|<span data-ttu-id="ee3e2-181">空字符串:""</span><span class="sxs-lookup"><span data-stu-id="ee3e2-181">An empty string: ""</span></span>|  
|<span data-ttu-id="ee3e2-182">使用封装的签名中的 XML 文档中的特定元素。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-182">A specific element within an XML document using an enveloped signature.</span></span>|<span data-ttu-id="ee3e2-183">由属性名称 ID 标识的 XML 元素名称</span><span class="sxs-lookup"><span data-stu-id="ee3e2-183">The name of an XML element identified by an attribute name ID.</span></span> <span data-ttu-id="ee3e2-184">此字符串应采用以下形式其中`IDname`是有效的特性名称 ID 的名称：</span><span class="sxs-lookup"><span data-stu-id="ee3e2-184">The string should take the following form where `IDname` is the name of a valid attribute name ID:</span></span><br /><br /> <span data-ttu-id="ee3e2-185">"#Idname"</span><span class="sxs-lookup"><span data-stu-id="ee3e2-185">"#Idname"</span></span>|  
|<span data-ttu-id="ee3e2-186">使用分离的签名的文件。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-186">A file using a detached signature.</span></span>|<span data-ttu-id="ee3e2-187">文件的 URI:"c:\data.jpg"或"c:\data.xml"。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-187">The URI of a file: "c:\data.jpg" or "c:\data.xml".</span></span>|  
  
 <span data-ttu-id="ee3e2-188">有关 XML 数字签名的详细信息，请参阅万维网联合会 (W3C) [XML 签名语法和处理规范](https://www.w3.org/TR/xmldsig-core/)。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-188">For more information about XML digital signatures, see the World Wide Web Consortium (W3C) [XML Signature Syntax and Processing Specification](https://www.w3.org/TR/xmldsig-core/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee3e2-189">下面的代码示例演示如何生成和验证封装的 XML 签名使用<xref:System.Security.Cryptography.Xml.Reference>对象。</span><span class="sxs-lookup"><span data-stu-id="ee3e2-189">The following code example demonstrates how to generate and verify an enveloped XML signature using the <xref:System.Security.Cryptography.Xml.Reference> object.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>