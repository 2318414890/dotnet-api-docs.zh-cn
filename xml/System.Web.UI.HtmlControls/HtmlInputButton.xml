<Type Name="HtmlInputButton" FullName="System.Web.UI.HtmlControls.HtmlInputButton">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b95865a1cab8893bd38d9f3b3f0b7458a296d3a5" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32039251" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputButton : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputButton extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputButton" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputButton&#xA;Inherits HtmlInputControl&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputButton : System::Web::UI::HtmlControls::HtmlInputControl, System::Web::UI::IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允许对服务器上的 HTML <see langword="&lt;input type= button&gt;" />、<see langword="&lt;input type= submit&gt;" /> 和 <see langword="&lt;input type= reset&gt;" /> 元素进行编程访问。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlInputButton>类，以创建在网页上的按钮控件。 `<input type=button>` HTML 元素是一个具有任何默认行为时单击推送按钮。 `<input type=submit>` HTML 元素是提交表单时单击的按钮。 `<input type=reset>` HTML 按钮可重置为其初始值单击时所有控件。  
  
 在 ASP.NET 2.0 中，使用<xref:System.Web.UI.HtmlControls.HtmlInputReset>类和<xref:System.Web.UI.HtmlControls.HtmlInputSubmit>类，以分别创建重置和提交按钮。  
  
 有关的实例的初始属性值的列表<xref:System.Web.UI.HtmlControls.HtmlInputButton>，请参阅<xref:System.Web.UI.HtmlControls.HtmlInputButton.%23ctor%2A>构造函数。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlInputButton>控件创建命令按钮、 提交按钮和重置按钮。  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInputButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInputButton/cs/htmlinputbuttoncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInputButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInputButton/vb/htmlinputbuttonvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlButton" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用默认值初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示的实例的初始属性值<xref:System.Web.UI.HtmlControls.HtmlInputButton>。  
  
|Property|“值”|  
|--------------|-----------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|"Button"文字字符串。|  
  
   
  
## Examples  
 下面的代码示例演示如何创建的新实例<xref:System.Web.UI.HtmlControls.HtmlInputButton>控制使用默认构造函数。  
  
 [!code-aspx-csharp[HtmlInputButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonCtor/CS/htmlinputbuttonctorcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonCtor/VB/htmlinputbuttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputButton (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputButton(System::String ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">输入按钮的类型。</param>
        <summary>使用指定的按钮类型初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示的实例的初始属性值<xref:System.Web.UI.HtmlControls.HtmlInputButton>。  
  
|Property|“值”|  
|--------------|-----------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|`type` 参数的值。|  
  
 下表显示的不同可能值`type`参数。  
  
|“值”|描述|  
|-----------|-----------------|  
|`button`|命令按钮。|  
|`submit`|提交到服务器窗体的按钮。|  
|`reset`|清除窗体上一个按钮。|  
  
   
  
## Examples  
 下面的代码示例演示如何创建的新实例<xref:System.Web.UI.HtmlControls.HtmlInputButton>控制使用重载构造函数。  
  
 [!code-aspx-csharp[HtmlInputButtonCtor2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonCtor2/CS/htmlinputbuttonctor2cs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonCtor2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonCtor2/VB/htmlinputbuttonctor2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在单击 <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> 控件时是否执行验证。</summary>
        <value>
          如果在单击 <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> 控件后执行验证，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，执行页验证时<xref:System.Web.UI.HtmlControls.HtmlInputButton>控件被单击。 页验证确定输入的控件是否与全部通过指定由验证控件的验证规则页上的验证控件。  
  
 你可以指定或确定是否在客户端和服务器上执行验证时<xref:System.Web.UI.HtmlControls.HtmlInputButton>通过单击控件<xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A>属性。 若要禁止从正在执行的验证，请设置<xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A>属性`false`。  
  
 此属性通常用在事件处理程序<xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick>事件，以防止在单击取消或重置按钮时出现的页验证。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A>属性以防止在发生的页验证。 请注意如何<xref:System.Web.UI.WebControls.BaseValidator.Validate%2A>方法单独激活每个验证控件。  
  
 [!code-aspx-csharp[HtmlInputButtonCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonCausesValidation/CS/htmlinputbuttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonCausesValidation/VB/htmlinputbuttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" />。</param>
        <summary>引发 <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> 事件并为生成回发而注册客户端脚本。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A>方法重写<xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=nameWithType>方法。 <xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A> 主要由控件开发人员使用。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A>方法，以便它始终显示自定义<xref:System.Web.UI.HtmlControls.HtmlInputButton>具有粗体文本控件。  
  
 [!code-aspx-csharp[CustomHtmlInputButtonOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/CS/custom_htmlinputbutton_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputButtonOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/VB/custom_htmlinputbutton_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputButtonOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/CS/custom_htmlinputbutton_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputButtonOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/VB/custom_htmlinputbutton_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServerClick">
      <MemberSignature Language="C#" Value="protected virtual void OnServerClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.OnServerClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerClick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" /> 事件。 这使您可以直接处理该事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick>引发事件时<xref:System.Web.UI.HtmlControls.HtmlInputButton>控件被单击。  
  
> [!NOTE]
>  重置按钮不会引发<xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick>事件。  
  
 创建 <xref:System.Web.UI.HtmlControls.HtmlInputButton> 委托时，需要标识将要处理该事件的方法。 若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。 除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。 有关事件处理程序委托的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick>事件。 事件处理程序将页上添加两个文本框中的值，并显示结果。  
  
 [!code-aspx-csharp[HtmlInputButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButton/CS/htmlinputbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlInputButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButton/VB/htmlinputbuttonvb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlInputButtonServerClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonServerClick/CS/htmlinputbuttonserverclickcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonServerClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonServerClick/VB/htmlinputbuttonserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">该事件的参数。</param>
        <summary>当 <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> 控件回发到服务器时引发此控件的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent%2A>方法由<xref:System.Web.UI.HtmlControls.HtmlInputButton>控件，它被单击时，引发<xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick>事件。  
  
 如果<xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A>属性是`true`、<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>使用控件中指定组的调用方法<xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A>属性。  
  
 此方法主要由控件开发人员扩展的功能使用<xref:System.Web.UI.HtmlControls.HtmlInputButton>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将这些特性呈现到指定的编写器中，然后调用 <see cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputButton.RenderAttributes%2A>方法重写基<xref:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes%2A?displayProperty=nameWithType>基方法。 <xref:System.Web.UI.HtmlControls.HtmlInputButton.RenderAttributes%2A> 主要由控件开发人员使用。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A>方法中的自定义的服务器控件，以便为始终显示为工具提示，可访问的特定标题文本<xref:System.Web.UI.HtmlControls.HtmlInputButton>。  
  
 [!code-aspx-csharp[CustomHtmlInputButtonRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/CS/custom_htmlinputbutton_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputButtonRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/VB/custom_htmlinputbutton_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputButtonRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/CS/custom_htmlinputbutton_renderattributes.cs#2)]
 [!code-vb[CustomHtmlInputButtonRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/VB/custom_htmlinputbutton_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerClick">
      <MemberSignature Language="C#" Value="public event EventHandler ServerClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当在网页上单击 <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> 控件时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将引发此事件时<xref:System.Web.UI.HtmlControls.HtmlInputButton>控件被单击。  
  
> [!NOTE]
>  重置按钮不会引发<xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick>事件。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和代码的处理程序<xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick>事件。 事件处理程序将页上添加两个文本框中的值，并显示结果。  
  
 [!code-aspx-csharp[HtmlInputButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButton/CS/htmlinputbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlInputButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButton/VB/htmlinputbuttonvb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlInputButtonServerClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonServerClick/CS/htmlinputbuttonserverclickcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonServerClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonServerClick/VB/htmlinputbuttonserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputButton.OnServerClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">表示要传递到事件处理程序的可选事件参数的 <see cref="T:System.String" />。</param>
        <summary>通过调用 <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" /> 方法实现 <see cref="M:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent(System.String)" /> 方法。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在 <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> 回发到服务器时导致验证的控件组。</summary>
        <value>在 <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> 控件回发到服务器时导致验证的控件组。 默认值为空字符串 ("")，指示尚未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 验证组允许您将在页面上的验证控件分配给特定类别。 每个验证组从其他页上的验证组可以独立进行验证。 使用<xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A>属性来为其指定验证组的名称<xref:System.Web.UI.HtmlControls.HtmlInputButton>控件回发到服务器时要进行验证。  
  
 此属性才起作用时，才的值<xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A>属性设置为`true`。 当指定的值<xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A>属性，只会验证控件且是指定组的一部分时验证<xref:System.Web.UI.HtmlControls.HtmlInputButton>控件回发到服务器。 如果未指定此属性的值与<xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A>属性设置为`true`，该控件发回发到服务器时，该页上未分配给验证组的所有验证控件进行都验证。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A>属性来指定要验证时的控件<xref:System.Web.UI.HtmlControls.HtmlInputButton>控件回发到服务器。 页面包含用于捕获从用户的数据的两个文本框和两个<xref:System.Web.UI.WebControls.RequiredFieldValidator>控件以确保用户未将一个文本框留空。 <xref:System.Web.UI.WebControls.RequiredFieldValidator>控件中的第一个文本框是`CityInfoGroup`验证组和<xref:System.Web.UI.WebControls.RequiredFieldValidator>控件中的第二个框是`StateInfoGroup`验证组。 当`CityQueryButton`单击后，仅在控件`CityInfoGroup`验证组进行验证。 当`StateQueryButton`单击后，仅在控件`StateInfoGroup`验证组进行验证。  
  
 [!code-aspx-csharp[HtmlInputButtonValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonValidationGroup/CS/htmlinputbuttonvalidationgroupcs.aspx#1)]
 [!code-aspx-vb[HtmlInputButtonValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonValidationGroup/VB/htmlinputbuttonvalidationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
      </Docs>
    </Member>
  </Members>
</Type>