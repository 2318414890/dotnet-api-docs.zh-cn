<Type Name="HtmlTableCellCollection" FullName="System.Web.UI.HtmlControls.HtmlTableCellCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fdc7ef3ae16e58ad9269f47ffad339a871312c1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590581" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HtmlTableCellCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HtmlTableCellCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HtmlTableCellCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTableCellCollection sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 对象的集合，这些对象表示 <see cref="T:System.Web.UI.HtmlControls.HtmlTable" /> 控件的一个行中的单元格。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>类以编程方式管理一套<xref:System.Web.UI.HtmlControls.HtmlTableCell>这些对象表示的单个行中的单元格<xref:System.Web.UI.HtmlControls.HtmlTable>控件。 此类通常用于添加、 删除或修改的行中的单元格的内容<xref:System.Web.UI.HtmlControls.HtmlTable>控件。  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlTable>控件包含<xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A>属性，它包含一套<xref:System.Web.UI.HtmlControls.HtmlTableRow>对象。 每个<xref:System.Web.UI.HtmlControls.HtmlTableRow>对象表示表中的单个行。 <xref:System.Web.UI.HtmlControls.HtmlTableRow>对象包含<xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A>表示的集合的属性<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象。 这些对象，反过来，表示单个单元格的行。 若要检索各个单元格，首先需要获取<xref:System.Web.UI.HtmlControls.HtmlTableRow>对象，表示包含表中的单元格的行 (从<xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A>集合<xref:System.Web.UI.HtmlControls.HtmlTable>控件)。 然后就可以获取<xref:System.Web.UI.HtmlControls.HtmlTableCell>表示行中的单元格的对象 (从<xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A>集合<xref:System.Web.UI.HtmlControls.HtmlTableRow>对象)。  
  
   
  
## Examples  
 下面的代码示例演示了如何动态生成的内容<xref:System.Web.UI.HtmlControls.HtmlTable>控件通过添加到单元格<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。 请注意，<xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A>属性所表示的行<xref:System.Web.UI.HtmlControls.HtmlTableRow>对象，是<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Rows" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="cell">要添加到集合中的 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />。</param>
        <summary>将指定的 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 对象追加到 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 集合的结尾。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法将添加指定<xref:System.Web.UI.HtmlControls.HtmlTableCell>到末尾的对象<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。 如果你想要插入<xref:System.Web.UI.HtmlControls.HtmlTableCell>在集合中，使用指定位置中的对象<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add%2A>方法要追加的表，由表示单元格<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象的末尾<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。 请注意，<xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A>属性所表示的行<xref:System.Web.UI.HtmlControls.HtmlTableRow>对象是<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 集合中移除所有 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于删除所有<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象从<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合和重置<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A>属性`0`。  
  
> [!NOTE]
>  此方法从行中删除单元格，但它不会从表删除行。 若要从表中删除行，请确保也会删除<xref:System.Web.UI.HtmlControls.HtmlTableRow>对象，表示从行<xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A>集合<xref:System.Web.UI.HtmlControls.HtmlTable>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear%2A>方法中的所有项中都移除<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。 然后再添加到集合并显示在新条目<xref:System.Web.UI.HtmlControls.HtmlTable>控件。  
  
 [!code-aspx-csharp[HtmlTableCellCollectioncClear#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectioncClear/CS/htmltablecellcollectionclearcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectioncClear#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectioncClear/VB/htmltablecellcollectionclearvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">一个从零开始的 <see cref="T:System.Array" />，它接收 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 的复制项。</param>
        <param name="index">指定 <see cref="T:System.Array" /> 中接收项的第一个索引。</param>
        <summary>从 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 中的指定索引开始，将 <see cref="T:System.Array" /> 集合中的项复制到指定的 <see cref="T:System.Array" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法的内容复制<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>到指定的集合<xref:System.Array?displayProperty=nameWithType>、 该数组的指定索引处开始。  
  
> [!NOTE]
>  `array`参数必须是一个从零开始<xref:System.Array?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo%2A>方法来创建一个数组，包含内容与相同<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。 然后循环访问数组以显示的内容<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。  
  
 [!code-aspx-csharp[HtmlTableCellCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionCopyTo/CS/htmltablecellcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionCopyTo/VB/htmltablecellcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 集合中的 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 对象数。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 中的 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 对象数。 默认值为 <see langword="0" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A>属性来确定中包含的单元格的数目<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。 <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A>当循环访问集合以确定上限时，通常使用属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A>属性来确定的行中的单元数<xref:System.Web.UI.HtmlControls.HtmlTable>控件。 此值然后用作上限的循环来循环执行的表中的行单元格。  
  
 [!code-aspx-csharp[HtmlTableCellCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionCount/CS/htmltablecellcollectioncountcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionCount/VB/htmltablecellcollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个实现了 <see cref="T:System.Collections.IEnumerator" /> 的对象，其中包含 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 集合内的所有 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 对象。</summary>
        <returns>一个实现了 <see cref="T:System.Collections.IEnumerator" /> 的对象，其中包含 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 中的所有 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法创建<xref:System.Collections.IEnumerator?displayProperty=nameWithType>-实现可以循环访问要检索的内容中的每个项的对象<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。  
  
 使用<xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType>当前获取的项的属性指向集合中。  
  
 使用<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType>方法将移动到集合中的下一项。  
  
 使用<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType>方法将枚举器移到初始位置。  
  
> [!NOTE]
>  <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=nameWithType>方法必须在创建之后调用<xref:System.Collections.IEnumerator?displayProperty=nameWithType>-实现对象，或之后使用<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=nameWithType>方法将枚举器移动到集合中的第一项。 否则，表示的项<xref:System.Collections.IEnumerator.Current%2A?displayProperty=nameWithType>属性是不确定。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator%2A>方法来创建<xref:System.Collections.IEnumerator?displayProperty=nameWithType>-实现对象。 然后循环访问该对象以显示的内容<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。  
  
 [!code-aspx-csharp[HtmlTableCellCollectionienumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionienumerator/CS/htmltablecellcollectionienumeratorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionienumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionienumerator/VB/htmltablecellcollectionienumeratorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="index">
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 添加到 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 中的位置。</param>
        <param name="cell">要添加到 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />。</param>
        <summary>在 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 集合的指定索引位置添加指定的 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A>方法将添加指定<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象传递给<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合中指定索引处。 如果你想要只需附加<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象集合，使用末尾<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A>方法动态插入所表示的表的单元格<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象，在<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。  
  
 [!code-aspx-csharp[HtmlTableCellCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionInsert/CS/htmltablecellcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionInsert/VB/htmltablecellcollectioninsertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取指示 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 集合是否为只读的值。</summary>
        <value>
          所有情况下均为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性始终返回`false`，则指示<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合可以在所有情况下写入。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示对 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 集合的访问是否同步（线程安全）。</summary>
        <value>
          所有情况下均为 <see langword="false" />，指示对 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 的访问不同步（非线程安全）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性派生自<xref:System.Collections.ICollection?displayProperty=nameWithType>和重写以始终返回`false`以指示该访问权限<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合已同步 （非线程安全）。  
  
 有关详细信息<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized%2A>属性，请参阅<xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=nameWithType>属性<xref:System.Collections.ICollection?displayProperty=nameWithType>接口。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlControls.HtmlTableCell this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlTableCell Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As HtmlTableCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::HtmlControls::HtmlTableCell ^ default[int] { System::Web::UI::HtmlControls::HtmlTableCell ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlTableCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">指定要返回的 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的序号索引值。</param>
        <summary>获取 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 集合中指定索引处的 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 对象。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />，它表示在 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 中包含的单元格。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此索引器获取<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。 你可以访问<xref:System.Web.UI.HtmlControls.HtmlTableCell>通过使用简单的数组表示法指定索引处的对象。  
  
> [!NOTE]
>  集合是从零开始;因此，第一个元素集合中的包含索引值为`0`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用索引器检索所表示的表的单元格<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象，从<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。 然后用新内容更新单元格。 请注意，<xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A>属性所表示的行<xref:System.Web.UI.HtmlControls.HtmlTableRow>对象是<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。  
  
 [!code-aspx-csharp[HtmlTableCellCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollection/CS/htmltablecellcollectioncs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollection/VB/htmltablecellcollectionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableCell" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.HtmlControls.HtmlTableCell cell);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.HtmlControls.HtmlTableCell cell) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (cell As HtmlTableCell)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::HtmlControls::HtmlTableCell ^ cell);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.HtmlControls.HtmlTableCell" />
      </Parameters>
      <Docs>
        <param name="cell">要从 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 移除的 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" />。</param>
        <summary>从 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 集合中移除指定的 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于删除指定<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。  
  
> [!NOTE]
>  如果指定<xref:System.Web.UI.HtmlControls.HtmlTableCell>中不存在的对象<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>从集合中移除集合中，任何项。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove%2A>方法来删除指定的单元格所表示的表的<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象，从<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。 此示例删除中的第一列的单元格<xref:System.Web.UI.HtmlControls.HtmlTable>控件。  
  
 [!code-aspx-csharp[HtmlTableCellCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionRemove/CS/htmltablecellcollectionremovecs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionRemove/VB/htmltablecellcollectionremovevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要从 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 中移除的 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 的索引。</param>
        <summary>移除 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 集合中指定索引处的 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于删除<xref:System.Web.UI.HtmlControls.HtmlTableCell>从指定索引处的对象<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。 索引号是从零开始;因此，在集合中的第一项具有的索引值`0`。  
  
> [!NOTE]
>  如果指定的索引值的范围之外的索引，将引发异常。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt%2A>方法来删除从指定索引处的项<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>集合。 此示例删除中的第一列的单元格<xref:System.Web.UI.HtmlControls.HtmlTable>控件。  
  
 [!code-aspx-csharp[HtmlTableCellCollectionRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCellCollectionRemoveAt/CS/htmltablecellcollectionremoveatcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCellCollectionRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCellCollectionRemoveAt/VB/htmltablecellcollectionremoveatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的索引超出集合中索引值的范围。</exception>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取可用于同步 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCellCollection" /> 集合访问的对象。</summary>
        <value>可用于同步集合访问的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在此实现中返回的对象是的当前实例<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection>类。  
  
 有关详细信息<xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot%2A>属性，请参阅<xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=nameWithType>属性<xref:System.Collections.ICollection?displayProperty=nameWithType>接口。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
  </Members>
</Type>