<Type Name="HtmlTableCell" FullName="System.Web.UI.HtmlControls.HtmlTableCell">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="87b930d3b9e39fbfd53c9e92c5acd294238fafad" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36389032" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlTableCell : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlTableCell extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlTableCell" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTableCell&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTableCell : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlTableCell = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ConstructorNeedsTag(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Web.UI.HtmlControls.HtmlTableRow" /> 对象中的 <see langword="&lt;td&gt;" /> 和 <see langword="&lt;th&gt;" /> HTML 元素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `<td>`元素表示表中的数据单元格时`<th>`元素表示表标题单元格。 使用<xref:System.Web.UI.HtmlControls.HtmlTableCell>类以编程方式控制`<td>`和`<th>`中的 HTML 元素<xref:System.Web.UI.HtmlControls.HtmlTableRow>对象。  
  
 <xref:System.Web.UI.HtmlControls.HtmlTableCell>类，可以通过指定的背景色、 的边框颜色、 高度和宽度自定义的表中的单元格的外观。 使用设置这些属性<xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A>， <xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A>， <xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A>，和<xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A>属性。  
  
 你可以控制如何通过指定内容的垂直和水平对齐方式显示单元格的内容。 你还可以指定是否内容自动在下一行时继续到达该单元格的末尾。 由控制的水平对齐方式<xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A>属性，而<xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A>属性控制的垂直对齐方式。 <xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A>属性指示是否禁用文本换行。  
  
 通过使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A>或<xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A>属性，可以控制的列或单元格所占据的行数。 例如，你可以创建占用表中的两个列，通过设置单元格<xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A>属性`2`。  
  
 有关的实例的初始属性值的列表<xref:System.Web.UI.HtmlControls.HtmlTableCell>，请参阅<xref:System.Web.UI.HtmlControls.HtmlTableCell.%23ctor%2A>构造函数。  
  
> [!CAUTION]
>  此控件可用来显示用户输入，这可能包含恶意客户端脚本。 检查从客户端可执行的脚本、 SQL 语句或其他代码之前发送在你的应用程序中显示它的任何信息。 ASP.NET 提供的一输入的请求验证功能块脚本和 HTML 在用户输入。 验证服务器控件还提供用于评估用户输入。 有关详细信息，请参阅[验证服务器控件语法](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCell>修改表中的单元格的内容。 请注意，<xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A>集合<xref:System.Web.UI.HtmlControls.HtmlTable>控件包含一个行集合 (<xref:System.Web.UI.HtmlControls.HtmlTableRow>对象) 表中。 <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A>集合<xref:System.Web.UI.HtmlControls.HtmlTableRow>对象是单元格的集合 (<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象) 行中。  
  
 [!code-aspx-csharp[HtmlTblCell#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCell/CS/htmltablecellcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCell#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCell/VB/htmltablecellvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTable.Rows" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTableRow" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableRow.Cells" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTableCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTableCell();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用默认值初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.HtmlControls.HtmlTableCell>类。 此构造函数用于创建<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象，表示`<td>`表数据单元格的元素。  
  
 下表显示的实例的初始属性值<xref:System.Web.UI.HtmlControls.HtmlTableCell>。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"Td"文字字符串。|  
  
   
  
## Examples  
 下面的代码示例演示如何创建的实例<xref:System.Web.UI.HtmlControls.HtmlTable>控件替换为<xref:System.Web.UI.HtmlControls.HtmlTableCell>控制，并将表放在网页上。 请注意如何<xref:System.Web.UI.HtmlControls.HtmlTableCell>控件的默认构造函数用于创建`<td>`元素，其采用字符串参数的重载构造函数替换为文本字符串"th"来同时创建`<th>`元素。  
  
 [!code-aspx-csharp[HtmlTableCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCtor/CS/htmltablectorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCtor/VB/htmltablectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTableRow.#ctor" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlTable.#ctor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTableCell (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTableCell(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlControls.HtmlTableCell : string -&gt; System.Web.UI.HtmlControls.HtmlTableCell" Usage="new System.Web.UI.HtmlControls.HtmlTableCell tagName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">标记的元素名。</param>
        <summary>用指定的标记名初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.HtmlControls.HtmlTableCell>类。 它允许你创建<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象，表示中的单元格<xref:System.Web.UI.HtmlControls.HtmlTable>控件。 它通常用于创建<xref:System.Web.UI.HtmlControls.HtmlTableCell>对象，表示`<th>`表标题单元格的元素。 虽然可以使用此构造函数来创建`<td>`元素对于表数据单元，你通常使用默认构造函数。  
  
> [!NOTE]
>  虽然此构造函数允许你指定的单元格元素，若要创建，`<th>`元素是唯一受支持的单元格元素。 为将来的兼容性，此构造函数，可创建其他 HTML 单元格元素，可能会变得可用。  
  
 下表显示的实例的初始属性值<xref:System.Web.UI.HtmlControls.HtmlTableCell>。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|`tagName` 参数的值。|  
  
   
  
## Examples  
 下面的代码示例演示如何创建的实例<xref:System.Web.UI.HtmlControls.HtmlTable>控件替换为<xref:System.Web.UI.HtmlControls.HtmlTableCell>控制，并将表放在网页上。 请注意如何<xref:System.Web.UI.HtmlControls.HtmlTableCell>控件的默认构造函数用于创建`<td>`元素，尽管采用字符串参数的重载构造函数使用带有文本"th"来创建`<th>`元素。  
  
 [!code-aspx-csharp[HtmlTableCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTableCtor/CS/htmltablectorcs.aspx#1)]
 [!code-aspx-vb[HtmlTableCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTableCtor/VB/htmltablectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Align">
      <MemberSignature Language="C#" Value="public string Align { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Align" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
      <MemberSignature Language="VB.NET" Value="Public Property Align As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Align { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Align : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.Align" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格中内容的水平对齐方式。</summary>
        <value>由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例表示的单元格中的内容的水平对齐方式。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A>属性指定在单元格中的实例所表示的内容的水平对齐方式<xref:System.Web.UI.HtmlControls.HtmlTableCell>类。  
  
> [!NOTE]
>  设置此属性将影响仅由的实例表示的单元格<xref:System.Web.UI.HtmlControls.HtmlTableCell>类。 若要将相同的对齐方式应用于表中的整个行的单元格，将设置<xref:System.Web.UI.HtmlControls.HtmlTableRow.Align%2A>由的实例所表示的行的属性<xref:System.Web.UI.HtmlControls.HtmlTableRow>类。  
  
 下表列出可用于此属性的值。  
  
|“值”|描述|  
|-----------|-----------------|  
|`Left`|将包含该单元格的左边缘的单元格的内容的对齐。|  
|`Center`|对齐单元格中居中的内容。|  
|`Right`|对齐的单元格的右边缘与单元格的内容。|  
  
> [!NOTE]
>  你还可以使用`Justify`和`Char`为此属性的值; 但是，并非所有浏览器支持这些功能。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.Align%2A>属性以编程方式控制中的单元格的内容的对齐方式<xref:System.Web.UI.HtmlControls.HtmlTable>控件。  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="BgColor">
      <MemberSignature Language="C#" Value="public string BgColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BgColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BgColor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BgColor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BgColor : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格的背景色。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例所表示的单元格的背景色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A>属性指定的实例表示的单元格的背景色<xref:System.Web.UI.HtmlControls.HtmlTableCell>类。 按名称或使用前面井号字符的十六进制值，则可以指定颜色 （#），在窗体 #RRGGBB 中。 RR、 GG 和 BB 表示从 0 到 255 分别表示一种颜色，红色、 绿色和蓝色组件十六进制值。 例如，值 # 0000ff> 表示的颜色为蓝色。 它指定对于红色和绿色的组件，而为蓝色组件指定的最大值 (FF) 的最小值 (00)。  
  
 下表显示了十六个预定义的 HTML 颜色名称和相应的十六进制值，可以用于<xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A>属性。 有关 HTML 颜色的详细信息，请参阅[World Wide Web Consortium (W3C) 网站](http://go.microsoft.com/fwlink/?linkid=37125)。  
  
|颜色名称|十六进制值|  
|----------------|-----------------------|  
|浅绿色|#00FFFF|  
|黑色|#000000|  
|蓝色|#0000FF|  
|紫红色|# FF00FF|  
|灰色|#808080|  
|绿色|#008000|  
|为浅|#00FF00|  
|褐紫红色|#800000|  
|深蓝色|#000080|  
|橄榄|#808000|  
|紫色|#800080|  
|红色|#FF0000|  
|白银|#C0C0C0|  
|青色|#008080|  
|空白|#FFFFFF|  
|黄色|#FFFF00|  
  
 与一起使用的可用颜色<xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A>属性可以确定从<xref:System.Drawing.KnownColor>枚举。  
  
 颜色名称不区分大小写。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.BgColor%2A>属性以编程方式控制中的单元格的背景色<xref:System.Web.UI.HtmlControls.HtmlTable>控件。  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
        <altmember cref="T:System.Drawing.KnownColor" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public string BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BorderColor { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格的边框颜色。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例所表示的单元格的边框颜色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A>属性指定的实例表示的单元格的边框颜色<xref:System.Web.UI.HtmlControls.HtmlTableCell>类。 按名称或使用前面井号字符的十六进制值，则可以指定颜色 （#），在窗体 #RRGGBB 中。 RR、 GG 和 BB 表示从 0 到 255 分别表示一种颜色，红色、 绿色和蓝色组件十六进制值。 例如，值 # 0000ff> 表示的颜色为蓝色。 它指定对于红色和绿色的组件，而为蓝色组件指定的最大值 (FF) 的最小值 (00)。  
  
 下表显示了十六个预定义的 HTML 颜色名称和相应的十六进制值，可以用于<xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A>属性。 有关 HTML 颜色的详细信息，请参阅[World Wide Web Consortium (W3C) Web](http://go.microsoft.com/fwlink/?linkid=37125)站点。  
  
|颜色名称|十六进制值|  
|----------------|-----------------------|  
|浅绿色|#00FFFF|  
|黑色|#000000|  
|蓝色|#0000FF|  
|紫红色|# FF00FF|  
|灰色|#808080|  
|绿色|#008000|  
|为浅|#00FF00|  
|褐紫红色|#800000|  
|深蓝色|#000080|  
|橄榄|#808000|  
|紫色|#800080|  
|红色|#FF0000|  
|白银|#C0C0C0|  
|青色|#008080|  
|空白|#FFFFFF|  
|黄色|#FFFF00|  
  
 与一起使用的可用颜色<xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A>属性可以确定从<xref:System.Drawing.KnownColor>枚举。  
  
 颜色名称不区分大小写。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor%2A>属性以编程方式控制中的单元格的边框颜色<xref:System.Web.UI.HtmlControls.HtmlTable>控件。  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTable" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
        <altmember cref="T:System.Drawing.KnownColor" />
      </Docs>
    </Member>
    <Member MemberName="ColSpan">
      <MemberSignature Language="C#" Value="public int ColSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
      <MemberSignature Language="VB.NET" Value="Public Property ColSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColSpan { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ColSpan : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格占用的列数。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例所表示的单元格所占用的列数。 默认值为 <see langword="-1" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在单元格中的实例表示<xref:System.Web.UI.HtmlControls.HtmlTableCell>类，而使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A>属性指定的单元格所占据的列数。 这可以占用多个列的表中创建一个单元格。 例如，假设你有一个包含两个列和两个行的表。 你可以创建跨这两个列的表标题单元格。 设置<xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A>属性到第一行中最左侧单元格`2`以指示该单元格占用表中的两个列。  
  
> [!CAUTION]
>  当跨列，请务必跨越每个列的行中定义一个更少的单元格。 例如，如果跨两个列，则可定义一个更少的单元格当前行中。 否则为该行将会超过表中的列数和表将不会按预期方式显示。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan%2A>属性指定的第一行中的单元格<xref:System.Web.UI.HtmlControls.HtmlTable>控件占用两列。  
  
 [!code-aspx-csharp[HtmlTblCellColSpan#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellColSpan/CS/htmltablecellcolspancs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellColSpan#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellColSpan/VB/htmltablecellcolspanvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public string Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Height { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Height : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格的高度（以像素为单位）。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例所表示的单元格的高度（以像素为单位）。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A>属性指定的实例表示单元格的高度 （以像素为单位）<xref:System.Web.UI.HtmlControls.HtmlTableCell>类。 当指定单元格的高度时，在同一行中的所有单元格自动具有同一高度。  
  
> [!NOTE]
>  如果指定一个小于显示单元格的内容所需大小的高度，则忽略此属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.Height%2A>属性以编程方式控制中的单元格的高度<xref:System.Web.UI.HtmlControls.HtmlTable>控件。  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
      </Docs>
    </Member>
    <Member MemberName="NoWrap">
      <MemberSignature Language="C#" Value="public bool NoWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NoWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoWrap : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.MinimizableAttributeTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示当到达单元格末尾时，由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格中的文本是否自动继续在下一行显示。</summary>
        <value>如果在单元格中文本不自动换行，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A>属性指定或确定是否在单元格中的文本实例所表示的<xref:System.Web.UI.HtmlControls.HtmlTableCell>类自动在下一行时继续到达该单元格的结尾。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap%2A>属性以编程方式控制中的单元格的文本是否换行<xref:System.Web.UI.HtmlControls.HtmlTable>控件。  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlTableCell.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>呈现 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 控件的结束标记。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag%2A>方法提供调用基类的之后附加格式设置<xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A>方法。 附加的格式设置使<xref:System.Web.UI.HtmlControls.HtmlTableCell>控件呈现的 HTML 更易读的结束标记之后添加返回一行。  
  
 <xref:System.Web.UI.HtmlControls.HtmlTableCell.RenderEndTag%2A>主要由控件开发人员扩展功能的使用方法<xref:System.Web.UI.HtmlControls.HtmlTableCell>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="RowSpan">
      <MemberSignature Language="C#" Value="public int RowSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowSpan" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
      <MemberSignature Language="VB.NET" Value="Public Property RowSpan As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowSpan { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RowSpan : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格占用的行数。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格占用的行数。 默认值为 <see langword="-1" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在单元格中的实例表示<xref:System.Web.UI.HtmlControls.HtmlTableCell>类，而使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A>属性指定的单元格所占据的行数。 这可以占用多个行的表中创建一个单元格。 例如，假设你有一个包含两个列和两个行的表。 你可以创建重叠两个行的列。 设置<xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A>属性的第一列中最左侧单元格`2`以指示该单元格占用两个表中的行。  
  
> [!CAUTION]
>  跨越行时，请务必在跨越每一行的列定义一个更少的单元格。 例如，如果跨越两行，则该列中定义一个更少的单元格。 否则为该列将会超过表中的行数和表将不会按预期方式显示。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan%2A>属性指定的第一列中的单元格<xref:System.Web.UI.HtmlControls.HtmlTable>控件能够跨越两行。  
  
 [!code-aspx-csharp[HtmlTblCellRowSpan#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellRowSpan/CS/htmltablecellrowspancs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellRowSpan#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellRowSpan/VB/htmltablecellrowspanvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      </Docs>
    </Member>
    <Member MemberName="VAlign">
      <MemberSignature Language="C#" Value="public string VAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property VAlign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VAlign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VAlign : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.VAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格内容的垂直对齐方式。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例所表示的单元格的内容的垂直对齐方式。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A>属性指定在单元格中的实例所表示的内容的垂直对齐方式<xref:System.Web.UI.HtmlControls.HtmlTableCell>类。  
  
> [!NOTE]
>  设置此属性将影响仅由的实例表示的单元格<xref:System.Web.UI.HtmlControls.HtmlTableCell>类。 若要将相同的垂直对齐方式应用于表中的整个行的单元格，将设置<xref:System.Web.UI.HtmlControls.HtmlTableRow.VAlign%2A>由的实例所表示的行的属性<xref:System.Web.UI.HtmlControls.HtmlTableRow>类。  
  
 下表列出可用于此属性的值。  
  
|“值”|描述|  
|-----------|-----------------|  
|`Top`|将包含该单元格的上边缘的单元格的内容的对齐。|  
|`Middle`|对齐的单元格的中心中的单元格的内容。|  
|`Bottom`|将包含该单元格的下边缘的单元格的内容的对齐。|  
  
> [!NOTE]
>  你还可以使用`BaseLine`作为此属性的值。 但是，并非所有浏览器都支持此功能。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.VAlign%2A>属性以编程方式控制中的单元格的内容的垂直对齐方式<xref:System.Web.UI.HtmlControls.HtmlTable>控件。  
  
 [!code-aspx-csharp[HtmlTblCellBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellBehavior/CS/htmltablecellbehaviorcs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellBehavior/VB/htmltablecellbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Align" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.ColSpan" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.NoWrap" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.RowSpan" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public string Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlTableCell.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Width { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Width : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlTableCell.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 类的实例所表示的单元格的宽度（以像素为单位）。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlTableCell" /> 的实例所表示的单元格的宽度（以像素为单位）。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A>属性指定的实例表示单元格的宽度 （以像素为单位）<xref:System.Web.UI.HtmlControls.HtmlTableCell>类。 当你指定的单元格的宽度时，同一列中的所有单元格自动共享该宽度。  
  
> [!NOTE]
>  如果您指定了小于显示单元格的内容所需大小的宽度，则忽略此属性。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlTableCell.Width%2A>属性以编程方式控制中的单元格的宽度<xref:System.Web.UI.HtmlControls.HtmlTable>控件。  
  
 [!code-aspx-csharp[HtmlTblCellAppearance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTblCellAppearance/CS/htmltablecellappearancecs.aspx#1)]
 [!code-aspx-vb[HtmlTblCellAppearance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTblCellAppearance/VB/htmltablecellappearancevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BgColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.BorderColor" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlTableCell.Height" />
      </Docs>
    </Member>
  </Members>
</Type>