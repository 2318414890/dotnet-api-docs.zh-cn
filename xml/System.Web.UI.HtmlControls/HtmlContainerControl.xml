<Type Name="HtmlContainerControl" FullName="System.Web.UI.HtmlControls.HtmlContainerControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bb0f1d6bf95e9fbe61d21faa9cfaf8aecb556f3a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39937794" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HtmlContainerControl : System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HtmlContainerControl extends System.Web.UI.HtmlControls.HtmlControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HtmlContainerControl&#xA;Inherits HtmlControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlContainerControl abstract : System::Web::UI::HtmlControls::HtmlControl" />
  <TypeSignature Language="F#" Value="type HtmlContainerControl = class&#xA;    inherit HtmlControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>用作映射到需要具有开始标记和结束标记的 HTML 元素的 HTML 服务器控件的抽象基类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 结束标记与最常用的控件都`<form>`， `<table>`， `<tr>`， `<td>`， `<a>`，并`<span>`元素。  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>并<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>属性，您可以操作的开始和结束标记之间的内容<xref:System.Web.UI.HtmlControls.HtmlContainerControl>-派生的控件。  
  
 有关实例的初始属性值的列表<xref:System.Web.UI.HtmlControls.HtmlContainerControl>，请参阅<xref:System.Web.UI.HtmlControls.HtmlContainerControl.%23ctor%2A>构造函数。  
  
 不是直接创建此类的新实例。  
  
> [!CAUTION]
>  如果使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>属性指定的开始和结束标记的文本的 HTML 服务器控件之间的文本不是 HTML 编码。 这样，可以在文本中嵌入在 HTML 标记中的脚本。 当使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>属性，请务必验证值，以减少安全漏洞。 否则，请考虑使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>属性改为。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>的此类动态生成 Web 页中的消息属性。  
  
 [!code-aspx-csharp[Classic HtmlContainerControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlContainerControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlContainerControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlContainerControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HtmlContainerControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HtmlContainerControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>用默认值初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.HtmlControls.HtmlContainerControl>类使用默认值。  
  
> [!NOTE]
>  此类的实例不是直接创建。 从其他 HTML 控件类来初始化此类中定义的属性的构造函数调用此构造函数。  
  
 下表显示的实例的初始属性值<xref:System.Web.UI.HtmlControls.HtmlContainerControl>。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"Span"的文本字符串。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlContainerControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlContainerControl(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlControls.HtmlContainerControl : string -&gt; System.Web.UI.HtmlControls.HtmlContainerControl" Usage="new System.Web.UI.HtmlControls.HtmlContainerControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">字符串，它指定控件的标记名。</param>
        <summary>用指定的标记名初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.HtmlControls.HtmlContainerControl>类使用指定的标记。  
  
> [!NOTE]
>  此类的实例不是直接创建。 从其他 HTML 控件类来初始化此类中定义的属性的构造函数调用此构造函数。  
  
 下表显示的实例的初始属性值<xref:System.Web.UI.HtmlControls.HtmlContainerControl>。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|指定的值`tag`参数。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlContainerControl.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个新的 <see cref="T:System.Web.UI.ControlCollection" /> 对象来保存服务器控件的子控件（包括文本控件和服务器控件）。</summary>
        <returns>
          <see cref="T:System.Web.UI.ControlCollection" />，包含 <see cref="T:System.Web.UI.HtmlControls.HtmlControl" /> 子服务器控件。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="InnerHtml">
      <MemberSignature Language="C#" Value="public virtual string InnerHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerHtml" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerHtml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerHtml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerHtml : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置位于指定的 HTML 服务器控件的开始标记和结束标记之间的内容。</summary>
        <value>HTML 服务器控件的开始标记和结束标记之间的 HTML 内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>属性以编程方式修改开始和结束标记的 HTML 服务器控件之间的内容。  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>属性不会自动编码的 HTML 实体的特殊字符。 HTML 实体，您可以显示特殊字符，如`<`字符，通常会将浏览器解释为具有特殊含义。 `<`字符将被解释为标记的起始位置和不在页上显示。 若要显示`<`字符，您需要使用该实体`&lt;`。  
  
 例如，如果<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>属性设置为`"<b> Hello </b>"`，则`<`并`>`字符不会转换为`&lt;`和`&gt;`分别。 仍可呈现的输出： \<b > Hello  \< /b >。 浏览器将检测`<b>`标记，并以显示文本，大家好，粗体的字体。  
  
> [!CAUTION]
>  由于文本不是 HTML 编码，它可以嵌入在 HTML 中的脚本标记文本中。 如果使用用户输入以动态方式设置此属性，请务必验证值，以减少安全漏洞。 有关详细信息，请参阅[安全性和用户输入](~/docs/standard/security/security-and-user-input.md)。  
  
 若要提供自动 HTML 编码和解码，使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>属性。  
  
> [!NOTE]
>  如果不有任何子控件，<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>属性包含值<xref:System.String.Empty?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>属性动态设置短信。  
  
 [!code-aspx-csharp[Classic HtmlContainerControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlContainerControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlContainerControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlContainerControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">存在多个 HTML 服务器控件。  
  
\- 或 - 
HTML 服务器控件不是 <see cref="T:System.Web.UI.LiteralControl" /> 也不是 <see cref="T:System.Web.UI.DataBoundLiteralControl" />。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText" />
        <altmember cref="M:System.Web.UI.Control.IsLiteralContent" />
        <altmember cref="M:System.Web.UI.Control.HasControls" />
        <altmember cref="T:System.Web.UI.DataBoundLiteralControl" />
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public virtual string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlContainerControl.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指定 HTML 服务器控件的开始标记和结束标记之间的文本。</summary>
        <value>HTML 服务器控件的开始标记和结束标记之间的文本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>属性以编程方式修改开始和结束标记的 HTML 服务器控件之间的文本。  
  
 与不同<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>属性，<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>属性自动将特殊字符与 HTML 实体编码。 HTML 实体，您可以显示特殊字符，如`<`字符，通常会将浏览器解释为具有特殊含义。 `<`字符将被解释为标记的起始位置和不在页上显示。 若要显示`<`字符，您需要使用该实体`&lt;`。  
  
 例如，如果<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>属性设置为`"<b> Hello </b>"`，则`<`并`>`符号转换为`&lt;`和`&gt;`分别。 呈现的输出将是： &lt; b &gt; Hello &lt; b </b &gt;。 `&lt;`和`&gt;`实体将指示对这些字符将显示在页上的浏览器。 在浏览器将不会检测`<b>`标记，并以粗体显示的文本。 在页面上显示的文本为： \<b > Hello  \< /b >。  
  
 若要防止自动 HTML 编码和解码，使用<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>属性。  
  
> [!NOTE]
>  如果不有任何子控件，<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>属性包含值<xref:System.String.Empty?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的代码示例演示了 HTML 编码服务可通过<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerText%2A>属性。  
  
 [!code-aspx-csharp[Classic HtmlContainerControl.InnerText Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlContainerControl.InnerText Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HtmlContainerControl.InnerText Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlContainerControl.InnerText Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">存在多个 HTML 服务器控件。  
  
\- 或 - 
HTML 服务器控件不是 <see cref="T:System.Web.UI.LiteralControl" /> 也不是 <see cref="T:System.Web.UI.DataBoundLiteralControl" />。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="htmlContainerControl.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的控件状态的 <see cref="T:System.Object" />。</param>
        <summary>从前一个由 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 方法保存的用户控件请求还原 <see cref="M:System.Web.UI.Control.SaveViewState" /> 控件的视图状态。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由.NET Framework 基础结构并不应在代码中直接使用。 但是，控件开发人员可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState%2A>方法调用基类的<xref:System.Web.UI.Control.LoadViewState%2A>方法。 此外，<xref:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState%2A>方法设置<xref:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlContainerControl.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收 <see cref="T:System.Web.UI.HtmlTextWriter" /> 内容的 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />。</param>
        <summary>将 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 控件呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.Render%2A>方法重写<xref:System.Web.UI.HtmlControls.HtmlControl.Render%2A?displayProperty=nameWithType>方法以呈现开始标记、 子控件和结束标记<xref:System.Web.UI.HtmlControls.HtmlContainerControl>控件。  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.Render%2A>方法主要由控件开发人员扩展功能的<xref:System.Web.UI.HtmlControls.HtmlContainerControl>控件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>重写时<see cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.Render(System.Web.UI.HtmlTextWriter)" />方法在派生类中，则一定要调用的基类<see cref="M:System.Web.UI.HtmlControls.HtmlControl.Render(System.Web.UI.HtmlTextWriter)" />方法，以便<see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />控件正确呈现。</para>
        </block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlContainerControl.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 实例。</param>
        <summary>将 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 控件的特性呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlContainerControl.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" /> 控件的结束标记呈现到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A>调用方法<xref:System.Web.UI.HtmlControls.HtmlContainerControl.Render%2A>方法以呈现的结束标记<xref:System.Web.UI.HtmlControls.HtmlContainerControl>控件。  
  
 <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag%2A>方法主要由控件开发人员扩展功能的<xref:System.Web.UI.HtmlControls.HtmlContainerControl>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>