<Type Name="HtmlSelect" FullName="System.Web.UI.HtmlControls.HtmlSelect">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cb7d9d04129bf23b651520c637e389bc307bb20c" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53392091" /></Metadata><TypeSignature Language="C#" Value="public class HtmlSelect : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlSelect extends System.Web.UI.HtmlControls.HtmlContainerControl implements class System.Web.UI.IParserAccessor, class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlSelect" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlSelect&#xA;Inherits HtmlContainerControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlSelect : System::Web::UI::HtmlControls::HtmlContainerControl, System::Web::UI::IPostBackDataHandler" />
  <TypeSignature Language="F#" Value="type HtmlSelect = class&#xA;    inherit HtmlContainerControl&#xA;    interface IPostBackDataHandler&#xA;    interface IParserAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IParserAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.HtmlControls.HtmlSelectBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允许对服务器上的 HTML <see langword="&lt;select&gt;" /> 元素进行编程访问。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect>控件创建一个选择框。 指定项列表控件中放置 HTML`<option>`元素的开始和结束之间`<select>`标记。 每个项都由<xref:System.Web.UI.WebControls.ListItem?displayProperty=nameWithType>对象。 若要指定每个项在控件中显示的文本，可以设置<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>属性的项或直接将文本的开始和结束之间`<option>`标记。 通过设置<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>项的属性，您可以将值与关联不同于文本的项。 若要从列表中选择某个项，默认情况下，设置<xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=nameWithType>到该项目的属性`true`。  
  
 您可以控制外观和行为<xref:System.Web.UI.HtmlControls.HtmlSelect>通过设置控件<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>和<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>属性。 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>属性指定控件的高度 （以行为单位）。 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>属性指定多个项是否可以同时选择中<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 默认情况下，<xref:System.Web.UI.HtmlControls.HtmlSelect>控件将显示为下拉列表框。 如果允许多重选择 (通过设置<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>属性设置为`true`) 或指定大于一个行的高度 (通过设置<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>属性的值大于`1`)，控件将显示为列表框。  
  
 若要确定选定的项中的单选<xref:System.Web.UI.HtmlControls.HtmlSelect>控制，请使用<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>属性来获取所选的项的索引。 然后可以使用此值检索从项<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合。  
  
 若要确定选定的项目从<xref:System.Web.UI.HtmlControls.HtmlSelect>循环访问控件，它允许多项选择，<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合并测试<xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=nameWithType>的每个项的属性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>类提供了两个属性，以支持数据绑定。 若要将数据绑定到任何对象，它实现<xref:System.Collections.IEnumerable?displayProperty=nameWithType>接口 (如<xref:System.Data.DataView?displayProperty=nameWithType>， <xref:System.Collections.ArrayList?displayProperty=nameWithType>，和<xref:System.Collections.Generic.List%601?displayProperty=nameWithType>)，或<xref:System.ComponentModel.IListSource>界面，请使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性来指定要绑定到数据源。 当您将设置<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性时，必须手动编写代码来执行数据绑定。 若要自动绑定<xref:System.Web.UI.HtmlControls.HtmlSelect>控制到数据源表示数据源控件，使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性并将其值设置为<xref:System.Web.UI.Control.ID%2A>要使用的数据源控件的属性。 当您将设置<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性，<xref:System.Web.UI.HtmlControls.HtmlSelect>控件自动绑定到指定的数据源控件。 因此，不需要显式调用<xref:System.Web.UI.Control.DataBind%2A>方法。  
  
 此外可以指定数据源中的哪些字段绑定到<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>并<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>通过设置控件中的项的属性<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>属性，分别。 如果数据源包含多个数据源，使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>属性来指定要绑定到控件的特定源。 例如，如果你有<xref:System.Data.DataSet?displayProperty=nameWithType>对象具有多个表，必须指定要绑定到与该控件的表<xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>属性。  
  
 有关实例的初始属性值的列表<xref:System.Web.UI.HtmlControls.HtmlSelect>，请参阅<xref:System.Web.UI.HtmlControls.HtmlSelect.%23ctor%2A>构造函数。  
  
   
  
## Examples  
 下面的代码示例演示如何创建<xref:System.Web.UI.HtmlControls.HtmlSelect>通过显式声明在控件中显示的项的控件。  
  
 [!code-aspx-csharp[htmlselect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/htmlselect/CS/htmlselectcs.aspx#1)]
 [!code-aspx-vb[htmlselect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/htmlselect/VB/htmlselectvb.aspx#1)]  
  
 下面的代码示例演示如何创建<xref:System.Web.UI.HtmlControls.HtmlSelect>通过将控件绑定到数据源的控件。  
  
 [!code-aspx-csharp[HtmlSelectDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性指定的数据源<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性设置为<xref:System.Web.UI.Control.ID%2A>属性的<xref:System.Web.UI.WebControls.SqlDataSource>控件，用于检索数据。 加载页面时，<xref:System.Web.UI.HtmlControls.HtmlSelect>控件自动绑定到指定的数据源<xref:System.Web.UI.WebControls.SqlDataSource>控件和数据显示给用户。  
  
 [!code-aspx-csharp[HtmlSelect.DataSourceID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataSourceID/CS/htmlselect.datasourceidcs.aspx#1)]
 [!code-aspx-vb[HtmlSelect.DataSourceID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataSourceID/VB/htmlselect.datasourceidvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
    <altmember cref="T:System.Web.UI.WebControls.ListItem" />
    <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
    <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlSelect();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数来创建和初始化的新实例<xref:System.Web.UI.HtmlControls.HtmlSelect>类。  
  
 下表显示的实例的初始属性值<xref:System.Web.UI.HtmlControls.HtmlSelect>。  
  
|Property|初始值|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"选择"字符串。|  
  
   
  
## Examples  
 下面的代码示例演示如何动态创建的实例<xref:System.Web.UI.HtmlControls.HtmlSelect>控件并将它放置在网页上。  
  
 [!code-aspx-csharp[HtmlSelectCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectCtor/CS/htmlselectctorcs.aspx#1)]
 [!code-aspx-vb[HtmlSelectCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectCtor/VB/htmlselectctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.AddParsedSubObject : obj -&gt; unit" Usage="htmlSelect.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要添加的已分析的子控件。</param>
        <summary>将已分析的子控件添加到 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.AddParsedSubObject%2A> ASP.NET 使用方法添加到的已分析的子控件<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.HtmlControls.HtmlSelect.AddParsedSubObject%2A>方法中的自定义服务器控件，以便它始终检查的实例<xref:System.Web.UI.WebControls.ListItem>类添加到<xref:System.Web.UI.HtmlControls.HtmlSelect>选中项集合。  
  
 [!code-aspx-csharp[CustomHtmlSelectAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/CS/custom_htmlselect_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/VB/custom_htmlselect_addparsedsubobjectvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/CS/custom_htmlselect_addparsedsubobject.cs#2)]
 [!code-vb[CustomHtmlSelectAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/VB/custom_htmlselect_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">由 <paramref name="obj" /> 参数指定的子控件必须为 <see cref="T:System.Web.UI.WebControls.ListItem" /> 类型。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="protected virtual void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.ClearSelection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearSelection ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearSelection();" />
      <MemberSignature Language="F#" Value="abstract member ClearSelection : unit -&gt; unit&#xA;override this.ClearSelection : unit -&gt; unit" Usage="htmlSelect.ClearSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的列表选择并将所有项的 <see cref="P:System.Web.UI.WebControls.ListItem.Selected" /> 属性设置为 <see langword="false" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.ClearSelection%2A>方法遍历<xref:System.Web.UI.WebControls.ListItemCollection>集合由<xref:System.Web.UI.HtmlControls.HtmlSelect>控件的<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>属性，并设置<xref:System.Web.UI.WebControls.ListItem.Selected%2A>每个属性<xref:System.Web.UI.WebControls.ListItem>对象传递给`false`。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.HtmlControls.HtmlSelect.ClearSelection%2A>方法中的自定义服务器控件，以便它始终会清除所有选定的项的<xref:System.Web.UI.HtmlControls.HtmlSelect>集合。  
  
 [!code-aspx-csharp[CustomHtmlSelectClearSelection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/CS/custom_htmlselect_clearselectioncs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectClearSelection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/VB/custom_htmlselect_clearselectionvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectClearSelection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/CS/custom_htmlselect_clearselection.cs#2)]
 [!code-vb[CustomHtmlSelectClearSelection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/VB/custom_htmlselect_clearselection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlSelect.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为 <see cref="T:System.Web.UI.EmptyControlCollection" /> 控件创建 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 对象。</summary>
        <returns>一个 <see cref="T:System.Web.UI.ControlCollection" />，用以包含当前服务器控件的子服务器控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>控件不允许子控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public virtual string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>从具有多个数据集的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 属性获取或设置要绑定到 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 控件的数据集。</summary>
        <value>具有多个数据集的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 中要绑定到 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 控件的数据集。 默认值为空字符串 ("")，指示尚未设置该属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性包含多个数据集，请使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>属性来指定要绑定到控件的数据集。 例如，如果你有<xref:System.Data.DataSet?displayProperty=nameWithType>对象具有多个表，请使用此属性以指示要绑定到控件的表。  
  
 指定要绑定到控件的数据源后，你可以然后指定要绑定到数据源中哪些字段<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>并<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>通过设置控件中每个项的属性<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>属性分别。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>属性来指定要绑定到一组<xref:System.Web.UI.HtmlControls.HtmlSelect>控件从<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>具有多个数据集属性。  
  
 [!code-aspx-csharp[HtmlSelectDataMember#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataMember/CS/htmlselectdatamemberdscs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataMember#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataMember/VB/htmlselectdatamemberdsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> 属性是在 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的数据绑定阶段设置的。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要绑定到 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的信息源。</summary>
        <value>一个 <see cref="T:System.Collections.IEnumerable" /> 或 <see cref="T:System.ComponentModel.IListSource" />，包含用于为此控件提供数据的值集合。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性来指定要绑定到数据源<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 数据源必须实现的集合<xref:System.Collections.IEnumerable?displayProperty=nameWithType>接口 (如<xref:System.Data.DataView?displayProperty=nameWithType>， <xref:System.Collections.ArrayList?displayProperty=nameWithType>，或<xref:System.Collections.Generic.List%601?displayProperty=nameWithType>) 或<xref:System.ComponentModel.IListSource>接口。 当您将设置<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性时，必须手动编写代码来执行数据绑定。  
  
 如果数据源包含多个集的数据，如<xref:System.Data.DataSet?displayProperty=nameWithType>对象具有多个表，请使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>属性来指定要绑定到控件的数据集。  
  
 您可以指定哪些字段从数据源绑定到<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>并<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>通过设置控件中每个项的属性<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>属性，分别。  
  
 或者，可以使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性自动绑定到数据源控件所表示的数据源。 当您将设置<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性，数据列表控件自动将绑定到指定的数据源控件。 不需要编写代码显式调用<xref:System.Web.UI.Control.DataBind%2A>方法。  
  
 如果两个指定值<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性，则 ASP.NET 将无法解析数据源和一个<xref:System.Web.HttpException?displayProperty=nameWithType>引发异常。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性来指定要绑定到的信息源<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 [!code-aspx-csharp[HtmlSelectDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定的数据源与 <see cref="T:System.Collections.IEnumerable" /> 或 <see cref="T:System.ComponentModel.IListSource" /> 都不兼容，并且它不是 <see langword="null" />。</exception>
        <exception cref="T:System.Web.HttpException">无法解析数据源，因为对 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 属性和 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 属性指定了同一个值。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceID">
      <MemberSignature Language="C#" Value="public virtual string DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSourceID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceID : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源控件的 <see cref="P:System.Web.UI.Control.ID" /> 属性，该属性由 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件用于检索其数据源。</summary>
        <value>分配给数据源控件的编程标识符。 默认值为空字符串 ("")，指示尚未设置该属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性来设置或访问<xref:System.Web.UI.Control.ID%2A>数据源的属性控制<xref:System.Web.UI.HtmlControls.HtmlSelect>控件应使用以检索其数据源。 数据源引用的控件<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性可以是任何实现控件<xref:System.Web.UI.IDataSource>接口。 数据源控件必须存在相同的命名容器中<xref:System.Web.UI.HtmlControls.HtmlSelect>引用它的控件或父控件的<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 指定此属性的值时<xref:System.Web.UI.HtmlControls.HtmlSelect>控件自动绑定到指定的数据源控件。 不需要编写代码显式调用<xref:System.Web.UI.Control.DataBind%2A>方法。  
  
 或者，可以使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性指定的值将绑定到的源<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 数据源必须实现的集合<xref:System.Collections.IEnumerable?displayProperty=nameWithType>接口 (如<xref:System.Data.DataView?displayProperty=nameWithType>， <xref:System.Collections.ArrayList?displayProperty=nameWithType>，或<xref:System.Collections.Generic.List%601?displayProperty=nameWithType>) 或<xref:System.ComponentModel.IListSource>接口。 当您将设置<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性时，必须手动编写代码来执行数据绑定。  
  
 如果两个指定值<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性和<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性，则 ASP.NET 将无法解析数据源和一个<xref:System.Web.HttpException?displayProperty=nameWithType>引发异常。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性指定的数据源<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性设置为<xref:System.Web.UI.Control.ID%2A>属性的<xref:System.Web.UI.WebControls.SqlDataSource>控件，用于检索数据。 加载页面时，<xref:System.Web.UI.HtmlControls.HtmlSelect>控件自动绑定到指定的数据源<xref:System.Web.UI.WebControls.SqlDataSource>控件和数据显示给用户。  
  
 [!code-aspx-csharp[HtmlSelect.DataSourceID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataSourceID/CS/htmlselect.datasourceidcs.aspx#1)]
 [!code-aspx-vb[HtmlSelect.DataSourceID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataSourceID/VB/htmlselect.datasourceidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">无法解析数据源，因为对 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 属性和 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 属性指定了同一个值。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中要绑定到 <see cref="P:System.Web.UI.WebControls.ListItem.Text" /> 控件中各项的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 属性的字段。</summary>
        <value>数据源中要绑定到 <see cref="P:System.Web.UI.WebControls.ListItem.Text" /> 控件中各项的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 属性的字段。 默认值为空字符串 ("")，指示尚未设置该属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>属性来指定要绑定到数据源中的哪个字段<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>控件中每个项的属性。 此属性通常用于提供的值<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>属性的值与不同<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>属性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>类提供两个属性用于指定要绑定到数据源。 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性，可将绑定<xref:System.Web.UI.HtmlControls.HtmlSelect>实现的任何集合的控件<xref:System.Collections.IEnumerable?displayProperty=nameWithType>或<xref:System.ComponentModel.IListSource?displayProperty=nameWithType>接口 (如<xref:System.Data.DataView?displayProperty=nameWithType>， <xref:System.Collections.ArrayList?displayProperty=nameWithType>，或<xref:System.Collections.Generic.List%601?displayProperty=nameWithType>)。 当你使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性指定数据源，必须显式调用<xref:System.Web.UI.Control.DataBind%2A>方法以将控件绑定并将其<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>到数据源的属性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性，可将绑定<xref:System.Web.UI.HtmlControls.HtmlSelect>表示的数据源的数据源控件的控件。 当你使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性指定数据源<xref:System.Web.UI.HtmlControls.HtmlSelect>控件并将其<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>属性自动绑定到指定的数据源控件。 因此，不需要显式调用<xref:System.Web.UI.Control.DataBind%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>并<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>属性来指定要绑定到数据源中的字段<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>属性中的每项<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 [!code-aspx-csharp[HtmlSelectDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>并<xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A>属性来指定要绑定到数据源中的字段<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>属性中的每项<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 [!code-aspx-csharp[HtmlSelect.DataValueField2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataValueField2/CS/htmlselect.datavaluefield2cs.aspx#1)]
 [!code-aspx-vb[HtmlSelect.DataValueField2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataValueField2/VB/htmlselect.datavaluefield2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
      </Docs>
    </Member>
    <Member MemberName="DataValueField">
      <MemberSignature Language="C#" Value="public virtual string DataValueField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataValueField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataValueField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataValueField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataValueField : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据源中要绑定到 <see cref="P:System.Web.UI.WebControls.ListItem.Value" /> 控件中各项的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 属性的字段。</summary>
        <value>数据源中要绑定到 <see cref="P:System.Web.UI.WebControls.ListItem.Value" /> 控件中各项的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 属性的字段。 默认值为空字符串 ("")，指示尚未设置该属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>属性来指定要绑定到数据源中的哪个字段<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>控件中每个项的属性。 此属性通常用于提供的值<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>属性的值与不同<xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=nameWithType>属性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>类提供两个属性用于指定要绑定到数据源。 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性，可将绑定<xref:System.Web.UI.HtmlControls.HtmlSelect>实现的任何集合的控件<xref:System.Collections.IEnumerable>或<xref:System.ComponentModel.IListSource>接口 (如<xref:System.Data.DataView?displayProperty=nameWithType>， <xref:System.Collections.ArrayList?displayProperty=nameWithType>，或<xref:System.Collections.Generic.List%601?displayProperty=nameWithType>)。 当你使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性指定数据源，必须显式调用<xref:System.Web.UI.Control.DataBind%2A>方法以将控件绑定并将其<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>到数据源的属性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性，可将绑定<xref:System.Web.UI.HtmlControls.HtmlSelect>表示的数据源的数据源控件的控件。 当你使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性指定数据源<xref:System.Web.UI.HtmlControls.HtmlSelect>控件并将其<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>属性自动绑定到数据源控件。 因此，不需要显式调用<xref:System.Web.UI.Control.DataBind%2A>方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>并<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>属性来指定要绑定到数据源中的字段<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>属性中的每项<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 [!code-aspx-csharp[HtmlSelectDataSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectDataSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>并<xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A>属性来指定要绑定到数据源中的字段<xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=nameWithType>属性中的每项<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 [!code-aspx-csharp[HtmlSelect.DataValueField2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataValueField2/CS/htmlselect.datavaluefield2cs.aspx#1)]
 [!code-aspx-vb[HtmlSelect.DataValueField2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataValueField2/VB/htmlselect.datavaluefield2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="member this.EnsureDataBound : unit -&gt; unit" Usage="htmlSelect.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确认 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件需要数据绑定并在调用 <see cref="M:System.Web.UI.Control.DataBind" /> 方法前指定了有效的数据源控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定的值时<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性，ASP.NET 会自动将数据绑定列表指定的数据源控件的控件。 当 ASP.NET 执行数据绑定控件时，它将调用<xref:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound%2A>方法首先验证控件尚未被数据绑定和有效的数据源控件实现<xref:System.Web.UI.IDataSource>接口指定为其<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性。 <xref:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound%2A>方法随后调用<xref:System.Web.UI.Control.DataBind%2A>方法，以确保，该控件是数据绑定到此方法调用后面紧接着。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerable GetData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerable GetData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.GetData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetData () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IEnumerable ^ GetData();" />
      <MemberSignature Language="F#" Value="abstract member GetData : unit -&gt; System.Collections.IEnumerable&#xA;override this.GetData : unit -&gt; System.Collections.IEnumerable" Usage="htmlSelect.GetData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取一个 <see cref="T:System.Collections.IEnumerable" /> 对象，该对象表示绑定到 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的数据源。</summary>
        <returns>一个 <see cref="T:System.Collections.IEnumerable" /> 对象。 如果未指定任何数据源，则返回默认值 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.GetData%2A>方法将返回<xref:System.Collections.IEnumerable>对象的数据源由独立<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性或<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 属性不是 <see cref="T:System.Web.UI.IDataSource" /> 类型。  
  
- 或 - 
<see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 属性不是 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 类型。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 和 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 属性都是为 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件定义的。  
  
- 或 - 
找不到请求的数据视图。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="InnerHtml">
      <MemberSignature Language="C#" Value="public override string InnerHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerHtml" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerHtml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerHtml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerHtml : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件的开始标记和结束标记之间的内容，但不自动将特殊字符转换为等效的 HTML 实体。 此控件不支持该属性。</summary>
        <value>控件的开始标记和结束标记之间的内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  不要从读取或向该属性分配一个值。 否则，将引发 <xref:System.NotSupportedException?displayProperty=nameWithType> 异常。 此属性继承自<xref:System.Web.UI.HtmlControls.HtmlContainerControl>类，并不是适用于<xref:System.Web.UI.HtmlControls.HtmlSelect>类。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">尝试读取此属性或向其赋值。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InnerText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InnerText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerText : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置控件的开始标记和结束标记之间的内容，并自动将特殊字符转换为等效的 HTML 实体。 此控件不支持该属性。</summary>
        <value>控件的开始标记和结束标记之间的内容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  不要从读取或向该属性分配一个值。 否则，将引发 <xref:System.NotSupportedException?displayProperty=nameWithType> 异常。 此属性继承自<xref:System.Web.UI.HtmlControls.HtmlContainerControl>类，并不是适用于<xref:System.Web.UI.HtmlControls.HtmlSelect>类。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">尝试读取此属性或向其赋值。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="IsBoundUsingDataSourceID">
      <MemberSignature Language="C#" Value="protected bool IsBoundUsingDataSourceID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBoundUsingDataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.IsBoundUsingDataSourceID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsBoundUsingDataSourceID As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsBoundUsingDataSourceID { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBoundUsingDataSourceID : bool" Usage="System.Web.UI.HtmlControls.HtmlSelect.IsBoundUsingDataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 控件是否定义了 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 属性。</summary>
        <value>如果定义了数据源控件，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果字符串表示的长度<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性字符串是大于零，然后<xref:System.Web.UI.HtmlControls.HtmlSelect.IsBoundUsingDataSourceID%2A>返回`true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ListItemCollection ^ Items { System::Web::UI::WebControls::ListItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.ListItemCollection" Usage="System.Web.UI.HtmlControls.HtmlSelect.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个集合，该集合包含在 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中列出的项。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ListItemCollection" />，它包含在 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中列出的项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合来管理中列出的项<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 你可以以编程方式添加、 删除项，并将项插入到集合。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合通常用于循环访问中的项<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 例如，当选择了多个项，您可以循环访问<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合以确定已选中的项。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>要循环访问中的项集合<xref:System.Web.UI.HtmlControls.HtmlSelect>控制，并确定已选中的项。  
  
 [!code-aspx-csharp[htmlselect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/htmlselect/CS/htmlselectcs.aspx#1)]
 [!code-aspx-vb[htmlselect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/htmlselect/VB/htmlselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="htmlSelect.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控件的主要标识符。</param>
        <param name="postCollection">所有传入名称值的集合。</param>
        <summary>处理 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的回发数据。</summary>
        <returns>如果 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的状态已因回发而更改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A>方法检查是否的回发数据<xref:System.Web.UI.HtmlControls.HtmlSelect>控制不同于以前的值，以及如果是这样，则返回`true`。 如果<xref:System.Web.UI.HtmlControls.HtmlSelect>控件的<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>属性是`false`，，该值指示单选<xref:System.Web.UI.HtmlControls.HtmlSelect>控件，则<xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A>方法检查<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>属性。 如果<xref:System.Web.UI.HtmlControls.HtmlSelect>控件的<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>属性是`true`，，该值指示多选<xref:System.Web.UI.HtmlControls.HtmlSelect>控件，则<xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A>方法检查<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A>属性。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A>方法主要由控件开发人员扩展功能的<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> 属性被设置为大于 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中的项数或小于 <see langword="-1" /> 的值。</exception>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="htmlSelect.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表示要还原的控件状态的 <see cref="T:System.Object" />。</param>
        <summary>从前一个由 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 方法保存的页请求还原 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" /> 控件的视图状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法主要由.NET Framework 基础结构并不应在代码中直接使用。 但是，控件开发人员可以重写此方法以指定自定义服务器控件还原其视图状态的方式。 有关详细信息，请参阅[ASP.NET 状态管理概述](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>控件的视图状态存储为<xref:System.Web.UI.Triplet>对象。 <xref:System.Web.UI.Triplet.First>字段<xref:System.Web.UI.Triplet>对象包含<xref:System.Web.UI.HtmlControls.HtmlSelect>控件的基本视图状态。 <xref:System.Web.UI.Triplet.Second>字段<xref:System.Web.UI.Triplet>对象持有<xref:System.Web.UI.WebControls.ListItemCollection>集合由<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>属性。 <xref:System.Web.UI.Triplet.Third>字段<xref:System.Web.UI.Triplet>对象包含由所选的索引<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A>属性。 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState%2A>方法调用基类的<xref:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState%2A?displayProperty=nameWithType>方法还原控件的基本视图状态。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState%2A>方法主要由控件开发人员扩展功能的<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>重写时<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" />在派生类中，请务必调用基类的<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" />方法，以便<see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />控件的视图状态正确的管理。</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" />
        <altmember cref="T:System.Web.UI.Triplet" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Multiple">
      <MemberSignature Language="C#" Value="public bool Multiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiple : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否可以在 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中同时选择多个项。</summary>
        <value>如果可以在 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中同时选择多个项，则为 <see langword="true" />；否则，为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>属性来指定多个项是否可以同时选择中<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 默认情况下，<xref:System.Web.UI.HtmlControls.HtmlSelect>控件将显示为下拉列表框。 如果允许多重选择 (通过设置<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>属性设置为`true`) 或指定大于一个行的高度 (通过设置<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>属性的值大于`1`)，控件将显示为列表框。  
  
 若要确定中选定的项<xref:System.Web.UI.HtmlControls.HtmlSelect>循环访问控件，它允许多个同时进行选择，<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合并测试<xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=nameWithType>的每个项的属性。  
  
> [!NOTE]
>  `multiple`属性中呈现<xref:System.Web.UI.HtmlControls.HtmlSelect>控制仅当此属性设置为`true`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>属性指定是否可以在选择多个项<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 [!code-aspx-csharp[HtmlSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectMultiple/CS/htmlselectmultiplecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectMultiple/VB/htmlselectmultiplevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件关联的唯一的标识符名。</summary>
        <value>与 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件关联的唯一的标识符名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Name%2A>属性来确定的唯一标识符名称<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 在此实现中，`get`访问器返回的值<xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType>属性。 但是，`set`访问器不会分配给此属性的值。  
  
> [!NOTE]
>  `set`因为访问器不会对此属性分配值<xref:System.Web.UI.HtmlControls.HtmlSelect.Name%2A>属性必须具有相同的值<xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType>属性<xref:System.Web.UI.HtmlControls.HtmlSelect>控件才能正常工作。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Name%2A>的属性<xref:System.Web.UI.HtmlControls.HtmlSelect>控件以选择中的特定项<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>列表。  
  
 [!code-aspx-csharp[HtmlSelectName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectName/CS/htmlselectnamecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectName/VB/htmlselectnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataBinding : EventArgs -&gt; unit" Usage="htmlSelect.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.DataBinding" /> 控件的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.DataBinding>绑定到数据时将引发事件<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 此方法通知控件来执行与之相关联的任何数据绑定逻辑。 具体而言，<xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding%2A>方法创建<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合中指定数据源<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性或<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 属性不是 <see cref="T:System.Web.UI.IDataSource" /> 类型。  
  
- 或 - 
<see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 属性不是 <see cref="T:System.Web.UI.IHierarchicalDataSource" /> 类型。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 和 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 属性都是为 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件定义的。  
  
- 或 - 
找不到请求的数据视图。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> 属性被设置为大于 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中的项数或小于 <see langword="-1" /> 的值。</exception>
        <block subset="none" type="overrides"><para>重写时<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding(System.EventArgs)" />方法在派生类中，请务必调用基类的<see cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />方法，以便已注册的委托接收事件。</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.GetData" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataPropertyChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnDataPropertyChanged : unit -&gt; unit&#xA;override this.OnDataPropertyChanged : unit -&gt; unit" Usage="htmlSelect.OnDataPropertyChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />、<see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> 或 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 属性更改时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataPropertyChanged%2A>方法设置<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>属性设置为`true`如果<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>， <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>，或<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性已更改。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">曾尝试在控件的数据绑定阶段更改属性值。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : obj * EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : obj * EventArgs -&gt; unit" Usage="htmlSelect.OnDataSourceViewChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件源。</param>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>当 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />、<see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> 或 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 属性更改时调用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged%2A>方法设置<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>属性设置为`true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="htmlSelect.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>为 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnInit%2A>方法通知<xref:System.Web.UI.HtmlControls.HtmlSelect>控件来执行创建和设置实例所需的任何初始化步骤。 如果<xref:System.Web.UI.Control.IsViewStateEnabled%2A>属性是`false`并<xref:System.Web.UI.Page.IsPostBack%2A>属性是`true`，然后<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>属性设置为`true`。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>重写时<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnInit(System.EventArgs)" />方法在派生类中，请务必调用基类的<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnInit(System.EventArgs)" />方法，以便注册的委托接收到的事件。</para></block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="P:System.Web.UI.Control.IsViewStateEnabled" />
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="htmlSelect.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>为 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件引发 <see cref="E:System.Web.UI.Control.Load" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnLoad%2A>方法通知<xref:System.Web.UI.HtmlControls.HtmlSelect>控制，它应与之关联的页执行普遍适用于每个 HTTP 请求的操作。 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnLoad%2A>方法连接<xref:System.Web.UI.HtmlControls.HtmlSelect>到适当的数据源中指定的控件<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>属性或<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性。 如果<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>属性是指定的数据源控件<xref:System.Web.UI.HtmlControls.HtmlSelect>控件应使用以检索其数据源，则<xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged%2A>方法设置为事件处理程序。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">未能找到 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 属性中指定的 ID。  
  
或 
在 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 属性中指定的控件的类型不是 <see cref="T:System.Web.UI.IDataSource" />。</exception>
        <exception cref="T:System.InvalidOperationException">无法解析数据源，因为对 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 属性和 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 属性指定了同一个值。  
  
或 
未能找到请求的 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> 属性。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlSelect.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>为 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>属性大于 1，则<xref:System.Web.UI.HtmlControls.HtmlSelect.OnPreRender%2A>方法注册<xref:System.Web.UI.HtmlControls.HtmlSelect>控件，其<xref:System.Web.UI.Page>为需要回发处理的控件。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.HtmlControls.HtmlSelect.OnPreRender%2A>方法，使其在自定义允许进行多选<xref:System.Web.UI.HtmlControls.HtmlSelect>服务器控件。  
  
 [!code-aspx-csharp[CustomHtmlSelectOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/CS/custom_htmlselect_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/VB/custom_htmlselect_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/CS/custom_htmlselect_onprerender.cs#2)]
 [!code-vb[CustomHtmlSelectOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/VB/custom_htmlselect_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="OnServerChange">
      <MemberSignature Language="C#" Value="protected virtual void OnServerChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerChange (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerChange(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnServerChange : EventArgs -&gt; unit&#xA;override this.OnServerChange : EventArgs -&gt; unit" Usage="htmlSelect.OnServerChange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
        <summary>引发 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的 <see cref="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange" /> 事件。 这使你可以为事件提供自定义处理程序。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>引发事件时中的选定的项<xref:System.Web.UI.HtmlControls.HtmlSelect>控件的各次发送到服务器的更改。  
  
> [!NOTE]
>  仅当用户启动的发送到服务器，例如单击提交按钮时，引发此事件。 此事件不会导致发布到要发生的服务器。  
  
> [!NOTE]
>  控件必须具有启用视图状态<xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>事件才能正常工作。  
  
 可以使用此事件上执行数据验证<xref:System.Web.UI.HtmlControls.HtmlSelect>控制当用户更改控件中的选定内容。  
  
 引发事件时，将通过委托调用事件处理程序。 有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange%2A> 方法还允许派生类对事件进行处理而不必附加委托。 这是在派生类中处理事件的首选技术。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和编写代码的事件处理程序<xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>事件的<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 事件处理程序确定所选的项是否为相互兼容。  
  
 [!code-aspx-csharp[HtmlSelectOnServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectOnServerChange/CS/htmlselectonserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectOnServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectOnServerChange/VB/htmlselectonserverchangevb.aspx#1)]  
  
 [!code-aspx-csharp[HtmlSelectServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectServerChange/CS/htmlselectserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectServerChange/VB/htmlselectserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>重写时<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />方法在派生类中，请务必调用基类的<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />方法，以便已注册的委托接收事件。</para></block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="htmlSelect.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>调用 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" /> 方法，以向 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件发出控件状态已更改的信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.RaisePostDataChangedEvent%2A>方法主要由控件开发人员扩展功能的<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlSelect.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的属性呈现到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A>方法还呈现`name`的属性<xref:System.Web.UI.HtmlControls.HtmlSelect>控件直接以确保它具有相同的值<xref:System.Web.UI.Control.UniqueID%2A?displayProperty=nameWithType>属性。 呈现该特性之后<xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A>方法调用基类的<xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderAttributes%2A>方法。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A>方法主要由控件开发人员扩展功能的<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A>方法中的自定义服务器控件，以便始终显示特定标题文本<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 [!code-aspx-csharp[CustomHtmlSelectRenderAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/CS/custom_htmlselect_renderattributescs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectRenderAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/VB/custom_htmlselect_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectRenderAttributes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/CS/custom_htmlselect_renderattributes.cs#2)]
 [!code-vb[CustomHtmlSelectRenderAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/VB/custom_htmlselect_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Name" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="T:System.Web.UI.AttributeCollection" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlSelect.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收呈现内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的子控件呈现给指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderChildren%2A>方法重写基类的<xref:System.Web.UI.Control.RenderChildren%2A>而不会调用基方法的方法。 每个`<option>`元素的开始和结束之间`<select>`标记使用呈现`value`属性，`selected`属性选择的项，如果和其关联的文本。  
  
 如果选择多个项目，但<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>属性设置为`false`，则<xref:System.Web.HttpException>引发异常。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.HtmlControls.HtmlSelect.RenderChildren%2A>方法，以便它始终显示在自定义的默认选项文本<xref:System.Web.UI.HtmlControls.HtmlSelect>服务器控件。  
  
 [!code-aspx-csharp[CustomHtmlSelectRenderChildren#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/CS/custom_htmlselect_renderchildrencs.aspx#1)]
 [!code-aspx-vb[CustomHtmlSelectRenderChildren#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/VB/custom_htmlselect_renderchildrenvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectRenderChildren#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/CS/custom_htmlselect_renderchildren.cs#2)]
 [!code-vb[CustomHtmlSelectRenderChildren#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/VB/custom_htmlselect_renderchildren.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">选择了多个项，但 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" /> 属性设置为 <see langword="false" />。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
      </Docs>
    </Member>
    <Member MemberName="RequiresDataBinding">
      <MemberSignature Language="C#" Value="protected bool RequiresDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Property RequiresDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool RequiresDataBinding { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequiresDataBinding : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件是否需要绑定到其指定数据源。</summary>
        <value>如果该控件需要绑定到数据源，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>控件使用<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>属性来确定控件是否需要调用<xref:System.Web.UI.Control.DataBind%2A>方法绑定到其指定的数据源。  
  
 每次`set`访问器调用任一<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>， <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>，或<xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>属性来更改后的数据源<xref:System.Web.UI.HtmlControls.HtmlSelect.OnInit%2A>方法被调用时，ASP.NET 会自动设置的值<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>属性设置为`true`。 值<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>属性也设置为`true`时<xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataPropertyChanged%2A>调用方法。  
  
 ASP.NET 会自动设置的值<xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A>属性设置为`false`后立即<xref:System.Web.UI.Control.DataBind%2A>调用方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="htmlSelect.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存自页回发到服务器后发生的所有 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件视图状态更改。</summary>
        <returns>包含 <see cref="T:System.Object" /> 视图状态更改的 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />。 如果对象没有任何关联视图状态，则此方法返回一个 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect>控件的视图状态存储为<xref:System.Web.UI.Triplet>对象。 <xref:System.Web.UI.Triplet.First>字段<xref:System.Web.UI.Triplet>对象包含<xref:System.Web.UI.HtmlControls.HtmlSelect>控件的基本视图状态。 <xref:System.Web.UI.Triplet.Second>字段<xref:System.Web.UI.Triplet>对象持有<xref:System.Web.UI.WebControls.ListItemCollection>集合由<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>属性。 <xref:System.Web.UI.Triplet.Third>字段<xref:System.Web.UI.Triplet>对象包含由所选的索引<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A>属性。 <xref:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState%2A>方法调用基类的<xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=nameWithType>方法以保存控件的基本视图状态。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState%2A>方法主要由控件开发人员扩展功能的<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>重写时<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" />在派生类中，请务必调用基类的<see cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" />方法，以便<see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />控件的视图状态正确的管理。</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.Triplet" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected virtual void Select (int[] selectedIndices);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Select(int32[] selectedIndices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.Select(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Select (selectedIndices As Integer())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Select(cli::array &lt;int&gt; ^ selectedIndices);" />
      <MemberSignature Language="F#" Value="abstract member Select : int[] -&gt; unit&#xA;override this.Select : int[] -&gt; unit" Usage="htmlSelect.Select selectedIndices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndices" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="selectedIndices"><see cref="T:System.Array" /> 类型的 <see cref="T:System.Int32" />，它包含要选择的项。</param>
        <summary>选择 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" /> 集合的多个项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.Select%2A>方法可选择多个项的<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中的选定项的序号索引。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中的选定项的序号索引。 值 <see langword="-1" /> 指示未选择任何项。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>属性通常用于确定单选中的选定项的索引<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 然后可以使用此索引来检索中的项<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合。  
  
 如果<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>属性设置为`true`，，该值指示是否可以同时选择多个项，<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>属性包含的第一个选定项的索引。 若要确定选定的项目从<xref:System.Web.UI.HtmlControls.HtmlSelect>循环访问控件，它允许多个同时进行选择，<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合并测试<xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=nameWithType>的每个项的属性。  
  
> [!CAUTION]
>  很可能有未选择任何项。 如果未不选择任何项，<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>属性包含值为`-1`。 当首次加载页面和默认情况下不选择项通常会发生这种情况。 提供代码来测试此值在引用中的项之前<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合。 否则，如果索引超出了集合的范围是引发异常。  
  
 默认情况下，<xref:System.Web.UI.HtmlControls.HtmlSelect>控件将显示为下拉列表框。 如果允许多重选择 (通过设置<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>属性设置为`true`) 或指定大于一个行的高度 (通过设置<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>属性的值大于`1`)，控件将显示为列表框。 如果显示一个下拉列表框，则始终选择项。 如果显示一个列表框，则可以通过设置以编程方式清除所有项的选定项<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>属性设置为`-1`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>属性来确定索引中的选定项<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 该索引随后用于检索中的选定的项<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>集合。  
  
 [!code-aspx-csharp[HtmlSelectSingleSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectSingleSelect/CS/htmlselectsingleselectcs.aspx#1)]
 [!code-aspx-vb[HtmlSelectSingleSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectSingleSelect/VB/htmlselectsingleselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">属性被设置为大于 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中的项数或小于 <see langword="-1" /> 的值。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="protected virtual int[] SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SelectedIndices As Integer()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;int&gt; ^ SelectedIndices { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndices : int[]" Usage="System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个集合，该集合包含 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中所有当前选择项的从零开始的索引。</summary>
        <value>一个集合，该集合包含 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中所有当前选择项的从零开始的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A>属性可供<xref:System.Web.UI.HtmlControls.HtmlSelect>类以返回当前包含的所有索引从零开始的集合选择中的项<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 控件扩展的功能的开发人员<xref:System.Web.UI.HtmlControls.HtmlSelect>类可以重写<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A>属性以提供自定义算法，用于返回当前选择项。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerChange">
      <MemberSignature Language="C#" Value="public event EventHandler ServerChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerChange" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerChange As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerChange;" />
      <MemberSignature Language="F#" Value="member this.ServerChange : EventHandler " Usage="member this.ServerChange : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中的选定项在向服务器的各次发送过程之间发生更改时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>引发事件时中的选定的项<xref:System.Web.UI.HtmlControls.HtmlSelect>控件的各次发送到服务器的更改。  
  
> [!NOTE]
>  控件必须具有启用视图状态<xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>事件才能正常工作。  
  
 有关如何处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何指定和编写代码以声明方式为一个事件处理程序<xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>事件的<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 事件处理程序确定所选的项是否为相互兼容。  
  
 [!code-aspx-csharp[HtmlSelectOnServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectOnServerChange/CS/htmlselectonserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectOnServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectOnServerChange/VB/htmlselectonserverchangevb.aspx#1)]  
  
 下面的代码示例演示如何指定和编写代码以编程方式为一个事件处理程序<xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>事件的<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 事件处理程序确定所选的项是否为相互兼容。  
  
 [!code-aspx-csharp[HtmlSelectServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectServerChange/CS/htmlselectserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectServerChange/VB/htmlselectserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的高度（以行为单位）。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的高度（以行为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>属性指定的高度 （以行）<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。 如果指定小于控件中的项目数的大小，将显示滚动条以允许你在列表中上下移动。  
  
 默认情况下，<xref:System.Web.UI.HtmlControls.HtmlSelect>控件将显示为下拉列表框。 如果允许多重选择 (通过设置<xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A>属性设置为`true`) 或指定大于一个行的高度 (通过设置<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>属性的值大于`1`)，控件将显示为列表框。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A>属性指定的高度 （以行）<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 [!code-aspx-csharp[HtmlSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectMultiple/CS/htmlselectmultiplecs.aspx#1)]
 [!code-aspx-vb[HtmlSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectMultiple/VB/htmlselectmultiplevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控件的主要标识符。</param>
        <param name="postCollection">所有传入名称值的集合。</param>
        <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />。</summary>
        <returns>如果 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的状态已因回发而更改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.HtmlControls.HtmlSelect> 实例强制转换为 <xref:System.Web.UI.IPostBackDataHandler> 接口时使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> 属性被设置为大于 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中的项数或小于 <see langword="-1" /> 的值。</exception>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>有关此成员的说明，请参见 <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.HtmlControls.HtmlSelect> 实例强制转换为 <xref:System.Web.UI.IPostBackDataHandler> 接口时使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="htmlSelect.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>跟踪 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件的视图状态更改，以便更改可以存储在控件的 <see cref="T:System.Web.UI.StateBag" /> 对象中。 通过 <see cref="P:System.Web.UI.Control.ViewState" /> 属性可访问此对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.TrackViewState%2A>方法中的项保存<xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A>的集合<xref:System.Web.UI.HtmlControls.HtmlSelect>控件视图状态。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlSelect.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中选定项的值或将该控件的 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> 属性设置为具有指定值的列表中的第一个项的索引。</summary>
        <value><see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中选定项的值。 如果控件中未选定任何项，则返回 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.Value%2A>属性通常用于获取所引用的项的值<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>属性。  
  
> [!NOTE]
>  如果控件中未选定任何项，则返回 <xref:System.String.Empty?displayProperty=nameWithType>。  
  
 如果此属性设置为一个值，<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>属性更新为包含该值的列表中的第一项的索引。 如果不找到任何匹配的值，则<xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A>属性保留不变。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.HtmlControls.HtmlSelect.Value%2A>属性获取的值中的选定项<xref:System.Web.UI.HtmlControls.HtmlSelect>控件。  
  
 [!code-aspx-csharp[HtmlSelectSingleSelect#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectSingleSelect/CS/htmlselectsingleselectcs.aspx#1)]
 [!code-aspx-vb[HtmlSelectSingleSelect#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectSingleSelect/VB/htmlselectsingleselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Value" /> 属性被设置为大于 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 控件中的项数或小于 <see langword="-1" /> 的项。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>