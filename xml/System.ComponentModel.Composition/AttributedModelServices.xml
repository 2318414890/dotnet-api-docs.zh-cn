<Type Name="AttributedModelServices" FullName="System.ComponentModel.Composition.AttributedModelServices">
  <TypeSignature Language="C#" Value="public static class AttributedModelServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AttributedModelServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.AttributedModelServices" />
  <TypeSignature Language="VB.NET" Value="Public Module AttributedModelServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributedModelServices abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ba233-101">包含可将 MEF 特性化的编程模型与组合一起使用的帮助器方法。</span><span class="sxs-lookup"><span data-stu-id="ba233-101">Contains helper methods for using the MEF attributed programming model with composition.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba233-102">从指定的值创建一个部件，并将该部件添加到一个组合批。</span><span class="sxs-lookup"><span data-stu-id="ba233-102">Creates a part from a specified value and adds it to a composition batch.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddExportedValue(Of T) (batch As CompositionBatch, exportedValue As T) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddExportedValue(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, T exportedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ba233-103">新部件的类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-103">The type of the new part.</span></span></typeparam>
        <param name="batch"><span data-ttu-id="ba233-104">要添加到的批。</span><span class="sxs-lookup"><span data-stu-id="ba233-104">The batch to add to.</span></span></param>
        <param name="exportedValue"><span data-ttu-id="ba233-105">要相加的值。</span><span class="sxs-lookup"><span data-stu-id="ba233-105">The value to add.</span></span></param>
        <summary><span data-ttu-id="ba233-106">从指定的值创建一个部件，并将该部件添加到指定的批。</span><span class="sxs-lookup"><span data-stu-id="ba233-106">Creates a part from the specified value and adds it to the specified batch.</span></span></summary>
        <returns><span data-ttu-id="ba233-107">新部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-107">The new part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, string contractName, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, string contractName, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddExportedValue(Of T) (batch As CompositionBatch, contractName As String, exportedValue As T) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddExportedValue(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, System::String ^ contractName, T exportedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ba233-108">新部件的类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-108">The type of the new part.</span></span></typeparam>
        <param name="batch"><span data-ttu-id="ba233-109">要添加到的批。</span><span class="sxs-lookup"><span data-stu-id="ba233-109">The batch to add to.</span></span></param>
        <param name="contractName"><span data-ttu-id="ba233-110">导出的协定名称。</span><span class="sxs-lookup"><span data-stu-id="ba233-110">The contract name of the export.</span></span></param>
        <param name="exportedValue"><span data-ttu-id="ba233-111">要相加的值。</span><span class="sxs-lookup"><span data-stu-id="ba233-111">The value to add.</span></span></param>
        <summary><span data-ttu-id="ba233-112">从指定的值创建一个部件，并将该部件添加到具有指定协定名称的指定批。</span><span class="sxs-lookup"><span data-stu-id="ba233-112">Creates a part from the specified value and adds it to the specified batch with the specified contract name.</span></span></summary>
        <returns><span data-ttu-id="ba233-113">新部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-113">The new part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddPart (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddPart(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPart (batch As CompositionBatch, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddPart(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, System::Object ^ attributedPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="batch"><span data-ttu-id="ba233-114">要添加到的批。</span><span class="sxs-lookup"><span data-stu-id="ba233-114">The batch to add to.</span></span></param>
        <param name="attributedPart"><span data-ttu-id="ba233-115">要添加的对象。</span><span class="sxs-lookup"><span data-stu-id="ba233-115">The object to add.</span></span></param>
        <summary><span data-ttu-id="ba233-116">从指定的特性化对象创建一个可组合部件，并将该部件添加到指定的组合批。</span><span class="sxs-lookup"><span data-stu-id="ba233-116">Creates a composable part from the specified attributed object, and adds it to the specified composition batch.</span></span></summary>
        <returns><span data-ttu-id="ba233-117">新部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-117">The new part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComposeExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba233-118">从指定的对象创建一个部件，并将该部件与指定的组合容器组合在一起。</span><span class="sxs-lookup"><span data-stu-id="ba233-118">Creates a part from a specified object and composes it with a specified composition container.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComposeExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ComposeExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionContainer container, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionContainer container, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeExportedValue(Of T) (container As CompositionContainer, exportedValue As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeExportedValue(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, T exportedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ba233-119">新部件的类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-119">The type of the new part.</span></span></typeparam>
        <param name="container"><span data-ttu-id="ba233-120">要在其中执行组合的组合容器。</span><span class="sxs-lookup"><span data-stu-id="ba233-120">The composition container to perform composition in.</span></span></param>
        <param name="exportedValue"><span data-ttu-id="ba233-121">要组合的值。</span><span class="sxs-lookup"><span data-stu-id="ba233-121">The value to compose.</span></span></param>
        <summary><span data-ttu-id="ba233-122">从指定的值创建一个部件，并在指定的组合容器中组合该部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-122">Creates a part from the specified value and composes it in the specified composition container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ComposeExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionContainer container, string contractName, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionContainer container, string contractName, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeExportedValue(Of T) (container As CompositionContainer, contractName As String, exportedValue As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeExportedValue(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, System::String ^ contractName, T exportedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ba233-123">新部件的类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-123">The type of the new part.</span></span></typeparam>
        <param name="container"><span data-ttu-id="ba233-124">要在其中执行组合的组合容器。</span><span class="sxs-lookup"><span data-stu-id="ba233-124">The composition container to perform composition in.</span></span></param>
        <param name="contractName"><span data-ttu-id="ba233-125">要在其下导出部件的协定名称。</span><span class="sxs-lookup"><span data-stu-id="ba233-125">The contract name to export the part under.</span></span></param>
        <param name="exportedValue"><span data-ttu-id="ba233-126">要组合的值。</span><span class="sxs-lookup"><span data-stu-id="ba233-126">The value to compose.</span></span></param>
        <summary><span data-ttu-id="ba233-127">从指定协定名称下的指定对象创建一个部件，并在指定的组合容器中组合该部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-127">Creates a part from the specified object under the specified contract name and composes it in the specified composition container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeParts">
      <MemberSignature Language="C#" Value="public static void ComposeParts (this System.ComponentModel.Composition.Hosting.CompositionContainer container, params object[] attributedParts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeParts(class System.ComponentModel.Composition.Hosting.CompositionContainer container, object[] attributedParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeParts (container As CompositionContainer, ParamArray attributedParts As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeParts(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, ... cli::array &lt;System::Object ^&gt; ^ attributedParts);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="attributedParts" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="ba233-128">要在其中执行组合的组合容器。</span><span class="sxs-lookup"><span data-stu-id="ba233-128">The composition container to perform composition in.</span></span></param>
        <param name="attributedParts"><span data-ttu-id="ba233-129">要组合的特性化对象的数组。</span><span class="sxs-lookup"><span data-stu-id="ba233-129">An array of attributed objects to compose.</span></span></param>
        <summary><span data-ttu-id="ba233-130">从特性化对象的数组创建可组合部件，并在指定的组合容器中组合这些部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-130">Creates composable parts from an array of attributed objects and composes them in the specified composition container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePart">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba233-131">创建可组合部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-131">Creates a composable part.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::Object ^ attributedPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="attributedPart"><span data-ttu-id="ba233-132">特性化对象。</span><span class="sxs-lookup"><span data-stu-id="ba233-132">The attributed object.</span></span></param>
        <summary><span data-ttu-id="ba233-133">从指定的特性化对象创建一个可组合部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-133">Creates a composable part from the specified attributed object.</span></span></summary>
        <returns><span data-ttu-id="ba233-134">创建的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-134">The created part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partDefinition As ComposablePartDefinition, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition, System::Object ^ attributedPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="partDefinition"><span data-ttu-id="ba233-135">新部件定义。</span><span class="sxs-lookup"><span data-stu-id="ba233-135">The definition of the new part.</span></span></param>
        <param name="attributedPart"><span data-ttu-id="ba233-136">特性化对象。</span><span class="sxs-lookup"><span data-stu-id="ba233-136">The attributed object.</span></span></param>
        <summary><span data-ttu-id="ba233-137">通过指定的部件定义，从指定的特性化对象创建一个可组合部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-137">Creates a composable part from the specified attributed object, using the specified part definition.</span></span></summary>
        <returns><span data-ttu-id="ba233-138">创建的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-138">The created part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(object attributedPart, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::Object ^ attributedPart, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributedPart" Type="System.Object" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="attributedPart"><span data-ttu-id="ba233-139">特性化对象。</span><span class="sxs-lookup"><span data-stu-id="ba233-139">The attributed object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="ba233-140">用于部件的反射上下文。</span><span class="sxs-lookup"><span data-stu-id="ba233-140">The reflection context for the part.</span></span></param>
        <summary><span data-ttu-id="ba233-141">通过指定的反射上下文，从指定的特性化对象创建一个可组合部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-141">Creates a composable part from the specified attributed object, using the specified reflection context.</span></span></summary>
        <returns><span data-ttu-id="ba233-142">创建的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-142">The created part.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba233-143"><paramref name="reflectionContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba233-143"><paramref name="reflectionContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePartDefinition">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba233-144">使用指定类型和源创建部件定义。</span><span class="sxs-lookup"><span data-stu-id="ba233-144">Creates a part definition with the specified type and origin.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePartDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition(class System.Type type, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ CreatePartDefinition(Type ^ type, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ba233-145">定义的类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-145">The type of the definition.</span></span></param>
        <param name="origin"><span data-ttu-id="ba233-146">定义的源。</span><span class="sxs-lookup"><span data-stu-id="ba233-146">The origin of the definition.</span></span></param>
        <summary><span data-ttu-id="ba233-147">使用指定类型和源创建部件定义。</span><span class="sxs-lookup"><span data-stu-id="ba233-147">Creates a part definition with the specified type and origin.</span></span></summary>
        <returns><span data-ttu-id="ba233-148">新部件定义。</span><span class="sxs-lookup"><span data-stu-id="ba233-148">The new part definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePartDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin, bool ensureIsDiscoverable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition(class System.Type type, class System.ComponentModel.Composition.Primitives.ICompositionElement origin, bool ensureIsDiscoverable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ CreatePartDefinition(Type ^ type, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin, bool ensureIsDiscoverable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
        <Parameter Name="ensureIsDiscoverable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ba233-149">定义的类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-149">The type of the definition.</span></span></param>
        <param name="origin"><span data-ttu-id="ba233-150">定义的源。</span><span class="sxs-lookup"><span data-stu-id="ba233-150">The origin of the definition.</span></span></param>
        <param name="ensureIsDiscoverable"><span data-ttu-id="ba233-151">一个值，指示新定义是否应是可发现的。</span><span class="sxs-lookup"><span data-stu-id="ba233-151">A value indicating whether or not the new definition should be discoverable.</span></span></param>
        <summary><span data-ttu-id="ba233-152">使用指定类型和源创建部件定义。</span><span class="sxs-lookup"><span data-stu-id="ba233-152">Creates a part definition with the specified type and origin.</span></span></summary>
        <returns><span data-ttu-id="ba233-153">新部件定义。</span><span class="sxs-lookup"><span data-stu-id="ba233-153">The new part definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exports">
      <MemberSignature Language="C#" Value="public static bool Exports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exports (part As ComposablePartDefinition, contractType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Exports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="ba233-154">要搜索的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-154">The part to search.</span></span></param>
        <param name="contractType"><span data-ttu-id="ba233-155">协定类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-155">The contract type.</span></span></param>
        <summary><span data-ttu-id="ba233-156">返回指示指定的部分是否包含与指定协定类型相匹配的导出的值。</span><span class="sxs-lookup"><span data-stu-id="ba233-156">Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</span></span></summary>
        <returns>
          <span data-ttu-id="ba233-157">如果 <paramref name="part" /> 包含与 <paramref name="contractType" /> 匹配的导出定义，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba233-157"><see langword="true" /> if <paramref name="part" /> contains an export definition that matches <paramref name="contractType" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Exports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exports(Of T) (part As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Exports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ba233-158">协定类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-158">The contract type.</span></span></typeparam>
        <param name="part"><span data-ttu-id="ba233-159">要搜索的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-159">The part to search.</span></span></param>
        <summary><span data-ttu-id="ba233-160">返回指示指定的部分是否包含与指定协定类型相匹配的导出的值。</span><span class="sxs-lookup"><span data-stu-id="ba233-160">Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</span></span></summary>
        <returns>
          <span data-ttu-id="ba233-161">如果 <paramref name="part" /> 包含类型 <paramref name="T" /> 的导出定义，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba233-161"><see langword="true" /> if <paramref name="part" /> contains an export definition of type <paramref name="T" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContractName">
      <MemberSignature Language="C#" Value="public static string GetContractName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetContractName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetContractName(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ba233-162">要使用的类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-162">The type to use.</span></span></param>
        <summary><span data-ttu-id="ba233-163">获取指定类型的规范协定名称。</span><span class="sxs-lookup"><span data-stu-id="ba233-163">Gets a canonical contract name for the specified type.</span></span></summary>
        <returns><span data-ttu-id="ba233-164">从指定类型创建的协定名称。</span><span class="sxs-lookup"><span data-stu-id="ba233-164">A contract name created from the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataView&lt;TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public static TMetadataView GetMetadataView&lt;TMetadataView&gt; (System.Collections.Generic.IDictionary&lt;string,object&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TMetadataView GetMetadataView&lt;TMetadataView&gt;(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataView(Of TMetadataView) (metadata As IDictionary(Of String, Object)) As TMetadataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TMetadataView&gt;&#xA; static TMetadataView GetMetadataView(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TMetadataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TMetadataView"><span data-ttu-id="ba233-165">要获取的元数据视图对象的类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-165">The type of the metadata view object to get.</span></span></typeparam>
        <param name="metadata"><span data-ttu-id="ba233-166">松散元数据的集合。</span><span class="sxs-lookup"><span data-stu-id="ba233-166">A collection of loose metadata.</span></span></param>
        <summary><span data-ttu-id="ba233-167">从松散元数据的字典中获取元数据视图对象。</span><span class="sxs-lookup"><span data-stu-id="ba233-167">Gets a metadata view object from a dictionary of loose metadata.</span></span></summary>
        <returns><span data-ttu-id="ba233-168">包含指定元数据的元数据视图。</span><span class="sxs-lookup"><span data-stu-id="ba233-168">A metadata view containing the specified metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeIdentity">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba233-169">获取一个方法或类型的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="ba233-169">Gets the unique identifier for a method or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeIdentity">
      <MemberSignature Language="C#" Value="public static string GetTypeIdentity (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeIdentity(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeIdentity (method As MethodInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeIdentity(System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="ba233-170">要检查的方法。</span><span class="sxs-lookup"><span data-stu-id="ba233-170">The method to examine.</span></span></param>
        <summary><span data-ttu-id="ba233-171">获取指定方法的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="ba233-171">Gets the unique identifier for the specified method.</span></span></summary>
        <returns><span data-ttu-id="ba233-172">该方法的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="ba233-172">The unique identifier for the method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeIdentity">
      <MemberSignature Language="C#" Value="public static string GetTypeIdentity (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeIdentity(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeIdentity(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ba233-173">要检查的类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-173">The type to examine.</span></span></param>
        <summary><span data-ttu-id="ba233-174">获取指定类型的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="ba233-174">Gets the unique identifier for the specified type.</span></span></summary>
        <returns><span data-ttu-id="ba233-175">该类型的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="ba233-175">The unique identifier for the type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Imports">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba233-176">返回指示指定的部分是否包含与指定协定相匹配的导入的值。</span><span class="sxs-lookup"><span data-stu-id="ba233-176">Returns a value that indicates whether a specified part contains an inport that matches a specified contract.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Imports (part As ComposablePartDefinition, contractType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="ba233-177">要搜索的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-177">The part to search.</span></span></param>
        <param name="contractType"><span data-ttu-id="ba233-178">协定类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-178">The contract type.</span></span></param>
        <summary><span data-ttu-id="ba233-179">返回指示指定的部分是否包含与指定协定类型相匹配的导入的值。</span><span class="sxs-lookup"><span data-stu-id="ba233-179">Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</span></span></summary>
        <returns>
          <span data-ttu-id="ba233-180">如果 <paramref name="part" /> 包含与 <paramref name="contractType" /> 匹配的导入定义，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba233-180"><see langword="true" /> if <paramref name="part" /> contains an import definition that matches <paramref name="contractType" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType, System::ComponentModel::Composition::Primitives::ImportCardinality importCardinality);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="importCardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="ba233-181">要搜索的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-181">The part to search.</span></span></param>
        <param name="contractType"><span data-ttu-id="ba233-182">协定类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-182">The contract type.</span></span></param>
        <param name="importCardinality"><span data-ttu-id="ba233-183">导入基数。</span><span class="sxs-lookup"><span data-stu-id="ba233-183">The import cardinality.</span></span></param>
        <summary><span data-ttu-id="ba233-184">返回指示指定的部分是否包含与指定协定类型和导入基数相匹配的导入的值。</span><span class="sxs-lookup"><span data-stu-id="ba233-184">Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</span></span></summary>
        <returns>
          <span data-ttu-id="ba233-185">如果 <paramref name="part" /> 包含与 <paramref name="contractType" /> 和 <paramref name="importCardinality" /> 匹配的导入定义，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba233-185"><see langword="true" /> if <paramref name="part" /> contains an import definition that matches <paramref name="contractType" /> and <paramref name="importCardinality" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Imports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Imports(Of T) (part As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ba233-186">协定类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-186">The contract type.</span></span></typeparam>
        <param name="part"><span data-ttu-id="ba233-187">要搜索的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-187">The part to search.</span></span></param>
        <summary><span data-ttu-id="ba233-188">返回指示指定的部分是否包含与指定协定类型相匹配的导入的值。</span><span class="sxs-lookup"><span data-stu-id="ba233-188">Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</span></span></summary>
        <returns>
          <span data-ttu-id="ba233-189">如果 <paramref name="part" /> 包含类型 <paramref name="T" /> 的导入定义，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba233-189"><see langword="true" /> if <paramref name="part" /> contains an import definition of type <paramref name="T" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Imports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, System::ComponentModel::Composition::Primitives::ImportCardinality importCardinality);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="importCardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="ba233-190">协定类型。</span><span class="sxs-lookup"><span data-stu-id="ba233-190">The contract type.</span></span></typeparam>
        <param name="part"><span data-ttu-id="ba233-191">要搜索的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-191">The part to search.</span></span></param>
        <param name="importCardinality"><span data-ttu-id="ba233-192">导入基数。</span><span class="sxs-lookup"><span data-stu-id="ba233-192">The import cardinality.</span></span></param>
        <summary><span data-ttu-id="ba233-193">返回指示指定的部分是否包含与指定协定类型和导入基数相匹配的导入的值。</span><span class="sxs-lookup"><span data-stu-id="ba233-193">Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</span></span></summary>
        <returns>
          <span data-ttu-id="ba233-194">如果 <paramref name="part" /> 包含具有指定的导入基数类型 <paramref name="T" /> 的导入定义，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba233-194"><see langword="true" /> if <paramref name="part" /> contains an import definition of type <paramref name="T" /> that has the specified import cardinality; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SatisfyImportsOnce">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba233-195">组合一个指定的部分。</span><span class="sxs-lookup"><span data-stu-id="ba233-195">Composes a specified part.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce(class System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SatisfyImportsOnce (compositionService As ICompositionService, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ SatisfyImportsOnce(System::ComponentModel::Composition::ICompositionService ^ compositionService, System::Object ^ attributedPart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositionService" Type="System.ComponentModel.Composition.ICompositionService" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="compositionService"><span data-ttu-id="ba233-196">要使用的组合服务。</span><span class="sxs-lookup"><span data-stu-id="ba233-196">The composition service to use.</span></span></param>
        <param name="attributedPart"><span data-ttu-id="ba233-197">要组合的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-197">The part to compose.</span></span></param>
        <summary><span data-ttu-id="ba233-198">通过使用指定的组合服务并禁用重新组合来组合指定的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-198">Composes the specified part by using the specified composition service, with recomposition disabled.</span></span></summary>
        <returns><span data-ttu-id="ba233-199">已组合的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-199">The composed part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba233-200">与普通组合不同组成此方法的部件不保证保持有效如果后面目录`compositionService`更改。</span><span class="sxs-lookup"><span data-stu-id="ba233-200">Unlike ordinary composition, parts composed with this method are not guaranteed to remain valid if the catalog behind`compositionService` changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce(class System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ SatisfyImportsOnce(System::ComponentModel::Composition::ICompositionService ^ compositionService, System::Object ^ attributedPart, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositionService" Type="System.ComponentModel.Composition.ICompositionService" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="compositionService"><span data-ttu-id="ba233-201">要使用的组合服务。</span><span class="sxs-lookup"><span data-stu-id="ba233-201">The composition service to use.</span></span></param>
        <param name="attributedPart"><span data-ttu-id="ba233-202">要组合的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-202">The part to compose.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="ba233-203">用于部件的反射上下文。</span><span class="sxs-lookup"><span data-stu-id="ba233-203">The reflection context for the part.</span></span></param>
        <summary><span data-ttu-id="ba233-204">通过使用指定的组合服务并禁用重新组合及使用指定的反射上下文来组合指定的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-204">Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.</span></span></summary>
        <returns><span data-ttu-id="ba233-205">已组合的部件。</span><span class="sxs-lookup"><span data-stu-id="ba233-205">The composed part.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ba233-206"><paramref name="reflectionContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba233-206"><paramref name="reflectionContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>