<Type Name="ImportManyAttribute" FullName="System.ComponentModel.Composition.ImportManyAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="529faf954e2a10dc389da8b4af290ba5cae43ce2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImportManyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportManyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ImportManyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportManyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportManyAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="62683-101">Specifies that a property, field, or parameter should be populated with all matching exports by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
      <span class="sxs-lookup">
        <span data-stu-id="62683-101">Specifies that a property, field, or parameter should be populated with all matching exports by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="62683-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62683-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the default contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the default contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62683-104">默认协定名称是调用<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>的属性、 字段或使用此特性标记的参数类型的方法。</span><span class="sxs-lookup"><span data-stu-id="62683-104">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the type of the property, field, or parameter that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="62683-105">通过使用比较协定名称<xref:System.StringComparer.Ordinal%2A>属性来执行区分大小写、 非语言比较。</span><span class="sxs-lookup"><span data-stu-id="62683-105">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute(System::String ^ contractName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="62683-106">The contract name of the exports to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-106">The contract name of the exports to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62683-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the specified contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the specified contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62683-108">默认协定名称是调用<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>上使用此特性标记的属性、 字段或参数类型的方法。</span><span class="sxs-lookup"><span data-stu-id="62683-108">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="62683-109">通过使用比较协定名称<xref:System.StringComparer.Ordinal%2A>属性来执行区分大小写、 非语言比较。</span><span class="sxs-lookup"><span data-stu-id="62683-109">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute(Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="62683-110">The type to derive the contract name of the exports to import, or <see langword="null" /> to use the default contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-110">The type to derive the contract name of the exports to import, or <see langword="null" /> to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62683-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the contract name derived from the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the contract name derived from the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62683-112">协定名称是调用<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>方法`contractType`。</span><span class="sxs-lookup"><span data-stu-id="62683-112">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="62683-113">默认协定名称是调用<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>上使用此特性标记的属性、 字段或参数类型的方法。</span><span class="sxs-lookup"><span data-stu-id="62683-113">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="62683-114">通过使用比较协定名称<xref:System.StringComparer.Ordinal%2A>属性来执行区分大小写、 非语言比较。</span><span class="sxs-lookup"><span data-stu-id="62683-114">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportManyAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="62683-115">The contract name of the exports to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-115">The contract name of the exports to import, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="62683-116">The type of the export to import.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-116">The type of the export to import.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62683-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the specified contract name and contract type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> class, importing the set of exports with the specified contract name and contract type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecomposition">
      <MemberSignature Language="C#" Value="public bool AllowRecomposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRecomposition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowRecomposition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowRecomposition { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62683-118">Gets or sets a value indicating whether the decorated property or field will be recomposed when exports that provide the matching contract change.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-118">Gets or sets a value indicating whether the decorated property or field will be recomposed when exports that provide the matching contract change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62683-119">
            <see langword="true" /> 如果属性或字段时，可以重新组合提供相同导出<see cref="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" />添加或删除从<see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; 否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-119">
              <see langword="true" /> if the property or field allows for recomposition when exports that provide the same <see cref="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" /> are added or removed from the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="62683-120">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-120">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62683-121">Gets the contract name of the exports to import.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-121">Gets the contract name of the exports to import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62683-122">要导入导出协定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-122">The contract name of the exports to import.</span>
          </span>
          <span data-ttu-id="62683-123">默认值为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-123">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62683-124">Gets the contract type of the export to import.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-124">Gets the contract type of the export to import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62683-125">导出此导入所需的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-125">The type of the export that this import is expecting.</span>
          </span>
          <span data-ttu-id="62683-126">默认值是<see langword="null" />，这意味着，将通过查看在此导入附加到成员上的类型获取类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-126">The default value is <see langword="null" />, which means that the type will be obtained by looking at the type on the member that this import is attached to.</span>
          </span>
          <span data-ttu-id="62683-127">如果类型为<see cref="T:System.Object" />，导入将与任何导出的类型匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-127">If the type is <see cref="T:System.Object" />, the import will match any exported type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiredCreationPolicy As CreationPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::CreationPolicy RequiredCreationPolicy { System::ComponentModel::Composition::CreationPolicy get(); void set(System::ComponentModel::Composition::CreationPolicy value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62683-128">Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> for the exports used to satisfy this import.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-128">Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> for the exports used to satisfy this import.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62683-129">以下值之一：</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-129">One of the following values:</span>
          </span>
          <span data-ttu-id="62683-130">
            <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />如果导入程序不需要特定<see cref="T:System.ComponentModel.Composition.CreationPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-130">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, if the importer does not require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span>
          </span>
          <span data-ttu-id="62683-131">这是默认设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-131">This is the default.</span>
          </span>
          <span data-ttu-id="62683-132">
            <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> 需要，所有已使用的导出共享由容器中的所有部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-132">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> to require that all used exports be shared by all parts in the container.</span>
          </span>
          <span data-ttu-id="62683-133">
            <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> 需要所有已使用的导出为非共享容器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-133">
              <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> to require that all used exports be non-shared in a container.</span>
          </span>
          <span data-ttu-id="62683-134">在这种情况下，每个部分都会收到他们自己的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-134">In this case, each part receives their own instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.ImportSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.ImportSource Source" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As ImportSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::ImportSource Source { System::ComponentModel::Composition::ImportSource get(); void set(System::ComponentModel::Composition::ImportSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ImportSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62683-135">Gets or sets a value that specifies the scopes from which this import may be satisfied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-135">Gets or sets a value that specifies the scopes from which this import may be satisfied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62683-136">一个值，指定可能从其满足此导入的作用域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62683-136">A value that specifies the scopes from which this import may be satisfied.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>