<Type Name="ExportAttribute" FullName="System.ComponentModel.Composition.ExportAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3e7f0c27b4506657cc814dec0e5de3ca62300f76" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49145299" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ExportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ExportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4c570-101">指定某个类型、属性、字段或方法提供特定的导出。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c570-101">Specifies that a type, property, field, or method provides a particular export.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c570-102">在特性化编程模型中，<xref:System.ComponentModel.Composition.ExportAttribute>声明部件导出，或提供给复合容器，可满足特定协定的对象。</span><span class="sxs-lookup"><span data-stu-id="4c570-102">In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ExportAttribute> declares that a part exports, or provides to the composition container, an object that fulfills a particular contract.</span></span> <span data-ttu-id="4c570-103">在组合期间，使用导入具有匹配协定的部件将具有由导出对象填充这些依赖项。</span><span class="sxs-lookup"><span data-stu-id="4c570-103">During composition, parts with imports that have matching contracts will have those dependencies filled by the exported object.</span></span>  
  
 <span data-ttu-id="4c570-104"><xref:System.ComponentModel.Composition.ExportAttribute>可以修饰为整个类或属性、 字段或类的方法。</span><span class="sxs-lookup"><span data-stu-id="4c570-104">The <xref:System.ComponentModel.Composition.ExportAttribute> can decorate either an entire class, or a property, field, or method of a class.</span></span> <span data-ttu-id="4c570-105">如果整个类进行修饰，类的实例是已导出的对象。</span><span class="sxs-lookup"><span data-stu-id="4c570-105">If the entire class is decorated, an instance of the class is the exported object.</span></span> <span data-ttu-id="4c570-106">如果修饰类的成员，已导出的对象将经过修饰的成员的值。</span><span class="sxs-lookup"><span data-stu-id="4c570-106">If a member of a class is decorated, the exported object will be the value of the decorated member.</span></span>  
  
 <span data-ttu-id="4c570-107">主要由协定名称和协定类型决定约定相匹配。</span><span class="sxs-lookup"><span data-stu-id="4c570-107">Whether or not a contract matches is determined primarily by the contract name and the contract type.</span></span> <span data-ttu-id="4c570-108">有关详情，请参阅<xref:System.ComponentModel.Composition.ImportAttribute>。</span><span class="sxs-lookup"><span data-stu-id="4c570-108">For more information, see <xref:System.ComponentModel.Composition.ImportAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4c570-109">下面的示例演示三个类使用修饰<xref:System.ComponentModel.Composition.ExportAttribute>，并将其进行匹配的三个导入。</span><span class="sxs-lookup"><span data-stu-id="4c570-109">The following example shows three classes decorated with the <xref:System.ComponentModel.Composition.ExportAttribute>, and three imports that match them.</span></span>  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ImportAttribute" />
    <related type="Article" href="http://msdn.microsoft.com/library/6c61b4ec-c6df-4651-80f1-4854f8b14dde">
      <span data-ttu-id="4c570-110">特性化编程模型概述</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c570-110">Attributed Programming Model Overview</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c570-111">初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c570-112">通过在默认协定名称下导出使用此特性标记的类型或成员，初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under the default contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c570-113">默认协定名称是因调用<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>方法的属性或字段的类型，或使用此特性标记的类型。</span><span class="sxs-lookup"><span data-stu-id="4c570-113">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="4c570-114">使用此特性标记的方法必须通过使用指定的协定名称或类型<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>或<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>。</span><span class="sxs-lookup"><span data-stu-id="4c570-114">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="4c570-115">通过使用比较的协定名称<xref:System.StringComparer.Ordinal%2A>属性来执行区分大小写、 非语义比较。</span><span class="sxs-lookup"><span data-stu-id="4c570-115">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="4c570-116">用于导出使用此特性标记的类型或成员的协定名称，或 <see langword="null" /> 或空字符串 ("") 以使用默认协定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-116">The contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c570-117">通过在指定的协定名称下导出用此属性标记的类型或成员，来初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under the specified contract name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c570-118">默认协定名称是因调用<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>方法的属性或字段的类型，或这使用此特性标记的类型。</span><span class="sxs-lookup"><span data-stu-id="4c570-118">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that this is marked with this attribute.</span></span>  
  
 <span data-ttu-id="4c570-119">使用此特性标记的方法必须通过使用指定的协定名称或类型<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>或<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>。</span><span class="sxs-lookup"><span data-stu-id="4c570-119">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="4c570-120">通过使用比较的协定名称<xref:System.StringComparer.Ordinal%2A>属性来执行区分大小写、 非语义比较。</span><span class="sxs-lookup"><span data-stu-id="4c570-120">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="4c570-121">从中派生用于导出使用此特性标记的类型或成员的协定名称的类型，或 <see langword="null" /> 以使用默认协定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-121">A type from which to derive the contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c570-122">通过在派生自指定类型的协定名称下导出使用此特性标记的类型或成员，初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-122">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under a contract name derived from the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c570-123">协定名称是因调用<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>方法`contractType`。</span><span class="sxs-lookup"><span data-stu-id="4c570-123">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="4c570-124">默认协定名称是因调用<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>方法的属性或字段的类型，或使用此特性标记的类型。</span><span class="sxs-lookup"><span data-stu-id="4c570-124">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="4c570-125">使用此特性标记的方法必须通过使用指定的协定名称或类型<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>或<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>。</span><span class="sxs-lookup"><span data-stu-id="4c570-125">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="4c570-126">通过使用比较的协定名称<xref:System.StringComparer.Ordinal%2A>属性来执行区分大小写、 非语义比较。</span><span class="sxs-lookup"><span data-stu-id="4c570-126">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string * Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute (contractName, contractType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">
          <span data-ttu-id="4c570-127">用于导出使用此特性标记的类型或成员的协定名称，或 <see langword="null" /> 或空字符串 ("") 以使用默认协定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-127">The contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <param name="contractType">
          <span data-ttu-id="4c570-128">要导出的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-128">The type to export.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c570-129">通过在指定协定名称下导出指定类型，初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-129">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the specified type under the specified contract name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c570-130">获取用于导出使用此特性标记的类型或成员的协定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-130">Gets the contract name that is used to export the type or member marked with this attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c570-131">用于导出使用此特性标记的类型或成员的协定名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-131">The contract name that is used to export the type or member marked with this attribute.</span>
          </span>
          <span data-ttu-id="4c570-132">默认值为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-132">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : Type" Usage="System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c570-133">获取由此特性附加到的成员导出的协定类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-133">Gets the contract type that is exported by the member that this attribute is attached to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c570-134">提供的导出的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-134">The type of export that is be provided.</span>
          </span>
          <span data-ttu-id="4c570-135">默认值为 <see langword="null" />，这表示将通过查看此导出附加到的成员上的类型来获取类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c570-135">The default value is <see langword="null" />, which means that the type will be obtained by looking at the type on the member that this export is attached to.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>