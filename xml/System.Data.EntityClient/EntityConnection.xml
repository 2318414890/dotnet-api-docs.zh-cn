<Type Name="EntityConnection" FullName="System.Data.EntityClient.EntityConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="384a4e9b8077be465ec13086c481928809fbf963" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39833032" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityConnection : System.Data.Common.DbConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityConnection extends System.Data.Common.DbConnection" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityClient.EntityConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityConnection&#xA;Inherits DbConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityConnection sealed : System::Data::Common::DbConnection" />
  <TypeSignature Language="F#" Value="type EntityConnection = class&#xA;    inherit DbConnection" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b63f1-101">包含对概念模型和数据源连接的引用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b63f1-101">Contains a reference to a conceptual model and a data source connection.</span>
      </span>
      <span data-ttu-id="b63f1-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b63f1-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-103">为了避免无意使对象（如 <xref:System.Data.Common.CommandTrees> 和 <xref:System.Data.Objects.ObjectContext>）与其元数据失去同步，<xref:System.Data.EntityClient.EntityConnection> 必须锁定对象的元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-103">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="b63f1-104">锁定元数据后，不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-104">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="b63f1-105">下面是锁定元数据的两种方案：</span><span class="sxs-lookup"><span data-stu-id="b63f1-105">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="b63f1-106"><xref:System.Data.EntityClient.EntityConnection> 实例通过默认的构造函数或接受连接字符串的 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 构造函数进行构造。</span><span class="sxs-lookup"><span data-stu-id="b63f1-106">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="b63f1-107">在任何一种情况下，连接字符串可能在打开连接前进行多次更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-107">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="b63f1-108">调用 <xref:System.Data.EntityClient.EntityConnection.Open%2A> 或 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> 锁定元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-108">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="b63f1-109"><xref:System.Data.EntityClient.EntityConnection> 实例通过 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 构造函数进行构造，此构造函数接受 <xref:System.Data.Metadata.Edm.MetadataWorkspace> 和 <xref:System.Data.Common.DbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-109">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="b63f1-110">在这种情况下，元数据在构造时锁定。</span><span class="sxs-lookup"><span data-stu-id="b63f1-110">In this case, the metadata is locked at construction time.</span></span> <span data-ttu-id="b63f1-111">不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-111">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="b63f1-112">加载元数据后，<xref:System.Data.EntityClient.EntityConnection> 验证概念性模型、存储模型和映射文件是否全部存在。</span><span class="sxs-lookup"><span data-stu-id="b63f1-112">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 <span data-ttu-id="b63f1-113">有关代码示例，请参阅[使用 EntityClient](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)。</span><span class="sxs-lookup"><span data-stu-id="b63f1-113">For code examples, see [Working with EntityClient](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-114">初始化 <see cref="T:System.Data.EntityClient.EntityConnection" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-114">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-115">为了避免无意使对象（如 <xref:System.Data.Common.CommandTrees> 和 <xref:System.Data.Objects.ObjectContext>）与其元数据失去同步，<xref:System.Data.EntityClient.EntityConnection> 必须锁定对象的元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-115">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="b63f1-116">锁定元数据后，不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-116">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="b63f1-117">下面是锁定元数据的两种方案：</span><span class="sxs-lookup"><span data-stu-id="b63f1-117">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="b63f1-118"><xref:System.Data.EntityClient.EntityConnection> 实例通过默认的构造函数或接受连接字符串的 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 构造函数进行构造。</span><span class="sxs-lookup"><span data-stu-id="b63f1-118">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="b63f1-119">在任何一种情况下，连接字符串可能在打开连接前进行多次更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-119">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="b63f1-120">调用 <xref:System.Data.EntityClient.EntityConnection.Open%2A> 或 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> 锁定元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-120">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="b63f1-121"><xref:System.Data.EntityClient.EntityConnection> 实例通过 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 构造函数进行构造，此构造函数接受 <xref:System.Data.Metadata.Edm.MetadataWorkspace> 和 <xref:System.Data.Common.DbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-121">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="b63f1-122">在这种情况下，元数据在构造时锁定。</span><span class="sxs-lookup"><span data-stu-id="b63f1-122">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="b63f1-123">不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-123">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="b63f1-124">加载元数据后，<xref:System.Data.EntityClient.EntityConnection> 验证概念性模型、存储模型和映射文件是否全部存在。</span><span class="sxs-lookup"><span data-stu-id="b63f1-124">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 <span data-ttu-id="b63f1-125">有关代码示例，请参阅[使用 EntityClient](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)。</span><span class="sxs-lookup"><span data-stu-id="b63f1-125">For code examples, see [Working with EntityClient](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-126">初始化 <see cref="T:System.Data.EntityClient.EntityConnection" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-126">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-127">为了避免无意使对象（如 <xref:System.Data.Common.CommandTrees> 和 <xref:System.Data.Objects.ObjectContext>）与其元数据失去同步，<xref:System.Data.EntityClient.EntityConnection> 必须锁定对象的元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-127">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="b63f1-128">锁定元数据后，不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-128">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="b63f1-129">下面是锁定元数据的两种方案：</span><span class="sxs-lookup"><span data-stu-id="b63f1-129">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="b63f1-130"><xref:System.Data.EntityClient.EntityConnection> 实例通过默认的构造函数或接受连接字符串的 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 构造函数进行构造。</span><span class="sxs-lookup"><span data-stu-id="b63f1-130">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="b63f1-131">在任何一种情况下，连接字符串可能在打开连接前进行多次更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-131">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="b63f1-132">调用 <xref:System.Data.EntityClient.EntityConnection.Open%2A> 或 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> 锁定元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-132">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="b63f1-133"><xref:System.Data.EntityClient.EntityConnection> 实例通过 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 构造函数进行构造，此构造函数接受 <xref:System.Data.Metadata.Edm.MetadataWorkspace> 和 <xref:System.Data.Common.DbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-133">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="b63f1-134">在这种情况下，元数据在构造时锁定。</span><span class="sxs-lookup"><span data-stu-id="b63f1-134">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="b63f1-135">不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-135">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="b63f1-136">加载元数据后，<xref:System.Data.EntityClient.EntityConnection> 验证概念性模型、存储模型和映射文件是否全部存在。</span><span class="sxs-lookup"><span data-stu-id="b63f1-136">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 <span data-ttu-id="b63f1-137">有关代码示例，请参阅[使用 EntityClient](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)。</span><span class="sxs-lookup"><span data-stu-id="b63f1-137">For code examples, see [Working with EntityClient](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnection(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityClient.EntityConnection : string -&gt; System.Data.EntityClient.EntityConnection" Usage="new System.Data.EntityClient.EntityConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="b63f1-138">提供程序特定的连接字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-138">The provider-specific connection string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b63f1-139">基于连接字符串初始化 <see cref="T:System.Data.EntityClient.EntityConnection" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-139">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnection" /> class, based on the connection string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-140">生成已命名的连接字符串存储在应用程序的配置文件中。</span><span class="sxs-lookup"><span data-stu-id="b63f1-140">The  generate a named connection string that is stored in the application's configuration file.</span></span> <span data-ttu-id="b63f1-141">可以提供此命名的连接字符串来代替`connectionString`参数实例化时<xref:System.Data.EntityClient.EntityConnection>类。</span><span class="sxs-lookup"><span data-stu-id="b63f1-141">This named connection string can be supplied in place of the `connectionString` parameter when you instantiate the <xref:System.Data.EntityClient.EntityConnection> class.</span></span>  
  
 <span data-ttu-id="b63f1-142">为了避免无意使对象（如 <xref:System.Data.Common.CommandTrees> 和 <xref:System.Data.Objects.ObjectContext>）与其元数据失去同步，<xref:System.Data.EntityClient.EntityConnection> 必须锁定对象的元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-142">To avoid inadvertently putting objects <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="b63f1-143">锁定元数据后，不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-143">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="b63f1-144">下面是锁定元数据的两种方案：</span><span class="sxs-lookup"><span data-stu-id="b63f1-144">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="b63f1-145"><xref:System.Data.EntityClient.EntityConnection> 实例通过默认的构造函数或接受连接字符串的构造函数（<xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>）进行构造。</span><span class="sxs-lookup"><span data-stu-id="b63f1-145">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through this constructor (<xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29>), which accepts a connection string.</span></span> <span data-ttu-id="b63f1-146">在任何一种情况下，连接字符串可能在打开连接前进行多次更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-146">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="b63f1-147">调用 <xref:System.Data.EntityClient.EntityConnection.Open%2A> 或 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> 锁定元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-147">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="b63f1-148"><xref:System.Data.EntityClient.EntityConnection> 实例通过 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 构造函数进行构造，此构造函数接受 <xref:System.Data.Metadata.Edm.MetadataWorkspace> 和 <xref:System.Data.Common.DbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-148">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="b63f1-149">在这种情况下，元数据在构造时锁定。</span><span class="sxs-lookup"><span data-stu-id="b63f1-149">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="b63f1-150">不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-150">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="b63f1-151">加载元数据后，<xref:System.Data.EntityClient.EntityConnection> 验证概念性模型、存储模型和映射文件是否全部存在。</span><span class="sxs-lookup"><span data-stu-id="b63f1-151">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 <span data-ttu-id="b63f1-152">有关代码示例，请参阅[使用 EntityClient](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5)。</span><span class="sxs-lookup"><span data-stu-id="b63f1-152">For code examples, see [Working with EntityClient](http://msdn.microsoft.com/library/dec4728c-8dff-4e30-abe0-0f78fb5d5af5).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b63f1-153">提供的连接字符串关键字无效，或未提供所需的连接字符串关键字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-153">An invalid connection string keyword has been provided, or a required connection string keyword has not been provided.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection (System.Data.Metadata.Edm.MetadataWorkspace workspace, System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.MetadataWorkspace workspace, class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workspace As MetadataWorkspace, connection As DbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnection(System::Data::Metadata::Edm::MetadataWorkspace ^ workspace, System::Data::Common::DbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityClient.EntityConnection : System.Data.Metadata.Edm.MetadataWorkspace * System.Data.Common.DbConnection -&gt; System.Data.EntityClient.EntityConnection" Usage="new System.Data.EntityClient.EntityConnection (workspace, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="workspace">
          <span data-ttu-id="b63f1-154">与此 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 关联的 <see cref="T:System.Data.EntityClient.EntityConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-154">A <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> to be associated with this <see cref="T:System.Data.EntityClient.EntityConnection" />.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="b63f1-155">此 <see cref="T:System.Data.EntityClient.EntityConnection" /> 对象的基础数据源连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-155">The underlying data source connection for this <see cref="T:System.Data.EntityClient.EntityConnection" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b63f1-156">使用指定的 <see cref="T:System.Data.EntityClient.EntityConnection" /><see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />和 <see cref="T:System.Data.Common.DbConnection" />初始化  类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-156">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnection" /> class with a specified <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> and <see cref="T:System.Data.Common.DbConnection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-157">此构造函数使您可从非磁盘文件或非程序集嵌入资源的元数据创建 <xref:System.Data.EntityClient.EntityConnection>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-157">This constructor enables you to create an <xref:System.Data.EntityClient.EntityConnection> from metadata that is not from a file on a disk or from an embedded resource in an assembly.</span></span>  
  
 <span data-ttu-id="b63f1-158">为了避免无意使对象（如 <xref:System.Data.Common.CommandTrees> 和 <xref:System.Data.Objects.ObjectContext>）与其元数据失去同步，<xref:System.Data.EntityClient.EntityConnection> 必须锁定对象的元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-158">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, the <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="b63f1-159">锁定元数据后，不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-159">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="b63f1-160">下面是锁定元数据的两种方案：</span><span class="sxs-lookup"><span data-stu-id="b63f1-160">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="b63f1-161"><xref:System.Data.EntityClient.EntityConnection> 实例通过默认的构造函数或接受连接字符串的 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 构造函数进行构造。</span><span class="sxs-lookup"><span data-stu-id="b63f1-161">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="b63f1-162">在任何一种情况下，连接字符串可能在打开连接前进行多次更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-162">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="b63f1-163">调用 <xref:System.Data.EntityClient.EntityConnection.Open%2A> 或 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> 锁定元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-163">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="b63f1-164"><xref:System.Data.EntityClient.EntityConnection> 实例通过构造函数（<xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>）进行构造，此构造函数接受 <xref:System.Data.Metadata.Edm.MetadataWorkspace> 和 <xref:System.Data.Common.DbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-164">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through this constructor (<xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29>), which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="b63f1-165">在这种情况下，元数据在构造时锁定。</span><span class="sxs-lookup"><span data-stu-id="b63f1-165">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="b63f1-166">不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-166">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="b63f1-167">加载元数据后，<xref:System.Data.EntityClient.EntityConnection> 验证概念性模型、存储模型和映射文件是否全部存在。</span><span class="sxs-lookup"><span data-stu-id="b63f1-167">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b63f1-168">
            <paramref name="workspace" /> 或 <paramref name="connection" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-168">The <paramref name="workspace" /> or <paramref name="connection" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b63f1-169">工作区缺少概念性模型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-169">The conceptual model is missing from the workspace.</span>
          </span>
          <span data-ttu-id="b63f1-170">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-170">-or-</span>
          </span>
          <span data-ttu-id="b63f1-171">工作区缺少映射文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-171">The mapping file is missing from the workspace.</span>
          </span>
          <span data-ttu-id="b63f1-172">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-172">-or-</span>
          </span>
          <span data-ttu-id="b63f1-173">工作区缺少存储模型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-173">The storage model is missing from the workspace.</span>
          </span>
          <span data-ttu-id="b63f1-174">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-174">-or-</span>
          </span>
          <span data-ttu-id="b63f1-175">
            <paramref name="connection" /> 不处于已关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-175">The <paramref name="connection" /> is not in a closed state.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.ProviderIncompatibleException">
          <span data-ttu-id="b63f1-176">
            <paramref name="connection" /> 并非来自与 ADO.NET Entity Framework 兼容的提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-176">The <paramref name="connection" /> is not from an ADO.NET Entity Framework-compatible provider.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="entityConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-177">开始一项数据库事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-177">Begins a database transaction.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.EntityClient.EntityTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityClient.EntityTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As EntityTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityClient::EntityTransaction ^ BeginTransaction();" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.EntityClient.EntityTransaction" Usage="entityConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-178">使用基础提供程序开始一个事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-178">Begins a transaction by using the underlying provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b63f1-179">一个新的 <see cref="T:System.Data.EntityClient.EntityTransaction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-179">A new <see cref="T:System.Data.EntityClient.EntityTransaction" />.</span>
          </span>
          <span data-ttu-id="b63f1-180">返回的 <see cref="T:System.Data.EntityClient.EntityTransaction" /> 实例以后可以与 <see cref="T:System.Data.EntityClient.EntityCommand" /> 关联以执行该事务下的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-180">The returned <see cref="T:System.Data.EntityClient.EntityTransaction" /> instance can later be associated with the <see cref="T:System.Data.EntityClient.EntityCommand" /> to execute the command under that transaction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-181"><xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> 方法使用 <xref:System.Data.IsolationLevel.Unspecified> 事务隔离级别。</span><span class="sxs-lookup"><span data-stu-id="b63f1-181">The <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> method uses the <xref:System.Data.IsolationLevel.Unspecified> transaction isolation level.</span></span> <span data-ttu-id="b63f1-182">若要指定不同的隔离级别，请调用 <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-182">To specify a different isolation level, call <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</span></span> <span data-ttu-id="b63f1-183">不同的基础提供程序可能用不同的方法对此值进行解释。</span><span class="sxs-lookup"><span data-stu-id="b63f1-183">This value might be interpreted differently by different underlying providers.</span></span> <span data-ttu-id="b63f1-184">如果要应用程序可以跨多个提供程序移植，该应用程序应通过调用 <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> 显式指定事务隔离级别。</span><span class="sxs-lookup"><span data-stu-id="b63f1-184">If you want your application to be portable across multiple providers, it should explicitly specify the transaction isolation level by calling <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</span></span>  
  
 <span data-ttu-id="b63f1-185">任何特定时刻都只能存在一个通过 <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> 创建的活动事务。</span><span class="sxs-lookup"><span data-stu-id="b63f1-185">At any particular moment there can be no more than one active transaction that was created through <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</span></span> <span data-ttu-id="b63f1-186">尝试对已具有当前事务的 <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> 调用任何 <xref:System.Data.EntityClient.EntityConnection> 重载将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-186">An attempt to call any of the <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> overloads on an <xref:System.Data.EntityClient.EntityConnection> that already has a current transaction results in an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b63f1-187">基础提供程序未知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-187">The underlying provider is not known.</span>
          </span>
          <span data-ttu-id="b63f1-188">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-188">-or-</span>
          </span>
          <span data-ttu-id="b63f1-189">对已具有当前事务的 <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /><see cref="T:System.Data.EntityClient.EntityConnection" />调用 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-189">The call to <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /> was made on an <see cref="T:System.Data.EntityClient.EntityConnection" /> that already has a current transaction.</span>
          </span>
          <span data-ttu-id="b63f1-190">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-190">-or-</span>
          </span>
          <span data-ttu-id="b63f1-191">
            <see cref="T:System.Data.EntityClient.EntityConnection" /> 的状态不是 <see cref="F:System.Data.ConnectionState.Open" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-191">The state of the <see cref="T:System.Data.EntityClient.EntityConnection" /> is not <see cref="F:System.Data.ConnectionState.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.EntityClient.EntityTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityClient.EntityTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityClient::EntityTransaction ^ BeginTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.EntityClient.EntityTransaction" Usage="entityConnection.BeginTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">
          <span data-ttu-id="b63f1-192">事务的隔离级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-192">The isolation level of the transaction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b63f1-193">使用基础提供程序开始一个具有指定隔离级别的事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-193">Begins a transaction with the specified isolation level by using the underlying provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b63f1-194">一个新的 <see cref="T:System.Data.EntityClient.EntityTransaction" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-194">A new <see cref="T:System.Data.EntityClient.EntityTransaction" />.</span>
          </span>
          <span data-ttu-id="b63f1-195">返回的 <see cref="T:System.Data.EntityClient.EntityTransaction" /> 实例以后可以与 <see cref="T:System.Data.EntityClient.EntityCommand" /> 关联以执行该事务下的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-195">The returned <see cref="T:System.Data.EntityClient.EntityTransaction" /> instance can later be associated with the <see cref="T:System.Data.EntityClient.EntityCommand" /> to execute the command under that transaction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-196">任何特定时刻都只能存在一个通过 <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> 创建的活动事务。</span><span class="sxs-lookup"><span data-stu-id="b63f1-196">At any particular moment there can be no more than one active transaction that was created through <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A>.</span></span> <span data-ttu-id="b63f1-197">尝试对已具有当前事务的 <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> 调用任何 <xref:System.Data.EntityClient.EntityConnection> 重载将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-197">An attempt to call any of the <xref:System.Data.EntityClient.EntityConnection.BeginTransaction%2A> overloads on an <xref:System.Data.EntityClient.EntityConnection> that already has a current transaction results in an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b63f1-198">基础提供程序未知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-198">The underlying provider is not known.</span>
          </span>
          <span data-ttu-id="b63f1-199">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-199">-or-</span>
          </span>
          <span data-ttu-id="b63f1-200">对已具有当前事务的 <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /><see cref="T:System.Data.EntityClient.EntityConnection" />调用 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-200">The call to <see cref="M:System.Data.EntityClient.EntityConnection.BeginTransaction" /> was made on an <see cref="T:System.Data.EntityClient.EntityConnection" /> that already has a current transaction.</span>
          </span>
          <span data-ttu-id="b63f1-201">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-201">-or-</span>
          </span>
          <span data-ttu-id="b63f1-202">
            <see cref="T:System.Data.EntityClient.EntityConnection" /> 的状态不是 <see cref="F:System.Data.ConnectionState.Open" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-202">The state of the <see cref="T:System.Data.EntityClient.EntityConnection" /> is not <see cref="F:System.Data.ConnectionState.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string databaseName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string databaseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (databaseName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ databaseName);" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="entityConnection.ChangeDatabase databaseName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseName">
          <span data-ttu-id="b63f1-203">不支持。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-203">Not supported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b63f1-204">不支持。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-204">Not supported.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-205"><xref:System.Data.EntityClient.EntityConnection.ChangeDatabase%2A>方法时是必需的派生自<xref:System.Data.Common.DbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-205">The <xref:System.Data.EntityClient.EntityConnection.ChangeDatabase%2A> method is required when deriving from <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="b63f1-206">此方法不受支持，将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-206">This method is not supported and will raise a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b63f1-207">调用该方法时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-207">When the method is called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="entityConnection.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-208">关闭与数据库之间的连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-208">Closes the connection to the database.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-209">如果基础数据提供程序未知，则调用 <xref:System.Data.EntityClient.EntityConnection.Close%2A> 将不起任何作用。</span><span class="sxs-lookup"><span data-stu-id="b63f1-209">If the underlying data provider is not known, the call to <xref:System.Data.EntityClient.EntityConnection.Close%2A> does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b63f1-210">关闭连接时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-210">An error occurred when closing the connection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.EntityClient.EntityConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-211">获取或设置 <see cref="T:System.Data.EntityClient.EntityConnection" /> 连接字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-211">Gets or sets the <see cref="T:System.Data.EntityClient.EntityConnection" /> connection string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b63f1-212">建立与数据源的初始连接所需的连接字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-212">The connection string required to establish the initial connection to a data source.</span>
          </span>
          <span data-ttu-id="b63f1-213">默认值为一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-213">The default value is an empty string.</span>
          </span>
          <span data-ttu-id="b63f1-214">连接关闭时，将返回当前设置的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-214">On a closed connection, the currently set value is returned.</span>
          </span>
          <span data-ttu-id="b63f1-215">如果未设置任何值，则将返回一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-215">If no value has been set, an empty string is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-216">`EntityClient`连接字符串关键字/值参数对之间用分号分隔的序列组成。</span><span class="sxs-lookup"><span data-stu-id="b63f1-216">An `EntityClient` connection string consists of a sequence of keyword/value parameter pairs separated by semicolons.</span></span> <span data-ttu-id="b63f1-217">每个关键字和它的值之间用等号 (=) 连接。</span><span class="sxs-lookup"><span data-stu-id="b63f1-217">The equals sign (=) connects each keyword and its value.</span></span> <span data-ttu-id="b63f1-218">下表列出了 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> 中的关键字值的有效名称。</span><span class="sxs-lookup"><span data-stu-id="b63f1-218">The following table lists the valid names for keyword values in the <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
|<span data-ttu-id="b63f1-219">关键字</span><span class="sxs-lookup"><span data-stu-id="b63f1-219">Keyword</span></span>|<span data-ttu-id="b63f1-220">描述</span><span class="sxs-lookup"><span data-stu-id="b63f1-220">Description</span></span>|  
|-------------|-----------------|  
|`Provider`|<span data-ttu-id="b63f1-221">此关键字在未指定 `Name` 关键字时是必需的。</span><span class="sxs-lookup"><span data-stu-id="b63f1-221">Required if the `Name` keyword is not specified.</span></span> <span data-ttu-id="b63f1-222">提供程序名称，用于检索基础提供程序的 <xref:System.Data.Common.DbProviderFactory> 对象。</span><span class="sxs-lookup"><span data-stu-id="b63f1-222">The provider name, which is used to retrieve the <xref:System.Data.Common.DbProviderFactory> object for the underlying provider.</span></span> <span data-ttu-id="b63f1-223">该值为常量。</span><span class="sxs-lookup"><span data-stu-id="b63f1-223">This value is constant.</span></span><br /><br /> <span data-ttu-id="b63f1-224">当`Name`关键字未包含在连接字符串中，为一个非空值`Provider`关键字是必需的。</span><span class="sxs-lookup"><span data-stu-id="b63f1-224">When the `Name` keyword is not included in the connection string, a non-empty value for the `Provider` keyword is required.</span></span> <span data-ttu-id="b63f1-225">此关键字与 `Name` 关键字互斥。</span><span class="sxs-lookup"><span data-stu-id="b63f1-225">This keyword is mutually exclusive with the `Name` keyword.</span></span>|  
|`Provider Connection String`|<span data-ttu-id="b63f1-226">可选。</span><span class="sxs-lookup"><span data-stu-id="b63f1-226">Optional.</span></span> <span data-ttu-id="b63f1-227">指定要传递给基础数据源的提供程序特定的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="b63f1-227">Specifies the provider-specific connection string that is passed to the underlying data source.</span></span> <span data-ttu-id="b63f1-228">此连接字符串用数据提供程序的有效关键字/值对表示。</span><span class="sxs-lookup"><span data-stu-id="b63f1-228">This connection string is expressed by using valid keyword/value pairs for the data provider.</span></span> <span data-ttu-id="b63f1-229">如果 `Provider Connection String` 无效，则当数据源计算此字符串时，将导致运行时错误。</span><span class="sxs-lookup"><span data-stu-id="b63f1-229">An invalid `Provider Connection String` will cause a run-time error when it is evaluated by the data source.</span></span><br /><br /> <span data-ttu-id="b63f1-230">此关键字与 `Name` 关键字互斥。</span><span class="sxs-lookup"><span data-stu-id="b63f1-230">This keyword is mutually exclusive with the `Name` keyword.</span></span><br /><br /> <span data-ttu-id="b63f1-231">`Provider Connection String` 的值必须用引号引起来。</span><span class="sxs-lookup"><span data-stu-id="b63f1-231">The value of the `Provider Connection String` must be surrounded by quotes.</span></span> <span data-ttu-id="b63f1-232">下面是一个示例：</span><span class="sxs-lookup"><span data-stu-id="b63f1-232">The following is an example:</span></span><br /><br /> `Provider Connection String ="Server=serverName; User ID = userID";`<br /><br /> <span data-ttu-id="b63f1-233">以下示例将无效：</span><span class="sxs-lookup"><span data-stu-id="b63f1-233">The following example is not going to work:</span></span><br /><br /> `Provider Connection String =Server=serverName; User ID = userID`|  
|`Metadata`|<span data-ttu-id="b63f1-234">此关键字在未指定 `Name` 关键字时是必需的。</span><span class="sxs-lookup"><span data-stu-id="b63f1-234">Required if the `Name` keyword is not specified.</span></span> <span data-ttu-id="b63f1-235">竖线分隔的目录、 文件和要在其中查找有关模型和映射信息的资源位置列表。</span><span class="sxs-lookup"><span data-stu-id="b63f1-235">A pipe-delimited list of directories, files, and resource locations in which to look for model and mapping information.</span></span> <span data-ttu-id="b63f1-236">下面是一个示例：</span><span class="sxs-lookup"><span data-stu-id="b63f1-236">The following is an example:</span></span><br /><br /> `Metadata=`<br /><br /> `c:\model &#124; c:\model\sql\mapping.msl;`<br /><br /> <span data-ttu-id="b63f1-237">竖线分隔符两侧的空格将被忽略。</span><span class="sxs-lookup"><span data-stu-id="b63f1-237">Blank spaces on each side of the pipe separator are ignored.</span></span><br /><br /> <span data-ttu-id="b63f1-238">此关键字与 `Name` 关键字互斥。</span><span class="sxs-lookup"><span data-stu-id="b63f1-238">This keyword is mutually exclusive with the `Name` keyword.</span></span>|  
|`Name`|<span data-ttu-id="b63f1-239">应用程序可以选择在应用程序配置文件中指定连接名称，以用于提供所需的关键字/值连接字符串值。</span><span class="sxs-lookup"><span data-stu-id="b63f1-239">The application can optionally specify the connection name in an application configuration file that provides the required keyword/value connection string values.</span></span> <span data-ttu-id="b63f1-240">在此情况下，无法在连接字符串中直接提供这些值。</span><span class="sxs-lookup"><span data-stu-id="b63f1-240">In this case, you cannot supply them directly in the connection string.</span></span> <span data-ttu-id="b63f1-241">配置文件中不允许出现 `Name` 关键字。</span><span class="sxs-lookup"><span data-stu-id="b63f1-241">The `Name` keyword is not allowed in a configuration file.</span></span><br /><br /> <span data-ttu-id="b63f1-242">如果连接字符串中未包含 `Name` 关键字，则需要一个非空的 Provider 关键字值。</span><span class="sxs-lookup"><span data-stu-id="b63f1-242">When the `Name` keyword is not included in the connection string, a non-empty values for Provider keyword is required.</span></span><br /><br /> <span data-ttu-id="b63f1-243">此关键字与所有其他连接字符串关键字互斥。</span><span class="sxs-lookup"><span data-stu-id="b63f1-243">This keyword is mutually exclusive with all the other connection string keywords.</span></span>|  
  
 <span data-ttu-id="b63f1-244">应用程序可以提供关键字/值直接在<xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>属性，也可以指定的值`Name`关键字。</span><span class="sxs-lookup"><span data-stu-id="b63f1-244">The application can supply the keyword/values directly in the <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> property, or it can specify a value for the `Name` keyword.</span></span> <span data-ttu-id="b63f1-245">如果`Name`指定关键字、 连接字符串关键字/值检索从应用程序配置文件，按如下所示：</span><span class="sxs-lookup"><span data-stu-id="b63f1-245">If the `Name` keyword is specified, the connection string keyword/values are retrieved from an application configuration file, as follows:</span></span>  
  
 `Name=AdventureWorksEntities;`  
  
 <span data-ttu-id="b63f1-246">如果`Name`关键字用于<xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>属性，不允许其他关键字。</span><span class="sxs-lookup"><span data-stu-id="b63f1-246">If the `Name` keyword is used in the <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> property, other keywords are not allowed.</span></span> <span data-ttu-id="b63f1-247">`Name`关键字是指存储在已命名的连接字符串`connectionStrings`部分应用程序配置文件，如下面的示例中所示。</span><span class="sxs-lookup"><span data-stu-id="b63f1-247">The `Name` keyword refers to a named connection string that is stored in the `connectionStrings` section in an application configuration file, as shown in the following example.</span></span> <span data-ttu-id="b63f1-248">`Provider`， `Metadata`，和`Provider Connection String`在运行时从配置文件检索值。</span><span class="sxs-lookup"><span data-stu-id="b63f1-248">The `Provider`, `Metadata`, and `Provider Connection String` values are retrieved from the configuration file at run time.</span></span>  
  
  
  
 <span data-ttu-id="b63f1-249">应用程序也可以直接在 <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> 属性中提供关键字/值对，如下面的示例所示。</span><span class="sxs-lookup"><span data-stu-id="b63f1-249">The keyword/value pairs can also be supplied directly in the <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A> property, as shown in the following example.</span></span> <span data-ttu-id="b63f1-250">在这种情况下，`Name`未使用关键字。</span><span class="sxs-lookup"><span data-stu-id="b63f1-250">In this case, the `Name` keyword is not used.</span></span>  
  
```  
"Provider=System.Data.SqlClient;  
Metadata=c:\metadata|c:\Metadata\Sql;  
Provider Connection String= 'Data Source=localhost;  
    Initial Catalog=AdventureWorks;Integrated Security=True;Connection Timeout=60' "  
```  
  
 <span data-ttu-id="b63f1-251">为了避免无意使对象（如 <xref:System.Data.Common.CommandTrees> 和 <xref:System.Data.Objects.ObjectContext>）与其元数据失去同步，<xref:System.Data.EntityClient.EntityConnection> 必须锁定对象的元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-251">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="b63f1-252">锁定元数据后，不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-252">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="b63f1-253">下面是锁定元数据的两种方案：</span><span class="sxs-lookup"><span data-stu-id="b63f1-253">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="b63f1-254"><xref:System.Data.EntityClient.EntityConnection> 实例通过默认的构造函数或接受连接字符串的 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 构造函数进行构造。</span><span class="sxs-lookup"><span data-stu-id="b63f1-254">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="b63f1-255">在任何一种情况下，连接字符串可能在打开连接前进行多次更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-255">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="b63f1-256">调用 <xref:System.Data.EntityClient.EntityConnection.Open%2A> 或 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> 锁定元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-256">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="b63f1-257"><xref:System.Data.EntityClient.EntityConnection> 实例通过 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 构造函数进行构造，此构造函数接受 <xref:System.Data.Metadata.Edm.MetadataWorkspace> 和 <xref:System.Data.Common.DbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-257">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="b63f1-258">在这种情况下，元数据在构造时锁定。</span><span class="sxs-lookup"><span data-stu-id="b63f1-258">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="b63f1-259">不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-259">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="b63f1-260">加载元数据后，<xref:System.Data.EntityClient.EntityConnection> 验证概念性模型、存储模型和映射文件是否全部存在。</span><span class="sxs-lookup"><span data-stu-id="b63f1-260">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b63f1-261">下面的示例演示如何配合使用 <xref:System.Data.EntityClient.EntityConnectionStringBuilder> 和 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-261">The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span></span> <span data-ttu-id="b63f1-262">该代码设置的属性`SqlConnectionStringBuilder`若要创建<xref:System.Data.SqlClient.SqlConnection>提供基础提供程序连接字符串的部分的字符串。</span><span class="sxs-lookup"><span data-stu-id="b63f1-262">The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> string that supplies part of the underlying provider connection string.</span></span> <span data-ttu-id="b63f1-263">请注意，`Provider`不能使用设置名称`SqlConnectionStringBuilder`，因为它不使用有效`SqlConnection`语法。</span><span class="sxs-lookup"><span data-stu-id="b63f1-263">Note that the `Provider` name cannot be set by using the `SqlConnectionStringBuilder`, because it does not use valid `SqlConnection` syntax.</span></span> <span data-ttu-id="b63f1-264">该代码会创建<xref:System.Data.EntityClient.EntityConnection>通过设置字符串`EntityConnectionStringBuilder`属性。</span><span class="sxs-lookup"><span data-stu-id="b63f1-264">The code creates the <xref:System.Data.EntityClient.EntityConnection> string by setting `EntityConnectionStringBuilder` properties.</span></span>  
  
 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b63f1-265">用户尝试在初始化 <see cref="P:System.Data.EntityClient.EntityConnection.ConnectionString" /> 的 <see cref="T:System.Data.EntityClient.EntityConnection" /> 后设置 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-265">An attempt was made to set the <see cref="P:System.Data.EntityClient.EntityConnection.ConnectionString" /> property after the <see cref="T:System.Data.EntityClient.EntityConnection" />’s <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> was initialized.</span>
          </span>
          <span data-ttu-id="b63f1-266">在通过重载（此重载将 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 作为参数）构造 <see cref="T:System.Data.EntityClient.EntityConnection" /> 实例，或者打开 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 实例时，初始化 <see cref="T:System.Data.EntityClient.EntityConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-266">The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> is initialized either when the <see cref="T:System.Data.EntityClient.EntityConnection" /> instance is constructed through the overload that takes a <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> as a parameter, or when the <see cref="T:System.Data.EntityClient.EntityConnection" /> instance has been opened.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b63f1-267">提供的连接字符串关键字无效，或未提供所需的连接字符串关键字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-267">An invalid connection string keyword has been provided or a required connection string keyword has not been provided.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ConnectionTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.EntityClient.EntityConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-268">获取从尝试建立连接到结束尝试并生成错误需要等待的秒数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-268">Gets the number of seconds to wait when attempting to establish a connection before ending the attempt and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b63f1-269">等待连接打开所需的时间（以秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-269">The time (in seconds) to wait for a connection to open.</span>
          </span>
          <span data-ttu-id="b63f1-270">默认值为基础数据提供程序的默认超时值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-270">The default value is the underlying data provider's default time-out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-271">如果基础数据提供程序未知，则返回零。</span><span class="sxs-lookup"><span data-stu-id="b63f1-271">Returns zero if the underlying data provider is not known.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b63f1-272">设置的值小于 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-272">The value set is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.EntityClient.EntityCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.EntityClient.EntityCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As EntityCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::EntityClient::EntityCommand ^ CreateCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.EntityClient.EntityCommand" Usage="entityConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityClient.EntityCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-273">在 <see cref="T:System.Data.EntityClient.EntityCommand" /> 设置为此 <see cref="P:System.Data.EntityClient.EntityCommand.Connection" /> 的情况下创建 <see cref="T:System.Data.EntityClient.EntityConnection" /> 的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-273">Creates a new instance of an <see cref="T:System.Data.EntityClient.EntityCommand" />, with the <see cref="P:System.Data.EntityClient.EntityCommand.Connection" /> set to this <see cref="T:System.Data.EntityClient.EntityConnection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b63f1-274">一个 <see cref="T:System.Data.EntityClient.EntityCommand" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-274">An <see cref="T:System.Data.EntityClient.EntityCommand" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b63f1-275">基础数据提供程序的名称未知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-275">The name of the underlying data provider is not known.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="entityConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.EntityClient.EntityConnection.Database" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-276">获取当前数据库或将在连接打开后使用的数据库的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-276">Gets the name of the current database, or the database that will be used after a connection is opened.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b63f1-277">基础数据提供程序的 <see langword="Database" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-277">The value of the <see langword="Database" /> property of the underlying data provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-278">有关特定关键字值，如`Database`，，它映射到<xref:System.Data.EntityClient.EntityConnection.Database%2A>属性，请参阅基础数据提供程序的文档。</span><span class="sxs-lookup"><span data-stu-id="b63f1-278">For the specific keyword value, such as `Database`, that maps to the <xref:System.Data.EntityClient.EntityConnection.Database%2A> property, see the documentation for the underlying data provider.</span></span> <span data-ttu-id="b63f1-279">SQL Server 等效关键字，请参阅的文档<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="b63f1-279">For SQL Server equivalent keywords, see the documentation for the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b63f1-280">基础数据提供程序未知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-280">The underlying data provider is not known.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.EntityClient.EntityConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-281">获取要连接到的数据源的名称或网络地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-281">Gets the name or network address of the data source to connect to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b63f1-282">数据源的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-282">The name of the data source.</span>
          </span>
          <span data-ttu-id="b63f1-283">默认值为一个空字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-283">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-284">有关特定关键字值，如`DataSource`，，它映射到<xref:System.Data.EntityClient.EntityConnection.DataSource%2A>属性，请参阅基础数据提供程序的文档。</span><span class="sxs-lookup"><span data-stu-id="b63f1-284">For the specific keyword value, such as `DataSource`, that maps to the <xref:System.Data.EntityClient.EntityConnection.DataSource%2A> property, see the documentation for the underlying data provider.</span></span> <span data-ttu-id="b63f1-285">SQL Server 等效关键字，请参阅的文档<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="b63f1-285">For SQL Server equivalent keywords, see the documentation for the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b63f1-286">基础数据提供程序未知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-286">The underlying data provider is not known.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbProviderFactory ^ DbProviderFactory { System::Data::Common::DbProviderFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DbProviderFactory : System.Data.Common.DbProviderFactory" Usage="System.Data.EntityClient.EntityConnection.DbProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="entityConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="entityConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <span data-ttu-id="b63f1-287">要在其中进行登记的事务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-287">The transaction object to enlist into.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b63f1-288">在指定的事务中登记此 <see cref="T:System.Data.EntityClient.EntityConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-288">Enlists this <see cref="T:System.Data.EntityClient.EntityConnection" /> in the specified transaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-289">此方法转发对数据源连接的调用，以在传递的 <xref:System.Transactions.Transaction> 中显式登记。</span><span class="sxs-lookup"><span data-stu-id="b63f1-289">This method forwards the call to the data source connection to explicitly enlist in the passed <xref:System.Transactions.Transaction>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b63f1-290">
            <see cref="T:System.Data.EntityClient.EntityConnection" /> 的状态不是 <see cref="F:System.Data.ConnectionState.Open" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-290">The state of the <see cref="T:System.Data.EntityClient.EntityConnection" /> is not <see cref="F:System.Data.ConnectionState.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataWorkspace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataWorkspace () As MetadataWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::MetadataWorkspace ^ GetMetadataWorkspace();" />
      <MemberSignature Language="F#" Value="member this.GetMetadataWorkspace : unit -&gt; System.Data.Metadata.Edm.MetadataWorkspace" Usage="entityConnection.GetMetadataWorkspace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-291">返回与此 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 关联的 <see cref="T:System.Data.EntityClient.EntityConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-291">Returns the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> associated with this <see cref="T:System.Data.EntityClient.EntityConnection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b63f1-292">与此 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 关联的 <see cref="T:System.Data.EntityClient.EntityConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-292">The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> associated with this <see cref="T:System.Data.EntityClient.EntityConnection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-293">创建 <xref:System.Data.Metadata.Edm.MetadataWorkspace> 类时，将自动创建 <xref:System.Data.EntityClient.EntityConnection>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-293">A <xref:System.Data.Metadata.Edm.MetadataWorkspace> is automatically created when the <xref:System.Data.EntityClient.EntityConnection> class is created.</span></span> <span data-ttu-id="b63f1-294">创建过程可能引发特定元数据异常。</span><span class="sxs-lookup"><span data-stu-id="b63f1-294">The creation process might throw metadata-specific exceptions.</span></span> <span data-ttu-id="b63f1-295">元数据将被加载到内存中，Entity Data Model (EDM) 应用程序则使用该元数据访问有关基础数据源的信息。</span><span class="sxs-lookup"><span data-stu-id="b63f1-295">Metadata is loaded into memory and an Entity Data Model (EDM) application uses that metadata to access information about the underlying data source.</span></span> <span data-ttu-id="b63f1-296">有关详细信息，请参阅[ADO.NET 元数据](http://msdn.microsoft.com/library/196097a5-a791-4ac4-9e6a-805685d481d5)。</span><span class="sxs-lookup"><span data-stu-id="b63f1-296">For more information, see [ADO.NET Metadata](http://msdn.microsoft.com/library/196097a5-a791-4ac4-9e6a-805685d481d5).</span></span>  
  
 <span data-ttu-id="b63f1-297">为了避免无意使对象（如 <xref:System.Data.Common.CommandTrees> 和 <xref:System.Data.Objects.ObjectContext>）与其元数据失去同步，<xref:System.Data.EntityClient.EntityConnection> 必须锁定对象的元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-297">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="b63f1-298">锁定元数据后，不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-298">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="b63f1-299">下面是锁定元数据的两种方案：</span><span class="sxs-lookup"><span data-stu-id="b63f1-299">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="b63f1-300"><xref:System.Data.EntityClient.EntityConnection> 实例通过默认的构造函数或接受连接字符串的 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 构造函数进行构造。</span><span class="sxs-lookup"><span data-stu-id="b63f1-300">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="b63f1-301">在任一情况下打开连接之前，可能会更改连接字符串多次。</span><span class="sxs-lookup"><span data-stu-id="b63f1-301">In either case the connection string may be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="b63f1-302"><xref:System.Data.EntityClient.EntityConnection.Open%2A> 或<xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A>锁定元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-302"><xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="b63f1-303"><xref:System.Data.EntityClient.EntityConnection> 实例通过 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 构造函数进行构造，此构造函数接受 <xref:System.Data.Metadata.Edm.MetadataWorkspace> 和 <xref:System.Data.Common.DbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-303">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="b63f1-304">在这种情况下，元数据在构造时锁定。</span><span class="sxs-lookup"><span data-stu-id="b63f1-304">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="b63f1-305">不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-305">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="b63f1-306">加载元数据后，<xref:System.Data.EntityClient.EntityConnection> 验证概念性模型、存储模型和映射文件是否全部存在。</span><span class="sxs-lookup"><span data-stu-id="b63f1-306">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.MetadataException">
          <span data-ttu-id="b63f1-307">内联连接字符串包含一个无效的 <see langword="Metadata" /> 关键字值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-307">The inline connection string contains an invalid <see langword="Metadata" /> keyword value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="entityConnection.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-308">通过调用基础数据提供程序的 <see langword="Open" /> 方法，建立与数据源的连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-308">Establishes a connection to the data source by calling the underlying data provider's <see langword="Open" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-309">为了避免无意使对象（如 <xref:System.Data.Common.CommandTrees> 和 <xref:System.Data.Objects.ObjectContext>）与其元数据失去同步，<xref:System.Data.EntityClient.EntityConnection> 必须锁定对象的元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-309">To avoid inadvertently putting objects such as <xref:System.Data.Common.CommandTrees> and <xref:System.Data.Objects.ObjectContext> out of sync with their metadata, <xref:System.Data.EntityClient.EntityConnection> must lock its metadata.</span></span> <span data-ttu-id="b63f1-310">锁定元数据后，不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-310">No changes to the connection string are allowed after the metadata is locked.</span></span> <span data-ttu-id="b63f1-311">下面是锁定元数据的两种方案：</span><span class="sxs-lookup"><span data-stu-id="b63f1-311">The following are two scenarios in which metadata is locked:</span></span>  
  
-   <span data-ttu-id="b63f1-312"><xref:System.Data.EntityClient.EntityConnection> 实例通过默认的构造函数或接受连接字符串的 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> 构造函数进行构造。</span><span class="sxs-lookup"><span data-stu-id="b63f1-312">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the default constructor, or through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.String%29> constructor, which accepts a connection string.</span></span> <span data-ttu-id="b63f1-313">在任何一种情况下，连接字符串可能在打开连接前进行多次更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-313">In either case the connection string might be changed multiple times before the connection is opened.</span></span> <span data-ttu-id="b63f1-314">调用 <xref:System.Data.EntityClient.EntityConnection.Open%2A> 或 <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> 锁定元数据。</span><span class="sxs-lookup"><span data-stu-id="b63f1-314">Calling <xref:System.Data.EntityClient.EntityConnection.Open%2A> or <xref:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace%2A> locks the metadata.</span></span>  
  
-   <span data-ttu-id="b63f1-315"><xref:System.Data.EntityClient.EntityConnection> 实例通过 <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> 构造函数进行构造，此构造函数接受 <xref:System.Data.Metadata.Edm.MetadataWorkspace> 和 <xref:System.Data.Common.DbConnection>。</span><span class="sxs-lookup"><span data-stu-id="b63f1-315">The <xref:System.Data.EntityClient.EntityConnection> instance is constructed through the <xref:System.Data.EntityClient.EntityConnection.%23ctor%28System.Data.Metadata.Edm.MetadataWorkspace%2CSystem.Data.Common.DbConnection%29> constructor, which that accepts a <xref:System.Data.Metadata.Edm.MetadataWorkspace> and a <xref:System.Data.Common.DbConnection>.</span></span> <span data-ttu-id="b63f1-316">在这种情况下，元数据在构造时锁定。</span><span class="sxs-lookup"><span data-stu-id="b63f1-316">In this case the metadata is locked at construction time.</span></span> <span data-ttu-id="b63f1-317">不允许对连接字符串做出任何更改。</span><span class="sxs-lookup"><span data-stu-id="b63f1-317">No changes to the connection string are ever allowed.</span></span>  
  
 <span data-ttu-id="b63f1-318">加载元数据后，<xref:System.Data.EntityClient.EntityConnection> 验证概念性模型、存储模型和映射文件是否全部存在。</span><span class="sxs-lookup"><span data-stu-id="b63f1-318">When metadata is loaded, the <xref:System.Data.EntityClient.EntityConnection> verifies that the conceptual model, the storage model, and the mapping file are all present.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b63f1-319">打开连接时出错，或基础数据提供程序的名称未知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-319">An error occurs when you open the connection, or the name of the underlying data provider is not known.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.MetadataException">
          <span data-ttu-id="b63f1-320">内联连接字符串包含一个无效的 <see langword="Metadata" /> 关键字值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-320">The inline connection string contains an invalid <see langword="Metadata" /> keyword value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.EntityClient.EntityConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-321">获取一个字符串，该字符串包含客户端连接到的数据源的版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-321">Gets a string that contains the version of the data source to which the client is connected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b63f1-322">提供程序连接字符串中包含的数据源的版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-322">The version of the data source that is contained in the provider connection string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b63f1-323">连接已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-323">The connection is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.EntityClient.EntityConnection.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-324">如果 <see cref="T:System.Data.ConnectionState" /> 打开，则获取基础提供程序的 <see cref="T:System.Data.EntityClient.EntityConnection" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-324">Gets the <see cref="T:System.Data.ConnectionState" /> property of the underlying provider if the <see cref="T:System.Data.EntityClient.EntityConnection" /> is open.</span>
          </span>
          <span data-ttu-id="b63f1-325">否则返回 <see cref="F:System.Data.ConnectionState.Closed" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-325">Otherwise, returns <see cref="F:System.Data.ConnectionState.Closed" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b63f1-326">当且仅当 <see cref="F:System.Data.ConnectionState.Open" /> 的内部状态和基础提供程序的 <see cref="T:System.Data.EntityClient.EntityConnection" /> 处于打开状态时，返回 <see cref="T:System.Data.ConnectionState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-326">
              <see cref="F:System.Data.ConnectionState.Open" />, if and only if both the <see cref="T:System.Data.EntityClient.EntityConnection" />’s internal state and the underlying provider's <see cref="T:System.Data.ConnectionState" /> are open.</span>
          </span>
          <span data-ttu-id="b63f1-327">如果 <see cref="T:System.Data.EntityClient.EntityConnection" /> 处于打开状态，但提供程序的 <see cref="T:System.Data.ConnectionState" /> 处于关闭状态，则该属性返回 <see cref="F:System.Data.ConnectionState.Broken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-327">If the <see cref="T:System.Data.EntityClient.EntityConnection" />’s state is open but the provider's <see cref="T:System.Data.ConnectionState" /> is closed, this property returns <see cref="F:System.Data.ConnectionState.Broken" />.</span>
          </span>
          <span data-ttu-id="b63f1-328">否则，它将返回 <see cref="F:System.Data.ConnectionState.Closed" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-328">Otherwise, it returns <see cref="F:System.Data.ConnectionState.Closed" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreConnection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection StoreConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection StoreConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnection.StoreConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ StoreConnection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreConnection : System.Data.Common.DbConnection" Usage="System.Data.EntityClient.EntityConnection.StoreConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b63f1-329">提供对 <see cref="T:System.Data.EntityClient.EntityConnection" /> 对象使用的基础数据源连接的访问。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-329">Provides access to the underlying data source connection that is used by the <see cref="T:System.Data.EntityClient.EntityConnection" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b63f1-330">数据源连接的 <see cref="T:System.Data.Common.DbConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b63f1-330">The <see cref="T:System.Data.Common.DbConnection" /> for the data source connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b63f1-331">如果 <xref:System.Data.EntityClient.EntityConnection> 对象已关闭，则返回的数据源连接将关闭。</span><span class="sxs-lookup"><span data-stu-id="b63f1-331">If the <xref:System.Data.EntityClient.EntityConnection> object is closed, the returned data source connection will be closed.</span></span> <span data-ttu-id="b63f1-332">如果该对象已打开，则将返回打开的数据源连接。</span><span class="sxs-lookup"><span data-stu-id="b63f1-332">If it is open, an open data source connection will be returned.</span></span> <span data-ttu-id="b63f1-333">如果设置了数据源连接信息，则返回的值始终为非 null。</span><span class="sxs-lookup"><span data-stu-id="b63f1-333">If the data source connection information was set, the returned value is always non-null.</span></span> <span data-ttu-id="b63f1-334">如果不存在数据源连接信息（例如，如果使用默认的构造函数，并且之后没有设置连接字符串），则返回一个 null 引用。</span><span class="sxs-lookup"><span data-stu-id="b63f1-334">If there is no data source connection information (for example, if the default constructor was used and no connection string was set afterwards), then a null reference is returned.</span></span>  
  
 <span data-ttu-id="b63f1-335">Entity Framework                          </span><span class="sxs-lookup"><span data-stu-id="b63f1-335">The same data source connection used by the Entity Framework can be shared with other parts of an application.</span></span> <span data-ttu-id="b63f1-336">数据源连接以 <xref:System.Data.Common.DbConnection> 对象的形式从 <xref:System.Data.Objects.ObjectContext.Connection%2A> 的 <xref:System.Data.Objects.ObjectContext> 属性或从 <xref:System.Data.EntityClient.EntityConnection.StoreConnection%2A> 的 <xref:System.Data.EntityClient.EntityConnection> 属性返回。</span><span class="sxs-lookup"><span data-stu-id="b63f1-336">The data source connection is returned as a <xref:System.Data.Common.DbConnection> object from the <xref:System.Data.Objects.ObjectContext.Connection%2A> property of <xref:System.Data.Objects.ObjectContext>, or from the <xref:System.Data.EntityClient.EntityConnection.StoreConnection%2A> property of <xref:System.Data.EntityClient.EntityConnection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>