<Type Name="TypeFilter" FullName="System.Reflection.TypeFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6e64b3e877ca6b5056ec09d573d458ad354be11" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36542467" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate bool TypeFilter(Type m, object filterCriteria);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed TypeFilter extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.TypeFilter" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function TypeFilter(m As Type, filterCriteria As Object) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool TypeFilter(Type ^ m, System::Object ^ filterCriteria);" />
  <TypeSignature Language="F#" Value="type TypeFilter = delegate of Type * obj -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="m" Type="System.Type" />
    <Parameter Name="filterCriteria" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="m">对其应用筛选器的 <see langword="Type" /> 对象。</param>
    <param name="filterCriteria">用于筛选列表的任意对象。</param>
    <summary>筛选 <see cref="T:System.Type" /> 对象数组中表示的类。</summary>
    <returns>若要在筛选后的列表中包括 <see cref="T:System.Type" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `TypeFilter`委托用于筛选的类的列表。 具体而言，你使用该值来筛选的数组中表示的类<xref:System.Type>对象。 <xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType>方法使用此委托来筛选列表，它将返回的接口。 每个派生的类<xref:System.Delegate>和<xref:System.MulticastDelegate>具有构造函数和`DynamicInvoke`方法。 请参见 Visual c + + 代码示例中的描述给定`Delegate`。  
  
   
  
## Examples  
 此示例演示如何定义方法匹配<xref:System.Reflection.TypeFilter>委托原型并可使用反射来筛选或返回的匹配项的子集。  
  
 [!code-vb[Typefilter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeFilter/VB/Typefilter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" />
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Delegate" />
    <altmember cref="T:System.MulticastDelegate" />
  </Docs>
</Type>