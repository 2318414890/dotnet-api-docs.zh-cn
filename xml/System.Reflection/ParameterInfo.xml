<Type Name="ParameterInfo" FullName="System.Reflection.ParameterInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="86ca3b754399c792282cbf762bf32b6bca401225" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ParameterInfo : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._ParameterInfo, System.Runtime.Serialization.IObjectReference" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit ParameterInfo extends System.Object implements class System.Reflection.ICustomAttributeProvider, class System.Runtime.InteropServices._ParameterInfo, class System.Runtime.Serialization.IObjectReference" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ParameterInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ParameterInfo&#xA;Implements _ParameterInfo, ICustomAttributeProvider, IObjectReference" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParameterInfo : System::Reflection::ICustomAttributeProvider, System::Runtime::InteropServices::_ParameterInfo, System::Runtime::Serialization::IObjectReference" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.ICustomAttributeProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ParameterInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IObjectReference</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ParameterInfo))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="35ed2-101">Discovers the attributes of a parameter and provides access to parameter metadata.</span>
      <span class="sxs-lookup">
        <span data-stu-id="35ed2-101">Discovers the attributes of a parameter and provides access to parameter metadata.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-102">使用的实例`ParameterInfo`若要获取有关参数的数据类型的信息，默认值，依次类推。</span><span class="sxs-lookup"><span data-stu-id="35ed2-102">Use an instance of `ParameterInfo` to obtain information about the parameter's data type, default value, and so on.</span></span>  
  
 <span data-ttu-id="35ed2-103"><xref:System.Reflection.MethodBase.GetParameters%2A> 返回的数组`ParameterInfo`对象表示的方法，按顺序的参数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-103"><xref:System.Reflection.MethodBase.GetParameters%2A> returns an array of `ParameterInfo` objects representing the parameters of a method, in order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35ed2-104">此示例演示如何使用各种反射类来分析程序集中包含的元数据。</span><span class="sxs-lookup"><span data-stu-id="35ed2-104">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="35ed2-105">此类型是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="35ed2-105">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ParameterInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ParameterInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-106">Initializes a new instance of the <see langword="ParameterInfo" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-106">Initializes a new instance of the <see langword="ParameterInfo" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ParameterAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ParameterAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Attributes As ParameterAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ParameterAttributes Attributes { System::Reflection::ParameterAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-107">Gets the attributes for this parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-107">Gets the attributes for this parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-108">A<see langword="ParameterAttributes" />表示为此参数的属性的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-108">A <see langword="ParameterAttributes" /> object representing the attributes for this parameter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-109">此方法使用<xref:System.Reflection.ParameterInfo.AttrsImpl>方法。</span><span class="sxs-lookup"><span data-stu-id="35ed2-109">This method utilizes the <xref:System.Reflection.ParameterInfo.AttrsImpl> method.</span></span>  
  
 <span data-ttu-id="35ed2-110">若要获取<xref:System.Reflection.ParameterInfo>数组，请先获取该方法或构造函数，然后调用<xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-110">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35ed2-111">下面的示例定义具有三个参数的方法。</span><span class="sxs-lookup"><span data-stu-id="35ed2-111">The following example defines a method with three parameters.</span></span> <span data-ttu-id="35ed2-112">它使用<xref:System.Reflection.ParameterInfo.Attributes%2A>属性来获取第二个参数的特性的并在控制台中显示它们。</span><span class="sxs-lookup"><span data-stu-id="35ed2-112">It uses the <xref:System.Reflection.ParameterInfo.Attributes%2A> property to get the attributes of the second parameter and display them at the console.</span></span>  
  
 [!code-cpp[ParameterInfo_Attributes1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_Attributes1/CPP/parameterinfo_attributes1.cpp#1)]
 [!code-csharp[ParameterInfo_Attributes1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_Attributes1/CS/parameterinfo_attributes1.cs#1)]
 [!code-vb[ParameterInfo_Attributes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_Attributes1/VB/parameterinfo_attributes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ParameterAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AttrsImpl">
      <MemberSignature Language="C#" Value="protected System.Reflection.ParameterAttributes AttrsImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype System.Reflection.ParameterAttributes AttrsImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.AttrsImpl" />
      <MemberSignature Language="VB.NET" Value="Protected AttrsImpl As ParameterAttributes " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Reflection::ParameterAttributes AttrsImpl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-113">The attributes of the parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-113">The attributes of the parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-114">此字段仅用于派生的类的用户`ParameterInfo`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-114">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="35ed2-115">典型的参数属性的访问是通过<xref:System.Reflection.ParameterInfo.Attributes%2A>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-115">Typical access to parameter attributes is through <xref:System.Reflection.ParameterInfo.Attributes%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassImpl">
      <MemberSignature Language="C#" Value="protected Type ClassImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Type ClassImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.ClassImpl" />
      <MemberSignature Language="VB.NET" Value="Protected ClassImpl As Type " />
      <MemberSignature Language="C++ CLI" Value="protected: Type ^ ClassImpl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-116">The <see langword="Type" /> of the parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-116">The <see langword="Type" /> of the parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-117">此字段仅用于派生的类的用户`ParameterInfo`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-117">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="35ed2-118">对参数类型的典型访问是通过<xref:System.Reflection.ParameterInfo.ParameterType%2A>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-118">Typical access to parameter types is through <xref:System.Reflection.ParameterInfo.ParameterType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt; CustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.CustomAttributeData&gt; CustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.CustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CustomAttributes As IEnumerable(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ CustomAttributes { System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-119">Gets a collection that contains this parameter's custom attributes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-119">Gets a collection that contains this parameter's custom attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-120">包含此参数的自定义特性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-120">A collection that contains this parameter's custom attributes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public virtual object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DefaultValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-121">Gets a value indicating the default value if the parameter has a default value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-121">Gets a value indicating the default value if the parameter has a default value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-122">参数的默认值，或 <see cref="F:System.DBNull.Value" />（如果参数没有默认值）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-122">The default value of the parameter, or <see cref="F:System.DBNull.Value" /> if the parameter has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-123">仅在执行上下文中使用此属性。</span><span class="sxs-lookup"><span data-stu-id="35ed2-123">This property is used only in the execution context.</span></span> <span data-ttu-id="35ed2-124">在仅限反射上下文中，使用<xref:System.Reflection.ParameterInfo.RawDefaultValue%2A>属性改为。</span><span class="sxs-lookup"><span data-stu-id="35ed2-124">In the reflection-only context, use the <xref:System.Reflection.ParameterInfo.RawDefaultValue%2A> property instead.</span></span>  
  
 <span data-ttu-id="35ed2-125">在方法调用中不指定实际值时，使用默认值。</span><span class="sxs-lookup"><span data-stu-id="35ed2-125">The default value is used when an actual value is not specified in the method call.</span></span> <span data-ttu-id="35ed2-126">参数可以具有一个默认值，是`null`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-126">A parameter can have a default value that is `null`.</span></span> <span data-ttu-id="35ed2-127">这是不同于其中未定义默认值的情况。</span><span class="sxs-lookup"><span data-stu-id="35ed2-127">This is distinct from the case where a default value is not defined.</span></span>  
  
 <span data-ttu-id="35ed2-128">此方法使用<xref:System.Reflection.ParameterInfo.DefaultValueImpl>方法。</span><span class="sxs-lookup"><span data-stu-id="35ed2-128">This method utilizes the <xref:System.Reflection.ParameterInfo.DefaultValueImpl> method.</span></span>  
  
 <span data-ttu-id="35ed2-129">若要获取<xref:System.Reflection.ParameterInfo>数组，请先获取该方法或构造函数，然后调用<xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-129">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValueImpl">
      <MemberSignature Language="C#" Value="protected object DefaultValueImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family object DefaultValueImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.DefaultValueImpl" />
      <MemberSignature Language="VB.NET" Value="Protected DefaultValueImpl As Object " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Object ^ DefaultValueImpl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-130">The default value of the parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-130">The default value of the parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-131">此字段仅用于派生的类的用户`ParameterInfo`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-131">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="35ed2-132">参数的默认值为典型的访问是通过<xref:System.Reflection.ParameterInfo.DefaultValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-132">Typical access to the default value of the parameter is through <xref:System.Reflection.ParameterInfo.DefaultValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-133">Gets the custom attributes applied to this parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-133">Gets the custom attributes applied to this parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="35ed2-134">This argument is ignored for objects of this type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-134">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35ed2-135">Gets all the custom attributes defined on this parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-135">Gets all the custom attributes defined on this parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35ed2-136">An array that contains all the custom attributes applied to this parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-136">An array that contains all the custom attributes applied to this parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-137">此方法将忽略`inherit`参数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-137">This method ignores the `inherit` parameter.</span></span> <span data-ttu-id="35ed2-138">若要搜索的继承链中的参数属性，使用的适当重载<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="35ed2-138">To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35ed2-139">下面的示例演示如何自定义特性的已应用于方法的参数可以在运行时检索。</span><span class="sxs-lookup"><span data-stu-id="35ed2-139">The following example shows how custom attributes that have been applied to the parameters of methods can be retrieved at run time.</span></span> <span data-ttu-id="35ed2-140">该示例定义名为的自定义特性`MyAttribute`能应用于参数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-140">The example defines a custom attribute named `MyAttribute` that can be applied to parameters.</span></span> <span data-ttu-id="35ed2-141">该示例然后定义一个名为类`MyClass`与一个名为方法`MyMethod`，并将应用`MyAttribute`到方法的一个参数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-141">The example then defines a class named `MyClass` with a method named `MyMethod`, and applies `MyAttribute` to a parameter of the method.</span></span>  
  
 <span data-ttu-id="35ed2-142">当运行示例时，它使用<xref:System.Reflection.ParameterInfo.GetCustomAttributes%28System.Boolean%29>方法来检索已应用于的中的所有方法的所有参数的自定义属性`MyClass`，并将它们显示在控制台。</span><span class="sxs-lookup"><span data-stu-id="35ed2-142">When the example is run, it uses the <xref:System.Reflection.ParameterInfo.GetCustomAttributes%28System.Boolean%29> method to retrieve the custom attributes that have been applied to all parameters of all methods in `MyClass`, and displays them at the console.</span></span>  
  
 [!code-cpp[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/CPP/source.cpp#1)]
 [!code-csharp[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/CS/source.cs#1)]
 [!code-vb[ParameterInfo_GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_GetCustomAttributes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="35ed2-143">A custom attribute type could not be loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-143">A custom attribute type could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="35ed2-144">The custom attributes identified by type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-144">The custom attributes identified by type.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="35ed2-145">This argument is ignored for objects of this type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-145">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35ed2-146">Gets the custom attributes of the specified type or its derived types that are applied to this parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-146">Gets the custom attributes of the specified type or its derived types that are applied to this parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35ed2-147">An array that contains the custom attributes of the specified type or its derived types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-147">An array that contains the custom attributes of the specified type or its derived types.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-148">此方法将忽略`inherit`参数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-148">This method ignores the `inherit` parameter.</span></span> <span data-ttu-id="35ed2-149">若要搜索的继承链中的参数属性，使用的适当重载<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="35ed2-149">To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35ed2-150">The type must be a type provided by the underlying runtime system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-150">The type must be a type provided by the underlying runtime system.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35ed2-151">
            <paramref name="attributeType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-151">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="35ed2-152">A custom attribute type could not be loaded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-152">A custom attribute type could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-153">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects for the current parameter, which can be used in the reflection-only context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-153">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects for the current parameter, which can be used in the reflection-only context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35ed2-154">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-154">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-155">此方法用于检查要在其中加载到只反射上下文的代码中定义的自定义属性本身的情况下的仅限反射上下文中的代码的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="35ed2-155">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="35ed2-156">等方法<xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>和<xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A?displayProperty=nameWithType>不能在这种情况下，因为它们创建实例的属性。</span><span class="sxs-lookup"><span data-stu-id="35ed2-156">Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.ParameterInfo.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="35ed2-157">仅反射上下文中的代码不能执行。</span><span class="sxs-lookup"><span data-stu-id="35ed2-157">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="35ed2-158">有关详细信息和示例代码，请参阅<xref:System.Reflection.CustomAttributeData>类。</span><span class="sxs-lookup"><span data-stu-id="35ed2-158">For more information and example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOptionalCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetOptionalCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetOptionalCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetOptionalCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOptionalCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetOptionalCustomModifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-159">Gets the optional custom modifiers of the parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-159">Gets the optional custom modifiers of the parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35ed2-160">An array of <see cref="T:System.Type" /> objects that identify the optional custom modifiers of the current parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-160">An array of <see cref="T:System.Type" /> objects that identify the optional custom modifiers of the current parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-161"><xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A>和<xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A>托管编译器的设计器提供方法。</span><span class="sxs-lookup"><span data-stu-id="35ed2-161">The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="35ed2-162">有关自定义修饰符的详细信息，请参阅<xref:System.Runtime.CompilerServices.IsBoxed>和中的相关类<xref:System.Runtime.CompilerServices>命名空间，并在 ECMA 第 ii 部分文档中的元数据规范。</span><span class="sxs-lookup"><span data-stu-id="35ed2-162">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="35ed2-163">可联机获取该文档；请参阅 MSDN 上的 [ECMA C# 和公共语言基础结构标准](http://go.microsoft.com/fwlink/?LinkID=99212)和 Ecma International 网站上的[标准 ECMA-335 - 公共语言基础结构 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="35ed2-163">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRealObject">
      <MemberSignature Language="C#" Value="public object GetRealObject (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRealObject(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetRealObject(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRealObject (context As StreamingContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetRealObject(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="35ed2-164">The serialized stream from which the current object is deserialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-164">The serialized stream from which the current object is deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35ed2-165">Returns the real object that should be deserialized instead of the object that the serialized stream specifies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-165">Returns the real object that should be deserialized instead of the object that the serialized stream specifies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35ed2-166">The actual object that is put into the graph.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-166">The actual object that is put into the graph.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-167">此方法实现 <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="35ed2-167">This method implements the <xref:System.Runtime.Serialization.IObjectReference.GetRealObject%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <span data-ttu-id="35ed2-168">The parameter's position in the parameter list of its associated member is not valid for that member's type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-168">The parameter's position in the parameter list of its associated member is not valid for that member's type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="35ed2-169">需要完全信任直接调用方。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-169">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="35ed2-170">此成员不能由部分受信任或不透明的代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-170">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetRequiredCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetRequiredCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.GetRequiredCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequiredCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetRequiredCustomModifiers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-171">Gets the required custom modifiers of the parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-171">Gets the required custom modifiers of the parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35ed2-172">An array of <see cref="T:System.Type" /> objects that identify the required custom modifiers of the current parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-172">An array of <see cref="T:System.Type" /> objects that identify the required custom modifiers of the current parameter, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-173"><xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A>和<xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A>托管编译器的设计器提供方法。</span><span class="sxs-lookup"><span data-stu-id="35ed2-173">The <xref:System.Reflection.ParameterInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.ParameterInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="35ed2-174">有关自定义修饰符的详细信息，请参阅<xref:System.Runtime.CompilerServices.IsBoxed>和中的相关类<xref:System.Runtime.CompilerServices>命名空间，并在 ECMA 第 ii 部分文档中的元数据规范。</span><span class="sxs-lookup"><span data-stu-id="35ed2-174">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace, and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="35ed2-175">可联机获取该文档；请参阅 MSDN 上的 [ECMA C# 和公共语言基础结构标准](http://go.microsoft.com/fwlink/?LinkID=99212)和 Ecma International 网站上的[标准 ECMA-335 - 公共语言基础结构 (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552)。</span><span class="sxs-lookup"><span data-stu-id="35ed2-175">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDefaultValue">
      <MemberSignature Language="C#" Value="public virtual bool HasDefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.HasDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasDefaultValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasDefaultValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-176">Gets a value that indicates whether this parameter has a default value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-176">Gets a value that indicates whether this parameter has a default value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-177">
            <see langword="true" /> 如果此参数具有默认值;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-177">
              <see langword="true" /> if this parameter has a default value; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public virtual bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="35ed2-178">The <see langword="Type" /> object to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-178">The <see langword="Type" /> object to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="35ed2-179">This argument is ignored for objects of this type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-179">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35ed2-180">Determines whether the custom attribute of the specified type or its derived types is applied to this parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-180">Determines whether the custom attribute of the specified type or its derived types is applied to this parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35ed2-181">
            <see langword="true" /> if one or more instances of <paramref name="attributeType" /> or its derived types are applied to this parameter; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-181">
              <see langword="true" /> if one or more instances of <paramref name="attributeType" /> or its derived types are applied to this parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-182">此方法将忽略`inherit`参数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-182">This method ignores the `inherit` parameter.</span></span> <span data-ttu-id="35ed2-183">若要搜索的继承链中的参数属性，使用的适当重载<xref:System.Attribute.IsDefined%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="35ed2-183">To search the inheritance chain for attributes on parameters, use the appropriate overloads of the <xref:System.Attribute.IsDefined%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35ed2-184">下面的示例定义两个自定义属性、`MyAttribute`和`MyDerivedAttribute`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-184">The following example defines two custom attributes, `MyAttribute` and `MyDerivedAttribute`.</span></span> <span data-ttu-id="35ed2-185">`MyDerivedAttribute` 派生自 `MyAttribute`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-185">`MyDerivedAttribute` is derived from `MyAttribute`.</span></span> <span data-ttu-id="35ed2-186">然后，该示例将这些属性应用到的参数的示例类的方法。</span><span class="sxs-lookup"><span data-stu-id="35ed2-186">The example then applies these attributes to the parameters of a method of an example class.</span></span>  
  
 <span data-ttu-id="35ed2-187">当运行示例时，它使用<xref:System.Reflection.ParameterInfo.IsDefined%2A>方法来测试类示例中的所有方法的所有参数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-187">When the example is run, it uses the <xref:System.Reflection.ParameterInfo.IsDefined%2A> method to test all parameters of all methods in the example class.</span></span> <span data-ttu-id="35ed2-188">然后，它显示的参数具有`MyAttribute`或`MyDerivedAttribute`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-188">It then displays the parameters that have `MyAttribute` or `MyDerivedAttribute`.</span></span>  
  
 [!code-cpp[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/CPP/ParameterInfo_GetCustomAttribute_IsDefined.cpp#1)]
 [!code-csharp[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/CS/parameterinfo_getcustomattribute_isdefined.cs#1)]
 [!code-vb[ParameterInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_GetCustomAttribute_IsDefined/VB/parameterinfo_getcustomattribute_isdefined.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35ed2-189">
            <paramref name="attributeType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-189">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35ed2-190">
            <paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the common language runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-190">
              <paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the common language runtime.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsIn">
      <MemberSignature Language="C#" Value="public bool IsIn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIn" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsIn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIn { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-191">Gets a value indicating whether this is an input parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-191">Gets a value indicating whether this is an input parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-192">
            <see langword="true" /> 如果参数是输入的参数;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-192">
              <see langword="true" /> if the parameter is an input parameter; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-193">此方法依赖于可选元数据的标志。</span><span class="sxs-lookup"><span data-stu-id="35ed2-193">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="35ed2-194">可以由编译器，插入此标志，但编译器并非必须这样做。</span><span class="sxs-lookup"><span data-stu-id="35ed2-194">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="35ed2-195">此方法使用`In`标志的`ParameterAttributes`枚举器。</span><span class="sxs-lookup"><span data-stu-id="35ed2-195">This method utilizes the `In` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="35ed2-196">若要获取<xref:System.Reflection.ParameterInfo>数组，请先获取该方法或构造函数，然后调用<xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-196">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35ed2-197">下面的示例演示如何测试方法参数<xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>， <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>，和<xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="35ed2-197">The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> attributes.</span></span>  
  
 <span data-ttu-id="35ed2-198">此示例包含`DefineMethod`执行以下的方法：</span><span class="sxs-lookup"><span data-stu-id="35ed2-198">The example contains a `DefineMethod` method that does the following:</span></span>  
  
-   <span data-ttu-id="35ed2-199">创建动态程序集包含`MyType`类型。</span><span class="sxs-lookup"><span data-stu-id="35ed2-199">Creates a dynamic assembly containing a `MyType` type.</span></span>  
  
-   <span data-ttu-id="35ed2-200">将添加`MyMethod`方法`MyType`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-200">Adds a `MyMethod` method to `MyType`.</span></span> <span data-ttu-id="35ed2-201">`MyMethod` 具有三个参数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-201">`MyMethod` has three parameters.</span></span> <span data-ttu-id="35ed2-202">使用定义的第一个参数<xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>、 与第二个<xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>，和第三个<xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-202">The first parameter is defined with <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, the second with <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and the third with <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="35ed2-203">调用<xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType>以完成该类型。</span><span class="sxs-lookup"><span data-stu-id="35ed2-203">Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> to complete the type.</span></span>  
  
 <span data-ttu-id="35ed2-204">执行后`DefineMethod`，该示例将搜索直到找到动态程序集当前加载的程序集。</span><span class="sxs-lookup"><span data-stu-id="35ed2-204">After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly.</span></span> <span data-ttu-id="35ed2-205">它加载`MyType`从程序集，获取<xref:System.Reflection.MethodInfo>对象`MyMethod`方法，并检查参数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-205">It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters.</span></span> <span data-ttu-id="35ed2-206">该示例使用<xref:System.Reflection.ParameterInfo.IsIn%2A>， <xref:System.Reflection.ParameterInfo.IsOut%2A>，和<xref:System.Reflection.ParameterInfo.IsOptional%2A>要显示的参数信息的属性。</span><span class="sxs-lookup"><span data-stu-id="35ed2-206">The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.</span></span>  
  
 [!code-cpp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CPP/ParameterInfo_IsIn_IsOut_IsOptional.cpp#1)]
 [!code-csharp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CS/parameterinfo_isin_isout_isoptional.cs#1)]
 [!code-vb[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/VB/parameterinfo_isin_isout_isoptional.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLcid">
      <MemberSignature Language="C#" Value="public bool IsLcid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLcid" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsLcid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLcid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLcid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-207">Gets a value indicating whether this parameter is a locale identifier (lcid).</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-207">Gets a value indicating whether this parameter is a locale identifier (lcid).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-208">
            <see langword="true" /> 如果参数是区域设置标识符;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-208">
              <see langword="true" /> if the parameter is a locale identifier; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-209">此方法依赖于可选元数据的标志。</span><span class="sxs-lookup"><span data-stu-id="35ed2-209">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="35ed2-210">可以由编译器，插入此标志，但编译器并非必须这样做。</span><span class="sxs-lookup"><span data-stu-id="35ed2-210">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="35ed2-211">此方法使用`Lcid`标志的`ParameterAttributes`枚举器。</span><span class="sxs-lookup"><span data-stu-id="35ed2-211">This method utilizes the `Lcid` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="35ed2-212">若要获取<xref:System.Reflection.ParameterInfo>数组，请先获取该方法或构造函数，然后调用<xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-212">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptional">
      <MemberSignature Language="C#" Value="public bool IsOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOptional" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsOptional" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOptional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOptional { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-213">Gets a value indicating whether this parameter is optional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-213">Gets a value indicating whether this parameter is optional.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-214">
            <see langword="true" /> 如果参数是可选的;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-214">
              <see langword="true" /> if the parameter is optional; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-215">此方法依赖于可选元数据的标志。</span><span class="sxs-lookup"><span data-stu-id="35ed2-215">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="35ed2-216">可以由编译器，插入此标志，但编译器并非必须这样做。</span><span class="sxs-lookup"><span data-stu-id="35ed2-216">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="35ed2-217">此方法使用`Optional`标志的`ParameterAttributes`枚举器。</span><span class="sxs-lookup"><span data-stu-id="35ed2-217">This method utilizes the `Optional` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="35ed2-218">若要获取<xref:System.Reflection.ParameterInfo>数组，请首先获取该方法，然后调用<xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-218">To get the <xref:System.Reflection.ParameterInfo> array, first get the method and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35ed2-219">下面的示例演示如何测试方法参数<xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>， <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>，和<xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="35ed2-219">The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> attributes.</span></span>  
  
 <span data-ttu-id="35ed2-220">此示例包含`DefineMethod`执行以下的方法：</span><span class="sxs-lookup"><span data-stu-id="35ed2-220">The example contains a `DefineMethod` method that does the following:</span></span>  
  
-   <span data-ttu-id="35ed2-221">创建动态程序集包含`MyType`类型。</span><span class="sxs-lookup"><span data-stu-id="35ed2-221">Creates a dynamic assembly containing a `MyType` type.</span></span>  
  
-   <span data-ttu-id="35ed2-222">将添加`MyMethod`方法`MyType`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-222">Adds a `MyMethod` method to `MyType`.</span></span> <span data-ttu-id="35ed2-223">`MyMethod` 具有三个参数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-223">`MyMethod` has three parameters.</span></span> <span data-ttu-id="35ed2-224">使用定义的第一个参数<xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>、 与第二个<xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>，和第三个<xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-224">The first parameter is defined with <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, the second with <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and the third with <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="35ed2-225">调用<xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType>以完成该类型。</span><span class="sxs-lookup"><span data-stu-id="35ed2-225">Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> to complete the type.</span></span>  
  
 <span data-ttu-id="35ed2-226">执行后`DefineMethod`，该示例将搜索直到找到动态程序集当前加载的程序集。</span><span class="sxs-lookup"><span data-stu-id="35ed2-226">After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly.</span></span> <span data-ttu-id="35ed2-227">它加载`MyType`从程序集，获取<xref:System.Reflection.MethodInfo>对象`MyMethod`方法，并检查参数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-227">It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters.</span></span> <span data-ttu-id="35ed2-228">该示例使用<xref:System.Reflection.ParameterInfo.IsIn%2A>， <xref:System.Reflection.ParameterInfo.IsOut%2A>，和<xref:System.Reflection.ParameterInfo.IsOptional%2A>要显示的参数信息的属性。</span><span class="sxs-lookup"><span data-stu-id="35ed2-228">The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.</span></span>  
  
 [!code-cpp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/cpp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CPP/ParameterInfo_IsIn_IsOut_IsOptional.cpp#1)]
 [!code-csharp[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/csharp/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/CS/parameterinfo_isin_isout_isoptional.cs#1)]
 [!code-vb[ParameterInfo_IsIn_IsOut_IsOptional#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParameterInfo_IsIn_IsOut_IsOptional/VB/parameterinfo_isin_isout_isoptional.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOut">
      <MemberSignature Language="C#" Value="public bool IsOut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOut" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsOut" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOut { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-229">Gets a value indicating whether this is an output parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-229">Gets a value indicating whether this is an output parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-230">
            <see langword="true" /> 如果参数是输出参数，则否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-230">
              <see langword="true" /> if the parameter is an output parameter; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-231">此方法依赖于可选元数据的标志。</span><span class="sxs-lookup"><span data-stu-id="35ed2-231">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="35ed2-232">可以由编译器，插入此标志，但编译器并非必须这样做。</span><span class="sxs-lookup"><span data-stu-id="35ed2-232">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="35ed2-233">此方法使用`Out`标志的`ParameterAttributes`枚举器。</span><span class="sxs-lookup"><span data-stu-id="35ed2-233">This method utilizes the `Out` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="35ed2-234">若要获取<xref:System.Reflection.ParameterInfo>数组，请先获取该方法或构造函数，然后调用<xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-234">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35ed2-235">下面的示例演示如何测试方法参数<xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>， <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>，和<xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="35ed2-235">The following example shows how to test method parameters for the <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType> attributes.</span></span>  
  
 <span data-ttu-id="35ed2-236">此示例包含`DefineMethod`执行以下的方法：</span><span class="sxs-lookup"><span data-stu-id="35ed2-236">The example contains a `DefineMethod` method that does the following:</span></span>  
  
-   <span data-ttu-id="35ed2-237">创建动态程序集包含`MyType`类型。</span><span class="sxs-lookup"><span data-stu-id="35ed2-237">Creates a dynamic assembly containing a `MyType` type.</span></span>  
  
-   <span data-ttu-id="35ed2-238">将添加`MyMethod`方法`MyType`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-238">Adds a `MyMethod` method to `MyType`.</span></span> <span data-ttu-id="35ed2-239">`MyMethod` 具有三个参数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-239">`MyMethod` has three parameters.</span></span> <span data-ttu-id="35ed2-240">使用定义的第一个参数<xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>、 与第二个<xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>，和第三个<xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-240">The first parameter is defined with <xref:System.Reflection.ParameterAttributes.In?displayProperty=nameWithType>, the second with <xref:System.Reflection.ParameterAttributes.Out?displayProperty=nameWithType>, and the third with <xref:System.Reflection.ParameterAttributes.Optional?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="35ed2-241">调用<xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType>以完成该类型。</span><span class="sxs-lookup"><span data-stu-id="35ed2-241">Calls <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> to complete the type.</span></span>  
  
 <span data-ttu-id="35ed2-242">执行后`DefineMethod`，该示例将搜索直到找到动态程序集当前加载的程序集。</span><span class="sxs-lookup"><span data-stu-id="35ed2-242">After executing `DefineMethod`, the example searches the assemblies that are currently loaded until it finds the dynamic assembly.</span></span> <span data-ttu-id="35ed2-243">它加载`MyType`从程序集，获取<xref:System.Reflection.MethodInfo>对象`MyMethod`方法，并检查参数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-243">It loads `MyType` from the assembly, gets a <xref:System.Reflection.MethodInfo> object for the `MyMethod` method, and examines the parameters.</span></span> <span data-ttu-id="35ed2-244">该示例使用<xref:System.Reflection.ParameterInfo.IsIn%2A>， <xref:System.Reflection.ParameterInfo.IsOut%2A>，和<xref:System.Reflection.ParameterInfo.IsOptional%2A>要显示的参数信息的属性。</span><span class="sxs-lookup"><span data-stu-id="35ed2-244">The example uses the <xref:System.Reflection.ParameterInfo.IsIn%2A>, <xref:System.Reflection.ParameterInfo.IsOut%2A>, and <xref:System.Reflection.ParameterInfo.IsOptional%2A> properties to display information about the parameters.</span></span>  
  
 [!code-cpp[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/CS/source.cs#1)]
 [!code-vb[Classic ParameterInfo.IsOut Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.IsOut Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRetval">
      <MemberSignature Language="C#" Value="public bool IsRetval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRetval" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.IsRetval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRetval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRetval { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-245">Gets a value indicating whether this is a <see langword="Retval" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-245">Gets a value indicating whether this is a <see langword="Retval" /> parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-246">
            <see langword="true" /> 如果参数是<see langword="Retval" />; 否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-246">
              <see langword="true" /> if the parameter is a <see langword="Retval" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-247">此方法依赖于可选元数据的标志。</span><span class="sxs-lookup"><span data-stu-id="35ed2-247">This method depends on an optional metadata flag.</span></span> <span data-ttu-id="35ed2-248">可以由编译器，插入此标志，但编译器并非必须这样做。</span><span class="sxs-lookup"><span data-stu-id="35ed2-248">This flag can be inserted by compilers, but the compilers are not obligated to do so.</span></span>  
  
 <span data-ttu-id="35ed2-249">此方法使用`Retval`标志的`ParameterAttributes`枚举器。</span><span class="sxs-lookup"><span data-stu-id="35ed2-249">This method utilizes the `Retval` flag of the `ParameterAttributes` enumerator.</span></span>  
  
 <span data-ttu-id="35ed2-250">若要获取<xref:System.Reflection.ParameterInfo>数组，请先获取该方法或构造函数，然后调用<xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-250">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.Member" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-251">Gets a value indicating the member in which the parameter is implemented.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-251">Gets a value indicating the member in which the parameter is implemented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-252">植入这表示的参数的成员<see cref="T:System.Reflection.ParameterInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-252">The member which implanted the parameter represented by this <see cref="T:System.Reflection.ParameterInfo" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberImpl">
      <MemberSignature Language="C#" Value="protected System.Reflection.MemberInfo MemberImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Reflection.MemberInfo MemberImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.MemberImpl" />
      <MemberSignature Language="VB.NET" Value="Protected MemberImpl As MemberInfo " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Reflection::MemberInfo ^ MemberImpl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-253">The member in which the field is implemented.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-253">The member in which the field is implemented.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-254">此字段仅用于派生的类的用户`ParameterInfo`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-254">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="35ed2-255">为参数名称的典型访问都通过<xref:System.Reflection.ParameterInfo.Member%2A>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-255">Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Member%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataToken">
      <MemberSignature Language="C#" Value="public virtual int MetadataToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.MetadataToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MetadataToken As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MetadataToken { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-256">Gets a value that identifies this parameter in metadata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-256">Gets a value that identifies this parameter in metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-257">一个值，该值与该模块，结合使用唯一标识此元数据中的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-257">A value which, in combination with the module, uniquely identifies this parameter in metadata.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-258">若要获得该模块，使用<xref:System.Reflection.MemberInfo.Module%2A>定义此参数的成员的属性。</span><span class="sxs-lookup"><span data-stu-id="35ed2-258">To get the module, use the <xref:System.Reflection.MemberInfo.Module%2A> property of the member that defines this parameter.</span></span>  
  
 <span data-ttu-id="35ed2-259">使用此属性获取的令牌可以传递到非托管的反射 API。</span><span class="sxs-lookup"><span data-stu-id="35ed2-259">The tokens obtained using this property can be passed to the unmanaged Reflection API.</span></span> <span data-ttu-id="35ed2-260">有关详细信息，请参阅[非托管的反射 API](http://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8)。</span><span class="sxs-lookup"><span data-stu-id="35ed2-260">For more information, please see [Unmanaged Reflection API](http://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-261">Gets the name of the parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-261">Gets the name of the parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-262">此参数的简单名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-262">The simple name of this parameter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-263">此属性使用受保护<xref:System.Reflection.ParameterInfo.NameImpl>字段，并依赖于可选元数据的标志可能不在所有的编译器中可用。</span><span class="sxs-lookup"><span data-stu-id="35ed2-263">This property utilizes the protected <xref:System.Reflection.ParameterInfo.NameImpl> field, and depends on an optional metadata flag that might not be available in all compilers.</span></span>  
  
 <span data-ttu-id="35ed2-264">若要获取<xref:System.Reflection.ParameterInfo>数组，请先获取该方法或构造函数，然后调用<xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="35ed2-264">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="35ed2-265">如果此<xref:System.Reflection.ParameterInfo>表示返回的值 (即，如果已通过获取<xref:System.Reflection.MethodInfo.ReturnParameter%2A?displayProperty=nameWithType>属性)，此属性将为`null`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-265">If this <xref:System.Reflection.ParameterInfo> represents a return value (that is, if it was obtained by using the <xref:System.Reflection.MethodInfo.ReturnParameter%2A?displayProperty=nameWithType> property), this property will be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35ed2-266">下面的示例演示如何获取<xref:System.Reflection.ParameterInfo>对象的参数的方法，，然后使用<xref:System.Reflection.ParameterInfo.Name%2A>属性来获取参数名称。</span><span class="sxs-lookup"><span data-stu-id="35ed2-266">The following example shows how to get <xref:System.Reflection.ParameterInfo> objects for the parameters of a method, and then use the <xref:System.Reflection.ParameterInfo.Name%2A> property to obtain the parameter names.</span></span>  
  
 [!code-cpp[Classic ParameterInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ParameterInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic ParameterInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameImpl">
      <MemberSignature Language="C#" Value="protected string NameImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family string NameImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.NameImpl" />
      <MemberSignature Language="VB.NET" Value="Protected NameImpl As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ NameImpl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-267">The name of the parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-267">The name of the parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-268">此字段仅用于派生的类的用户`ParameterInfo`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-268">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="35ed2-269">为参数名称的典型访问都通过<xref:System.Reflection.ParameterInfo.Name%2A>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-269">Typical access to the parameter name is through the <xref:System.Reflection.ParameterInfo.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public virtual Type ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParameterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ParameterType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-270">Gets the <see langword="Type" /> of this parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-270">Gets the <see langword="Type" /> of this parameter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-271">
            <see langword="Type" />对象，表示<see langword="Type" />此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-271">The <see langword="Type" /> object that represents the <see langword="Type" /> of this parameter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-272">此方法依赖于可选元数据，并且不可能在所有的编译器中可用。</span><span class="sxs-lookup"><span data-stu-id="35ed2-272">This method depends on an optional metadata and might not be available in all compilers.</span></span>  
  
 <span data-ttu-id="35ed2-273">若要获取<xref:System.Reflection.ParameterInfo>数组，请先获取该方法或构造函数，然后调用<xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-273">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35ed2-274">下面的示例演示如何获取<xref:System.Reflection.ParameterInfo>对象的参数的方法，，然后使用<xref:System.Reflection.ParameterInfo.ParameterType%2A>属性来显示每个参数的类型。</span><span class="sxs-lookup"><span data-stu-id="35ed2-274">The following example shows how to get <xref:System.Reflection.ParameterInfo> objects for the parameters of a method, and then use the <xref:System.Reflection.ParameterInfo.ParameterType%2A> property to display the type of each parameter.</span></span>  
  
 [!code-cpp[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/CS/source.cs#1)]
 [!code-vb[Classic ParameterInfo.ParameterType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ParameterInfo.ParameterType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public virtual int Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Position { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-275">Gets the zero-based position of the parameter in the formal parameter list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-275">Gets the zero-based position of the parameter in the formal parameter list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-276">此参数在参数列表中所占表示位置的整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-276">An integer representing the position this parameter occupies in the parameter list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-277">仅将方法签名中的参数 (即，形式参数列表中) 被视为计算位置时。</span><span class="sxs-lookup"><span data-stu-id="35ed2-277">Only parameters in the method signature (that is, in the formal parameter list) are considered when calculating the position.</span></span> <span data-ttu-id="35ed2-278">例如，方法、 表示的隐藏的参数`this`(`Me`在 Visual Basic 中) 不会进行计数。</span><span class="sxs-lookup"><span data-stu-id="35ed2-278">For instance methods, the hidden parameter that represents `this` (`Me` in Visual Basic) is not counted.</span></span>  
  
 <span data-ttu-id="35ed2-279">此方法使用<xref:System.Reflection.ParameterInfo.PositionImpl>方法。</span><span class="sxs-lookup"><span data-stu-id="35ed2-279">This method utilizes the <xref:System.Reflection.ParameterInfo.PositionImpl> method.</span></span>  
  
 <span data-ttu-id="35ed2-280">若要获取<xref:System.Reflection.ParameterInfo>数组，请先获取该方法或构造函数，然后调用<xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-280">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.ParameterInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="PositionImpl">
      <MemberSignature Language="C#" Value="protected int PositionImpl;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 PositionImpl" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.ParameterInfo.PositionImpl" />
      <MemberSignature Language="VB.NET" Value="Protected PositionImpl As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int PositionImpl;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-281">The zero-based position of the parameter in the parameter list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-281">The zero-based position of the parameter in the parameter list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-282">此字段仅用于派生的类的用户`ParameterInfo`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-282">This field is intended only for users who are deriving classes from `ParameterInfo`.</span></span>  
  
 <span data-ttu-id="35ed2-283">对参数的名称的典型访问是通过<xref:System.Reflection.ParameterInfo.Position%2A>。</span><span class="sxs-lookup"><span data-stu-id="35ed2-283">Typical access to the name of the parameter is through <xref:System.Reflection.ParameterInfo.Position%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawDefaultValue">
      <MemberSignature Language="C#" Value="public virtual object RawDefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RawDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ParameterInfo.RawDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RawDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ RawDefaultValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-284">Gets a value indicating the default value if the parameter has a default value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-284">Gets a value indicating the default value if the parameter has a default value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35ed2-285">参数的默认值，或 <see cref="F:System.DBNull.Value" />（如果参数没有默认值）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-285">The default value of the parameter, or <see cref="F:System.DBNull.Value" /> if the parameter has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-286">执行上下文和仅限反射上下文中，可以使用此属性。</span><span class="sxs-lookup"><span data-stu-id="35ed2-286">This property can be used in both the execution context and the reflection-only context.</span></span>  
  
 <span data-ttu-id="35ed2-287">在方法调用中不指定实际值时，使用默认值。</span><span class="sxs-lookup"><span data-stu-id="35ed2-287">The default value is used when an actual value is not specified in the method call.</span></span> <span data-ttu-id="35ed2-288">参数可以具有一个默认值，是`null`。</span><span class="sxs-lookup"><span data-stu-id="35ed2-288">A parameter can have a default value that is `null`.</span></span> <span data-ttu-id="35ed2-289">这是不同于其中未定义默认值的情况。</span><span class="sxs-lookup"><span data-stu-id="35ed2-289">This is distinct from the case where a default value is not defined.</span></span>  
  
 <span data-ttu-id="35ed2-290">若要获取<xref:System.Reflection.ParameterInfo>数组，请先获取该方法或构造函数，然后调用<xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="35ed2-290">To get the <xref:System.Reflection.ParameterInfo> array, first get the method or the constructor and then call the <xref:System.Reflection.MethodBase.GetParameters%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.IsDefined">
      <MemberSignature Language="C#" Value="bool ICustomAttributeProvider.IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Reflection.ICustomAttributeProvider.IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean Implements ICustomAttributeProvider.IsDefined" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Reflection.ICustomAttributeProvider.IsDefined(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::IsDefined;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ParameterInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ParameterInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ParameterInfo::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="35ed2-291">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-291">Reserved for future use.</span>
          </span>
          <span data-ttu-id="35ed2-292">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-292">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="35ed2-293">Passed-in array of names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-293">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="35ed2-294">Count of the names to be mapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-294">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="35ed2-295">The locale context in which to interpret the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-295">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="35ed2-296">Caller-allocated array which receives the IDs corresponding to the names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-296">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35ed2-297">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-297">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-298">此方法用于访问托管类从非托管代码，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="35ed2-298">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="35ed2-299">有关详细信息`IDispatch::GetIDsOfNames`，请参阅 MSDN 库。</span><span class="sxs-lookup"><span data-stu-id="35ed2-299">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="35ed2-300">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-300">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ParameterInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ParameterInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ParameterInfo::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="35ed2-301">The type information to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-301">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="35ed2-302">The locale identifier for the type information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-302">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="35ed2-303">Receives a pointer to the requested type information object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-303">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35ed2-304">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-304">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-305">此方法用于访问托管类从非托管代码，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="35ed2-305">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="35ed2-306">有关详细信息`IDispatch::GetTypeInfo`，请参阅 MSDN 库。</span><span class="sxs-lookup"><span data-stu-id="35ed2-306">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="35ed2-307">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-307">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ParameterInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ParameterInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ParameterInfo::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterInfo.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="35ed2-308">Points to a location that receives the number of type information interfaces provided by the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-308">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35ed2-309">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-309">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-310">此方法用于访问托管类从非托管代码，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="35ed2-310">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="35ed2-311">有关详细信息`IDispatch::GetTypeInfoCount`，请参阅 MSDN 库。</span><span class="sxs-lookup"><span data-stu-id="35ed2-311">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="35ed2-312">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-312">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ParameterInfo.Invoke">
      <MemberSignature Language="C#" Value="void _ParameterInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ParameterInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.System#Runtime#InteropServices#_ParameterInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ParameterInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ParameterInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ParameterInfo::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ParameterInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="35ed2-313">Identifies the member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-313">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="35ed2-314">Reserved for future use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-314">Reserved for future use.</span>
          </span>
          <span data-ttu-id="35ed2-315">Must be IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-315">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="35ed2-316">The locale context in which to interpret arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-316">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="35ed2-317">Flags describing the context of the call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-317">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="35ed2-318">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-318">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="35ed2-319">Pointer to the location where the result is to be stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-319">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="35ed2-320">Pointer to a structure that contains exception information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-320">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="35ed2-321">The index of the first argument that has an error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-321">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35ed2-322">Provides access to properties and methods exposed by an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-322">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35ed2-323">此方法用于访问托管类从非托管代码，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="35ed2-323">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="35ed2-324">有关详细信息`IDispatch::Invoke`，请参阅 MSDN 库。</span><span class="sxs-lookup"><span data-stu-id="35ed2-324">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="35ed2-325">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-325">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ParameterInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35ed2-326">Gets the parameter type and name represented as a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-326">Gets the parameter type and name represented as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35ed2-327">A string containing the type and the name of the parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35ed2-327">A string containing the type and the name of the parameter.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>