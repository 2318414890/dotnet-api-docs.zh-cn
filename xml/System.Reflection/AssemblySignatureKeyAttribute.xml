<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AssemblySignatureKeyAttribute.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5492f05f4ac23cc4c0812e59f78830d0583ca6743.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">492f05f4ac23cc4c0812e59f78830d0583ca6743</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>Provides migration from an older, simpler strong name key to a larger key with a stronger hashing algorithm.</source>
          <target state="translated">提供从更早、更简单的名称键值到更大、散列值算法更安全的键值的迁移。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>The new larger key is the signature key.</source>
          <target state="translated">新更大的密钥是签名密钥。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>In versions before the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the signature key was identical to the identity key.</source>
          <target state="translated">在之前的版本<ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，签名密钥已标识键相同。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Reflection.AssemblySignatureKeyAttribute&gt;</ph> attribute allows the assembly metadata to continue to have the old public key token and binary large object (BLOB) so that existing assembly references continue to work.</source>
          <target state="translated">从开始<ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>、<ph id="ph2">&lt;xref:System.Reflection.AssemblySignatureKeyAttribute&gt;</ph>属性允许继续具有旧公钥标记和二进制大型对象 (BLOB)，以便继续使用现有的程序集引用的程序集元数据。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>It also ensures that the mapping comes from an owner of the identity key.</source>
          <target state="translated">它还确保映射来自标识密钥的所有者。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>The presence of the attribute does not necessarily mean that strong name validation takes place.</source>
          <target state="translated">特性存在并不一定意味着强名称验证发生。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>In common full-trust scenarios, the attribute is never considered, because strong name signatures are never validated.</source>
          <target state="translated">共同点的完全信任，该属性是永远不会考虑方案，因为永远不会验证强名称签名。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>However, when the strong name signature does have to be validated, both the strong name signature and the countersignature must be validated.</source>
          <target state="translated">但是，当具有强名称签名进行验证，强名称签名和副署必须来验证。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>The assembly’s identity key does not have to be identical to the signature key (the key used to do the actual signing and validation).</source>
          <target state="translated">程序集的标识键没有为签名密钥 （用来执行实际的签名密钥和验证） 与相同。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>The identity key can be mapped to a different (more robust) signing key.</source>
          <target state="translated">标识密钥可以映射到不同的 （更可靠） 签名密钥。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>This lets you set the identity of an assembly, and update the signing keys and algorithms to more secure versions.</source>
          <target state="translated">这样，你设置的程序集的标识，并更新到更多安全版本的签名密钥和算法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>The countersignature addresses security concerns when a malicious assembly claims some other identity.</source>
          <target state="translated">副署地址时的安全问题的恶意程序集声明某些其他标识。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>For example, a malicious System.Core.dll assembly could contain the Microsoft public key in its metadata, and use the attribute to tell strong name validation to use the attacker’s signature key if no countersignature is present.</source>
          <target state="translated">例如，恶意的 System.Core.dll 程序集无法包含在其元数据中的 Microsoft 公钥并使用属性告知使用攻击者的签名密钥，如果存在则没有副署的强名称验证。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>Thus, it could masquerade as a strong name-validated Microsoft assembly.</source>
          <target state="translated">因此，它可能会伪装成强名称验证 Microsoft 程序集。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AssemblySignatureKeyAttribute">
          <source>For information about how to sign assemblies for use with this new attribute, see <bpt id="p1">[</bpt>Enhanced Strong Naming<ept id="p1">](~/docs/framework/app-domains/enhanced-strong-naming.md)</ept>.</source>
          <target state="translated">有关如何使用这一新特性的程序集签名的信息，请参阅<bpt id="p1">[</bpt>增强的强命名<ept id="p1">](~/docs/framework/app-domains/enhanced-strong-naming.md)</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblySignatureKeyAttribute.#ctor(System.String,System.String)">
          <source>The public or identity key.</source>
          <target state="translated">公开或标识密钥。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblySignatureKeyAttribute.#ctor(System.String,System.String)">
          <source>The countersignature, which is the signature key portion of the strong-name key.</source>
          <target state="translated">强名称密钥的签名密钥的副署。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblySignatureKeyAttribute.#ctor(System.String,System.String)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblySignatureKeyAttribute" /&gt;</ph> class by using the specified public key and countersignature.</source>
          <target state="translated">使用指定的公钥和副署创建 <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblySignatureKeyAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblySignatureKeyAttribute.#ctor(System.String,System.String)">
          <source>Use Sn.exe to generate the parameters for this constructor.</source>
          <target state="translated">使用 Sn.exe 生成此构造函数的参数。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Reflection.AssemblySignatureKeyAttribute.Countersignature">
          <source>Gets the countersignature for the strong name for this assembly.</source>
          <target state="translated">获取此程序集强名称的副署。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblySignatureKeyAttribute.Countersignature">
          <source>The countersignature for this signature key.</source>
          <target state="translated">此签名密钥的副署。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblySignatureKeyAttribute.Countersignature">
          <source>The countersignature represents the public key that is signed by the identity key.</source>
          <target state="translated">副署表示由标识密钥签名的公钥。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Reflection.AssemblySignatureKeyAttribute.PublicKey">
          <source>Gets the public key for the strong name used to sign the assembly.</source>
          <target state="translated">获取用于签名程序集的强名称的公钥。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.AssemblySignatureKeyAttribute.PublicKey">
          <source>The public key for this assembly.</source>
          <target state="translated">此程序集的公钥。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>