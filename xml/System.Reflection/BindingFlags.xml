<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingFlags.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac589084f16161d1fd3b1457d1121781a4306af5292.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89084f16161d1fd3b1457d1121781a4306af5292</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.BindingFlags">
          <source>Specifies flags that control binding and the way in which the search for members and types is conducted by reflection.</source>
          <target state="translated">指定控制绑定以及通过反射执行成员和类型搜索的方式的标记。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>These <ph id="ph1">`BindingFlags`</ph> control binding for a great many classes in the <ph id="ph2">`System`</ph>, <ph id="ph3">`System.Reflection`</ph>, and <ph id="ph4">`System.Runtime`</ph> namespaces that invoke, create, get, set, and find members and types.</source>
          <target state="translated">这些<ph id="ph1">`BindingFlags`</ph>控制出色的绑定中的许多类<ph id="ph2">`System`</ph>， <ph id="ph3">`System.Reflection`</ph>，和<ph id="ph4">`System.Runtime`</ph>调用、 创建、 获取、 设置，和查找成员和类型的命名空间。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`BindingFlags`</ph> are used in the following <ph id="ph2">&lt;xref:System.Type&gt;</ph> methods and other places such as <ph id="ph3">&lt;xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=nameWithType&gt;</ph> :</source>
          <target state="translated"><ph id="ph1">`BindingFlags`</ph> 在下面的示例使用<ph id="ph2">&lt;xref:System.Type&gt;</ph>方法和其他地方，如<ph id="ph3">&lt;xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=nameWithType&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`InvokeMember`</ph> and <ph id="ph2">`GetMethod`</ph> are especially important.</source>
          <target state="translated"><ph id="ph1">`InvokeMember`</ph> 和<ph id="ph2">`GetMethod`</ph>尤为重要。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>The binding flags can be categorized by how they identify a type member, as listed in the following table.</source>
          <target state="translated">可以通过它们如何标识类型成员，归类的绑定标志，为下表中列出。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Identified by Accessibility</source>
          <target state="translated">标识供具有辅助功能</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Identified by Binding Argument</source>
          <target state="translated">由自变量绑定</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Identified by Operation</source>
          <target state="translated">由操作</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>DeclaredOnly</source>
          <target state="translated">DeclaredOnly</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>FlattenHierarchy</source>
          <target state="translated">FlattenHierarchy</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>IgnoreCase</source>
          <target state="translated">IgnoreCase</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>IgnoreReturn</source>
          <target state="translated">IgnoreReturn</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Instance</source>
          <target state="translated">实例</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>NonPublic</source>
          <target state="translated">NonPublic</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Public</source>
          <target state="translated">Public</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Static</source>
          <target state="translated">Static</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>ExactBinding</source>
          <target state="translated">ExactBinding</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>OptionalParamBinding</source>
          <target state="translated">OptionalParamBinding</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>CreateInstance</source>
          <target state="translated">CreateInstance</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>GetField</source>
          <target state="translated">GetField</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>SetField</source>
          <target state="translated">SetField</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>GetProperty</source>
          <target state="translated">GetProperty</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>SetProperty</source>
          <target state="translated">SetProperty</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>InvokeMethod</source>
          <target state="translated">InvokeMethod</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>PutDispProperty</source>
          <target state="translated">PutDispProperty</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>PutRefDispProperty</source>
          <target state="translated">PutRefDispProperty</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>You must specify <ph id="ph1">`Instance`</ph> or <ph id="ph2">`Static`</ph> along with <ph id="ph3">`Public`</ph> or <ph id="ph4">`NonPublic`</ph> or no members will be returned.</source>
          <target state="translated">必须指定<ph id="ph1">`Instance`</ph>或<ph id="ph2">`Static`</ph>连同<ph id="ph3">`Public`</ph>或<ph id="ph4">`NonPublic`</ph>或将返回没有成员。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>The following table lists the coercions performed by the default <ph id="ph1">&lt;xref:System.Reflection.Binder.ChangeType%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">下表列出了默认情况下执行的强制<ph id="ph1">&lt;xref:System.Reflection.Binder.ChangeType%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>This table applies especially to the <ph id="ph1">`ExactBinding`</ph> binding flag.</source>
          <target state="translated">此表适用于尤其<ph id="ph1">`ExactBinding`</ph>绑定标志。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Source Type</source>
          <target state="translated">源类型</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Target Type</source>
          <target state="translated">目标类型</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Any type</source>
          <target state="translated">任何类型</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Its base type.</source>
          <target state="translated">与其基类型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Any type</source>
          <target state="translated">任何类型</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>The interface it implements.</source>
          <target state="translated">它实现的接口。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`UInt16`</ph>, <ph id="ph2">`UInt32`</ph>, <ph id="ph3">`Int32`</ph>, <ph id="ph4">`UInt64`</ph>, <ph id="ph5">`Int64`</ph>, <ph id="ph6">`Single`</ph>, <ph id="ph7">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`UInt16`</ph>, <ph id="ph2">`UInt32`</ph>, <ph id="ph3">`Int32`</ph>, <ph id="ph4">`UInt64`</ph>, <ph id="ph5">`Int64`</ph>, <ph id="ph6">`Single`</ph>, <ph id="ph7">`Double`</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`Char`</ph>, <ph id="ph2">`UInt16`</ph>, <ph id="ph3">`Int16`</ph>, <ph id="ph4">`UInt32`</ph>, <ph id="ph5">`Int32`</ph>, <ph id="ph6">`UInt64`</ph>, <ph id="ph7">`Int64`</ph>, <ph id="ph8">`Single`</ph>, <ph id="ph9">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`Char`</ph>, <ph id="ph2">`UInt16`</ph>, <ph id="ph3">`Int16`</ph>, <ph id="ph4">`UInt32`</ph>, <ph id="ph5">`Int32`</ph>, <ph id="ph6">`UInt64`</ph>, <ph id="ph7">`Int64`</ph>, <ph id="ph8">`Single`</ph>, <ph id="ph9">`Double`</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`Int16`</ph>, <ph id="ph2">`Int32`</ph>, <ph id="ph3">`Int64`</ph>, <ph id="ph4">`Single`</ph>, <ph id="ph5">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`Int16`</ph>, <ph id="ph2">`Int32`</ph>, <ph id="ph3">`Int64`</ph>, <ph id="ph4">`Single`</ph>, <ph id="ph5">`Double`</ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`UInt32`</ph>, <ph id="ph2">`Int32`</ph>, <ph id="ph3">`UInt64`</ph>, <ph id="ph4">`Int64`</ph>, <ph id="ph5">`Single`</ph>, <ph id="ph6">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`UInt32`</ph>, <ph id="ph2">`Int32`</ph>, <ph id="ph3">`UInt64`</ph>, <ph id="ph4">`Int64`</ph>, <ph id="ph5">`Single`</ph>, <ph id="ph6">`Double`</ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`Int32`</ph>, <ph id="ph2">`Int64`</ph>, <ph id="ph3">`Single`</ph>, <ph id="ph4">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`Int32`</ph>, <ph id="ph2">`Int64`</ph>, <ph id="ph3">`Single`</ph>, <ph id="ph4">`Double`</ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`UInt64`</ph>, <ph id="ph2">`Int64`</ph>, <ph id="ph3">`Single`</ph>, <ph id="ph4">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`UInt64`</ph>, <ph id="ph2">`Int64`</ph>, <ph id="ph3">`Single`</ph>, <ph id="ph4">`Double`</ph></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`Int64`</ph>, <ph id="ph2">`Single`</ph>, <ph id="ph3">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`Int64`</ph>, <ph id="ph2">`Single`</ph>, <ph id="ph3">`Double`</ph></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`Single`</ph>, <ph id="ph2">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`Single`</ph>, <ph id="ph2">`Double`</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`Single`</ph>, <ph id="ph2">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`Single`</ph>, <ph id="ph2">`Double`</ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Non-reference</source>
          <target state="translated">非引用</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>By-reference.</source>
          <target state="translated">按引用。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>The following example demonstrates many of the binding flags.</source>
          <target state="translated">下面的示例演示了许多的绑定标志。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.CreateInstance">
          <source>Specifies that reflection should create an instance of the specified type.</source>
          <target state="translated">指定反射应创建指定类型的实例。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.CreateInstance">
          <source>Calls the constructor that matches the given arguments.</source>
          <target state="translated">调用与给定参数匹配的构造函数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.CreateInstance">
          <source>The supplied member name is ignored.</source>
          <target state="translated">忽略提供的成员名称。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.CreateInstance">
          <source>If the type of lookup is not specified, (Instance | Public) will apply.</source>
          <target state="translated">如果未指定查找的类型，则应用“（实例 | 公共）”。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.CreateInstance">
          <source>It is not possible to call a type initializer.</source>
          <target state="translated">不能调用类型初始值设定项。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.CreateInstance">
          <source>This flag is passed to an <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> method to invoke a constructor.</source>
          <target state="translated">此标志会传递给 <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> 方法以调用构造函数。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.DeclaredOnly">
          <source>Specifies that only members declared at the level of the supplied type's hierarchy should be considered.</source>
          <target state="translated">指定只应考虑在所提供类型的层次结构级别上声明的成员。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.DeclaredOnly">
          <source>Inherited members are not considered.</source>
          <target state="translated">不考虑继承的成员。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.Default">
          <source>Specifies that no binding flags are defined.</source>
          <target state="translated">指定未定义任何绑定标志。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>Specifies that types of the supplied arguments must exactly match the types of the corresponding formal parameters.</source>
          <target state="translated">指定提供的参数的类型必须与对应形参的类型完全匹配。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>Reflection throws an exception if the caller supplies a non-null <ph id="ph1">&lt;see langword="Binder" /&gt;</ph> object, since that implies that the caller is supplying <ph id="ph2">&lt;see langword="BindToXXX" /&gt;</ph> implementations that will pick the appropriate method.</source>
          <target state="translated">如果调用方提供非 null <ph id="ph1">&lt;see langword="Binder" /&gt;</ph> 对象，则反射会引发异常，因为这意味着调用方在提供将选取适当方法的 <ph id="ph2">&lt;see langword="BindToXXX" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>Reflection models the accessibility rules of the common type system.</source>
          <target state="translated">反射建模常规类型系统可访问性的规则。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</source>
          <target state="translated">例如，如果调用方在同一程序集，调用方不将特殊权限需要用于内部成员。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>Otherwise, the caller needs <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>.</source>
          <target state="translated">否则，调用方需要<ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>This is consistent with lookup of members that are protected, private, and so on.</source>
          <target state="translated">这是与受保护的成员的查找一致、 专用和等。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>The general principle is that <ph id="ph1">&lt;xref:System.Reflection.Binder.ChangeType%2A&gt;</ph> should perform only widening coercions, which never lose data.</source>
          <target state="translated">一般原则是，<ph id="ph1">&lt;xref:System.Reflection.Binder.ChangeType%2A&gt;</ph>应执行仅扩大强制转换，永远不会丢失数据。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</source>
          <target state="translated">扩大强制的一个示例强制转换为 64 位有符号的整数的值将 32 位有符号的整数的值。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>This is distinguished from a narrowing coercion, which may lose data.</source>
          <target state="translated">这被有别于收缩强制不同，后者可能会丢失数据。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</source>
          <target state="translated">收缩强制的一个示例强制转换为 32 位有符号整数一个 64 位带符号的整数。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>The default binder ignores this flag, while custom binders can implement the semantics of this flag.</source>
          <target state="translated">默认的联编程序将忽略此标志，而自定义联编程序可以实现此标志的语义。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.FlattenHierarchy">
          <source>Specifies that public and protected static members up the hierarchy should be returned.</source>
          <target state="translated">指定应返回层次结构往上的公共成员和受保护静态成员。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.FlattenHierarchy">
          <source>Private static members in inherited classes are not returned.</source>
          <target state="translated">不返回继承类中的私有静态成员。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.FlattenHierarchy">
          <source>Static members include fields, methods, events, and properties.</source>
          <target state="translated">静态成员包括字段、方法、事件和属性。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.FlattenHierarchy">
          <source>Nested types are not returned.</source>
          <target state="translated">不支持嵌套类型。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.GetField">
          <source>Specifies that the value of the specified field should be returned.</source>
          <target state="translated">指定应返回指定字段的值。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.GetField">
          <source>This flag is passed to an <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> method to get a field value.</source>
          <target state="translated">此标志会传递给 <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> 方法以获取字段值。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.GetProperty">
          <source>Specifies that the value of the specified property should be returned.</source>
          <target state="translated">指定应返回指定属性的值。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.GetProperty">
          <source>This flag is passed to an <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> method to invoke a property getter.</source>
          <target state="translated">此标志会传递给 <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> 方法以调用属性 getter。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.IgnoreCase">
          <source>Specifies that the case of the member name should not be considered when binding.</source>
          <target state="translated">指定在绑定时不应考虑成员名称的大小写。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.IgnoreReturn">
          <source>Used in COM interop to specify that the return value of the member can be ignored.</source>
          <target state="translated">在 COM 互操作中用于指定可以忽略成员的返回值。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.Instance">
          <source>Specifies that instance members are to be included in the search.</source>
          <target state="translated">指定实例成员要包括在搜索中。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.InvokeMethod">
          <source>Specifies that a method is to be invoked.</source>
          <target state="translated">指定要调用的方法。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.InvokeMethod">
          <source>This must not be a constructor or a type initializer.</source>
          <target state="translated">这不必是构造函数或类型初始值设定项。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.InvokeMethod">
          <source>This flag is passed to an <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> method to invoke a method.</source>
          <target state="translated">此标志会传递给 <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> 方法以调用方法。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.NonPublic">
          <source>Specifies that non-public members are to be included in the search.</source>
          <target state="translated">指定非公共成员要包括在搜索中。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.OptionalParamBinding">
          <source>Returns the set of members whose parameter count matches the number of supplied arguments.</source>
          <target state="translated">返回其参数计数与提供的参数数量匹配的成员集。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.OptionalParamBinding">
          <source>This binding flag is used for methods with parameters that have default values and methods with variable arguments (varargs).</source>
          <target state="translated">此绑定标志用于参数具有默认值的方法和使用变量参数 (varargs) 的方法。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.OptionalParamBinding">
          <source>This flag should only be used with <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</source>
          <target state="translated">此标志只应与 <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph> 结合使用。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.OptionalParamBinding">
          <source>Parameters with default values are used only in calls where trailing arguments are omitted.</source>
          <target state="translated">使用默认值使用参数仅在调用中省略了尾随参数。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.OptionalParamBinding">
          <source>They must be the last arguments.</source>
          <target state="translated">它们必须是最后一个自变量。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.Public">
          <source>Specifies that public members are to be included in the search.</source>
          <target state="translated">指定公共成员要包括在搜索中。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.PutDispProperty">
          <source>Specifies that the <ph id="ph1">&lt;see langword="PROPPUT" /&gt;</ph> member on a COM object should be invoked.</source>
          <target state="translated">指定应调用 COM 对象上的 <ph id="ph1">&lt;see langword="PROPPUT" /&gt;</ph> 成员。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.PutDispProperty">
          <source><ph id="ph1">&lt;see langword="PROPPUT" /&gt;</ph> specifies a property-setting function that uses a value.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="PROPPUT" /&gt;</ph> 指定使用值的属性设置函数。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.PutDispProperty">
          <source>Use <ph id="ph1">&lt;see langword="PutDispProperty" /&gt;</ph> if a property has both <ph id="ph2">&lt;see langword="PROPPUT" /&gt;</ph> and <ph id="ph3">&lt;see langword="PROPPUTREF" /&gt;</ph> and you need to distinguish which one is called.</source>
          <target state="translated">如果属性同时具有 <ph id="ph2">&lt;see langword="PROPPUT" /&gt;</ph> 和 <ph id="ph3">&lt;see langword="PROPPUTREF" /&gt;</ph> 并且你需要区分调用哪一个，请使用 <ph id="ph1">&lt;see langword="PutDispProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.PutRefDispProperty">
          <source>Specifies that the <ph id="ph1">&lt;see langword="PROPPUTREF" /&gt;</ph> member on a COM object should be invoked.</source>
          <target state="translated">指定应调用 COM 对象上的 <ph id="ph1">&lt;see langword="PROPPUTREF" /&gt;</ph> 成员。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.PutRefDispProperty">
          <source><ph id="ph1">&lt;see langword="PROPPUTREF" /&gt;</ph> specifies a property-setting function that uses a reference instead of a value.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="PROPPUTREF" /&gt;</ph> 指定使用引用而不是值的属性设置函数。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.PutRefDispProperty">
          <source>Use <ph id="ph1">&lt;see langword="PutRefDispProperty" /&gt;</ph> if a property has both <ph id="ph2">&lt;see langword="PROPPUT" /&gt;</ph> and <ph id="ph3">&lt;see langword="PROPPUTREF" /&gt;</ph> and you need to distinguish which one is called.</source>
          <target state="translated">如果属性同时具有 <ph id="ph2">&lt;see langword="PROPPUT" /&gt;</ph> 和 <ph id="ph3">&lt;see langword="PROPPUTREF" /&gt;</ph> 并且你需要区分调用哪一个，请使用 <ph id="ph1">&lt;see langword="PutRefDispProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.SetField">
          <source>Specifies that the value of the specified field should be set.</source>
          <target state="translated">指定应设置指定字段的值。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.SetField">
          <source>This flag is passed to an <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> method to set a field value.</source>
          <target state="translated">此标志会传递给 <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> 方法以设置字段值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.SetProperty">
          <source>Specifies that the value of the specified property should be set.</source>
          <target state="translated">指定应设置指定属性的值。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.SetProperty">
          <source>For COM properties, specifying this binding flag is equivalent to specifying <ph id="ph1">&lt;see langword="PutDispProperty" /&gt;</ph> and <ph id="ph2">&lt;see langword="PutRefDispProperty" /&gt;</ph>.</source>
          <target state="translated">对于 COM 属性，指定此绑定标志等效于指定 <ph id="ph1">&lt;see langword="PutDispProperty" /&gt;</ph> 和 <ph id="ph2">&lt;see langword="PutRefDispProperty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.SetProperty">
          <source>This flag is passed to an <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> method to invoke a property setter.</source>
          <target state="translated">此标志会传递给 <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> 方法以调用属性 setter。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.Static">
          <source>Specifies that static members are to be included in the search.</source>
          <target state="translated">指定静态成员要包括在搜索中。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.SuppressChangeType">
          <source>Not implemented.</source>
          <target state="translated">未实现。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>