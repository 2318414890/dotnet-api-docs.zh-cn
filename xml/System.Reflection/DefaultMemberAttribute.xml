<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DefaultMemberAttribute.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a1b6ba1f6b901f690dec748b76a421a04a325333.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1b6ba1f6b901f690dec748b76a421a04a325333</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>Defines the member of a type that is the default member used by <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</source>
          <target state="translated">定义某类型的成员，该成员是 <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph> 使用的默认成员。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>A property is imported as an indexer (default indexed property in Visual Basic) if the property has arguments and if the name of the property or one of its accessors matches the name specified by the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph>.</source>
          <target state="translated">属性将导入为索引器 （默认索引属性在 Visual Basic） 如果属性具有自变量和属性或其某个访问器的名称与由指定的名称匹配<ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>If the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> is not present on the containing type, then the type does not have an indexer.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph>上不存在包含类型，则类型不具有一个索引器。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>The C# compiler emits the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> on any type containing an indexer.</source>
          <target state="translated">C# 编译器可以发射<ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph>上包含一个索引器，任何类型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>In C# it is an error to manually attribute a type with the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> if the type also declares an indexer.</source>
          <target state="translated">在 C# 中，它将是手动属性的类型中的错误<ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph>如果类型还声明一个索引器。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> attribute to make the <ph id="ph2">`Age`</ph> property the default member of the <ph id="ph3">`MyClass`</ph> class.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph>特性使<ph id="ph2">`Age`</ph>属性的默认成员的<ph id="ph3">`MyClass`</ph>类。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> containing the name of the member to invoke.</source>
          <target state="translated">包含要调用的成员名称的 <ph id="ph1">&lt;see langword="String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>This may be a constructor, method, property, or field.</source>
          <target state="translated">这可能是一个构造函数、方法、属性或字段。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>A suitable invocation attribute must be specified when the member is invoked.</source>
          <target state="translated">在调用成员时必须指定合适的调用属性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>The default member of a class can be specified by passing an empty <ph id="ph1">&lt;see langword="String" /&gt;</ph> as the name of the member.</source>
          <target state="translated">通过传递一个空 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 作为成员名称，可以指定类的默认成员。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>The default member of a type is marked with the <ph id="ph1">&lt;see langword="DefaultMemberAttribute" /&gt;</ph> custom attribute or marked in COM in the usual way.</source>
          <target state="translated">类型的默认成员由 <ph id="ph1">&lt;see langword="DefaultMemberAttribute" /&gt;</ph> 自定义属性标记，或按通常的方法在 COM 中标记。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.DefaultMemberAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Reflection.DefaultMemberAttribute" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Reflection.DefaultMemberAttribute.MemberName">
          <source>Gets the name from the attribute.</source>
          <target state="translated">从属性中获取名称。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.DefaultMemberAttribute.MemberName">
          <source>A string representing the member name.</source>
          <target state="translated">表示成员名称的字符串。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.DefaultMemberAttribute.MemberName">
          <source>There is no set accessor because the name must be provided to the constructor.</source>
          <target state="translated">因为必须给构造函数提供的名称，没有 set 访问器。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.DefaultMemberAttribute.MemberName">
          <source>The name is not optional.</source>
          <target state="translated">名称不是可选的。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>