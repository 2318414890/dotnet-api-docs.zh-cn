<Type Name="Binder" FullName="System.Reflection.Binder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f869abb652c1fe266ac609209e86d2fa7f433b6b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30480131" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Binder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Binder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Binder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Binder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binder abstract" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ac9f7-101">从候选者列表中选择一个成员，并执行实参类型到形参类型的类型转换。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac9f7-101">Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac9f7-102">实现<xref:System.Reflection.Binder>类如由方法<xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>，若要执行，从一组可能成员选择基于一组参数类型和自变量值;<xref:System.Type.GetMethod%2A?displayProperty=nameWithType>，后者选择基于参数类型; 等的方法。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-102">Implementations of the <xref:System.Reflection.Binder> class are used by methods such as <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>, which selects from a set of possible members to execute, based on a set of parameter types and argument values; <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>, which selects a method based on parameter types; and so on.</span></span>  
  
 <span data-ttu-id="ac9f7-103">默认实现<xref:System.Reflection.Binder>类提供的<xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-103">A default implementation of the <xref:System.Reflection.Binder> class is provided by the <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ac9f7-104">下面的示例实现，并演示的所有成员`Binder`类。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-104">The following example implements and demonstrates all members of the `Binder` class.</span></span> <span data-ttu-id="ac9f7-105">私有方法`CanConvertFrom`对于给定的类型查找兼容的类型。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-105">The private method `CanConvertFrom` finds compatible types for a given type.</span></span>  
  
 [!code-cpp[Binder_1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Binder_1/CPP/binder.cpp#1)]
 [!code-csharp[Binder_1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Binder_1/CS/binder.cs#1)]
 [!code-vb[Binder_1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Binder_1/VB/binder.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="ac9f7-106">继承自<see cref="T:System.Reflection.Binder" />，必须重写以下成员： <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />， <see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />， <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />， <see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />， <see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />，和<see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />。</span>
        <span class="sxs-lookup">
          <span data-stu-id="ac9f7-106">When you inherit from <see cref="T:System.Reflection.Binder" />, you must override the following members: <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, <see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />, <see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />, <see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />, and <see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Binder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Binder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ac9f7-107">初始化 <see cref="T:System.Reflection.Binder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-107">Initializes a new instance of the <see cref="T:System.Reflection.Binder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac9f7-108">派生类中，可将在这种类型的状态初始化的构造函数将调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-108">This constructor is called by the constructors of derived classes, to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToField">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.FieldInfo BindToField (System.Reflection.BindingFlags bindingAttr, System.Reflection.FieldInfo[] match, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo BindToField(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.FieldInfo[] match, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToField (bindingAttr As BindingFlags, match As FieldInfo(), value As Object, culture As CultureInfo) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::FieldInfo ^ BindToField(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ match, System::Object ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.FieldInfo[]" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="ac9f7-109">
            <see cref="T:System.Reflection.BindingFlags" /> 值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-109">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="ac9f7-110">用于匹配的候选字段集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-110">The set of fields that are candidates for matching.</span>
          </span>
          <span data-ttu-id="ac9f7-111">例如，当 <see cref="T:System.Reflection.Binder" /> 使用 <see cref="Overload:System.Type.InvokeMember" /> 对象时，此参数将指定反射已确定为可能匹配项的字段集，通常是因为它们有正确的成员名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-111">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of fields that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          </span>
          <span data-ttu-id="ac9f7-112">由 <see cref="P:System.Type.DefaultBinder" /> 提供的默认实现会更改此数组的顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-112">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ac9f7-113">用于定位匹配字段的字段值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-113">The field value used to locate a matching field.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="ac9f7-114">一个 <see cref="T:System.Globalization.CultureInfo" /> 实例，用于在强制类型的联编程序实现中控制数据类型强制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-114">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span>
          </span>
          <span data-ttu-id="ac9f7-115">如果 <c>culture</c> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-115">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="ac9f7-116">注意   例如，如果联编程序实现允许将字符串值强制转换为数值类型，则此参数对于将表示 1000 的 <see langword="String" /> 转换为 <see langword="Double" /> 值是必需的，因为不同的区域性以不同的方式表示 1000。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-116">Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span>
          </span>
          <span data-ttu-id="ac9f7-117">默认联编程序不进行此类字符串强制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-117">The default binder does not do such string coercions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac9f7-118">基于指定的判据，从给定的字段集中选择一个字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-118">Selects a field from the given set of fields, based on the specified criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac9f7-119">匹配的字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-119">The matching field.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac9f7-120">如果`bindingAttr`不包括<xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>，由提供的默认联编程序实现<xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType>只是返回的第一个元素`match`。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-120">If `bindingAttr` does not include <xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>, the default binder implementation provided by <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> simply returns the first element of `match`.</span></span> <span data-ttu-id="ac9f7-121">不进行选择。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-121">No selection is done.</span></span>  
  
 <span data-ttu-id="ac9f7-122">此方法提供的绑定的控件<xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-122">This method controls the binding provided by <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="ac9f7-123">对于默认的联编程序，<paramref name="bindingAttr" /> 包括 <see cref="F:System.Reflection.BindingFlags.SetField" />，并且 <paramref name="match" /> 包含多个与 <paramref name="value" /> 良好匹配且匹配程度相同的字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-123">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains multiple fields that are equally good matches for <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="ac9f7-124">例如，<paramref name="value" /> 包含一个实现 <c>IMyClass</c> 接口的 <c>MyClass</c> 对象，并且 <paramref name="match" /> 包含一个类型为 <c>MyClass</c> 的字段和一个类型为 <c>IMyClass</c> 的字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-124">For example, <paramref name="value" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a field of type <c>MyClass</c> and a field of type <c>IMyClass</c>.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingFieldException">
          <span data-ttu-id="ac9f7-125">对于默认联编程序，<paramref name="bindingAttr" /> 包括 <see cref="F:System.Reflection.BindingFlags.SetField" />，并且 <paramref name="match" /> 不包含任何可接受 <paramref name="value" /> 的字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-125">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains no fields that can accept <paramref name="value" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ac9f7-126">对于默认联编程序，<paramref name="bindingAttr" /> 包括 <see cref="F:System.Reflection.BindingFlags.SetField" />，并且 <paramref name="match" /> 为 <see langword="null" /> 或一个空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-126">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          </span>
          <span data-ttu-id="ac9f7-127">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-127">-or-</span>
          </span>
          <span data-ttu-id="ac9f7-128">
            <paramref name="bindingAttr" /> 包括 <see cref="F:System.Reflection.BindingFlags.SetField" />，并且 <paramref name="value" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-128">
              <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="BindToMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase BindToMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, ref object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] names, out object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase BindToMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, object[]&amp; args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] names, [out] object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToMethod (bindingAttr As BindingFlags, match As MethodBase(), ByRef args As Object(), modifiers As ParameterModifier(), culture As CultureInfo, names As String(), ByRef state As Object) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ BindToMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;System::Object ^&gt; ^ % args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ names, [Runtime::InteropServices::Out] System::Object ^ % state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="args" Type="System.Object[]&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="names" Type="System.String[]" />
        <Parameter Name="state" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="ac9f7-129">
            <see cref="T:System.Reflection.BindingFlags" /> 值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-129">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="ac9f7-130">用于匹配的候选方法集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-130">The set of methods that are candidates for matching.</span>
          </span>
          <span data-ttu-id="ac9f7-131">例如，当 <see cref="T:System.Reflection.Binder" /> 使用 <see cref="Overload:System.Type.InvokeMember" /> 对象时，此参数将指定反射已确定为可能匹配项的方法集，通常是因为它们有正确的成员名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-131">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          </span>
          <span data-ttu-id="ac9f7-132">由 <see cref="P:System.Type.DefaultBinder" /> 提供的默认实现会更改此数组的顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-132">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="ac9f7-133">传入的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-133">The arguments that are passed in.</span>
          </span>
          <span data-ttu-id="ac9f7-134">联编程序可以更改此数组中的参数的顺序；例如，如果 <c>names</c> 参数用于指定位置顺序以外的顺序，则默认联编程序会更改参数的顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-134">The binder can change the order of the arguments in this array; for example, the default binder changes the order of arguments if the <c>names</c> parameter is used to specify an order other than positional order.</span>
          </span>
          <span data-ttu-id="ac9f7-135">如果联编程序实现强制转换参数类型，则也可以更改参数的类型和值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-135">If a binder implementation coerces argument types, the types and values of the arguments can be changed as well.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ac9f7-136">使绑定能够处理在其中修改了类型的参数签名的参数修饰符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-136">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          </span>
          <span data-ttu-id="ac9f7-137">默认的联编程序实现不使用此参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-137">The default binder implementation does not use this parameter.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="ac9f7-138">一个 <see cref="T:System.Globalization.CultureInfo" /> 实例，用于在强制类型的联编程序实现中控制数据类型强制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-138">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span>
          </span>
          <span data-ttu-id="ac9f7-139">如果 <c>culture</c> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-139">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="ac9f7-140">注意   例如，如果联编程序实现允许将字符串值强制转换为数值类型，则此参数对于将表示 1000 的 <see langword="String" /> 转换为 <see langword="Double" /> 值是必需的，因为不同的区域性以不同的方式表示 1000。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-140">Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span>
          </span>
          <span data-ttu-id="ac9f7-141">默认联编程序不进行此类字符串强制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-141">The default binder does not do such string coercions.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="ac9f7-142">参数名（如果匹配时要考虑参数名）或 <see langword="null" />（如果要将变量视为纯位置）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-142">The parameter names, if parameter names are to be considered when matching, or <see langword="null" /> if arguments are to be treated as purely positional.</span>
          </span>
          <span data-ttu-id="ac9f7-143">例如，如果没有按位置顺序提供变量，则必须使用参数名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-143">For example, parameter names must be used if arguments are not supplied in positional order.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ac9f7-144">方法返回之后，<c>state</c> 包含一个联编程序提供的对象，用于跟踪参数的重新排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-144">After the method returns, <c>state</c> contains a binder-provided object that keeps track of argument reordering.</span>
          </span>
          <span data-ttu-id="ac9f7-145">联编程序创建此对象，并且联编程序是此对象的唯一使用者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-145">The binder creates this object, and the binder is the sole consumer of this object.</span>
          </span>
          <span data-ttu-id="ac9f7-146">如果在返回 <see langword="BindToMethod" /> 时 <c>state</c> 不为 <see langword="null" />，若要将 <c>args</c> 还原为其原始顺序，必须将 <c>state</c> 传递给 <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /> 方法，以便可以检索 <see langword="ref" /> 参数（在 Visual Basic 中为 <see langword="ByRef" />）的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-146">If <c>state</c> is not <see langword="null" /> when <see langword="BindToMethod" /> returns, you must pass <c>state</c> to the <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /> method if you want to restore <c>args</c> to its original order, for example, so that you can retrieve the values of <see langword="ref" /> parameters (<see langword="ByRef" /> parameters in Visual Basic).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac9f7-147">基于提供的参数，从给定的方法集中选择要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-147">Selects a method to invoke from the given set of methods, based on the supplied arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac9f7-148">匹配的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-148">The matching method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac9f7-149">默认的联编程序会考虑这两个参数具有值和`params`数组 (`ParamArray` Visual Basic 中的数组)。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-149">The default binder takes into account both parameters that have values and `params` arrays (`ParamArray` arrays in Visual Basic).</span></span> <span data-ttu-id="ac9f7-150">因此，很可能在情况下查找匹配项其中`args`和`match`不包含相同数量的元素。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-150">Thus, it is possible to find a match in cases where `args` and `match` do not contain the same number of elements.</span></span>  
  
 <span data-ttu-id="ac9f7-151">联编程序使客户端将映射回其原始格式的自变量数组，如果自变量数组具有操作的<xref:System.Reflection.Binder.BindToMethod%2A>。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-151">The binder enables a client to map the array of arguments back to its original form if the argument array has been manipulated by <xref:System.Reflection.Binder.BindToMethod%2A>.</span></span> <span data-ttu-id="ac9f7-152">使用此重新映射功能时应存在的此类参数取回按引用自变量。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-152">Use this remap capability to get back by-reference arguments when such arguments are present.</span></span> <span data-ttu-id="ac9f7-153">当你按名称传递自变量时，活页夹重新排序自变量数组。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-153">When you pass arguments by name, the binder reorders the argument array.</span></span> <span data-ttu-id="ac9f7-154">`state`参数将跟踪的参数重新排序，从而使活页夹的<xref:System.Reflection.Binder.ReorderArgumentArray%2A>方法能够为其原始形式自变量数组重新排序。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-154">The `state` parameter keeps track of argument reordering, thus enabling the binder's <xref:System.Reflection.Binder.ReorderArgumentArray%2A> method to reorder the argument array to its original form.</span></span>  
  
 <span data-ttu-id="ac9f7-155"><xref:System.Reflection.Binder.BindToMethod%2A>方法由<xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-155">The <xref:System.Reflection.Binder.BindToMethod%2A> method is used by the <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="ac9f7-156">对于默认联编程序，<paramref name="match" /> 包含多个与 <paramref name="args" /> 良好匹配且匹配程序相同的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-156">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for <paramref name="args" />.</span>
          </span>
          <span data-ttu-id="ac9f7-157">例如，<paramref name="args" /> 包含一个实现 <c>IMyClass</c> 接口的 <c>MyClass</c> 对象，并且 <paramref name="match" /> 包含一个采用 <c>MyClass</c> 的方法和一个采用 <c>IMyClass</c> 的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-157">For example, <paramref name="args" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a method that takes <c>MyClass</c> and a method that takes <c>IMyClass</c>.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="ac9f7-158">对于默认联编程序，<paramref name="match" /> 不包含可以接受 <paramref name="args" /> 中提供的参数的任何方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-158">For the default binder, <paramref name="match" /> contains no methods that can accept the arguments supplied in <paramref name="args" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac9f7-159">对于默认联编程序，<paramref name="match" /> 为 <see langword="null" /> 或一个空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-159">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.MethodBase" />
      </Docs>
    </Member>
    <Member MemberName="CanChangeType">
      <MemberSignature Language="C#" Value="public virtual bool CanChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.CanChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="type">To be added.</param>
        <param name="culture">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public abstract object ChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="ac9f7-160">要更改为新 <see langword="Type" /> 的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-160">The object to change into a new <see langword="Type" />.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="ac9f7-161">
            <c>value</c> 将变成的新 <see langword="Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-161">The new <see langword="Type" /> that <c>value</c> will become.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="ac9f7-162">一个 <see cref="T:System.Globalization.CultureInfo" /> 实例，用于控制数据类型的强制转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-162">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types.</span>
          </span>
          <span data-ttu-id="ac9f7-163">如果 <c>culture</c> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-163">If <c>culture</c> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="ac9f7-164">注意   例如，此参数对于将表示 1000 的 <see langword="String" /> 转换为 <see langword="Double" /> 值是必需的，因为不同的区域性表示 1000 的形式不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-164">Note   For example, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac9f7-165">将给定 <see langword="Object" /> 的类型更改为给定 <see langword="Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-165">Changes the type of the given <see langword="Object" /> to the given <see langword="Type" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac9f7-166">一个包含作为新类型的给定值的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-166">An object that contains the given value as the new type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac9f7-167">反射建模常规类型系统可访问性的规则。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-167">Reflection models the accessibility rules of the common type system.</span></span> <span data-ttu-id="ac9f7-168">例如，如果调用方在同一程序集，调用方不将特殊权限需要用于内部成员。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-168">For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</span></span> <span data-ttu-id="ac9f7-169">否则，调用方需要<xref:System.Security.Permissions.ReflectionPermission>。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-169">Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>.</span></span> <span data-ttu-id="ac9f7-170">这是与受保护的成员的查找一致、 专用和等。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-170">This is consistent with lookup of members that are protected, private, and so on.</span></span>  
  
 <span data-ttu-id="ac9f7-171">一般原则是，`ChangeType`应执行仅扩大强制转换，永远不会丢失数据。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-171">The general principle is that `ChangeType` should perform only widening coercions, which never lose data.</span></span> <span data-ttu-id="ac9f7-172">扩大强制的一个示例强制转换为 64 位有符号的整数的值将 32 位有符号的整数的值。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-172">An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</span></span> <span data-ttu-id="ac9f7-173">这被有别于收缩强制不同，后者可能会丢失数据。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-173">This is distinguished from a narrowing coercion, which may lose data.</span></span> <span data-ttu-id="ac9f7-174">收缩强制的一个示例强制转换为 32 位有符号整数一个 64 位带符号的整数。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-174">An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="ac9f7-175">下表列出了默认情况下执行的强制`ChangeType`。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-175">The following table lists the coercions performed by the default `ChangeType`.</span></span>  
  
|<span data-ttu-id="ac9f7-176">源类型</span><span class="sxs-lookup"><span data-stu-id="ac9f7-176">Source type</span></span>|<span data-ttu-id="ac9f7-177">目标类型</span><span class="sxs-lookup"><span data-stu-id="ac9f7-177">Target type</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="ac9f7-178">任何类型</span><span class="sxs-lookup"><span data-stu-id="ac9f7-178">Any type</span></span>|<span data-ttu-id="ac9f7-179">与其基类型。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-179">Its base type.</span></span>|  
|<span data-ttu-id="ac9f7-180">任何类型</span><span class="sxs-lookup"><span data-stu-id="ac9f7-180">Any type</span></span>|<span data-ttu-id="ac9f7-181">它实现的接口。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-181">The interface it implements.</span></span>|  
|<span data-ttu-id="ac9f7-182">Char</span><span class="sxs-lookup"><span data-stu-id="ac9f7-182">Char</span></span>|<span data-ttu-id="ac9f7-183">UInt16、UInt32、Int32、UInt64、Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="ac9f7-183">UInt16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="ac9f7-184">Byte</span><span class="sxs-lookup"><span data-stu-id="ac9f7-184">Byte</span></span>|<span data-ttu-id="ac9f7-185">Char、UInt16、Int16、UInt32、Int32、UInt64、Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="ac9f7-185">Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="ac9f7-186">SByte</span><span class="sxs-lookup"><span data-stu-id="ac9f7-186">SByte</span></span>|<span data-ttu-id="ac9f7-187">Int16、Int32、Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="ac9f7-187">Int16, Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="ac9f7-188">UInt16</span><span class="sxs-lookup"><span data-stu-id="ac9f7-188">UInt16</span></span>|<span data-ttu-id="ac9f7-189">UInt32、Int32、UInt64、Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="ac9f7-189">UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="ac9f7-190">Int16</span><span class="sxs-lookup"><span data-stu-id="ac9f7-190">Int16</span></span>|<span data-ttu-id="ac9f7-191">Int32、Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="ac9f7-191">Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="ac9f7-192">UInt32</span><span class="sxs-lookup"><span data-stu-id="ac9f7-192">UInt32</span></span>|<span data-ttu-id="ac9f7-193">UInt64、Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="ac9f7-193">UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="ac9f7-194">Int32</span><span class="sxs-lookup"><span data-stu-id="ac9f7-194">Int32</span></span>|<span data-ttu-id="ac9f7-195">Int64、Single、Double</span><span class="sxs-lookup"><span data-stu-id="ac9f7-195">Int64, Single, Double</span></span>|  
|<span data-ttu-id="ac9f7-196">UInt64</span><span class="sxs-lookup"><span data-stu-id="ac9f7-196">UInt64</span></span>|<span data-ttu-id="ac9f7-197">Single、Double</span><span class="sxs-lookup"><span data-stu-id="ac9f7-197">Single, Double</span></span>|  
|<span data-ttu-id="ac9f7-198">Int64</span><span class="sxs-lookup"><span data-stu-id="ac9f7-198">Int64</span></span>|<span data-ttu-id="ac9f7-199">Single、Double</span><span class="sxs-lookup"><span data-stu-id="ac9f7-199">Single, Double</span></span>|  
|<span data-ttu-id="ac9f7-200">Single</span><span class="sxs-lookup"><span data-stu-id="ac9f7-200">Single</span></span>|<span data-ttu-id="ac9f7-201">Double</span><span class="sxs-lookup"><span data-stu-id="ac9f7-201">Double</span></span>|  
|<span data-ttu-id="ac9f7-202">非引用</span><span class="sxs-lookup"><span data-stu-id="ac9f7-202">Non-reference</span></span>|<span data-ttu-id="ac9f7-203">按引用。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-203">By-reference.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReorderArgumentArray">
      <MemberSignature Language="C#" Value="public abstract void ReorderArgumentArray (ref object[] args, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReorderArgumentArray(object[]&amp; args, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReorderArgumentArray (ByRef args As Object(), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReorderArgumentArray(cli::array &lt;System::Object ^&gt; ^ % args, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]&amp;" RefType="ref" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="ac9f7-204">传入的实参。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-204">The actual arguments that are passed in.</span>
          </span>
          <span data-ttu-id="ac9f7-205">参数的类型和值都可更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-205">Both the types and values of the arguments can be changed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ac9f7-206">联编程序提供的对象，用于跟踪参数的重新排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-206">A binder-provided object that keeps track of argument reordering.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac9f7-207">从 <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" /> 返回后，将 <paramref name="args" /> 参数还原为从 <see langword="BindToMethod" /> 传入时的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-207">Upon returning from <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, restores the <paramref name="args" /> argument to what it was when it came from <see langword="BindToMethod" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac9f7-208">公共语言运行时调用此方法，如果`state`不`null`后从返回`BindToMethod`。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-208">The common language runtime calls this method if `state` is not `null` after a return from `BindToMethod`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase SelectMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase SelectMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectMethod (bindingAttr As BindingFlags, match As MethodBase(), types As Type(), modifiers As ParameterModifier()) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ SelectMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="ac9f7-209">
            <see cref="T:System.Reflection.BindingFlags" /> 值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-209">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="ac9f7-210">用于匹配的候选方法集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-210">The set of methods that are candidates for matching.</span>
          </span>
          <span data-ttu-id="ac9f7-211">例如，当 <see cref="T:System.Reflection.Binder" /> 使用 <see cref="Overload:System.Type.InvokeMember" /> 对象时，此参数将指定反射已确定为可能匹配项的方法集，通常是因为它们有正确的成员名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-211">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          </span>
          <span data-ttu-id="ac9f7-212">由 <see cref="P:System.Type.DefaultBinder" /> 提供的默认实现会更改此数组的顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-212">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="ac9f7-213">用于定位匹配方法的参数类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-213">The parameter types used to locate a matching method.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ac9f7-214">使绑定能够处理在其中修改了类型的参数签名的参数修饰符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-214">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac9f7-215">基于参数类型，从给定的方法集中选择一个方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-215">Selects a method from the given set of methods, based on the argument type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac9f7-216">如果找到，则为匹配的方法；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-216">The matching method, if found; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac9f7-217">此方法应返回`null`如果没有方法与条件匹配。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-217">This method should return `null` if no method matches the criteria.</span></span> <span data-ttu-id="ac9f7-218">此方法控制由所选内容`GetConstructor`和`GetMethod`方法`Type`。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-218">This method controls the selection provided by the `GetConstructor` and `GetMethod` methods on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="ac9f7-219">对于默认联编程序，<paramref name="match" /> 包含多个与由 <paramref name="types" /> 描述的参数类型良好匹配且匹配程序相同的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-219">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for the parameter types described by <paramref name="types" />.</span>
          </span>
          <span data-ttu-id="ac9f7-220">例如，<paramref name="types" /> 中的数组包含一个用于 <c>MyClass</c> 的 <see cref="T:System.Type" /> 对象，并且 <paramref name="match" /> 中的数组包含一个采用 <c>MyClass</c> 的基类的方法和一个采用 <c>MyClass</c> 实现的接口的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-220">For example, the array in <paramref name="types" /> contains a <see cref="T:System.Type" /> object for <c>MyClass</c> and the array in <paramref name="match" /> contains a method that takes a base class of <c>MyClass</c> and a method that takes an interface that <c>MyClass</c> implements.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac9f7-221">对于默认联编程序，<paramref name="match" /> 为 <see langword="null" /> 或一个空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-221">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          </span>
          <span data-ttu-id="ac9f7-222">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-222">-or-</span>
          </span>
          <span data-ttu-id="ac9f7-223">
            <paramref name="types" /> 的元素从 <see cref="T:System.Type" /> 派生，但并不属于类型 <see langword="RuntimeType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-223">An element of <paramref name="types" /> derives from <see cref="T:System.Type" />, but is not of type <see langword="RuntimeType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectProperty">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.PropertyInfo SelectProperty (System.Reflection.BindingFlags bindingAttr, System.Reflection.PropertyInfo[] match, Type returnType, Type[] indexes, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo SelectProperty(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.PropertyInfo[] match, class System.Type returnType, class System.Type[] indexes, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectProperty (bindingAttr As BindingFlags, match As PropertyInfo(), returnType As Type, indexes As Type(), modifiers As ParameterModifier()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::PropertyInfo ^ SelectProperty(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ match, Type ^ returnType, cli::array &lt;Type ^&gt; ^ indexes, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.PropertyInfo[]" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="indexes" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="ac9f7-224">
            <see cref="T:System.Reflection.BindingFlags" /> 值的按位组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-224">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="ac9f7-225">用于匹配的候选属性集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-225">The set of properties that are candidates for matching.</span>
          </span>
          <span data-ttu-id="ac9f7-226">例如，当 <see cref="T:System.Reflection.Binder" /> 使用 <see cref="Overload:System.Type.InvokeMember" /> 对象时，此参数将指定反射已确定为可能匹配项的属性集，通常是因为它们有正确的成员名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-226">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of properties that reflection has determined to be possible matches, typically because they have the correct member name.</span>
          </span>
          <span data-ttu-id="ac9f7-227">由 <see cref="P:System.Type.DefaultBinder" /> 提供的默认实现会更改此数组的顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-227">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="ac9f7-228">匹配属性必须具有的返回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-228">The return value the matching property must have.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="ac9f7-229">所搜索的属性的索引类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-229">The index types of the property being searched for.</span>
          </span>
          <span data-ttu-id="ac9f7-230">用于索引属性，如类的索引器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-230">Used for index properties such as the indexer for a class.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ac9f7-231">使绑定能够处理在其中修改了类型的参数签名的参数修饰符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-231">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac9f7-232">基于指定的判据，从给定的属性集中选择一个属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-232">Selects a property from the given set of properties, based on the specified criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac9f7-233">匹配的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-233">The matching property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac9f7-234">此方法控制由所选内容`GetProperty`方法`Type`。</span><span class="sxs-lookup"><span data-stu-id="ac9f7-234">This method controls the selection provided by the `GetProperty` method on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="ac9f7-235">对于默认联编程序，<paramref name="match" /> 包含多个与 <paramref name="returnType" /> 和 <paramref name="indexes" /> 良好匹配且匹配程序相同的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-235">For the default binder, <paramref name="match" /> contains multiple properties that are equally good matches for <paramref name="returnType" /> and <paramref name="indexes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ac9f7-236">对于默认联编程序，<paramref name="match" /> 为 <see langword="null" /> 或一个空数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac9f7-236">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.PropertyInfo" />
      </Docs>
    </Member>
  </Members>
</Type>