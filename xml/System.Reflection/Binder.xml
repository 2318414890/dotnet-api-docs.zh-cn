<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Binder.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f869abb652c1fe266ac609209e86d2fa7f433b6b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f869abb652c1fe266ac609209e86d2fa7f433b6b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.Binder">
          <source>Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.</source>
          <target state="translated">从候选者列表中选择一个成员，并执行实参类型到形参类型的类型转换。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Binder">
          <source>Implementations of the <ph id="ph1">&lt;xref:System.Reflection.Binder&gt;</ph> class are used by methods such as <ph id="ph2">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph>, which selects from a set of possible members to execute, based on a set of parameter types and argument values; <ph id="ph3">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph>, which selects a method based on parameter types; and so on.</source>
          <target state="translated">实现<ph id="ph1">&lt;xref:System.Reflection.Binder&gt;</ph>类如由方法<ph id="ph2">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph>，若要执行，从一组可能成员选择基于一组参数类型和自变量值;<ph id="ph3">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph>，后者选择基于参数类型; 等的方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Binder">
          <source>A default implementation of the <ph id="ph1">&lt;xref:System.Reflection.Binder&gt;</ph> class is provided by the <ph id="ph2">&lt;xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">默认实现<ph id="ph1">&lt;xref:System.Reflection.Binder&gt;</ph>类提供的<ph id="ph2">&lt;xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Binder">
          <source>The following example implements and demonstrates all members of the <ph id="ph1">`Binder`</ph> class.</source>
          <target state="translated">下面的示例实现，并演示的所有成员<ph id="ph1">`Binder`</ph>类。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Binder">
          <source>The private method <ph id="ph1">`CanConvertFrom`</ph> finds compatible types for a given type.</source>
          <target state="translated">私有方法<ph id="ph1">`CanConvertFrom`</ph>对于给定的类型查找兼容的类型。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.Binder">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" /&gt;</ph>, <ph id="ph4">&lt;see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /&gt;</ph>, <ph id="ph5">&lt;see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>, <ph id="ph6">&lt;see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>, and <ph id="ph7">&lt;see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" /&gt;</ph>.</source>
          <target state="translated">继承自<ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>，必须重写以下成员： <ph id="ph2">&lt;see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" /&gt;</ph>， <ph id="ph3">&lt;see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" /&gt;</ph>， <ph id="ph4">&lt;see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /&gt;</ph>， <ph id="ph5">&lt;see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>， <ph id="ph6">&lt;see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" /&gt;</ph>，和<ph id="ph7">&lt;see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.#ctor">
          <source>This constructor is called by the constructors of derived classes, to initialize state in this type.</source>
          <target state="translated">派生类中，可将在这种类型的状态初始化的构造函数将调用此构造函数。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的按位组合。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>The set of fields that are candidates for matching.</source>
          <target state="translated">用于匹配的候选字段集。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>For example, when a <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object is used by <ph id="ph2">&lt;see cref="Overload:System.Type.InvokeMember" /&gt;</ph>, this parameter specifies the set of fields that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">例如，当 <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> 使用 <ph id="ph2">&lt;see cref="Overload:System.Type.InvokeMember" /&gt;</ph> 对象时，此参数将指定反射已确定为可能匹配项的字段集，通常是因为它们有正确的成员名称。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>The default implementation provided by <ph id="ph1">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> changes the order of this array.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> 提供的默认实现会更改此数组的顺序。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>The field value used to locate a matching field.</source>
          <target state="translated">用于定位匹配字段的字段值。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> that is used to control the coercion of data types, in binder implementations that coerce types.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> 实例，用于在强制类型的联编程序实现中控制数据类型强制。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则使用当前线程的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <ph id="ph1">&lt;see langword="String" /&gt;</ph> that represents 1000 to a <ph id="ph2">&lt;see langword="Double" /&gt;</ph> value, because 1000 is represented differently by different cultures.</source>
          <target state="translated">注意   例如，如果联编程序实现允许将字符串值强制转换为数值类型，则此参数对于将表示 1000 的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 转换为 <ph id="ph2">&lt;see langword="Double" /&gt;</ph> 值是必需的，因为不同的区域性以不同的方式表示 1000。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>The default binder does not do such string coercions.</source>
          <target state="translated">默认联编程序不进行此类字符串强制。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>Selects a field from the given set of fields, based on the specified criteria.</source>
          <target state="translated">基于指定的判据，从给定的字段集中选择一个字段。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>The matching field.</source>
          <target state="translated">匹配的字段。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>If <ph id="ph1">`bindingAttr`</ph> does not include <ph id="ph2">&lt;xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType&gt;</ph>, the default binder implementation provided by <ph id="ph3">&lt;xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType&gt;</ph> simply returns the first element of <ph id="ph4">`match`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`bindingAttr`</ph>不包括<ph id="ph2">&lt;xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType&gt;</ph>，由提供的默认联编程序实现<ph id="ph3">&lt;xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType&gt;</ph>只是返回的第一个元素<ph id="ph4">`match`</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>No selection is done.</source>
          <target state="translated">不进行选择。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>This method controls the binding provided by <ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此方法提供的绑定的控件<ph id="ph1">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>For the default binder, <ph id="ph1">&lt;paramref name="bindingAttr" /&gt;</ph> includes <ph id="ph2">&lt;see cref="F:System.Reflection.BindingFlags.SetField" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="match" /&gt;</ph> contains multiple fields that are equally good matches for <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">对于默认的联编程序，<ph id="ph1">&lt;paramref name="bindingAttr" /&gt;</ph> 包括 <ph id="ph2">&lt;see cref="F:System.Reflection.BindingFlags.SetField" /&gt;</ph>，并且 <ph id="ph3">&lt;paramref name="match" /&gt;</ph> 包含多个与 <ph id="ph4">&lt;paramref name="value" /&gt;</ph> 良好匹配且匹配程度相同的字段。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>For example, <ph id="ph1">&lt;paramref name="value" /&gt;</ph> contains a <bpt id="p1">&lt;c&gt;</bpt>MyClass<ept id="p1">&lt;/c&gt;</ept> object that implements the <bpt id="p2">&lt;c&gt;</bpt>IMyClass<ept id="p2">&lt;/c&gt;</ept> interface, and <ph id="ph2">&lt;paramref name="match" /&gt;</ph> contains a field of type <bpt id="p3">&lt;c&gt;</bpt>MyClass<ept id="p3">&lt;/c&gt;</ept> and a field of type <bpt id="p4">&lt;c&gt;</bpt>IMyClass<ept id="p4">&lt;/c&gt;</ept>.</source>
          <target state="translated">例如，<ph id="ph1">&lt;paramref name="value" /&gt;</ph> 包含一个实现 <bpt id="p2">&lt;c&gt;</bpt>IMyClass<ept id="p2">&lt;/c&gt;</ept> 接口的 <bpt id="p1">&lt;c&gt;</bpt>MyClass<ept id="p1">&lt;/c&gt;</ept> 对象，并且 <ph id="ph2">&lt;paramref name="match" /&gt;</ph> 包含一个类型为 <bpt id="p3">&lt;c&gt;</bpt>MyClass<ept id="p3">&lt;/c&gt;</ept> 的字段和一个类型为 <bpt id="p4">&lt;c&gt;</bpt>IMyClass<ept id="p4">&lt;/c&gt;</ept> 的字段。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>For the default binder, <ph id="ph1">&lt;paramref name="bindingAttr" /&gt;</ph> includes <ph id="ph2">&lt;see cref="F:System.Reflection.BindingFlags.SetField" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="match" /&gt;</ph> contains no fields that can accept <ph id="ph4">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">对于默认联编程序，<ph id="ph1">&lt;paramref name="bindingAttr" /&gt;</ph> 包括 <ph id="ph2">&lt;see cref="F:System.Reflection.BindingFlags.SetField" /&gt;</ph>，并且 <ph id="ph3">&lt;paramref name="match" /&gt;</ph> 不包含任何可接受 <ph id="ph4">&lt;paramref name="value" /&gt;</ph> 的字段。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>For the default binder, <ph id="ph1">&lt;paramref name="bindingAttr" /&gt;</ph> includes <ph id="ph2">&lt;see cref="F:System.Reflection.BindingFlags.SetField" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="match" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph> or an empty array.</source>
          <target state="translated">对于默认联编程序，<ph id="ph1">&lt;paramref name="bindingAttr" /&gt;</ph> 包括 <ph id="ph2">&lt;see cref="F:System.Reflection.BindingFlags.SetField" /&gt;</ph>，并且 <ph id="ph3">&lt;paramref name="match" /&gt;</ph> 为 <ph id="ph4">&lt;see langword="null" /&gt;</ph> 或一个空数组。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
          <source><ph id="ph1">&lt;paramref name="bindingAttr" /&gt;</ph> includes <ph id="ph2">&lt;see cref="F:System.Reflection.BindingFlags.SetField" /&gt;</ph>, and <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bindingAttr" /&gt;</ph> 包括 <ph id="ph2">&lt;see cref="F:System.Reflection.BindingFlags.SetField" /&gt;</ph>，并且 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 为 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的按位组合。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>The set of methods that are candidates for matching.</source>
          <target state="translated">用于匹配的候选方法集。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>For example, when a <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object is used by <ph id="ph2">&lt;see cref="Overload:System.Type.InvokeMember" /&gt;</ph>, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">例如，当 <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> 使用 <ph id="ph2">&lt;see cref="Overload:System.Type.InvokeMember" /&gt;</ph> 对象时，此参数将指定反射已确定为可能匹配项的方法集，通常是因为它们有正确的成员名称。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>The default implementation provided by <ph id="ph1">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> changes the order of this array.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> 提供的默认实现会更改此数组的顺序。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>The arguments that are passed in.</source>
          <target state="translated">传入的参数。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>The binder can change the order of the arguments in this array; for example, the default binder changes the order of arguments if the <bpt id="p1">&lt;c&gt;</bpt>names<ept id="p1">&lt;/c&gt;</ept> parameter is used to specify an order other than positional order.</source>
          <target state="translated">联编程序可以更改此数组中的参数的顺序；例如，如果 <bpt id="p1">&lt;c&gt;</bpt>names<ept id="p1">&lt;/c&gt;</ept> 参数用于指定位置顺序以外的顺序，则默认联编程序会更改参数的顺序。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>If a binder implementation coerces argument types, the types and values of the arguments can be changed as well.</source>
          <target state="translated">如果联编程序实现强制转换参数类型，则也可以更改参数的类型和值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</source>
          <target state="translated">使绑定能够处理在其中修改了类型的参数签名的参数修饰符数组。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>The default binder implementation does not use this parameter.</source>
          <target state="translated">默认的联编程序实现不使用此参数。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> that is used to control the coercion of data types, in binder implementations that coerce types.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> 实例，用于在强制类型的联编程序实现中控制数据类型强制。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则使用当前线程的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <ph id="ph1">&lt;see langword="String" /&gt;</ph> that represents 1000 to a <ph id="ph2">&lt;see langword="Double" /&gt;</ph> value, because 1000 is represented differently by different cultures.</source>
          <target state="translated">注意   例如，如果联编程序实现允许将字符串值强制转换为数值类型，则此参数对于将表示 1000 的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 转换为 <ph id="ph2">&lt;see langword="Double" /&gt;</ph> 值是必需的，因为不同的区域性以不同的方式表示 1000。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>The default binder does not do such string coercions.</source>
          <target state="translated">默认联编程序不进行此类字符串强制。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>The parameter names, if parameter names are to be considered when matching, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if arguments are to be treated as purely positional.</source>
          <target state="translated">参数名（如果匹配时要考虑参数名）或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>（如果要将变量视为纯位置）。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>For example, parameter names must be used if arguments are not supplied in positional order.</source>
          <target state="translated">例如，如果没有按位置顺序提供变量，则必须使用参数名。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>After the method returns, <bpt id="p1">&lt;c&gt;</bpt>state<ept id="p1">&lt;/c&gt;</ept> contains a binder-provided object that keeps track of argument reordering.</source>
          <target state="translated">方法返回之后，<bpt id="p1">&lt;c&gt;</bpt>state<ept id="p1">&lt;/c&gt;</ept> 包含一个联编程序提供的对象，用于跟踪参数的重新排序。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>The binder creates this object, and the binder is the sole consumer of this object.</source>
          <target state="translated">联编程序创建此对象，并且联编程序是此对象的唯一使用者。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>state<ept id="p1">&lt;/c&gt;</ept> is not <ph id="ph1">&lt;see langword="null" /&gt;</ph> when <ph id="ph2">&lt;see langword="BindToMethod" /&gt;</ph> returns, you must pass <bpt id="p2">&lt;c&gt;</bpt>state<ept id="p2">&lt;/c&gt;</ept> to the <ph id="ph3">&lt;see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /&gt;</ph> method if you want to restore <bpt id="p3">&lt;c&gt;</bpt>args<ept id="p3">&lt;/c&gt;</ept> to its original order, for example, so that you can retrieve the values of <ph id="ph4">&lt;see langword="ref" /&gt;</ph> parameters (<ph id="ph5">&lt;see langword="ByRef" /&gt;</ph> parameters in Visual Basic).</source>
          <target state="translated">如果在返回 <ph id="ph2">&lt;see langword="BindToMethod" /&gt;</ph> 时 <bpt id="p1">&lt;c&gt;</bpt>state<ept id="p1">&lt;/c&gt;</ept> 不为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，若要将 <bpt id="p3">&lt;c&gt;</bpt>args<ept id="p3">&lt;/c&gt;</ept> 还原为其原始顺序，必须将 <bpt id="p2">&lt;c&gt;</bpt>state<ept id="p2">&lt;/c&gt;</ept> 传递给 <ph id="ph3">&lt;see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /&gt;</ph> 方法，以便可以检索 <ph id="ph4">&lt;see langword="ref" /&gt;</ph> 参数（在 Visual Basic 中为 <ph id="ph5">&lt;see langword="ByRef" /&gt;</ph>）的值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>Selects a method to invoke from the given set of methods, based on the supplied arguments.</source>
          <target state="translated">基于提供的参数，从给定的方法集中选择要调用的方法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>The matching method.</source>
          <target state="translated">匹配的方法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>The default binder takes into account both parameters that have values and <ph id="ph1">`params`</ph> arrays (<ph id="ph2">`ParamArray`</ph> arrays in Visual Basic).</source>
          <target state="translated">默认的联编程序会考虑这两个参数具有值和<ph id="ph1">`params`</ph>数组 (<ph id="ph2">`ParamArray`</ph> Visual Basic 中的数组)。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>Thus, it is possible to find a match in cases where <ph id="ph1">`args`</ph> and <ph id="ph2">`match`</ph> do not contain the same number of elements.</source>
          <target state="translated">因此，很可能在情况下查找匹配项其中<ph id="ph1">`args`</ph>和<ph id="ph2">`match`</ph>不包含相同数量的元素。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>The binder enables a client to map the array of arguments back to its original form if the argument array has been manipulated by <ph id="ph1">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;</ph>.</source>
          <target state="translated">联编程序使客户端将映射回其原始格式的自变量数组，如果自变量数组具有操作的<ph id="ph1">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>Use this remap capability to get back by-reference arguments when such arguments are present.</source>
          <target state="translated">使用此重新映射功能时应存在的此类参数取回按引用自变量。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>When you pass arguments by name, the binder reorders the argument array.</source>
          <target state="translated">当你按名称传递自变量时，活页夹重新排序自变量数组。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>The <ph id="ph1">`state`</ph> parameter keeps track of argument reordering, thus enabling the binder's <ph id="ph2">&lt;xref:System.Reflection.Binder.ReorderArgumentArray%2A&gt;</ph> method to reorder the argument array to its original form.</source>
          <target state="translated"><ph id="ph1">`state`</ph>参数将跟踪的参数重新排序，从而使活页夹的<ph id="ph2">&lt;xref:System.Reflection.Binder.ReorderArgumentArray%2A&gt;</ph>方法能够为其原始形式自变量数组重新排序。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;</ph> method is used by the <ph id="ph2">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;</ph>方法由<ph id="ph2">&lt;xref:System.Type.InvokeMember%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>For the default binder, <ph id="ph1">&lt;paramref name="match" /&gt;</ph> contains multiple methods that are equally good matches for <ph id="ph2">&lt;paramref name="args" /&gt;</ph>.</source>
          <target state="translated">对于默认联编程序，<ph id="ph1">&lt;paramref name="match" /&gt;</ph> 包含多个与 <ph id="ph2">&lt;paramref name="args" /&gt;</ph> 良好匹配且匹配程序相同的方法。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>For example, <ph id="ph1">&lt;paramref name="args" /&gt;</ph> contains a <bpt id="p1">&lt;c&gt;</bpt>MyClass<ept id="p1">&lt;/c&gt;</ept> object that implements the <bpt id="p2">&lt;c&gt;</bpt>IMyClass<ept id="p2">&lt;/c&gt;</ept> interface, and <ph id="ph2">&lt;paramref name="match" /&gt;</ph> contains a method that takes <bpt id="p3">&lt;c&gt;</bpt>MyClass<ept id="p3">&lt;/c&gt;</ept> and a method that takes <bpt id="p4">&lt;c&gt;</bpt>IMyClass<ept id="p4">&lt;/c&gt;</ept>.</source>
          <target state="translated">例如，<ph id="ph1">&lt;paramref name="args" /&gt;</ph> 包含一个实现 <bpt id="p2">&lt;c&gt;</bpt>IMyClass<ept id="p2">&lt;/c&gt;</ept> 接口的 <bpt id="p1">&lt;c&gt;</bpt>MyClass<ept id="p1">&lt;/c&gt;</ept> 对象，并且 <ph id="ph2">&lt;paramref name="match" /&gt;</ph> 包含一个采用 <bpt id="p3">&lt;c&gt;</bpt>MyClass<ept id="p3">&lt;/c&gt;</ept> 的方法和一个采用 <bpt id="p4">&lt;c&gt;</bpt>IMyClass<ept id="p4">&lt;/c&gt;</ept> 的方法。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>For the default binder, <ph id="ph1">&lt;paramref name="match" /&gt;</ph> contains no methods that can accept the arguments supplied in <ph id="ph2">&lt;paramref name="args" /&gt;</ph>.</source>
          <target state="translated">对于默认联编程序，<ph id="ph1">&lt;paramref name="match" /&gt;</ph> 不包含可以接受 <ph id="ph2">&lt;paramref name="args" /&gt;</ph> 中提供的参数的任何方法。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
          <source>For the default binder, <ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty array.</source>
          <target state="translated">对于默认联编程序，<ph id="ph1">&lt;paramref name="match" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 或一个空数组。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>The object to change into a new <ph id="ph1">&lt;see langword="Type" /&gt;</ph>.</source>
          <target state="translated">要更改为新 <ph id="ph1">&lt;see langword="Type" /&gt;</ph> 的对象。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>The new <ph id="ph1">&lt;see langword="Type" /&gt;</ph> that <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> will become.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 将变成的新 <ph id="ph1">&lt;see langword="Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> that is used to control the coercion of data types.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> 实例，用于控制数据类型的强制转换。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则使用当前线程的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Note   For example, this parameter is necessary to convert a <ph id="ph1">&lt;see langword="String" /&gt;</ph> that represents 1000 to a <ph id="ph2">&lt;see langword="Double" /&gt;</ph> value, because 1000 is represented differently by different cultures.</source>
          <target state="translated">注意   例如，此参数对于将表示 1000 的 <ph id="ph1">&lt;see langword="String" /&gt;</ph> 转换为 <ph id="ph2">&lt;see langword="Double" /&gt;</ph> 值是必需的，因为不同的区域性表示 1000 的形式不同。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Changes the type of the given <ph id="ph1">&lt;see langword="Object" /&gt;</ph> to the given <ph id="ph2">&lt;see langword="Type" /&gt;</ph>.</source>
          <target state="translated">将给定 <ph id="ph1">&lt;see langword="Object" /&gt;</ph> 的类型更改为给定 <ph id="ph2">&lt;see langword="Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>An object that contains the given value as the new type.</source>
          <target state="translated">一个包含作为新类型的给定值的对象。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Reflection models the accessibility rules of the common type system.</source>
          <target state="translated">反射建模常规类型系统可访问性的规则。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</source>
          <target state="translated">例如，如果调用方在同一程序集，调用方不将特殊权限需要用于内部成员。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Otherwise, the caller needs <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>.</source>
          <target state="translated">否则，调用方需要<ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>This is consistent with lookup of members that are protected, private, and so on.</source>
          <target state="translated">这是与受保护的成员的查找一致、 专用和等。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>The general principle is that <ph id="ph1">`ChangeType`</ph> should perform only widening coercions, which never lose data.</source>
          <target state="translated">一般原则是，<ph id="ph1">`ChangeType`</ph>应执行仅扩大强制转换，永远不会丢失数据。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</source>
          <target state="translated">扩大强制的一个示例强制转换为 64 位有符号的整数的值将 32 位有符号的整数的值。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>This is distinguished from a narrowing coercion, which may lose data.</source>
          <target state="translated">这被有别于收缩强制不同，后者可能会丢失数据。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</source>
          <target state="translated">收缩强制的一个示例强制转换为 32 位有符号整数一个 64 位带符号的整数。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>The following table lists the coercions performed by the default <ph id="ph1">`ChangeType`</ph>.</source>
          <target state="translated">下表列出了默认情况下执行的强制<ph id="ph1">`ChangeType`</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Source type</source>
          <target state="translated">源类型</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Target type</source>
          <target state="translated">目标类型</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Any type</source>
          <target state="translated">任何类型</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Its base type.</source>
          <target state="translated">与其基类型。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Any type</source>
          <target state="translated">任何类型</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>The interface it implements.</source>
          <target state="translated">它实现的接口。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Char</source>
          <target state="translated">Char</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>UInt16, UInt32, Int32, UInt64, Int64, Single, Double</source>
          <target state="translated">UInt16、UInt32、Int32、UInt64、Int64、Single、Double</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Byte</source>
          <target state="translated">Byte</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double</source>
          <target state="translated">Char、UInt16、Int16、UInt32、Int32、UInt64、Int64、Single、Double</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>SByte</source>
          <target state="translated">SByte</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Int16, Int32, Int64, Single, Double</source>
          <target state="translated">Int16、Int32、Int64、Single、Double</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>UInt16</source>
          <target state="translated">UInt16</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>UInt32, Int32, UInt64, Int64, Single, Double</source>
          <target state="translated">UInt32、Int32、UInt64、Int64、Single、Double</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Int16</source>
          <target state="translated">Int16</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Int32, Int64, Single, Double</source>
          <target state="translated">Int32、Int64、Single、Double</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>UInt32</source>
          <target state="translated">UInt32</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>UInt64, Int64, Single, Double</source>
          <target state="translated">UInt64、Int64、Single、Double</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Int32</source>
          <target state="translated">Int32</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Int64, Single, Double</source>
          <target state="translated">Int64、Single、Double</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>UInt64</source>
          <target state="translated">UInt64</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Single, Double</source>
          <target state="translated">Single、Double</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Int64</source>
          <target state="translated">Int64</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Single, Double</source>
          <target state="translated">Single、Double</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Single</source>
          <target state="translated">Single</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Double</source>
          <target state="translated">Double</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>Non-reference</source>
          <target state="translated">非引用</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
          <source>By-reference.</source>
          <target state="translated">按引用。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)">
          <source>The actual arguments that are passed in.</source>
          <target state="translated">传入的实参。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)">
          <source>Both the types and values of the arguments can be changed.</source>
          <target state="translated">参数的类型和值都可更改。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)">
          <source>A binder-provided object that keeps track of argument reordering.</source>
          <target state="translated">联编程序提供的对象，用于跟踪参数的重新排序。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)">
          <source>Upon returning from <ph id="ph1">&lt;see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" /&gt;</ph>, restores the <ph id="ph2">&lt;paramref name="args" /&gt;</ph> argument to what it was when it came from <ph id="ph3">&lt;see langword="BindToMethod" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" /&gt;</ph> 返回后，将 <ph id="ph2">&lt;paramref name="args" /&gt;</ph> 参数还原为从 <ph id="ph3">&lt;see langword="BindToMethod" /&gt;</ph> 传入时的状态。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)">
          <source>The common language runtime calls this method if <ph id="ph1">`state`</ph> is not <ph id="ph2">`null`</ph> after a return from <ph id="ph3">`BindToMethod`</ph>.</source>
          <target state="translated">公共语言运行时调用此方法，如果<ph id="ph1">`state`</ph>不<ph id="ph2">`null`</ph>后从返回<ph id="ph3">`BindToMethod`</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的按位组合。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>The set of methods that are candidates for matching.</source>
          <target state="translated">用于匹配的候选方法集。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>For example, when a <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object is used by <ph id="ph2">&lt;see cref="Overload:System.Type.InvokeMember" /&gt;</ph>, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">例如，当 <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> 使用 <ph id="ph2">&lt;see cref="Overload:System.Type.InvokeMember" /&gt;</ph> 对象时，此参数将指定反射已确定为可能匹配项的方法集，通常是因为它们有正确的成员名称。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default implementation provided by <ph id="ph1">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> changes the order of this array.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> 提供的默认实现会更改此数组的顺序。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>The parameter types used to locate a matching method.</source>
          <target state="translated">用于定位匹配方法的参数类型。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</source>
          <target state="translated">使绑定能够处理在其中修改了类型的参数签名的参数修饰符数组。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>Selects a method from the given set of methods, based on the argument type.</source>
          <target state="translated">基于参数类型，从给定的方法集中选择一个方法。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>The matching method, if found; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到，则为匹配的方法；否则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method should return <ph id="ph1">`null`</ph> if no method matches the criteria.</source>
          <target state="translated">此方法应返回<ph id="ph1">`null`</ph>如果没有方法与条件匹配。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method controls the selection provided by the <ph id="ph1">`GetConstructor`</ph> and <ph id="ph2">`GetMethod`</ph> methods on <ph id="ph3">`Type`</ph>.</source>
          <target state="translated">此方法控制由所选内容<ph id="ph1">`GetConstructor`</ph>和<ph id="ph2">`GetMethod`</ph>方法<ph id="ph3">`Type`</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>For the default binder, <ph id="ph1">&lt;paramref name="match" /&gt;</ph> contains multiple methods that are equally good matches for the parameter types described by <ph id="ph2">&lt;paramref name="types" /&gt;</ph>.</source>
          <target state="translated">对于默认联编程序，<ph id="ph1">&lt;paramref name="match" /&gt;</ph> 包含多个与由 <ph id="ph2">&lt;paramref name="types" /&gt;</ph> 描述的参数类型良好匹配且匹配程序相同的方法。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>For example, the array in <ph id="ph1">&lt;paramref name="types" /&gt;</ph> contains a <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> object for <bpt id="p1">&lt;c&gt;</bpt>MyClass<ept id="p1">&lt;/c&gt;</ept> and the array in <ph id="ph3">&lt;paramref name="match" /&gt;</ph> contains a method that takes a base class of <bpt id="p2">&lt;c&gt;</bpt>MyClass<ept id="p2">&lt;/c&gt;</ept> and a method that takes an interface that <bpt id="p3">&lt;c&gt;</bpt>MyClass<ept id="p3">&lt;/c&gt;</ept> implements.</source>
          <target state="translated">例如，<ph id="ph1">&lt;paramref name="types" /&gt;</ph> 中的数组包含一个用于 <bpt id="p1">&lt;c&gt;</bpt>MyClass<ept id="p1">&lt;/c&gt;</ept> 的 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 对象，并且 <ph id="ph3">&lt;paramref name="match" /&gt;</ph> 中的数组包含一个采用 <bpt id="p2">&lt;c&gt;</bpt>MyClass<ept id="p2">&lt;/c&gt;</ept> 的基类的方法和一个采用 <bpt id="p3">&lt;c&gt;</bpt>MyClass<ept id="p3">&lt;/c&gt;</ept> 实现的接口的方法。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>For the default binder, <ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty array.</source>
          <target state="translated">对于默认联编程序，<ph id="ph1">&lt;paramref name="match" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 或一个空数组。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
          <source>An element of <ph id="ph1">&lt;paramref name="types" /&gt;</ph> derives from <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>, but is not of type <ph id="ph3">&lt;see langword="RuntimeType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="types" /&gt;</ph> 的元素从 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 派生，但并不属于类型 <ph id="ph3">&lt;see langword="RuntimeType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的按位组合。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The set of properties that are candidates for matching.</source>
          <target state="translated">用于匹配的候选属性集。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>For example, when a <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> object is used by <ph id="ph2">&lt;see cref="Overload:System.Type.InvokeMember" /&gt;</ph>, this parameter specifies the set of properties that reflection has determined to be possible matches, typically because they have the correct member name.</source>
          <target state="translated">例如，当 <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> 使用 <ph id="ph2">&lt;see cref="Overload:System.Type.InvokeMember" /&gt;</ph> 对象时，此参数将指定反射已确定为可能匹配项的属性集，通常是因为它们有正确的成员名称。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The default implementation provided by <ph id="ph1">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> changes the order of this array.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="P:System.Type.DefaultBinder" /&gt;</ph> 提供的默认实现会更改此数组的顺序。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The return value the matching property must have.</source>
          <target state="translated">匹配属性必须具有的返回值。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The index types of the property being searched for.</source>
          <target state="translated">所搜索的属性的索引类型。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Used for index properties such as the indexer for a class.</source>
          <target state="translated">用于索引属性，如类的索引器。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</source>
          <target state="translated">使绑定能够处理在其中修改了类型的参数签名的参数修饰符数组。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Selects a property from the given set of properties, based on the specified criteria.</source>
          <target state="translated">基于指定的判据，从给定的属性集中选择一个属性。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The matching property.</source>
          <target state="translated">匹配的属性。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method controls the selection provided by the <ph id="ph1">`GetProperty`</ph> method on <ph id="ph2">`Type`</ph>.</source>
          <target state="translated">此方法控制由所选内容<ph id="ph1">`GetProperty`</ph>方法<ph id="ph2">`Type`</ph>。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>For the default binder, <ph id="ph1">&lt;paramref name="match" /&gt;</ph> contains multiple properties that are equally good matches for <ph id="ph2">&lt;paramref name="returnType" /&gt;</ph> and <ph id="ph3">&lt;paramref name="indexes" /&gt;</ph>.</source>
          <target state="translated">对于默认联编程序，<ph id="ph1">&lt;paramref name="match" /&gt;</ph> 包含多个与 <ph id="ph2">&lt;paramref name="returnType" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="indexes" /&gt;</ph> 良好匹配且匹配程序相同的属性。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>For the default binder, <ph id="ph1">&lt;paramref name="match" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty array.</source>
          <target state="translated">对于默认联编程序，<ph id="ph1">&lt;paramref name="match" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 或一个空数组。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>