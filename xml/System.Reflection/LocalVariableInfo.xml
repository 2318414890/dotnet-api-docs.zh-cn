<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LocalVariableInfo.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57f991c6608857fb08e627a399d44036dd44f06f9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f991c6608857fb08e627a399d44036dd44f06f9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.LocalVariableInfo">
          <source>Discovers the attributes of a local variable and provides access to local variable metadata.</source>
          <target state="translated">发现局部变量的属性，并提供对本地变量元数据的访问权限。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.LocalVariableInfo">
          <source>To get a list of local variables in a method, use the <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">若要获取方法中的局部变量的列表，请使用<ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.LocalVariableInfo">
          <source>Use the <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph> method to obtain the <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> for a <ph id="ph3">&lt;xref:System.Reflection.MethodInfo&gt;</ph> object.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType&gt;</ph>方法来获取<ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph>为<ph id="ph3">&lt;xref:System.Reflection.MethodInfo&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.LocalVariableInfo">
          <source>Local variable names are not persisted in metadata.</source>
          <target state="translated">本地变量名不会保留在元数据。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.LocalVariableInfo">
          <source>In Microsoft intermediate language (MSIL), local variables are accessed by their position in the local variable signature.</source>
          <target state="translated">在 Microsoft 中间语言 (MSIL)，本地变量进行访问的局部变量签名中的位置。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.LocalVariableInfo">
          <source>The following example defines a test method named <ph id="ph1">`MethodBodyExample`</ph>, and displays its local variable information.</source>
          <target state="translated">下面的示例定义一个名为的测试方法<ph id="ph1">`MethodBodyExample`</ph>，并显示其本地变量的信息。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.LocalVariableInfo">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt;</ph> method is used to obtain a <ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph> object for the test method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBase.GetMethodBody%2A&gt;</ph>方法用于获取<ph id="ph2">&lt;xref:System.Reflection.MethodBody&gt;</ph>为测试方法的对象。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.LocalVariableInfo">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph> property is then used to obtain a list of <ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph> objects and to display their types and index order.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.MethodBody.LocalVariables%2A&gt;</ph>然后使用属性来获取的列表<ph id="ph2">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph>对象并将显示其类型和索引顺序。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.LocalVariableInfo">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Reflection.MethodBody&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.LocalVariableInfo.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.LocalVariableInfo" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Reflection.LocalVariableInfo" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.LocalVariableInfo.#ctor">
          <source>This constructor is invoked by derived classes during the construction of <ph id="ph1">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph> objects.</source>
          <target state="translated">此构造函数由派生类调用的构造过程<ph id="ph1">&lt;xref:System.Reflection.LocalVariableInfo&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Reflection.LocalVariableInfo.IsPinned">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that indicates whether the object referred to by the local variable is pinned in memory.</source>
          <target state="translated">获取一个 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，该值指示由局部变量引用的对象是否被固定在内存中。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.LocalVariableInfo.IsPinned">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object referred to by the variable is pinned in memory; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果由变量引用的对象被固定在内存中，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.LocalVariableInfo.IsPinned">
          <source>In unsafe code, an object must be pinned before it can be referred to by an unmanaged pointer.</source>
          <target state="translated">在不安全代码中，可以由非托管指针引用之前，必须固定对象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.LocalVariableInfo.IsPinned">
          <source>While the referenced object is pinned, it cannot be moved by garbage collection.</source>
          <target state="translated">被引用的对象已固定，而垃圾回收无法移动它。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Reflection.LocalVariableInfo.LocalIndex">
          <source>Gets the index of the local variable within the method body.</source>
          <target state="translated">获取方法体内局部变量的索引。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.LocalVariableInfo.LocalIndex">
          <source>An integer value that represents the order of declaration of the local variable within the method body.</source>
          <target state="translated">一个整数值，表示方法体内局部变量的声明顺序。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.LocalVariableInfo.LocalIndex">
          <source>Index numbers are assigned to local variables in the order in which they are declared.</source>
          <target state="translated">索引号分配给本地变量声明它们的顺序。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Reflection.LocalVariableInfo.LocalType">
          <source>Gets the type of the local variable.</source>
          <target state="translated">获取局部变量的类型。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.LocalVariableInfo.LocalType">
          <source>The type of the local variable.</source>
          <target state="translated">局部变量的类型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Reflection.LocalVariableInfo.ToString">
          <source>Returns a user-readable string that describes the local variable.</source>
          <target state="translated">返回一个描述局部变量的用户可读的字符串。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Reflection.LocalVariableInfo.ToString">
          <source>A string that displays information about the local variable, including the type name, index, and pinned status.</source>
          <target state="translated">一个字符串，显示有关局部变量的信息，包括类型名称、索引和固定状态。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>