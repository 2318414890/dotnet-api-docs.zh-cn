<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IXmlJsonReaderInitializer.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac533b58791fb6938681a3cf22ad5828eae584289ee.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33b58791fb6938681a3cf22ad5828eae584289ee</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>Specifies the interface for initializing a JavaScript Object Notation (JSON) reader when reusing them to read from a particular stream or buffer.</source>
          <target state="translated">指定在重用 JavaScript 对象表示法 (JSON) 读取器从特定流或缓冲区中读取数据时对该读取器进行初始化的接口。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> objects created by one of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A&gt;</ph> methods implement this interface and are initialized ready to read JSON-encoded data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> 方法之一创建的 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A&gt;</ph> 对象实现了此接口，可随时对这些对象进行初始化以读取 JSON 编码数据。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>But if a user wants to reuse the same <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> object to read other JSON-encoded data, then the reader must be initialized to the second dataset to be read by using one of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A&gt;</ph> methods.</source>
          <target state="translated">但是，如果用户要重用相同的 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> 对象来读取其他 JSON 编码数据，则必须使用 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A&gt;</ph> 方法之一将读取器初始化为要读取的第二个数据集。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified stream or buffer that contains JSON-encoded data.</source>
          <target state="translated">将支持 JavaScript 对象表示法 (JSON) 的读取器重新初始化为包含 JSON 编码数据的指定流或缓冲区。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> objects created by one of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A&gt;</ph> methods implement this interface and are ready to read JSON-encoded data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> 方法之一创建的 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader%2A&gt;</ph> 对象实现了此接口，这些对象可随时读取 JSON 编码数据。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>But if a user wants to reuse the same <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> object to read other JSON-encoded data, then the reader must be initialized to the second dataset to be read by using the one of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A&gt;</ph> methods.</source>
          <target state="translated">但是，如果用户要重用相同的 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> 对象来读取其他 JSON 编码数据，则必须使用 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%2A&gt;</ph> 方法之一将读取器初始化为要读取的第二个数据集。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A&gt;</ph> value set as part of the <ph id="ph2">`quotas`</ph> parameter only limits the amount of information being read into memory when the input is being read from a stream with the <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method and is not enforced when the <ph id="ph4">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method is used to read information from a buffer.</source>
          <target state="translated">作为 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A&gt;</ph> 参数一部分设置的 <ph id="ph2">`quotas`</ph> 值仅限制在使用 <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法从流中读取输入时读入内存的信息量，使用 <ph id="ph4">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法从缓冲区中读取信息时不会强制实施该值。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
          <source>The limits on the number of attributes that can be loaded are not relevant to the JSON context.</source>
          <target state="translated">可加载属性的数量限制与 JSON 上下文无关。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> from which to read.</source>
          <target state="translated">要从中读取数据的输入 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> used by the reader.</source>
          <target state="translated">读取器使用的 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReaderQuotas" /&gt;</ph> to apply.</source>
          <target state="translated">要应用的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReaderQuotas" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>Delegate to call when the reader is closed.</source>
          <target state="translated">读取器关闭时调用的委托。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified stream that contains JSON-encoded data.</source>
          <target state="translated">将支持 JavaScript 对象表示法 (JSON) 的读取器重新初始化为包含 JSON 编码数据的指定流。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>A <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> object that reads JSON-encoded streams can be reused by calling the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method to reinitialize it.</source>
          <target state="translated">通过调用 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> 方法重新初始化读取 JSON 编码流的 <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 对象，可以重用该对象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The reader can interpret the UTF-8 and the UTF-16 (big- or little-endian) encodings.</source>
          <target state="translated">读取器可以解释 UTF-8 和 UTF-16（Little-Endian 或 Big-Endian）编码。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The reader uses the encoding set at initialization time if one is passed or the encoding is automatically detected if <ph id="ph1">`null`</ph> is passed.</source>
          <target state="translated">如果传递 1，则读取器在初始化时使用该编码集；如果传递 <ph id="ph1">`null`</ph>，则自动检测编码。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A&gt;</ph> value set as part of the <ph id="ph2">`quotas`</ph> parameter only limits the amount of information being read into memory when the input is being read from a stream with the <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method and is not enforced when the <ph id="ph4">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method is used to read information from a buffer.</source>
          <target state="translated">作为 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A&gt;</ph> 参数一部分设置的 <ph id="ph2">`quotas`</ph> 值仅限制在使用 <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法从流中读取输入时读入内存的信息量，使用 <ph id="ph4">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法从缓冲区中读取信息时不会强制实施该值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The limits on the number of attributes that can be loaded are not relevant to the JSON context.</source>
          <target state="translated">可加载属性的数量限制与 JSON 上下文无关。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The input <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> buffer array from which to read.</source>
          <target state="translated">要从中读取数据的输入 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 缓冲区数组。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The starting position from which to read in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">在缓冲区<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>中开始读取数据的位置。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The number of bytes that can be read from <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">可以从缓冲区<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>中读取的字节数。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> used by the reader.</source>
          <target state="translated">读取器使用的 <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReaderQuotas" /&gt;</ph> to apply.</source>
          <target state="translated">要应用的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReaderQuotas" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.OnXmlDictionaryReaderClose" /&gt;</ph> delegate to call when the reader is closed.</source>
          <target state="translated">在读取器关闭时调用的 <ph id="ph1">&lt;see cref="T:System.Xml.OnXmlDictionaryReaderClose" /&gt;</ph> 委托。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified buffer that contains JSON-encoded data.</source>
          <target state="translated">将支持 JavaScript 对象表示法 (JSON) 的读取器重新初始化为包含 JSON 编码数据的指定缓冲区。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>A <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> object that reads a JSON-encoded buffered <ph id="ph2">&lt;xref:System.Byte&gt;</ph> can be reused by calling the <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method to reinitialize it.</source>
          <target state="translated">通过调用 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> 方法重新初始化读取 JSON 编码缓冲 <ph id="ph2">&lt;xref:System.Byte&gt;</ph> 的 <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 对象，可以重用该对象。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The reader can interpret the UTF-8 and the UTF-16 (big- or little-endian) encodings.</source>
          <target state="translated">读取器可以解释 UTF-8 和 UTF-16（Little-Endian 或 Big-Endian）编码。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The reader uses the encoding set at initialization time if one is passed or the encoding is automatically detected if <ph id="ph1">`null`</ph> is passed.</source>
          <target state="translated">如果传递 1，则读取器在初始化时使用该编码集；如果传递 <ph id="ph1">`null`</ph>，则自动检测编码。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A&gt;</ph> value set as part of the <ph id="ph2">`quotas`</ph> parameter only limits the amount of information being read into memory when the input is being read from a stream with the <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method and is not enforced when the <ph id="ph4">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> method is used to read information from a buffer.</source>
          <target state="translated">作为 <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A&gt;</ph> 参数一部分设置的 <ph id="ph2">`quotas`</ph> 值仅限制在使用 <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法从流中读取输入时读入内存的信息量，使用 <ph id="ph4">&lt;xref:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%2CSystem.Xml.XmlDictionaryReaderQuotas%2CSystem.Xml.OnXmlDictionaryReaderClose%29&gt;</ph> 方法从缓冲区中读取信息时不会强制实施该值。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
          <source>The limits on the number of attributes that can be loaded are not relevant to the JSON context.</source>
          <target state="translated">可加载属性的数量限制与 JSON 上下文无关。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>