<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CacheRequest.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eb40c791287059e1abd692179019a89d57ea0797.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb40c791287059e1abd692179019a89d57ea0797</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.CacheRequest">
          <source>Specifies properties and patterns that the UI Automation framework caches when an <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph> is obtained.</source>
          <target state="translated">指定在获得 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph> 时，UI 自动化框架缓存的属性和模式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Retrieving properties and patterns through <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> requires cross-process calls that can slow down performance.</source>
          <target state="translated">检索属性和模式通过<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>需要跨进程调用，这会降低性能。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.</source>
          <target state="translated">通过缓存属性和模式批处理操作中的值，你可以增强你的应用程序的性能。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Create a new cache request by calling the class constructor.</source>
          <target state="translated">通过调用类构造函数创建新的缓存请求。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>The request is populated by repeated calls to the <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Add%2A&gt;</ph> method.</source>
          <target state="translated">通过重复调用来填充该请求<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Only a single <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> can be active.</source>
          <target state="translated">只有一个<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>可处于活动状态。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>There are two ways to activate a request:</source>
          <target state="translated">有两种方法来激活请求：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> on the request.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph>针对此请求。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>This pushes the request onto the stack, and the request is popped when the object is disposed.</source>
          <target state="translated">这将推送到堆栈上，请求并请求将弹出时释放此对象。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>To ensure disposal even if an exception is raised, use the return value from <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> within a <ph id="ph2">`using`</ph> block (<ph id="ph3">`Using`</ph> in <ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">若要确保处置，即使引发异常，请使用中的返回值<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph>内<ph id="ph2">`using`</ph>块 (<ph id="ph3">`Using`</ph>中<ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>)。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Put the request onto the internal stack by calling <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>.</source>
          <target state="translated">放置在内部堆栈上的请求，通过调用<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Only the topmost request on the stack is active, and it must be the next one removed from the stack by <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>.</source>
          <target state="translated">仅在堆栈上最顶层的请求处于活动状态，并且它必须是从堆栈中移除的下一个<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Popping the request deactivates it.</source>
          <target state="translated">弹出请求停用它。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements obtained while the request is active will have cached values for the properties and patterns specified.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 获取请求处于活动状态时的元素将已经缓存的属性和模式指定的值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to cache patterns and properties.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph>来缓存模式和属性。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> to cache patterns and properties.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>来缓存模式和属性。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.#ctor">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> is created, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identifier is added as a default property to cache.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>创建后，<ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph>标识符作为默认属性添加到缓存。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>Sets this <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> as the active specification for the items that are returned when an <ph id="ph2">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph> is requested on the same thread.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> 设置为在同一线程中请求 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.AutomationElement" /&gt;</ph> 时返回的项的活动规范。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>The object that can be used to dispose the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">可用于释放 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> 的对象。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>Using this method is usually preferable to using <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> as a means of activating the <ph id="ph3">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>.</source>
          <target state="translated">使用此方法时通常最好使用<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>作为一种激活<ph id="ph3">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>The object is pushed onto the stack when <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> is called, and then popped off when it is disposed.</source>
          <target state="translated">对象推送到堆栈上时<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph>调用，该方法并释放时，然后弹出。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>To ensure disposal, place the return value within a <ph id="ph1">`using`</ph> block (<ph id="ph2">`Using`</ph> in <ph id="ph3">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
          <target state="translated">为了确保释放对象，将返回值中的<ph id="ph1">`using`</ph>块 (<ph id="ph2">`Using`</ph>中<ph id="ph3">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>)。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Activate">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to cache patterns and properties.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph>来缓存模式和属性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.CacheRequest">
          <source>Adds a property or pattern identifier to a <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">将一个属性或模式标识符添加到 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> object is created, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identifier is added as a default property to cache.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>创建对象时，<ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph>标识符作为默认属性添加到缓存。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.CacheRequest">
          <source>Adding an object that is already in the cache request has no effect.</source>
          <target state="translated">添加已在缓存请求的对象没有任何影响。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>An identifier specifying a pattern to cache.</source>
          <target state="translated">一个标识符，指定要缓存的模式。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationPattern" /&gt;</ph> identifier to this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationPattern" /&gt;</ph> 标识符添加到此 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>Adding a pattern that is already in the cache request has no effect.</source>
          <target state="translated">添加已在缓存请求的模式没有任何影响。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>The following example shows how to construct a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> and add a pattern to be cached.</source>
          <target state="translated">下面的示例演示如何构造<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>并添加要缓存的模式。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> is active.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> 处于活动状态。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>An identifier specifying a property value to cache.</source>
          <target state="translated">一个标识符，指定要缓存的属性值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationProperty" /&gt;</ph> identifier to this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.AutomationProperty" /&gt;</ph> 标识符添加到此 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> is created, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identifier is added as a default property to cache.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>创建后，<ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph>标识符作为默认属性添加到缓存。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>Adding a property that is already in the cache request has no effect.</source>
          <target state="translated">添加一个属性，已缓存请求中没有任何影响。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>The following example shows how to construct a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> and add a property to be cached.</source>
          <target state="translated">下面的示例演示如何构造<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>并添加要缓存的属性。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> is active.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> 处于活动状态。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source>Gets or sets a value that specifies whether returned elements should contain full references to the underlying <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>, or only cached information.</source>
          <target state="translated">获取或设置一个值，该值指定返回的元素是应包含对基础 <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> 的完整引用，还是仅包含缓存的信息。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source><ph id="ph1">&lt;see cref="F:System.Windows.Automation.AutomationElementMode.Full" /&gt;</ph> if the returned elements have a full reference to the underlying <ph id="ph2">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>; otherwise <ph id="ph3">&lt;see cref="F:System.Windows.Automation.AutomationElementMode.None" /&gt;</ph>.</source>
          <target state="translated">如果返回的元素包含对基础 <ph id="ph2">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph> 的完整引用，则为 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.AutomationElementMode.Full" /&gt;</ph>；否则为 <ph id="ph3">&lt;see cref="F:System.Windows.Automation.AutomationElementMode.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.Full&gt;</ph> is the default value, and specifies that returned elements contain a full reference to the underlying <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.Full&gt;</ph> 是默认值，并指定返回的元素，包含对基础的完全引用<ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph> specifies that the returned elements have no reference to the underlying <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>, and contain only cached information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph> 指定返回的元素具有未引用基础<ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>，并只包含缓存的信息。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source>Certain operations on elements, including <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.SetFocus%2A&gt;</ph>, require a full reference; attempting to perform these on an element that has none results in an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">对于元素，包括某些操作<ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.SetFocus%2A&gt;</ph>，需要完整的参考; 尝试执行这些上都未元素会导致<ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph> can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph>可以是时需要仅有属性，效率更高，因为它避免了开销参与设置完整的引用。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.AutomationElementMode">
          <source>In the following example, <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph>, with the result that only cached properties and patterns are available for the retrieved object.</source>
          <target state="translated">在下面的示例中，<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A&gt;</ph>设置为<ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph>、 结果只能使用缓存的属性和模式是可用于检索到的对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Clone">
          <source>Creates a copy of this <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">创建此 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> 的副本。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Clone">
          <source>A modifiable copy of the current object.</source>
          <target state="translated">当前对象的可修改副本。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.Current">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> that is active on the current thread.</source>
          <target state="translated">获取当前线程中处于活动状态的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.Current">
          <source>The active <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>.</source>
          <target state="translated">活动的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>Removes the active <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> from the internal stack for the current thread.</source>
          <target state="translated">从当前线程的内部堆栈中移除活动的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>Only the currently active request can be removed using the <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> method.</source>
          <target state="translated">可以使用删除仅当前处于活动状态的请求<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>Attempting to remove a request that is not the current one results in an exception.</source>
          <target state="translated">在尝试删除是不引发异常的当前一个结果的请求。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>Unless you are nesting cache requests, it is preferable to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to place the request on the stack.</source>
          <target state="translated">除非要嵌套缓存请求，最好使用<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph>将请求放在堆栈上。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>The reason is that you can use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> within a <ph id="ph2">`using`</ph> block (<ph id="ph3">`Using`</ph> in <ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>), ensuring that the request is popped off the stack even if an exception is raised.</source>
          <target state="translated">原因是，你可以使用<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph>内<ph id="ph2">`using`</ph>块 (<ph id="ph3">`Using`</ph>中<ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>)，确保请求将从堆栈弹出，即使引发异常。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>The following example shows how to deactivate a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> by using <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何停用<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>使用<ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Pop">
          <source>An attempt was made to remove a cache request that was not the last one pushed onto the stack.</source>
          <target state="translated">尝试移除的缓存请求不是最后压入堆栈的堆栈请求。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>Places the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> on the internal state stack, making it the active request on the current thread.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.CacheRequest" /&gt;</ph> 压入内部状态堆栈，并使它成为当前线程中的活动请求。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>Multiple <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> objects can be placed onto the state stack.</source>
          <target state="translated">多个<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>对象可放置到状态堆栈。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>Cache requests must be removed from the stack in the order they were pushed on; otherwise, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is raised.</source>
          <target state="translated">必须从; 它们已推送的顺序中的堆栈中删除缓存请求否则为<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>引发异常。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>Unless you are nesting cache requests, it is preferable to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to place the request on the stack.</source>
          <target state="translated">除非要嵌套缓存请求，最好使用<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph>将请求放在堆栈上。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>The reason is that you can use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> within a <ph id="ph2">`using`</ph> block (<ph id="ph3">`Using`</ph> in <ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>), ensuring that the request is popped off the stack even if an exception is raised.</source>
          <target state="translated">原因是，你可以使用<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph>内<ph id="ph2">`using`</ph>块 (<ph id="ph3">`Using`</ph>中<ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>)，确保请求将从堆栈弹出，即使引发异常。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.CacheRequest.Push">
          <source>The following example shows how to activate a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> by using <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何激活<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>使用<ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>Gets or sets a value specifying the view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree to use when caching.</source>
          <target state="translated">获取或设置一个值，指定在缓存时要使用的 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>元素树的视图。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>The view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>元素树的视图。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>The default view is <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Automation.ControlViewCondition" /&gt;</ph>.</source>
          <target state="translated">默认视图为 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Automation.ControlViewCondition" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>For additional information on views of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree, see <bpt id="p1">[</bpt>UI Automation Tree Overview<ept id="p1">](~/docs/framework/ui-automation/ui-automation-tree-overview.md)</ept>.</source>
          <target state="translated">有关其他信息的视图<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>元素树中，请参阅<bpt id="p1">[</bpt>UI 自动化树概述<ept id="p1">](~/docs/framework/ui-automation/ui-automation-tree-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeFilter">
          <source>In the following example, <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.TreeFilter%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Automation.Automation.RawViewCondition&gt;</ph> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.</source>
          <target state="translated">在下面的示例中，<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.TreeFilter%2A&gt;</ph>设置为<ph id="ph2">&lt;xref:System.Windows.Automation.Automation.RawViewCondition&gt;</ph>，以便所有元素，而不考虑它们是否的内容视图或控件视图的一部分都进行缓存。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</source>
          <target state="translated">获取或设置一个值，该值指定是仅对子树的根进行缓存，还是也对其子级或子代进行缓存。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>One or more of <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Element" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Windows.Automation.TreeScope.Children" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Windows.Automation.TreeScope.Descendants" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Windows.Automation.TreeScope.Subtree" /&gt;</ph>.</source>
          <target state="translated">一个或多个 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Element" /&gt;</ph>、<ph id="ph2">&lt;see cref="F:System.Windows.Automation.TreeScope.Children" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Windows.Automation.TreeScope.Descendants" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.Windows.Automation.TreeScope.Subtree" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Element" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Element" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.FindFirst%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.FindAll%2A&gt;</ph> is called.</source>
          <target state="translated">缓存的范围相对于或多个对象正在提取，不是相对于其上的对象<ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.FindFirst%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.FindAll%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>See the example.</source>
          <target state="translated">请参阅示例。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>In the following example, a list box element is obtained from the parent window element while a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> is active and <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.TreeScope%2A&gt;</ph> is <ph id="ph3">&lt;xref:System.Windows.Automation.TreeScope.Children&gt;</ph>.</source>
          <target state="translated">在下面的示例中，列表框元素获取从父窗口元素时<ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>处于活动状态和<ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.TreeScope%2A&gt;</ph>是<ph id="ph3">&lt;xref:System.Windows.Automation.TreeScope.Children&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.CachedChildren%2A&gt;</ph> of the list box.</source>
          <target state="translated">子元素 （即，列表项） 的指定的属性存储在缓存中，并且可以从检索<ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.CachedChildren%2A&gt;</ph>列表框。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.CacheRequest.TreeScope">
          <source>An attempt was made to set the property to <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Parent" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Automation.TreeScope.Ancestors" /&gt;</ph>.</source>
          <target state="translated">尝试将该属性设置为 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TreeScope.Parent" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="F:System.Windows.Automation.TreeScope.Ancestors" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>