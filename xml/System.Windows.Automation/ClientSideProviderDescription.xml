<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClientSideProviderDescription.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a9cb8a0e7c2afbb6281516f5b2fa1c639807e349.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9cb8a0e7c2afbb6281516f5b2fa1c639807e349</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.ClientSideProviderDescription">
          <source>Describes the scope of a client-side UI Automation provider so that it can be registered with the UI Automation client application.</source>
          <target state="translated">描述客户端 UI 自动化提供程序的范围，以便在 UI 自动化客户端应用程序上注册。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.ClientSideProviderDescription">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.ClientSideProviderDescription" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.ClientSideProviderDescription" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String)">
          <source>The method that creates the client-side provider for a window.</source>
          <target state="translated">为窗口创建客户端提供程序的方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String)">
          <source>The class name of the windows that the provider is used for.</source>
          <target state="translated">提供程序所用于的窗口的类名称。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.ClientSideProviderDescription" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.ClientSideProviderDescription" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String)">
          <source>When UI Automation encounters a window of class <ph id="ph1">`className`</ph>, it calls <ph id="ph2">`clientSideProviderFactoryCallback`</ph> to create an instance of the client-side provider.</source>
          <target state="translated">当 UI 自动化遇到类窗口的<ph id="ph1">`className`</ph>，它调用<ph id="ph2">`clientSideProviderFactoryCallback`</ph>创建客户端提供程序的实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String)">
          <source>If <ph id="ph1">`className`</ph> is <ph id="ph2">`null`</ph>, the provider is used for all windows for which no other provider is found.</source>
          <target state="translated">如果<ph id="ph1">`className`</ph>是<ph id="ph2">`null`</ph>，针对为其找到任何其他提供程序的所有窗口中使用的提供程序。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String)">
          <source>For example code, see <bpt id="p1">[</bpt>Create a Client-Side UI Automation Provider<ept id="p1">](~/docs/framework/ui-automation/create-a-client-side-ui-automation-provider.md)</ept>.</source>
          <target state="translated">有关示例代码，请参阅<bpt id="p1">[</bpt>创建客户端 UI 自动化提供程序<ept id="p1">](~/docs/framework/ui-automation/create-a-client-side-ui-automation-provider.md)</ept>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String,System.String,System.Windows.Automation.ClientSideProviderMatchIndicator)">
          <source>The method that creates the client-side provider for a window.</source>
          <target state="translated">为窗口创建客户端提供程序的方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String,System.String,System.Windows.Automation.ClientSideProviderMatchIndicator)">
          <source>The class name of the window that the provider is used for.</source>
          <target state="translated">提供程序所用于的窗口的类名称。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String,System.String,System.Windows.Automation.ClientSideProviderMatchIndicator)">
          <source>The name of the executable or DLL for the process where the window resides.</source>
          <target state="translated">窗口所驻留的进程的可执行文件或 DLL 的名称。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String,System.String,System.Windows.Automation.ClientSideProviderMatchIndicator)">
          <source>Flags that specify behavior when matching window class names.</source>
          <target state="translated">指定匹配窗口类名称时的行为的标志。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String,System.String,System.Windows.Automation.ClientSideProviderMatchIndicator)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.ClientSideProviderDescription" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.ClientSideProviderDescription" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String,System.String,System.Windows.Automation.ClientSideProviderMatchIndicator)">
          <source>When <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> encounters a window of class <ph id="ph2">`className`</ph> within the process specified by <ph id="ph3">`imageName`</ph>, it calls <ph id="ph4">`clientSideProviderFactoryCallback`</ph> to create an instance of the client-side provider.</source>
          <target state="translated">当<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>遇到类窗口的<ph id="ph2">`className`</ph>中指定的进程<ph id="ph3">`imageName`</ph>，它调用<ph id="ph4">`clientSideProviderFactoryCallback`</ph>创建客户端提供程序的实例。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String,System.String,System.Windows.Automation.ClientSideProviderMatchIndicator)">
          <source>If <ph id="ph1">`className`</ph> is <ph id="ph2">`null`</ph>, the provider is used for all windows for which no other provider is found.</source>
          <target state="translated">如果<ph id="ph1">`className`</ph>是<ph id="ph2">`null`</ph>，针对为其找到任何其他提供程序的所有窗口中使用的提供程序。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.ClientSideProviderDescription.#ctor(System.Windows.Automation.ClientSideProviderFactoryCallback,System.String,System.String,System.Windows.Automation.ClientSideProviderMatchIndicator)">
          <source>If <ph id="ph1">`imageName`</ph> is <ph id="ph2">`null`</ph>, the provider is used for all processes containing the window class.</source>
          <target state="translated">如果<ph id="ph1">`imageName`</ph>是<ph id="ph2">`null`</ph>，包含窗口类的所有进程使用的提供程序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.ClientSideProviderDescription.ClassName">
          <source>Gets the class name of the windows that the provider is used for.</source>
          <target state="translated">获取提供程序所用于的窗口的类名称。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ClientSideProviderDescription.ClassName">
          <source>The window class name.</source>
          <target state="translated">窗口类名称。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ClientSideProviderDescription.ClassName">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Automation.ClientSideProviderDescription.ClassName%2A&gt;</ph> is <ph id="ph2">`null`</ph>, the provider is called for all windows for which no other provider is found.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Automation.ClientSideProviderDescription.ClassName%2A&gt;</ph>是<ph id="ph2">`null`</ph>，提供程序针对为其找到任何其他提供程序的所有窗口进行调用。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.ClientSideProviderDescription.ClientSideProviderFactoryCallback">
          <source>Gets the method that creates the client-side provider.</source>
          <target state="translated">获取创建客户端提供程序的方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ClientSideProviderDescription.ClientSideProviderFactoryCallback">
          <source>The callback method.</source>
          <target state="translated">回调方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.ClientSideProviderDescription.Flags">
          <source>Gets the flags that specify behavior when matching window class names.</source>
          <target state="translated">获取指定匹配窗口类名称时的行为的标志。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ClientSideProviderDescription.Flags">
          <source>A bitwise combination of values.</source>
          <target state="translated">值的按位组合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.ClientSideProviderDescription.ImageName">
          <source>Gets the name of the executable or <ph id="ph1">[!INCLUDE[TLA#tla_dll](~/includes/tlasharptla-dll-md.md)]</ph> for the process where the window resides.</source>
          <target state="translated">获取窗口所驻留的进程的可执行文件或 <ph id="ph1">[!INCLUDE[TLA#tla_dll](~/includes/tlasharptla-dll-md.md)]</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.ClientSideProviderDescription.ImageName">
          <source>The image name.</source>
          <target state="translated">图像名称。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>