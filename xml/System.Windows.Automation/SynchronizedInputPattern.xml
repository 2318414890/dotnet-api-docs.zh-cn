<Type Name="SynchronizedInputPattern" FullName="System.Windows.Automation.SynchronizedInputPattern">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="64b85aa3eaa48cee8506aa7ec0374e06343d3029" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SynchronizedInputPattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynchronizedInputPattern extends System.Windows.Automation.BasePattern" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.SynchronizedInputPattern" />
  <TypeSignature Language="VB.NET" Value="Public Class SynchronizedInputPattern&#xA;Inherits BasePattern" />
  <TypeSignature Language="C++ CLI" Value="public ref class SynchronizedInputPattern : System::Windows::Automation::BasePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="57b12-101">表示支持同步输入事件的对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="57b12-101">Represents objects that support synchronized input events.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.SynchronizedInputPattern.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="57b12-102">停止对输入的侦听。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57b12-102">Stops listening for input.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57b12-103">如果提供程序当前正在侦听输入，它将恢复到正常操作。</span><span class="sxs-lookup"><span data-stu-id="57b12-103">If the provider is currently listening for input, it reverts to normal operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputDiscardedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent InputDiscardedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent InputDiscardedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputDiscardedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ InputDiscardedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57b12-104">标识在 WPF 丢弃输入时引发的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57b12-104">Identifies the event raised when WPF discards input.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57b12-105">UI 自动化客户端应用程序使用此标识符。</span><span class="sxs-lookup"><span data-stu-id="57b12-105">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="57b12-106">UI 自动化提供程序应使用中的等效字段<xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>。</span><span class="sxs-lookup"><span data-stu-id="57b12-106">A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputReachedOtherElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent InputReachedOtherElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent InputReachedOtherElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputReachedOtherElementEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ InputReachedOtherElementEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57b12-107">标识在接收输入的元素不是当前正在侦听输入的元素时引发的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57b12-107">Identifies the event raised when the input was received by an element other than the one currently listening for the input.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57b12-108">UI 自动化客户端应用程序使用此标识符。</span><span class="sxs-lookup"><span data-stu-id="57b12-108">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="57b12-109">UI 自动化提供程序应使用中的等效字段<xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>。</span><span class="sxs-lookup"><span data-stu-id="57b12-109">A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputReachedTargetEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent InputReachedTargetEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent InputReachedTargetEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputReachedTargetEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ InputReachedTargetEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57b12-110">标识在接收输入的元素是当前正在侦听输入的元素时引发的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57b12-110">Identifies the event raised when the input was received by the element currently listening for the input.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57b12-111">UI 自动化客户端应用程序使用此标识符。</span><span class="sxs-lookup"><span data-stu-id="57b12-111">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="57b12-112">UI 自动化提供程序应使用中的等效字段<xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>。</span><span class="sxs-lookup"><span data-stu-id="57b12-112">A UI Automation provider should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.SynchronizedInputPattern.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pattern As AutomationPattern " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationPattern ^ Pattern;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57b12-113">标识 <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> 控件模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57b12-113">Identifies the <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> control pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57b12-114">UI 自动化客户端应用程序使用此标识符。</span><span class="sxs-lookup"><span data-stu-id="57b12-114">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="57b12-115">UI 自动化提供程序应使用中的等效字段<xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>。</span><span class="sxs-lookup"><span data-stu-id="57b12-115">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.SynchronizedInputPatternIdentifiers>.</span></span>  
  
 <span data-ttu-id="57b12-116">模式标识符传递到方法，如<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>，以从指定检索控件模式感兴趣的<xref:System.Windows.Automation.AutomationElement>。</span><span class="sxs-lookup"><span data-stu-id="57b12-116">The pattern identifier is passed to methods, such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (System.Windows.Automation.SynchronizedInputType inputType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartListening(valuetype System.Windows.Automation.SynchronizedInputType inputType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.SynchronizedInputPattern.StartListening(System.Windows.Automation.SynchronizedInputType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (inputType As SynchronizedInputType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartListening(System::Windows::Automation::SynchronizedInputType inputType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputType" Type="System.Windows.Automation.SynchronizedInputType" />
      </Parameters>
      <Docs>
        <param name="inputType">
          <span data-ttu-id="57b12-117">要侦听的输入的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57b12-117">The type of input to listen for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57b12-118">指定提供程序开始对指定类型的输入进行侦听。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57b12-118">Designates that the provider start listening for input of the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57b12-119">当 WPF 找到匹配的输入时，它会检查传入的事件的路由。</span><span class="sxs-lookup"><span data-stu-id="57b12-119">When WPF finds matching input, it checks the route of the incoming event.</span></span> <span data-ttu-id="57b12-120">如果正在侦听的输入的自动化元素不在路由，则丢弃输入和<xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent>引发事件。</span><span class="sxs-lookup"><span data-stu-id="57b12-120">If the automation element that is listening for the input is not in the route, the input is discarded and the <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> event is raised.</span></span> <span data-ttu-id="57b12-121">如果在输入被接收通过侦听该类型的自动化元素<xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent>事件是引发; 否则为<xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent>引发事件。</span><span class="sxs-lookup"><span data-stu-id="57b12-121">If the input is received by the automation element listening for that type, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> event is raised; otherwise, the <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> event is raised.</span></span>  
  
 <span data-ttu-id="57b12-122">接收输入后, 提供程序将停止侦听，并将继续正常进行。</span><span class="sxs-lookup"><span data-stu-id="57b12-122">After receiving the input, the provider stops listening and continues normally.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>