<Type Name="TreeWalker" FullName="System.Windows.Automation.TreeWalker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f1967a0be38a07f0c7aa7eef3a4d6314adac314" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31911046" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TreeWalker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeWalker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.TreeWalker" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeWalker" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeWalker sealed" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用于导航 UI 自动化树的方法和属性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 UI 自动化客户端查看[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]元素作为一套桌面上<xref:System.Windows.Automation.AutomationElement>排列的树状结构中的对象。  
  
 使用<xref:System.Windows.Automation.TreeWalker>类，客户端应用程序可以导航[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]按选择的树视图，并从一个单步执行树<xref:System.Windows.Automation.AutomationElement>到另一个在指定的方向使用<xref:System.Windows.Automation.TreeWalker.GetFirstChild%2A>， <xref:System.Windows.Automation.TreeWalker.GetLastChild%2A>， <xref:System.Windows.Automation.TreeWalker.GetPreviousSibling%2A>，<xref:System.Windows.Automation.TreeWalker.GetNextSibling%2A>，和<xref:System.Windows.Automation.TreeWalker.GetParent%2A>方法。  
  
 导航[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]树进行<xref:System.Windows.Automation.TreeWalker>可能导致跨进程调用且不是与查找元素使用一样有效<xref:System.Windows.Automation.AutomationElement.FindAll%2A>或<xref:System.Windows.Automation.AutomationElement.FindFirst%2A>方法。  
  
 如果客户端应用程序可能会尝试在其自己的用户界面中查找元素，则必须进行所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]的单独线程上调用。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeWalker (System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.#ctor(System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeWalker(System::Windows::Automation::Condition ^ condition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="condition">
          <see cref="T:System.Windows.Automation.TreeWalker" /> 将要导航的 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]元素目录树的视图。</param>
        <summary>初始化 <see cref="T:System.Windows.Automation.TreeWalker" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 不匹配的元素`condition`跳过时<xref:System.Windows.Automation.TreeWalker>用于在元素树中导航。  
  
 如果客户端应用程序可能会尝试在其自己的用户界面中查找元素，则必须进行所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]的单独线程上调用。  
  
   
  
## Examples  
 下面的示例演示如何可以构造<xref:System.Windows.Automation.TreeWalker>仅在启用元素之间导航。  
  
 [!code-csharp[UIAClient_snip#174](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#174)]
 [!code-vb[UIAClient_snip#174](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#174)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Condition Condition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Condition Condition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.TreeWalker.Condition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Condition As Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Condition ^ Condition { System::Windows::Automation::Condition ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，该对象定义 <see cref="T:System.Windows.Automation.TreeWalker" /> 对象的视图。</summary>
        <value>定义视图的条件。 这是传递给构造函数的值。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.TreeWalker.#ctor(System.Windows.Automation.Condition)" />
      </Docs>
    </Member>
    <Member MemberName="ContentViewWalker">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.TreeWalker ContentViewWalker;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.TreeWalker ContentViewWalker" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TreeWalker.ContentViewWalker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentViewWalker As TreeWalker " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::TreeWalker ^ ContentViewWalker;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeWalker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示一个预定义的 <see cref="T:System.Windows.Automation.TreeWalker" />，其中包含目录树中标记为内容控件的元素的视图。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果客户端应用程序可能会尝试在其自己的用户界面中查找元素，则必须进行所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]的单独线程上调用。  
  
   
  
## Examples  
 下面的示例演示<xref:System.Windows.Automation.TreeWalker.ControlViewWalker>用于构造的子树中的元素的树视图。 使用情况<xref:System.Windows.Automation.TreeWalker.ContentViewWalker>相同。  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.IsContentElementProperty" />
        <altmember cref="F:System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      </Docs>
    </Member>
    <Member MemberName="ControlViewWalker">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.TreeWalker ControlViewWalker;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.TreeWalker ControlViewWalker" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TreeWalker.ControlViewWalker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ControlViewWalker As TreeWalker " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::TreeWalker ^ ControlViewWalker;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeWalker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示一个预定义的 <see cref="T:System.Windows.Automation.TreeWalker" />，其中包含目录树中标记为控件的元素的视图。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果客户端应用程序可能会尝试在其自己的用户界面中查找元素，则必须进行所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]的单独线程上调用。  
  
   
  
## Examples  
 下面的示例演示<xref:System.Windows.Automation.TreeWalker.ControlViewWalker>用于构造的子树中的元素的树视图。  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstChild">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的第一个子元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以拥有其他子元素，与当前视图条件不匹配，因此导航元素树时将不会返回。  
  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回的第一个子元素将在后续处理过程返回作为第一个子级。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetFirstChild (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetFirstChild(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetFirstChild(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstChild (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetFirstChild(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">从中检索第一个子级的元素。</param>
        <summary>检索指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的第一个子元素。</summary>
        <returns>第一个子元素；如果不存在此类元素，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以拥有其他子元素，与当前视图条件不匹配，因此导航元素树时将不会返回。  
  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回的第一个子元素将在后续处理过程返回作为第一个子级。  
  
   
  
## Examples  
 下面的示例演示<xref:System.Windows.Automation.TreeWalker.GetFirstChild%2A>用于构造的子树中的元素的树视图。  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetFirstChild (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetFirstChild(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetFirstChild(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstChild (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetFirstChild(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">从中检索第一个子级的元素。</param>
        <param name="request">一个缓存请求对象，它指定返回的 <see cref="T:System.Windows.Automation.AutomationElement" /> 上要进行缓存的属性和模式。</param>
        <summary>检索指定的 <see cref="T:System.Windows.Automation.AutomationElement" /> 的第一个子元素并缓存属性和模式。</summary>
        <returns>第一个子元素；如果不存在此类元素，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以拥有其他子元素，与当前视图条件不匹配，因此导航元素树时将不会返回。  
  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回的第一个子元素将在后续处理过程返回作为第一个子级。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLastChild">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的最后一个子元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以拥有其他子元素，与当前视图条件不匹配，因此导航元素树时将不会返回。  
  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回最后一个子元素将在后续处理过程返回作为最后一个子级。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLastChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetLastChild (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetLastChild(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetLastChild(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastChild (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetLastChild(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">从中检索最后一个子级的元素。</param>
        <summary>检索指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的最后一个子元素。</summary>
        <returns>作为最后一个子元素的 <see cref="T:System.Windows.Automation.AutomationElement" />；如果不存在此类元素，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以拥有其他子元素，与当前视图条件不匹配，因此导航元素树时将不会返回。  
  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回最后一个子元素将在后续处理过程返回作为最后一个子级。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetLastChild (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetLastChild(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetLastChild(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastChild (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetLastChild(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">从中检索最后一个子级的元素。</param>
        <param name="request">一个缓存请求对象，它指定返回的 <see cref="T:System.Windows.Automation.AutomationElement" /> 上要进行缓存的属性和模式。</param>
        <summary>检索指定的 <see cref="T:System.Windows.Automation.AutomationElement" /> 的最后一个子元素并缓存属性和模式。</summary>
        <returns>最后一个子元素；如果不存在此类元素，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以拥有其他子元素，与当前视图条件不匹配，因此导航元素树时将不会返回。  
  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回最后一个子元素将在后续处理过程返回作为最后一个子级。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextSibling">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的下一个同级元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以具有其他同级元素，它们不匹配的当前视图状态，因此导航元素树时将不会返回。  
  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回的下一个同级元素将在后续处理过程返回作为下一个同级。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetNextSibling (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetNextSibling(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetNextSibling(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSibling (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetNextSibling(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">从中检索下一个同级元素的 <see cref="T:System.Windows.Automation.AutomationElement" />。</param>
        <summary>检索指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的下一个同级元素。</summary>
        <returns>下一个同级元素；如果不存在此类元素，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以具有其他同级元素，它们不匹配的当前视图状态，因此导航元素树时将不会返回。  
  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回的下一个同级元素将在后续处理过程返回作为下一个同级。  
  
   
  
## Examples  
 下面的示例演示<xref:System.Windows.Automation.TreeWalker.GetNextSibling%2A>用于构造的子树中的元素的树视图。  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetNextSibling (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetNextSibling(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetNextSibling(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSibling (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetNextSibling(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">从中检索下一个同级的元素。</param>
        <param name="request">一个缓存请求对象，它指定返回的 <see cref="T:System.Windows.Automation.AutomationElement" /> 上要进行缓存的属性和模式。</param>
        <summary>检索指定的 <see cref="T:System.Windows.Automation.AutomationElement" /> 的下一个同级元素并缓存属性和模式。</summary>
        <returns>下一个同级元素；如果不存在此类元素，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以具有其他同级元素，它们不匹配的当前视图状态，因此导航元素树时将不会返回。  
  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回的下一个同级元素将在后续处理过程返回作为下一个同级。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParent">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的父元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回父元素作为父级返回在后续处理过程。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetParent (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetParent(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetParent(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetParent(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">将返回其父级的元素。</param>
        <summary>检索指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的父元素。</summary>
        <returns>父元素；如果指定元素为目录树中的根元素或者父元素在当前视图中不可见，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示<xref:System.Windows.Automation.TreeWalker.GetParent%2A>正在用于查找包含指定的元素的窗口元素。  
  
 [!code-csharp[UIAFocusTracker_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFocusTracker_snip/CSharp/FocusTracker.cs#102)]
 [!code-vb[UIAFocusTracker_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFocusTracker_snip/VisualBasic/FocusTracker.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetParent (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetParent(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetParent(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetParent(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">将返回其父级的元素。</param>
        <param name="request">一个缓存请求对象，它指定返回的 <see cref="T:System.Windows.Automation.AutomationElement" /> 上要进行缓存的成员。</param>
        <summary>检索指定的 <see cref="T:System.Windows.Automation.AutomationElement" /> 的父元素并缓存属性和模式。</summary>
        <returns>父元素；如果指定元素为目录树中的根元素或者父元素在此视图中不可见，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回父元素作为父级返回在后续处理过程。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPreviousSibling">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>检索指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的上一同级元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以具有其他同级元素，它们不匹配的当前视图状态，因此导航元素树时将不会返回。  
  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回上一个同级元素将在后续处理过程返回为上一个同级。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPreviousSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetPreviousSibling (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetPreviousSibling(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetPreviousSibling(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousSibling (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetPreviousSibling(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">从中检索上一个同级的元素。</param>
        <summary>检索指定 <see cref="T:System.Windows.Automation.AutomationElement" /> 的上一同级元素。</summary>
        <returns>上一个同级元素；如果不存在此类元素，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以具有其他同级元素，它们不匹配的当前视图状态，因此导航元素树时将不会返回。  
  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回上一个同级元素将在后续处理过程返回为上一个同级。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreviousSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetPreviousSibling (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetPreviousSibling(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetPreviousSibling(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousSibling (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetPreviousSibling(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">从中检索上一个同级的元素。</param>
        <param name="request">一个缓存请求对象，它指定返回的 <see cref="T:System.Windows.Automation.AutomationElement" /> 上要进行缓存的属性和模式。</param>
        <summary>检索指定的 <see cref="T:System.Windows.Automation.AutomationElement" /> 的上一个同级并缓存属性和模式。</summary>
        <returns>上一个同级元素；如果不存在此类元素，则为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement>可以具有其他同级元素，它们不匹配的当前视图状态，因此导航元素树时将不会返回。  
  
 结构<xref:System.Windows.Automation.AutomationElement>树更改作为可见[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的桌面的更改上的元素。 不保证元素返回上一个同级元素将在后续处理过程返回为上一个同级。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Normalize">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在 <see cref="T:System.Windows.Automation.AutomationElement" /> 的此实例所使用的树视图中检索与指定的 <see cref="T:System.Windows.Automation.TreeWalker" /> 最接近的上级元素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对元素进行规范化通过之前满足的视图条件的元素在祖先一系列在树中向上导航<xref:System.Windows.Automation.TreeWalker>达到对象。 如果到达的根元素，即使它不满足视图条件，则返回的根元素。  
  
 此方法可用于获取对引用的应用程序[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]的命中测试的元素。 应用程序可能想要仅使用特定类型的元素，并且可以使用<xref:System.Windows.Automation.TreeWalker.Normalize%2A>，确保无论最初检索到哪些元素，（例如，当滚动条获取输入的焦点），（如内容相关的元素最终检索元素）。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement Normalize (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement Normalize(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.Normalize(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Normalize (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ Normalize(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">从其开始规范化的元素。</param>
        <summary>检索节点本身（如果它满足 <see cref="P:System.Windows.Automation.TreeWalker.Condition" />）或者检索满足 <see cref="P:System.Windows.Automation.TreeWalker.Condition" /> 的最接近的父级或上级节点。</summary>
        <returns>当前视图中最接近的 <see cref="T:System.Windows.Automation.AutomationElement" />。 如果沿上级链向上导航到达根元素，将返回根元素。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对元素进行规范化通过之前满足的视图条件的元素在祖先一系列在树中向上导航<xref:System.Windows.Automation.TreeWalker>达到对象。 如果到达的根元素，即使它不满足视图条件，则返回的根元素。  
  
 此方法可用于获取对引用的应用程序[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]的命中测试的元素。 应用程序可能想要仅使用特定类型的元素，并且可以使用<xref:System.Windows.Automation.TreeWalker.Normalize%2A>，确保无论最初检索到哪些元素，（例如，当滚动条获取输入的焦点），（如内容相关的元素最终检索元素）。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement Normalize (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement Normalize(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.Normalize(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function Normalize (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ Normalize(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">从其开始规范化的元素。</param>
        <param name="request">一个缓存请求对象，它指定返回的 <see cref="T:System.Windows.Automation.AutomationElement" /> 上要进行缓存的属性和模式。</param>
        <summary>检索节点本身（如果它满足 <see cref="P:System.Windows.Automation.TreeWalker.Condition" />）或者检索满足 <see cref="P:System.Windows.Automation.TreeWalker.Condition" /> 的最接近的父级或上级节点，并缓存属性和模式。</summary>
        <returns>当前视图中最接近的 <see cref="T:System.Windows.Automation.AutomationElement" />。 如果沿上级链向上导航到达根元素，将返回根元素。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对元素进行规范化通过之前满足的视图条件的元素在祖先一系列在树中向上导航<xref:System.Windows.Automation.TreeWalker>达到对象。 如果到达的根元素，即使它不满足视图条件，则返回的根元素。  
  
 此方法可用于获取对引用的应用程序[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]的命中测试的元素。 应用程序可能想要仅使用特定类型的元素，并且可以使用<xref:System.Windows.Automation.TreeWalker.Normalize%2A>，确保无论最初检索到哪些元素，（例如，当滚动条获取输入的焦点），（如内容相关的元素最终检索元素）。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawViewWalker">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.TreeWalker RawViewWalker;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.TreeWalker RawViewWalker" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TreeWalker.RawViewWalker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RawViewWalker As TreeWalker " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::TreeWalker ^ RawViewWalker;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeWalker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示一个预定义的 <see cref="T:System.Windows.Automation.TreeWalker" />，其中包含目录树中所有元素的视图。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果客户端应用程序可能会尝试在其自己的用户界面中查找元素，则必须进行所有[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]的单独线程上调用。  
  
   
  
## Examples  
 下面的示例演示<xref:System.Windows.Automation.TreeWalker.ControlViewWalker>用于构造的子树中的元素的树视图。 使用情况<xref:System.Windows.Automation.TreeWalker.RawViewWalker>相同。  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>