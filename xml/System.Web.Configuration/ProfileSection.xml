<Type Name="ProfileSection" FullName="System.Web.Configuration.ProfileSection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d3a958be15b6da730388e291e9006a58421dd4c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36602557" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProfileSection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ProfileSection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.ProfileSection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProfileSection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileSection sealed : System::Configuration::ConfigurationSection" />
  <TypeSignature Language="F#" Value="type ProfileSection = class&#xA;    inherit ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Web.Configuration.ProfileSection" /> 类提供一种以编程方式访问和修改配置文件的 <see langword="profile" /> 节的方法。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.ProfileSection>类使您能够以编程方式访问和修改配置文件的内容`profile`部分。 `profile`配置文件的部分指定用户配置文件的架构。 在运行时，ASP.NET 编译系统使用中指定的信息`profile`部分，以生成一个名为类`ProfileCommon`，该类派生自<xref:System.Web.Profile.ProfileBase>。 `ProfileCommon`类定义基于中定义的属性`profile`配置文件节。 此类可以访问和修改单个配置文件的值。 为每个用户配置文件中，创建此类的实例，你可以通过在代码中访问的各个配置文件值<xref:System.Web.HttpContext.Profile%2A?displayProperty=nameWithType>属性。 有关配置文件功能的详细信息添加到[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]，请参阅[ASP.NET 配置文件属性概述](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d)。  
  
   
  
## Examples  
 下面的配置文件摘录演示如何以声明方式指定的多个属性的值<xref:System.Web.Configuration.ProfileSection>类。  
  
```  
<system.web>  
  <profile enabled = "true"   
     defaultProvider="AspNetSqlProfileProvider">  
    <providers>  
      <add  name="AspNetSqlProfileProvider"  
        type="System.Web.Profile.SqlProfileProvider"  
        connectionStringName="LocalSqlServer"  
        applicationName="/"  
        description="Stores and retrieves profile data from the   
local Microsoft SQL Server database" />  
    </providers>  
    <properties>  
      <add name = "FirstName"/>  
      <add name = "LastName"/>  
      <add name = "FavoriteURLs" type =  
        "System.Collection.Specialized.StringCollection, System"   
        serializeAs = "Xml"/>        
      <add name = "ShoppingCart" type =   
        "MyCommerce.ShoppingCart, MyCommerce"   
        serializeAs = "Binary"/>  
      <group name = "SiteColors" >  
        <add name = "BackGround"/>  
        <add name = "SideBar"/>  
        <add name = "ForeGroundText"/>  
        <add name = "ForeGroundBorders"/>  
      </group>  
      <group name="Forums">  
        <add name = "HasAvatar" type="bool" provider="Forums"/>  
        <add name = "LastLogin" type="DateTime" provider="Forums"/>  
        <add name = "TotalPosts" type="int" provider="Forums"/>  
      </group>  
    </properties>  
  </profile>  
</system.web>  
```  
  
 下面的代码示例演示如何使用<xref:System.Web.Configuration.ProfileSection>类型。  
  
 [!code-csharp[System.Web.Configuration.ProfileSection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/CS/profilesection.cs#3)]
 [!code-vb[System.Web.Configuration.ProfileSection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/VB/profilesection.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <altmember cref="T:System.Web.Profile.ProfileModule" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.ProfileSection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileSection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用默认设置初始化 <see cref="T:System.Web.Configuration.ProfileSection" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示用于此构造函数的默认设置。  
  
|设置|默认值|  
|-------------|-------------------|  
|<xref:System.Web.Configuration.ProfileSection.DefaultProvider%2A>|"AspNetSqlProfileProvider".|  
|<xref:System.Web.Configuration.ProfileSection.Enabled%2A>|`true`。|  
|<xref:System.Web.Configuration.ProfileSection.Inherits%2A>|空字符串 ("")。|  
|<xref:System.Web.Configuration.ProfileSection.PropertySettings%2A>|一个空 <xref:System.Web.Configuration.RootProfilePropertySettingsCollection>。|  
|<xref:System.Web.Configuration.ProfileSection.Providers%2A>|一个空 <xref:System.Configuration.ProviderSettingsCollection>。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Profile.ProfileModule" />
      </Docs>
    </Member>
    <Member MemberName="AutomaticSaveEnabled">
      <MemberSignature Language="C#" Value="public bool AutomaticSaveEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticSaveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProfileSection.AutomaticSaveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticSaveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutomaticSaveEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticSaveEnabled : bool with get, set" Usage="System.Web.Configuration.ProfileSection.AutomaticSaveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("automaticSaveEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值确定页退出时是否自动保存对用户配置文件信息的更改。</summary>
        <value>如果页退出时自动保存配置文件信息，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.Configuration.ProfileSection.AutomaticSaveEnabled%2A>属性是`false`，不保存对单个配置文件的更改，除非<xref:System.Web.Profile.ProfileBase.Save%2A>方法`ProfileCommon`类在代码中调用。 当<xref:System.Web.Configuration.ProfileSection.AutomaticSaveEnabled%2A>属性是`true`、<xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>事件还允许代码以覆盖自动保存行为。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.ProfileSection.AutomaticSaveEnabled%2A> 属性。 此代码示例摘自更大的示例为提供<xref:System.Web.Configuration.ProfileSection>类。  
  
 [!code-csharp[System.Web.Configuration.ProfileSection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/CS/profilesection.cs#4)]
 [!code-vb[System.Web.Configuration.ProfileSection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/VB/profilesection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Profile.ProfileModule" />
        <altmember cref="E:System.Web.Profile.ProfileModule.ProfileAutoSaving" />
      </Docs>
    </Member>
    <Member MemberName="DefaultProvider">
      <MemberSignature Language="C#" Value="public string DefaultProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProfileSection.DefaultProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProvider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultProvider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProvider : string with get, set" Usage="System.Web.Configuration.ProfileSection.DefaultProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("defaultProvider", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置默认配置文件提供程序的名称。</summary>
        <value>
          <see cref="P:System.Web.Configuration.ProfileSection.Providers" /> 集合中的提供程序名，或一个空字符串 ("")。 默认为“AspNetSqlProfileProvider”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 配置文件提供程序指向配置文件值存储中的用户的数据源。 你可以指定配置文件中的提供程序`providers`的小节`profile`配置文件节。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.ProfileSection.DefaultProvider%2A> 属性。 此代码示例摘自更大的示例为提供<xref:System.Web.Configuration.ProfileSection>类。  
  
 [!code-csharp[System.Web.Configuration.ProfileSection#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/CS/profilesection.cs#5)]
 [!code-vb[System.Web.Configuration.ProfileSection#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/VB/profilesection.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.ProfileSection.Providers" />
        <altmember cref="T:System.Web.Profile.ProfileModule" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProfileSection.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.Configuration.ProfileSection.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用 ASP.NET 配置文件功能。</summary>
        <value>如果 ASP.NET 编译系统应生成可用于访问单个用户配置文件信息的 <see langword="true" /> 类，则为 <see langword="ProfileCommon" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.Configuration.ProfileSection.Enabled%2A>属性是`false`，禁用配置文件功能时，你将不能从 ASP.NET 代码访问用户配置文件信息。  
  
 当该属性是`true`，在运行时向 ASP.NET 编译系统使用中指定的信息`profile`部分，以生成一个名为类`ProfileCommon`，该类派生自<xref:System.Web.Profile.ProfileBase>。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.ProfileSection.Enabled%2A> 属性。 此代码示例摘自更大的示例为提供<xref:System.Web.Configuration.ProfileSection>类。  
  
 [!code-csharp[System.Web.Configuration.ProfileSection#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/CS/profilesection.cs#9)]
 [!code-vb[System.Web.Configuration.ProfileSection#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/VB/profilesection.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Profile.ProfileModule" />
      </Docs>
    </Member>
    <Member MemberName="Inherits">
      <MemberSignature Language="C#" Value="public string Inherits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Inherits" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProfileSection.Inherits" />
      <MemberSignature Language="VB.NET" Value="Public Property Inherits As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Inherits { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Inherits : string with get, set" Usage="System.Web.Configuration.ProfileSection.Inherits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("inherits", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置派生自 <see cref="T:System.Web.Profile.ProfileBase" /> 的自定义类型的类型引用。</summary>
        <value>有效的类型引用，或空字符串 ("")。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在运行时，ASP.NET 编译系统使用中指定的信息`profile`配置生成类的部分调用`ProfileCommon`，该类派生自<xref:System.Web.Profile.ProfileBase>。 若要自定义此类提供的信息，可以设置<xref:System.Web.Configuration.ProfileSection.Inherits%2A>为您创建派生自的类型的名称的属性<xref:System.Web.Profile.ProfileBase>，然后编译系统会使用此自定义类型作为类的基类`ProfileCommon`。  
  
> [!NOTE]
>  如果你提供的类型引用出现在<xref:System.Web.Configuration.ProfileSection.Inherits%2A>属性，你可以在未定义与你自定义类型中定义属性`property`元素。  
  
 有关配置文件功能的详细信息添加到[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]，请参阅[ASP.NET 配置文件属性概述](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d)。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.ProfileSection.Inherits%2A> 属性。 此代码示例摘自更大的示例为提供<xref:System.Web.Configuration.ProfileSection>类。  
  
 [!code-csharp[System.Web.Configuration.ProfileSection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/CS/profilesection.cs#6)]
 [!code-vb[System.Web.Configuration.ProfileSection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/VB/profilesection.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Profile.ProfileModule" />
        <altmember cref="P:System.Type.AssemblyQualifiedName" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProfileSection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.ProfileSection.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertySettings">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.RootProfilePropertySettingsCollection PropertySettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Configuration.RootProfilePropertySettingsCollection PropertySettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProfileSection.PropertySettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertySettings As RootProfilePropertySettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::RootProfilePropertySettingsCollection ^ PropertySettings { System::Web::Configuration::RootProfilePropertySettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertySettings : System.Web.Configuration.RootProfilePropertySettingsCollection" Usage="System.Web.Configuration.ProfileSection.PropertySettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("properties")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.RootProfilePropertySettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.Configuration.ProfilePropertySettings" /> 对象的 <see cref="T:System.Web.Configuration.RootProfilePropertySettingsCollection" /> 集合。</summary>
        <value>一个 <see cref="T:System.Web.Configuration.RootProfilePropertySettingsCollection" /> 对象，其中包含在配置文件的 <see langword="properties" /> 节的 <see langword="profile" /> 子节中定义的所有属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.ProfileSection.PropertySettings%2A>属性是<xref:System.Web.Configuration.RootProfilePropertySettingsCollection>，它提供一套<xref:System.Web.Configuration.ProfilePropertySettings>对象和集合<xref:System.Web.Configuration.ProfileGroupSettings>对象，其中每个提供的其他的命名的集合<xref:System.Web.Configuration.ProfilePropertySettings>对象。 这些集合使用由 ASP.NET 编译引擎来动态生成一个名为类`ProfileCommon`，该类派生自<xref:System.Web.Profile.ProfileBase>。 属性`ProfileCommon`类包含两个集合中定义的属性。 此外，每个组的属性`ProfileCommon`类将包含其自己的属性，该组的定义。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.ProfileSection.PropertySettings%2A> 属性。 此代码示例摘自更大的示例为提供<xref:System.Web.Configuration.ProfileSection>类。  
  
 [!code-csharp[System.Web.Configuration.ProfileSection#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/CS/profilesection.cs#7)]
 [!code-vb[System.Web.Configuration.ProfileSection#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/VB/profilesection.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.RootProfilePropertySettingsCollection" />
        <altmember cref="T:System.Web.Configuration.ProfilePropertySettingsCollection" />
        <altmember cref="T:System.Web.Configuration.ProfileGroupSettingsCollection" />
        <altmember cref="T:System.Web.Profile.ProfileModule" />
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public System.Configuration.ProviderSettingsCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ProviderSettingsCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ProfileSection.Providers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Providers As ProviderSettingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ProviderSettingsCollection ^ Providers { System::Configuration::ProviderSettingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Configuration.ProviderSettingsCollection" Usage="System.Web.Configuration.ProfileSection.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("providers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.ProviderSettingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Configuration.ProviderSettings" /> 对象的集合。</summary>
        <value>一个 <see cref="T:System.Configuration.ProviderSettingsCollection" />，其中包含在配置文件的 <see langword="providers" /> 节的 <see langword="profile" /> 子节中定义的提供程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 配置文件提供程序指向配置文件值存储中的用户的数据源。 你可以指定配置文件中的提供程序`providers`的小节`profile`配置文件节。  
  
   
  
## Examples  
 下面的代码示例说明如何使用 <xref:System.Web.Configuration.ProfileSection.Providers%2A> 属性。 此代码示例摘自更大的示例为提供<xref:System.Web.Configuration.ProfileSection>类。  
  
 [!code-csharp[System.Web.Configuration.ProfileSection#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/CS/profilesection.cs#8)]
 [!code-vb[System.Web.Configuration.ProfileSection#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ProfileSection/VB/profilesection.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ProviderSettingsCollection" />
        <altmember cref="P:System.Web.Configuration.ProfileSection.DefaultProvider" />
        <altmember cref="T:System.Web.Profile.ProfileModule" />
      </Docs>
    </Member>
  </Members>
</Type>