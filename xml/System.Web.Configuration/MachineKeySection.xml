<Type Name="MachineKeySection" FullName="System.Web.Configuration.MachineKeySection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6d1bffe16ab448f15b438076ea1a661d63151b6a" />
    <Meta Name="ms.sourcegitcommit" Value="81d387351cc43c342755705908f4a5eb8af153d3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/04/2018" />
    <Meta Name="ms.locfileid" Value="34567734" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MachineKeySection : System.Configuration.ConfigurationSection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MachineKeySection extends System.Configuration.ConfigurationSection" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.MachineKeySection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MachineKeySection&#xA;Inherits ConfigurationSection" />
  <TypeSignature Language="C++ CLI" Value="public ref class MachineKeySection sealed : System::Configuration::ConfigurationSection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationSection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义控制密钥生成和算法的配置设置，这些密钥生成和算法在 Windows Forms 身份验证、视图状态验证和会话状态应用程序隔离中用于加密、解密和消息身份验证代码 (MAC) 操作。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.MachineKeySection>类使您能够以编程方式访问和修改的内容`MachineKey`配置文件中的部分。 `MachineKey`部分可以在计算机 (Machine.config) 或应用程序 (Web.config) 级别配置和控制密钥和算法，可用于 Windows 窗体身份验证、 视图状态验证和会话状态应用程序隔离。 若要在网络中 Web 服务器 （Web 场），这些功能的任何`DecryptionKey`和`ValidationKey`属性`MachineKey`部分必须显式并一致地使用配置有效的密钥值。 `AutoGenerate`值不适用于 Web 场，因为它依赖于密码随机密钥，它将保留使用计算机本地保护，并将不能跨多台计算机相同。  
  
   
  
## Examples  
 本部分中的示例演示如何以声明方式为部分中，还可作为成员的访问的几个特性指定值<xref:System.Web.Configuration.MachineKeySection>类。  
  
 配置文件的以下示例演示如何指定部分以声明方式的值。  
  
```  
<system.web>  
  <machineKey validationKey="AutoGenerate,IsolateApps"   
    decryptionKey="AutoGenerate,IsolateApps"   
    validation="SHA1"/>  
</system.web>  
```  
  
 下面的示例演示如何使用<xref:System.Web.Configuration.MachineKeySection>在代码中的类。  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#1)]
 [!code-vb[System.Web.Configuration.MachineKeySection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>如果你指定此配置节中的键为需要在 Web 场方案中，建议使用受保护的配置加密此节。</para>
    </block>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MachineKeySection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.MachineKeySection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MachineKeySection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用默认设置初始化 <see cref="T:System.Web.Configuration.MachineKeySection" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 构造函数不应在代码中直接使用。 它是由 ASP.NET 配置系统调用的。 获取实例<xref:System.Web.Configuration.MachineKeySection>类通过<xref:System.Configuration.Configuration.GetSection%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("applicationName", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置应用程序的名称。</summary>
        <value>应用程序的名称。 默认值为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 必须设置此属性，如果设置<xref:System.Web.Configuration.MachineKeySection.DataProtectorType%2A>属性。 属性值传递给<xref:System.Security.Cryptography.DataProtector.Create%2A?displayProperty=nameWithType>工厂方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompatibilityMode">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.MachineKeyCompatibilityMode CompatibilityMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.MachineKeyCompatibilityMode CompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.CompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CompatibilityMode As MachineKeyCompatibilityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::MachineKeyCompatibilityMode CompatibilityMode { System::Web::Configuration::MachineKeyCompatibilityMode get(); void set(System::Web::Configuration::MachineKeyCompatibilityMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("compatibilityMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyCompatibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定视图状态的升级加密方法是否在使用 .NET Framework 2.0 版 Service Pack 1 发行版后引入。</summary>
        <value>一个指示是否在使用 .NET Framework 2.0 SP1 发行版后引入的加密方法的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 更高版本的.NET Framework 中的升级的加密方法降低攻击者可以成功地风险反向工程处理`DecryptionKey`值。 为了保持向后兼容有较旧的加密方法。  
  
 Web 场中的所有服务器都应都具有<xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A>属性设置为相同的值。 如果读取窗体身份验证票证的服务器具有不同<xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A>设置比票证创建的服务器，就不会识别该票证。  
  
 可以为指定以下值<xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A>属性：  
  
-   `Framework20SP1`。 此值指定 ASP.NET 使用可用在的 ASP.NET 版本 2.0 SP2 之前的加密方法。 如果任何服务器具有早于 2.0 SP2 的.NET framework 版本的 web 场中的所有服务器使用此值。 这是默认值，除非该应用程序 Web.config 文件具有`targetFramework`属性`httpRuntime`元素设置为"4.5"。  
  
-   `Framework20SP2`。 此值指定 ASP.NET 使用.NET Framework 2.0 SP2 中引入的升级的加密方法。 此值用于 web 场中所有服务器，如果所有服务器都具有.NET Framework 2.0 SP2 或更高版本，但至少一个不都是.NET Framework 4.5。  
  
-   `Framework45`。 实际上是为 ASP.NET 4.5 加密增强功能。 这是默认值，如果应用程序 Web.config 文件具有`targetFramework`属性`httpRuntime`元素设置为"4.5"。  
  
 当此属性设置为`Framework45`，以下限制已生效：  
  
-   如果 <xref:System.Web.Configuration.MachineKeySection.DataProtectorType%2A> 属性有值，则 <xref:System.Web.Configuration.MachineKeySection.ApplicationName%2A> 属性必须有值。 <xref:System.Security.Cryptography.DataProtector>类要求提供一个非空应用程序名称。  
  
-   <xref:System.Web.Configuration.MachineKeySection.Validation%2A>属性必须是实际的验证算法 （例如，MD5、 SHA1、 HMACSHA256、 HMACSHA384、 HMACSHA512） 或自定义算法该子类<xref:System.Security.Cryptography.KeyedHashAlgorithm>类型。 禁止 AES 和 3DES 的值。  
  
-   框架将不会生成仅用于签名的有效负载。 窗体身份验证票证将始终被同时加密并签名，而不考虑如何`protection`属性`forms`元素设置的 Web.config 文件中。 视图状态将始终进行同时加密或签名如果`EnableViewStateMac`或`RequireViewStateEncryption`为给定页设置。  
  
 由于中所述的安全更新[Microsoft 安全公告 MS10-070](http://technet.microsoft.com/security/bulletin/MS10-070)，默认加密行为是相同的`Framework20SP1`和`Framework20SP2`设置。 默认行为不建议更改，但如果你想要执行此操作，请参阅[如何在 ASP.NET 中配置旧加密模式](http://support.microsoft.com/kb/2425938)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataProtectorType">
      <MemberSignature Language="C#" Value="public string DataProtectorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataProtectorType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.DataProtectorType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataProtectorType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataProtectorType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("dataProtectorType", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置数据保护器类型名称。 默认值为 <see cref="F:System.String.Empty" />。</summary>
        <value>数据保护器类型的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要指定 ASP.NET 自定义的数据保护算法，请设置<xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=nameWithType>属性<xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45>并将此属性设置为一个字符串，表示派生自的类<xref:System.Security.Cryptography.DataProtector>类。 此字符串对应于`providerClass`参数传递给静态<xref:System.Security.Cryptography.DataProtector.Create%2A?displayProperty=nameWithType>工厂方法。 通过使用你指定的类<xref:System.Web.Security.MachineKey.Protect%2A?displayProperty=nameWithType>和<xref:System.Web.Security.MachineKey.Unprotect%2A?displayProperty=nameWithType>方法即使未指定<xref:System.Web.Configuration.MachineKeyCompatibilityMode.Framework45>选项。  
  
 如果设置此属性，则还必须设置<xref:System.Web.Configuration.MachineKeySection.ApplicationName%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decryption">
      <MemberSignature Language="C#" Value="public string Decryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Decryption" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.Decryption" />
      <MemberSignature Language="VB.NET" Value="Public Property Decryption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Decryption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("decryption", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定用于加密和解密 Forms 身份验证数据的加密算法。</summary>
        <value>指示用于加密和解密 Forms 身份验证数据的算法的值。 （有关如何指定视图状态加密时所使用算法的信息，请参见 <see cref="P:System.Web.Configuration.MachineKeySection.Validation" /> 属性。）<see langword="Auto" /> 是默认值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.MachineKeySection.Decryption%2A>属性支持以下的解密值：  
  
-   `Auto`这是默认值，指定 ASP.NET 确定要使用的加密算法基于配置默认设置。  
  
-   `AES`它指定 ASP.NET 使用<xref:System.Web.Configuration.MachineKeyValidation.AES>算法来加密数据。 `AES` 是默认的算法来加密数据。  
  
-   `3DES`它指定 ASP.NET 使用<xref:System.Web.Configuration.MachineKeyValidation.TripleDES>算法来加密数据。  
  
-   自定义算法中。  
  
 通常以声明方式设置此属性`decryption`的 Web.config 文件的元素的属性。 有关详细信息，请参阅元素。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">所选值不是解密值之一。</exception>
        <altmember cref="T:System.Web.Configuration.MachineKeyValidation" />
      </Docs>
    </Member>
    <Member MemberName="DecryptionKey">
      <MemberSignature Language="C#" Value="public string DecryptionKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DecryptionKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.DecryptionKey" />
      <MemberSignature Language="VB.NET" Value="Public Property DecryptionKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DecryptionKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("decryptionKey", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用来加密和解密数据的密钥，或生成密钥的过程。</summary>
        <value>密钥值或指示如何生成密钥的值。 默认值为“AutoGenerate,IsolateApps”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A>属性用于加密和解密，例如在 Windows 窗体身份验证和视图状态时<xref:System.Web.Configuration.MachineKeySection.Validation%2A>属性设置为"3DES"或"AES"。  
  
 "自动生成"选项用于指定 ASP.NET 生成一个随机密钥，并将其存储在本地安全机构。 "自动生成"选项是默认值的一部分。  
  
 如果将"IsolateApps"修饰符添加到"AutoGenerate"<xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>值，ASP.NET 生成唯一的加密的密钥，每个应用程序通过使用每个应用程序的<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>。 此为默认设置。  
  
 如果将"IsolateByAppId"修饰符添加到"AutoGenerate"<xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>值，ASP.NET 生成唯一的加密的密钥，每个应用程序通过使用每个应用程序的<xref:System.Web.HttpRuntime.AppDomainAppId%2A>。 如果两个不同的应用程序共享的虚拟路径 (可能是因为这些应用程序正在运行在不同的端口上)，此标志可以用于进一步将它们与另一个区分开来。 "IsolateByAppId"标志理解只能由 ASP.NET 4.5，但它可而不考虑<xref:System.Web.Configuration.MachineKeySection.CompatibilityMode?displayProperty=nameWithType>设置。  
  
 如果你需要支持多个 Web 服务器 （Web 场） 的网络配置，设置<xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A>属性手动来确保一致的配置。 有关如何手动生成的值信息`DecryptionKey`属性，请参阅[How To： 在 ASP.NET 2.0 中配置 MachineKey](http://go.microsoft.com/fwlink/?linkid=155113)。  
  
 通常以声明方式设置此属性`DecryptionKey`的 Web.config 文件的元素的属性。 有关详细信息，请参阅元素。  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A>通过使用代码的属性。 此示例摘自更大的示例为提供<xref:System.Web.Configuration.MachineKeySection>类。  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#3)]
 [!code-vb[System.Web.Configuration.MachineKeySection#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="protected override void Reset (System.Configuration.ConfigurationElement parentElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Reset(class System.Configuration.ConfigurationElement parentElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.MachineKeySection.Reset(System.Configuration.ConfigurationElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Reset (parentElement As ConfigurationElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Reset(System::Configuration::ConfigurationElement ^ parentElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentElement" Type="System.Configuration.ConfigurationElement" />
      </Parameters>
      <Docs>
        <param name="parentElement">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnly">
      <MemberSignature Language="C#" Value="protected override void SetReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.MachineKeySection.SetReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validation">
      <MemberSignature Language="C#" Value="public System.Web.Configuration.MachineKeyValidation Validation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.MachineKeyValidation Validation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.Validation" />
      <MemberSignature Language="VB.NET" Value="Public Property Validation As MachineKeyValidation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Configuration::MachineKeyValidation Validation { System::Web::Configuration::MachineKeyValidation get(); void set(System::Web::Configuration::MachineKeyValidation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.MachineKeyValidation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定用于验证 Forms 身份验证和视图状态数据的哈希算法。</summary>
        <value>指示用于验证 Forms 身份验证和视图状态数据的哈希算法的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.MachineKeySection.Validation%2A>属性支持加密算法定义的<xref:System.Web.Configuration.MachineKeyValidation>枚举。 通常以声明方式设置此属性`decryption`的 Web.config 文件的元素的属性。 有关详细信息，请参阅元素。  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Web.Configuration.MachineKeySection.Validation%2A>通过使用代码的属性。 此示例摘自更大的示例为提供<xref:System.Web.Configuration.MachineKeySection>类。  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#4)]
 [!code-vb[System.Web.Configuration.MachineKeySection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="ValidationAlgorithm">
      <MemberSignature Language="C#" Value="public string ValidationAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.ValidationAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("validation", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置指示用于验证 Forms 身份验证和视图状态数据的算法的名称。</summary>
        <value>一个字符串，包含预定义算法的名称或自定义算法的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可用的预定义的算法由定义<xref:System.Web.Configuration.MachineKeyValidation>枚举。 如果你想要使用自定义算法，你不需要设置此属性。 设置<xref:System.Web.Configuration.MachineKeySection.Validation%2A>属性设置为自定义算法的名称。 当你这样做时，此属性将自动设置为<xref:System.Web.Configuration.MachineKeyValidation.Custom>。  
  
 你可以设置<xref:System.Web.Configuration.MachineKeySection.ValidationAlgorithm%2A>属性以声明方式在 Web.config 文件中或以编程方式在代码中。  
  
 若要以声明方式设置此属性，请使用`validationAlgorithm`的配置文件中的元素的属性。 此属性可以设置为预定义算法或自定义算法的名称。 由定义的预定义的算法<xref:System.Web.Configuration.MachineKeyValidation>枚举。 中指定自定义算法`validationAlgorithm`属性通过使用"alg:"前缀跟算法的名称。 如果你使用此格式指定自定义算法，<xref:System.Web.Configuration.MachineKeySection.Validation%2A>属性设置为<xref:System.Web.Configuration.MachineKeyValidation.Custom>此属性设置为跟的名称和"alg:"前缀。  
  
 若要以编程方式设置此属性，使用一个由定义的预定义算法的值<xref:System.Web.Configuration.MachineKeyValidation>枚举，或将此属性设置为自定义算法名称。 如果将此属性设置自定义算法的名称，设置<xref:System.Web.Configuration.MachineKeySection.Validation%2A>属性<xref:System.Web.Configuration.MachineKeyValidation.Custom>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationKey">
      <MemberSignature Language="C#" Value="public string ValidationKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.MachineKeySection.ValidationKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Configuration.WhiteSpaceTrimStringConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("validationKey", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置键，用来验证 Forms 身份验证和视图状态数据的代码，或生成密钥的过程。</summary>
        <value>密钥值或指示如何生成密钥的值。 默认值为“AutoGenerate,IsolateApps”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>使用属性时`enableViewStateMAC`是`true`创建消息验证代码 (MAC)，以使 ASP.NET 可以确定视图状态是否已被篡改。 <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>属性还用于生成进程外，应用程序特定的会话 Id，以确保该会话状态变量之间是相互隔离应用程序。  
  
 "自动生成"选项用于指定 ASP.NET 生成一个随机密钥，并将其存储在本地安全机构。 "自动生成"选项是默认值的一部分。  
  
 如果将"IsolateApps"修饰符添加到"AutoGenerate"<xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>值，ASP.NET 生成唯一的加密的密钥，每个应用程序通过使用每个应用程序的<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>。 此为默认设置。  
  
 如果将"IsolateByAppId"修饰符添加到"AutoGenerate"<xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>值，ASP.NET 生成唯一的加密的密钥，每个应用程序通过使用每个应用程序的<xref:System.Web.HttpRuntime.AppDomainAppId%2A>。 如果两个不同的应用程序共享的虚拟路径 (可能是因为这些应用程序正在运行在不同的端口上)，此标志可以用于进一步将它们与另一个区分开来。 "IsolateByAppId"标志理解只能由 ASP.NET 4.5，但它可而不考虑<xref:System.Web.Configuration.MachineKeySection.CompatibilityMode?displayProperty=nameWithType>设置。  
  
 如果你需要支持多个 Web 服务器 （Web 场） 的网络配置，设置<xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>属性手动来确保一致的配置。 有关如何手动生成的值信息`DecryptionKey`属性，请参阅[How To： 在 ASP.NET 2.0 中配置 MachineKey](http://go.microsoft.com/fwlink/?linkid=155113)。  
  
 通常以声明方式设置此属性`validationKey`的 Web.config 文件的元素的属性。  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>通过使用代码的属性。 此示例摘自更大的示例为提供<xref:System.Web.Configuration.MachineKeySection>类。  
  
 [!code-csharp[System.Web.Configuration.MachineKeySection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/CS/machinekeysection.cs#2)]
 [!code-vb[System.Web.Configuration.MachineKeySection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.MachineKeySection/VB/machinekeysection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>