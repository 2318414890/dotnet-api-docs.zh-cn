<Type Name="ClientTarget" FullName="System.Web.Configuration.ClientTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d7ab2777d8cb965ea9a2dcf4e24b11d4f4516bb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37607709" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientTarget : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ClientTarget extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.ClientTarget" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientTarget&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientTarget sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type ClientTarget = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定义与目标用户代理关联的别名，ASP.NET 服务器控件应呈现该用户代理的内容。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.ClientTarget>类中添加的元素是指`clientTarget`配置文件的部分。  
  
 <xref:System.Web.Configuration.ClientTarget>类所属的组将包括<xref:System.Web.Configuration.ClientTargetCollection>类和<xref:System.Web.Configuration.ClientTargetSection>类。  
  
 <xref:System.Web.Configuration.ClientTarget>类包含两个属性标识客户端浏览器中，也称为用户代理。 一个属性是由第二个属性标识客户端浏览器相关联的别名。 ASP.NET 使用此信息来呈现在页面中的服务器控件。  
  
 有关如何以编程方式使用用户代理或其别名的信息，请参阅<xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=nameWithType>属性。 有关如何以声明方式使用用户代理或其别名的信息，请参阅[@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)。  
  
 如果<xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=nameWithType>未设置属性，<xref:System.Web.HttpBrowserCapabilities>与关联的对象<xref:System.Web.UI.Page.Request%2A?displayProperty=nameWithType>属性反映客户端浏览器的功能。 （它反映的浏览器类型，但不是一定是该浏览器的特定实例中设置的功能）。如果设置此属性，客户端浏览器检测被禁用，并且页面将使用与你定义的用户代理字符串相关联的浏览器功能。 可以将此属性设置为任何有效的用户代理字符串。  
  
   
  
## Examples  
 本部分提供了两个代码示例。 第一个示例演示如何以声明方式指定的多个属性的值<xref:System.Web.Configuration.ClientTarget>类。 第二个演示如何获取<xref:System.Web.Configuration.ClientTargetCollection>从配置文件的对象。 此对象用于访问<xref:System.Web.Configuration.ClientTarget>它包含的对象。  
  
 下面的代码示例演示如何以声明方式指定的多个属性的值<xref:System.Web.Configuration.ClientTarget>类。  
  
```  
<clientTarget>  
  <add alias=  
    "uplevel"   
    userAgent="Mozilla/5.0 (compatible;MSIE 6.0;Windows NT 5.1)"/>  
  <add alias="downlevel" userAgent="Generic Downlevel"/>  
</clientTarget>  
```  
  
 下面的代码示例演示如何获取<xref:System.Web.Configuration.ClientTargetCollection>从配置文件的对象。  
  
 [!code-csharp[System.Web.Configuration.ClientTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ClientTarget/CS/clienttarget.cs#1)]
 [!code-vb[System.Web.Configuration.ClientTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ClientTarget/VB/clienttarget.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ClientTargetSection" />
    <altmember cref="T:System.Web.Configuration.ClientTargetCollection" />
    <altmember cref="P:System.Web.UI.Page.ClientTarget" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientTarget (string alias, string userAgent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string alias, string userAgent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.ClientTarget.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alias As String, userAgent As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientTarget(System::String ^ alias, System::String ^ userAgent);" />
      <MemberSignature Language="F#" Value="new System.Web.Configuration.ClientTarget : string * string -&gt; System.Web.Configuration.ClientTarget" Usage="new System.Web.Configuration.ClientTarget (alias, userAgent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="userAgent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alias">用于引用特定用户代理的名称。</param>
        <param name="userAgent">用户代理的标识名称。</param>
        <summary>初始化 <see cref="T:System.Web.Configuration.ClientTarget" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alias">
      <MemberSignature Language="C#" Value="public string Alias { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Alias" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ClientTarget.Alias" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Alias As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Alias { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Alias : string" Usage="System.Web.Configuration.ClientTarget.Alias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("alias", IsKey=true, IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用户代理的别名。</summary>
        <value>用于引用特定用户代理的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.ClientTarget.Alias%2A>属性是指`alias`的属性`add`中的元素`clientTarget`配置文件的部分。  
  
 ASP.NET 配置默认值包括以下别名：  
  
-   `uplevel`它将告诉 ASP.NET 将发送 HTML 和 ECMAScript 支持的 Internet Explorer 6.0 及更高版本。  
  
-   `downlevel`它将告诉 ASP.NET 的 HTML 和脚本保存到浏览器都支持 Internet Explorer 6.0 之前的版本进行限制。  
  
   
  
## Examples  
 下面的代码示例演示如何获取<xref:System.Web.Configuration.ClientTarget.Alias%2A>从现有的 Web 应用程序的配置文件。  
  
 [!code-csharp[System.Web.Configuration.ClientTarget#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ClientTarget/CS/clienttarget.cs#3)]
 [!code-vb[System.Web.Configuration.ClientTarget#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ClientTarget/VB/clienttarget.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.ClientTargetSection" />
        <altmember cref="T:System.Web.Configuration.ClientTargetCollection" />
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ClientTarget.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Web.Configuration.ClientTarget.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.ClientTarget.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Web.Configuration.ClientTarget.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("userAgent", IsRequired=true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用户代理的标识名称。</summary>
        <value>用户代理的标识名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Configuration.ClientTarget.UserAgent%2A>属性是指`userAgent`的属性`add`中的元素`clientTarget`配置文件的部分。  
  
 ASP.NET 配置默认值允许自定义各种 Microsoft Internet Explorer 版本的页。 在它们之间查找别名`uplevel`，它将告诉 ASP.NET 将发送客户端，HTML 和由 Internet Explorer 4.0 和更高版本，支持的 ECMAScript 和`downlevel`，它将告诉 ASP.NET HTML 和脚本保存到比早期的浏览器支持限制Internet Explorer 4.0。  
  
   
  
## Examples  
 下面的代码示例演示如何获取<xref:System.Web.Configuration.ClientTarget.UserAgent%2A>从现有的 Web 应用程序的配置文件。  
  
 [!code-csharp[System.Web.Configuration.ClientTarget#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Configuration.ClientTarget/CS/clienttarget.cs#4)]
 [!code-vb[System.Web.Configuration.ClientTarget#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Configuration.ClientTarget/VB/clienttarget.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.ClientTargetSection" />
        <altmember cref="T:System.Web.Configuration.ClientTargetCollection" />
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
      </Docs>
    </Member>
  </Members>
</Type>