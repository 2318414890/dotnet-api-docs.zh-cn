<Type Name="EncoderExceptionFallback" FullName="System.Text.EncoderExceptionFallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68e7ebb41465cea2b93e8cc6bfc26de46f8b281e" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52361976" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EncoderExceptionFallback : System.Text.EncoderFallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EncoderExceptionFallback extends System.Text.EncoderFallback" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderExceptionFallback" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncoderExceptionFallback&#xA;Inherits EncoderFallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderExceptionFallback sealed : System::Text::EncoderFallback" />
  <TypeSignature Language="F#" Value="type EncoderExceptionFallback = class&#xA;    inherit EncoderFallback" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.EncoderFallback</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="39d9e-101">为不能转换为输出字节序列的输入字符提供一个称为“回退”的失败处理机制。</span>
      <span class="sxs-lookup">
        <span data-stu-id="39d9e-101">Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an output byte sequence.</span>
      </span>
      <span data-ttu-id="39d9e-102">如果输入字符无法转换为输出字节序列，则回退引发异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="39d9e-102">The fallback throws an exception if an input character cannot be converted to an output byte sequence.</span>
      </span>
      <span data-ttu-id="39d9e-103">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="39d9e-103">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39d9e-104">编码将 Unicode 字符映射到编码的字节数，随后可以传输到物理媒体，如磁盘，也可以通过通信链接序列。</span><span class="sxs-lookup"><span data-stu-id="39d9e-104">An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link.</span></span> <span data-ttu-id="39d9e-105">字符可映射以各种方式，以及从派生的类型由特定的编码表示<xref:System.Text.Encoding>类。</span><span class="sxs-lookup"><span data-stu-id="39d9e-105">Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <xref:System.Text.Encoding> class.</span></span> <span data-ttu-id="39d9e-106">具体而言，该编码类型的`GetBytes`方法将编码为字节序列，字符和`GetChars`方法解码为字符的字节序列。</span><span class="sxs-lookup"><span data-stu-id="39d9e-106">Specifically, the encoding type's `GetBytes` method encodes a character to a byte sequence, and the `GetChars` method decodes a byte sequence to a character.</span></span>  
  
 <span data-ttu-id="39d9e-107">如果输入的字符无法表示进行编码，编码操作可能会失败。</span><span class="sxs-lookup"><span data-stu-id="39d9e-107">An encoding operation can fail if the input character cannot be represented by the encoding.</span></span> <span data-ttu-id="39d9e-108">例如，<xref:System.Text.ASCIIEncoding>对象不能进行编码的字符，将生成超出了范围 u+0000 到 U + 007F 的 Unicode 码位值。</span><span class="sxs-lookup"><span data-stu-id="39d9e-108">For example, a <xref:System.Text.ASCIIEncoding> object cannot encode a character that yields a Unicode code point value that is outside the range U+0000 to U+007F.</span></span>  
  
 <span data-ttu-id="39d9e-109">在其中不能进行编码或解码转换的情况下，.NET Framework 提供了一种称为回退的失败处理机制。</span><span class="sxs-lookup"><span data-stu-id="39d9e-109">In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</span></span> <span data-ttu-id="39d9e-110">你的应用程序可以使用预定义的.NET Framework 编码器回退，或者它可以创建自定义编码器回退派生自<xref:System.Text.EncoderFallback>和<xref:System.Text.EncoderFallbackBuffer>类。</span><span class="sxs-lookup"><span data-stu-id="39d9e-110">Your application can use the predefined .NET Framework encoder fallback, or it can create a custom encoder fallback derived from the <xref:System.Text.EncoderFallback> and <xref:System.Text.EncoderFallbackBuffer> classes.</span></span>  
  
 <span data-ttu-id="39d9e-111">.NET Framework 提供了两个预定义的类实现不同的回退策略来处理编码转换失败。</span><span class="sxs-lookup"><span data-stu-id="39d9e-111">The .NET Framework provides two predefined classes that implement different fallback strategies for handling encoding conversion failures.</span></span> <span data-ttu-id="39d9e-112"><xref:System.Text.EncoderReplacementFallback>类将替换为提供的任何输入无法转换的字符的字符串。</span><span class="sxs-lookup"><span data-stu-id="39d9e-112">The <xref:System.Text.EncoderReplacementFallback> class substitutes a string provided for any input character that cannot be converted.</span></span> <span data-ttu-id="39d9e-113">替换无效字符，编码的替换字符串，然后编码操作继续转换输入的其余部分。</span><span class="sxs-lookup"><span data-stu-id="39d9e-113">The substitute string is encoded in place of the invalid character, and then the encoding operation continues converting the remainder of the input.</span></span> <span data-ttu-id="39d9e-114">与此相反，<xref:System.Text.EncoderExceptionFallback>类将引发<xref:System.Text.EncoderFallbackException>遇到无效的字符时。</span><span class="sxs-lookup"><span data-stu-id="39d9e-114">In contrast, the <xref:System.Text.EncoderExceptionFallback> class throws a <xref:System.Text.EncoderFallbackException> when an invalid character is encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39d9e-115">下面的代码示例演示<xref:System.Text.EncoderExceptionFallback>和<xref:System.Text.EncoderFallbackException>类。</span><span class="sxs-lookup"><span data-stu-id="39d9e-115">The following code example demonstrates the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderFallbackException> classes.</span></span>  
  
 [!code-cpp[sys.txt.fallbackEncExc#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.txt.fallbackEncExc/cpp/fallEncExc.cpp#1)]
 [!code-csharp[sys.txt.fallbackEncExc#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.fallbackEncExc/cs/fallEncExc.cs#1)]
 [!code-vb[sys.txt.fallbackEncExc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.fallbackEncExc/vb/fallEncExc.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md">
      <span data-ttu-id="39d9e-116">了解编码</span>
      <span class="sxs-lookup">
        <span data-stu-id="39d9e-116">Understanding Encodings</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncoderExceptionFallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncoderExceptionFallback();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="39d9e-117">初始化 <see cref="T:System.Text.EncoderExceptionFallback" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39d9e-117">Initializes a new instance of the <see cref="T:System.Text.EncoderExceptionFallback" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFallbackBuffer">
      <MemberSignature Language="C#" Value="public override System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.EncoderFallbackBuffer CreateFallbackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.CreateFallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateFallbackBuffer () As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::EncoderFallbackBuffer ^ CreateFallbackBuffer();" />
      <MemberSignature Language="F#" Value="override this.CreateFallbackBuffer : unit -&gt; System.Text.EncoderFallbackBuffer" Usage="encoderExceptionFallback.CreateFallbackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="39d9e-118">返回编码器回退缓冲区，如果无法将字符序列转换为字节序列，则该缓冲区引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39d9e-118">Returns an encoder fallback buffer that throws an exception if it cannot convert a character sequence to a byte sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39d9e-119">当无法编码字符序列时，解码器回退缓冲区引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39d9e-119">An encoder fallback buffer that throws an exception when it cannot encode a character sequence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39d9e-120">编码器回退缓冲区负责接收和处理编码器不能转换为字节序列的字符。</span><span class="sxs-lookup"><span data-stu-id="39d9e-120">An encoder fallback buffer is responsible for receiving and handling characters that an encoder cannot convert to a byte sequence.</span></span> <span data-ttu-id="39d9e-121">此方法返回的实例<xref:System.Text.EncoderExceptionFallbackBuffer>类，该类是一个子类的<xref:System.Text.EncoderFallbackBuffer>类。</span><span class="sxs-lookup"><span data-stu-id="39d9e-121">This method returns an instance of the <xref:System.Text.EncoderExceptionFallbackBuffer> class, which is a subclass of  the <xref:System.Text.EncoderFallbackBuffer> class.</span></span> <span data-ttu-id="39d9e-122"><xref:System.Text.EncoderExceptionFallbackBuffer>对象，则会引发<xref:System.Text.EncoderFallbackException>异常时字符传递给其<xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="39d9e-122">An <xref:System.Text.EncoderExceptionFallbackBuffer> object throws an <xref:System.Text.EncoderFallbackException> exception whenever characters are passed to its <xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="encoderExceptionFallback.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="39d9e-123">从 <see cref="T:System.Text.EncoderExceptionFallback" /> 类派生的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39d9e-123">An object that derives from the <see cref="T:System.Text.EncoderExceptionFallback" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="39d9e-124">指示当前 <see cref="T:System.Text.EncoderExceptionFallback" /> 对象与指定对象是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39d9e-124">Indicates whether the current <see cref="T:System.Text.EncoderExceptionFallback" /> object and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39d9e-125">如果 <paramref name="value" /> 不为 <see langword="true" />（在 Visual Basic .NET 中为 <see langword="null" />），并且是 <see cref="T:System.Text.EncoderExceptionFallback" /> 对象，则为 <see langword="Nothing" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39d9e-125">
              <see langword="true" /> if <paramref name="value" /> is not <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET) and is a <see cref="T:System.Text.EncoderExceptionFallback" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderExceptionFallback.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="encoderExceptionFallback.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="39d9e-126">检索此实例的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39d9e-126">Retrieves the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="39d9e-127">返回值始终是相同的任意值，没有特别的意义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39d9e-127">The return value is always the same arbitrary value, and has no special significance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39d9e-128">因为<xref:System.Text.EncoderExceptionFallback.GetHashCode%2A>方法始终返回相同的值，该应用程序不应使用此值来区分的一个实例<xref:System.Text.EncoderExceptionFallback>从另一个类。</span><span class="sxs-lookup"><span data-stu-id="39d9e-128">Because the <xref:System.Text.EncoderExceptionFallback.GetHashCode%2A> method always returns the same value, the application should not use this value to distinguish one instance of the <xref:System.Text.EncoderExceptionFallback> class from another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharCount">
      <MemberSignature Language="C#" Value="public override int MaxCharCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCharCount" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderExceptionFallback.MaxCharCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxCharCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxCharCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharCount : int" Usage="System.Text.EncoderExceptionFallback.MaxCharCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="39d9e-129">获取此实例可以返回的最大字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39d9e-129">Gets the maximum number of characters this instance can return.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="39d9e-130">返回值始终为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39d9e-130">The return value is always zero.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>