<Type Name="NormalizationForm" FullName="System.Text.NormalizationForm">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ed97908da27c8cba0724260deb1448d1669e344" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36607181" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum NormalizationForm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed NormalizationForm extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Text.NormalizationForm" />
  <TypeSignature Language="VB.NET" Value="Public Enum NormalizationForm" />
  <TypeSignature Language="C++ CLI" Value="public enum class NormalizationForm" />
  <TypeSignature Language="F#" Value="type NormalizationForm = " />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Extensions</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a7ba3-101">定义要执行的规范化的类型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a7ba3-101">Defines the type of normalization to perform.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7ba3-102">一些 Unicode 序列被视为等效，因为它们表示相同的字符。</span><span class="sxs-lookup"><span data-stu-id="a7ba3-102">Some Unicode sequences are considered equivalent because they represent the same character.</span></span> <span data-ttu-id="a7ba3-103">例如，下面会被视为等效下列任一可以用于表示"ắ":</span><span class="sxs-lookup"><span data-stu-id="a7ba3-103">For example, the following are considered equivalent because any of these can be used to represent "ắ":</span></span>  
  
-   <span data-ttu-id="a7ba3-104">"\u1EAF"</span><span class="sxs-lookup"><span data-stu-id="a7ba3-104">"\u1EAF"</span></span>  
  
-   <span data-ttu-id="a7ba3-105">"\u0103\u0301"</span><span class="sxs-lookup"><span data-stu-id="a7ba3-105">"\u0103\u0301"</span></span>  
  
-   <span data-ttu-id="a7ba3-106">"\u0061\u0306\u0301"</span><span class="sxs-lookup"><span data-stu-id="a7ba3-106">"\u0061\u0306\u0301"</span></span>  
  
 <span data-ttu-id="a7ba3-107">但是，序号，即为二进制，比较将这些序列视为不同因为它们包含不同的 Unicode 代码值。</span><span class="sxs-lookup"><span data-stu-id="a7ba3-107">However, ordinal, that is, binary, comparisons consider these sequences different because they contain different Unicode code values.</span></span> <span data-ttu-id="a7ba3-108">在执行之前的序号比较，应用程序必须规范化这些字符串以将它们分解为其基本组件。</span><span class="sxs-lookup"><span data-stu-id="a7ba3-108">Before performing ordinal comparisons, applications must normalize these strings to decompose them into their basic components.</span></span>  
  
 <span data-ttu-id="a7ba3-109">每个复合的 Unicode 字符映射到一个或多个字符的一个更基本的顺序。</span><span class="sxs-lookup"><span data-stu-id="a7ba3-109">Each composite Unicode character is mapped to a more basic sequence of one or more characters.</span></span> <span data-ttu-id="a7ba3-110">分解过程字符串中的复合字符替换为其最基本的映射。</span><span class="sxs-lookup"><span data-stu-id="a7ba3-110">The process of decomposition replaces composite characters in a string with their more basic mappings.</span></span> <span data-ttu-id="a7ba3-111">完整分解以递归方式执行此替换之前的所有字符串中字符可以进一步分解。</span><span class="sxs-lookup"><span data-stu-id="a7ba3-111">A full decomposition recursively performs this replacement until none of the characters in the string can be decomposed further.</span></span>  
  
 <span data-ttu-id="a7ba3-112">Unicode 定义了两种类型的分解： 兼容性分解和规范分解。</span><span class="sxs-lookup"><span data-stu-id="a7ba3-112">Unicode defines two types of decompositions: compatibility decomposition and canonical decomposition.</span></span> <span data-ttu-id="a7ba3-113">在兼容性分解，格式设置信息可能会丢失。</span><span class="sxs-lookup"><span data-stu-id="a7ba3-113">In compatibility decomposition, formatting information might be lost.</span></span> <span data-ttu-id="a7ba3-114">在规范分解中，这是兼容性分解的子集，格式设置信息将保留。</span><span class="sxs-lookup"><span data-stu-id="a7ba3-114">In canonical decomposition, which is a subset of compatibility decomposition, formatting information is preserved.</span></span>  
  
 <span data-ttu-id="a7ba3-115">两个集的字符被视为具有规范等效性，如果其完整规范分解相同。</span><span class="sxs-lookup"><span data-stu-id="a7ba3-115">Two sets of characters are considered to have canonical equivalence if their full canonical decompositions are identical.</span></span> <span data-ttu-id="a7ba3-116">同样，两组字符被视为具有兼容性等效性，如果其完全兼容分解相同。</span><span class="sxs-lookup"><span data-stu-id="a7ba3-116">Likewise, two sets of characters are considered to have compatibility equivalence if their full compatibility decompositions are identical.</span></span>  
  
 <span data-ttu-id="a7ba3-117">有关规范化、 分解和等效性的详细信息，请参阅[Unicode 标准附录 #15: Unicode 范式](https://unicode.org/reports/tr15/)在 unicode.org。</span><span class="sxs-lookup"><span data-stu-id="a7ba3-117">For more information about normalization, decompositions and equivalence, see [Unicode Standard Annex #15: Unicode Normalization Forms](https://unicode.org/reports/tr15/) at unicode.org.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Text.Encoding.IsAlwaysNormalized" />
    <altmember cref="M:System.String.Normalize" />
    <altmember cref="M:System.String.IsNormalized" />
  </Docs>
  <Members>
    <Member MemberName="FormC">
      <MemberSignature Language="C#" Value="FormC" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.NormalizationForm FormC = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Text.NormalizationForm.FormC" />
      <MemberSignature Language="VB.NET" Value="FormC" />
      <MemberSignature Language="C++ CLI" Value="FormC" />
      <MemberSignature Language="F#" Value="FormC = 1" Usage="System.Text.NormalizationForm.FormC" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.NormalizationForm</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7ba3-118">指示 Unicode 字符串使用完全标准分解进行规范化，然后将序列替换为其主复合（如果可能）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ba3-118">Indicates that a Unicode string is normalized using full canonical decomposition, followed by the replacement of sequences with their primary composites, if possible.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FormD">
      <MemberSignature Language="C#" Value="FormD" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.NormalizationForm FormD = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Text.NormalizationForm.FormD" />
      <MemberSignature Language="VB.NET" Value="FormD" />
      <MemberSignature Language="C++ CLI" Value="FormD" />
      <MemberSignature Language="F#" Value="FormD = 2" Usage="System.Text.NormalizationForm.FormD" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.NormalizationForm</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7ba3-119">指示 Unicode 字符串使用完全标准分解进行规范化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ba3-119">Indicates that a Unicode string is normalized using full canonical decomposition.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FormKC">
      <MemberSignature Language="C#" Value="FormKC" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.NormalizationForm FormKC = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Text.NormalizationForm.FormKC" />
      <MemberSignature Language="VB.NET" Value="FormKC" />
      <MemberSignature Language="C++ CLI" Value="FormKC" />
      <MemberSignature Language="F#" Value="FormKC = 5" Usage="System.Text.NormalizationForm.FormKC" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.NormalizationForm</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7ba3-120">指示 Unicode 字符串使用完全兼容分解进行规范化，然后将序列替换为其主复合（如果可能）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ba3-120">Indicates that a Unicode string is normalized using full compatibility decomposition, followed by the replacement of sequences with their primary composites, if possible.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FormKD">
      <MemberSignature Language="C#" Value="FormKD" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Text.NormalizationForm FormKD = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Text.NormalizationForm.FormKD" />
      <MemberSignature Language="VB.NET" Value="FormKD" />
      <MemberSignature Language="C++ CLI" Value="FormKD" />
      <MemberSignature Language="F#" Value="FormKD = 6" Usage="System.Text.NormalizationForm.FormKD" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.NormalizationForm</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7ba3-121">指示 Unicode 字符串使用完全兼容分解进行规范化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7ba3-121">Indicates that a Unicode string is normalized using full compatibility decomposition.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>