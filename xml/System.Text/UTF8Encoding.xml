<Type Name="UTF8Encoding" FullName="System.Text.UTF8Encoding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a4479fa38164193605c512f6d00f5ce9ca7f726b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37609688" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UTF8Encoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UTF8Encoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.UTF8Encoding" />
  <TypeSignature Language="VB.NET" Value="Public Class UTF8Encoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class UTF8Encoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type UTF8Encoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f37c5-101">Represents a UTF-8 encoding of Unicode characters.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f37c5-101">Represents a UTF-8 encoding of Unicode characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-102">编码是将一组 Unicode 字符转换为一个字节序列的过程。</span><span class="sxs-lookup"><span data-stu-id="f37c5-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="f37c5-103">解码是转换为一系列 Unicode 字符编码字节的序列的过程。</span><span class="sxs-lookup"><span data-stu-id="f37c5-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="f37c5-104">Utf-8 是 Unicode 编码的每个码位表示为一到四个字节的序列。</span><span class="sxs-lookup"><span data-stu-id="f37c5-104">UTF-8 is a Unicode encoding that represents each code point as a sequence of one to four bytes.</span></span> <span data-ttu-id="f37c5-105">与不同的是 UTF-16 和 UTF-32 编码的 utf-8 编码不需要"endianness";不管处理器是 big endian 还是小字节序相同的编码方案。</span><span class="sxs-lookup"><span data-stu-id="f37c5-105">Unlike the UTF-16 and UTF-32 encodings, the UTF-8 encoding does not require "endianness"; the encoding scheme is the same regardless of whether the processor is big-endian or little-endian.</span></span> <span data-ttu-id="f37c5-106"><xref:System.Text.UTF8Encoding> 对应于 Windows 代码页 65001。</span><span class="sxs-lookup"><span data-stu-id="f37c5-106"><xref:System.Text.UTF8Encoding> corresponds to the Windows code page 65001.</span></span> <span data-ttu-id="f37c5-107">有关 Utf 和其他编码支持的详细信息<xref:System.Text>，请参阅[.NET Framework 中的字符编码](~/docs/standard/base-types/character-encoding.md)。</span><span class="sxs-lookup"><span data-stu-id="f37c5-107">For more information about the UTFs and other encodings supported by <xref:System.Text>, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
 <span data-ttu-id="f37c5-108">可以实例化<xref:System.Text.UTF8Encoding>中通过多种方式，具体取决于是否要向其提供字节顺序标记 (BOM) 以及你是否想要启用的错误检测的对象。</span><span class="sxs-lookup"><span data-stu-id="f37c5-108">You can instantiate a <xref:System.Text.UTF8Encoding> object in a number of ways, depending on whether you want to it to provide a byte order mark (BOM) and whether you want to enable error detection.</span></span> <span data-ttu-id="f37c5-109">下表列出了构造函数和<xref:System.Text.Encoding>属性返回的<xref:System.Text.UTF8Encoding>对象。</span><span class="sxs-lookup"><span data-stu-id="f37c5-109">The following table lists the constructors and the <xref:System.Text.Encoding> property that return a <xref:System.Text.UTF8Encoding> object.</span></span>  
  
|<span data-ttu-id="f37c5-110">成员</span><span class="sxs-lookup"><span data-stu-id="f37c5-110">Member</span></span>|<span data-ttu-id="f37c5-111">物料清单</span><span class="sxs-lookup"><span data-stu-id="f37c5-111">BOM</span></span>|<span data-ttu-id="f37c5-112">错误检测</span><span class="sxs-lookup"><span data-stu-id="f37c5-112">Error detection</span></span>|  
|------------|---------|---------------------|  
|<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>|<span data-ttu-id="f37c5-113">是</span><span class="sxs-lookup"><span data-stu-id="f37c5-113">Yes</span></span>|<span data-ttu-id="f37c5-114">无 （替换回退）</span><span class="sxs-lookup"><span data-stu-id="f37c5-114">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor?displayProperty=nameWithType>|<span data-ttu-id="f37c5-115">否</span><span class="sxs-lookup"><span data-stu-id="f37c5-115">No</span></span>|<span data-ttu-id="f37c5-116">无 （替换回退）</span><span class="sxs-lookup"><span data-stu-id="f37c5-116">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="f37c5-117">可配置</span><span class="sxs-lookup"><span data-stu-id="f37c5-117">Configurable</span></span>|<span data-ttu-id="f37c5-118">无 （替换回退）</span><span class="sxs-lookup"><span data-stu-id="f37c5-118">No (Replacement fallback)</span></span>|  
|<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>|<span data-ttu-id="f37c5-119">可配置</span><span class="sxs-lookup"><span data-stu-id="f37c5-119">Configurable</span></span>|<span data-ttu-id="f37c5-120">可配置</span><span class="sxs-lookup"><span data-stu-id="f37c5-120">Configurable</span></span>|  
  
 <span data-ttu-id="f37c5-121"><xref:System.Text.UTF8Encoding.GetByteCount%2A>方法确定多少个字节进行编码的一组 Unicode 字符和<xref:System.Text.UTF8Encoding.GetBytes%2A>方法执行实际的编码。</span><span class="sxs-lookup"><span data-stu-id="f37c5-121">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.UTF8Encoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="f37c5-122">同样，<xref:System.Text.UTF8Encoding.GetCharCount%2A>方法确定多少个字符产生的字节序列进行解码并<xref:System.Text.UTF8Encoding.GetChars%2A>和<xref:System.Text.UTF8Encoding.GetString%2A>方法执行实际解码。</span><span class="sxs-lookup"><span data-stu-id="f37c5-122">Likewise, the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.UTF8Encoding.GetChars%2A> and <xref:System.Text.UTF8Encoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="f37c5-123">为编码器或解码器能够保存编码或解码跨多个块 （如在 100,000-字符的段中编码的字符串的 1 百万个字符） 的数据时的状态信息，请使用<xref:System.Text.UTF8Encoding.GetEncoder%2A>和<xref:System.Text.UTF8Encoding.GetDecoder%2A>属性，分别。</span><span class="sxs-lookup"><span data-stu-id="f37c5-123">For an encoder or decoder that is able to save state information when encoding or decoding data that spans multiple blocks (such as string of 1 million characters that is encoded in 100,000-character segments), use the <xref:System.Text.UTF8Encoding.GetEncoder%2A> and <xref:System.Text.UTF8Encoding.GetDecoder%2A> properties, respectively.</span></span>  
  
 <span data-ttu-id="f37c5-124">（可选）<xref:System.Text.UTF8Encoding>对象提供字节顺序标记 (BOM)，这是一个可以作为前缀的编码过程中产生的字节流开头的字节数组。</span><span class="sxs-lookup"><span data-stu-id="f37c5-124">Optionally, the <xref:System.Text.UTF8Encoding> object provides a byte order mark (BOM), which is an array of bytes that can be prefixed to the beginning of the byte stream that results from the encoding process.</span></span> <span data-ttu-id="f37c5-125">如果 utf-8 编码的字节流开头字节顺序标记 (BOM)，它可帮助确定的字节顺序转换格式或 UTF 的解码器。</span><span class="sxs-lookup"><span data-stu-id="f37c5-125">If a UTF-8 encoded byte stream is prefaced with a byte order mark (BOM), it helps the decoder determine the byte order and the transformation format or UTF.</span></span> <span data-ttu-id="f37c5-126">但请注意，Unicode 标准都不需要也不建议采用 utf-8 BOM 编码流。</span><span class="sxs-lookup"><span data-stu-id="f37c5-126">Note, however, that the Unicode Standard neither requires nor recommends a BOM in UTF-8 encoded streams.</span></span> <span data-ttu-id="f37c5-127">有关字节顺序和字节顺序标记的详细信息，请参阅 Unicode Standard [Unicode 主页](http://go.microsoft.com/fwlink/?LinkId=37123)。</span><span class="sxs-lookup"><span data-stu-id="f37c5-127">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
 <span data-ttu-id="f37c5-128">如果编码器配置为提供 BOM，则可以通过调用来检索它<xref:System.Text.UTF8Encoding.GetPreamble%2A>方法; 否则，该方法返回空数组。</span><span class="sxs-lookup"><span data-stu-id="f37c5-128">If the encoder is configured to provide a BOM, you can retrieve it by calling the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method; otherwise, the method returns an empty array.</span></span> <span data-ttu-id="f37c5-129">请注意，即使<xref:System.Text.UTF8Encoding>物料清单支持的配置对象时，必须包含 BOM 将编码的字节流作为相应; 开头的编码方法<xref:System.Text.UTF8Encoding>类执行未自动执行此操作。</span><span class="sxs-lookup"><span data-stu-id="f37c5-129">Note that, even if a <xref:System.Text.UTF8Encoding> object is configured for BOM support, you must include the BOM at the beginning of the encoded byte stream as appropriate; the encoding methods of the <xref:System.Text.UTF8Encoding> class do not do this automatically.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37c5-130">若要启用错误检测和提高类实例的安全性，应调用<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29>构造函数和集`throwOnInvalidBytes`参数`true`。</span><span class="sxs-lookup"><span data-stu-id="f37c5-130">To enable error detection and to make the class instance more secure, you should call the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%2CSystem.Boolean%29> constructor and set the `throwOnInvalidBytes` parameter to `true`.</span></span> <span data-ttu-id="f37c5-131">启用错误检测，检测到无效的字符或字节序列的方法将引发<xref:System.ArgumentException>异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-131">With error detection enabled, a method that detects an invalid sequence of characters or bytes throws an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="f37c5-132">如果没有错误检测，不会引发异常，并通常忽略无效的序列。</span><span class="sxs-lookup"><span data-stu-id="f37c5-132">Without error detection, no exception is thrown, and the invalid sequence is generally ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37c5-133">如果该对象进行序列化和反序列化使用不同的.NET Framework 版本，不会保留 utf-8 编码对象的状态。</span><span class="sxs-lookup"><span data-stu-id="f37c5-133">The state of a UTF-8 encoded object is not preserved if the object is serialized and deserialized using different .NET Framework versions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-134">下面的示例使用<xref:System.Text.UTF8Encoding>Unicode 字符的字符串进行编码并将其存储在字节数组中的对象。</span><span class="sxs-lookup"><span data-stu-id="f37c5-134">The following example uses a <xref:System.Text.UTF8Encoding> object to encode a string of Unicode characters and store them in a byte array.</span></span> <span data-ttu-id="f37c5-135">Unicode 字符串包含 Pi (U + 03A0) 和 Sigma (U + 03A3)，将 ASCII 字符范围外的两个字符。</span><span class="sxs-lookup"><span data-stu-id="f37c5-135">The Unicode string includes two characters, Pi (U+03A0) and Sigma (U+03A3), that are outside the ASCII character range.</span></span> <span data-ttu-id="f37c5-136">编码的字节数组解码为一个字符串中，Pi 和 Sigma 字符时，仍然存在。</span><span class="sxs-lookup"><span data-stu-id="f37c5-136">When the encoded byte array is decoded back to a string, the Pi and Sigma characters are still present.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.UTF8Encoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/snippet.vb#1)]  
  
 <span data-ttu-id="f37c5-137">下面的示例与上面的示例中，使用相同的字符串，只不过它将已编码的字节写入到文件并添加前缀具有字节顺序标记 (BOM) 的字节流。</span><span class="sxs-lookup"><span data-stu-id="f37c5-137">The following example uses the same string as the previous example, except that it writes the encoded bytes to a file and prefixes the byte stream with a byte order mark (BOM).</span></span> <span data-ttu-id="f37c5-138">它然后两个不同的方式读取文件： 为通过使用文本文件<xref:System.IO.StreamReader>对象; 和二进制文件。</span><span class="sxs-lookup"><span data-stu-id="f37c5-138">It then reads the file in two different ways: as a text file by using a <xref:System.IO.StreamReader> object; and as a binary file.</span></span> <span data-ttu-id="f37c5-139">如您所料，在两种情况下是物料清单包括在新读取字符串。</span><span class="sxs-lookup"><span data-stu-id="f37c5-139">As you would expect, in neither case is the BOM included in the newly read string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/CS/bom1.cs#2)]
 [!code-vb[System.Text.UTF8Encoding Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding Example/VB/bom1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f37c5-140">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-140">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f37c5-141">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-141">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-142">此构造函数创建一个实例，它不会提供 Unicode 字节顺序标记，并且不会引发异常时检测到无效的编码。</span><span class="sxs-lookup"><span data-stu-id="f37c5-142">This constructor creates an instance that does not provide a Unicode byte order mark and does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37c5-143">出于安全原因，我们建议您通过调用带的构造函数启用错误检测`throwOnInvalidBytes`参数并将其值设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="f37c5-143">For security reasons, we recommend that you enable error detection by calling a constructor with a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-144">下面的示例创建一个新<xref:System.Text.UTF8Encoding>实例，并显示其名称。</span><span class="sxs-lookup"><span data-stu-id="f37c5-144">The following example creates a new <xref:System.Text.UTF8Encoding> instance and displays its name.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor1 Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF8Encoding : bool -&gt; System.Text.UTF8Encoding" Usage="new System.Text.UTF8Encoding encoderShouldEmitUTF8Identifier" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier">
          <span data-ttu-id="f37c5-145">
            <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-145">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method returns a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-146">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-146">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
          <span data-ttu-id="f37c5-147">A parameter specifies whether to provide a Unicode byte order mark.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-147">A parameter specifies whether to provide a Unicode byte order mark.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-148">此构造函数创建一个实例，它不会引发异常时检测到无效的编码。</span><span class="sxs-lookup"><span data-stu-id="f37c5-148">This constructor creates an instance that does not throw an exception when an invalid encoding is detected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37c5-149">出于安全原因，应启用通过调用构造函数包括错误检测`throwOnInvalidBytes`参数并将其值设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="f37c5-149">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting its value to `true`.</span></span>  
  
 <span data-ttu-id="f37c5-150">`encoderShouldEmitUTF8Identifier`参数控制的操作<xref:System.Text.UTF8Encoding.GetPreamble%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-150">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="f37c5-151">如果`true`，该方法返回包含以 utf-8 格式的 Unicode 字节顺序标记 (BOM) 的字节数组。</span><span class="sxs-lookup"><span data-stu-id="f37c5-151">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="f37c5-152">如果`false`，它将返回一个零长度的字节数组。</span><span class="sxs-lookup"><span data-stu-id="f37c5-152">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="f37c5-153">但是，将设置`encoderShouldEmitUTF8Identifier`到`true`不会导致<xref:System.Text.UTF8Encoding.GetBytes%2A>方法以前缀开头的字节数组，BOM 也不会导致不<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法以包括中的物料清单中的字节数的字节数。</span><span class="sxs-lookup"><span data-stu-id="f37c5-153">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-154">下面的示例创建一个新<xref:System.Text.UTF8Encoding>实例并指定应由发出 Unicode 字节顺序标记前缀<xref:System.Text.UTF8Encoding.GetPreamble%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-154">The following example creates a new <xref:System.Text.UTF8Encoding> instance and specifies that a Unicode byte order mark prefix should be emitted by the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="f37c5-155"><xref:System.Text.UTF8Encoding.GetPreamble%2A>方法随后返回 Unicode 字节顺序标记前缀。</span><span class="sxs-lookup"><span data-stu-id="f37c5-155">The <xref:System.Text.UTF8Encoding.GetPreamble%2A> method then returns the Unicode byte order mark prefix.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CPP/ctor-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/CS/ctor-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor2 Example/VB/ctor-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UTF8Encoding (bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encoderShouldEmitUTF8Identifier As Boolean, throwOnInvalidBytes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UTF8Encoding(bool encoderShouldEmitUTF8Identifier, bool throwOnInvalidBytes);" />
      <MemberSignature Language="F#" Value="new System.Text.UTF8Encoding : bool * bool -&gt; System.Text.UTF8Encoding" Usage="new System.Text.UTF8Encoding (encoderShouldEmitUTF8Identifier, throwOnInvalidBytes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encoderShouldEmitUTF8Identifier" Type="System.Boolean" />
        <Parameter Name="throwOnInvalidBytes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="encoderShouldEmitUTF8Identifier">
          <span data-ttu-id="f37c5-156">
            <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method should return a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-156">
              <see langword="true" /> to specify that the <see cref="M:System.Text.UTF8Encoding.GetPreamble" /> method should return a Unicode byte order mark; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="throwOnInvalidBytes">
          <span data-ttu-id="f37c5-157">
            <see langword="true" /> to throw an exception when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-157">
              <see langword="true" /> to throw an exception when an invalid encoding is detected; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-158">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-158">Initializes a new instance of the <see cref="T:System.Text.UTF8Encoding" /> class.</span>
          </span>
          <span data-ttu-id="f37c5-159">Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-159">Parameters specify whether to provide a Unicode byte order mark and whether to throw an exception when an invalid encoding is detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-160">`encoderShouldEmitUTF8Identifier`参数控制的操作<xref:System.Text.UTF8Encoding.GetPreamble%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-160">The `encoderShouldEmitUTF8Identifier` parameter controls the operation of the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method.</span></span> <span data-ttu-id="f37c5-161">如果`true`，该方法返回包含以 utf-8 格式的 Unicode 字节顺序标记 (BOM) 的字节数组。</span><span class="sxs-lookup"><span data-stu-id="f37c5-161">If `true`, the method returns a byte array containing the Unicode byte order mark (BOM) in UTF-8 format.</span></span>  <span data-ttu-id="f37c5-162">如果`false`，它将返回一个零长度的字节数组。</span><span class="sxs-lookup"><span data-stu-id="f37c5-162">If `false`, it returns a zero-length byte array.</span></span> <span data-ttu-id="f37c5-163">但是，将设置`encoderShouldEmitUTF8Identifier`到`true`不会导致<xref:System.Text.UTF8Encoding.GetBytes%2A>方法以前缀开头的字节数组，BOM 也不会导致不<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法以包括中的物料清单中的字节数的字节数。</span><span class="sxs-lookup"><span data-stu-id="f37c5-163">However, setting `encoderShouldEmitUTF8Identifier` to `true` does not cause the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to prefix the BOM at the beginning of the byte array, nor does it cause the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to include the number of bytes in the BOM in the byte count.</span></span>  
  
 <span data-ttu-id="f37c5-164">如果`throwOnInvalidBytes`是`true`，检测到无效的字节序列的方法将引发<xref:System.ArgumentException?displayProperty=nameWithType>异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-164">If `throwOnInvalidBytes` is `true`, a method that detects an invalid byte sequence throws an <xref:System.ArgumentException?displayProperty=nameWithType> exception.</span></span> <span data-ttu-id="f37c5-165">否则为该方法不会引发异常，并忽略无效的序列。</span><span class="sxs-lookup"><span data-stu-id="f37c5-165">Otherwise, the method does not throw an exception, and the invalid sequence is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37c5-166">出于安全原因，应启用通过调用构造函数包括错误检测`throwOnInvalidBytes`参数并将该参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="f37c5-166">For security reasons, you should enable error detection by calling a constructor that includes a `throwOnInvalidBytes` parameter and setting that parameter to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-167">下面的示例创建一个新<xref:System.Text.UTF8Encoding>实例，指定的<xref:System.Text.UTF8Encoding.GetPreamble%2A>方法不应发出 Unicode 字节顺序标记前缀，并检测到无效的编码时应引发异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-167">The following example creates a new <xref:System.Text.UTF8Encoding> instance, specifying that the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method should not emit a Unicode byte order mark prefix, and an exception should be thrown when an invalid encoding is detected.</span></span> <span data-ttu-id="f37c5-168">此构造函数的行为进行比较的默认值<xref:System.Text.UTF8Encoding.%23ctor>构造函数，当检测到无效的编码时不引发异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-168">The behavior of this constructor is compared to the default <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not throw an exception when an invalid encoding is detected.</span></span> <span data-ttu-id="f37c5-169">这两个<xref:System.Text.UTF8Encoding>实例在行中，这是无效的字符序列编码字符数组，其中包含两个的高代理项 （U + D801 和 U + D802）; 高代理项应始终后跟低代理项。</span><span class="sxs-lookup"><span data-stu-id="f37c5-169">The two <xref:System.Text.UTF8Encoding> instances encode a character array that contains two high surrogates (U+D801 and U+D802) in a row, which is an invalid character sequence; a high surrogate should always be followed by a low surrogate.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CPP/ctor-boolean-boolean.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/CS/ctor-boolean-boolean.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.ctor3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.ctor3 Example/VB/ctor-boolean-boolean.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.GetPreamble" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="uTF8Encoding.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f37c5-170">The object to compare with the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-170">The object to compare with the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-171">Determines whether the specified object is equal to the current <see cref="T:System.Text.UTF8Encoding" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-171">Determines whether the specified object is equal to the current <see cref="T:System.Text.UTF8Encoding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-172">
            <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF8Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-172">
              <see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.Text.UTF8Encoding" /> and is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-173">两个<xref:System.Text.UTF8Encoding>对象是否视作相等，如果满足所有以下条件：</span><span class="sxs-lookup"><span data-stu-id="f37c5-173">Two <xref:System.Text.UTF8Encoding> objects are considered equal if all of the following conditions are true:</span></span>  
  
-   <span data-ttu-id="f37c5-174">这两个对象提供的字节顺序标记，或同时不这样做。</span><span class="sxs-lookup"><span data-stu-id="f37c5-174">Both objects provide the byte order mark, or both do not.</span></span>  
  
-   <span data-ttu-id="f37c5-175">这两个对象使用相同的编码器回退。</span><span class="sxs-lookup"><span data-stu-id="f37c5-175">Both objects use the same encoder fallback.</span></span>  
  
-   <span data-ttu-id="f37c5-176">这两个对象使用相同的解码器回退。</span><span class="sxs-lookup"><span data-stu-id="f37c5-176">Both objects use the same decoder fallback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-177">下面的示例使用<xref:System.Text.UTF8Encoding.Equals%2A>方法来测试是否当前<xref:System.Text.UTF8Encoding>对象是否等于不同<xref:System.Text.UTF8Encoding>对象。</span><span class="sxs-lookup"><span data-stu-id="f37c5-177">The following example uses the <xref:System.Text.UTF8Encoding.Equals%2A> method to test whether the current <xref:System.Text.UTF8Encoding> object is equal to a different <xref:System.Text.UTF8Encoding> object.</span></span> <span data-ttu-id="f37c5-178">四个<xref:System.Text.UTF8Encoding>创建对象，并比较并显示比较的结果。</span><span class="sxs-lookup"><span data-stu-id="f37c5-178">Four <xref:System.Text.UTF8Encoding> objects are created and compared and the results of the comparisons are displayed.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CPP/equals-object.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/CS/equals-object.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.Equals Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.Equals Example/VB/equals-object.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.UTF8Encoding.#ctor" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f37c5-179">Calculates the number of bytes produced by encoding a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-179">Calculates the number of bytes produced by encoding a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="uTF8Encoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="f37c5-180">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-180">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-181">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-181">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-182">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-182">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-183">若要计算所需的确切的数组大小<xref:System.Text.UTF8Encoding.GetBytes%2A>若要存储所产生的字节，应调用<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-183">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-184">若要计算最大数组大小，请调用<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-184">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-185"><xref:System.Text.UTF8Encoding.GetByteCount%2A>方法通常分配较少的内存，而<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法通常更快地执行。</span><span class="sxs-lookup"><span data-stu-id="f37c5-185">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f37c5-186">使用错误检测的无效的序列将导致此方法会引发<xref:System.ArgumentException>异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-186">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="f37c5-187">如果没有错误检测，将忽略无效的序列，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-187">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f37c5-188">若要确保正确解码已编码的字节在保存为文件或流时，可以添加前缀带前导码编码字节的流。</span><span class="sxs-lookup"><span data-stu-id="f37c5-188">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="f37c5-189">在字节流的开头插入该前导码 (如一系列字节写入到文件开头) 是开发人员的责任，并在该前导码的字节数不会反映在返回的值<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-189">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-190">下面的示例调用<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>和<xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29>方法来计算最大值和实际的字符串进行编码所需的字节数。</span><span class="sxs-lookup"><span data-stu-id="f37c5-190">The following example calls the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> and <xref:System.Text.UTF8Encoding.GetByteCount%28System.String%29> methods to calculate the maximum and actual number of bytes required to encode a string.</span></span> <span data-ttu-id="f37c5-191">它还显示实际的存储具有字节顺序标记的字节流所需的字节数。</span><span class="sxs-lookup"><span data-stu-id="f37c5-191">It also displays the actual number of bytes required to store a byte stream with a byte order mark.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f37c5-192">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-192">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f37c5-193">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-193">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f37c5-194">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-194">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f37c5-195">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-195">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF8Encoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="f37c5-196">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-196">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f37c5-197">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-197">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-198">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-198">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-199">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-199">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-200">若要计算所需的确切的数组大小<xref:System.Text.UTF8Encoding.GetBytes%2A>方法来存储所产生的字节，则调用<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-200">To calculate the exact array size required by the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-201">若要计算最大数组大小，请调用<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-201">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-202"><xref:System.Text.UTF8Encoding.GetByteCount%2A>方法通常分配较少的内存，而<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法通常更快地执行。</span><span class="sxs-lookup"><span data-stu-id="f37c5-202">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f37c5-203">使用错误检测的无效的序列将导致此方法会引发<xref:System.ArgumentException>异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-203">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="f37c5-204">如果没有错误检测，将忽略无效的序列，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-204">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f37c5-205">若要确保正确解码已编码的字节在保存为文件或流时，可以添加前缀带前导码编码字节的流。</span><span class="sxs-lookup"><span data-stu-id="f37c5-205">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="f37c5-206">在字节流的开头插入该前导码 (如一系列字节写入到文件开头) 是开发人员的责任，并在该前导码的字节数不会反映在返回的值<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-206">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f37c5-207">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-207">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f37c5-208">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-208">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f37c5-209">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-209">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f37c5-210">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-210">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f37c5-211">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-211">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for a complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="f37c5-212">直接调用方需要完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-212">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f37c5-213">不能由部分受信任的或透明的代码使用此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-213">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="uTF8Encoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="f37c5-214">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-214">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f37c5-215">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-215">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f37c5-216">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-216">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-217">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-217">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-218">The number of bytes produced by encoding the specified characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-218">The number of bytes produced by encoding the specified characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-219">若要计算所需的确切的数组大小<xref:System.Text.UTF8Encoding.GetBytes%2A>若要存储所产生的字节，请调用使用<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-219">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the uses <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-220">若要计算最大数组大小，请调用<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-220">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-221"><xref:System.Text.UTF8Encoding.GetByteCount%2A>方法通常分配较少的内存，而<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法通常更快地执行。</span><span class="sxs-lookup"><span data-stu-id="f37c5-221">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f37c5-222">使用错误检测的无效的序列将导致此方法会引发<xref:System.ArgumentException>异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-222">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="f37c5-223">如果没有错误检测，将忽略无效的序列，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-223">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f37c5-224">若要确保正确解码已编码的字节在保存为文件或流时，可以添加前缀带前导码编码字节的流。</span><span class="sxs-lookup"><span data-stu-id="f37c5-224">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="f37c5-225">在字节流的开头插入该前导码 (如一系列字节写入到文件开头) 是开发人员的责任，并在该前导码的字节数不会反映在返回的值<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-225">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility, and the number of bytes in the preamble is not reflected in the value returned by the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-226">下面的示例填充数组与拉丁文大写字母和小写字符，以及调用<xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法，以确定需要拉丁文小写字符进行编码的字节数。</span><span class="sxs-lookup"><span data-stu-id="f37c5-226">The following example populates an array with a Latin uppercase and lowercase characters and calls the <xref:System.Text.UTF8Encoding.GetByteCount%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method to determine the number of bytes needed to encode the Latin lowercase characters.</span></span> <span data-ttu-id="f37c5-227">然后，它显示此信息，以及如果添加字节顺序标记所需的字节总数。</span><span class="sxs-lookup"><span data-stu-id="f37c5-227">It then displays this information along with the total number of bytes needed if a byte order mark is added.</span></span> <span data-ttu-id="f37c5-228">它将此数字与返回的值进行比较<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法，它指示所需拉丁文小写字符进行编码的字节的最大数目。</span><span class="sxs-lookup"><span data-stu-id="f37c5-228">It compares this number with the value returned by the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method, which indicates maximum number of bytes needed to encode the Latin lowercase characters.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/cs/getbytecount2.cs#2)]
 [!code-vb[System.Text.UTF8Encoding.GetByteCount#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getbytecount/vb/getbytecount2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f37c5-229">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-229">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f37c5-230">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-230">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f37c5-231">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-231">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="f37c5-232">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-232">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f37c5-233">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-233">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f37c5-234">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  The <see cref="P:System.Text.Encoding.EncoderFallback" /> property is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-234">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  The <see cref="P:System.Text.Encoding.EncoderFallback" /> property is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f37c5-235">Encodes a set of characters into a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-235">Encodes a set of characters into a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string -&gt; byte[]" Usage="uTF8Encoding.GetBytes s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF8Encoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="f37c5-236">A pointer to the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-236">A pointer to the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="f37c5-237">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-237">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="f37c5-238">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-238">A pointer to the location at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="f37c5-239">The maximum number of bytes to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-239">The maximum number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-240">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-240">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-241">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-241">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-242">若要计算所需的确切的数组大小<xref:System.Text.UTF8Encoding.GetBytes%2A>若要存储所产生的字节，应调用<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-242">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-243">若要计算最大数组大小，请调用<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-243">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-244"><xref:System.Text.UTF8Encoding.GetByteCount%2A>方法通常分配较少的内存，而<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法通常更快地执行。</span><span class="sxs-lookup"><span data-stu-id="f37c5-244">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f37c5-245">使用错误检测的无效的序列将导致此方法会引发<xref:System.ArgumentException>异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-245">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="f37c5-246">如果没有错误检测，将忽略无效的序列，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-246">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f37c5-247">数据转换，如从流中读取的数据可能仅在连续的块中可用。</span><span class="sxs-lookup"><span data-stu-id="f37c5-247">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="f37c5-248">在这种情况下，或如果数据量很大，它需要划分为较小的块，请使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>返回的<xref:System.Text.UTF8Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF8Encoding.GetEncoder%2A>方法，分别。</span><span class="sxs-lookup"><span data-stu-id="f37c5-248">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> returned by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="f37c5-249">若要确保正确解码已编码的字节在保存为文件或流时，可以添加前缀带前导码编码字节的流。</span><span class="sxs-lookup"><span data-stu-id="f37c5-249">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="f37c5-250">在字节流的开头插入该前导码 (如一系列字节写入到文件开头) 是开发人员的责任。</span><span class="sxs-lookup"><span data-stu-id="f37c5-250">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="f37c5-251"><xref:System.Text.UTF8Encoding.GetBytes%2A>方法不预置码编码字节的序列的开头。</span><span class="sxs-lookup"><span data-stu-id="f37c5-251">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f37c5-252">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-252">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f37c5-253">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-253">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f37c5-254">
            <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-254">
              <paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f37c5-255">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-255">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="f37c5-256">-or-  <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-256">-or-  <paramref name="byteCount" /> is less than the resulting number of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f37c5-257">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-257">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="f37c5-258">直接调用方需要完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-258">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f37c5-259">不能由部分受信任的或透明的代码使用此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-259">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="uTF8Encoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">
          <span data-ttu-id="f37c5-260">The character array containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-260">The character array containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="f37c5-261">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-261">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="f37c5-262">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-262">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="f37c5-263">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-263">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="f37c5-264">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-264">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-265">Encodes a set of characters from the specified character array into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-265">Encodes a set of characters from the specified character array into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-266">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-266">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-267">若要计算所需的确切的数组大小<xref:System.Text.UTF8Encoding.GetBytes%2A>若要存储所产生的字节，应调用<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-267">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-268">若要计算最大数组大小，请调用<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-268">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-269"><xref:System.Text.UTF8Encoding.GetByteCount%2A>方法通常分配较少的内存，而<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法通常更快地执行。</span><span class="sxs-lookup"><span data-stu-id="f37c5-269">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f37c5-270">使用错误检测的无效的序列将导致此方法会引发<xref:System.ArgumentException>异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-270">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="f37c5-271">如果没有错误检测，将忽略无效的序列，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-271">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f37c5-272">数据转换，如从流中读取的数据可能仅在连续的块中可用。</span><span class="sxs-lookup"><span data-stu-id="f37c5-272">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="f37c5-273">在这种情况下，或如果数据量很大，它需要划分为较小的块，请使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>提供<xref:System.Text.UTF8Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF8Encoding.GetEncoder%2A>方法，分别。</span><span class="sxs-lookup"><span data-stu-id="f37c5-273">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="f37c5-274">若要确保正确解码已编码的字节在保存为文件或流时，可以添加前缀带前导码编码字节的流。</span><span class="sxs-lookup"><span data-stu-id="f37c5-274">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="f37c5-275">在字节流的开头插入该前导码 (如一系列字节写入到文件开头) 是开发人员的责任。</span><span class="sxs-lookup"><span data-stu-id="f37c5-275">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="f37c5-276"><xref:System.Text.UTF8Encoding.GetBytes%2A>方法不预置码编码字节的序列的开头。</span><span class="sxs-lookup"><span data-stu-id="f37c5-276">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-277">下面的示例使用<xref:System.Text.UTF8Encoding.GetBytes%2A>方法进行编码的字符从字符串和存储的字节数组中的元素范围中已编码的字节范围。</span><span class="sxs-lookup"><span data-stu-id="f37c5-277">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of characters from a string and stores the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes3 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f37c5-278">
            <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-278">
              <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f37c5-279">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-279">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f37c5-280">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-280">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f37c5-281">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-281">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="f37c5-282">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-282">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f37c5-283">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-283">Error detection is enabled, and <paramref name="chars" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="f37c5-284">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-284">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f37c5-285">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-285">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string s, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (s As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ s, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="uTF8Encoding.GetBytes (s, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="f37c5-286">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-286">The <see cref="T:System.String" /> containing the set of characters to encode.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="f37c5-287">The index of the first character to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-287">The index of the first character to encode.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="f37c5-288">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-288">The number of characters to encode.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="f37c5-289">The byte array to contain the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-289">The byte array to contain the resulting sequence of bytes.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="f37c5-290">The index at which to start writing the resulting sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-290">The index at which to start writing the resulting sequence of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-291">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-291">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-292">The actual number of bytes written into <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-292">The actual number of bytes written into <paramref name="bytes" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-293">若要计算所需的确切的数组大小<xref:System.Text.UTF8Encoding.GetBytes%2A>若要存储所产生的字节，应调用<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-293">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-294">若要计算最大数组大小，请调用<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-294">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-295"><xref:System.Text.UTF8Encoding.GetByteCount%2A>方法通常分配较少的内存，而<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法通常更快地执行。</span><span class="sxs-lookup"><span data-stu-id="f37c5-295">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f37c5-296">使用错误检测的无效的序列将导致此方法会引发<xref:System.ArgumentException>异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-296">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="f37c5-297">如果没有错误检测，将忽略无效的序列，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-297">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f37c5-298">数据转换，如从流中读取的数据可能仅在连续的块中可用。</span><span class="sxs-lookup"><span data-stu-id="f37c5-298">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="f37c5-299">在这种情况下，或如果数据量很大，它需要划分为较小的块，请使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>提供<xref:System.Text.UTF8Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF8Encoding.GetEncoder%2A>方法，分别。</span><span class="sxs-lookup"><span data-stu-id="f37c5-299">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="f37c5-300">若要确保正确解码已编码的字节在保存为文件或流时，可以添加前缀带前导码编码字节的流。</span><span class="sxs-lookup"><span data-stu-id="f37c5-300">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="f37c5-301">在字节流的开头插入该前导码 (如一系列字节写入到文件开头) 是开发人员的责任。</span><span class="sxs-lookup"><span data-stu-id="f37c5-301">Inserting the preamble at the beginning of a byte stream (such as at the beginning of a series of bytes to be written to a file) is the developer's responsibility.</span></span> <span data-ttu-id="f37c5-302"><xref:System.Text.UTF8Encoding.GetBytes%2A>方法不预置码编码字节的序列的开头。</span><span class="sxs-lookup"><span data-stu-id="f37c5-302">The <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a preamble to the beginning of a sequence of encoded bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-303">下面的示例使用<xref:System.Text.UTF8Encoding.GetBytes%2A>方法进行编码的 Unicode 字符数组中的元素范围，并将已编码的字节存储的字节数组中的元素范围内。</span><span class="sxs-lookup"><span data-stu-id="f37c5-303">The following example uses the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetBytes1 Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f37c5-304">
            <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-304">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f37c5-305">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-305">-or-  <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f37c5-306">
            <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-306">
              <paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f37c5-307">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-307">-or-  <paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span>
          </span>
          <span data-ttu-id="f37c5-308">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-308">-or-  <paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f37c5-309">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-309">Error detection is enabled, and <paramref name="s" /> contains an invalid sequence of characters.</span>
          </span>
          <span data-ttu-id="f37c5-310">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-310">-or-  <paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f37c5-311">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-311">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f37c5-312">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-312">Calculates the number of characters produced by decoding a sequence of bytes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="uTF8Encoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="f37c5-313">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-313">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f37c5-314">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-314">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-315">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-315">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-316">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-316">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-317">若要计算所需的确切的数组大小<xref:System.Text.UTF8Encoding.GetChars%2A>若要存储所产生的字符，调用<xref:System.Text.UTF8Encoding.GetCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-317">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="f37c5-318">若要计算最大数组大小，请调用<xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-318">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="f37c5-319"><xref:System.Text.UTF8Encoding.GetCharCount%2A>方法通常分配较少的内存，而<xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>方法通常更快地执行。</span><span class="sxs-lookup"><span data-stu-id="f37c5-319">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f37c5-320">使用错误检测的无效的序列将导致此方法会引发<xref:System.ArgumentException>异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-320">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="f37c5-321">如果没有错误检测，将忽略无效的序列，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-321">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f37c5-322">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-322">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f37c5-323">
            <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-323">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f37c5-324">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-324">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f37c5-325">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-325">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="f37c5-326">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-326">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="f37c5-327">直接调用方需要完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-327">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f37c5-328">不能由部分受信任的或透明的代码使用此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-328">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="uTF8Encoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="f37c5-329">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-329">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f37c5-330">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-330">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f37c5-331">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-331">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-332">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-332">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-333">The number of characters produced by decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-333">The number of characters produced by decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-334">若要计算所需的确切的数组大小<xref:System.Text.UTF8Encoding.GetChars%2A>若要存储所产生的字符，调用<xref:System.Text.UTF8Encoding.GetCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-334">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="f37c5-335">若要计算最大数组大小，请调用<xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-335">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="f37c5-336"><xref:System.Text.UTF8Encoding.GetCharCount%2A>方法通常分配较少的内存，而<xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>方法通常更快地执行。</span><span class="sxs-lookup"><span data-stu-id="f37c5-336">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f37c5-337">使用错误检测的无效的序列将导致此方法会引发<xref:System.ArgumentException>异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-337">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="f37c5-338">如果没有错误检测，将忽略无效的序列，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-338">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-339">下面的示例使用<xref:System.Text.UTF8Encoding.GetCharCount%2A>解码的字节数组中的元素范围由方法返回的字符数。</span><span class="sxs-lookup"><span data-stu-id="f37c5-339">The following example uses the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f37c5-340">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-340">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f37c5-341">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-341">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f37c5-342">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-342">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="f37c5-343">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-343">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f37c5-344">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-344">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="f37c5-345">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-345">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Text.UTF8Encoding.GetChars" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f37c5-346">Decodes a sequence of bytes into a set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-346">Decodes a sequence of bytes into a set of characters.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="uTF8Encoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char*" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="f37c5-347">A pointer to the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-347">A pointer to the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="f37c5-348">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-348">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="f37c5-349">A pointer to the location at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-349">A pointer to the location at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <param name="charCount">
          <span data-ttu-id="f37c5-350">The maximum number of characters to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-350">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-351">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-351">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-352">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-352">The actual number of characters written at the location indicated by <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-353">若要计算所需的确切的数组大小<xref:System.Text.UTF8Encoding.GetChars%2A>若要存储所产生的字符，调用<xref:System.Text.UTF8Encoding.GetCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-353">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="f37c5-354">若要计算最大数组大小，请调用<xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-354">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="f37c5-355"><xref:System.Text.UTF8Encoding.GetCharCount%2A>方法通常分配较少的内存，而<xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>方法通常更快地执行。</span><span class="sxs-lookup"><span data-stu-id="f37c5-355">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f37c5-356">使用错误检测的无效的序列将导致此方法会引发<xref:System.ArgumentException>异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-356">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="f37c5-357">如果没有错误检测，将忽略无效的序列，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-357">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f37c5-358">如果要解码的字节范围包含字节顺序标记 (BOM)，并且非 BOM 注意类型的方法已返回的字节数组，此方法返回的字符数组中包含的字符 U + FFFE。</span><span class="sxs-lookup"><span data-stu-id="f37c5-358">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="f37c5-359">您可以通过调用删除它<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-359">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f37c5-360">数据转换，如从流中读取的数据可能仅在连续的块中可用。</span><span class="sxs-lookup"><span data-stu-id="f37c5-360">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="f37c5-361">在这种情况下，或如果数据量很大，它需要划分为较小的块，请使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>对象提供<xref:System.Text.UTF8Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF8Encoding.GetEncoder%2A>方法，分别。</span><span class="sxs-lookup"><span data-stu-id="f37c5-361">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> object provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f37c5-362">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-362">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f37c5-363">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-363">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f37c5-364">
            <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-364">
              <paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f37c5-365">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-365">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="f37c5-366">-or-  <paramref name="charCount" /> is less than the resulting number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-366">-or-  <paramref name="charCount" /> is less than the resulting number of characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="f37c5-367">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-367">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="f37c5-368">直接调用方需要完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-368">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="f37c5-369">不能由部分受信任的或透明的代码使用此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-369">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="uTF8Encoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="f37c5-370">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-370">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="byteIndex">
          <span data-ttu-id="f37c5-371">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-371">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="byteCount">
          <span data-ttu-id="f37c5-372">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-372">The number of bytes to decode.</span>
          </span>
        </param>
        <param name="chars">
          <span data-ttu-id="f37c5-373">The character array to contain the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-373">The character array to contain the resulting set of characters.</span>
          </span>
        </param>
        <param name="charIndex">
          <span data-ttu-id="f37c5-374">The index at which to start writing the resulting set of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-374">The index at which to start writing the resulting set of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-375">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-375">Decodes a sequence of bytes from the specified byte array into the specified character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-376">The actual number of characters written into <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-376">The actual number of characters written into <paramref name="chars" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-377">若要计算所需的确切的数组大小<xref:System.Text.UTF8Encoding.GetChars%2A>若要存储所产生的字符，调用<xref:System.Text.UTF8Encoding.GetCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-377">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="f37c5-378">若要计算最大数组大小，请调用<xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-378">To calculate the maximum array size, call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="f37c5-379"><xref:System.Text.UTF8Encoding.GetCharCount%2A>方法通常分配较少的内存，而<xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>方法通常更快地执行。</span><span class="sxs-lookup"><span data-stu-id="f37c5-379">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f37c5-380">使用错误检测的无效的序列将导致此方法会引发<xref:System.ArgumentException>异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-380">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="f37c5-381">如果没有错误检测，将忽略无效的序列，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-381">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f37c5-382">如果要解码的字节范围包含字节顺序标记 (BOM)，并且非 BOM 注意类型的方法已返回的字节数组，此方法返回的字符数组中包含的字符 U + FFFE。</span><span class="sxs-lookup"><span data-stu-id="f37c5-382">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="f37c5-383">您可以通过调用删除它<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-383">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f37c5-384">数据转换，如从流中读取的数据可能仅在连续的块中可用。</span><span class="sxs-lookup"><span data-stu-id="f37c5-384">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="f37c5-385">在这种情况下，或如果数据量很大，它需要划分为较小的块，请使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>提供<xref:System.Text.UTF8Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF8Encoding.GetEncoder%2A>方法，分别。</span><span class="sxs-lookup"><span data-stu-id="f37c5-385">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-386">下面的示例使用<xref:System.Text.UTF8Encoding.GetChars%2A>方法进行解码的字节数组中的元素范围，并将结果存储中的字符数组。</span><span class="sxs-lookup"><span data-stu-id="f37c5-386">The following example uses the <xref:System.Text.UTF8Encoding.GetChars%2A> method to decode a range of elements in a byte array and store the result in a character array.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f37c5-387">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-387">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="f37c5-388">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-388">-or-  <paramref name="chars" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f37c5-389">
            <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-389">
              <paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f37c5-390">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-390">-or-  <paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
          <span data-ttu-id="f37c5-391">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-391">-or-  <paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f37c5-392">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-392">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
          <span data-ttu-id="f37c5-393">-or-  <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-393">-or-  <paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="f37c5-394">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-394">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="uTF8Encoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f37c5-395">Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-395">Obtains a decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-396">A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-396">A decoder that converts a UTF-8 encoded sequence of bytes into a sequence of Unicode characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-397"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType>方法将连续的字节块转换为连续的字符，方式类似于块<xref:System.Text.UTF8Encoding.GetChars%2A>此类的方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-397">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.UTF8Encoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="f37c5-398">但是，<xref:System.Text.Decoder>以便它可以正确地对跨块的字节序列进行解码的调用之间维护状态信息。</span><span class="sxs-lookup"><span data-stu-id="f37c5-398">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="f37c5-399"><xref:System.Text.Decoder>还保留数据块的末尾的尾随字节并将在下一步的解码操作中的尾随字节。</span><span class="sxs-lookup"><span data-stu-id="f37c5-399">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="f37c5-400">因此，<xref:System.Text.UTF8Encoding.GetDecoder%2A>和<xref:System.Text.UTF8Encoding.GetEncoder%2A>在网络传输和文件操作很有用，因为这些操作通常处理的数据而不是完整的数据流块。</span><span class="sxs-lookup"><span data-stu-id="f37c5-400">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="f37c5-401">如果启用了错误检测，即`throwOnInvalidCharacters`构造函数的参数设置为`true`，在启用了错误检测<xref:System.Text.Decoder>此方法返回。</span><span class="sxs-lookup"><span data-stu-id="f37c5-401">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Decoder> returned by this method.</span></span> <span data-ttu-id="f37c5-402">如果启用了错误检测，并且在遇到无效的序列，解码器状态未定义，必须停止处理。</span><span class="sxs-lookup"><span data-stu-id="f37c5-402">If error detection is enabled and an invalid sequence is encountered, the state of the decoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-403">下面的示例使用<xref:System.Text.UTF8Encoding.GetDecoder%2A>方法来获取 utf-8 解码器。</span><span class="sxs-lookup"><span data-stu-id="f37c5-403">The following example uses the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method to obtain a UTF-8 decoder.</span></span> <span data-ttu-id="f37c5-404">解码器将字符序列转换为一个字节序列。</span><span class="sxs-lookup"><span data-stu-id="f37c5-404">The decoder converts a sequence of bytes into a sequence of characters.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CPP/getdecoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/CS/getdecoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetDecoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetDecoder Example/VB/getdecoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="uTF8Encoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f37c5-405">Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-405">Obtains an encoder that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-406">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-406">A <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into a UTF-8 encoded sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-407"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType>方法将连续的字符块转换为连续的字节，方式类似于块<xref:System.Text.UTF8Encoding.GetBytes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-407">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.UTF8Encoding.GetBytes%2A> method.</span></span> <span data-ttu-id="f37c5-408">但是，<xref:System.Text.Encoder>以便它可以正确地对跨块的字符序列进行编码的调用之间维护状态信息。</span><span class="sxs-lookup"><span data-stu-id="f37c5-408">However, a <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="f37c5-409"><xref:System.Text.Encoder>还保留尾随字符数据块的末尾，并在下一步的编码操作中使用尾随字符。</span><span class="sxs-lookup"><span data-stu-id="f37c5-409">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="f37c5-410">例如，数据块可能结尾不匹配的高代理项，且匹配的低代理项可能在下一个数据块。</span><span class="sxs-lookup"><span data-stu-id="f37c5-410">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="f37c5-411">因此，<xref:System.Text.UTF8Encoding.GetDecoder%2A>和<xref:System.Text.UTF8Encoding.GetEncoder%2A>在网络传输和文件操作很有用，因为这些操作通常处理的数据而不是完整的数据流块。</span><span class="sxs-lookup"><span data-stu-id="f37c5-411">Therefore, <xref:System.Text.UTF8Encoding.GetDecoder%2A> and <xref:System.Text.UTF8Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 <span data-ttu-id="f37c5-412">如果启用了错误检测，即`throwOnInvalidCharacters`构造函数的参数设置为`true`，在启用了错误检测<xref:System.Text.Encoder>此方法返回。</span><span class="sxs-lookup"><span data-stu-id="f37c5-412">If error detection is enabled, that is, the `throwOnInvalidCharacters` parameter of the constructor is set to `true`, error detection is also enabled in the <xref:System.Text.Encoder> returned by this method.</span></span> <span data-ttu-id="f37c5-413">如果启用了错误检测，并且在遇到无效的序列，则编码器的状态未定义，必须停止处理。</span><span class="sxs-lookup"><span data-stu-id="f37c5-413">If error detection is enabled and an invalid sequence is encountered, the state of the encoder is undefined and processing must stop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-414">下面的示例使用<xref:System.Text.UTF8Encoding.GetEncoder%2A>方法来获取要转换为 utf-8 的字符序列的编码器编码的字节序列。</span><span class="sxs-lookup"><span data-stu-id="f37c5-414">The following example uses the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method to obtain an encoder to convert a sequence of characters into a UTF-8 encoded sequence of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CPP/getencoder-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/CS/getencoder-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetEncoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetEncoder Example/VB/getencoder-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="uTF8Encoding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f37c5-415">Returns the hash code for the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-415">Returns the hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-416">The hash code for the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-416">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f37c5-417">下面的示例使用<xref:System.Text.UTF8Encoding.GetHashCode%2A>方法返回的哈希代码<xref:System.Text.UTF8Encoding>实例。</span><span class="sxs-lookup"><span data-stu-id="f37c5-417">The following example uses the <xref:System.Text.UTF8Encoding.GetHashCode%2A> method to return a hash code for <xref:System.Text.UTF8Encoding> instances.</span></span> <span data-ttu-id="f37c5-418">请注意，此方法返回的哈希代码取决于构造函数用于创建<xref:System.Text.UTF8Encoding>对象。</span><span class="sxs-lookup"><span data-stu-id="f37c5-418">Notice that the hash code returned by this method depends on the constructor used to create the <xref:System.Text.UTF8Encoding> object.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CPP/gethashcode-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/CS/gethashcode-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetHashCode Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetHashCode Example/VB/gethashcode-.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="uTF8Encoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount">
          <span data-ttu-id="f37c5-419">The number of characters to encode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-419">The number of characters to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-420">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-420">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-421">The maximum number of bytes produced by encoding the specified number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-421">The maximum number of bytes produced by encoding the specified number of characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-422">若要计算所需的确切的数组大小<xref:System.Text.UTF8Encoding.GetBytes%2A>若要存储所产生的字节，应调用<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-422">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetBytes%2A> to store the resulting bytes, you call the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-423">若要计算最大数组大小，请调用<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-423">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method.</span></span> <span data-ttu-id="f37c5-424"><xref:System.Text.UTF8Encoding.GetByteCount%2A>方法通常分配较少的内存，而<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法通常更快地执行。</span><span class="sxs-lookup"><span data-stu-id="f37c5-424">The <xref:System.Text.UTF8Encoding.GetByteCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f37c5-425"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 是最坏的情况的数字，包括当前所选最差情形下<xref:System.Text.EncoderFallback>。</span><span class="sxs-lookup"><span data-stu-id="f37c5-425"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span> <span data-ttu-id="f37c5-426">如果有可能较大字符串中，选择了回退<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>可以返回较大值。</span><span class="sxs-lookup"><span data-stu-id="f37c5-426">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="f37c5-427">在大多数情况下，此方法返回用于小字符串合理的数字。</span><span class="sxs-lookup"><span data-stu-id="f37c5-427">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="f37c5-428">对于大型字符串，可能需要使用非常大的缓冲区，在极少数的情况下，超过了更合理的缓冲区中捕获错误之间进行选择。</span><span class="sxs-lookup"><span data-stu-id="f37c5-428">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span> <span data-ttu-id="f37c5-429">您可能还需要考虑不同的方法使用<xref:System.Text.UTF8Encoding.GetByteCount%2A>或<xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f37c5-429">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetByteCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f37c5-430">例如，英语和许多其他语言中的文本通常需要只有一个 utf-8 字节来表示字符，但返回的号<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>必须允许，要转换的字符串将包含的所有字符的每个需要四个字节。</span><span class="sxs-lookup"><span data-stu-id="f37c5-430">For example, text in English and many other languages often needs only one UTF-8 byte to represent a character, but the number returned by <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has to allow for the possibility that the string to be converted will consist entirely of characters that each require four bytes.</span></span>  
  
 <span data-ttu-id="f37c5-431"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> 与无关<xref:System.Text.UTF8Encoding.GetChars%2A>。</span><span class="sxs-lookup"><span data-stu-id="f37c5-431"><xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetChars%2A>.</span></span> <span data-ttu-id="f37c5-432">如果你的应用程序需要使用具有相似的功能<xref:System.Text.UTF8Encoding.GetChars%2A>，它应使用<xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="f37c5-432">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetChars%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37c5-433">`GetMaxByteCount(N)` 不一定是相同的值`N* GetMaxByteCount(1)`。</span><span class="sxs-lookup"><span data-stu-id="f37c5-433">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-434">下面的示例使用<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>方法返回的最大指定的数目的字符进行编码所需的字节数。</span><span class="sxs-lookup"><span data-stu-id="f37c5-434">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A> method to return the maximum number of bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.utf8encoding.getmaxbytecount example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f37c5-435">
            <paramref name="charCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-435">
              <paramref name="charCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f37c5-436">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-436">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.EncoderFallbackException">
          <span data-ttu-id="f37c5-437">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-437">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="uTF8Encoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount">
          <span data-ttu-id="f37c5-438">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-438">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-439">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-439">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-440">The maximum number of characters produced by decoding the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-440">The maximum number of characters produced by decoding the specified number of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-441">若要计算所需的确切的数组大小<xref:System.Text.UTF8Encoding.GetChars%2A>若要存储所产生的字符，则调用<xref:System.Text.UTF8Encoding.GetCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-441">To calculate the exact array size required by <xref:System.Text.UTF8Encoding.GetChars%2A> to store the resulting characters, you call the <xref:System.Text.UTF8Encoding.GetCharCount%2A> method.</span></span> <span data-ttu-id="f37c5-442">若要计算最大数组大小，请调用<xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-442">To calculate the maximum array size, you call the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method.</span></span> <span data-ttu-id="f37c5-443"><xref:System.Text.UTF8Encoding.GetCharCount%2A>方法通常分配较少的内存，而<xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>方法通常更快地执行。</span><span class="sxs-lookup"><span data-stu-id="f37c5-443">The <xref:System.Text.UTF8Encoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="f37c5-444"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 是最坏的情况的数字，包括当前所选最差情形下<xref:System.Text.DecoderFallback>。</span><span class="sxs-lookup"><span data-stu-id="f37c5-444"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="f37c5-445">如果有可能较大字符串中，选择了回退<xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>可以返回较大值。</span><span class="sxs-lookup"><span data-stu-id="f37c5-445">If a fallback is chosen with a potentially large string, <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="f37c5-446">在大多数情况下，此方法返回用于小字符串合理的数字。</span><span class="sxs-lookup"><span data-stu-id="f37c5-446">In most cases, this method returns reasonable numbers for small strings.</span></span> <span data-ttu-id="f37c5-447">对于大型字符串，可能需要使用非常大的缓冲区，在极少数的情况下，超过了更合理的缓冲区中捕获错误之间进行选择。</span><span class="sxs-lookup"><span data-stu-id="f37c5-447">For large strings, you might have to choose between using very large buffers and catching errors in the rare case that a more reasonable buffer is exceeded.</span></span>  <span data-ttu-id="f37c5-448">您可能还需要考虑不同的方法使用<xref:System.Text.UTF8Encoding.GetCharCount%2A>或<xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f37c5-448">You might also want to consider a different approach using <xref:System.Text.UTF8Encoding.GetCharCount%2A> or <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f37c5-449"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> 与无关<xref:System.Text.UTF8Encoding.GetBytes%2A>。</span><span class="sxs-lookup"><span data-stu-id="f37c5-449"><xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.UTF8Encoding.GetBytes%2A>.</span></span> <span data-ttu-id="f37c5-450">如果你的应用程序需要使用具有相似的功能<xref:System.Text.UTF8Encoding.GetBytes%2A>，它应使用<xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="f37c5-450">If your application needs a similar function to use with <xref:System.Text.UTF8Encoding.GetBytes%2A>, it should use <xref:System.Text.UTF8Encoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f37c5-451">`GetMaxCharCount(N)` 不一定是相同的值`N* GetMaxCharCount(1)`。</span><span class="sxs-lookup"><span data-stu-id="f37c5-451">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-452">下面的示例使用<xref:System.Text.UTF8Encoding.GetMaxCharCount%2A>解码指定的字节数由方法返回的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="f37c5-452">The following example uses the <xref:System.Text.UTF8Encoding.GetMaxCharCount%2A> method to return the maximum number of characters produced by decoding a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f37c5-453">
            <paramref name="byteCount" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-453">
              <paramref name="byteCount" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f37c5-454">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-454">-or-  The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="f37c5-455">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-455">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetPreamble">
      <MemberSignature Language="C#" Value="public override byte[] GetPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetPreamble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreamble () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetPreamble();" />
      <MemberSignature Language="F#" Value="override this.GetPreamble : unit -&gt; byte[]" Usage="uTF8Encoding.GetPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f37c5-456">Returns a Unicode byte order mark encoded in UTF-8 format, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-456">Returns a Unicode byte order mark encoded in UTF-8 format, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-457">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-457">A byte array containing the Unicode byte order mark, if the <see cref="T:System.Text.UTF8Encoding" /> encoding object is configured to supply one.</span>
          </span>
          <span data-ttu-id="f37c5-458">Otherwise, this method returns a zero-length byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-458">Otherwise, this method returns a zero-length byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-459"><xref:System.Text.UTF8Encoding>对象可以提供一个前导码，这是可以将作为前缀的编码过程中产生的字节序列的字节数组。</span><span class="sxs-lookup"><span data-stu-id="f37c5-459">The <xref:System.Text.UTF8Encoding> object can provide a preamble, which is a byte array that can be prefixed to the sequence of bytes that result from the encoding process.</span></span> <span data-ttu-id="f37c5-460">作为开端字节顺序标记 （码位 U + FEFF） 使用的编码字节的序列可帮助确定的字节顺序和转换格式或 UTF 解码器。</span><span class="sxs-lookup"><span data-stu-id="f37c5-460">Prefacing a sequence of encoded bytes with a byte order mark (code point U+FEFF) helps the decoder determine the byte order and the transformation format, or UTF.</span></span> <span data-ttu-id="f37c5-461">Unicode 字节顺序标记 (BOM) 序列化为 0xEF 0xBB 0xBF。</span><span class="sxs-lookup"><span data-stu-id="f37c5-461">The Unicode byte order mark (BOM) is serialized as 0xEF 0xBB 0xBF.</span></span> <span data-ttu-id="f37c5-462">请注意，Unicode 标准既不需要也不建议使用 BOM 的 utf-8 编码的流。</span><span class="sxs-lookup"><span data-stu-id="f37c5-462">Note that the Unicode Standard neither requires nor recommends the use of a BOM for UTF-8 encoded streams.</span></span>  
  
 <span data-ttu-id="f37c5-463">可以实例化<xref:System.Text.UTF8Encoding>对象，其<xref:System.Text.UTF8Encoding.GetPreamble%2A>方法按以下方式返回有效的物料清单：</span><span class="sxs-lookup"><span data-stu-id="f37c5-463">You can instantiate a <xref:System.Text.UTF8Encoding> object whose <xref:System.Text.UTF8Encoding.GetPreamble%2A> method returns a valid BOM in the following ways:</span></span>  
  
-   <span data-ttu-id="f37c5-464">通过检索<xref:System.Text.UTF8Encoding>返回对象<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="f37c5-464">By retrieving the <xref:System.Text.UTF8Encoding> object returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="f37c5-465">通过调用<xref:System.Text.UTF8Encoding>构造函数与`encoderShouldEmitUTF8Identifier`参数并将设置其值设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="f37c5-465">By calling a <xref:System.Text.UTF8Encoding> constructor with a `encoderShouldEmitUTF8Identifier` parameter and setting its value set to `true`.</span></span>  
  
 <span data-ttu-id="f37c5-466">所有其他<xref:System.Text.UTF8Encoding>对象配置为返回空数组而不是有效的物料清单。</span><span class="sxs-lookup"><span data-stu-id="f37c5-466">All other <xref:System.Text.UTF8Encoding> objects are configured to return an empty array rather than a valid BOM.</span></span>  
  
 <span data-ttu-id="f37c5-467">BOM 提供近乎确定标识的文件，否则将失去对其编码的引用的编码，例如无标记或标记错误 web 数据或存储时业务的随机文本文件没有国际关注点。</span><span class="sxs-lookup"><span data-stu-id="f37c5-467">The BOM provide nearly certain identification of an encoding for files that otherwise have lost a reference to their encoding, such as untagged or improperly tagged web data or random text files stored when a business did not have international concerns.</span></span> <span data-ttu-id="f37c5-468">如果数据一致和正确的标记，可能避免通常用户问题。</span><span class="sxs-lookup"><span data-stu-id="f37c5-468">Often user problems might be avoided if data is consistently and properly tagged.</span></span>  
  
 <span data-ttu-id="f37c5-469">提供编码类型的标准，BOM 是有点多余。</span><span class="sxs-lookup"><span data-stu-id="f37c5-469">For standards that provide an encoding type, a BOM is somewhat redundant.</span></span> <span data-ttu-id="f37c5-470">但是，它可以用于帮助发送正确的编码标头的服务器。</span><span class="sxs-lookup"><span data-stu-id="f37c5-470">However, it can be used to help a server send the correct encoding header.</span></span> <span data-ttu-id="f37c5-471">或者，它可以用作回退的编码是否则丢失的情况下。</span><span class="sxs-lookup"><span data-stu-id="f37c5-471">Alternatively, it can be used as a fallback in case the encoding is otherwise lost.</span></span>  
  
 <span data-ttu-id="f37c5-472">有一些缺点使用 BOM。</span><span class="sxs-lookup"><span data-stu-id="f37c5-472">There are some disadvantages to using a BOM.</span></span> <span data-ttu-id="f37c5-473">例如，了解如何限制使用 BOM 的数据库字段很难。</span><span class="sxs-lookup"><span data-stu-id="f37c5-473">For example, knowing how to limit the database fields that use a BOM can be difficult.</span></span> <span data-ttu-id="f37c5-474">文件串联可以也是个问题，例如，在此类合并的文件时不必要的字符可能出现的中间数据的方式。</span><span class="sxs-lookup"><span data-stu-id="f37c5-474">Concatenation of files can be a problem also, for example, when files are merged in such a way that an unnecessary character can end up in the middle of data.</span></span> <span data-ttu-id="f37c5-475">但是，尽管有几个缺点下, 强烈建议使用一个 BOM。</span><span class="sxs-lookup"><span data-stu-id="f37c5-475">In spite of the few disadvantages, however, the use of a BOM is highly recommended.</span></span>  
  
 <span data-ttu-id="f37c5-476">有关字节顺序和字节顺序标记的详细信息，请参阅 Unicode Standard [Unicode 主页](http://go.microsoft.com/fwlink/?LinkId=37123)。</span><span class="sxs-lookup"><span data-stu-id="f37c5-476">For more information on byte order and the byte order mark, see The Unicode Standard at the [Unicode home page](http://go.microsoft.com/fwlink/?LinkId=37123).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f37c5-477">若要确保正确解码已编码的字节在保存为文件或流时，可以添加前缀带前导码编码字节的流的开始位置。</span><span class="sxs-lookup"><span data-stu-id="f37c5-477">To ensure that the encoded bytes are decoded properly when they are saved as a file or as a stream, you can prefix the beginning of a stream of encoded bytes with a preamble.</span></span> <span data-ttu-id="f37c5-478">请注意，<xref:System.Text.UTF8Encoding.GetBytes%2A>方法不预置到编码字节的序列 BOM; 提供相应的字节流的开始处 BOM 是开发人员的责任。</span><span class="sxs-lookup"><span data-stu-id="f37c5-478">Note that the <xref:System.Text.UTF8Encoding.GetBytes%2A> method does not prepend a BOM to a sequence of encoded bytes; supplying a BOM at the beginning of an appropriate byte stream is the developer's responsibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-479">下面的示例使用<xref:System.Text.UTF8Encoding.GetPreamble%2A>方法以返回 Unicode 字节顺序标记以 utf-8 格式编码。</span><span class="sxs-lookup"><span data-stu-id="f37c5-479">The following example uses the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to return the Unicode byte order mark encoded in UTF-8 format.</span></span> <span data-ttu-id="f37c5-480">请注意的默认构造函数<xref:System.Text.UTF8Encoding>不提供一个前导码。</span><span class="sxs-lookup"><span data-stu-id="f37c5-480">Notice that the default constructor for <xref:System.Text.UTF8Encoding> does not provide a preamble.</span></span>  
  
 [!code-cpp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CPP/getpreamble-.cpp#1)]
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/CS/getpreamble-.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.UTF8Encoding.GetPreamble Example/VB/getpreamble-.vb#1)]  
  
 <span data-ttu-id="f37c5-481">下面的示例实例化两个<xref:System.Text.UTF8Encoding>对象，通过调用无参数的第一个<xref:System.Text.UTF8Encoding.%23ctor>构造函数，不通过调用提供 BOM，并且第二个<xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29>构造函数使用其`encoderShouldEmitUTF8Identifier`参数设置为`true`.</span><span class="sxs-lookup"><span data-stu-id="f37c5-481">The following example instantiates two <xref:System.Text.UTF8Encoding> objects, the first by calling the parameterless <xref:System.Text.UTF8Encoding.%23ctor> constructor, which does not provide a BOM, and the second by calling the <xref:System.Text.UTF8Encoding.%23ctor%28System.Boolean%29> constructor with its `encoderShouldEmitUTF8Identifier` argument set to `true`.</span></span> <span data-ttu-id="f37c5-482">然后，它调用<xref:System.Text.UTF8Encoding.GetPreamble%2A>方法以向文件写入 UF8 编码的字符串之前写入 BOM。</span><span class="sxs-lookup"><span data-stu-id="f37c5-482">It then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to write the BOM to a file before writing a UF8-encoded string.</span></span> <span data-ttu-id="f37c5-483">如控制台输出示例中所示，保存第二个编码器中的字节的文件将具有三个比第一个的多个字节。</span><span class="sxs-lookup"><span data-stu-id="f37c5-483">As the console output from the example shows, the file that saves the bytes from the second encoder has three more bytes than the first.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/cs/getpreamble1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetPreamble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getpreamble/vb/getpreamble1.vb#1)]  
  
 <span data-ttu-id="f37c5-484">此外可以通过使用比较文件`fc`命令控制台窗口中，或者您可以检查包含十六进制视图模式的文本编辑器中的文件。</span><span class="sxs-lookup"><span data-stu-id="f37c5-484">You can also compare the files by using the `fc` command in a console window, or you can inspect the files in a text editor that includes a Hex View mode.</span></span> <span data-ttu-id="f37c5-485">请注意，如果在支持 utf-8 的编辑器中打开该文件，BOM 将不显示。</span><span class="sxs-lookup"><span data-stu-id="f37c5-485">Note that when the file is opened in an editor that supports UTF-8, the BOM is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.UTF8Encoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="uTF8Encoding.GetString (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="f37c5-486">The byte array containing the sequence of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-486">The byte array containing the sequence of bytes to decode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f37c5-487">The index of the first byte to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-487">The index of the first byte to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="f37c5-488">The number of bytes to decode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-488">The number of bytes to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37c5-489">Decodes a range of bytes from a byte array into a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-489">Decodes a range of bytes from a byte array into a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37c5-490">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-490">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37c5-491">使用错误检测的无效的序列将导致此方法会引发<xref:System.ArgumentException>异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-491">With error detection, an invalid sequence causes this method to throw an <xref:System.ArgumentException> exception.</span></span> <span data-ttu-id="f37c5-492">如果没有错误检测，将忽略无效的序列，并不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="f37c5-492">Without error detection, invalid sequences are ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="f37c5-493">如果要解码的字节范围包含字节顺序标记 (BOM)，并且非 BOM 注意类型的方法已返回的字节数组，此方法返回的字符数组中包含的字符 U + FFFE。</span><span class="sxs-lookup"><span data-stu-id="f37c5-493">If the range of bytes to be decoded includes the byte order mark (BOM) and the byte array was returned by a method of a non-BOM aware type, the character U+FFFE is included in the character array returned by this method.</span></span> <span data-ttu-id="f37c5-494">您可以通过调用删除它<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-494">You can remove it by calling the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f37c5-495">数据转换，如从流中读取的数据可能仅在连续的块中可用。</span><span class="sxs-lookup"><span data-stu-id="f37c5-495">Data to be converted, such as data read from a stream, might be available only in sequential blocks.</span></span> <span data-ttu-id="f37c5-496">在这种情况下，或如果数据量很大，它需要划分为较小的块，请使用<xref:System.Text.Decoder>或<xref:System.Text.Encoder>提供<xref:System.Text.UTF8Encoding.GetDecoder%2A>方法或<xref:System.Text.UTF8Encoding.GetEncoder%2A>方法，分别。</span><span class="sxs-lookup"><span data-stu-id="f37c5-496">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.UTF8Encoding.GetDecoder%2A> method or the <xref:System.Text.UTF8Encoding.GetEncoder%2A> method, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37c5-497">下面的示例通过调用初始化数组<xref:System.Text.UTF8Encoding.GetByteCount%2A>方法来确定完全多少个字节所需的已编码的字符串，然后添加字节顺序标记 (BOM) 的大小。</span><span class="sxs-lookup"><span data-stu-id="f37c5-497">The following example initializes an array by calling the <xref:System.Text.UTF8Encoding.GetByteCount%2A> method to determine exactly how many bytes are required for an encoded string and then adding the size of the byte order mark (BOM).</span></span> <span data-ttu-id="f37c5-498">该示例然后调用<xref:System.Text.UTF8Encoding.GetPreamble%2A>方法来存储到之前调用数组 BOM<xref:System.Text.UTF8Encoding.GetBytes%2A>方法来存储已编码的字节数组。</span><span class="sxs-lookup"><span data-stu-id="f37c5-498">The example then calls the <xref:System.Text.UTF8Encoding.GetPreamble%2A> method to store the BOM to the array before calling the <xref:System.Text.UTF8Encoding.GetBytes%2A> method to store the encoded bytes to the array.</span></span> <span data-ttu-id="f37c5-499">该示例然后调用<xref:System.Text.UTF8Encoding.GetString%2A>方法解码字符串。</span><span class="sxs-lookup"><span data-stu-id="f37c5-499">The example then calls the <xref:System.Text.UTF8Encoding.GetString%2A> method to decode the string.</span></span>  
  
 [!code-csharp[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/cs/getstring1.cs#1)]
 [!code-vb[System.Text.UTF8Encoding.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.utf8encoding.getstring/vb/getstring1.vb#1)]  
  
 <span data-ttu-id="f37c5-500">请注意，在这种情况下已解码的字符串与不同的原始字符串，因为它开始于 16 位字节顺序标记 U + FFFD。</span><span class="sxs-lookup"><span data-stu-id="f37c5-500">Note that in this case the decoded string differs from the original string, since it begins with a 16-bit byte order mark U+FFFD.</span></span> <span data-ttu-id="f37c5-501">这意味着两个字符串将比较为不等，并且，如果字符串为输出，BOM 将显示为替换字符"？"。</span><span class="sxs-lookup"><span data-stu-id="f37c5-501">This means that the two strings will compare as unequal, and that if the string is output, the BOM will be displayed as the replacement character "?".</span></span> <span data-ttu-id="f37c5-502">若要删除的字符串的开始处的物料清单，可以调用<xref:System.String.TrimStart%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f37c5-502">To remove the BOM at the beginning of the string, you can call the <xref:System.String.TrimStart%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f37c5-503">
            <paramref name="bytes" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-503">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f37c5-504">
            <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-504">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f37c5-505">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-505">-or-  <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f37c5-506">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-506">Error detection is enabled, and <paramref name="bytes" /> contains an invalid sequence of bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.Text.DecoderFallbackException">
          <span data-ttu-id="f37c5-507">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37c5-507">A fallback occurred (see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md) for complete explanation)  -and-  <see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Text.UTF8Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetDecoder" />
        <altmember cref="M:System.Text.UTF8Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.UTF8Encoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>