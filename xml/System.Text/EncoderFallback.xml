<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncoderFallback.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5441a9abdda3baaf6b1b6bd11d140c5d87eee9364.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">441a9abdda3baaf6b1b6bd11d140c5d87eee9364</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.EncoderFallback">
          <source>Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an encoded output byte sequence.</source>
          <target state="translated">为不能转换为已编码输出字节序列的输入字符提供称为“回退”的失败处理机制。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>An encoding maps a Unicode character to an encoded sequence of bytes.</source>
          <target state="translated">编码映射到编码的字节序列的 Unicode 字符。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>A particular encoding is represented by a type that is derived from the <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> class.</source>
          <target state="translated">特定编码由派生自的类型表示<ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>Specifically, a character is encoded to a byte sequence by calling the encoding type's <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method, and the byte sequence is decoded to a character array or a string by calling the <ph id="ph2">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">具体而言，字符编码为字节序列通过调用编码类型<ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType&gt;</ph>方法，并对字节序列解码为字符数组或字符串通过调用<ph id="ph2">&lt;xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType&gt;</ph>或<ph id="ph3">&lt;xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>An encoding operation can fail if the input character cannot be represented by the encoding.</source>
          <target state="translated">如果输入的字符不能表示进行编码，编码的操作可能会失败。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>For example, an <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object cannot encode a character whose Unicode code point value is outside the range U+0000 to U+007F.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>对象不能进行编码的 Unicode 码位值超出范围 U + 0000 到 U + 007F 的字符。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>When an encoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</source>
          <target state="translated">当编码的转换，因此无法执行.NET Framework 提供一种称为回退的失败处理机制。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>Your application can use predefined .NET Framework encoder fallbacks, or it can create a custom encoder fallback derived from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> classes.</source>
          <target state="translated">你的应用程序可以使用预定义的.NET Framework 编码器回退，或者它可以创建自定义编码器回退派生自<ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source><ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> are the base classes for all encoding fallback handlers in the .NET Framework.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> 和<ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>所有基类都编码在.NET Framework 中的回退处理程序。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>They support the following three kinds of fallback handling mechanisms:</source>
          <target state="translated">它们支持以下三种回退处理机制：</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>Best-fit fallback, which maps valid Unicode characters that cannot be encoded to an approximate equivalent.</source>
          <target state="translated">最佳的回退，将不能进行编码的有效 Unicode 字符映射到近似等效值。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>For example, a best-fit fallback handler for the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class might map Æ (U+00C6) to AE (U+0041 + U+0045).</source>
          <target state="translated">例如的最佳回退处理程序<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>类可能会映射到要从中 （U + 0041 + U + 0045） 的 Æ (U + 00 C 6)。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>A best-fit fallback handler might also be implemented to transliterate one alphabet (such as Cyrillic) to another (such as Latin or Roman).</source>
          <target state="translated">最佳回退处理程序还可以实现音译有一个字母 （如西里尔文） 到另一个 （如 Latin 或罗马）。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The .NET Framework does not provide any public best-fit fallback implementations.</source>
          <target state="translated">.NET Framework 不提供任何公共最佳回退实现。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>Replacement fallback, which replaces each character that cannot be encoded with a predefined string.</source>
          <target state="translated">替换回退，每个的替换字符不能与预定义的字符串进行编码。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The .NET Framework provides a predefined replacement fallback handler.</source>
          <target state="translated">.NET Framework 提供了预定义的替换回退处理程序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> class replaces each byte sequence that cannot be decoded with a question mark character ("?", or U+003F) or a REPLACEMENT CHARACTER (U+FFFD).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>类替换为问号字符为每个不能进行解码的字节序列 ("？"，或 U + 003F) 或替换字符 (U + FFFD)。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>You can customize the replacement string by specifying a substitute in the call to the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">您可以通过对的调用中指定替代来自定义替换字符串<ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>After the substitute string is emitted, the encoding operation continues converting the remainder of the input.</source>
          <target state="translated">发出替代字符串后，将继续编码操作，将转换输入的其余部分。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>Exception fallback, which throws an exception when a character cannot be encoded.</source>
          <target state="translated">一个字符不能进行编码时将引发异常的异常回退。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The .NET Framework provides a predefined exception fallback handler.</source>
          <target state="translated">.NET Framework 提供了一个预定义的异常回退处理程序。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> class throws an <ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph> when an invalid character is encountered, and the encoding operation terminates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>类将引发<ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph>时遇到无效的字符时，和编码操作将终止。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>If you choose to implement a custom solution, you must override the following abstract members of the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> class:</source>
          <target state="translated">如果你选择实现自定义解决方案，则必须重写的以下抽象成员<ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph>类：</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A&gt;</ph> method, which returns a class instance derived from <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A&gt;</ph>方法，它返回派生自的类实例<ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>Depending on the type of fallback handler that you are developing, the <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> implementation is responsible for performing the mapping or replacement, or for throwing the exception.</source>
          <target state="translated">具体取决于你正在开发的回退处理程序的类型<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>实现负责执行映射或更换过程中，或用于引发异常。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallback.MaxCharCount%2A&gt;</ph> property, which returns the maximum number of characters that the fallback implementation can return.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallback.MaxCharCount%2A&gt;</ph>属性，它返回的最大回退实现可以返回的字符数。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>For an exception fallback handler, its value should be zero.</source>
          <target state="translated">对于异常回退处理程序，其值应为零。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncoderFallback">
          <source>For more information about encoding, decoding, and fallback strategies, see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>.</source>
          <target state="translated">有关编码、 解码和回退策略的详细信息，请参阅<bpt id="p1">[</bpt>.NET Framework 中的字符编码<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallback.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallback.CreateFallbackBuffer">
          <source>When overridden in a derived class, initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> class.</source>
          <target state="translated">在派生类中重写时，将初始化 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallbackBuffer" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Text.EncoderFallback.CreateFallbackBuffer">
          <source>An object that provides a fallback buffer for an encoder.</source>
          <target state="translated">提供编码器回退缓冲区的对象。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallback.CreateFallbackBuffer">
          <source>This method returns an object derived from <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> that is responsible for performing the fallback operation.</source>
          <target state="translated">此方法返回一个对象，该对象派生自<ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>，它负责执行回退的操作。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallback.CreateFallbackBuffer">
          <source>For example, of the predefined <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> implementations in the .NET Framework, the <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType&gt;</ph> method returns an <ph id="ph3">&lt;xref:System.Text.EncoderReplacementFallbackBuffer&gt;</ph> object, and the <ph id="ph4">&lt;xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType&gt;</ph> method returns an <ph id="ph5">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> object.</source>
          <target state="translated">例如，预定义的<ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph>在.NET Framework 中，实现<ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType&gt;</ph>方法返回<ph id="ph3">&lt;xref:System.Text.EncoderReplacementFallbackBuffer&gt;</ph>对象，与<ph id="ph4">&lt;xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=nameWithType&gt;</ph>方法返回<ph id="ph5">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallback.CreateFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A&gt;</ph> method is called by an encoder when it encounters the first character that it is unable to encode.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A&gt;</ph>遇到它不能进行编码的第一个字符时，编码器调用的方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncoderFallback.CreateFallbackBuffer">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> object returned by this method provides the fallback implementation and is responsible for returning the byte array that replaces the character or characters that could not be encoded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph>此方法返回的对象提供回退实现，并负责返回替换的字符或无法进行编码的字符的字节数组。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Text.EncoderFallback.ExceptionFallback">
          <source>Gets an object that throws an exception when an input character cannot be encoded.</source>
          <target state="translated">获取一个对象，在无法对输入字符进行编码时，该对象将引发异常。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallback.ExceptionFallback">
          <source>A type derived from the <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> class.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> 类派生的类型。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallback.ExceptionFallback">
          <source>The default value is a <ph id="ph1">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph> object.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Text.EncoderFallback.MaxCharCount">
          <source>When overridden in a derived class, gets the maximum number of characters the current <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> object can return.</source>
          <target state="translated">当用派生类重写时，获取当前 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> 对象能返回的最大字符数。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallback.MaxCharCount">
          <source>The maximum number of characters the current <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> object can return.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> 对象能返回的最大字符数。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallback.MaxCharCount">
          <source>For an exception fallback handler, this property should return zero.</source>
          <target state="translated">对于异常回退处理程序，此属性应返回零。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Text.EncoderFallback.ReplacementFallback">
          <source>Gets an object that outputs a substitute string in place of an input character that cannot be encoded.</source>
          <target state="translated">获取一个对象，该对象会输出一个替代字符串来代替无法编码的输入字符。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallback.ReplacementFallback">
          <source>A type derived from the <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> class.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Text.EncoderFallback" /&gt;</ph> 类派生的类型。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.EncoderFallback.ReplacementFallback">
          <source>The default value is a <ph id="ph1">&lt;see cref="T:System.Text.EncoderReplacementFallback" /&gt;</ph> object that replaces unknown input characters with the QUESTION MARK character ("?", U+003F).</source>
          <target state="translated">默认值是 <ph id="ph1">&lt;see cref="T:System.Text.EncoderReplacementFallback" /&gt;</ph> 对象，该对象将未知输入字符替换为问号字符（“?”，U+003F）。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>