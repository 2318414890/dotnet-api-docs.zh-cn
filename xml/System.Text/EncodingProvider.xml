<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncodingProvider.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5213b813ec5e5a38a3816aedc55e2d6e2e5a7636c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">213b813ec5e5a38a3816aedc55e2d6e2e5a7636c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.EncodingProvider">
          <source>Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.</source>
          <target state="translated">提供编码提供程序的基类，后者提供在特定平台上不可用的编码。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>An encoding provider supplies encodings that are not otherwise available on a particular target platform.</source>
          <target state="translated">编码提供程序提供否则不可用特定的目标平台上的编码。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.</source>
          <target state="translated">.NET Framework 的 Windows 桌面上支持较大数量的字符编码和代码页。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">你可以在 Windows 桌面上获取编码在.NET Framework 中可用的完整列表，通过调用<ph id="ph1">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>.NET Core, on the other hand, by default supports only the following encodings:</source>
          <target state="translated">.NET 核心，另一方面，默认情况下支持仅以下编码：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>ASCII (code page 20127), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">ASCII （代码页为 20127） 返回<ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>ISO-8859-1 (code page 28591).</source>
          <target state="translated">ISO 8859-1 （代码页 28591）。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-7 (code page 65000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Utf-7 （代码页为 65000） 返回<ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-8 (code page 65001), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Utf-8 （代码页 65001），它返回<ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-16 and UTF-16LE (code page 1200), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A&gt;</ph> property.</source>
          <target state="translated">Utf-16 和 UTF-16LE （代码页为 1200年） 返回<ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-16BE (code page 1201), which is instantiated by calling the <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> constructor with a <ph id="ph3">`bigEndian`</ph> value of <ph id="ph4">`true`</ph>.</source>
          <target state="translated">UTF-16BE （代码页 1201年），它可以通过调用实例化<ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph>具有构造函数<ph id="ph3">`bigEndian`</ph>值<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-32 and UTF-32LE (code page 12000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Utf-32 和 UTF-32LE （代码页 12000），即<ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>UTF-32BE (code page 12001), which is instantiated by calling an <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> constructor that has a <ph id="ph2">`bigEndian`</ph> parameter and providing a value of <ph id="ph3">`true`</ph> in the method call.</source>
          <target state="translated">UTF-32BE （代码页 12001），它可以通过调用实例化<ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph>构造函数具有<ph id="ph2">`bigEndian`</ph>参数并提供的值<ph id="ph3">`true`</ph>方法调用中。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Starting with the .NET Framework 4.6, <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> is the base class that makes otherwise unavailable encodings available to the .NET Framework.</source>
          <target state="translated">从.NET Framework 4.6，开始<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>是使否则不可用的基类可用的.NET framework 的编码方式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>This involves the following steps:</source>
          <target state="translated">这涉及以下步骤：</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Define a subclass of <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> that overrides the two abstract <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A&gt;</ph> overloads, <ph id="ph3">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> and <ph id="ph4">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%29&gt;</ph>.</source>
          <target state="translated">定义的一个子类<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>可重写两个抽象<ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A&gt;</ph>重载，<ph id="ph3">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph>和<ph id="ph4">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>These overloads return the otherwise unsupported encoding by code page identifier and by name.</source>
          <target state="translated">这些重载返回否则不受支持的编码按代码页标识符和名称。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Note that you can also choose to return a default encoding if the <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> method is called with an argument of 0.</source>
          <target state="translated">请注意，你还可以选择返回默认编码如果<ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph>方法调用参数为 0。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Optionally, you can override the virtual <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> methods.</source>
          <target state="translated">（可选） 你可以重写虚拟<ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>In most cases, this is not necessary, since the base class provides a default implementation.</source>
          <target state="translated">在大多数情况下，这不是有必要，因为基类提供了默认实现。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Pass the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> instance to the <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph> method to make the encodings supplied by the <ph id="ph3">&lt;xref:System.Text.EncodingProvider&gt;</ph> object available to the common language runtime.</source>
          <target state="translated">传递<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>到实例<ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType&gt;</ph>方法来执行由提供的编码<ph id="ph3">&lt;xref:System.Text.EncodingProvider&gt;</ph>公共语言运行时可用的对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>Call an <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> overload to retrieve the encoding.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph>重载来检索的编码。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> method will call the corresponding <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph> to determine whether it can supply the requested encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType&gt;</ph>方法将调用对应<ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType&gt;</ph>以确定是否可以提供所请求编码。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>The .NET Framework Class Library provides one static property, <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph>, that returns an <ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to <ph id="ph3">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> applications.</source>
          <target state="translated">.NET Framework 类库提供了一个静态属性， <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType&gt;</ph>，返回<ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph>可以使编码的整套可用在桌面.NET Framework 类库可用的对象<ph id="ph3">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph>应用程序。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.EncodingProvider">
          <source>In addition, you can derive from the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> class to make your own encodings available.</source>
          <target state="translated">此外，你可以从派生<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>类以提供您自己的编码。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Text.EncodingProvider">
          <source>Returns an encoding.</source>
          <target state="translated">返回一个编码。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>The code page identifier of the requested encoding.</source>
          <target state="translated">所请求编码的代码页标识符。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Returns the encoding associated with the specified code page identifier.</source>
          <target state="translated">返回与指定代码页标识符关联的编码。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>The encoding that is associated with the specified code page, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">与指定代码页关联的编码，如果此 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> 无法返回对应于 <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> 的有效编码，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Notes to inheritors</source>
          <target state="translated">对继承者的说明</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You override the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method to return the encoding or encodings supported by your <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> subclass.</source>
          <target state="translated">重写<bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept>方法返回的编码或支持的编码你<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>子类。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>When user code attempts to retrieve an encoding by calling the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method, the method passes the <ph id="ph1">`codepage`</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">当用户代码尝试检索通过调用的编码<bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept>方法，该方法将传递<ph id="ph1">`codepage`</ph>到每个已注册的编码提供，直到一个返回有效的编码的标识符。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>If none returns a valid encoding, the <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph1">`codepage`</ph>.</source>
          <target state="translated">如果无返回的有效编码， <bpt id="p1">[</bpt>GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.Int32)&gt;)</ept>方法尝试检索其代码页标识符是缓存的编码<ph id="ph1">`codepage`</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Because of this, if <ph id="ph1">`codepage`</ph> is not the code page identifier of an encoding that you support, the method should return <ph id="ph2">`null`</ph>; it should never throw an exception.</source>
          <target state="translated">因此，如果<ph id="ph1">`codepage`</ph>不是代码页编码的标识符的支持，该方法应返回<ph id="ph2">`null`</ph>; 它应永远不会引发异常。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Note that you can also choose to return a default code page if the value of the <ph id="ph1">`codepage`</ph> argument is 0.</source>
          <target state="translated">请注意，你还可以选择返回默认代码页，如果值<ph id="ph1">`codepage`</ph>自变量为 0。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Notes to callers</source>
          <target state="translated">对调用方的说明</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>This method is called by the <bpt id="p1">[</bpt>Encoding.GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.Int32)&gt;)</ept> method.</source>
          <target state="translated">调用此方法<bpt id="p1">[</bpt>Encoding.GetEncoding(Int32)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.Int32)&gt;)</ept>方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">不应直接从用户代码来调用它。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> method to return the encoding or encodings supported by your <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> subclass.</source>
          <target state="translated">重写<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph>方法返回的编码或支持的编码你<ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph>子类。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">当用户代码尝试检索通过调用的编码<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>方法，该方法将传递<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>到每个已注册的编码提供，直到一个返回有效的编码的标识符。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">如果无返回的有效编码，<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>方法尝试检索其代码页标识符是缓存的编码<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>Because of this, if <ph id="ph1">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support, the method should return <ph id="ph2">&lt;see langword="null" /&gt;</ph>; it should never throw an exception.</source>
          <target state="translated">因此，如果<ph id="ph1">&lt;paramref name="codepage" /&gt;</ph>不是代码页编码的标识符的支持，该方法应返回<ph id="ph2">&lt;see langword="null" /&gt;</ph>; 它应永远不会引发异常。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">调用此方法<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">不应直接从用户代码来调用它。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The name of the requested encoding.</source>
          <target state="translated">所请求编码的名称。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Returns the encoding with the specified name.</source>
          <target state="translated">返回具有指定名称的编码。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The encoding that is associated with the specified name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">与指定名称关联的编码，如果此 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> 无法返回对应于 <ph id="ph3">&lt;paramref name="name" /&gt;</ph> 的有效编码，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Notes to inheritors</source>
          <target state="translated">对继承者的说明</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You override the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method to return the encoding or encodings supported by your <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> subclass.</source>
          <target state="translated">重写<bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept>方法返回的编码或支持的编码你<ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph>子类。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>When user code attempts to retrieve an encoding by calling the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method, the method passes the <ph id="ph1">`name`</ph> argument to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">当用户代码尝试检索通过调用的编码<bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept>方法，该方法将传递<ph id="ph1">`name`</ph>到每个已注册的编码提供，直到一个返回有效的编码的自变量。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>If none returns a valid encoding, the <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept> method attempts to retrieve a cached encoding whose name is <ph id="ph1">`name`</ph>.</source>
          <target state="translated">如果无返回的有效编码， <bpt id="p1">[</bpt>GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.EncodingProvider.GetEncoding(System.String)&gt;)</ept>方法尝试检索其名称是缓存的编码<ph id="ph1">`name`</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Because of this, if <ph id="ph1">`name`</ph> is not the name of an encoding that you support, the method should return <ph id="ph2">`null`</ph>.</source>
          <target state="translated">因此，如果<ph id="ph1">`name`</ph>不支持，该方法应返回编码的名称<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The only case in which the method should throw an exception is if <ph id="ph1">`name`</ph> is <ph id="ph2">`null`</ph>.</source>
          <target state="translated">在其中方法应引发异常的唯一情况是如果<ph id="ph1">`name`</ph>是<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Notes to callers</source>
          <target state="translated">对调用方的说明</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>This method is called by the <bpt id="p1">[</bpt>Encoding.GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.String)&gt;)</ept> method.</source>
          <target state="translated">调用此方法<bpt id="p1">[</bpt>Encoding.GetEncoding(String)<ept id="p1">](&lt;xref:System.Text.Encoding.GetEncoding(System.String)&gt;)</ept>方法。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">不应直接从用户代码来调用它。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> method to return the encoding or encodings supported by your <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> subclass.</source>
          <target state="translated">重写<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph>方法返回的编码或支持的编码你<ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph>子类。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> argument to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">当用户代码尝试检索通过调用的编码<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph>方法，该方法将传递<ph id="ph2">&lt;paramref name="name" /&gt;</ph>到每个已注册的编码提供，直到一个返回有效的编码的自变量。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method attempts to retrieve a cached encoding whose name is <ph id="ph2">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">如果无返回的有效编码，<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph>方法尝试检索其名称是缓存的编码<ph id="ph2">&lt;paramref name="name" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>Because of this, if <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not the name of an encoding that you support, the method should return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">因此，如果<ph id="ph1">&lt;paramref name="name" /&gt;</ph>不支持，该方法应返回编码的名称<ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>The only case in which the method should throw an exception is if <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">在其中方法应引发异常的唯一情况是如果<ph id="ph1">&lt;paramref name="name" /&gt;</ph>是<ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph> method.</source>
          <target state="translated">调用此方法<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">不应直接从用户代码来调用它。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The code page identifier of the requested encoding.</source>
          <target state="translated">所请求编码的代码页标识符。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</source>
          <target state="translated">一个对象，在无法用此编码对字符进行编码时，该对象可用来提供错误处理过程。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.</source>
          <target state="translated">一个对象，在无法用此编码对字节序列进行解码时，该对象可用来提供错误处理过程。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Returns the encoding associated with the specified code page identifier.</source>
          <target state="translated">返回与指定代码页标识符关联的编码。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</source>
          <target state="translated">参数指定一个错误处理程序，用于处理无法编码的字符和无法解码的字节序列。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The encoding that is associated with the specified code page, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">与指定代码页关联的编码，如果此 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> 无法返回对应于 <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> 的有效编码，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The <ph id="ph1">`encoderFallback`</ph> and <ph id="ph2">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</source>
          <target state="translated"><ph id="ph1">`encoderFallback`</ph>和<ph id="ph2">`decoderFallback`</ph>参数是定义，如果编码器不能将字符转换为一个字节序列或解码器不能将一个字节序列转换为字符所用的回退策略对象。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The .NET Framework provides the following fallback mechanisms:</source>
          <target state="translated">.NET Framework 提供了以下回退机制：</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Exception fallback.</source>
          <target state="translated">异常回退。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</source>
          <target state="translated">如果<ph id="ph1">`encoderFallback`</ph>自变量是的一个实例<ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>，或<ph id="ph3">`decoderExceptionFallback`</ph>自变量是的一个实例<ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>，编码的方法引发异常，如果字符不能进行编码，并且如果一个字节，解码方法将引发异常无法解码序列。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Replacement fallback.</source>
          <target state="translated">替换回退。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</source>
          <target state="translated">如果<ph id="ph1">`encoderFallback`</ph>自变量是的一个实例<ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>，或<ph id="ph3">`decoderExceptionFallback`</ph>自变量是的一个实例<ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>、 编码和解码方法代替替换字符串的字符不能进行编码和字节序列不能为解码。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</source>
          <target state="translated">如果被替换回退对象通过调用默认构造函数实例化，则替换字符"？"。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, you can specify the replacement string.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>构造函数，你可以指定替换字符串。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Best-fit fallback.</source>
          <target state="translated">最佳回退。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You can derive from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.</source>
          <target state="translated">你可以从派生<ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>类，以实现最佳的替换机制。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because calls to this method use your implementation of the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph> method, you do not have to override it.</source>
          <target state="translated">因为调用此方法使用的实现<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /&gt;</ph>方法，你无需重写它。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">当用户代码尝试检索通过调用的编码<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>方法，该方法将传递<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>到每个已注册的编码提供，直到一个返回有效的编码的标识符。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">如果无返回的有效编码，<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>方法尝试检索其代码页标识符是缓存的编码<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because of this, if you do choose to override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, your override should return <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support; it should never throw an exception.</source>
          <target state="translated">因此，如果你选择重写<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>方法，重写应返回<ph id="ph2">&lt;see langword="null" /&gt;</ph>如果<ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>不是编码的代码页标识符支持; 它应永远不会引发异常。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method.</source>
          <target state="translated">调用此方法<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">不应直接从用户代码来调用它。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The name of the preferred encoding.</source>
          <target state="translated">首选编码的名称。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</source>
          <target state="translated">一个对象，在无法用此编码对字符进行编码时，该对象可用来提供错误处理过程。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</source>
          <target state="translated">一个对象，在无法用当前编码对字节序列进行解码时，该对象可用来提供错误处理过程。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Returns the encoding associated with the specified name.</source>
          <target state="translated">返回与指定名称关联的编码。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</source>
          <target state="translated">参数指定一个错误处理程序，用于处理无法编码的字符和无法解码的字节序列。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The encoding that is associated with the specified name, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> cannot return a valid encoding that corresponds to <ph id="ph3">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">与指定名称关联的编码，如果此 <ph id="ph2">&lt;see cref="T:System.Text.EncodingProvider" /&gt;</ph> 无法返回对应于 <ph id="ph3">&lt;paramref name="name" /&gt;</ph> 的有效编码，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The <ph id="ph1">`encoderFallback`</ph> and <ph id="ph2">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</source>
          <target state="translated"><ph id="ph1">`encoderFallback`</ph>和<ph id="ph2">`decoderFallback`</ph>参数是定义，如果编码器不能将字符转换为一个字节序列或解码器不能将一个字节序列转换为字符所用的回退策略对象。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>The .NET Framework provides the following fallback mechanisms:</source>
          <target state="translated">.NET Framework 提供了以下回退机制：</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Exception fallback.</source>
          <target state="translated">异常回退。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</source>
          <target state="translated">如果<ph id="ph1">`encoderFallback`</ph>自变量是的一个实例<ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>，或<ph id="ph3">`decoderExceptionFallback`</ph>自变量是的一个实例<ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>，编码的方法引发异常，如果字符不能进行编码，并且如果一个字节，解码方法将引发异常无法解码序列。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Replacement fallback.</source>
          <target state="translated">替换回退。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</source>
          <target state="translated">如果<ph id="ph1">`encoderFallback`</ph>自变量是的一个实例<ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>，或<ph id="ph3">`decoderExceptionFallback`</ph>自变量是的一个实例<ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>、 编码和解码方法代替替换字符串的字符不能进行编码和字节序列不能为解码。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</source>
          <target state="translated">如果被替换回退对象通过调用默认构造函数实例化，则替换字符"？"。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph> constructor, you can specify the replacement string.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType&gt;</ph>构造函数，你可以指定替换字符串。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Best-fit fallback.</source>
          <target state="translated">最佳回退。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You can derive from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.</source>
          <target state="translated">你可以从派生<ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>类，以实现最佳的替换机制。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because calls to this method use your implementation of the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph> method, you do not have to override it.</source>
          <target state="translated">因为调用此方法使用的实现<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /&gt;</ph>方法，你无需重写它。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>When user code attempts to retrieve an encoding by calling the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, the method passes the <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph> identifier to every registered encoding provider until one returns a valid encoding.</source>
          <target state="translated">当用户代码尝试检索通过调用的编码<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>方法，该方法将传递<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>到每个已注册的编码提供，直到一个返回有效的编码的标识符。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>If none returns a valid encoding, the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph> method attempts to retrieve a cached encoding whose code page identifier is <ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>.</source>
          <target state="translated">如果无返回的有效编码，<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /&gt;</ph>方法尝试检索其代码页标识符是缓存的编码<ph id="ph2">&lt;paramref name="codepage" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>Because of this, if you do choose to override the <ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method, your override should return <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="codepage" /&gt;</ph> is not the code page identifier of an encoding that you support; it should never throw an exception.</source>
          <target state="translated">因此，如果你选择重写<ph id="ph1">&lt;see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>方法，重写应返回<ph id="ph2">&lt;see langword="null" /&gt;</ph>如果<ph id="ph3">&lt;paramref name="codepage" /&gt;</ph>不是编码的代码页标识符支持; 它应永远不会引发异常。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>This method is called by the <ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph> method.</source>
          <target state="translated">调用此方法<ph id="ph1">&lt;see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
          <source>You should not call it directly from user code.</source>
          <target state="translated">不应直接从用户代码来调用它。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>