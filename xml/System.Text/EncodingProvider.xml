<Type Name="EncodingProvider" FullName="System.Text.EncodingProvider">
  <TypeSignature Language="C#" Value="public abstract class EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncodingProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncodingProvider abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="edcb9-101">提供编码提供程序的基类，后者提供在特定平台上不可用的编码。</span><span class="sxs-lookup"><span data-stu-id="edcb9-101">Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edcb9-102">编码提供程序提供否则不可用特定的目标平台上的编码。</span><span class="sxs-lookup"><span data-stu-id="edcb9-102">An encoding provider supplies encodings that are not otherwise available on a particular target platform.</span></span>  
  
 <span data-ttu-id="edcb9-103">.NET Framework 的 Windows 桌面上支持较大数量的字符编码和代码页。</span><span class="sxs-lookup"><span data-stu-id="edcb9-103">The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.</span></span> <span data-ttu-id="edcb9-104">你可以在 Windows 桌面上获取编码在.NET Framework 中可用的完整列表，通过调用<xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="edcb9-104">You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="edcb9-105">.NET 核心，另一方面，默认情况下支持仅以下编码：</span><span class="sxs-lookup"><span data-stu-id="edcb9-105">.NET Core, on the other hand, by default supports only the following encodings:</span></span>  
  
-   <span data-ttu-id="edcb9-106">ASCII （代码页为 20127） 返回<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="edcb9-106">ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="edcb9-107">ISO 8859-1 （代码页 28591）。</span><span class="sxs-lookup"><span data-stu-id="edcb9-107">ISO-8859-1 (code page 28591).</span></span>  
  
-   <span data-ttu-id="edcb9-108">Utf-7 （代码页为 65000） 返回<xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="edcb9-108">UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="edcb9-109">Utf-8 （代码页 65001），它返回<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="edcb9-109">UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="edcb9-110">Utf-16 和 UTF-16LE （代码页为 1200年） 返回<xref:System.Text.Encoding.Unicode%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="edcb9-110">UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A> property.</span></span>  
  
-   <span data-ttu-id="edcb9-111">UTF-16BE （代码页 1201年），它可以通过调用实例化<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>或<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>具有构造函数`bigEndian`值`true`。</span><span class="sxs-lookup"><span data-stu-id="edcb9-111">UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor with a `bigEndian` value of `true`.</span></span>  
  
-   <span data-ttu-id="edcb9-112">Utf-32 和 UTF-32LE （代码页 12000），即<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="edcb9-112">UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="edcb9-113">UTF-32BE （代码页 12001），它可以通过调用实例化<xref:System.Text.UTF32Encoding>构造函数具有`bigEndian`参数并提供的值`true`方法调用中。</span><span class="sxs-lookup"><span data-stu-id="edcb9-113">UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.</span></span>  
  
 <span data-ttu-id="edcb9-114">从.NET Framework 4.6，开始<xref:System.Text.EncodingProvider>是使否则不可用的基类可用的.NET framework 的编码方式。</span><span class="sxs-lookup"><span data-stu-id="edcb9-114">Starting with the .NET Framework 4.6, <xref:System.Text.EncodingProvider> is the base class that makes otherwise unavailable encodings available to the .NET Framework.</span></span> <span data-ttu-id="edcb9-115">这涉及以下步骤：</span><span class="sxs-lookup"><span data-stu-id="edcb9-115">This involves the following steps:</span></span>  
  
1.  <span data-ttu-id="edcb9-116">定义的一个子类<xref:System.Text.EncodingProvider>可重写两个抽象<xref:System.Text.EncodingProvider.GetEncoding%2A>重载，<xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29>和<xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="edcb9-116">Define a subclass of <xref:System.Text.EncodingProvider> that overrides the two abstract <xref:System.Text.EncodingProvider.GetEncoding%2A> overloads, <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>.</span></span> <span data-ttu-id="edcb9-117">这些重载返回否则不受支持的编码按代码页标识符和名称。</span><span class="sxs-lookup"><span data-stu-id="edcb9-117">These overloads return the otherwise unsupported encoding by code page identifier and by name.</span></span> <span data-ttu-id="edcb9-118">请注意，你还可以选择返回默认编码如果<xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29>方法调用参数为 0。</span><span class="sxs-lookup"><span data-stu-id="edcb9-118">Note that you can also choose to return a default encoding if the <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> method is called with an argument of 0.</span></span>  
  
2.  <span data-ttu-id="edcb9-119">（可选） 你可以重写虚拟<xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29>和<xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29>方法。</span><span class="sxs-lookup"><span data-stu-id="edcb9-119">Optionally, you can override the virtual <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> methods.</span></span> <span data-ttu-id="edcb9-120">在大多数情况下，这不是有必要，因为基类提供了默认实现。</span><span class="sxs-lookup"><span data-stu-id="edcb9-120">In most cases, this is not necessary, since the base class provides a default implementation.</span></span>  
  
3.  <span data-ttu-id="edcb9-121">传递<xref:System.Text.EncodingProvider>到实例<xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType>方法来执行由提供的编码<xref:System.Text.EncodingProvider>公共语言运行时可用的对象。</span><span class="sxs-lookup"><span data-stu-id="edcb9-121">Pass the <xref:System.Text.EncodingProvider> instance to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.</span></span>  
  
4.  <span data-ttu-id="edcb9-122">调用<xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>重载来检索的编码。</span><span class="sxs-lookup"><span data-stu-id="edcb9-122">Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload to retrieve the encoding.</span></span> <span data-ttu-id="edcb9-123"><xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>方法将调用对应<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType>以确定是否可以提供所请求编码。</span><span class="sxs-lookup"><span data-stu-id="edcb9-123">The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> to determine whether it can supply the requested encoding.</span></span>  
  
 <span data-ttu-id="edcb9-124">.NET Framework 类库提供了一个静态属性， <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>，返回<xref:System.Text.EncodingProvider>可以使编码的整套可用在桌面.NET Framework 类库可用的对象[!INCLUDE[net_core](~/includes/net-core-md.md)]应用程序。</span><span class="sxs-lookup"><span data-stu-id="edcb9-124">The .NET Framework Class Library provides one static property, <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>, that returns an <xref:System.Text.EncodingProvider> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to [!INCLUDE[net_core](~/includes/net-core-md.md)] applications.</span></span> <span data-ttu-id="edcb9-125">此外，你可以从派生<xref:System.Text.EncodingProvider>类以提供您自己的编码。</span><span class="sxs-lookup"><span data-stu-id="edcb9-125">In addition, you can derive from the <xref:System.Text.EncodingProvider> class to make your own encodings available.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncodingProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncodingProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="edcb9-126">初始化 <see cref="T:System.Text.EncodingProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="edcb9-126">Initializes a new instance of the <see cref="T:System.Text.EncodingProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="edcb9-127">返回一个编码。</span><span class="sxs-lookup"><span data-stu-id="edcb9-127">Returns an encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="edcb9-128">所请求编码的代码页标识符。</span><span class="sxs-lookup"><span data-stu-id="edcb9-128">The code page identifier of the requested encoding.</span></span></param>
        <summary><span data-ttu-id="edcb9-129">返回与指定代码页标识符关联的编码。</span><span class="sxs-lookup"><span data-stu-id="edcb9-129">Returns the encoding associated with the specified code page identifier.</span></span></summary>
        <returns><span data-ttu-id="edcb9-130">与指定代码页关联的编码，如果此 <see cref="T:System.Text.EncodingProvider" /> 无法返回对应于 <paramref name="codepage" /> 的有效编码，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edcb9-130">The encoding that is associated with the specified code page, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="codepage" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks

### <a name="notes-to-inheritors"></a><span data-ttu-id="edcb9-131">对继承者的说明</span><span class="sxs-lookup"><span data-stu-id="edcb9-131">Notes to inheritors</span></span>

<span data-ttu-id="edcb9-132">重写[GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>)方法返回的编码或支持的编码你<xref:System.Text.EncodingProvider>子类。</span><span class="sxs-lookup"><span data-stu-id="edcb9-132">You override the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method to return the encoding or encodings supported by your <xref:System.Text.EncodingProvider> subclass.</span></span> <span data-ttu-id="edcb9-133">当用户代码尝试检索通过调用的编码[GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>)方法，该方法将传递`codepage`到每个已注册的编码提供，直到一个返回有效的编码的标识符。</span><span class="sxs-lookup"><span data-stu-id="edcb9-133">When user code attempts to retrieve an encoding by calling the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method, the method passes the `codepage` identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="edcb9-134">如果无返回的有效编码， [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>)方法尝试检索其代码页标识符是缓存的编码`codepage`。</span><span class="sxs-lookup"><span data-stu-id="edcb9-134">If none returns a valid encoding, the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method attempts to retrieve a cached encoding whose code page identifier is `codepage`.</span></span> <span data-ttu-id="edcb9-135">因此，如果`codepage`不是代码页编码的标识符的支持，该方法应返回`null`; 它应永远不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="edcb9-135">Because of this, if `codepage` is not the code page identifier of an encoding that you support, the method should return `null`; it should never throw an exception.</span></span>
        
<span data-ttu-id="edcb9-136">请注意，你还可以选择返回默认代码页，如果值`codepage`自变量为 0。</span><span class="sxs-lookup"><span data-stu-id="edcb9-136">Note that you can also choose to return a default code page if the value of the `codepage` argument is 0.</span></span>

## <a name="notes-to-callers"></a><span data-ttu-id="edcb9-137">对调用方的说明</span><span class="sxs-lookup"><span data-stu-id="edcb9-137">Notes to callers</span></span>
        
<span data-ttu-id="edcb9-138">调用此方法[Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>)方法。</span><span class="sxs-lookup"><span data-stu-id="edcb9-138">This method is called by the [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) method.</span></span> <span data-ttu-id="edcb9-139">不应直接从用户代码来调用它。</span><span class="sxs-lookup"><span data-stu-id="edcb9-139">You should not call it directly from user code.</span></span>

        ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="edcb9-140">重写<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />方法返回的编码或支持的编码你<see cref="T:System.Text.EncodingProvider" />子类。</span><span class="sxs-lookup"><span data-stu-id="edcb9-140">You override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> method to return the encoding or encodings supported by your <see cref="T:System.Text.EncodingProvider" /> subclass.</span></span> <span data-ttu-id="edcb9-141">当用户代码尝试检索通过调用的编码<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法，该方法将传递<paramref name="codepage" />到每个已注册的编码提供，直到一个返回有效的编码的标识符。</span><span class="sxs-lookup"><span data-stu-id="edcb9-141">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="edcb9-142">如果无返回的有效编码，<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法尝试检索其代码页标识符是缓存的编码<paramref name="codepage" />。</span><span class="sxs-lookup"><span data-stu-id="edcb9-142">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />.</span></span> <span data-ttu-id="edcb9-143">因此，如果<paramref name="codepage" />不是代码页编码的标识符的支持，该方法应返回<see langword="null" />; 它应永远不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="edcb9-143">Because of this, if <paramref name="codepage" /> is not the code page identifier of an encoding that you support, the method should return <see langword="null" />; it should never throw an exception.</span></span></para>
        </block>
        <block subset="none" type="usage">
          <para><span data-ttu-id="edcb9-144">调用此方法<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法。</span><span class="sxs-lookup"><span data-stu-id="edcb9-144">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method.</span></span> <span data-ttu-id="edcb9-145">不应直接从用户代码来调用它。</span><span class="sxs-lookup"><span data-stu-id="edcb9-145">You should not call it directly from user code.</span></span></para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="edcb9-146">所请求编码的名称。</span><span class="sxs-lookup"><span data-stu-id="edcb9-146">The name of the requested encoding.</span></span></param>
        <summary><span data-ttu-id="edcb9-147">返回具有指定名称的编码。</span><span class="sxs-lookup"><span data-stu-id="edcb9-147">Returns the encoding with the specified name.</span></span></summary>
        <returns><span data-ttu-id="edcb9-148">与指定名称关联的编码，如果此 <see cref="T:System.Text.EncodingProvider" /> 无法返回对应于 <paramref name="name" /> 的有效编码，则为 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="edcb9-148">The encoding that is associated with the specified name, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 
      
## <a name="notes-to-inheritors"></a><span data-ttu-id="edcb9-149">对继承者的说明</span><span class="sxs-lookup"><span data-stu-id="edcb9-149">Notes to inheritors</span></span> 
                  
<span data-ttu-id="edcb9-150">重写[GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>)方法返回的编码或支持的编码你<xref:System.Text.EncodingProvider>子类。</span><span class="sxs-lookup"><span data-stu-id="edcb9-150">You override the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method to return the encoding or encodings supported by your <xref:System.Text.EncodingProvider> subclass.</span></span> <span data-ttu-id="edcb9-151">当用户代码尝试检索通过调用的编码[GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>)方法，该方法将传递`name`到每个已注册的编码提供，直到一个返回有效的编码的自变量。</span><span class="sxs-lookup"><span data-stu-id="edcb9-151">When user code attempts to retrieve an encoding by calling the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method, the method passes the `name` argument to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="edcb9-152">如果无返回的有效编码， [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>)方法尝试检索其名称是缓存的编码`name`。</span><span class="sxs-lookup"><span data-stu-id="edcb9-152">If none returns a valid encoding, the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method attempts to retrieve a cached encoding whose name is `name`.</span></span> <span data-ttu-id="edcb9-153">因此，如果`name`不支持，该方法应返回编码的名称`null`。</span><span class="sxs-lookup"><span data-stu-id="edcb9-153">Because of this, if `name` is not the name of an encoding that you support, the method should return `null`.</span></span> <span data-ttu-id="edcb9-154">在其中方法应引发异常的唯一情况是如果`name`是`null`。</span><span class="sxs-lookup"><span data-stu-id="edcb9-154">The only case in which the method should throw an exception is if `name` is `null`.</span></span>

## <a name="notes-to-callers"></a><span data-ttu-id="edcb9-155">对调用方的说明</span><span class="sxs-lookup"><span data-stu-id="edcb9-155">Notes to callers</span></span>

<span data-ttu-id="edcb9-156">调用此方法[Encoding.GetEncoding(String)](<xref:System.Text.Encoding.GetEncoding(System.String)>)方法。</span><span class="sxs-lookup"><span data-stu-id="edcb9-156">This method is called by the [Encoding.GetEncoding(String)](<xref:System.Text.Encoding.GetEncoding(System.String)>) method.</span></span> <span data-ttu-id="edcb9-157">不应直接从用户代码来调用它。</span><span class="sxs-lookup"><span data-stu-id="edcb9-157">You should not call it directly from user code.</span></span>
        ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="edcb9-158">重写<see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" />方法返回的编码或支持的编码你<see cref="T:System.Text.EncodingProvider" />子类。</span><span class="sxs-lookup"><span data-stu-id="edcb9-158">You override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> method to return the encoding or encodings supported by your <see cref="T:System.Text.EncodingProvider" /> subclass.</span></span> <span data-ttu-id="edcb9-159">当用户代码尝试检索通过调用的编码<see cref="M:System.Text.Encoding.GetEncoding(System.String)" />方法，该方法将传递<paramref name="name" />到每个已注册的编码提供，直到一个返回有效的编码的自变量。</span><span class="sxs-lookup"><span data-stu-id="edcb9-159">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method, the method passes the <paramref name="name" /> argument to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="edcb9-160">如果无返回的有效编码，<see cref="M:System.Text.Encoding.GetEncoding(System.String)" />方法尝试检索其名称是缓存的编码<paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="edcb9-160">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method attempts to retrieve a cached encoding whose name is <paramref name="name" />.</span></span> <span data-ttu-id="edcb9-161">因此，如果<paramref name="name" />不支持，该方法应返回编码的名称<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edcb9-161">Because of this, if <paramref name="name" /> is not the name of an encoding that you support, the method should return <see langword="null" />.</span></span> <span data-ttu-id="edcb9-162">在其中方法应引发异常的唯一情况是如果<paramref name="name" />是<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edcb9-162">The only case in which the method should throw an exception is if <paramref name="name" /> is <see langword="null" />.</span></span></para>
        </block>
        <block subset="none" type="usage">
          <para><span data-ttu-id="edcb9-163">调用此方法<see cref="M:System.Text.Encoding.GetEncoding(System.String)" />方法。</span><span class="sxs-lookup"><span data-stu-id="edcb9-163">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method.</span></span> <span data-ttu-id="edcb9-164">不应直接从用户代码来调用它。</span><span class="sxs-lookup"><span data-stu-id="edcb9-164">You should not call it directly from user code.</span></span></para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="edcb9-165">所请求编码的代码页标识符。</span><span class="sxs-lookup"><span data-stu-id="edcb9-165">The code page identifier of the requested encoding.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="edcb9-166">一个对象，在无法用此编码对字符进行编码时，该对象可用来提供错误处理过程。</span><span class="sxs-lookup"><span data-stu-id="edcb9-166">An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="edcb9-167">一个对象，在无法用此编码对字节序列进行解码时，该对象可用来提供错误处理过程。</span><span class="sxs-lookup"><span data-stu-id="edcb9-167">An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.</span></span></param>
        <summary><span data-ttu-id="edcb9-168">返回与指定代码页标识符关联的编码。</span><span class="sxs-lookup"><span data-stu-id="edcb9-168">Returns the encoding associated with the specified code page identifier.</span></span> <span data-ttu-id="edcb9-169">参数指定一个错误处理程序，用于处理无法编码的字符和无法解码的字节序列。</span><span class="sxs-lookup"><span data-stu-id="edcb9-169">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="edcb9-170">与指定代码页关联的编码，如果此 <see cref="T:System.Text.EncodingProvider" /> 无法返回对应于 <paramref name="codepage" /> 的有效编码，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edcb9-170">The encoding that is associated with the specified code page, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="codepage" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edcb9-171">`encoderFallback`和`decoderFallback`参数是定义，如果编码器不能将字符转换为一个字节序列或解码器不能将一个字节序列转换为字符所用的回退策略对象。</span><span class="sxs-lookup"><span data-stu-id="edcb9-171">The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</span></span> <span data-ttu-id="edcb9-172">.NET Framework 提供了以下回退机制：</span><span class="sxs-lookup"><span data-stu-id="edcb9-172">The .NET Framework provides the following fallback mechanisms:</span></span>  
  
-   <span data-ttu-id="edcb9-173">异常回退。</span><span class="sxs-lookup"><span data-stu-id="edcb9-173">Exception fallback.</span></span> <span data-ttu-id="edcb9-174">如果`encoderFallback`自变量是的一个实例<xref:System.Text.EncoderExceptionFallback>，或`decoderExceptionFallback`自变量是的一个实例<xref:System.Text.DecoderExceptionFallback>，编码的方法引发异常，如果字符不能进行编码，并且如果一个字节，解码方法将引发异常无法解码序列。</span><span class="sxs-lookup"><span data-stu-id="edcb9-174">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</span></span>  
  
-   <span data-ttu-id="edcb9-175">替换回退。</span><span class="sxs-lookup"><span data-stu-id="edcb9-175">Replacement fallback.</span></span> <span data-ttu-id="edcb9-176">如果`encoderFallback`自变量是的一个实例<xref:System.Text.EncoderReplacementFallback>，或`decoderExceptionFallback`自变量是的一个实例<xref:System.Text.DecoderReplacementFallback>、 编码和解码方法代替替换字符串的字符不能进行编码和字节序列不能为解码。</span><span class="sxs-lookup"><span data-stu-id="edcb9-176">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</span></span> <span data-ttu-id="edcb9-177">如果被替换回退对象通过调用默认构造函数实例化，则替换字符"？"。</span><span class="sxs-lookup"><span data-stu-id="edcb9-177">If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</span></span> <span data-ttu-id="edcb9-178">如果调用<xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>或<xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>构造函数，你可以指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="edcb9-178">If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, you can specify the replacement string.</span></span>  
  
-   <span data-ttu-id="edcb9-179">最佳回退。</span><span class="sxs-lookup"><span data-stu-id="edcb9-179">Best-fit fallback.</span></span> <span data-ttu-id="edcb9-180">你可以从派生<xref:System.Text.EncoderFallback>或<xref:System.Text.DecoderFallback>类，以实现最佳的替换机制。</span><span class="sxs-lookup"><span data-stu-id="edcb9-180">You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="edcb9-181">因为调用此方法使用的实现<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />方法，你无需重写它。</span><span class="sxs-lookup"><span data-stu-id="edcb9-181">Because calls to this method use your implementation of the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> method, you do not have to override it.</span></span> <span data-ttu-id="edcb9-182">当用户代码尝试检索通过调用的编码<see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法，该方法将传递<paramref name="codepage" />到每个已注册的编码提供，直到一个返回有效的编码的标识符。</span><span class="sxs-lookup"><span data-stu-id="edcb9-182">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="edcb9-183">如果无返回的有效编码，<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法尝试检索其代码页标识符是缓存的编码<paramref name="codepage" />。</span><span class="sxs-lookup"><span data-stu-id="edcb9-183">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />.</span></span> <span data-ttu-id="edcb9-184">因此，如果你选择重写<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法，重写应返回<see langword="null" />如果<paramref name="codepage" />不是编码的代码页标识符支持; 它应永远不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="edcb9-184">Because of this, if you do choose to override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, your override should return <see langword="null" /> if <paramref name="codepage" /> is not the code page identifier of an encoding that you support; it should never throw an exception.</span></span></para>
        </block>
        <block subset="none" type="usage">
          <para><span data-ttu-id="edcb9-185">调用此方法<see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法。</span><span class="sxs-lookup"><span data-stu-id="edcb9-185">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method.</span></span> <span data-ttu-id="edcb9-186">不应直接从用户代码来调用它。</span><span class="sxs-lookup"><span data-stu-id="edcb9-186">You should not call it directly from user code.</span></span></para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="edcb9-187">首选编码的名称。</span><span class="sxs-lookup"><span data-stu-id="edcb9-187">The name of the preferred encoding.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="edcb9-188">一个对象，在无法用此编码对字符进行编码时，该对象可用来提供错误处理过程。</span><span class="sxs-lookup"><span data-stu-id="edcb9-188">An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="edcb9-189">一个对象，在无法用当前编码对字节序列进行解码时，该对象可用来提供错误处理过程。</span><span class="sxs-lookup"><span data-stu-id="edcb9-189">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="edcb9-190">返回与指定名称关联的编码。</span><span class="sxs-lookup"><span data-stu-id="edcb9-190">Returns the encoding associated with the specified name.</span></span> <span data-ttu-id="edcb9-191">参数指定一个错误处理程序，用于处理无法编码的字符和无法解码的字节序列。</span><span class="sxs-lookup"><span data-stu-id="edcb9-191">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="edcb9-192">与指定名称关联的编码，如果此 <see cref="T:System.Text.EncodingProvider" /> 无法返回对应于 <paramref name="name" /> 的有效编码，则为 <see langword="null" /> 。</span><span class="sxs-lookup"><span data-stu-id="edcb9-192">The encoding that is associated with the specified name, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edcb9-193">`encoderFallback`和`decoderFallback`参数是定义，如果编码器不能将字符转换为一个字节序列或解码器不能将一个字节序列转换为字符所用的回退策略对象。</span><span class="sxs-lookup"><span data-stu-id="edcb9-193">The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</span></span> <span data-ttu-id="edcb9-194">.NET Framework 提供了以下回退机制：</span><span class="sxs-lookup"><span data-stu-id="edcb9-194">The .NET Framework provides the following fallback mechanisms:</span></span>  
  
-   <span data-ttu-id="edcb9-195">异常回退。</span><span class="sxs-lookup"><span data-stu-id="edcb9-195">Exception fallback.</span></span> <span data-ttu-id="edcb9-196">如果`encoderFallback`自变量是的一个实例<xref:System.Text.EncoderExceptionFallback>，或`decoderExceptionFallback`自变量是的一个实例<xref:System.Text.DecoderExceptionFallback>，编码的方法引发异常，如果字符不能进行编码，并且如果一个字节，解码方法将引发异常无法解码序列。</span><span class="sxs-lookup"><span data-stu-id="edcb9-196">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</span></span>  
  
-   <span data-ttu-id="edcb9-197">替换回退。</span><span class="sxs-lookup"><span data-stu-id="edcb9-197">Replacement fallback.</span></span> <span data-ttu-id="edcb9-198">如果`encoderFallback`自变量是的一个实例<xref:System.Text.EncoderReplacementFallback>，或`decoderExceptionFallback`自变量是的一个实例<xref:System.Text.DecoderReplacementFallback>、 编码和解码方法代替替换字符串的字符不能进行编码和字节序列不能为解码。</span><span class="sxs-lookup"><span data-stu-id="edcb9-198">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</span></span> <span data-ttu-id="edcb9-199">如果被替换回退对象通过调用默认构造函数实例化，则替换字符"？"。</span><span class="sxs-lookup"><span data-stu-id="edcb9-199">If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</span></span> <span data-ttu-id="edcb9-200">如果调用<xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>或<xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>构造函数，你可以指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="edcb9-200">If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, you can specify the replacement string.</span></span>  
  
-   <span data-ttu-id="edcb9-201">最佳回退。</span><span class="sxs-lookup"><span data-stu-id="edcb9-201">Best-fit fallback.</span></span> <span data-ttu-id="edcb9-202">你可以从派生<xref:System.Text.EncoderFallback>或<xref:System.Text.DecoderFallback>类，以实现最佳的替换机制。</span><span class="sxs-lookup"><span data-stu-id="edcb9-202">You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="edcb9-203">因为调用此方法使用的实现<see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" />方法，你无需重写它。</span><span class="sxs-lookup"><span data-stu-id="edcb9-203">Because calls to this method use your implementation of the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> method, you do not have to override it.</span></span> <span data-ttu-id="edcb9-204">当用户代码尝试检索通过调用的编码<see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法，该方法将传递<paramref name="codepage" />到每个已注册的编码提供，直到一个返回有效的编码的标识符。</span><span class="sxs-lookup"><span data-stu-id="edcb9-204">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="edcb9-205">如果无返回的有效编码，<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法尝试检索其代码页标识符是缓存的编码<paramref name="codepage" />。</span><span class="sxs-lookup"><span data-stu-id="edcb9-205">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />.</span></span> <span data-ttu-id="edcb9-206">因此，如果你选择重写<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法，重写应返回<see langword="null" />如果<paramref name="codepage" />不是编码的代码页标识符支持; 它应永远不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="edcb9-206">Because of this, if you do choose to override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, your override should return <see langword="null" /> if <paramref name="codepage" /> is not the code page identifier of an encoding that you support; it should never throw an exception.</span></span></para>
        </block>
        <block subset="none" type="usage">
          <para><span data-ttu-id="edcb9-207">调用此方法<see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法。</span><span class="sxs-lookup"><span data-stu-id="edcb9-207">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method.</span></span> <span data-ttu-id="edcb9-208">不应直接从用户代码来调用它。</span><span class="sxs-lookup"><span data-stu-id="edcb9-208">You should not call it directly from user code.</span></span></para>
        </block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
  </Members>
</Type>