<Type Name="EncodingProvider" FullName="System.Text.EncodingProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="adbb9708f99cbbdddb01067e89fd1bce5844d74b" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58698866" /></Metadata><TypeSignature Language="C#" Value="public abstract class EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncodingProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncodingProvider abstract" />
  <TypeSignature Language="F#" Value="type EncodingProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="61e19-101">提供编码提供程序的基类，后者提供在特定平台上不可用的编码。</span><span class="sxs-lookup"><span data-stu-id="61e19-101">Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61e19-102">编码提供程序提供了编码，否则不是适用于特定的目标平台。</span><span class="sxs-lookup"><span data-stu-id="61e19-102">An encoding provider supplies encodings that are not otherwise available on a particular target platform.</span></span>  
  
 <span data-ttu-id="61e19-103">在 Windows 桌面.NET Framework 支持大量的字符编码和代码页。</span><span class="sxs-lookup"><span data-stu-id="61e19-103">The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.</span></span> <span data-ttu-id="61e19-104">可以在 Windows 桌面上获取编码在.NET Framework 中可用的完整列表，通过调用<xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="61e19-104">You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="61e19-105">.NET core，但是，默认情况下支持仅以下编码：</span><span class="sxs-lookup"><span data-stu-id="61e19-105">.NET Core, on the other hand, by default supports only the following encodings:</span></span>  
  
-   <span data-ttu-id="61e19-106">ASCII （代码页为 20127） 返回的<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="61e19-106">ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="61e19-107">ISO-8859-1 （代码页 28591）。</span><span class="sxs-lookup"><span data-stu-id="61e19-107">ISO-8859-1 (code page 28591).</span></span>  
  
-   <span data-ttu-id="61e19-108">UTF-7、utf （代码页为 65000） 即<xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="61e19-108">UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="61e19-109">Utf-8 （代码页 65001），该值由返回<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="61e19-109">UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="61e19-110">UTF-16 和 UTF-16LE （代码页 1200年），该值由返回<xref:System.Text.Encoding.Unicode%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="61e19-110">UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A> property.</span></span>  
  
-   <span data-ttu-id="61e19-111">UTF 16BE （代码页 1201年），它通过调用实例化<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>或<xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>构造函数与`bigEndian`的值`true`。</span><span class="sxs-lookup"><span data-stu-id="61e19-111">UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> or <xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor with a `bigEndian` value of `true`.</span></span>  
  
-   <span data-ttu-id="61e19-112">UTF-32 和 UTF-32LE （代码页 12000），该值由返回<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="61e19-112">UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="61e19-113">UTF-32BE （代码页 12001），它通过调用实例化<xref:System.Text.UTF32Encoding>构造函数具有`bigEndian`参数并提供的值`true`方法调用中。</span><span class="sxs-lookup"><span data-stu-id="61e19-113">UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.</span></span>  
  
 <span data-ttu-id="61e19-114">从.NET Framework 4.6，开始<xref:System.Text.EncodingProvider>是基类，否则将无法供.NET Framework 的编码。</span><span class="sxs-lookup"><span data-stu-id="61e19-114">Starting with the .NET Framework 4.6, <xref:System.Text.EncodingProvider> is the base class that makes otherwise unavailable encodings available to the .NET Framework.</span></span> <span data-ttu-id="61e19-115">这包括以下步骤：</span><span class="sxs-lookup"><span data-stu-id="61e19-115">This involves the following steps:</span></span>  
  
1.  <span data-ttu-id="61e19-116">定义的一个子类<xref:System.Text.EncodingProvider>重写两个抽象<xref:System.Text.EncodingProvider.GetEncoding%2A>重载，<xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29>和<xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="61e19-116">Define a subclass of <xref:System.Text.EncodingProvider> that overrides the two abstract <xref:System.Text.EncodingProvider.GetEncoding%2A> overloads, <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%29>.</span></span> <span data-ttu-id="61e19-117">这些重载将返回被不受支持的编码代码页标识符和名称。</span><span class="sxs-lookup"><span data-stu-id="61e19-117">These overloads return the otherwise unsupported encoding by code page identifier and by name.</span></span> <span data-ttu-id="61e19-118">请注意，您还可以选择返回默认编码如果<xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29>0 的参数调用方法。</span><span class="sxs-lookup"><span data-stu-id="61e19-118">Note that you can also choose to return a default encoding if the <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29> method is called with an argument of 0.</span></span>  
  
2.  <span data-ttu-id="61e19-119">（可选） 你可以重写虚拟<xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29>和<xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29>方法。</span><span class="sxs-lookup"><span data-stu-id="61e19-119">Optionally, you can override the virtual <xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> and <xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29> methods.</span></span> <span data-ttu-id="61e19-120">在大多数情况下，这不是必需，因为基类提供了默认实现。</span><span class="sxs-lookup"><span data-stu-id="61e19-120">In most cases, this is not necessary, since the base class provides a default implementation.</span></span>  
  
3.  <span data-ttu-id="61e19-121">传递<xref:System.Text.EncodingProvider>实例向<xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType>方法，使提供的编码<xref:System.Text.EncodingProvider>到公共语言运行时可用的对象。</span><span class="sxs-lookup"><span data-stu-id="61e19-121">Pass the <xref:System.Text.EncodingProvider> instance to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.</span></span>  
  
4.  <span data-ttu-id="61e19-122">调用<xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>重载来检索的编码。</span><span class="sxs-lookup"><span data-stu-id="61e19-122">Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload to retrieve the encoding.</span></span> <span data-ttu-id="61e19-123"><xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>方法将调用相应<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType>以确定是否可以提供所请求编码。</span><span class="sxs-lookup"><span data-stu-id="61e19-123">The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> to determine whether it can supply the requested encoding.</span></span>  
  
 <span data-ttu-id="61e19-124">.NET Framework 类库提供了一个静态属性， <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>，返回<xref:System.Text.EncodingProvider>对象，它提供完整的编码集上桌面.NET Framework 类库可供[!INCLUDE[net_core](~/includes/net-core-md.md)]应用程序。</span><span class="sxs-lookup"><span data-stu-id="61e19-124">The .NET Framework Class Library provides one static property, <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>, that returns an <xref:System.Text.EncodingProvider> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to [!INCLUDE[net_core](~/includes/net-core-md.md)] applications.</span></span> <span data-ttu-id="61e19-125">此外，您可以从派生<xref:System.Text.EncodingProvider>类，以提供您自己的编码。</span><span class="sxs-lookup"><span data-stu-id="61e19-125">In addition, you can derive from the <xref:System.Text.EncodingProvider> class to make your own encodings available.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/system.text.codepagesencodingprovider.instance(v=vs.110).aspx"><span data-ttu-id="61e19-126">CodePagesEncodingProvider.Instance 属性</span><span class="sxs-lookup"><span data-stu-id="61e19-126">CodePagesEncodingProvider.Instance Property</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncodingProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncodingProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61e19-127">初始化 <see cref="T:System.Text.EncodingProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="61e19-127">Initializes a new instance of the <see cref="T:System.Text.EncodingProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="61e19-128">返回一个编码。</span><span class="sxs-lookup"><span data-stu-id="61e19-128">Returns an encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="61e19-129">所请求编码的代码页标识符。</span><span class="sxs-lookup"><span data-stu-id="61e19-129">The code page identifier of the requested encoding.</span></span></param>
        <summary><span data-ttu-id="61e19-130">返回与指定代码页标识符关联的编码。</span><span class="sxs-lookup"><span data-stu-id="61e19-130">Returns the encoding associated with the specified code page identifier.</span></span></summary>
        <returns><span data-ttu-id="61e19-131">与指定代码页关联的编码，如果此 <see cref="T:System.Text.EncodingProvider" /> 无法返回对应于 <paramref name="codepage" /> 的有效编码，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="61e19-131">The encoding that is associated with the specified code page, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="codepage" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 

## Remarks

### <a name="notes-to-inheritors"></a><span data-ttu-id="61e19-132">继承者说明</span><span class="sxs-lookup"><span data-stu-id="61e19-132">Notes to inheritors</span></span>

<span data-ttu-id="61e19-133">重写[GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>)方法返回编码或支持的编码您<xref:System.Text.EncodingProvider>子类。</span><span class="sxs-lookup"><span data-stu-id="61e19-133">You override the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method to return the encoding or encodings supported by your <xref:System.Text.EncodingProvider> subclass.</span></span> <span data-ttu-id="61e19-134">当用户代码试图检索通过调用的编码[GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>)方法，该方法传递`codepage`到每个已注册编码提供程序，直到其中一个返回的有效编码的标识符。</span><span class="sxs-lookup"><span data-stu-id="61e19-134">When user code attempts to retrieve an encoding by calling the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method, the method passes the `codepage` identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="61e19-135">如果无返回的有效编码[GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>)方法会尝试检索其代码页标识符是缓存的编码`codepage`。</span><span class="sxs-lookup"><span data-stu-id="61e19-135">If none returns a valid encoding, the [GetEncoding(Int32)](<xref:System.Text.EncodingProvider.GetEncoding(System.Int32)>) method attempts to retrieve a cached encoding whose code page identifier is `codepage`.</span></span> <span data-ttu-id="61e19-136">因此，如果`codepage`不是代码页标识符的编码的支持，该方法应返回`null`; 它应永远不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="61e19-136">Because of this, if `codepage` is not the code page identifier of an encoding that you support, the method should return `null`; it should never throw an exception.</span></span>
        
<span data-ttu-id="61e19-137">请注意，您还可以选择返回默认代码页，如果的值`codepage`自变量为 0。</span><span class="sxs-lookup"><span data-stu-id="61e19-137">Note that you can also choose to return a default code page if the value of the `codepage` argument is 0.</span></span>

## <a name="notes-to-callers"></a><span data-ttu-id="61e19-138">调用方说明</span><span class="sxs-lookup"><span data-stu-id="61e19-138">Notes to callers</span></span>
        
<span data-ttu-id="61e19-139">调用此方法[Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>)方法。</span><span class="sxs-lookup"><span data-stu-id="61e19-139">This method is called by the [Encoding.GetEncoding(Int32)](<xref:System.Text.Encoding.GetEncoding(System.Int32)>) method.</span></span> <span data-ttu-id="61e19-140">您不应直接从用户代码调用它。</span><span class="sxs-lookup"><span data-stu-id="61e19-140">You should not call it directly from user code.</span></span>

        ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="61e19-141">重写<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />方法返回编码或支持的编码您<see cref="T:System.Text.EncodingProvider" />子类。</span><span class="sxs-lookup"><span data-stu-id="61e19-141">You override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> method to return the encoding or encodings supported by your <see cref="T:System.Text.EncodingProvider" /> subclass.</span></span> <span data-ttu-id="61e19-142">当用户代码试图检索通过调用的编码<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法，该方法传递<paramref name="codepage" />到每个已注册编码提供程序，直到其中一个返回的有效编码的标识符。</span><span class="sxs-lookup"><span data-stu-id="61e19-142">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="61e19-143">如果无返回的有效编码<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法尝试检索其代码页标识符是缓存的编码<paramref name="codepage" />。</span><span class="sxs-lookup"><span data-stu-id="61e19-143">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />.</span></span> <span data-ttu-id="61e19-144">因此，如果<paramref name="codepage" />不是代码页标识符的编码的支持，该方法应返回<see langword="null" />; 它应永远不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="61e19-144">Because of this, if <paramref name="codepage" /> is not the code page identifier of an encoding that you support, the method should return <see langword="null" />; it should never throw an exception.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="61e19-145">调用此方法<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法。</span><span class="sxs-lookup"><span data-stu-id="61e19-145">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method.</span></span> <span data-ttu-id="61e19-146">您不应直接从用户代码调用它。</span><span class="sxs-lookup"><span data-stu-id="61e19-146">You should not call it directly from user code.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public abstract System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="61e19-147">所请求编码的名称。</span><span class="sxs-lookup"><span data-stu-id="61e19-147">The name of the requested encoding.</span></span></param>
        <summary><span data-ttu-id="61e19-148">返回具有指定名称的编码。</span><span class="sxs-lookup"><span data-stu-id="61e19-148">Returns the encoding with the specified name.</span></span></summary>
        <returns><span data-ttu-id="61e19-149">与指定名称关联的编码，如果此 <see cref="T:System.Text.EncodingProvider" /> 无法返回对应于 <paramref name="name" /> 的有效编码，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="61e19-149">The encoding that is associated with the specified name, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[ 
      
## <a name="notes-to-inheritors"></a><span data-ttu-id="61e19-150">继承者说明</span><span class="sxs-lookup"><span data-stu-id="61e19-150">Notes to inheritors</span></span> 
                  
<span data-ttu-id="61e19-151">重写[GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>)方法返回编码或支持的编码您<xref:System.Text.EncodingProvider>子类。</span><span class="sxs-lookup"><span data-stu-id="61e19-151">You override the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method to return the encoding or encodings supported by your <xref:System.Text.EncodingProvider> subclass.</span></span> <span data-ttu-id="61e19-152">当用户代码试图检索通过调用的编码[GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>)方法，该方法传递`name`到每个已注册编码提供程序，直到其中一个返回的有效编码的参数。</span><span class="sxs-lookup"><span data-stu-id="61e19-152">When user code attempts to retrieve an encoding by calling the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method, the method passes the `name` argument to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="61e19-153">如果无返回的有效编码[GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>)方法会尝试检索其名称是缓存的编码`name`。</span><span class="sxs-lookup"><span data-stu-id="61e19-153">If none returns a valid encoding, the [GetEncoding(String)](<xref:System.Text.EncodingProvider.GetEncoding(System.String)>) method attempts to retrieve a cached encoding whose name is `name`.</span></span> <span data-ttu-id="61e19-154">因此，如果`name`不是名称的支持，该方法应返回的编码`null`。</span><span class="sxs-lookup"><span data-stu-id="61e19-154">Because of this, if `name` is not the name of an encoding that you support, the method should return `null`.</span></span> <span data-ttu-id="61e19-155">该方法应在其中引发异常的唯一情况是如果`name`是`null`。</span><span class="sxs-lookup"><span data-stu-id="61e19-155">The only case in which the method should throw an exception is if `name` is `null`.</span></span>

## <a name="notes-to-callers"></a><span data-ttu-id="61e19-156">调用方说明</span><span class="sxs-lookup"><span data-stu-id="61e19-156">Notes to callers</span></span>

<span data-ttu-id="61e19-157">调用此方法[encoding.getencoding （string)](<xref:System.Text.Encoding.GetEncoding(System.String)>)方法。</span><span class="sxs-lookup"><span data-stu-id="61e19-157">This method is called by the [Encoding.GetEncoding(String)](<xref:System.Text.Encoding.GetEncoding(System.String)>) method.</span></span> <span data-ttu-id="61e19-158">您不应直接从用户代码调用它。</span><span class="sxs-lookup"><span data-stu-id="61e19-158">You should not call it directly from user code.</span></span>
        ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="61e19-159">重写<see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" />方法返回编码或支持的编码您<see cref="T:System.Text.EncodingProvider" />子类。</span><span class="sxs-lookup"><span data-stu-id="61e19-159">You override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> method to return the encoding or encodings supported by your <see cref="T:System.Text.EncodingProvider" /> subclass.</span></span> <span data-ttu-id="61e19-160">当用户代码试图检索通过调用的编码<see cref="M:System.Text.Encoding.GetEncoding(System.String)" />方法，该方法传递<paramref name="name" />到每个已注册编码提供程序，直到其中一个返回的有效编码的参数。</span><span class="sxs-lookup"><span data-stu-id="61e19-160">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method, the method passes the <paramref name="name" /> argument to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="61e19-161">如果无返回的有效编码<see cref="M:System.Text.Encoding.GetEncoding(System.String)" />方法尝试检索其名称是缓存的编码<paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="61e19-161">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method attempts to retrieve a cached encoding whose name is <paramref name="name" />.</span></span> <span data-ttu-id="61e19-162">因此，如果<paramref name="name" />不是名称的支持，该方法应返回的编码<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="61e19-162">Because of this, if <paramref name="name" /> is not the name of an encoding that you support, the method should return <see langword="null" />.</span></span> <span data-ttu-id="61e19-163">该方法应在其中引发异常的唯一情况是如果<paramref name="name" />是<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="61e19-163">The only case in which the method should throw an exception is if <paramref name="name" /> is <see langword="null" />.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="61e19-164">调用此方法<see cref="M:System.Text.Encoding.GetEncoding(System.String)" />方法。</span><span class="sxs-lookup"><span data-stu-id="61e19-164">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.String)" /> method.</span></span> <span data-ttu-id="61e19-165">您不应直接从用户代码调用它。</span><span class="sxs-lookup"><span data-stu-id="61e19-165">You should not call it directly from user code.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(int32 codepage, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(int codepage, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : int * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (codepage, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="61e19-166">所请求编码的代码页标识符。</span><span class="sxs-lookup"><span data-stu-id="61e19-166">The code page identifier of the requested encoding.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="61e19-167">一个对象，在无法用此编码对字符进行编码时，该对象可用来提供错误处理过程。</span><span class="sxs-lookup"><span data-stu-id="61e19-167">An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="61e19-168">一个对象，在无法用此编码对字节序列进行解码时，该对象可用来提供错误处理过程。</span><span class="sxs-lookup"><span data-stu-id="61e19-168">An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.</span></span></param>
        <summary><span data-ttu-id="61e19-169">返回与指定代码页标识符关联的编码。</span><span class="sxs-lookup"><span data-stu-id="61e19-169">Returns the encoding associated with the specified code page identifier.</span></span> <span data-ttu-id="61e19-170">参数指定一个错误处理程序，用于处理无法编码的字符和无法解码的字节序列。</span><span class="sxs-lookup"><span data-stu-id="61e19-170">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="61e19-171">与指定代码页关联的编码，如果此 <see cref="T:System.Text.EncodingProvider" /> 无法返回对应于 <paramref name="codepage" /> 的有效编码，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="61e19-171">The encoding that is associated with the specified code page, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="codepage" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61e19-172">`encoderFallback`和`decoderFallback`参数是对象以定义使用，如果编码器不能将字符转换为一个字节序列或解码器无法将一个字节序列转换为一个字符的回退策略。</span><span class="sxs-lookup"><span data-stu-id="61e19-172">The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</span></span> <span data-ttu-id="61e19-173">.NET Framework 提供了以下回退机制：</span><span class="sxs-lookup"><span data-stu-id="61e19-173">The .NET Framework provides the following fallback mechanisms:</span></span>  
  
-   <span data-ttu-id="61e19-174">异常回退。</span><span class="sxs-lookup"><span data-stu-id="61e19-174">Exception fallback.</span></span> <span data-ttu-id="61e19-175">如果`encoderFallback`自变量是实例<xref:System.Text.EncoderExceptionFallback>，或`decoderExceptionFallback`自变量是实例<xref:System.Text.DecoderExceptionFallback>，编码的方法将引发异常，如果无法对字符进行编码，并且如果一个字节，解码方法将引发异常序列不能进行解码。</span><span class="sxs-lookup"><span data-stu-id="61e19-175">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</span></span>  
  
-   <span data-ttu-id="61e19-176">替换回退。</span><span class="sxs-lookup"><span data-stu-id="61e19-176">Replacement fallback.</span></span> <span data-ttu-id="61e19-177">如果`encoderFallback`自变量是实例<xref:System.Text.EncoderReplacementFallback>，或`decoderExceptionFallback`自变量是实例<xref:System.Text.DecoderReplacementFallback>、 编码和解码方法代替替换字符串的字符不能进行编码和字节序列不能为解码。</span><span class="sxs-lookup"><span data-stu-id="61e19-177">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</span></span> <span data-ttu-id="61e19-178">如果您通过调用默认构造函数实例化的替换回退对象，是替换字符"？"。</span><span class="sxs-lookup"><span data-stu-id="61e19-178">If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</span></span> <span data-ttu-id="61e19-179">如果您调用<xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>或<xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>构造函数中，可以指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="61e19-179">If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, you can specify the replacement string.</span></span>  
  
-   <span data-ttu-id="61e19-180">最佳回退。</span><span class="sxs-lookup"><span data-stu-id="61e19-180">Best-fit fallback.</span></span> <span data-ttu-id="61e19-181">可以从派生<xref:System.Text.EncoderFallback>或<xref:System.Text.DecoderFallback>类，以实现最佳的替代机制。</span><span class="sxs-lookup"><span data-stu-id="61e19-181">You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="61e19-182">因为调用此方法使用的实现<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" />方法，您无需重写它。</span><span class="sxs-lookup"><span data-stu-id="61e19-182">Because calls to this method use your implementation of the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32)" /> method, you do not have to override it.</span></span> <span data-ttu-id="61e19-183">当用户代码试图检索通过调用的编码<see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法，该方法传递<paramref name="codepage" />到每个已注册编码提供程序，直到其中一个返回的有效编码的标识符。</span><span class="sxs-lookup"><span data-stu-id="61e19-183">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="61e19-184">如果无返回的有效编码<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法尝试检索其代码页标识符是缓存的编码<paramref name="codepage" />。</span><span class="sxs-lookup"><span data-stu-id="61e19-184">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />.</span></span> <span data-ttu-id="61e19-185">因此，如果您选择要重写<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法，重写应返回<see langword="null" />如果<paramref name="codepage" />不是代码页标识符的编码的支持; 它应永远不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="61e19-185">Because of this, if you do choose to override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, your override should return <see langword="null" /> if <paramref name="codepage" /> is not the code page identifier of an encoding that you support; it should never throw an exception.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="61e19-186">调用此方法<see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法。</span><span class="sxs-lookup"><span data-stu-id="61e19-186">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method.</span></span> <span data-ttu-id="61e19-187">您不应直接从用户代码调用它。</span><span class="sxs-lookup"><span data-stu-id="61e19-187">You should not call it directly from user code.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.Encoding GetEncoding(string name, class System.Text.EncoderFallback encoderFallback, class System.Text.DecoderFallback decoderFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::Encoding ^ GetEncoding(System::String ^ name, System::Text::EncoderFallback ^ encoderFallback, System::Text::DecoderFallback ^ decoderFallback);" />
      <MemberSignature Language="F#" Value="abstract member GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding&#xA;override this.GetEncoding : string * System.Text.EncoderFallback * System.Text.DecoderFallback -&gt; System.Text.Encoding" Usage="encodingProvider.GetEncoding (name, encoderFallback, decoderFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
        <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="61e19-188">首选编码的名称。</span><span class="sxs-lookup"><span data-stu-id="61e19-188">The name of the preferred encoding.</span></span></param>
        <param name="encoderFallback"><span data-ttu-id="61e19-189">一个对象，在无法用此编码对字符进行编码时，该对象可用来提供错误处理过程。</span><span class="sxs-lookup"><span data-stu-id="61e19-189">An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</span></span></param>
        <param name="decoderFallback"><span data-ttu-id="61e19-190">一个对象，在无法用当前编码对字节序列进行解码时，该对象可用来提供错误处理过程。</span><span class="sxs-lookup"><span data-stu-id="61e19-190">An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</span></span></param>
        <summary><span data-ttu-id="61e19-191">返回与指定名称关联的编码。</span><span class="sxs-lookup"><span data-stu-id="61e19-191">Returns the encoding associated with the specified name.</span></span> <span data-ttu-id="61e19-192">参数指定一个错误处理程序，用于处理无法编码的字符和无法解码的字节序列。</span><span class="sxs-lookup"><span data-stu-id="61e19-192">Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</span></span></summary>
        <returns><span data-ttu-id="61e19-193">与指定名称关联的编码，如果此 <see cref="T:System.Text.EncodingProvider" /> 无法返回对应于 <paramref name="name" /> 的有效编码，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="61e19-193">The encoding that is associated with the specified name, or <see langword="null" /> if this <see cref="T:System.Text.EncodingProvider" /> cannot return a valid encoding that corresponds to <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61e19-194">`encoderFallback`和`decoderFallback`参数是对象以定义使用，如果编码器不能将字符转换为一个字节序列或解码器无法将一个字节序列转换为一个字符的回退策略。</span><span class="sxs-lookup"><span data-stu-id="61e19-194">The `encoderFallback` and `decoderFallback` parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</span></span> <span data-ttu-id="61e19-195">.NET Framework 提供了以下回退机制：</span><span class="sxs-lookup"><span data-stu-id="61e19-195">The .NET Framework provides the following fallback mechanisms:</span></span>  
  
-   <span data-ttu-id="61e19-196">异常回退。</span><span class="sxs-lookup"><span data-stu-id="61e19-196">Exception fallback.</span></span> <span data-ttu-id="61e19-197">如果`encoderFallback`自变量是实例<xref:System.Text.EncoderExceptionFallback>，或`decoderExceptionFallback`自变量是实例<xref:System.Text.DecoderExceptionFallback>，编码的方法将引发异常，如果无法对字符进行编码，并且如果一个字节，解码方法将引发异常序列不能进行解码。</span><span class="sxs-lookup"><span data-stu-id="61e19-197">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderExceptionFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderExceptionFallback>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</span></span>  
  
-   <span data-ttu-id="61e19-198">替换回退。</span><span class="sxs-lookup"><span data-stu-id="61e19-198">Replacement fallback.</span></span> <span data-ttu-id="61e19-199">如果`encoderFallback`自变量是实例<xref:System.Text.EncoderReplacementFallback>，或`decoderExceptionFallback`自变量是实例<xref:System.Text.DecoderReplacementFallback>、 编码和解码方法代替替换字符串的字符不能进行编码和字节序列不能为解码。</span><span class="sxs-lookup"><span data-stu-id="61e19-199">If the `encoderFallback` argument is an instance of <xref:System.Text.EncoderReplacementFallback>, or the `decoderExceptionFallback` argument is an instance of <xref:System.Text.DecoderReplacementFallback>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</span></span> <span data-ttu-id="61e19-200">如果您通过调用默认构造函数实例化的替换回退对象，是替换字符"？"。</span><span class="sxs-lookup"><span data-stu-id="61e19-200">If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</span></span> <span data-ttu-id="61e19-201">如果您调用<xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>或<xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType>构造函数中，可以指定替换字符串。</span><span class="sxs-lookup"><span data-stu-id="61e19-201">If you call the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> or <xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, you can specify the replacement string.</span></span>  
  
-   <span data-ttu-id="61e19-202">最佳回退。</span><span class="sxs-lookup"><span data-stu-id="61e19-202">Best-fit fallback.</span></span> <span data-ttu-id="61e19-203">可以从派生<xref:System.Text.EncoderFallback>或<xref:System.Text.DecoderFallback>类，以实现最佳的替代机制。</span><span class="sxs-lookup"><span data-stu-id="61e19-203">You can derive from the <xref:System.Text.EncoderFallback> or <xref:System.Text.DecoderFallback> class to implement a best-fit replacement mechanism.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="61e19-204">因为调用此方法使用的实现<see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" />方法，您无需重写它。</span><span class="sxs-lookup"><span data-stu-id="61e19-204">Because calls to this method use your implementation of the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String)" /> method, you do not have to override it.</span></span> <span data-ttu-id="61e19-205">当用户代码试图检索通过调用的编码<see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法，该方法传递<paramref name="codepage" />到每个已注册编码提供程序，直到其中一个返回的有效编码的标识符。</span><span class="sxs-lookup"><span data-stu-id="61e19-205">When user code attempts to retrieve an encoding by calling the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, the method passes the <paramref name="codepage" /> identifier to every registered encoding provider until one returns a valid encoding.</span></span> <span data-ttu-id="61e19-206">如果无返回的有效编码<see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" />方法尝试检索其代码页标识符是缓存的编码<paramref name="codepage" />。</span><span class="sxs-lookup"><span data-stu-id="61e19-206">If none returns a valid encoding, the <see cref="M:System.Text.Encoding.GetEncoding(System.Int32)" /> method attempts to retrieve a cached encoding whose code page identifier is <paramref name="codepage" />.</span></span> <span data-ttu-id="61e19-207">因此，如果您选择要重写<see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法，重写应返回<see langword="null" />如果<paramref name="codepage" />不是代码页标识符的编码的支持; 它应永远不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="61e19-207">Because of this, if you do choose to override the <see cref="M:System.Text.EncodingProvider.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method, your override should return <see langword="null" /> if <paramref name="codepage" /> is not the code page identifier of an encoding that you support; it should never throw an exception.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="61e19-208">调用此方法<see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />方法。</span><span class="sxs-lookup"><span data-stu-id="61e19-208">This method is called by the <see cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" /> method.</span></span> <span data-ttu-id="61e19-209">您不应直接从用户代码调用它。</span><span class="sxs-lookup"><span data-stu-id="61e19-209">You should not call it directly from user code.</span></span></para></block>
        <altmember cref="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)" />
      </Docs>
    </Member>
  </Members>
</Type>