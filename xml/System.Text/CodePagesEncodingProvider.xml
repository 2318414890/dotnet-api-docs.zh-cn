<Type Name="CodePagesEncodingProvider" FullName="System.Text.CodePagesEncodingProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3556af1d10288db2731915f0c2364e27b37854ea" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49133952" /></Metadata><TypeSignature Language="C#" Value="public sealed class CodePagesEncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodePagesEncodingProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.CodePagesEncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodePagesEncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodePagesEncodingProvider sealed" />
  <TypeSignature Language="F#" Value="type CodePagesEncodingProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="dotnet-plat-ext-2.1">System.Text.EncodingProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供对桌面 .NET Framework 支持但 UWP 应用不支持的代码页的编码提供程序的访问权限。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Text.CodePagesEncodingProvider>类支持的.NET Core 的.NET 本机实现仅中。  
  
 适用于 Windows 桌面.NET Framework 支持大量的 Unicode 和代码页编码。 通用 Windows 平台和.NET Native，但是，支持仅以下编码：  
  
-   ASCII （代码页为 20127） 返回的<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>属性。  
  
-   ISO-8859-1 （代码页 28591）。  
  
-   UTF-7、utf （代码页为 65000） 即<xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType>属性。  
  
-   Utf-8 （代码页 65001），该值由返回<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>属性。  
  
-   UTF-16 和 UTF-16LE （代码页 1200年），该值由返回<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>属性。  
  
-   UTF 16BE （代码页 1201年），它通过调用实例化<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>或<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>构造函数与`bigEndian`的值`true`。  
  
-   UTF-32 和 UTF-32LE （代码页 12000），该值由返回<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>属性。  
  
-   UTF-32BE （代码页 12001），它通过调用实例化<xref:System.Text.UTF32Encoding>构造函数具有`bigEndian`参数并提供的值`true`方法调用中。  
  
 除代码页 20127，不支持代码页编码。  
  
 <xref:System.Text.CodePagesEncodingProvider>类用于扩展<xref:System.Text.EncodingProvider>以便可供.NET 本机和通用 Windows 平台 (UWP) 应用这些代码页。 若要使用这些额外的代码页，请执行以下操作：  
  
-   将 System.Text.Encoding.CodePages.dll 程序集的引用添加到你的项目。  
  
-   检索<xref:System.Text.CodePagesEncodingProvider>对象从静态<xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>属性。  
  
-   将 <xref:System.Text.CodePagesEncodingProvider> 对象传递给 <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> 方法。  
  
 之后<xref:System.Text.EncodingProvider>注册对象，它支持的编码可通过调用的重载<xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>; 不应调用<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType>重载。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : int -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="codepage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : string -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingProvider Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncodingProvider Instance" />
      <MemberSignature Language="DocId" Value="P:System.Text.CodePagesEncodingProvider.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As EncodingProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncodingProvider ^ Instance { System::Text::EncodingProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : System.Text.EncodingProvider" Usage="System.Text.CodePagesEncodingProvider.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取桌面 .NET Framework 支持但当前 .NET Framework 平台不支持的代码页的编码提供程序。</summary>
        <value>允许访问当前的.NET Framework 平台上不支持的编码编码提供程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.CodePagesEncodingProvider.Instance%2A>属性返回<xref:System.Text.EncodingProvider>对象，它使编码可应用到该目标[!INCLUDE[net_v46](~/includes/net-v46-md.md)]或更高版本，否则将仅在 Windows 桌面.NET Framework 中可用。  
  
 在 Windows 桌面.NET Framework 支持大量的字符编码和代码页。 可以通过调用获取编码的完整列表<xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType>方法，它是在 Windows 桌面上完整的.NET Framework 中可用。 UWP 应用的.NET native 另一方面，只有以下编码默认情况下支持：  
  
-   ASCII （代码页为 20127） 返回的<xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType>属性。  
  
-   ISO-8859-1 （代码页 28591）。  
  
-   UTF-7、utf （代码页为 65000） 即<xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType>属性。  
  
-   Utf-8 （代码页 65001），该值由返回<xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType>属性。  
  
-   UTF-16 和 UTF-16LE （代码页 1200年），该值由返回<xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType>属性。  
  
-   UTF 16BE （代码页 1201年），它通过调用实例化<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>或<xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType>构造函数与`bigEndian`的值`true`。  
  
-   UTF-32 和 UTF-32LE （代码页 12000），该值由返回<xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType>属性。  
  
-   UTF-32BE （代码页 12001），它通过调用实例化<xref:System.Text.UTF32Encoding>构造函数具有`bigEndian`参数并提供的值`true`方法调用中。  
  
 若要检索在.NET Framework 在 Windows 桌面上，但在 UWP 应用中不存在的编码，请执行以下操作：  
  
-   将 System.Text.Encoding.CodePages.dll 程序集的引用添加到你的项目。  
  
-   获取<xref:System.Text.EncodingProvider>对象从静态<xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType>属性。  
  
-   传递<xref:System.Text.EncodingProvider>对象传递给<xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType>方法，使提供的编码<xref:System.Text.EncodingProvider>到公共语言运行时可用的对象。  
  
-   调用<xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>重载来检索的编码。 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>方法将调用相应<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType>方法，以确定是否可以提供所请求编码。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>