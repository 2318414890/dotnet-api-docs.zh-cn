<Type Name="EncoderFallbackBuffer" FullName="System.Text.EncoderFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b4058ee79c75eee473ca4b7373c36ade4ead876" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36407771" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.EncoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncoderFallbackBuffer abstract" />
  <TypeSignature Language="F#" Value="type EncoderFallbackBuffer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8bce0-101">提供一个缓冲区，该缓冲区允许回退处理程序在编码器无法对输入字符进行编码时将替换字符串返回到该编码器。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8bce0-101">Provides a buffer that allows a fallback handler to return an alternate string to an encoder when it cannot encode an input character.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bce0-102">编码定义的 Unicode 字符和编码的字节序列之间的映射。</span><span class="sxs-lookup"><span data-stu-id="8bce0-102">An encoding defines a mapping between a Unicode character and an encoded sequence of bytes.</span></span> <span data-ttu-id="8bce0-103">如果为特定的字符定义没有映射，将输入的字符转换为输出字节序列，则编码操作将失败。</span><span class="sxs-lookup"><span data-stu-id="8bce0-103">An encoding operation, which converts an input character to an output byte sequence, fails if no mapping is defined for a particular character.</span></span>  
  
 <span data-ttu-id="8bce0-104">.NET Framework 提供失败处理机制，称为回退如果无法执行转换。</span><span class="sxs-lookup"><span data-stu-id="8bce0-104">The .NET Framework provides a failure handling mechanism, called a fallback, if a conversion cannot be performed.</span></span> <span data-ttu-id="8bce0-105">所有编码器回退处理程序必须都实现以下：</span><span class="sxs-lookup"><span data-stu-id="8bce0-105">All encoder fallback handlers must implement the following:</span></span>  
  
-   <span data-ttu-id="8bce0-106">编码器回退，表示由类派生自<xref:System.Text.EncoderFallback>类。</span><span class="sxs-lookup"><span data-stu-id="8bce0-106">An encoder fallback, which is represented by a class derived from the <xref:System.Text.EncoderFallback> class.</span></span>  
  
-   <span data-ttu-id="8bce0-107">编码器回退缓冲区，其类型派生自此表示<xref:System.Text.EncoderFallbackBuffer>可以返回一个字符串的转换操作的类。</span><span class="sxs-lookup"><span data-stu-id="8bce0-107">An encoder fallback buffer, which is represented by a type derived from the <xref:System.Text.EncoderFallbackBuffer> class that can return a string to the conversion operation.</span></span>  
  
 <span data-ttu-id="8bce0-108">回退机制可以使用三个策略来处理转换失败：</span><span class="sxs-lookup"><span data-stu-id="8bce0-108">Fallbacks can use three strategies to handle conversion failures:</span></span>  
  
-   <span data-ttu-id="8bce0-109">最佳的映射。</span><span class="sxs-lookup"><span data-stu-id="8bce0-109">Best-fit mapping.</span></span> <span data-ttu-id="8bce0-110">编码器回退缓冲区可以返回表示近似为输入字符的字符串。</span><span class="sxs-lookup"><span data-stu-id="8bce0-110">The encoder fallback buffer can return a string that represents a close approximation to the input character.</span></span> <span data-ttu-id="8bce0-111">.NET Framework 不提供最佳的公共<xref:System.Text.EncoderFallbackBuffer>实现。</span><span class="sxs-lookup"><span data-stu-id="8bce0-111">The .NET Framework does not provide a public best-fit <xref:System.Text.EncoderFallbackBuffer> implementation.</span></span>  
  
-   <span data-ttu-id="8bce0-112">替换。</span><span class="sxs-lookup"><span data-stu-id="8bce0-112">Replacement.</span></span> <span data-ttu-id="8bce0-113">编码器回退缓冲区可以返回一个字符串，例如一个问号 ("？")，指示无法编码字符。</span><span class="sxs-lookup"><span data-stu-id="8bce0-113">The encoder fallback buffer can return a string, such as a question mark ("?"), that indicates that a character could not be encoded.</span></span> <span data-ttu-id="8bce0-114">在.NET Framework 中，<xref:System.Text.EncoderReplacementFallback>和<xref:System.Text.EncoderReplacementFallbackBuffer>类提供公共替换回退缓冲区实现。</span><span class="sxs-lookup"><span data-stu-id="8bce0-114">In the .NET Framework, the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.EncoderReplacementFallbackBuffer> classes provide a public replacement fallback buffer implementation.</span></span> <span data-ttu-id="8bce0-115">构造函数<xref:System.Text.EncoderReplacementFallback>类使你能够将替换字符串定义。</span><span class="sxs-lookup"><span data-stu-id="8bce0-115">The constructor of the <xref:System.Text.EncoderReplacementFallback> class enables you to define the replacement string.</span></span>  
  
-   <span data-ttu-id="8bce0-116">异常。</span><span class="sxs-lookup"><span data-stu-id="8bce0-116">Exception.</span></span> <span data-ttu-id="8bce0-117"><xref:System.Text.EncoderFallbackBuffer>实现引发异常，指示一个字符不能进行编码，并终止编码操作。</span><span class="sxs-lookup"><span data-stu-id="8bce0-117">The <xref:System.Text.EncoderFallbackBuffer> implementation throws an exception, which indicates that a character cannot be encoded, and terminates the encoding operation.</span></span> <span data-ttu-id="8bce0-118">在这种情况下，回退处理程序必须提供<xref:System.Text.EncoderFallbackBuffer>实现中，尽管它不会返回一个字符串编码器。</span><span class="sxs-lookup"><span data-stu-id="8bce0-118">In this case, the fallback handler must provide an <xref:System.Text.EncoderFallbackBuffer> implementation, although it does not return a string to the encoder.</span></span> <span data-ttu-id="8bce0-119">在.NET Framework 中，<xref:System.Text.EncoderExceptionFallback>和<xref:System.Text.EncoderExceptionFallbackBuffer>类提供的公共异常回退实现引发<xref:System.Text.EncoderFallbackException>字符不能进行编码。</span><span class="sxs-lookup"><span data-stu-id="8bce0-119">In the .NET Framework, the <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.EncoderExceptionFallbackBuffer> classes provide a public exception fallback implementation that throws an <xref:System.Text.EncoderFallbackException> when a character cannot be encoded.</span></span>  
  
 <span data-ttu-id="8bce0-120">中的缓冲区<xref:System.Text.EncoderFallbackBuffer>实现表示要返回到以响应编码器编码器回退的整个字符串。</span><span class="sxs-lookup"><span data-stu-id="8bce0-120">The buffer in an <xref:System.Text.EncoderFallbackBuffer> implementation represents the entire string to be returned to the encoder in response to an encoder fallback.</span></span> <span data-ttu-id="8bce0-121">通常，实现还包括状态信息，例如要返回到的编码器，并且剩余字符数要返回的下一个字符的索引。</span><span class="sxs-lookup"><span data-stu-id="8bce0-121">Generally, implementations also include state information, such as the index of the next character to return to the encoder and the number of remaining characters to be returned.</span></span> <span data-ttu-id="8bce0-122">因为<xref:System.Text.EncoderFallbackBuffer>是一个抽象类，它需要派生的类以实现最少的以下成员：</span><span class="sxs-lookup"><span data-stu-id="8bce0-122">Because <xref:System.Text.EncoderFallbackBuffer> is an abstract class, it requires derived classes to implement the following members at a minimum:</span></span>  
  
-   <span data-ttu-id="8bce0-123">重载<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>方法，它不能对字符进行编码时，编码器调用该方法。</span><span class="sxs-lookup"><span data-stu-id="8bce0-123">The overloaded <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method, which is called by the encoder when it cannot encode a character.</span></span> <span data-ttu-id="8bce0-124">编码器将两条信息传递给回退缓冲区实现： 的字符或无法进行编码的代理项对与输入中的字符的索引。</span><span class="sxs-lookup"><span data-stu-id="8bce0-124">The encoder passes two pieces of information to the fallback buffer implementation: the character or surrogate pair that could not be encoded and the index of the character in the input.</span></span> <span data-ttu-id="8bce0-125">编码器回退异常处理程序，在此方法中引发异常。</span><span class="sxs-lookup"><span data-stu-id="8bce0-125">In an encoder fallback exception handler, the exception is thrown in this method.</span></span> <span data-ttu-id="8bce0-126">否则，该方法返回`true`如果提供了回退或`false`如果它不存在。</span><span class="sxs-lookup"><span data-stu-id="8bce0-126">Otherwise, the method returns `true` if it provides a fallback, or `false` if it does not.</span></span>  
  
-   <span data-ttu-id="8bce0-127"><xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>方法，如果编码器重复调用该<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>方法返回`true`。</span><span class="sxs-lookup"><span data-stu-id="8bce0-127">The <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method, which is called repeatedly by the encoder if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`.</span></span> <span data-ttu-id="8bce0-128">在后续调用中，该处理程序应返回其缓冲区中的每个字符。</span><span class="sxs-lookup"><span data-stu-id="8bce0-128">In successive calls, the handler should return each character in its buffer.</span></span> <span data-ttu-id="8bce0-129">当它返回所有字符后时，它应返回 U + 0000。</span><span class="sxs-lookup"><span data-stu-id="8bce0-129">When it has returned all characters, it should return U+0000.</span></span> <span data-ttu-id="8bce0-130">异常处理程序始终返回 U + 0000。</span><span class="sxs-lookup"><span data-stu-id="8bce0-130">An exception handler always returns U+0000.</span></span>  
  
-   <span data-ttu-id="8bce0-131"><xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A>方法，它尝试将指针移到缓冲区中的前一个位置，并指示移动是否成功。</span><span class="sxs-lookup"><span data-stu-id="8bce0-131">The <xref:System.Text.EncoderFallbackBuffer.MovePrevious%2A> method, which tries to move the pointer to the previous position in the buffer and indicates whether the move was successful.</span></span> <span data-ttu-id="8bce0-132">异常处理程序始终返回`false`。</span><span class="sxs-lookup"><span data-stu-id="8bce0-132">An exception handler always returns `false`.</span></span>  
  
-   <span data-ttu-id="8bce0-133"><xref:System.Text.EncoderFallbackBuffer.Remaining%2A>属性，它指示要返回到编码器的剩余字符数。</span><span class="sxs-lookup"><span data-stu-id="8bce0-133">The <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> property, which indicates the number of remaining characters to be returned to the encoder.</span></span> <span data-ttu-id="8bce0-134">异常回退处理程序将始终返回零。</span><span class="sxs-lookup"><span data-stu-id="8bce0-134">An exception fallback handler always returns zero.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.EncoderFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bce0-135">初始化 <see cref="T:System.Text.EncoderFallbackBuffer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-135">Initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fallback">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8bce0-136">指示在无法对原始输入进行编码时是否有可用的替代字符串，或是否应忽略原始输入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-136">Indicates whether a substitute string is available when the original input cannot be encoded, or whether the original input should be ignored.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknown As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknown, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknown, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknown" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknown">
          <span data-ttu-id="8bce0-137">一个输入字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-137">An input character.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8bce0-138">该字符在输入缓冲区中的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-138">The index position of the character in the input buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bce0-139">在派生类中重写后，此方法对回退缓冲区进行准备，以处理指定的输入字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-139">When overridden in a derived class, prepares the fallback buffer to handle the specified input character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bce0-140">如果回退缓冲区能处理 <paramref name="charUnknown" /> 则为 <see langword="true" />；如果回退缓冲区忽略 <paramref name="charUnknown" />，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-140">
              <see langword="true" /> if the fallback buffer can process <paramref name="charUnknown" />; <see langword="false" /> if the fallback buffer ignores <paramref name="charUnknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bce0-141"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>和<xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>方法调用<xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29>如果他们遇到不能进行编码的未知输入的字符。</span><span class="sxs-lookup"><span data-stu-id="8bce0-141">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.DecoderFallbackBuffer.Fallback%28System.Byte%5B%5D%2CSystem.Int32%29> if they encounter an unknown input character that cannot be encoded.</span></span> <span data-ttu-id="8bce0-142">返回值`true`指示回退缓冲区可以处理输入的字符，这会导致调用的方法调用<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>方法来获取回退缓冲区每个字符。</span><span class="sxs-lookup"><span data-stu-id="8bce0-142">A return value of `true` indicates that the fallback buffer can process the input character, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span> <span data-ttu-id="8bce0-143">因为它不会处理每个字符，<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>异常回退处理程序中的方法引发异常。</span><span class="sxs-lookup"><span data-stu-id="8bce0-143">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(char charUnknownHigh, char charUnknownLow, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (charUnknownHigh As Char, charUnknownLow As Char, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(char charUnknownHigh, char charUnknownLow, int index);" />
      <MemberSignature Language="F#" Value="abstract member Fallback : char * char * int -&gt; bool" Usage="encoderFallbackBuffer.Fallback (charUnknownHigh, charUnknownLow, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charUnknownHigh" Type="System.Char" />
        <Parameter Name="charUnknownLow" Type="System.Char" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charUnknownHigh">
          <span data-ttu-id="8bce0-144">输入对的高代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-144">The high surrogate of the input pair.</span>
          </span>
        </param>
        <param name="charUnknownLow">
          <span data-ttu-id="8bce0-145">输入对的低代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-145">The low surrogate of the input pair.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="8bce0-146">该代理项对在输入缓冲区中的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-146">The index position of the surrogate pair in the input buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8bce0-147">在派生类中重写后，此方法对回退缓冲区进行准备，以处理指定的代理项对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-147">When overridden in a derived class, prepares the fallback buffer to handle the specified surrogate pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bce0-148">如果回退缓冲区可以处理 <paramref name="charUnknownHigh" /> 和 <paramref name="charUnknownLow" />，则为 <see langword="true" />；如果回退缓冲区忽略代理项对，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-148">
              <see langword="true" /> if the fallback buffer can process <paramref name="charUnknownHigh" /> and <paramref name="charUnknownLow" />; <see langword="false" /> if the fallback buffer ignores the surrogate pair.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bce0-149"><xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>和<xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType>方法调用<xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29>如果他们遇到其输入中的代理项对。</span><span class="sxs-lookup"><span data-stu-id="8bce0-149">The <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> and <xref:System.Text.Encoder.Convert%2A?displayProperty=nameWithType> methods call <xref:System.Text.EncoderFallbackBuffer.Fallback%28System.Char%2CSystem.Char%2CSystem.Int32%29> if they encounter a surrogate pair in their input.</span></span> <span data-ttu-id="8bce0-150">返回值`true`指示回退缓冲区可以处理代理项对，这会导致调用的方法调用<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>方法来获取回退缓冲区每个字符。</span><span class="sxs-lookup"><span data-stu-id="8bce0-150">A return value of `true` indicates that the fallback buffer can process the surrogate pair, which causes the calling method to call the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method to obtain each character of the fallback buffer.</span></span>  <span data-ttu-id="8bce0-151">因为它不会处理每个字符，<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>异常回退处理程序中的方法引发异常。</span><span class="sxs-lookup"><span data-stu-id="8bce0-151">Because it does not process individual characters, the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method in an exception fallback handler throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberSignature Language="F#" Value="abstract member GetNextChar : unit -&gt; char" Usage="encoderFallbackBuffer.GetNextChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bce0-152">在派生类中重写后，此方法检索回退缓冲区中的下一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-152">When overridden in a derived class, retrieves the next character in the fallback buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bce0-153">回退缓冲区中的下一个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-153">The next character in the fallback buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bce0-154">编码操作调用<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>方法如果该操作遇到了未知的字符或输入中的代理项对。</span><span class="sxs-lookup"><span data-stu-id="8bce0-154">An encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method if the operation encounters an unknown character or surrogate pair in the input.</span></span> <span data-ttu-id="8bce0-155">例如，对于替换回退，如果<xref:System.Text.EncoderFallbackBuffer.Fallback%2A>方法返回`true`，替代字符串存在，可以编码而不是未知的输入。</span><span class="sxs-lookup"><span data-stu-id="8bce0-155">For example, in the case of a replacement fallback, if the <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true`, a substitute string exists that can be encoded instead of the unknown input.</span></span> <span data-ttu-id="8bce0-156">编码的操作调用<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>方法重复，并一次获取替代字符串中的一个字符。</span><span class="sxs-lookup"><span data-stu-id="8bce0-156">The encoding operation calls the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method repeatedly and obtains the substitute string one character at a time.</span></span> <span data-ttu-id="8bce0-157">当回退缓冲区中的所有字符均已都返回到编码器，<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>方法应返回 U + 0000。</span><span class="sxs-lookup"><span data-stu-id="8bce0-157">When all characters in the fallback buffer have been returned to the encoder, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 <span data-ttu-id="8bce0-158">对于异常回退处理程序，<xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A>方法应返回 U + 0000。</span><span class="sxs-lookup"><span data-stu-id="8bce0-158">For an exception fallback handler, the <xref:System.Text.EncoderFallbackBuffer.GetNextChar%2A> method should return U+0000.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberSignature Language="F#" Value="abstract member MovePrevious : unit -&gt; bool" Usage="encoderFallbackBuffer.MovePrevious " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bce0-159">在派生类中重写后，此方法将使对 <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> 方法的下一次调用访问当前字符位置之前的数据缓冲区字符位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-159">When overridden in a derived class, causes the next call to the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method to access the data buffer character position that is prior to the current character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8bce0-160">如果 <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> 操作成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-160">
              <see langword="true" /> if the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> operation was successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bce0-161">异常回退处理程序应返回`false`。</span><span class="sxs-lookup"><span data-stu-id="8bce0-161">An exception fallback handler should return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Remaining : int" Usage="System.Text.EncoderFallbackBuffer.Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8bce0-162">在派生类中重写后，此属性获取当前 <see cref="T:System.Text.EncoderFallbackBuffer" /> 对象中要处理的剩余字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-162">When overridden in a derived class, gets the number of characters in the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object that remain to be processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8bce0-163">尚未处理的当前回退缓冲区中的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-163">The number of characters in the current fallback buffer that have not yet been processed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bce0-164"><xref:System.Text.EncoderFallbackBuffer.Fallback%2A>方法返回`true`如果<xref:System.Text.EncoderFallbackBuffer.Remaining%2A>为非零值。</span><span class="sxs-lookup"><span data-stu-id="8bce0-164">The <xref:System.Text.EncoderFallbackBuffer.Fallback%2A> method returns `true` if <xref:System.Text.EncoderFallbackBuffer.Remaining%2A> is a nonzero value.</span></span>  
  
 <span data-ttu-id="8bce0-165">对于异常回退处理程序，<xref:System.Text.DecoderFallbackBuffer.Remaining%2A>方法应返回零。</span><span class="sxs-lookup"><span data-stu-id="8bce0-165">For an exception fallback handler, the <xref:System.Text.DecoderFallbackBuffer.Remaining%2A> method should return zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.EncoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="encoderFallbackBuffer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8bce0-166">初始化所有与此回退缓冲区相关的数据和状态信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-166">Initializes all data and state information pertaining to this fallback buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="8bce0-167">
            <para>在调用<see cref="M:System.Text.EncoderFallbackBuffer.Reset" />方法，<see cref="P:System.Text.EncoderFallbackBuffer.Remaining" />属性应返回 0，<see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" />方法应返回 U + 0000，和<see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" />方法应返回<see langword="false" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="8bce0-167">
              <para>After calling the <see cref="M:System.Text.EncoderFallbackBuffer.Reset" /> method, the <see cref="P:System.Text.EncoderFallbackBuffer.Remaining" /> property should return 0, the <see cref="M:System.Text.EncoderFallbackBuffer.GetNextChar" /> method should return U+0000, and the <see cref="M:System.Text.EncoderFallbackBuffer.MovePrevious" /> method should return <see langword="false" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>