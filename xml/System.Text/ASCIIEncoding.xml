<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ASCIIEncoding.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ab5211a8f9320a934d74d9b3f821ee108ec6cb24.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab5211a8f9320a934d74d9b3f821ee108ec6cb24</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Represents an ASCII character encoding of Unicode characters.</source>
          <target state="translated">表示 Unicode 字符的 ASCII 字符编码。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</source>
          <target state="translated">编码是将一组 Unicode 字符转换为一个字节序列的过程。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</source>
          <target state="translated">解码是一组 Unicode 字符转换为编码字节的序列的过程。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> corresponds to the Windows code page 20127.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 对应于 Windows 代码页 20127。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Because ASCII is a 7-bit encoding, ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</source>
          <target state="translated">由于 ASCII 是 7 位编码，ASCII 字符仅限于从 U + 0000 到 U + 007F 的最低 128 个 Unicode 字符。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>If you use the default encoder returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.%23ctor%2A&gt;</ph> constructor, characters outside that range are replaced with a question mark (?) before the encoding operation is performed.</source>
          <target state="translated">如果使用返回的默认编码器<ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType&gt;</ph>属性或<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.%23ctor%2A&gt;</ph>执行编码操作之前，会用问号 （？） 替换构造函数，该范围以外的字符。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Because the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class supports only a limited character set, the <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, and <ph id="ph4">&lt;xref:System.Text.UTF32Encoding&gt;</ph> classes are better suited for globalized applications.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>类支持仅一个有限的字符集， <ph id="ph2">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph3">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>，和<ph id="ph4">&lt;xref:System.Text.UTF32Encoding&gt;</ph>类是更好地适合全球化应用程序。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>The following considerations can help you to decide whether to use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>:</source>
          <target state="translated">以下注意事项可以帮助您决定是否使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Some protocols require ASCII or a subset of ASCII.</source>
          <target state="translated">某些协议要求 ASCII 或 ASCII 的子集。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>In these cases ASCII encoding is appropriate.</source>
          <target state="translated">在这些情况下 ASCII 编码是适当的。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>If an 8-bit encoding is expected, then ASCII probably isn't the correct choice.</source>
          <target state="translated">如果需要 8 位编码，则 ASCII 可能不正确的选择。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Instead, consider using UTF8 instead of ASCII.</source>
          <target state="translated">相反，请考虑使用 UTF8 而不 ASCII。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>For the characters U+0000 through U+007F, the results are identical, but all Unicode characters are representable in UTF-8, which avoids data loss.</source>
          <target state="translated">对于字符 U + 0000 到 U + 007F，结果是相同的但所有 Unicode 字符可表示采用 utf-8，这会避免数据丢失。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 不提供错误检测。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>For security reasons, you should use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">出于安全原因，应使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>，或<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>并启用错误检测。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method determines how many bytes result in encoding a set of Unicode characters, and the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method performs the actual encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>方法确定将多少个字节进行编码的一组 Unicode 字符和<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>方法执行实际的编码。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method determines how many characters result in decoding a sequence of bytes, and the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetString%2A&gt;</ph> methods perform the actual decoding.</source>
          <target state="translated">同样，<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>方法确定有多少个字符的字节序列进行解码所导致和<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetString%2A&gt;</ph>方法执行实际的解码。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Note that the default <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> constructor by itself might not have the appropriate behavior for your application.</source>
          <target state="translated">请注意，默认值<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>构造函数本身可能没有你的应用程序的适当行为。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>You might want to consider setting the <ph id="ph1">&lt;xref:System.Text.Encoding.EncoderFallback%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Encoding.DecoderFallback%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> or <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> to prevent sequences with the 8th bit set.</source>
          <target state="translated">你可能想要考虑设置<ph id="ph1">&lt;xref:System.Text.Encoding.EncoderFallback%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoding.DecoderFallback%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>或<ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>以防止与设置第 8 位的序列。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Custom behavior might also be appropriate for these cases.</source>
          <target state="translated">自定义行为也可能适合于这种情况。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>The following example demonstrates how to encode Unicode characters into ASCII.</source>
          <target state="translated">下面的示例演示了如何编码成 ASCII Unicode 字符。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Text.ASCIIEncoding">
          <source>Notice the loss of data that occurs when your application uses <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> to encode Unicode characters outside of the ASCII range.</source>
          <target state="translated">请注意出现时你的应用程序使用的数据丢失<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>ASCII 范围之外的 Unicode 字符进行编码。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Text.ASCIIEncoding" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Text.ASCIIEncoding" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>类不提供错误检测。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>For security reasons, you should use the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> class and enable error detection.</source>
          <target state="translated">出于安全原因，应使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>，或<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>类并启用错误检测。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>If you choose to use ASCII encoding, this constructor may not provide the appropriate fallback behavior for your application.</source>
          <target state="translated">如果你选择使用 ASCII 编码，则此构造函数可能无法为应用程序提供适当的回退行为。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>It uses the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph> classes to replace every character outside the range of U+0000 through U+007F with a question mark (?).</source>
          <target state="translated">它使用<ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>类将替换为问号 （？） 的 U + 0000 到 U + 007F 范围之外的每个字符。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>Instead, you can call the <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType&gt;</ph> method and pass it <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> and <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph> objects to use exception fallback.</source>
          <target state="translated">相反，您可以调用<ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType&gt;</ph>方法并将其传递<ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>和<ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>对象使用异常回退。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> supports only the Unicode character values between U+0000 and U+007F.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 仅支持的 Unicode 字符值之间 U + 0000 到 U + 007F。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, and <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> are better suited for globalized applications.</source>
          <target state="translated">因此， <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>，和<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>更适合全球化应用程序。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.#ctor">
          <source>The following example demonstrates how to create a new <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> instance and display the name of the encoding.</source>
          <target state="translated">下面的示例演示如何创建一个新<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>实例，并显示编码的名称。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Calculates the number of bytes produced by encoding a set of characters.</source>
          <target state="translated">计算对一组字符进行编码时产生的字节数。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the set of characters to encode.</source>
          <target state="translated">包含要编码的字符集的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>Calculates the number of bytes produced by encoding the characters in the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated">计算对指定 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 中的字符进行编码时所产生的字节数。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">对指定字符进行编码后生成的字节数。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算所需的精确数组大小<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>为了存储所产生的字节，应用程序使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算的最大数组大小，应用程序应使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>方法通常允许您分配的内存越少，而<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>方法通常执行得更快。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method to return the number of bytes required to encode a string using <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>方法返回的字符串使用进行编码所需的字节数<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">得到的字节数大于可作为整数返回的最大数量。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">发生了回退（如需完整说明，请参阅 <bpt id="p1">[</bpt>.NET Framework 中的字符编码<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>）</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source>-and-</source>
          <target state="translated">－和－</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.String)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> 设置为 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">指向第一个要编码的字符的指针。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">要编码的字符的数目。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</source>
          <target state="translated">计算对从指定的字符指针开始的一组字符进行编码时产生的字节数。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">对指定字符进行编码后生成的字节数。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算所需的精确数组大小<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>为了存储所产生的字节，应用程序使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算的最大数组大小，应用程序应使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>方法通常允许您分配的内存越少，而<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>方法通常执行得更快。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">得到的字节数大于可作为整数返回的最大数量。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">发生了回退（如需完整说明，请参阅 <bpt id="p1">[</bpt>.NET Framework 中的字符编码<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>）</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>-and-</source>
          <target state="translated">－和－</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> 设置为 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">包含要编码的字符集的字符数组。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">第一个要编码的字符的索引。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">要编码的字符的数目。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>Calculates the number of bytes produced by encoding a set of characters from the specified character array.</source>
          <target state="translated">计算对指定字符数组中的一组字符进行编码时产生的字节数。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The number of bytes produced by encoding the specified characters.</source>
          <target state="translated">对指定字符进行编码后生成的字节数。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算所需的精确数组大小<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>为了存储所产生的字节，应用程序使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算的最大数组大小，应用程序应使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>方法通常允许您分配的内存越少，而<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>方法通常执行得更快。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method to return the number of bytes required to encode an array of Unicode characters using <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>方法以返回所需的使用 Unicode 字符数组进行编码的字节数<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 不表示 <ph id="ph3">&lt;paramref name="chars" /&gt;</ph> 中的有效范围。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">得到的字节数大于可作为整数返回的最大数量。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">发生了回退（如需完整说明，请参阅 <bpt id="p1">[</bpt>.NET Framework 中的字符编码<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>）</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">－和－</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> 设置为 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Encodes a set of characters into a sequence of bytes.</source>
          <target state="translated">将一组字符编码为一个字节序列。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A pointer to the first character to encode.</source>
          <target state="translated">指向第一个要编码的字符的指针。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">要编码的字符的数目。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A pointer to the location at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">一个指针，指向开始写入所产生的字节序列的位置。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">最多写入的字节数。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</source>
          <target state="translated">将从指定的字符指针开始的一组字符编码为一个字节序列，并从指定的字节指针开始存储该字节序列。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The actual number of bytes written at the location indicated by <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">在由 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 指示的位置处写入的实际字节数。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算所需的精确数组大小<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>为了存储所产生的字节，应用程序使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算的最大数组大小，应用程序应使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>方法通常允许您分配的内存越少，而<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>方法通常执行得更快。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">数据转换，如从流中读取的数据可以是仅在连续的块中可用。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">在这种情况下，或如果的数据量太大，因此需要划分为较小的块，应用程序应使用<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>由<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>方法或<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 不提供错误检测。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Any Unicode character greater than U+007F is translated to an ASCII question mark ("?").</source>
          <target state="translated">任何大于 U + 007F 的 Unicode 字符转换为 ASCII 问号按钮 ("？")。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">出于安全原因，你的应用程序建议使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>，或<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>并启用错误检测。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> is less than the resulting number of bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> 少于所产生的字节数。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">发生了回退（如需完整说明，请参阅 <bpt id="p1">[</bpt>.NET Framework 中的字符编码<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>）</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>-and-</source>
          <target state="translated">－和－</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> 设置为 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The character array containing the set of characters to encode.</source>
          <target state="translated">包含要编码的字符集的字符数组。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">第一个要编码的字符的索引。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">要编码的字符的数目。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The byte array to contain the resulting sequence of bytes.</source>
          <target state="translated">要包含所产生的字节序列的字节数组。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">要开始写入所产生的字节序列的索引位置。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Encodes a set of characters from the specified character array into the specified byte array.</source>
          <target state="translated">将指定字符数组中的一组字符编码到指定的字节数组中。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The actual number of bytes written into <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">写入 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 的实际字节数。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算所需的精确数组大小<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>为了存储所产生的字节，应用程序使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算的最大数组大小，应用程序应使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>方法通常允许您分配的内存越少，而<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>方法通常执行得更快。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">数据转换，如从流中读取的数据可以是仅在连续的块中可用。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">在这种情况下，或如果的数据量太大，因此需要划分为较小的块，应用程序应使用<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>由<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>方法或<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 不提供错误检测。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</source>
          <target state="translated">任何大于 U + 007F 的 Unicode 字符编码为 ASCII 问号 ("？")。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">出于安全原因，你的应用程序建议使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>，或<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>并启用错误检测。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method to encode a range of characters from a string and store the encoded characters in a range of elements in a byte array.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>方法对某个范围的从字符串的字符进行编码并将已编码的字符存储在某个范围的字节数组中的元素。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>、<ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 不表示 <ph id="ph3">&lt;paramref name="chars" /&gt;</ph> 中的有效范围。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> 不是 <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> 中的有效索引。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> to the end of the array to accommodate the resulting bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 中从 <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> 到数组结尾没有足够的容量来容纳所产生的字节。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">发生了回退（如需完整说明，请参阅 <bpt id="p1">[</bpt>.NET Framework 中的字符编码<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>）</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-and-</source>
          <target state="translated">－和－</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> 设置为 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the set of characters to encode.</source>
          <target state="translated">包含要编码的字符集的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index of the first character to encode.</source>
          <target state="translated">第一个要编码的字符的索引。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">要编码的字符的数目。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The byte array to contain the resulting sequence of bytes.</source>
          <target state="translated">要包含所产生的字节序列的字节数组。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The index at which to start writing the resulting sequence of bytes.</source>
          <target state="translated">要开始写入所产生的字节序列的索引位置。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Encodes a set of characters from the specified <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> into the specified byte array.</source>
          <target state="translated">将指定 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 中的一组字符编码到指定的字节数组中。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The actual number of bytes written into <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated">写入 <ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 的实际字节数。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> to store the resulting bytes, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算所需的精确数组大小<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>为了存储所产生的字节，应用程序使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算的最大数组大小，应用程序应使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>方法通常允许您分配的内存越少，而<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>方法通常执行得更快。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">数据转换，如从流中读取的数据可以是仅在连续的块中可用。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">在这种情况下，或如果的数据量太大，因此需要划分为较小的块，应用程序应使用<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>由<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>方法或<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 不提供错误检测。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</source>
          <target state="translated">任何大于 U + 007F 的 Unicode 字符编码为 ASCII 问号 ("？")。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">出于安全原因，你的应用程序建议使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>，或<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>并启用错误检测。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>方法进行编码的一系列 Unicode 字符数组中的元素并将已编码的字节存储在某个范围的字节数组中的元素。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph>、<ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="byteIndex" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 不表示 <ph id="ph3">&lt;paramref name="chars" /&gt;</ph> 中的有效范围。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> 不是 <ph id="ph2">&lt;paramref name="bytes" /&gt;</ph> 中的有效索引。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> to the end of the array to accommodate the resulting bytes.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 中从 <ph id="ph2">&lt;paramref name="byteIndex" /&gt;</ph> 到数组结尾没有足够的容量来容纳所产生的字节。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">发生了回退（如需完整说明，请参阅 <bpt id="p1">[</bpt>.NET Framework 中的字符编码<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>）</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-and-</source>
          <target state="translated">－和－</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Text.Encoding.EncoderFallback" /&gt;</ph> 设置为 <ph id="ph2">&lt;see cref="T:System.Text.EncoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Calculates the number of characters produced by decoding a sequence of bytes.</source>
          <target state="translated">计算对一个字节序列进行解码所产生的字符数。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">指向第一个要解码的字节的指针。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">要解码的字节数。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</source>
          <target state="translated">计算对一个字节序列（从指定的字节指针开始）进行解码所产生的字符数。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The number of characters produced by decoding the specified sequence of bytes.</source>
          <target state="translated">对指定字节序列进行解码所产生的字符数。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> to store the resulting characters, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算所需的精确数组大小<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>来存储所产生的字符，该应用程序使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算的最大数组大小，应用程序应使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>方法通常允许您分配的内存越少，而<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>方法通常执行得更快。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">得到的字节数大于可作为整数返回的最大数量。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">发生了回退（如需完整说明，请参阅 <bpt id="p1">[</bpt>.NET Framework 中的字符编码<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>）</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>-and-</source>
          <target state="translated">－和－</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> 设置为 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">包含要解码的字节序列的字节数组。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">第一个要解码的字节的索引。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">要解码的字节数。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</source>
          <target state="translated">计算对指定字节数组中的一个字节序列进行解码所产生的字符数。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The number of characters produced by decoding the specified sequence of bytes.</source>
          <target state="translated">对指定字节序列进行解码所产生的字符数。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> to store the resulting characters, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算所需的精确数组大小<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>来存储所产生的字符，该应用程序使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算的最大数组大小，应用程序应使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>方法通常允许您分配的内存越少，而<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>方法通常执行得更快。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method to return the number of characters produced by decoding a range of elements in a byte array.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>解码的字节数组中的元素范围由方法返回的字符数。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 不表示 <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph> 中的有效范围。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">得到的字节数大于可作为整数返回的最大数量。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">发生了回退（如需完整说明，请参阅 <bpt id="p1">[</bpt>.NET Framework 中的字符编码<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>）</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">－和－</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> 设置为 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="T:System.Text.ASCIIEncoding">
          <source>Decodes a sequence of bytes into a set of characters.</source>
          <target state="translated">将一个字节序列解码为一组字符。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A pointer to the first byte to decode.</source>
          <target state="translated">指向第一个要解码的字节的指针。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">要解码的字节数。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A pointer to the location at which to start writing the resulting set of characters.</source>
          <target state="translated">一个指针，指向开始写入所产生的字符集的位置。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The maximum number of characters to write.</source>
          <target state="translated">要写入的最大字符数。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</source>
          <target state="translated">将从指定的字节指针开始的一个字节序列解码为一组字符，并从指定的字符指针开始存储这组字符。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The actual number of characters written at the location indicated by <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">在由 <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 指示的位置处写入的实际字符数。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> to store the resulting characters, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算所需的精确数组大小<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>来存储所产生的字符，该应用程序使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算的最大数组大小，应用程序应使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>方法通常允许您分配的内存越少，而<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>方法通常执行得更快。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">数据转换，如从流中读取的数据可以是仅在连续的块中可用。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">在这种情况下，或如果的数据量太大，因此需要划分为较小的块，应用程序应使用<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>由<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>方法或<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 不提供错误检测。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</source>
          <target state="translated">任何大于 0x7F 十六进制的字节解码为 Unicode 问号 ("？")。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">出于安全原因，你的应用程序建议使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>，或<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>并启用错误检测。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="charCount" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than the resulting number of characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> 少于所产生的字符数。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">发生了回退（如需完整说明，请参阅 <bpt id="p1">[</bpt>.NET Framework 中的字符编码<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>）</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>-and-</source>
          <target state="translated">－和－</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> 设置为 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">包含要解码的字节序列的字节数组。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">第一个要解码的字节的索引。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">要解码的字节数。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The character array to contain the resulting set of characters.</source>
          <target state="translated">要用于包含所产生的字符集的字符数组。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The index at which to start writing the resulting set of characters.</source>
          <target state="translated">开始写入所产生的字符集的索引位置。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Decodes a sequence of bytes from the specified byte array into the specified character array.</source>
          <target state="translated">将指定字节数组中的一个字节序列解码为指定的字符数组。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The actual number of characters written into <ph id="ph1">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated">写入 <ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 的实际字符数。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To calculate the exact array size required by <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> to store the resulting characters, the application uses <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算所需的精确数组大小<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>来存储所产生的字符，该应用程序使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>To calculate the maximum array size, the application should use <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">若要计算的最大数组大小，应用程序应使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allows allocation of less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>方法通常允许您分配的内存越少，而<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>方法通常执行得更快。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">数据转换，如从流中读取的数据可以是仅在连续的块中可用。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">在这种情况下，或如果的数据量太大，因此需要划分为较小的块，应用程序应使用<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>由<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>方法或<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 不提供错误检测。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</source>
          <target state="translated">任何大于 0x7F 十六进制的字节解码为 Unicode 问号 ("？")。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>For security reasons, your application is recommended to use <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> and enable error detection.</source>
          <target state="translated">出于安全原因，你的应用程序建议使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>，或<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>并启用错误检测。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>The following example demonstrates how to decode a range of elements from a byte array and store the result in a set of elements in a Unicode character array.</source>
          <target state="translated">下面的示例演示如何进行解码的字节数组中的元素范围，并将结果存储在一组 Unicode 字符数组中的元素。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph> or <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> or <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteIndex" /&gt;</ph>、<ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="charIndex" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> and <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteindex" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="byteCount" /&gt;</ph> 不表示 <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph> 中的有效范围。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> is not a valid index in <ph id="ph2">&lt;paramref name="chars" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charIndex" /&gt;</ph> 不是 <ph id="ph2">&lt;paramref name="chars" /&gt;</ph> 中的有效索引。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> does not have enough capacity from <ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> to the end of the array to accommodate the resulting characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="chars" /&gt;</ph> 中从 <ph id="ph2">&lt;paramref name="charIndex" /&gt;</ph> 到数组结尾没有足够容量来容纳所产生的字符。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">发生了回退（如需完整说明，请参阅 <bpt id="p1">[</bpt>.NET Framework 中的字符编码<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>）</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source>-and-</source>
          <target state="translated">－和－</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> 设置为 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>Obtains a decoder that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</source>
          <target state="translated">获取可以将 ASCII 编码的字节序列转换为 Unicode 字符序列的解码器。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>A <ph id="ph1">&lt;see cref="T:System.Text.Decoder" /&gt;</ph> that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Decoder" /&gt;</ph> 用于将 ASCII 编码的字节序列转换为 Unicode 字符序列。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> method of this class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType&gt;</ph>方法将连续的字节块转换为连续的块中的字符，方式类似于<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>此类的方法。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>However, a <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> maintains state information between calls so it can correctly decode byte sequences that span blocks.</source>
          <target state="translated">但是，<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>因此它可以正确地对跨块的字节序列进行解码的调用之间维护状态信息。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>还会保留在数据块的末尾的尾随字节，在下一步的解码操作中使用的尾随字节。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetDecoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>在网络传输和文件操作很有用，因为这些操作通常处理的数据而不是完整的数据流块。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>Obtains an encoder that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</source>
          <target state="translated">获取可将 Unicode 字符序列转换为 ASCII 编码的字节序列的编码器。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>An <ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph> that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Text.Encoder" /&gt;</ph>，它将一个 Unicode 字符序列转换为一个 ASCII 编码的字节序列。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method of this class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType&gt;</ph>方法将连续的字符块转换为连续的块中的字节，方式类似于<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>此类的方法。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>However, an <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> maintains state information between calls so it can correctly encode character sequences that span blocks.</source>
          <target state="translated">但是，<ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>以便其可以进行正确编码跨块的字符序列的调用之间维护状态信息。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.Encoder&gt;</ph>还保留了尾随字符数据块的末尾，并在下一步的编码操作中使用的尾随字符。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</source>
          <target state="translated">例如，一个数据块可能结尾不匹配的高代理项，并且匹配的低代理项可能在下一个数据块中。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetEncoder">
          <source>Therefore, <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>在网络传输和文件操作很有用，因为这些操作通常处理的数据而不是完整的数据流块。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The number of characters to encode.</source>
          <target state="translated">要编码的字符的数目。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>Calculates the maximum number of bytes produced by encoding the specified number of characters.</source>
          <target state="translated">计算对指定数目的字符进行编码时产生的最大字节数。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The maximum number of bytes produced by encoding the specified number of characters.</source>
          <target state="translated">对指定数目的字符进行编码所产生的最大字节数。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method calculates the exact array size required by the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph> method to store the resulting bytes, whereas the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method calculates the maximum array size.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>方法计算所需的精确数组大小<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>方法来存储所产生的字节，而<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>方法计算最大数组大小。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> method generally allocates less memory, but the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>方法通常分配的内存越少，但<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>方法通常执行得更快。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> is a worst-case number, including the worst case for the currently selected <ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 是一个最坏情况的数字，包括当前所选最坏情况下<ph id="ph2">&lt;xref:System.Text.EncoderFallback&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>If you choose a replacement fallback with a potentially large string, <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> can return large values.</source>
          <target state="translated">如果你选择了替换回退可能很大的字符串，<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>可以返回较大的值。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method considers potential leftover surrogates from a previous encoding operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>方法考虑从以前的编码操作潜在剩余的代理项。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>As a result, if the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object uses the default replacement fallback, or if a custom replacement fallback has been defined with a single possible fallback character, the method returns <ph id="ph2">`charCount`</ph> + 1.</source>
          <target state="translated">因此，如果<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>对象使用默认替换回退，或如果已在使用单个可能回退字符定义自定义替换回退，此方法返回<ph id="ph2">`charCount`</ph>+ 1。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object uses a replacement fallback with more than one possible fallback character, the method returns <bpt id="p1">*</bpt>n<ept id="p1">*</ept> * (<ph id="ph2">`charCount`</ph> + 1), where <bpt id="p2">*</bpt>n<ept id="p2">*</ept> is the maximum number of fallback characters.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>对象使用多个可能的回退字符使用替换回退，该方法返回<bpt id="p1">*</bpt>n<ept id="p1">*</ept> * (<ph id="ph2">`charCount`</ph> + 1)，其中<bpt id="p2">*</bpt>n<ept id="p2">*</ept>是回退的最大的数字符。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> has no relation to <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> 与无关<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>If your application needs a similar function to use with <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>, it should use <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>.</source>
          <target state="translated">如果你的应用程序需要一个用于与的类似函数<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>，应使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">`GetMaxByteCount(N)`</ph> is not necessarily the same value as <ph id="ph2">`N* GetMaxByteCount(1)`</ph>.</source>
          <target state="translated"><ph id="ph1">`GetMaxByteCount(N)`</ph> 不一定是相同的值<ph id="ph2">`N* GetMaxByteCount(1)`</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method to calculate the bytes required to encode a specified number of characters.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>方法来计算对指定的数目的字符进行编码所需的字节数。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="charCount" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">得到的字节数大于可作为整数返回的最大数量。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">要解码的字节数。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>Calculates the maximum number of characters produced by decoding the specified number of bytes.</source>
          <target state="translated">计算对指定数目的字节进行解码时产生的最大字符数。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The maximum number of characters produced by decoding the specified number of bytes.</source>
          <target state="translated">对指定数目的字节进行解码时所产生的最大字符数。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method calculates the exact array size required by the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph> method to store the resulting characters, whereas  the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method calculates the maximum array size.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>方法计算所需的精确数组大小<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetChars%2A&gt;</ph>方法来存储所产生的字符，而<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>方法计算最大数组大小。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> method generally allocates less memory, while the <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method generally executes faster.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>方法通常会分配较少的内存，而<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>方法通常执行得更快。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> retrieves a worst-case number, including the worst case for the currently selected <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 检索最坏情况的数字，包括当前所选最坏情况下<ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>If a decoder fallback is present that has a maximum fallback length of <bpt id="p1">*</bpt>n<ept id="p1">*</ept>, the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method returns <bpt id="p2">*</bpt>n<ept id="p2">*</ept><ph id="ph2"> * </ph><ph id="ph3">`byteCount`</ph>.</source>
          <target state="translated">如果存在则解码器回退，长度最大回退的<bpt id="p1">*</bpt>n<ept id="p1">*</ept>、<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>方法返回<bpt id="p2">*</bpt>n<ept id="p2">*</ept><ph id="ph2"> * </ph><ph id="ph3">`byteCount`</ph>。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> has no relation to <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> 与无关<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>If your application needs a similar function to use with <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>, it should use <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>.</source>
          <target state="translated">如果你的应用程序需要一个用于与的类似函数<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetBytes%2A&gt;</ph>，应使用<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">`GetMaxCharCount(N)`</ph> is not necessarily the same value as <ph id="ph2">`N* GetMaxCharCount(1)`</ph>.</source>
          <target state="translated"><ph id="ph1">`GetMaxCharCount(N)`</ph> 不一定是相同的值<ph id="ph2">`N* GetMaxCharCount(1)`</ph>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method to calculate the maximum number of characters needed to decode a specified number of bytes.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>方法来计算最大对指定的数目的字节进行解码所需的字符数。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="byteCount" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)">
          <source>The resulting number of bytes is greater than the maximum number that can be returned as an integer.</source>
          <target state="translated">得到的字节数大于可作为整数返回的最大数量。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The byte array containing the sequence of bytes to decode.</source>
          <target state="translated">包含要解码的字节序列的字节数组。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The index of the first byte to decode.</source>
          <target state="translated">第一个要解码的字节的索引。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to decode.</source>
          <target state="translated">要解码的字节数。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Decodes a range of bytes from a byte array into a string.</source>
          <target state="translated">将字节数组中某个范围的字节解码为一个字符串。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the results of decoding the specified sequence of bytes.</source>
          <target state="translated">包含指定字节序列解码结果的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Data to be converted, such as data read from a stream, can be available only in sequential blocks.</source>
          <target state="translated">数据转换，如从流中读取的数据可以是仅在连续的块中可用。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph> or the <ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph> provided by the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph> method or the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph> method, respectively.</source>
          <target state="translated">在这种情况下，或如果的数据量太大，因此需要划分为较小的块，应用程序应使用<ph id="ph1">&lt;xref:System.Text.Decoder&gt;</ph>或<ph id="ph2">&lt;xref:System.Text.Encoder&gt;</ph>由<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetDecoder%2A&gt;</ph>方法或<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetEncoder%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> does not provide error detection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> 不提供错误检测。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</source>
          <target state="translated">任何大于 0x7F 十六进制的字节解码为 Unicode 问号 ("？")。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>For security reasons, you should use the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>, <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, or <ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph> classes and enable error detection instead of using the <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> class.</source>
          <target state="translated">出于安全原因，应使用<ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph>， <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>，或<ph id="ph3">&lt;xref:System.Text.UTF32Encoding&gt;</ph>类并启用而不是使用错误检测<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetString%2A&gt;</ph> method to convert a byte array into a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.GetString%2A&gt;</ph>方法将转换到字节数组<ph id="ph2">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="bytes" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> and <ph id="ph2">&lt;paramref name="count" /&gt;</ph> do not denote a valid range in <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 不表示 <ph id="ph3">&lt;paramref name="bytes" /&gt;</ph> 中的有效范围。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>A fallback occurred (see <bpt id="p1">[</bpt>Character Encoding in the .NET Framework<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept> for complete explanation)</source>
          <target state="translated">发生了回退（如需完整说明，请参阅 <bpt id="p1">[</bpt>.NET Framework 中的字符编码<ept id="p1">](~/docs/standard/base-types/character-encoding.md)</ept>）</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source>-and-</source>
          <target state="translated">－和－</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="P:System.Text.Encoding.DecoderFallback" /&gt;</ph> 设置为 <ph id="ph2">&lt;see cref="T:System.Text.DecoderExceptionFallback" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="P:System.Text.ASCIIEncoding.IsSingleByte">
          <source>Gets a value indicating whether the current encoding uses single-byte code points.</source>
          <target state="translated">获取一个可以指示当前编码是否使用单字节码位的值。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.ASCIIEncoding.IsSingleByte">
          <source>This property is always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">此属性恒为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.ASCIIEncoding.IsSingleByte">
          <source>Instead of using the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.IsSingleByte%2A&gt;</ph> property to determine the size of a byte array for encoding operations  and the size of a character array for decoding operations (for example, so that the size of the byte array is <ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.IsSingleByte%2A&gt;</ph> * the number of characters to be encoded), you should call the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph> method for encoding operations and the <ph id="ph5">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph> or <ph id="ph6">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph> method for decoding operations.</source>
          <target state="translated">而不是使用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding.IsSingleByte%2A&gt;</ph>属性来确定用于编码操作和用于解码操作的字符数组的大小的字节数组的大小 (例如，以便字节数组的大小是<ph id="ph2">&lt;xref:System.Text.ASCIIEncoding.IsSingleByte%2A&gt;</ph>* 要的字符数编码），应调用<ph id="ph3">&lt;xref:System.Text.ASCIIEncoding.GetByteCount%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A&gt;</ph>编码操作的方法和<ph id="ph5">&lt;xref:System.Text.ASCIIEncoding.GetCharCount%2A&gt;</ph>或<ph id="ph6">&lt;xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A&gt;</ph>用于解码操作的方法。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Text.ASCIIEncoding.IsSingleByte">
          <source>These methods takes the <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object's replacement fallback strategy into account when calculating the required array size.</source>
          <target state="translated">这些方法采用<ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>考虑时计算所需的数组大小的对象的替换回退策略。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>