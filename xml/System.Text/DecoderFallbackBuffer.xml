<Type Name="DecoderFallbackBuffer" FullName="System.Text.DecoderFallbackBuffer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="334e4a94e0c09dca04227f373df6acb3a69c9b91" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529151" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DecoderFallbackBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DecoderFallbackBuffer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.DecoderFallbackBuffer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DecoderFallbackBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DecoderFallbackBuffer abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供一个缓冲区，该缓冲区允许回退处理程序在解码器无法对输入字节序列进行解码时将替换字符串返回到该解码器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 编码定义的 Unicode 字符和编码的字节序列之间的映射。 如果没有映射定义特定字节序列，一个解码操作，从而将输入的字节序列转换为输出字符，将失败。  
  
 .NET Framework 提供失败处理机制，称为回退如果无法执行转换。 所有解码器回退处理程序必须都实现以下：  
  
-   解码器回退，表示由类派生自<xref:System.Text.DecoderFallback>类。  
  
-   解码器回退缓冲区，其类型派生自此表示<xref:System.Text.DecoderFallbackBuffer>可以返回一个字符串的转换操作的类。  
  
 回退机制可以使用三个策略来处理转换失败：  
  
-   最佳的映射。 解码器回退缓冲区可以返回一个字符串，表示近似为输入的字节序列。 .NET Framework 不提供最佳的公共<xref:System.Text.DecoderFallbackBuffer>实现。  
  
-   替换。 解码器回退缓冲区可以返回一个字符串，例如一个问号 ("？")，指示无法解码字节序列。 在.NET Framework 中，<xref:System.Text.DecoderReplacementFallback>和<xref:System.Text.DecoderReplacementFallbackBuffer>类提供公共替换回退缓冲区实现。 构造函数<xref:System.Text.DecoderReplacementFallback>类使你能够将替换字符串定义。  
  
-   异常。 <xref:System.Text.DecoderFallbackBuffer>实现引发异常，指示字节序列不能进行解码，并终止解码操作。 在这种情况下，回退处理程序必须提供<xref:System.Text.DecoderFallbackBuffer>实现中，尽管它不会返回一个字符串解码器。 在.NET Framework 中，<xref:System.Text.DecoderExceptionFallback>和<xref:System.Text.DecoderExceptionFallbackBuffer>类提供的公共异常回退实现引发<xref:System.Text.DecoderFallbackException>当不能解码字节序列。  
  
 中的缓冲区<xref:System.Text.DecoderFallbackBuffer>实现表示要返回到以响应解码器解码器回退的整个字符串。 通常，实现还包括状态信息，例如要返回到解码器和剩余字符数要返回的下一个字符的索引。 因为<xref:System.Text.DecoderFallbackBuffer>是一个抽象类，它需要派生的类以实现最少的以下成员：  
  
-   <xref:System.Text.DecoderFallbackBuffer.Fallback%2A>方法，它不能对字节序列进行解码时，解码器调用该方法。 解码器将两条信息传递给回退缓冲区实现： 它包含无法解码的字节数组中并输入的字节数组中的第一个字节的索引。 解码器回退异常处理程序中，在此方法中引发异常。 否则，该方法返回`true`如果提供了回退或`false`如果它不存在。  
  
-   <xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A>方法，如果解码器重复调用该<xref:System.Text.DecoderFallbackBuffer.Fallback%2A>方法返回`true`。 在后续调用中，该处理程序应返回其缓冲区中的每个字符。 当它返回所有字符后时，它应返回 U + 0000。 异常回退处理程序始终返回 U + 0000。  
  
-   <xref:System.Text.DecoderFallbackBuffer.MovePrevious%2A>方法，它尝试将指针移到缓冲区中的前一个位置，并指示移动是否成功。 异常处理程序始终返回`false`。  
  
-   <xref:System.Text.DecoderFallbackBuffer.Remaining%2A>属性，它指示要返回到解码器的剩余字符数。 异常回退处理程序将始终返回零。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.DecoderFallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DecoderFallbackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DecoderFallbackBuffer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Text.DecoderFallbackBuffer" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public abstract bool Fallback (byte[] bytesUnknown, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Fallback(unsigned int8[] bytesUnknown, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Fallback (bytesUnknown As Byte(), index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Fallback(cli::array &lt;System::Byte&gt; ^ bytesUnknown, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesUnknown" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytesUnknown">字节的输入数组。</param>
        <param name="index">
          <c>bytesUnknown</c> 中字节的索引位置。</param>
        <summary>在派生类中被重写时，准备回退缓冲区以便对指定输入字节序列进行处理。</summary>
        <returns>
          如果回退缓冲区能处理 <paramref name="bytesUnknown" /> 则为 <see langword="true" />；如果回退缓冲区忽略 <paramref name="bytesUnknown" />，则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.Encoding.GetChars%2A?displayProperty=nameWithType>， <xref:System.Text.Encoding.GetString%2A?displayProperty=nameWithType>，和<xref:System.Text.Decoder.Convert%2A?displayProperty=nameWithType>方法调用<xref:System.Text.DecoderFallbackBuffer.Fallback%2A>如果他们遇到无法解码的未知的输入的字节序列。 返回值`true`指示回退缓冲区可以处理的输入的字节序列，这会导致调用的方法调用<xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A>方法来获取回退缓冲区每个字符。 因为它不会处理各个字节<xref:System.Text.DecoderFallbackBuffer.Fallback%2A>异常回退处理程序中的方法引发异常。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextChar">
      <MemberSignature Language="C#" Value="public abstract char GetNextChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNextChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.GetNextChar" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextChar () As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract char GetNextChar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中重写后，此方法检索回退缓冲区中的下一个字符。</summary>
        <returns>回退缓冲区中的下一个字符。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在解码操作调用<xref:System.Text.DecoderFallbackBuffer.Fallback%2A>如果该操作遇到未知的字节序列的输入中的方法。 如果<xref:System.Text.DecoderFallbackBuffer.Fallback%2A>方法返回`true`，替代字符串存在，可以插入输出，而不是解码未知的输入。 解码操作调用<xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A>方法重复，并一次获取替代字符串中的一个字符。 当回退缓冲区中的所有字符均已都返回到解码器时，该方法应返回 U + 0000。  
  
 对于异常回退处理程序，<xref:System.Text.DecoderFallbackBuffer.GetNextChar%2A>方法应返回 U + 0000。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MovePrevious">
      <MemberSignature Language="C#" Value="public abstract bool MovePrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MovePrevious() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.MovePrevious" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MovePrevious () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MovePrevious();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在派生类中重写后，此方法将使对 <see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" /> 方法的下一次调用访问当前字符位置之前的数据缓冲区字符位置。</summary>
        <returns>
          如果 <see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" /> 操作成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 异常回退处理程序应返回`false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public abstract int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberSignature Language="DocId" Value="P:System.Text.DecoderFallbackBuffer.Remaining" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Remaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Remaining { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在派生类中重写后，此属性获取当前 <see cref="T:System.Text.DecoderFallbackBuffer" /> 对象中要处理的剩余字符数。</summary>
        <value>尚未处理的当前回退缓冲区中的字符数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Text.DecoderFallbackBuffer.Fallback%2A>方法返回`true`如果<xref:System.Text.DecoderFallbackBuffer.Remaining%2A>为非零值。  
  
 对于异常回退处理程序，<xref:System.Text.DecoderFallbackBuffer.Remaining%2A>方法应返回零。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.DecoderFallbackBuffer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初始化所有与此回退缓冲区相关的数据和状态信息。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>在调用<see cref="M:System.Text.DecoderFallbackBuffer.Reset" />方法，<see cref="P:System.Text.DecoderFallbackBuffer.Remaining" />属性应返回 0，<see cref="M:System.Text.DecoderFallbackBuffer.GetNextChar" />方法应返回 U + 0000，和<see cref="M:System.Text.DecoderFallbackBuffer.MovePrevious" />方法应返回<see langword="false" />。</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>