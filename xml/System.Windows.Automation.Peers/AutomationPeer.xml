<Type Name="AutomationPeer" FullName="System.Windows.Automation.Peers.AutomationPeer">
  <TypeSignature Language="C#" Value="public abstract class AutomationPeer : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract AutomationPeer extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Peers.AutomationPeer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AutomationPeer&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationPeer abstract : System::Windows::Threading::DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="74d81-101">提供一个可将元素公开给 UI 自动化的基类。</span><span class="sxs-lookup"><span data-stu-id="74d81-101">Provides a base class that exposes an element to UI Automation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-102">当[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]查询的根节点[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]有关元素的应用程序，根返回[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]该元素的对等。</span><span class="sxs-lookup"><span data-stu-id="74d81-102">When [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] queries the root of a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] application about an element, the root returns the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] peer for that element.</span></span> <span data-ttu-id="74d81-103">对等方还响应[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]查询有关它的相应元素。</span><span class="sxs-lookup"><span data-stu-id="74d81-103">The peer also responds to [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] queries about its corresponding element.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AutomationPeer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-104">在由派生类的构造函数调用时，它们可对基类值进行初始化。</span><span class="sxs-lookup"><span data-stu-id="74d81-104">Provides initialization for base class values when they are called by the constructor of a derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventsSource">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Peers.AutomationPeer EventsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Peers.AutomationPeer EventsSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource" />
      <MemberSignature Language="VB.NET" Value="Public Property EventsSource As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Peers::AutomationPeer ^ EventsSource { System::Windows::Automation::Peers::AutomationPeer ^ get(); void set(System::Windows::Automation::Peers::AutomationPeer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74d81-105">获取或设置一个 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />，它作为来自此 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 的所有事件的源报告给自动化客户端。</span><span class="sxs-lookup"><span data-stu-id="74d81-105">Gets or sets an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> that is reported to the automation client as a source for all the events that come from this <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></summary>
        <value><span data-ttu-id="74d81-106">作为事件源的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-106">The <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> that is the source of events.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAcceleratorKey">
      <MemberSignature Language="C#" Value="public string GetAcceleratorKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAcceleratorKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAcceleratorKey () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAcceleratorKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-107">获取与 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 对等方关联的元素的加速键组合。</span><span class="sxs-lookup"><span data-stu-id="74d81-107">Gets the accelerator key combinations for the element that is associated with the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] peer.</span></span></summary>
        <returns><span data-ttu-id="74d81-108">加速键。</span><span class="sxs-lookup"><span data-stu-id="74d81-108">The accelerator key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAcceleratorKeyCore">
      <MemberSignature Language="C#" Value="protected abstract string GetAcceleratorKeyCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAcceleratorKeyCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetAcceleratorKeyCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetAcceleratorKeyCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-109">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-109">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-110">加速键。</span><span class="sxs-lookup"><span data-stu-id="74d81-110">The accelerator key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-111">如果应用程序对键盘事件来提供快捷键行为做出响应，则应返回包含的键盘快捷方式组合的字符串。</span><span class="sxs-lookup"><span data-stu-id="74d81-111">If an application responds to keyboard events to provide shortcut key behavior, it should return a string that contains the keyboard shortcut combination.</span></span> <span data-ttu-id="74d81-112">例如，此附加的属性可以将文本复制到剪贴板的元素，它可能设置为值"CTRL + C"。</span><span class="sxs-lookup"><span data-stu-id="74d81-112">For example, for an element that can copy text to the clipboard, this attached property might be set to the value "CTRL+C".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessKey">
      <MemberSignature Language="C#" Value="public string GetAccessKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAccessKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessKey () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAccessKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-113">获取与自动化对等关联的元素的访问密钥。</span><span class="sxs-lookup"><span data-stu-id="74d81-113">Gets the access key for the element that is associated with the automation peer.</span></span></summary>
        <returns><span data-ttu-id="74d81-114">包含访问密钥的字符串。</span><span class="sxs-lookup"><span data-stu-id="74d81-114">The string that contains the access key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessKeyCore">
      <MemberSignature Language="C#" Value="protected abstract string GetAccessKeyCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAccessKeyCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKeyCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetAccessKeyCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetAccessKeyCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-115">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-115">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-116">包含访问密钥的字符串。</span><span class="sxs-lookup"><span data-stu-id="74d81-116">The string that contains the access key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-117">访问键 （有时称为的键盘快捷方式或助记键） 是中的菜单、 菜单项或如调用关联的菜单函数的按钮控件标签的文本的字符。</span><span class="sxs-lookup"><span data-stu-id="74d81-117">An access key (sometimes referred to as a keyboard shortcut or mnemonic) is a character in the text of a menu, menu item, or label of a control such as a button that invokes the associated menu function.</span></span> <span data-ttu-id="74d81-118">例如，若要提供快捷方式来打开`File`菜单 （对于访问密钥通常是 F），元素可能已将此附加的属性设置为"ALT + F"。</span><span class="sxs-lookup"><span data-stu-id="74d81-118">For example, to provide a shortcut way to open the `File` menu (for which the access key is typically F), an element might have this attached property set to "ALT+F".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationControlType">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Peers.AutomationControlType GetAutomationControlType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Automation.Peers.AutomationControlType GetAutomationControlType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAutomationControlType () As AutomationControlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Peers::AutomationControlType GetAutomationControlType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationControlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-119">获取与此对等 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 关联的元素的控件类型。</span><span class="sxs-lookup"><span data-stu-id="74d81-119">Gets the control type for the element that is associated with the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] peer.</span></span></summary>
        <returns><span data-ttu-id="74d81-120">控件类型。</span><span class="sxs-lookup"><span data-stu-id="74d81-120">The control type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationControlTypeCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlTypeCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetAutomationControlTypeCore () As AutomationControlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Automation::Peers::AutomationControlType GetAutomationControlTypeCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationControlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-121">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-121">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-122">控件类型。</span><span class="sxs-lookup"><span data-stu-id="74d81-122">The control type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationId">
      <MemberSignature Language="C#" Value="public string GetAutomationId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAutomationId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAutomationId () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAutomationId();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-123">获取与自动化同级关联的元素的 <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-123">Gets the <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /> of the element that is associated with the automation peer.</span></span></summary>
        <returns><span data-ttu-id="74d81-124">标识符。</span><span class="sxs-lookup"><span data-stu-id="74d81-124">The identifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-125">自动化标识符的值是<xref:System.Windows.Automation.AutomationProperties.AutomationId%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="74d81-125">The value of the automation identifier is the <xref:System.Windows.Automation.AutomationProperties.AutomationId%2A> property.</span></span> <span data-ttu-id="74d81-126">如果未设置该属性，则值是<xref:System.Windows.FrameworkElement.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="74d81-126">If that property is not set, the value is the <xref:System.Windows.FrameworkElement.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationIdentifier" />
      </Docs>
    </Member>
    <Member MemberName="GetAutomationIdCore">
      <MemberSignature Language="C#" Value="protected abstract string GetAutomationIdCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetAutomationIdCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationIdCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetAutomationIdCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetAutomationIdCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-127">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-127">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-128">包含标识符的字符串。</span><span class="sxs-lookup"><span data-stu-id="74d81-128">The string that contains the identifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-129">自动化标识符的值是<xref:System.Windows.Automation.AutomationProperties.AutomationId%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="74d81-129">The value of the automation identifier is the <xref:System.Windows.Automation.AutomationProperties.AutomationId%2A> property.</span></span> <span data-ttu-id="74d81-130">如果未设置该属性，则值是<xref:System.Windows.FrameworkElement.Name%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="74d81-130">If that property is not set, the value is the <xref:System.Windows.FrameworkElement.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetBoundingRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetBoundingRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoundingRectangle () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetBoundingRectangle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-131">获取表示与自动化同级关联的元素的屏幕坐标的 <see cref="T:System.Windows.Rect" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="74d81-131">Gets the <see cref="T:System.Windows.Rect" /> object that represents the screen coordinates of the element that is associated with the automation peer.</span></span></summary>
        <returns><span data-ttu-id="74d81-132">绑定矩形。</span><span class="sxs-lookup"><span data-stu-id="74d81-132">The bounding rectangle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingRectangleCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Rect GetBoundingRectangleCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Rect GetBoundingRectangleCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangleCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetBoundingRectangleCore () As Rect" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Rect GetBoundingRectangleCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-133">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-133">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-134">绑定矩形。</span><span class="sxs-lookup"><span data-stu-id="74d81-134">The bounding rectangle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt; GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Windows.Automation.Peers.AutomationPeer&gt; GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As List(Of AutomationPeer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Windows::Automation::Peers::AutomationPeer ^&gt; ^ GetChildren();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-135">获取在 UI 自动化树中表示为自动化对等方的直接子元素的 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 元素的集合。</span><span class="sxs-lookup"><span data-stu-id="74d81-135">Gets the collection of <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> elements that are represented in the UI Automation tree as immediate child elements of the automation peer.</span></span></summary>
        <returns><span data-ttu-id="74d81-136">子元素的集合。</span><span class="sxs-lookup"><span data-stu-id="74d81-136">The collection of child elements.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenCore">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt; GetChildrenCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.List`1&lt;class System.Windows.Automation.Peers.AutomationPeer&gt; GetChildrenCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetChildrenCore () As List(Of AutomationPeer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::List&lt;System::Windows::Automation::Peers::AutomationPeer ^&gt; ^ GetChildrenCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Windows.Automation.Peers.AutomationPeer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-137">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-137">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-138">子元素的集合。</span><span class="sxs-lookup"><span data-stu-id="74d81-138">The collection of child elements.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public string GetClassName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetClassName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClassName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetClassName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-139">获取与 <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> 一起使用的名称，以区分由此 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 表示的控件。</span><span class="sxs-lookup"><span data-stu-id="74d81-139">Gets a name that is used with <see cref="T:System.Windows.Automation.Peers.AutomationControlType" />, to differentiate the control that is represented by this <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-140">类名。</span><span class="sxs-lookup"><span data-stu-id="74d81-140">The class name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassNameCore">
      <MemberSignature Language="C#" Value="protected abstract string GetClassNameCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetClassNameCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetClassNameCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetClassNameCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetClassNameCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-141">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-141">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-142">类名。</span><span class="sxs-lookup"><span data-stu-id="74d81-142">The class name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClickablePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetClickablePoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetClickablePoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClickablePoint () As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetClickablePoint();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-143">获取与自动化同级相关联的元素上响应鼠标单击的 <see cref="T:System.Windows.Point" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-143">Gets a <see cref="T:System.Windows.Point" /> on the element that is associated with the automation peer that responds to a mouse click.</span></span></summary>
        <returns><span data-ttu-id="74d81-144">元素的可单击区域中的点。</span><span class="sxs-lookup"><span data-stu-id="74d81-144">A point in the clickable area of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-145">例如，如果该元素表示<xref:System.Windows.Controls.Button>，可单击的点是可见的工作区中的任何点<xref:System.Windows.Controls.Button>，则发出按钮代表用鼠标单击时该命令。</span><span class="sxs-lookup"><span data-stu-id="74d81-145">For example, if the element represents a <xref:System.Windows.Controls.Button>, a clickable point is any point in the visible client area of the <xref:System.Windows.Controls.Button> that issues the command that the button represents when it is clicked by the mouse.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClickablePointCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Point GetClickablePointCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Point GetClickablePointCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePointCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetClickablePointCore () As Point" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Point GetClickablePointCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-146">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-146">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-147">元素的可单击区域中的点。</span><span class="sxs-lookup"><span data-stu-id="74d81-147">A point within the clickable area of the element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHelpText">
      <MemberSignature Language="C#" Value="public string GetHelpText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetHelpText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHelpText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetHelpText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-148">获取描述与自动化同级关联的控件的功能的文本。</span><span class="sxs-lookup"><span data-stu-id="74d81-148">Gets text that describes the functionality of the control that is associated with the automation peer.</span></span></summary>
        <returns><span data-ttu-id="74d81-149">帮助文本。</span><span class="sxs-lookup"><span data-stu-id="74d81-149">The help text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-150">返回的字符串通常提供相同的文本提供的工具提示控件。</span><span class="sxs-lookup"><span data-stu-id="74d81-150">The returned string typically provides the same text that is provided by the tooltip for the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHelpTextCore">
      <MemberSignature Language="C#" Value="protected abstract string GetHelpTextCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetHelpTextCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpTextCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetHelpTextCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetHelpTextCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-151">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-151">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-152">帮助文本。</span><span class="sxs-lookup"><span data-stu-id="74d81-152">The help text.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostRawElementProviderCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.HostedWindowWrapper GetHostRawElementProviderCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.HostedWindowWrapper GetHostRawElementProviderCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetHostRawElementProviderCore () As HostedWindowWrapper" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::HostedWindowWrapper ^ GetHostRawElementProviderCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.HostedWindowWrapper</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-153">告知 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 在 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 树中何处放置由 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 元素托管的 <see langword="hwnd" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-153">Tells [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] where in the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree to place the <see langword="hwnd" /> being hosted by a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] element.</span></span></summary>
        <returns><span data-ttu-id="74d81-154">此方法会将托管的 <see langword="hwnd" /> 返回到托管 <see langword="hwnd" /> 对象的控件的 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="74d81-154">This method returns the hosted <see langword="hwnd" /> to [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] for controls that host <see langword="hwnd" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-155">此方法会将托管的 `hwnd` 返回到托管 `hwnd` 对象的控件的 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="74d81-155">This method returns the hosted `hwnd` to [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] for controls that host `hwnd` objects.</span></span>  
  
 <span data-ttu-id="74d81-156"><xref:System.Windows.Automation.Peers.AutomationPeer>直接承载的元素与该键相关联`hwnd`必须重写此方法。</span><span class="sxs-lookup"><span data-stu-id="74d81-156">The <xref:System.Windows.Automation.Peers.AutomationPeer> that is associated with an element that immediately hosts an `hwnd` must override this method.</span></span>  
  
 <span data-ttu-id="74d81-157">如果此方法不重写，[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]放置`hwnd`作为子元素的<xref:System.Windows.Interop.HwndSource>承载整个应用程序。</span><span class="sxs-lookup"><span data-stu-id="74d81-157">If this method is not overridden, [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] places the `hwnd` as a child element of the <xref:System.Windows.Interop.HwndSource> that hosts the whole application.</span></span> <span data-ttu-id="74d81-158">通常情况下，你想要覆盖此默认行为，并设置[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]位置将托管`hwnd`并行到位于其中的位置[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]逻辑树。</span><span class="sxs-lookup"><span data-stu-id="74d81-158">Typically, you want to override this default behavior and set [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] to position the hosted `hwnd` parallel to the place where it is located in the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] logical tree.</span></span>  
  
 <span data-ttu-id="74d81-159">除非在宿主方案，否则不允许<xref:System.Windows.Automation.Peers.AutomationPeer>类型重写此方法。</span><span class="sxs-lookup"><span data-stu-id="74d81-159">Except in hosting scenarios, do not allow <xref:System.Windows.Automation.Peers.AutomationPeer> types to override this method.</span></span>  
  
 <span data-ttu-id="74d81-160">重写此方法，除了<xref:System.Windows.Automation.Peers.AutomationPeer>直接承载的元素与关联的类型`hwnd`必须返回<xref:System.Windows.Automation.Peers.AutomationPeer>，被强制转换为<xref:System.Windows.Automation.Provider.IRawElementProviderSimple>以响应托管WM_GETOBJECT`hwnd`.</span><span class="sxs-lookup"><span data-stu-id="74d81-160">In addition to overriding this method, the <xref:System.Windows.Automation.Peers.AutomationPeer> types that are associated with an element that immediately hosts an `hwnd` must return the <xref:System.Windows.Automation.Peers.AutomationPeer> that is cast to <xref:System.Windows.Automation.Provider.IRawElementProviderSimple> in response to WM_GETOBJECT coming to the hosted `hwnd`.</span></span>  
  
 <span data-ttu-id="74d81-161">若要获取指向的指针<xref:System.Windows.Automation.Provider.IRawElementProviderSimple>，调用<xref:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle%2A>。</span><span class="sxs-lookup"><span data-stu-id="74d81-161">To get a pointer to <xref:System.Windows.Automation.Provider.IRawElementProviderSimple>, call <xref:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemStatus">
      <MemberSignature Language="C#" Value="public string GetItemStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetItemStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemStatus () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetItemStatus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-162">获取可传达与此自动化同级关联的元素的可视状态的文本。</span><span class="sxs-lookup"><span data-stu-id="74d81-162">Gets text that conveys the visual status of the element that is associated with this automation peer.</span></span></summary>
        <returns><span data-ttu-id="74d81-163">状态。</span><span class="sxs-lookup"><span data-stu-id="74d81-163">The status.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-164">例如，messenger 联系人状态可能是"忙碌"或"联机"。</span><span class="sxs-lookup"><span data-stu-id="74d81-164">For example, the status of a messenger contact might be "Busy" or "Online".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemStatusCore">
      <MemberSignature Language="C#" Value="protected abstract string GetItemStatusCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetItemStatusCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatusCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetItemStatusCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetItemStatusCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-165">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-165">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-166">状态。</span><span class="sxs-lookup"><span data-stu-id="74d81-166">The status.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemType">
      <MemberSignature Language="C#" Value="public string GetItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemType () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetItemType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-167">获取一个字符串，它描述对象表示何种类型的项。</span><span class="sxs-lookup"><span data-stu-id="74d81-167">Gets a string that describes what kind of item an object represents.</span></span></summary>
        <returns><span data-ttu-id="74d81-168">项的类型。</span><span class="sxs-lookup"><span data-stu-id="74d81-168">The kind of item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-169">返回字符串的示例包括"邮件"、"联系人"和"文档"。</span><span class="sxs-lookup"><span data-stu-id="74d81-169">Examples of the returned string are "Mail Message", "Contact", and "Document".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemTypeCore">
      <MemberSignature Language="C#" Value="protected abstract string GetItemTypeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetItemTypeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetItemTypeCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetItemTypeCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetItemTypeCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-170">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-170">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-171">项的类型。</span><span class="sxs-lookup"><span data-stu-id="74d81-171">The kind of item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabeledBy">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Peers.AutomationPeer GetLabeledBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.Peers.AutomationPeer GetLabeledBy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLabeledBy () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Peers::AutomationPeer ^ GetLabeledBy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-172">获取以元素为目标的 <see cref="T:System.Windows.Controls.Label" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-172">Gets the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the <see cref="T:System.Windows.Controls.Label" /> that is targeted to the element.</span></span></summary>
        <returns><span data-ttu-id="74d81-173"><see cref="T:System.Windows.Controls.Label" /> 所使用的元素的 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-173">The <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> for the element that is targeted by the <see cref="T:System.Windows.Controls.Label" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-174">例如，如果该元素是<xref:System.Windows.Controls.ComboBox>控件，<xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy%2A>方法获取<xref:System.Windows.Automation.Peers.AutomationPeer>为<xref:System.Windows.Controls.Label>关联<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="74d81-174">For example, if the element is a <xref:System.Windows.Controls.ComboBox> control, the <xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy%2A> method gets the <xref:System.Windows.Automation.Peers.AutomationPeer> for the <xref:System.Windows.Controls.Label> that is associated with the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
 <span data-ttu-id="74d81-175">在下图中， <xref:System.Windows.Controls.Label> "主题"指向<xref:System.Windows.Controls.ComboBox>; 因此<xref:System.Windows.Controls.AccessText.AccessKey%2A>为<xref:System.Windows.Controls.Label>还针对<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="74d81-175">In the following image, the <xref:System.Windows.Controls.Label> "Themes" is targeted to the <xref:System.Windows.Controls.ComboBox>; therefore the <xref:System.Windows.Controls.AccessText.AccessKey%2A> for the <xref:System.Windows.Controls.Label> also targets the <xref:System.Windows.Controls.ComboBox>.</span></span> <span data-ttu-id="74d81-176">当用户按**ALT**+**T**、<xref:System.Windows.Controls.ComboBox>获得焦点而不是<xref:System.Windows.Controls.Label>。</span><span class="sxs-lookup"><span data-stu-id="74d81-176">When the user presses **ALT**+**T**, the <xref:System.Windows.Controls.ComboBox> gets focus instead of the <xref:System.Windows.Controls.Label>.</span></span>  
  
 <span data-ttu-id="74d81-177">![显示属性显示按用法标记](~/add/media/labeledby.JPG "显示属性显示按用法标记")</span><span class="sxs-lookup"><span data-stu-id="74d81-177">![Display properties shows labeled by usage](~/add/media/labeledby.JPG "Display properties shows labeled by usage")</span></span>  
  
 <span data-ttu-id="74d81-178"><xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy%2A>方法<xref:System.Windows.Automation.Peers.ComboBoxAutomationPeer>返回<xref:System.Windows.Automation.Peers.LabelAutomationPeer>相应<xref:System.Windows.Controls.Label>。</span><span class="sxs-lookup"><span data-stu-id="74d81-178">The <xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy%2A> method for <xref:System.Windows.Automation.Peers.ComboBoxAutomationPeer> returns the <xref:System.Windows.Automation.Peers.LabelAutomationPeer> for the corresponding <xref:System.Windows.Controls.Label>.</span></span> <span data-ttu-id="74d81-179">这使自动化客户端以获取文本字符串，用于描述<xref:System.Windows.Controls.ComboBox>。</span><span class="sxs-lookup"><span data-stu-id="74d81-179">This enables an automation client to get the text string that describes the <xref:System.Windows.Controls.ComboBox>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLabeledByCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Automation.Peers.AutomationPeer GetLabeledByCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer GetLabeledByCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledByCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetLabeledByCore () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Automation::Peers::AutomationPeer ^ GetLabeledByCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-180">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-180">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-181"><see cref="T:System.Windows.Controls.Label" /> 所使用的元素的 <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-181">The <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> for the element that is targeted by the <see cref="T:System.Windows.Controls.Label" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLiveSetting">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationLiveSetting GetLiveSetting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Automation.AutomationLiveSetting GetLiveSetting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSetting" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLiveSetting () As AutomationLiveSetting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationLiveSetting GetLiveSetting();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationLiveSetting</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-182">获取与此自动化对等关联的活动区域的通知特征。</span><span class="sxs-lookup"><span data-stu-id="74d81-182">Gets the notification characteristics of a live region that is associated with this automation peer.</span></span></summary>
        <returns><span data-ttu-id="74d81-183">通知特征。</span><span class="sxs-lookup"><span data-stu-id="74d81-183">The notification characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="74d81-184">此方法调用的派生的实现<xref:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore>。</span><span class="sxs-lookup"><span data-stu-id="74d81-184">This method calls the derived implementation of <xref:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore>.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLiveSettingCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.AutomationLiveSetting GetLiveSettingCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Automation.AutomationLiveSetting GetLiveSettingCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetLiveSettingCore () As AutomationLiveSetting" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::AutomationLiveSetting GetLiveSettingCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationLiveSetting</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-185">在派生类中重写时，返回活动区域的通知特征。</span><span class="sxs-lookup"><span data-stu-id="74d81-185">When overridden in a derived class, returns the notification characteristics of a live region.</span></span> <span data-ttu-id="74d81-186">由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSetting" /> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-186">Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSetting" /> method.</span></span></summary>
        <returns><span data-ttu-id="74d81-187">活动区域的通知特征。</span><span class="sxs-lookup"><span data-stu-id="74d81-187">The notification characteristics of a live region.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalizedControlType">
      <MemberSignature Language="C#" Value="public string GetLocalizedControlType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLocalizedControlType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalizedControlType () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLocalizedControlType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-188">获取一个可读的本地化字符串，该字符串表示与此自动化对等方关联的控件的 <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="74d81-188">Gets a human-readable localized string that represents the <see cref="T:System.Windows.Automation.Peers.AutomationControlType" /> value for the control that is associated with this automation peer.</span></span></summary>
        <returns><span data-ttu-id="74d81-189">控件的类型。</span><span class="sxs-lookup"><span data-stu-id="74d81-189">The type of the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalizedControlTypeCore">
      <MemberSignature Language="C#" Value="protected virtual string GetLocalizedControlTypeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetLocalizedControlTypeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlTypeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetLocalizedControlTypeCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetLocalizedControlTypeCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-190">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-190">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-191">控件的类型。</span><span class="sxs-lookup"><span data-stu-id="74d81-191">The type of the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-192">获取描述与此自动化同级关联的元素的文本。</span><span class="sxs-lookup"><span data-stu-id="74d81-192">Gets text that describes the element that is associated with this automation peer.</span></span></summary>
        <returns><span data-ttu-id="74d81-193">名称。</span><span class="sxs-lookup"><span data-stu-id="74d81-193">The name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-194">此方法调用的派生的实现<xref:System.Windows.Automation.Peers.AutomationPeer.GetNameCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="74d81-194">This method calls the derived implementation of <xref:System.Windows.Automation.Peers.AutomationPeer.GetNameCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNameCore">
      <MemberSignature Language="C#" Value="protected abstract string GetNameCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetNameCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetNameCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetNameCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-195">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-195">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-196">包含标签的字符串。</span><span class="sxs-lookup"><span data-stu-id="74d81-196">The string that contains the label.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-197">可以将此值视为用户用来解释它们所引用控件的字符串。</span><span class="sxs-lookup"><span data-stu-id="74d81-197">You can think of this value as a string that users use to explain the control they are referring to.</span></span> <span data-ttu-id="74d81-198">此属性是讲述人等工具用于告知用户控件是什么。</span><span class="sxs-lookup"><span data-stu-id="74d81-198">This property is used by tools such as Narrator to tell the user what the control is.</span></span> <span data-ttu-id="74d81-199">例如，使用字符串"确定"按钮应返回"确定"。</span><span class="sxs-lookup"><span data-stu-id="74d81-199">For example, a button with a string "OK" should return "OK".</span></span> <span data-ttu-id="74d81-200">A<xref:System.Windows.Controls.ListBox>使用户可以选择一种颜色的控件可能会返回"颜色"。</span><span class="sxs-lookup"><span data-stu-id="74d81-200">A <xref:System.Windows.Controls.ListBox> control that lets users select a color might return "Colors".</span></span>  
  
 <span data-ttu-id="74d81-201">请确保你已将名称分配给中的所有控件[!INCLUDE[TLA#tla_gui](~/includes/tlasharptla-gui-md.md)]，以便辅助功能工具，如屏幕阅读器可以指每个控件本地化的方式。</span><span class="sxs-lookup"><span data-stu-id="74d81-201">Make sure that you have assigned a name to all controls in the [!INCLUDE[TLA#tla_gui](~/includes/tlasharptla-gui-md.md)] so that accessibility tools such as screen readers can refer to each control in a localized manner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrientation">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Peers.AutomationOrientation GetOrientation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Automation.Peers.AutomationOrientation GetOrientation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrientation () As AutomationOrientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Peers::AutomationOrientation GetOrientation();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationOrientation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-202">获取指示显式控件方向（如果有）的值。</span><span class="sxs-lookup"><span data-stu-id="74d81-202">Gets a value that indicates the explicit control orientation, if any.</span></span></summary>
        <returns><span data-ttu-id="74d81-203">控件的方向。</span><span class="sxs-lookup"><span data-stu-id="74d81-203">The orientation of the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrientationCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Automation.Peers.AutomationOrientation GetOrientationCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Automation.Peers.AutomationOrientation GetOrientationCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientationCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetOrientationCore () As AutomationOrientation" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Automation::Peers::AutomationOrientation GetOrientationCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationOrientation</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-204">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-204">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-205">控件的方向。</span><span class="sxs-lookup"><span data-stu-id="74d81-205">The orientation of the control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Peers.AutomationPeer GetParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.Peers.AutomationPeer GetParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetParent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Peers::AutomationPeer ^ GetParent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-206">获取作为此 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 的父级的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-206">Gets the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> that is the parent of this <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-207">自动化父级。</span><span class="sxs-lookup"><span data-stu-id="74d81-207">The parent automation peer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPattern">
      <MemberSignature Language="C#" Value="public abstract object GetPattern (System.Windows.Automation.Peers.PatternInterface patternInterface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPattern(valuetype System.Windows.Automation.Peers.PatternInterface patternInterface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetPattern(System::Windows::Automation::Peers::PatternInterface patternInterface);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patternInterface" Type="System.Windows.Automation.Peers.PatternInterface" />
      </Parameters>
      <Docs>
        <param name="patternInterface"><span data-ttu-id="74d81-208"><see cref="T:System.Windows.Automation.Peers.PatternInterface" /> 枚举中的一个值。</span><span class="sxs-lookup"><span data-stu-id="74d81-208">A value from the <see cref="T:System.Windows.Automation.Peers.PatternInterface" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="74d81-209">在派生类中重写时，获取与指定的 <see cref="T:System.Windows.Automation.Peers.PatternInterface" /> 关联的控件模式。</span><span class="sxs-lookup"><span data-stu-id="74d81-209">When overridden in a derived class, gets the control pattern that is associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-210">实现模式接口的对象；如果此同级不支持此接口，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-210">The object that implements the pattern interface; <see langword="null" /> if this peer does not support this interface.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeerFromPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Peers.AutomationPeer GetPeerFromPoint (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.Peers.AutomationPeer GetPeerFromPoint(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Peers::AutomationPeer ^ GetPeerFromPoint(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="74d81-211">在屏幕中获取 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 的位置。</span><span class="sxs-lookup"><span data-stu-id="74d81-211">The position on the screen to get the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> from.</span></span></param>
        <summary><span data-ttu-id="74d81-212">从指定的点获取 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-212">Gets an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> from the specified point.</span></span></summary>
        <returns><span data-ttu-id="74d81-213">位于指定点处的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-213">The <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> at the specified point.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPeerFromPointCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer GetPeerFromPointCore (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer GetPeerFromPointCore(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPointCore(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ GetPeerFromPointCore(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="74d81-214">在屏幕中获取 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 的位置。</span><span class="sxs-lookup"><span data-stu-id="74d81-214">The position on the screen to get the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> from.</span></span></param>
        <summary><span data-ttu-id="74d81-215">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint(System.Windows.Point)" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-215">When overridden in a derived class, is called from <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint(System.Windows.Point)" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-216">位于指定点处的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-216">The <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> at the specified point.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocus">
      <MemberSignature Language="C#" Value="public bool HasKeyboardFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasKeyboardFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Function HasKeyboardFocus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasKeyboardFocus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-217">获取一个值，该值指示与此自动化同级关联的元素当前是否具有键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="74d81-217">Gets a value that indicates whether the element that is associated with this automation peer currently has keyboard focus.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-218">如果此元素具有键盘焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-218"><see langword="true" /> if the element has keyboard focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocusCore">
      <MemberSignature Language="C#" Value="protected abstract bool HasKeyboardFocusCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HasKeyboardFocusCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocusCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function HasKeyboardFocusCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool HasKeyboardFocusCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-219">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-219">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" />.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-220">如果此元素具有键盘焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-220"><see langword="true" /> if the element has keyboard focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidatePeer">
      <MemberSignature Language="C#" Value="public void InvalidatePeer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidatePeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidatePeer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidatePeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-221">触发对 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 主要属性的重新计算，如果属性已更改，则引发对自动化客户端的 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 通知。</span><span class="sxs-lookup"><span data-stu-id="74d81-221">Triggers recalculation of the main properties of the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> and raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> notification to the Automation Client if the properties changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-222">主要属性的示例包括，但不限于，<xref:System.Windows.Controls.ContentControl.LogicalChildren%2A>和<xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A>。</span><span class="sxs-lookup"><span data-stu-id="74d81-222">Examples of main properties include, but are not limited to, <xref:System.Windows.Controls.ContentControl.LogicalChildren%2A> and <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A>.</span></span>  
  
 <span data-ttu-id="74d81-223">通常情况下，更新和通知会自动更新中的布局后[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="74d81-223">Typically, updates and notifications happen automatically after the update of the layout in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span></span> <span data-ttu-id="74d81-224">(在响应中会发生更新<xref:System.Windows.UIElement.LayoutUpdated>事件。)有时，但是，属性更改而不会引发<xref:System.Windows.UIElement.LayoutUpdated>事件。</span><span class="sxs-lookup"><span data-stu-id="74d81-224">(The update occurs in response to the <xref:System.Windows.UIElement.LayoutUpdated> event.) Sometimes, however, properties change without raising the <xref:System.Windows.UIElement.LayoutUpdated> event.</span></span> <span data-ttu-id="74d81-225">例如，当整个<xref:System.Windows.Window>移动时，<xref:System.Windows.UIElement.LayoutUpdated>不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="74d81-225">For example, when the whole <xref:System.Windows.Window> moves, the <xref:System.Windows.UIElement.LayoutUpdated> event is not raised.</span></span> <span data-ttu-id="74d81-226">在此示例中的一套<xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A>对象更改，因为以屏幕坐标表示的对象。</span><span class="sxs-lookup"><span data-stu-id="74d81-226">In this example, the set of <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A> objects change because the objects are expressed in screen coordinates.</span></span> <span data-ttu-id="74d81-227">因此，<xref:System.Windows.Window>必须调用<xref:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer%2A>上的同级<xref:System.Windows.Automation.Peers.WindowAutomationPeer>。</span><span class="sxs-lookup"><span data-stu-id="74d81-227">Therefore, the <xref:System.Windows.Window> must call <xref:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer%2A> on its peer on <xref:System.Windows.Automation.Peers.WindowAutomationPeer>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentElement">
      <MemberSignature Language="C#" Value="public bool IsContentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsContentElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />
      <MemberSignature Language="VB.NET" Value="Public Function IsContentElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsContentElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-228">获取一个值，该值指示与此自动化对等方关联的元素是否包含向用户显示的数据。</span><span class="sxs-lookup"><span data-stu-id="74d81-228">Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-229">如果元素为内容元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-229"><see langword="true" /> if the element is a content element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-230">内容元素包含向用户显示的数据。</span><span class="sxs-lookup"><span data-stu-id="74d81-230">A content element contains data that is presented to the user.</span></span> <span data-ttu-id="74d81-231">内容的一个示例是元素的一个列表框中的项或对话框中的按钮。</span><span class="sxs-lookup"><span data-stu-id="74d81-231">An example of a content element is an item in a list box or a button in a dialog box.</span></span> <span data-ttu-id="74d81-232">通常使用 （这也称为外围元素） 的非内容元素要使用复合控件中的内容。</span><span class="sxs-lookup"><span data-stu-id="74d81-232">You typically use non-content elements (which are also referred to as peripheral elements) to work with the content in a composite control.</span></span> <span data-ttu-id="74d81-233">非内容元素的一个示例是一个下拉列表控件中的按钮。</span><span class="sxs-lookup"><span data-stu-id="74d81-233">An example of a non-content element is the button in a drop-down control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentElementCore">
      <MemberSignature Language="C#" Value="protected abstract bool IsContentElementCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsContentElementCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElementCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function IsContentElementCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool IsContentElementCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-234">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-234">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" />.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-235">如果元素为内容元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-235"><see langword="true" /> if the element is a content element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControlElement">
      <MemberSignature Language="C#" Value="public bool IsControlElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsControlElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />
      <MemberSignature Language="VB.NET" Value="Public Function IsControlElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsControlElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-236">获取一个值，该值指示用户将元素理解为交互元素，还是理解为组成 [!INCLUDE[TLA2#tla_gui](~/includes/tla2sharptla-gui-md.md)] 中控件的逻辑结构的一部分。</span><span class="sxs-lookup"><span data-stu-id="74d81-236">Gets a value that indicates whether the element is understood by the user as interactive or as contributing to the logical structure of the control in the [!INCLUDE[TLA2#tla_gui](~/includes/tla2sharptla-gui-md.md)].</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-237">如果元素为控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-237"><see langword="true" /> if the element is a control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControlElementCore">
      <MemberSignature Language="C#" Value="protected abstract bool IsControlElementCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsControlElementCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElementCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function IsControlElementCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool IsControlElementCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-238">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-238">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" />.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-239">如果元素为控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-239"><see langword="true" /> if the element is a control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEnabled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEnabled();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-240">获取一个值，该值指示与此自动化同级关联的元素是否支持交互。</span><span class="sxs-lookup"><span data-stu-id="74d81-240">Gets a value that indicates whether the element associated with this automation peer supports interaction.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-241">如果元素支持交互，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-241"><see langword="true" /> if the element supports interaction; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected abstract bool IsEnabledCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsEnabledCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function IsEnabledCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool IsEnabledCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-242">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-242">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" />.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-243">如果自动化同级可以接收和发送事件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-243"><see langword="true" /> if the automation peer can receive and send events; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHwndHost">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsHwndHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHwndHost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Peers.AutomationPeer.IsHwndHost" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property IsHwndHost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool IsHwndHost { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74d81-244">获取一个值，该值指示与此 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 关联的元素是否承载 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 中的 <see langword="hwnds" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-244">Gets a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> hosts <see langword="hwnds" /> in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span></span></summary>
        <value>
          <span data-ttu-id="74d81-245">如果与此 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 关联的元素承载 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 中的 <see langword="true" />，则为 <see langword="hwnds" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-245"><see langword="true" /> if the element that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> hosts <see langword="hwnds" /> in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-246">承载的元素的两个示例`hwnds`中[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]是<xref:System.Windows.Forms.Integration.WindowsFormsHost>和<xref:System.Windows.Controls.Primitives.Popup>。</span><span class="sxs-lookup"><span data-stu-id="74d81-246">Two examples of elements that host `hwnds` in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] are <xref:System.Windows.Forms.Integration.WindowsFormsHost> and <xref:System.Windows.Controls.Primitives.Popup>.</span></span>  
  
 <span data-ttu-id="74d81-247">这些对等节点还必须重写<xref:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="74d81-247">These peers must also override <xref:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusable">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsKeyboardFocusable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" />
      <MemberSignature Language="VB.NET" Value="Public Function IsKeyboardFocusable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsKeyboardFocusable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-248">获取一个值，该值指示此元素是否可以接受键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="74d81-248">Gets a value that indicates whether the element can accept keyboard focus.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-249">如果此元素可以接受键盘焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-249"><see langword="true" /> if the element can accept keyboard focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusableCore">
      <MemberSignature Language="C#" Value="protected abstract bool IsKeyboardFocusableCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsKeyboardFocusableCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusableCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function IsKeyboardFocusableCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool IsKeyboardFocusableCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-250">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-250">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" />.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-251">如果此元素可以接受键盘焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-251"><see langword="true" /> if the element can accept keyboard focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreen">
      <MemberSignature Language="C#" Value="public bool IsOffscreen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOffscreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOffscreen () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOffscreen();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-252">获取一个值，该值指示元素是否不在屏幕上。</span><span class="sxs-lookup"><span data-stu-id="74d81-252">Gets a value that indicates whether an element is off the screen.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-253">如果元素不在屏幕上，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-253"><see langword="true" /> if the element is not on the screen; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-254">此属性不指示元素是否可见。</span><span class="sxs-lookup"><span data-stu-id="74d81-254">This property does not indicate whether the element is visible.</span></span> <span data-ttu-id="74d81-255">在某些情况下，元素将显示在屏幕上，但却仍不可见。</span><span class="sxs-lookup"><span data-stu-id="74d81-255">In some circumstances, an element is on the screen but is still not visible.</span></span> <span data-ttu-id="74d81-256">例如，如果该元素已在其他元素遮盖但屏幕上，则它可能不可见。</span><span class="sxs-lookup"><span data-stu-id="74d81-256">For example, if the element is on the screen but obscured by other elements, it might not be visible.</span></span> <span data-ttu-id="74d81-257">在这种情况下，该方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="74d81-257">In this case, the method returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreenCore">
      <MemberSignature Language="C#" Value="protected abstract bool IsOffscreenCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsOffscreenCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreenCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function IsOffscreenCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool IsOffscreenCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-258">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-258">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" />.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-259">如果元素不在屏幕上，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-259"><see langword="true" /> if the element is not on the screen; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsPassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public Function IsPassword () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsPassword();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-260">获取一个值，该值指示元素是否包含敏感内容。</span><span class="sxs-lookup"><span data-stu-id="74d81-260">Gets a value that indicates whether the element contains sensitive content.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-261">如果元素包含密码等敏感内容，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-261"><see langword="true" /> if the element contains sensitive content such as a password; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPasswordCore">
      <MemberSignature Language="C#" Value="protected abstract bool IsPasswordCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsPasswordCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsPasswordCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function IsPasswordCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool IsPasswordCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-262">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-262">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" />.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-263">如果元素包含敏感内容，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-263"><see langword="true" /> if the element contains sensitive content; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForForm">
      <MemberSignature Language="C#" Value="public bool IsRequiredForForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRequiredForForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRequiredForForm () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRequiredForForm();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-264">获取一个值，该值指示是否必须在窗体中完成与此同级关联的元素。</span><span class="sxs-lookup"><span data-stu-id="74d81-264">Gets a value that indicates whether the element that is associated with this peer must be completed on a form.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-265">如果必须完成此元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-265"><see langword="true" /> if the element must be completed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Automation.AutomationProperties.IsRequiredForForm" />
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForFormCore">
      <MemberSignature Language="C#" Value="protected abstract bool IsRequiredForFormCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsRequiredForFormCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForFormCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function IsRequiredForFormCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool IsRequiredForFormCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-266">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-266">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" />.</span></span></summary>
        <returns>
          <span data-ttu-id="74d81-267">如果必须完成此元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-267"><see langword="true" /> if the element is must be completed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenerExists">
      <MemberSignature Language="C#" Value="public static bool ListenerExists (System.Windows.Automation.Peers.AutomationEvents eventId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ListenerExists(valuetype System.Windows.Automation.Peers.AutomationEvents eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ListenerExists (eventId As AutomationEvents) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ListenerExists(System::Windows::Automation::Peers::AutomationEvents eventId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Windows.Automation.Peers.AutomationEvents" />
      </Parameters>
      <Docs>
        <param name="eventId"><span data-ttu-id="74d81-268">枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="74d81-268">One of the enumeration values.</span></span></param>
        <summary><span data-ttu-id="74d81-269">获取一个值，该值指示 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]是否正在侦听指定的事件。</span><span class="sxs-lookup"><span data-stu-id="74d81-269">Gets a value that indicates whether [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] is listening for the specified event.</span></span></summary>
        <returns><span data-ttu-id="74d81-270">指示 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]是否正在侦听事件的 <see langword="boolean" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-270">A <see langword="boolean" /> that indicates whether [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] is listening for the event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-271">通常，你可以调用此方法创建之前<xref:System.Windows.Automation.Peers.AutomationPeer>引发事件。</span><span class="sxs-lookup"><span data-stu-id="74d81-271">Typically, you call this method before creating the <xref:System.Windows.Automation.Peers.AutomationPeer> that raises the event.</span></span> <span data-ttu-id="74d81-272">此方法是，性能度量值，因为如果[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]不侦听事件，它没有意义若要创建的对等方，以引发。</span><span class="sxs-lookup"><span data-stu-id="74d81-272">This method is a performance measure because if [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] does not listen for the event, it does not make sense to create a peer to raise one.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74d81-273">此方法是静态的仅接听如果委托中的指定事件侦听[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]而不是用于特定的元素上的事件。</span><span class="sxs-lookup"><span data-stu-id="74d81-273">This method is static and only answers if a delegate listens for the specified event in [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)], not for an event on a specific element.</span></span> [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]<span data-ttu-id="74d81-274"> 可以创建广播的侦听器;因此的每个元素信息是不相关。</span><span class="sxs-lookup"><span data-stu-id="74d81-274"> can create broadcast listeners; therefore the per-element information is irrelevant.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerFromProvider">
      <MemberSignature Language="C#" Value="protected System.Windows.Automation.Peers.AutomationPeer PeerFromProvider (System.Windows.Automation.Provider.IRawElementProviderSimple provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Automation.Peers.AutomationPeer PeerFromProvider(class System.Windows.Automation.Provider.IRawElementProviderSimple provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.PeerFromProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)" />
      <MemberSignature Language="VB.NET" Value="Protected Function PeerFromProvider (provider As IRawElementProviderSimple) As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Automation::Peers::AutomationPeer ^ PeerFromProvider(System::Windows::Automation::Provider::IRawElementProviderSimple ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="74d81-275">可实现 <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> 的类。</span><span class="sxs-lookup"><span data-stu-id="74d81-275">The class that implements <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" />.</span></span></param>
        <summary><span data-ttu-id="74d81-276">获取指定的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 代理的 <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-276">Gets an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the specified <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> proxy.</span></span></summary>
        <returns><span data-ttu-id="74d81-277">指定的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 代理的 <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-277">An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for the specified <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> proxy.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderFromPeer">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Automation.Provider.IRawElementProviderSimple ProviderFromPeer (System.Windows.Automation.Peers.AutomationPeer peer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Windows.Automation.Provider.IRawElementProviderSimple ProviderFromPeer(class System.Windows.Automation.Peers.AutomationPeer peer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.ProviderFromPeer(System.Windows.Automation.Peers.AutomationPeer)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function ProviderFromPeer (peer As AutomationPeer) As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::Automation::Provider::IRawElementProviderSimple ^ ProviderFromPeer(System::Windows::Automation::Peers::AutomationPeer ^ peer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peer" Type="System.Windows.Automation.Peers.AutomationPeer" />
      </Parameters>
      <Docs>
        <param name="peer"><span data-ttu-id="74d81-278">自动化同级。</span><span class="sxs-lookup"><span data-stu-id="74d81-278">The automation peer.</span></span></param>
        <summary><span data-ttu-id="74d81-279">获取指定的 <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> 的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</span><span class="sxs-lookup"><span data-stu-id="74d81-279">Gets the <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> for the specified <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></summary>
        <returns><span data-ttu-id="74d81-280">代理。</span><span class="sxs-lookup"><span data-stu-id="74d81-280">The proxy.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseAsyncContentLoadedEvent">
      <MemberSignature Language="C#" Value="public void RaiseAsyncContentLoadedEvent (System.Windows.Automation.AsyncContentLoadedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseAsyncContentLoadedEvent(class System.Windows.Automation.AsyncContentLoadedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAsyncContentLoadedEvent(System.Windows.Automation.AsyncContentLoadedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseAsyncContentLoadedEvent (args As AsyncContentLoadedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseAsyncContentLoadedEvent(System::Windows::Automation::AsyncContentLoadedEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Automation.AsyncContentLoadedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="74d81-281">事件数据。</span><span class="sxs-lookup"><span data-stu-id="74d81-281">The event data.</span></span></param>
        <summary><span data-ttu-id="74d81-282">由 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 调用以引发 <see cref="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="74d81-282">Called by the <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> to raise the <see cref="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationEvent">
      <MemberSignature Language="C#" Value="public void RaiseAutomationEvent (System.Windows.Automation.Peers.AutomationEvents eventId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseAutomationEvent(valuetype System.Windows.Automation.Peers.AutomationEvents eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAutomationEvent(System.Windows.Automation.Peers.AutomationEvents)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseAutomationEvent (eventId As AutomationEvents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseAutomationEvent(System::Windows::Automation::Peers::AutomationEvents eventId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Windows.Automation.Peers.AutomationEvents" />
      </Parameters>
      <Docs>
        <param name="eventId"><span data-ttu-id="74d81-283">事件标识符。</span><span class="sxs-lookup"><span data-stu-id="74d81-283">The event identifier.</span></span></param>
        <summary><span data-ttu-id="74d81-284">引发自动化事件。</span><span class="sxs-lookup"><span data-stu-id="74d81-284">Raises an automation event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChangedEvent">
      <MemberSignature Language="C#" Value="public void RaisePropertyChangedEvent (System.Windows.Automation.AutomationProperty property, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaisePropertyChangedEvent(class System.Windows.Automation.AutomationProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(System.Windows.Automation.AutomationProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaisePropertyChangedEvent (property As AutomationProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaisePropertyChangedEvent(System::Windows::Automation::AutomationProperty ^ property, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="74d81-285">已更改的属性。</span><span class="sxs-lookup"><span data-stu-id="74d81-285">The property that changed.</span></span></param>
        <param name="oldValue"><span data-ttu-id="74d81-286">属性的上一个值。</span><span class="sxs-lookup"><span data-stu-id="74d81-286">The previous value of the property.</span></span></param>
        <param name="newValue"><span data-ttu-id="74d81-287">属性的新值。</span><span class="sxs-lookup"><span data-stu-id="74d81-287">The new value of the property.</span></span></param>
        <summary><span data-ttu-id="74d81-288">引发事件以通知自动化客户端已更改的属性值。</span><span class="sxs-lookup"><span data-stu-id="74d81-288">Raises an event to notify the automation client of a changed property value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetChildrenCache">
      <MemberSignature Language="C#" Value="public void ResetChildrenCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetChildrenCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.ResetChildrenCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetChildrenCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetChildrenCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-289">通过调用 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore" /> 同步重置子元素的树。</span><span class="sxs-lookup"><span data-stu-id="74d81-289">Synchronously resets the tree of child elements by calling <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d81-290">在某些更改的控件模式接口的调用的响应中的子元素集的对等实现中使用此方法。</span><span class="sxs-lookup"><span data-stu-id="74d81-290">Use this method in certain peer implementations that change the set of child elements in response to a call to a control pattern interface.</span></span> <span data-ttu-id="74d81-291">一个示例是<xref:System.Windows.Automation.Provider.ITextProvider>，这可以通过移动更改对等节点的子元素<xref:System.Windows.Documents.TextRange>。</span><span class="sxs-lookup"><span data-stu-id="74d81-291">An example is <xref:System.Windows.Automation.Provider.ITextProvider>, which can change the child elements of the peer by moving the <xref:System.Windows.Documents.TextRange>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-292">对与此自动化同级关联的元素设置键盘焦点。</span><span class="sxs-lookup"><span data-stu-id="74d81-292">Sets the keyboard focus on the element that is associated with this automation peer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusCore">
      <MemberSignature Language="C#" Value="protected abstract void SetFocusCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetFocusCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Peers.AutomationPeer.SetFocusCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetFocusCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetFocusCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74d81-293">当在派生类中重写时，将由 <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" /> 调用。</span><span class="sxs-lookup"><span data-stu-id="74d81-293">When overridden in a derived class, is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>