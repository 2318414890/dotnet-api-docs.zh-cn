<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AutomationPeer.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54010b40cec462a00ecf4ff708ba7fdd2d76a04c1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4010b40cec462a00ecf4ff708ba7fdd2d76a04c1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.Peers.AutomationPeer">
          <source>Provides a base class that exposes an element to UI Automation.</source>
          <target state="translated">提供一个可将元素公开给 UI 自动化的基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Peers.AutomationPeer">
          <source>When <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> queries the root of a <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> application about an element, the root returns the <ph id="ph3">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> peer for that element.</source>
          <target state="translated">当<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>查询的根节点<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>有关元素的应用程序，根返回<ph id="ph3">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>该元素的对等。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Peers.AutomationPeer">
          <source>The peer also responds to <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> queries about its corresponding element.</source>
          <target state="translated">对等方还响应<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>查询有关它的相应元素。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.#ctor">
          <source>Provides initialization for base class values when they are called by the constructor of a derived class.</source>
          <target state="translated">在由派生类的构造函数调用时，它们可对基类值进行初始化。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> that is reported to the automation client as a source for all the events that come from this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>.</source>
          <target state="translated">获取或设置一个 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>，它作为来自此 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 的所有事件的源报告给自动化客户端。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> that is the source of events.</source>
          <target state="translated">作为事件源的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey">
          <source>Gets the accelerator key combinations for the element that is associated with the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> peer.</source>
          <target state="translated">获取与 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 对等方关联的元素的加速键组合。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey">
          <source>The accelerator key.</source>
          <target state="translated">加速键。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore">
          <source>The accelerator key.</source>
          <target state="translated">加速键。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore">
          <source>If an application responds to keyboard events to provide shortcut key behavior, it should return a string that contains the keyboard shortcut combination.</source>
          <target state="translated">如果应用程序对键盘事件来提供快捷键行为做出响应，则应返回包含的键盘快捷方式组合的字符串。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKeyCore">
          <source>For example, for an element that can copy text to the clipboard, this attached property might be set to the value "CTRL+C".</source>
          <target state="translated">例如，此附加的属性可以将文本复制到剪贴板的元素，它可能设置为值"CTRL + C"。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey">
          <source>Gets the access key for the element that is associated with the automation peer.</source>
          <target state="translated">获取与自动化对等关联的元素的访问密钥。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey">
          <source>The string that contains the access key.</source>
          <target state="translated">包含访问密钥的字符串。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKeyCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKeyCore">
          <source>The string that contains the access key.</source>
          <target state="translated">包含访问密钥的字符串。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKeyCore">
          <source>An access key (sometimes referred to as a keyboard shortcut or mnemonic) is a character in the text of a menu, menu item, or label of a control such as a button that invokes the associated menu function.</source>
          <target state="translated">访问键 （有时称为的键盘快捷方式或助记键） 是中的菜单、 菜单项或如调用关联的菜单函数的按钮控件标签的文本的字符。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKeyCore">
          <source>For example, to provide a shortcut way to open the <ph id="ph1">`File`</ph> menu (for which the access key is typically F), an element might have this attached property set to "ALT+F".</source>
          <target state="translated">例如，若要提供快捷方式来打开<ph id="ph1">`File`</ph>菜单 （对于访问密钥通常是 F），元素可能已将此附加的属性设置为"ALT + F"。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType">
          <source>Gets the control type for the element that is associated with the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> peer.</source>
          <target state="translated">获取与此对等 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 关联的元素的控件类型。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType">
          <source>The control type.</source>
          <target state="translated">控件类型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlTypeCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlTypeCore">
          <source>The control type.</source>
          <target state="translated">控件类型。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /&gt;</ph> of the element that is associated with the automation peer.</source>
          <target state="translated">获取与自动化同级关联的元素的 <ph id="ph1">&lt;see cref="P:System.Windows.Automation.AutomationProperties.AutomationId" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId">
          <source>The identifier.</source>
          <target state="translated">标识符。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId">
          <source>The value of the automation identifier is the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;</ph> property.</source>
          <target state="translated">自动化标识符的值是<ph id="ph1">&lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId">
          <source>If that property is not set, the value is the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> property.</source>
          <target state="translated">如果未设置该属性，则值是<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationIdCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationIdCore">
          <source>The string that contains the identifier.</source>
          <target state="translated">包含标识符的字符串。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationIdCore">
          <source>The value of the automation identifier is the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;</ph> property.</source>
          <target state="translated">自动化标识符的值是<ph id="ph1">&lt;xref:System.Windows.Automation.AutomationProperties.AutomationId%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationIdCore">
          <source>If that property is not set, the value is the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> property.</source>
          <target state="translated">如果未设置该属性，则值是<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> object that represents the screen coordinates of the element that is associated with the automation peer.</source>
          <target state="translated">获取表示与自动化同级关联的元素的屏幕坐标的 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle">
          <source>The bounding rectangle.</source>
          <target state="translated">绑定矩形。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangleCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangleCore">
          <source>The bounding rectangle.</source>
          <target state="translated">绑定矩形。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren">
          <source>Gets the collection of <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /&gt;</ph> elements that are represented in the UI Automation tree as immediate child elements of the automation peer.</source>
          <target state="translated">获取在 UI 自动化树中表示为自动化对等方的直接子元素的 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /&gt;</ph> 元素的集合。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren">
          <source>The collection of child elements.</source>
          <target state="translated">子元素的集合。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore">
          <source>The collection of child elements.</source>
          <target state="translated">子元素的集合。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName">
          <source>Gets a name that is used with <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationControlType" /&gt;</ph>, to differentiate the control that is represented by this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>.</source>
          <target state="translated">获取与 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationControlType" /&gt;</ph> 一起使用的名称，以区分由此 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 表示的控件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName">
          <source>The class name.</source>
          <target state="translated">类名。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClassNameCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClassNameCore">
          <source>The class name.</source>
          <target state="translated">类名。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> on the element that is associated with the automation peer that responds to a mouse click.</source>
          <target state="translated">获取与自动化同级相关联的元素上响应鼠标单击的 <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint">
          <source>A point in the clickable area of the element.</source>
          <target state="translated">元素的可单击区域中的点。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint">
          <source>For example, if the element represents a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>, a clickable point is any point in the visible client area of the <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> that issues the command that the button represents when it is clicked by the mouse.</source>
          <target state="translated">例如，如果该元素表示<ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph>，可单击的点是可见的工作区中的任何点<ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>，则发出按钮代表用鼠标单击时该命令。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePointCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePointCore">
          <source>A point within the clickable area of the element.</source>
          <target state="translated">元素的可单击区域中的点。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText">
          <source>Gets text that describes the functionality of the control that is associated with the automation peer.</source>
          <target state="translated">获取描述与自动化同级关联的控件的功能的文本。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText">
          <source>The help text.</source>
          <target state="translated">帮助文本。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText">
          <source>The returned string typically provides the same text that is provided by the tooltip for the control.</source>
          <target state="translated">返回的字符串通常提供相同的文本提供的工具提示控件。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpTextCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpTextCore">
          <source>The help text.</source>
          <target state="translated">帮助文本。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>Tells <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> where in the <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> tree to place the <ph id="ph3">&lt;see langword="hwnd" /&gt;</ph> being hosted by a <ph id="ph4">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> element.</source>
          <target state="translated">告知 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 在 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 树中何处放置由 <ph id="ph4">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> 元素托管的 <ph id="ph3">&lt;see langword="hwnd" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>This method returns the hosted <ph id="ph1">&lt;see langword="hwnd" /&gt;</ph> to <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> for controls that host <ph id="ph3">&lt;see langword="hwnd" /&gt;</ph> objects.</source>
          <target state="translated">此方法会将托管的 <ph id="ph1">&lt;see langword="hwnd" /&gt;</ph> 返回到托管 <ph id="ph3">&lt;see langword="hwnd" /&gt;</ph> 对象的控件的 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>This method returns the hosted <ph id="ph1">`hwnd`</ph> to <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> for controls that host <ph id="ph3">`hwnd`</ph> objects.</source>
          <target state="translated">此方法会将托管的 <ph id="ph1">`hwnd`</ph> 返回到托管 <ph id="ph3">`hwnd`</ph> 对象的控件的 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> that is associated with an element that immediately hosts an <ph id="ph2">`hwnd`</ph> must override this method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph>直接承载的元素与该键相关联<ph id="ph2">`hwnd`</ph>必须重写此方法。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>If this method is not overridden, <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> places the <ph id="ph2">`hwnd`</ph> as a child element of the <ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> that hosts the whole application.</source>
          <target state="translated">如果此方法不重写，<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>放置<ph id="ph2">`hwnd`</ph>作为子元素的<ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>承载整个应用程序。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>Typically, you want to override this default behavior and set <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> to position the hosted <ph id="ph2">`hwnd`</ph> parallel to the place where it is located in the <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> logical tree.</source>
          <target state="translated">通常情况下，你想要覆盖此默认行为，并设置<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>位置将托管<ph id="ph2">`hwnd`</ph>并行到位于其中的位置<ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>逻辑树。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>Except in hosting scenarios, do not allow <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> types to override this method.</source>
          <target state="translated">除非在宿主方案，否则不允许<ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph>类型重写此方法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>In addition to overriding this method, the <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> types that are associated with an element that immediately hosts an <ph id="ph2">`hwnd`</ph> must return the <ph id="ph3">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> that is cast to <ph id="ph4">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;</ph> in response to WM_GETOBJECT coming to the hosted <ph id="ph5">`hwnd`</ph>.</source>
          <target state="translated">重写此方法，除了<ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph>直接承载的元素与关联的类型<ph id="ph2">`hwnd`</ph>必须返回<ph id="ph3">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph>，被强制转换为<ph id="ph4">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;</ph>以响应托管WM_GETOBJECT<ph id="ph5">`hwnd`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
          <source>To get a pointer to <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;</ph>, call <ph id="ph2">&lt;xref:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle%2A&gt;</ph>.</source>
          <target state="translated">若要获取指向的指针<ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderSimple&gt;</ph>，调用<ph id="ph2">&lt;xref:System.Windows.Automation.Provider.AutomationInteropProvider.HostProviderFromHandle%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus">
          <source>Gets text that conveys the visual status of the element that is associated with this automation peer.</source>
          <target state="translated">获取可传达与此自动化同级关联的元素的可视状态的文本。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus">
          <source>The status.</source>
          <target state="translated">状态。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus">
          <source>For example, the status of a messenger contact might be "Busy" or "Online".</source>
          <target state="translated">例如，messenger 联系人状态可能是"忙碌"或"联机"。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatusCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatusCore">
          <source>The status.</source>
          <target state="translated">状态。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType">
          <source>Gets a string that describes what kind of item an object represents.</source>
          <target state="translated">获取一个字符串，它描述对象表示何种类型的项。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType">
          <source>The kind of item.</source>
          <target state="translated">项的类型。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType">
          <source>Examples of the returned string are "Mail Message", "Contact", and "Document".</source>
          <target state="translated">返回字符串的示例包括"邮件"、"联系人"和"文档"。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemTypeCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetItemTypeCore">
          <source>The kind of item.</source>
          <target state="translated">项的类型。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph> that is targeted to the element.</source>
          <target state="translated">获取以元素为目标的 <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /&gt;</ph> for the element that is targeted by the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph> 所使用的元素的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>For example, if the element is a <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy%2A&gt;</ph> method gets the <ph id="ph3">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> for the <ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph> that is associated with the <ph id="ph5">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>.</source>
          <target state="translated">例如，如果该元素是<ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>控件，<ph id="ph2">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy%2A&gt;</ph>方法获取<ph id="ph3">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph>为<ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph>关联<ph id="ph5">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>In the following image, the <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> "Themes" is targeted to the <ph id="ph2">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>; therefore the <ph id="ph3">&lt;xref:System.Windows.Controls.AccessText.AccessKey%2A&gt;</ph> for the <ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph> also targets the <ph id="ph5">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>.</source>
          <target state="translated">在下图中， <ph id="ph1">&lt;xref:System.Windows.Controls.Label&gt;</ph> "主题"指向<ph id="ph2">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>; 因此<ph id="ph3">&lt;xref:System.Windows.Controls.AccessText.AccessKey%2A&gt;</ph>为<ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph>还针对<ph id="ph5">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>When the user presses <bpt id="p1">**</bpt>ALT<ept id="p1">**</ept><ph id="ph1">+</ph><bpt id="p2">**</bpt>T<ept id="p2">**</ept>, the <ph id="ph2">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph> gets focus instead of the <ph id="ph3">&lt;xref:System.Windows.Controls.Label&gt;</ph>.</source>
          <target state="translated">当用户按<bpt id="p1">**</bpt>ALT<ept id="p1">**</ept><ph id="ph1">+</ph><bpt id="p2">**</bpt>T<ept id="p2">**</ept>、<ph id="ph2">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>获得焦点而不是<ph id="ph3">&lt;xref:System.Windows.Controls.Label&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source><bpt id="p1">![</bpt>Display properties shows labeled by usage<ept id="p1">]</ept><bpt id="p2">(~/add/media/labeledby.JPG "</bpt>Display properties shows labeled by usage<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>显示属性显示按用法标记<ept id="p1">]</ept><bpt id="p2">(~/add/media/labeledby.JPG "</bpt>显示属性显示按用法标记<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy%2A&gt;</ph> method for <ph id="ph2">&lt;xref:System.Windows.Automation.Peers.ComboBoxAutomationPeer&gt;</ph> returns the <ph id="ph3">&lt;xref:System.Windows.Automation.Peers.LabelAutomationPeer&gt;</ph> for the corresponding <ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Windows.Automation.Peers.ComboBoxAutomationPeer&gt;</ph>返回<ph id="ph3">&lt;xref:System.Windows.Automation.Peers.LabelAutomationPeer&gt;</ph>相应<ph id="ph4">&lt;xref:System.Windows.Controls.Label&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
          <source>This enables an automation client to get the text string that describes the <ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>.</source>
          <target state="translated">这使自动化客户端以获取文本字符串，用于描述<ph id="ph1">&lt;xref:System.Windows.Controls.ComboBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledByCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledByCore">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /&gt;</ph> for the element that is targeted by the <ph id="ph2">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Windows.Controls.Label" /&gt;</ph> 所使用的元素的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSetting">
          <source>Gets the notification characteristics of a live region that is associated with this automation peer.</source>
          <target state="translated">获取与此自动化对等关联的活动区域的通知特征。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSetting">
          <source>The notification characteristics.</source>
          <target state="translated">通知特征。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSetting">
          <source>This method calls the derived implementation of <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore&gt;</ph>.</source>
          <target state="translated">此方法调用的派生的实现<ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore">
          <source>When overridden in a derived class, returns the notification characteristics of a live region.</source>
          <target state="translated">在派生类中重写时，返回活动区域的通知特征。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore">
          <source>Called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSetting" /&gt;</ph> method.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSetting" /&gt;</ph> 方法调用。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLiveSettingCore">
          <source>The notification characteristics of a live region.</source>
          <target state="translated">活动区域的通知特征。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType">
          <source>Gets a human-readable localized string that represents the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationControlType" /&gt;</ph> value for the control that is associated with this automation peer.</source>
          <target state="translated">获取一个可读的本地化字符串，该字符串表示与此自动化对等方关联的控件的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationControlType" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType">
          <source>The type of the control.</source>
          <target state="translated">控件的类型。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlTypeCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlTypeCore">
          <source>The type of the control.</source>
          <target state="translated">控件的类型。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetName">
          <source>Gets text that describes the element that is associated with this automation peer.</source>
          <target state="translated">获取描述与此自动化同级关联的元素的文本。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetName">
          <source>The name.</source>
          <target state="translated">名称。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetName">
          <source>This method calls the derived implementation of <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetNameCore%2A&gt;</ph>.</source>
          <target state="translated">此方法调用的派生的实现<ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetNameCore%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>The string that contains the label.</source>
          <target state="translated">包含标签的字符串。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>You can think of this value as a string that users use to explain the control they are referring to.</source>
          <target state="translated">可以将此值视为用户用来解释它们所引用控件的字符串。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>This property is used by tools such as Narrator to tell the user what the control is.</source>
          <target state="translated">此属性是讲述人等工具用于告知用户控件是什么。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>For example, a button with a string "OK" should return "OK".</source>
          <target state="translated">例如，使用字符串"确定"按钮应返回"确定"。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph> control that lets users select a color might return "Colors".</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>使用户可以选择一种颜色的控件可能会返回"颜色"。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetNameCore">
          <source>Make sure that you have assigned a name to all controls in the <ph id="ph1">[!INCLUDE[TLA#tla_gui](~/includes/tlasharptla-gui-md.md)]</ph> so that accessibility tools such as screen readers can refer to each control in a localized manner.</source>
          <target state="translated">请确保你已将名称分配给中的所有控件<ph id="ph1">[!INCLUDE[TLA#tla_gui](~/includes/tlasharptla-gui-md.md)]</ph>，以便辅助功能工具，如屏幕阅读器可以指每个控件本地化的方式。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation">
          <source>Gets a value that indicates the explicit control orientation, if any.</source>
          <target state="translated">获取指示显式控件方向（如果有）的值。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation">
          <source>The orientation of the control.</source>
          <target state="translated">控件的方向。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientationCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientationCore">
          <source>The orientation of the control.</source>
          <target state="translated">控件的方向。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetParent">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> that is the parent of this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>.</source>
          <target state="translated">获取作为此 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 的父级的 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetParent">
          <source>The parent automation peer.</source>
          <target state="translated">自动化父级。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.PatternInterface" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.PatternInterface" /&gt;</ph> 枚举中的一个值。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
          <source>When overridden in a derived class, gets the control pattern that is associated with the specified <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.PatternInterface" /&gt;</ph>.</source>
          <target state="translated">在派生类中重写时，获取与指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.PatternInterface" /&gt;</ph> 关联的控件模式。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
          <source>The object that implements the pattern interface; <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this peer does not support this interface.</source>
          <target state="translated">实现模式接口的对象；如果此同级不支持此接口，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint(System.Windows.Point)">
          <source>The position on the screen to get the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> from.</source>
          <target state="translated">在屏幕中获取 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 的位置。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint(System.Windows.Point)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> from the specified point.</source>
          <target state="translated">从指定的点获取 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint(System.Windows.Point)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> at the specified point.</source>
          <target state="translated">位于指定点处的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPointCore(System.Windows.Point)">
          <source>The position on the screen to get the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> from.</source>
          <target state="translated">在屏幕中获取 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 的位置。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPointCore(System.Windows.Point)">
          <source>When overridden in a derived class, is called from <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint(System.Windows.Point)" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint(System.Windows.Point)" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPointCore(System.Windows.Point)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> at the specified point.</source>
          <target state="translated">位于指定点处的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus">
          <source>Gets a value that indicates whether the element that is associated with this automation peer currently has keyboard focus.</source>
          <target state="translated">获取一个值，该值指示与此自动化同级关联的元素当前是否具有键盘焦点。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element has keyboard focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此元素具有键盘焦点，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocusCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocusCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element has keyboard focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此元素具有键盘焦点，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>Triggers recalculation of the main properties of the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> and raises the <ph id="ph2">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> notification to the Automation Client if the properties changed.</source>
          <target state="translated">触发对 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 主要属性的重新计算，如果属性已更改，则引发对自动化客户端的 <ph id="ph2">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> 通知。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>Examples of main properties include, but are not limited to, <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.LogicalChildren%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;</ph>.</source>
          <target state="translated">主要属性的示例包括，但不限于，<ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl.LogicalChildren%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>Typically, updates and notifications happen automatically after the update of the layout in <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">通常情况下，更新和通知会自动更新中的布局后<ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>(The update occurs in response to the <ph id="ph1">&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;</ph> event.) Sometimes, however, properties change without raising the <ph id="ph2">&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;</ph> event.</source>
          <target state="translated">(在响应中会发生更新<ph id="ph1">&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;</ph>事件。)有时，但是，属性更改而不会引发<ph id="ph2">&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>For example, when the whole <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> moves, the <ph id="ph2">&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;</ph> event is not raised.</source>
          <target state="translated">例如，当整个<ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>移动时，<ph id="ph2">&lt;xref:System.Windows.UIElement.LayoutUpdated&gt;</ph>不会引发事件。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>In this example, the set of <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;</ph> objects change because the objects are expressed in screen coordinates.</source>
          <target state="translated">在此示例中的一套<ph id="ph1">&lt;xref:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle%2A&gt;</ph>对象更改，因为以屏幕坐标表示的对象。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> must call <ph id="ph2">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer%2A&gt;</ph> on its peer on <ph id="ph3">&lt;xref:System.Windows.Automation.Peers.WindowAutomationPeer&gt;</ph>.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>必须调用<ph id="ph2">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.InvalidatePeer%2A&gt;</ph>上的同级<ph id="ph3">&lt;xref:System.Windows.Automation.Peers.WindowAutomationPeer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
          <source>Gets a value that indicates whether the element that is associated with this automation peer contains data that is presented to the user.</source>
          <target state="translated">获取一个值，该值指示与此自动化对等方关联的元素是否包含向用户显示的数据。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is a content element; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果元素为内容元素，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
          <source>A content element contains data that is presented to the user.</source>
          <target state="translated">内容元素包含向用户显示的数据。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
          <source>An example of a content element is an item in a list box or a button in a dialog box.</source>
          <target state="translated">内容的一个示例是元素的一个列表框中的项或对话框中的按钮。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
          <source>You typically use non-content elements (which are also referred to as peripheral elements) to work with the content in a composite control.</source>
          <target state="translated">通常使用 （这也称为外围元素） 的非内容元素要使用复合控件中的内容。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement">
          <source>An example of a non-content element is the button in a drop-down control.</source>
          <target state="translated">非内容元素的一个示例是一个下拉列表控件中的按钮。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElementCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElementCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is a content element; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果元素为内容元素，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement">
          <source>Gets a value that indicates whether the element is understood by the user as interactive or as contributing to the logical structure of the control in the <ph id="ph1">[!INCLUDE[TLA2#tla_gui](~/includes/tla2sharptla-gui-md.md)]</ph>.</source>
          <target state="translated">获取一个值，该值指示用户将元素理解为交互元素，还是理解为组成 <ph id="ph1">[!INCLUDE[TLA2#tla_gui](~/includes/tla2sharptla-gui-md.md)]</ph> 中控件的逻辑结构的一部分。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is a control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果元素为控件，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElementCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElementCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is a control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果元素为控件，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled">
          <source>Gets a value that indicates whether the element associated with this automation peer supports interaction.</source>
          <target state="translated">获取一个值，该值指示与此自动化同级关联的元素是否支持交互。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element supports interaction; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果元素支持交互，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabledCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabledCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the automation peer can receive and send events; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果自动化同级可以接收和发送事件，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Windows.Automation.Peers.AutomationPeer.IsHwndHost">
          <source>Gets a value that indicates whether the element that is associated with this <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> hosts <ph id="ph2">&lt;see langword="hwnds" /&gt;</ph> in <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">获取一个值，该值指示与此 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 关联的元素是否承载 <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> 中的 <ph id="ph2">&lt;see langword="hwnds" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Peers.AutomationPeer.IsHwndHost">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element that is associated with this <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> hosts <ph id="ph3">&lt;see langword="hwnds" /&gt;</ph> in <ph id="ph4">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果与此 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 关联的元素承载 <ph id="ph4">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> 中的 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 <ph id="ph3">&lt;see langword="hwnds" /&gt;</ph>；否则为 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Peers.AutomationPeer.IsHwndHost">
          <source>Two examples of elements that host <ph id="ph1">`hwnds`</ph> in <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> are <ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>.</source>
          <target state="translated">承载的元素的两个示例<ph id="ph1">`hwnds`</ph>中<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>是<ph id="ph3">&lt;xref:System.Windows.Forms.Integration.WindowsFormsHost&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Controls.Primitives.Popup&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Automation.Peers.AutomationPeer.IsHwndHost">
          <source>These peers must also override <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore%2A&gt;</ph>.</source>
          <target state="translated">这些对等节点还必须重写<ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable">
          <source>Gets a value that indicates whether the element can accept keyboard focus.</source>
          <target state="translated">获取一个值，该值指示此元素是否可以接受键盘焦点。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element can accept keyboard focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此元素可以接受键盘焦点，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusableCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusableCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element can accept keyboard focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果此元素可以接受键盘焦点，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
          <source>Gets a value that indicates whether an element is off the screen.</source>
          <target state="translated">获取一个值，该值指示元素是否不在屏幕上。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is not on the screen; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果元素不在屏幕上，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
          <source>This property does not indicate whether the element is visible.</source>
          <target state="translated">此属性不指示元素是否可见。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
          <source>In some circumstances, an element is on the screen but is still not visible.</source>
          <target state="translated">在某些情况下，元素将显示在屏幕上，但却仍不可见。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
          <source>For example, if the element is on the screen but obscured by other elements, it might not be visible.</source>
          <target state="translated">例如，如果该元素已在其他元素遮盖但屏幕上，则它可能不可见。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen">
          <source>In this case, the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">在这种情况下，该方法返回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreenCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreenCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is not on the screen; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果元素不在屏幕上，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword">
          <source>Gets a value that indicates whether the element contains sensitive content.</source>
          <target state="translated">获取一个值，该值指示元素是否包含敏感内容。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element contains sensitive content such as a password; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果元素包含密码等敏感内容，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsPasswordCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsPasswordCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element contains sensitive content; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果元素包含敏感内容，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm">
          <source>Gets a value that indicates whether the element that is associated with this peer must be completed on a form.</source>
          <target state="translated">获取一个值，该值指示是否必须在窗体中完成与此同级关联的元素。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element must be completed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果必须完成此元素，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForFormCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm" /&gt;</ph> 调用。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForFormCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element is must be completed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果必须完成此元素，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source>One of the enumeration values.</source>
          <target state="translated">枚举值之一。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source>Gets a value that indicates whether <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> is listening for the specified event.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>是否正在侦听指定的事件。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source>A <ph id="ph1">&lt;see langword="boolean" /&gt;</ph> that indicates whether <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> is listening for the event.</source>
          <target state="translated">指示 <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>是否正在侦听事件的 <ph id="ph1">&lt;see langword="boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source>Typically, you call this method before creating the <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> that raises the event.</source>
          <target state="translated">通常，你可以调用此方法创建之前<ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph>引发事件。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source>This method is a performance measure because if <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> does not listen for the event, it does not make sense to create a peer to raise one.</source>
          <target state="translated">此方法是，性能度量值，因为如果<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>不侦听事件，它没有意义若要创建的对等方，以引发。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source>This method is static and only answers if a delegate listens for the specified event in <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>, not for an event on a specific element.</source>
          <target state="translated">此方法是静态的仅接听如果委托中的指定事件侦听<ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>而不是用于特定的元素上的事件。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.ListenerExists(System.Windows.Automation.Peers.AutomationEvents)">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> can create broadcast listeners; therefore the per-element information is irrelevant.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 可以创建广播的侦听器;因此的每个元素信息是不相关。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.PeerFromProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)">
          <source>The class that implements <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph>.</source>
          <target state="translated">可实现 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph> 的类。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.PeerFromProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> for the specified <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph> proxy.</source>
          <target state="translated">获取指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 代理的 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.PeerFromProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> for the specified <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph> proxy.</source>
          <target state="translated">指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 代理的 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ProviderFromPeer(System.Windows.Automation.Peers.AutomationPeer)">
          <source>The automation peer.</source>
          <target state="translated">自动化同级。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ProviderFromPeer(System.Windows.Automation.Peers.AutomationPeer)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph> for the specified <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>.</source>
          <target state="translated">获取指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ProviderFromPeer(System.Windows.Automation.Peers.AutomationPeer)">
          <source>The proxy.</source>
          <target state="translated">代理。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAsyncContentLoadedEvent(System.Windows.Automation.AsyncContentLoadedEventArgs)">
          <source>The event data.</source>
          <target state="translated">事件数据。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAsyncContentLoadedEvent(System.Windows.Automation.AsyncContentLoadedEventArgs)">
          <source>Called by the <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> to raise the <ph id="ph2">&lt;see cref="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" /&gt;</ph> event.</source>
          <target state="translated">由 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 调用以引发 <ph id="ph2">&lt;see cref="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAutomationEvent(System.Windows.Automation.Peers.AutomationEvents)">
          <source>The event identifier.</source>
          <target state="translated">事件标识符。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAutomationEvent(System.Windows.Automation.Peers.AutomationEvents)">
          <source>Raises an automation event.</source>
          <target state="translated">引发自动化事件。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(System.Windows.Automation.AutomationProperty,System.Object,System.Object)">
          <source>The property that changed.</source>
          <target state="translated">已更改的属性。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(System.Windows.Automation.AutomationProperty,System.Object,System.Object)">
          <source>The previous value of the property.</source>
          <target state="translated">属性的上一个值。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(System.Windows.Automation.AutomationProperty,System.Object,System.Object)">
          <source>The new value of the property.</source>
          <target state="translated">属性的新值。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.RaisePropertyChangedEvent(System.Windows.Automation.AutomationProperty,System.Object,System.Object)">
          <source>Raises an event to notify the automation client of a changed property value.</source>
          <target state="translated">引发事件以通知自动化客户端已更改的属性值。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.ResetChildrenCache">
          <source>Synchronously resets the tree of child elements by calling <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore" /&gt;</ph>.</source>
          <target state="translated">通过调用 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore" /&gt;</ph> 同步重置子元素的树。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.ResetChildrenCache">
          <source>Use this method in certain peer implementations that change the set of child elements in response to a call to a control pattern interface.</source>
          <target state="translated">在某些更改的控件模式接口的调用的响应中的子元素集的对等实现中使用此方法。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Peers.AutomationPeer.ResetChildrenCache">
          <source>An example is <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>, which can change the child elements of the peer by moving the <ph id="ph2">&lt;xref:System.Windows.Documents.TextRange&gt;</ph>.</source>
          <target state="translated">一个示例是<ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider&gt;</ph>，这可以通过移动更改对等节点的子元素<ph id="ph2">&lt;xref:System.Windows.Documents.TextRange&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus">
          <source>Sets the keyboard focus on the element that is associated with this automation peer.</source>
          <target state="translated">对与此自动化同级关联的元素设置键盘焦点。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Peers.AutomationPeer.SetFocusCore">
          <source>When overridden in a derived class, is called by <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" /&gt;</ph>.</source>
          <target state="translated">当在派生类中重写时，将由 <ph id="ph1">&lt;see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus" /&gt;</ph> 调用。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>