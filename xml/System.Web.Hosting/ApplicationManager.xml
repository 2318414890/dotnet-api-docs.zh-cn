<Type Name="ApplicationManager" FullName="System.Web.Hosting.ApplicationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fa9dd2c9f13ca0685de293d35a22629355589b7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ApplicationManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.ApplicationManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationManager sealed : MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d5207-101">为 ASP.NET 宿主应用程序管理 ASP.NET 应用程序域。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5207-101">Manages ASP.NET application domains for an ASP.NET hosting application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5207-102"><xref:System.Web.Hosting.ApplicationManager>对象提供的 ASP.NET 应用程序的宿主环境中的对象的生存期管理。</span><span class="sxs-lookup"><span data-stu-id="d5207-102">The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application.</span></span> <span data-ttu-id="d5207-103">它负责下列操作：</span><span class="sxs-lookup"><span data-stu-id="d5207-103">It is responsible for:</span></span>  
  
-   <span data-ttu-id="d5207-104">激活并初始化 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="d5207-104">Activating and initializing ASP.NET applications.</span></span>  
  
-   <span data-ttu-id="d5207-105">管理应用程序和对象的生存期注册应用程序中。</span><span class="sxs-lookup"><span data-stu-id="d5207-105">Managing the application lifetime and the lifetime of objects registered in the application.</span></span>  
  
-   <span data-ttu-id="d5207-106">公开宿主环境用于处理 ASP.NET 应用程序请求的对象。</span><span class="sxs-lookup"><span data-stu-id="d5207-106">Exposing objects used by the hosting environment to process ASP.NET application requests.</span></span>  
  
-   <span data-ttu-id="d5207-107">提供在任何给定时刻在宿主进程中运行的应用程序的列表。</span><span class="sxs-lookup"><span data-stu-id="d5207-107">Providing a list of applications running in the hosting process at any given moment.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5207-108">关闭所有应用程序域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-108">Shuts down all application domains.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5207-109">如果调用<xref:System.Web.Hosting.ApplicationManager.Close%2A>方法，可以减少使用的应用程序管理器为 0，应用程序的引用计数<xref:System.Web.Hosting.ApplicationManager.Close%2A>方法调用<xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d5207-109">If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5207-110">为指定的应用程序域和对象类型创建一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-110">Creates an object for the specified application domain and object type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Web.Hosting.IApplicationHost appHost, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::Web::Hosting::IApplicationHost ^ appHost, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appHost">
          <span data-ttu-id="d5207-111">一个 <see cref="T:System.Web.Hosting.IApplicationHost" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-111">An <see cref="T:System.Web.Hosting.IApplicationHost" /> object.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="d5207-112">要创建的对象类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-112">The type of the object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5207-113">基于类型创建指定应用程序域的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-113">Creates an object for the specified application domain, based on type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5207-114">
            <paramref name="type" /> 中指定的类型的新对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-114">A new object of the type specified in <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5207-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> 是.NET Framework 3.5 版中引入的。</span><span class="sxs-lookup"><span data-stu-id="d5207-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="d5207-116">有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="d5207-116">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5207-117">应用程序的物理路径不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-117">A physical path for the application does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5207-118">
            <paramref name="appHost" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-118">
              <paramref name="appHost" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d5207-119">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-119">\- or -</span>
          </span>
          <span data-ttu-id="d5207-120">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-120">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId">
          <span data-ttu-id="d5207-121">拥有该对象的应用程序的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-121">The unique identifier for the application that owns the object.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="d5207-122">要创建的对象类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-122">The type of the object to create.</span>
          </span>
        </param>
        <param name="virtualPath">
          <span data-ttu-id="d5207-123">应用程序的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-123">The virtual path to the application.</span>
          </span>
        </param>
        <param name="physicalPath">
          <span data-ttu-id="d5207-124">应用程序的物理路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-124">The physical path to the application.</span>
          </span>
        </param>
        <param name="failIfExists">
          <span data-ttu-id="d5207-125">若为 <see langword="true" /> 则在指定类型的对象当前已注册的情况下引发一个异常；若为 <see langword="false" /> 则返回现有已注册的指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-125">
              <see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5207-126">基于以下参数为指定的应用程序域创建一个对象：类型、虚拟路径和物理路径，以及一个指示当指定类型的对象已存在时的失败行为的布尔值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-126">Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5207-127">指定 <paramref name="type" /> 的新对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-127">A new object of the specified <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5207-128"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法用于创建和注册应用程序中的对象。</span><span class="sxs-lookup"><span data-stu-id="d5207-128">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application.</span></span> <span data-ttu-id="d5207-129">可以创建的每种类型的一个对象。</span><span class="sxs-lookup"><span data-stu-id="d5207-129">Only one object of each type can be created.</span></span> <span data-ttu-id="d5207-130">如果你需要创建多个相同类型的对象，则必须实现的对象工厂。</span><span class="sxs-lookup"><span data-stu-id="d5207-130">If you need to create multiple objects of the same type, you must implement an object factory.</span></span> <span data-ttu-id="d5207-131">有关详细信息，请参阅本主题中的代码示例。</span><span class="sxs-lookup"><span data-stu-id="d5207-131">For more information, see the code example in this topic.</span></span>  
  
 <span data-ttu-id="d5207-132">每个应用程序，由唯一的应用程序标识符，标识在其自己的应用程序域中运行。</span><span class="sxs-lookup"><span data-stu-id="d5207-132">Each application, identified by a unique application identifier, runs in its own application domain.</span></span> <span data-ttu-id="d5207-133"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法中指定的应用程序的应用程序域中创建指定类型的对象`appID`参数。</span><span class="sxs-lookup"><span data-stu-id="d5207-133">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter.</span></span> <span data-ttu-id="d5207-134">如果应用程序域不存在指定应用程序中，将创建对象之前，创建一个。</span><span class="sxs-lookup"><span data-stu-id="d5207-134">If an application domain does not exist for the specified application, one is created before the object is created.</span></span>  
  
 <span data-ttu-id="d5207-135">`failIfExists`参数控制的行为<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法时应用程序中已存在的指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="d5207-135">The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application.</span></span> <span data-ttu-id="d5207-136">当`failIfExists`是`true`、<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法抛出异常<xref:System.InvalidOperationException>异常。</span><span class="sxs-lookup"><span data-stu-id="d5207-136">When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="d5207-137">当`failIfExists`是`false`、<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法返回指定类型的现有已注册的对象。</span><span class="sxs-lookup"><span data-stu-id="d5207-137">When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type.</span></span>  
  
 <span data-ttu-id="d5207-138"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法调用的重载采用一个附加`throwOnError`参数`throwOnError`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="d5207-138">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5207-139">下面的代码示例是已注册的对象的对象工厂设计模式的实现。</span><span class="sxs-lookup"><span data-stu-id="d5207-139">The following code example is an implementation of the object-factory design pattern for registered objects.</span></span> <span data-ttu-id="d5207-140">使用工厂模式，可注册的对象的多个实例。</span><span class="sxs-lookup"><span data-stu-id="d5207-140">Using the factory pattern enables you to register multiple instances of an object.</span></span> <span data-ttu-id="d5207-141">此示例包含两个对象： `SampleComponent`，即应用程序的对象将使用的多个实例和`SampleComponentFactory`，其将管理一份`SampleComponent`实例。</span><span class="sxs-lookup"><span data-stu-id="d5207-141">The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.</span></span>  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#1)]
 [!code-vb[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5207-142">
            <paramref name="physicalPath" /> 为 <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-142">
              <paramref name="physicalPath" /> is <see langword="null" /></span>
          </span>
          <span data-ttu-id="d5207-143">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-143">\- or -</span>
          </span>
          <span data-ttu-id="d5207-144">
            <paramref name="physicalPath" /> 不是有效的应用程序路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-144">
              <paramref name="physicalPath" /> is not a valid application path.</span>
          </span>
          <span data-ttu-id="d5207-145">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-145">\- or -</span>
          </span>
          <span data-ttu-id="d5207-146">
            <paramref name="type" /> 不实现 <see cref="T:System.Web.Hosting.IRegisteredObject" /> 接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-146">
              <paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5207-147">
            <paramref name="appID" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-147">
              <paramref name="appID" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d5207-148">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-148">\- or -</span>
          </span>
          <span data-ttu-id="d5207-149">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-149">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5207-150">
            <paramref name="failIfExists" /> 为 <see langword="true" />，且已经注册指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-150">
              <paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId">
          <span data-ttu-id="d5207-151">拥有该对象的应用程序的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-151">The unique identifier for the application that owns the object.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="d5207-152">要创建的对象类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-152">The type of the object to create.</span>
          </span>
        </param>
        <param name="virtualPath">
          <span data-ttu-id="d5207-153">应用程序的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-153">The virtual path to the application.</span>
          </span>
        </param>
        <param name="physicalPath">
          <span data-ttu-id="d5207-154">应用程序的物理路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-154">The physical path to the application.</span>
          </span>
        </param>
        <param name="failIfExists">
          <span data-ttu-id="d5207-155">若为 <see langword="true" /> 则在指定类型的对象当前已注册的情况下引发一个异常；若为 <see langword="false" /> 则返回现有已注册的指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-155">
              <see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="d5207-156">若为 <see langword="true" /> 则引发宿主初始化错误异常；若为 <see langword="false" /> 则不引发宿主初始化异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-156">
              <see langword="true" /> to throw exceptions for hosting initialization errors; <see langword="false" /> to not throw hosting initialization exceptions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5207-157">基于以下参数为指定的应用程序域创建一个对象：类型、虚拟路径和物理路径、一个指示当指定类型的对象已存在时的失败行为的布尔值，以及一个指示是否引发宿主初始化错误异常的布尔值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-157">Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5207-158">指定 <paramref name="type" /> 的新对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-158">A new object of the specified <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5207-159">此重载<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法提供`throwOnError`参数，它允许你控制是否宿主初始化异常引发。</span><span class="sxs-lookup"><span data-stu-id="d5207-159">This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown.</span></span> <span data-ttu-id="d5207-160">重载<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>不提供的方法`throwOnError`参数设置为调用此重载`false`。</span><span class="sxs-lookup"><span data-stu-id="d5207-160">The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d5207-161">
            <paramref name="physicalPath" /> 为 <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-161">
              <paramref name="physicalPath" /> is <see langword="null" /></span>
          </span>
          <span data-ttu-id="d5207-162">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-162">\- or -</span>
          </span>
          <span data-ttu-id="d5207-163">
            <paramref name="physicalPath" /> 不是有效的应用程序路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-163">
              <paramref name="physicalPath" /> is not a valid application path.</span>
          </span>
          <span data-ttu-id="d5207-164">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-164">\- or -</span>
          </span>
          <span data-ttu-id="d5207-165">
            <paramref name="type" /> 不实现 <see cref="T:System.Web.Hosting.IRegisteredObject" /> 接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-165">
              <paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5207-166">
            <paramref name="appID" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-166">
              <paramref name="appID" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d5207-167">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-167">\- or -</span>
          </span>
          <span data-ttu-id="d5207-168">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-168">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d5207-169">
            <paramref name="failIfExists" /> 为 <see langword="true" />，且已经注册指定类型的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-169">
              <paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAppDomain">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5207-170">获取指定应用程序的应用程序域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-170">Gets the application domain of a specified application.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appId As String) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::String ^ appId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId">
          <span data-ttu-id="d5207-171">应用程序的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-171">The unique identifier for the application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5207-172">获取指定应用程序的应用程序域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-172">Gets the application domain of the specified application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5207-173">应用程序的应用程序域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-173">The application domain of the application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(class System.Web.Hosting.IApplicationHost appHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appHost As IApplicationHost) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::Web::Hosting::IApplicationHost ^ appHost);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
      </Parameters>
      <Docs>
        <param name="appHost">
          <span data-ttu-id="d5207-174">要为其获取应用程序域的宿主。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-174">The host to get the application domain for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5207-175">获取使用指定主机的应用程序的应用程序域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-175">Gets the application domain of an application using the specified host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5207-176">应用程序的应用程序域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-176">The application domain of the application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationManager">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationManager GetApplicationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Hosting.ApplicationManager GetApplicationManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetApplicationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationManager () As ApplicationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Hosting::ApplicationManager ^ GetApplicationManager();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5207-177">返回与此 ASP.NET 宿主进程关联的 <see cref="T:System.Web.Hosting.ApplicationManager" /> 对象的一个实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-177">Returns the single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with this ASP.NET host process.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5207-178">与运行中的 ASP.NET 宿主进程关联的 <see cref="T:System.Web.Hosting.ApplicationManager" /> 对象的一个实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-178">The single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with the ASP.NET host process that is running.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5207-179">一个实例<xref:System.Web.Hosting.ApplicationManager>由 ASP.NET 主机进程默认应用程序域中创建对象。</span><span class="sxs-lookup"><span data-stu-id="d5207-179">Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain.</span></span> <span data-ttu-id="d5207-180">实例时，如果<xref:System.Web.Hosting.ApplicationManager>类不可用，<xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A>方法首先创建的一个实例<xref:System.Web.Hosting.ApplicationManager>类，然后返回新创建的对象。</span><span class="sxs-lookup"><span data-stu-id="d5207-180">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object.</span></span> <span data-ttu-id="d5207-181">实例时，如果<xref:System.Web.Hosting.ApplicationManager>以前创建类，<xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A>方法将返回现有对象。</span><span class="sxs-lookup"><span data-stu-id="d5207-181">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5207-182">下面的代码示例使用<xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A>方法来检索<xref:System.Web.Hosting.ApplicationManager>Web 应用程序的实例。</span><span class="sxs-lookup"><span data-stu-id="d5207-182">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject GetObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ GetObject(System::String ^ appId, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId">
          <span data-ttu-id="d5207-183">拥有该对象的应用程序的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-183">The unique identifier for the application that owns the object.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="d5207-184">要返回的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-184">The type of the object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5207-185">从指定的应用程序返回指定类型的注册对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-185">Returns the registered object of the specified type from the specified application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5207-186">指定类型的已注册对象；如果还没有通过调用 <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> 方法来注册该类型，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-186">The registered object of the specified type; or <see langword="null" /> if the type has not been registered through a call to the <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5207-187">
            <paramref name="appId" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-187">
              <paramref name="appId" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d5207-188">- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-188">—or—</span>
          </span>
          <span data-ttu-id="d5207-189">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-189">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunningApplications">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.ApplicationInfo[] GetRunningApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetRunningApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRunningApplications () As ApplicationInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::Hosting::ApplicationInfo ^&gt; ^ GetRunningApplications();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5207-190">返回运行中的应用程序的快照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-190">Returns a snapshot of running applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5207-191">
            <see cref="T:System.Web.Hosting.ApplicationInfo" /> 对象的数组，这些对象包含有关此 <see cref="T:System.Web.Hosting.ApplicationManager" /> 实例管理的应用程序的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-191">An array of <see cref="T:System.Web.Hosting.ApplicationInfo" /> objects that contain information about the applications managed by this <see cref="T:System.Web.Hosting.ApplicationManager" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d5207-192">下面的代码示例使用<xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A>方法以显示有关由管理的应用程序的信息<xref:System.Web.Hosting.ApplicationManager>实例。</span><span class="sxs-lookup"><span data-stu-id="d5207-192">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5207-193">通过防止创建租约来给予应用程序域无限生存期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-193">Gives the application domain an infinite lifetime by preventing a lease from being created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5207-194">总是为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-194">Always <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5207-195">此方法将替代<xref:System.MarshalByRefObject.InitializeLifetimeService%2A>其基类中的方法。</span><span class="sxs-lookup"><span data-stu-id="d5207-195">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="d5207-196">它始终返回`null`，从而防止创建租约，会限制应用程序域的生存期。</span><span class="sxs-lookup"><span data-stu-id="d5207-196">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5207-197">返回一个值，该值指示是否该进程承载的所有应用程序都是空闲的且未在处理请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-197">Returns a value indicating whether all applications hosted by the process are idle and not processing requests.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5207-198">如果该进程中的所有应用程序都是空闲的，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-198">
              <see langword="true" /> if all applications in the process are idle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5207-199"><xref:System.Web.Hosting.ApplicationManager.IsIdle%2A>方法返回`true`如果托管进程的所有应用程序都处于空闲状态。</span><span class="sxs-lookup"><span data-stu-id="d5207-199">The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5207-200">使线程安全增量成为应用程序管理器实例的用户参考计数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-200">Makes a thread-safe increment to the user reference count of the application manager instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAll">
      <MemberSignature Language="C#" Value="public void ShutdownAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d5207-201">卸载所有应用程序资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-201">Unloads all application resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5207-202">调用<xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A>方法等效于调用<xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType>由此管理的所有应用程序域中的方法<xref:System.Web.Hosting.ApplicationManager>实例; 但是，<xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A>方法可以从调用的托管应用程序域之外。</span><span class="sxs-lookup"><span data-stu-id="d5207-202">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownApplication(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownApplication (appId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownApplication(System::String ^ appId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId">
          <span data-ttu-id="d5207-203">要卸载的应用程序的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-203">The unique identifier of the application to unload.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5207-204">卸载指定的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-204">Unloads the specified application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5207-205">调用<xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A>方法等效于调用<xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType>方法的特定应用程序域; 但是，<xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A>方法可以从外部托管的应用程序域调用。</span><span class="sxs-lookup"><span data-stu-id="d5207-205">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5207-206">
            <paramref name="appId" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-206">
              <paramref name="appId" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StopObject">
      <MemberSignature Language="C#" Value="public void StopObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopObject(System::String ^ appId, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId">
          <span data-ttu-id="d5207-207">拥有该对象的应用程序的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-207">The unique identifier for the application that owns the object.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="d5207-208">要卸载的对象的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-208">The type of the object to unload.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5207-209">从应用程序中的注册对象列表中移除指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-209">Removes the specified object from the list of registered objects in an application.</span>
          </span>
          <span data-ttu-id="d5207-210">如果要移除的对象是应用程序注册对象列表中剩余的最后一个对象，则该应用程序将被卸载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-210">If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5207-211">
            <paramref name="appId" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-211">
              <paramref name="appId" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d5207-212">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-212">\- or -</span>
          </span>
          <span data-ttu-id="d5207-213">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5207-213">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>