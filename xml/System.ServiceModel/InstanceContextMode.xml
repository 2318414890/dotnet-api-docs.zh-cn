<Type Name="InstanceContextMode" FullName="System.ServiceModel.InstanceContextMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2782e90ed4d98339a4572ea24d10b21c5a7cfb88" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37450983" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum InstanceContextMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InstanceContextMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.InstanceContextMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum InstanceContextMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class InstanceContextMode" />
  <TypeSignature Language="F#" Value="type InstanceContextMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>指定可用来处理包含在传入消息中的调用的服务实例数。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> 管理信道和用户定义的服务对象之间的关联。 使用 <xref:System.ServiceModel.InstanceContextMode> 枚举和 <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> 属性来指定 <xref:System.ServiceModel.InstanceContext> 对象的生存期。 Windows Communication Foundation (WCF) 可以创建一个新<xref:System.ServiceModel.InstanceContext>对于每个调用，每个会话对象，或指定<xref:System.ServiceModel.InstanceContext>对象绑定到单个服务对象。 有关工作示例，请参阅[Instancing](~/docs/framework/wcf/samples/instancing.md)。  
  
 单个值指定单个<xref:System.ServiceModel.InstanceContextMode.Single>对象应该用于服务的生命周期。  
  
> [!NOTE]
>  如果<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>值设置为 Single 结果是，你的服务只能处理一条消息一次除非还设置<xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>值设为<xref:System.ServiceModel.ConcurrencyMode>。  
  
   
  
## Examples  
 下面的代码演示如何为服务类设置 <xref:System.ServiceModel.InstanceContextMode>：  
  
 [!code-csharp[S_ReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_reliablesession/cs/service.cs#1)]
 [!code-vb[S_ReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_reliablesession/vb/service.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" />
    <altmember cref="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
  </Docs>
  <Members>
    <Member MemberName="PerCall">
      <MemberSignature Language="C#" Value="PerCall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerCall = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberSignature Language="VB.NET" Value="PerCall" />
      <MemberSignature Language="C++ CLI" Value="PerCall" />
      <MemberSignature Language="F#" Value="PerCall = 1" Usage="System.ServiceModel.InstanceContextMode.PerCall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>新的 <see cref="T:System.ServiceModel.InstanceContext" /> 对象在每次调用前创建，在调用后回收。</summary>
      </Docs>
    </Member>
    <Member MemberName="PerSession">
      <MemberSignature Language="C#" Value="PerSession" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode PerSession = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberSignature Language="VB.NET" Value="PerSession" />
      <MemberSignature Language="C++ CLI" Value="PerSession" />
      <MemberSignature Language="F#" Value="PerSession = 0" Usage="System.ServiceModel.InstanceContextMode.PerSession" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>为每个会话创建一个新的 <see cref="T:System.ServiceModel.InstanceContext" /> 对象。 如果信道未创建会话，则该值的行为就如同 <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" /> 一样。</summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.InstanceContextMode Single = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.InstanceContextMode.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberSignature Language="F#" Value="Single = 2" Usage="System.ServiceModel.InstanceContextMode.Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContextMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>只有一个 <see cref="T:System.ServiceModel.InstanceContext" /> 对象用于所有传入呼叫，并且在调用后不回收。 如果服务对象不存在，则创建一个。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  对于单一实例生存期行为 (例如，如果主机应用程序调用<xref:System.ServiceModel.ServiceHost.%23ctor%2A>构造函数并传递一个对象以用作该服务)，服务类必须设置<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>为 Single，或打开服务主机时，将引发异常。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>