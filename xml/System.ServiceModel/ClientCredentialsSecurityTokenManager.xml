<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClientCredentialsSecurityTokenManager.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fac023127749fe1e1433fae0809983d3b0b61db7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fac023127749fe1e1433fae0809983d3b0b61db7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
          <source>Manages security tokens for the client.</source>
          <target state="translated">管理客户端的安全令牌。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
          <source>This class handles security token serialization, security token provision and security token authentication for the client.</source>
          <target state="translated">此类为客户端处理安全令牌序列化、安全令牌设置以及安全令牌身份验证等操作。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
          <source>There is one instance of this class for each client channel factory.</source>
          <target state="translated">每个客户端信道工厂都有一个此类的实例。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
          <source>The following code shows how you can override this class to create a custom Client Credentials Security Token Manager.</source>
          <target state="translated">下面的代码演示如何重写此类，以创建一个自定义客户端凭据安全令牌管理器。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)">
          <source>The following code shows how to override this constructor.</source>
          <target state="translated">下面的代码演示如何重写此构造函数。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)">
          <source><ph id="ph1">&lt;paramref name="clientCredentials" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="clientCredentials" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials">
          <source>Gets the client credentials.</source>
          <target state="translated">获取客户端凭据。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object allows the user to configure client credentials to be used for authentication to the service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> 对象允许用户配置客户端凭据以用于对服务进行身份验证。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
          <source>When this method returns, contains a <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph>.</source>
          <target state="translated">此方法返回时，包含 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">此参数未经初始化即被传递。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
          <source>Creates a security token authenticator.</source>
          <target state="translated">创建安全令牌身份验证器。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> is responsible for validating security tokens and providing a <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> to obtain claims for security tokens that meet the requirements specified in <ph id="ph3">&lt;xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;</ph> 负责验证安全令牌和提供 <ph id="ph2">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> 以获取符合 <ph id="ph3">&lt;xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement&gt;</ph> 中的指定要求的安全令牌声明。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
          <source><ph id="ph1">&lt;paramref name="tokenRequirement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenRequirement" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <source>Creates a security token provider.</source>
          <target state="translated">创建安全令牌提供程序。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt;</ph> class is responsible for obtaining tokens for a given <ph id="ph2">&lt;xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenProvider&gt;</ph> 类负责获取给定的 <ph id="ph2">&lt;xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement&gt;</ph> 的令牌。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <source>Optionally token providers support renewing and canceling tokens as well.</source>
          <target state="translated">令牌提供程序还可以支持续订和取消令牌。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <source>The following code shows how to override this method.</source>
          <target state="translated">下面的代码演示如何重写此方法。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <source><ph id="ph1">&lt;paramref name="tokenRequirement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="tokenRequirement" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
          <source>Creates a security token serializer.</source>
          <target state="translated">创建安全令牌序列化程序。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
          <source>The two overloads differ in their input parameter: one takes a <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenVersion&gt;</ph>; the other takes a <ph id="ph2">&lt;xref:System.ServiceModel.Security.SecurityVersion&gt;</ph>.</source>
          <target state="translated">这两个重载的区别在于它们的输入参数：一个采用 <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenVersion&gt;</ph>，而另一个采用 <ph id="ph2">&lt;xref:System.ServiceModel.Security.SecurityVersion&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" /&gt;</ph> of the security token.</source>
          <target state="translated">安全令牌的 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
          <source>Creates a security token serializer.</source>
          <target state="translated">创建安全令牌序列化程序。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenSerializer&gt;</ph> is used to write and read security tokens, security key identifiers, and security key identifier clauses.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenSerializer&gt;</ph> 用于写入和读取安全令牌、安全密钥标识符和安全密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
          <source>When deserializing the token from XML, the returned token must be able to perform cryptographic operations.</source>
          <target state="translated">从 XML 反序列化令牌时，返回的令牌必须能够执行加密操作。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
          <source>The token serializer therefore must ensure the deserialized token can perform cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding and other operations) but should defer application trust decisions to the security token authenticator.</source>
          <target state="translated">因此，令牌序列化程序必须确保反序列化的令牌可以执行加密操作（Kerberos 票证处理、X.509 解码、SAML 解码和其他操作），但应遵循安全令牌身份验证器的应用程序信任决定。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityVersion" /&gt;</ph> of the security token.</source>
          <target state="translated">安全令牌的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityVersion" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)">
          <source>Creates a security token serializer.</source>
          <target state="translated">创建安全令牌序列化程序。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenSerializer&gt;</ph> is used to write and read security tokens, security key identifiers and security key identifier clauses.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenSerializer&gt;</ph> 用于写入和读取安全令牌、安全密钥标识符和安全密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)">
          <source>When deserializing the token from XML, the returned token must be able to perform cryptographic operations.</source>
          <target state="translated">从 XML 反序列化令牌时，返回的令牌必须能够执行加密操作。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)">
          <source>The token serializer therefore must ensure the deserialized token can perform cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding and other operations) but should defer application trust decisions to the security token authenticator.</source>
          <target state="translated">因此，令牌序列化程序必须确保反序列化的令牌可以执行加密操作（Kerberos 票证处理、X.509 解码、SAML 解码和其他操作），但应遵循安全令牌身份验证器的应用程序信任决定。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <source>Gets a value that indicates whether the specified token requirement is an issued security token requirement.</source>
          <target state="translated">获取一个值，该值指示指定的令牌需求是否是已颁发的安全令牌需求。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified token requirement is an issued security token requirement; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的令牌要求是已颁发的安全令牌要求，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
          <source><ph id="ph1">&lt;paramref name="requirement" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requirement" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>