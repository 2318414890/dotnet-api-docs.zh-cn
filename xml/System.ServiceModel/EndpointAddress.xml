<Type Name="EndpointAddress" FullName="System.ServiceModel.EndpointAddress">
  <TypeSignature Language="C#" Value="public class EndpointAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndpointAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.EndpointAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class EndpointAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointAddress" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9968d-101">提供客户端用来与服务终结点进行通信的唯一网络地址。</span><span class="sxs-lookup"><span data-stu-id="9968d-101">Provides a unique network address that a client uses to communicate with a service endpoint.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9968d-102">终结点地址唯一标识服务的终结点。</span><span class="sxs-lookup"><span data-stu-id="9968d-102">An endpoint address uniquely identifies the endpoint for a service.</span></span>  
  
 <span data-ttu-id="9968d-103">终结点地址属于服务终结点。服务终结点还包含终结点的绑定、协定和行为。</span><span class="sxs-lookup"><span data-stu-id="9968d-103">The endpoint address belongs to the service endpoint, which also contains the binding, contract and behaviors for the endpoint.</span></span>  
  
 <span data-ttu-id="9968d-104"><xref:System.ServiceModel.EndpointAddress> 包含一个 URI，以及包括标识、WSDL 元素和可选标头集合在内的地址属性。</span><span class="sxs-lookup"><span data-stu-id="9968d-104">The <xref:System.ServiceModel.EndpointAddress> contains a URI and address properties that include an identity, WSDL elements, and a collection of optional headers.</span></span> <span data-ttu-id="9968d-105">可选标头用于提供其他更多详细寻址信息来标识终结点或与终结点交互。</span><span class="sxs-lookup"><span data-stu-id="9968d-105">The optional headers are used to provide additional, more detailed addressing information to identify or interact with the endpoint.</span></span> <span data-ttu-id="9968d-106">例如，它们可用于指示当有多个实例可用时，要使用哪个服务实例来处理从特定用户传入的消息。</span><span class="sxs-lookup"><span data-stu-id="9968d-106">For example, they can be used to indicate which instance of a service is to be used to process an incoming message from a particular user when multiple instances are available.</span></span>  
  
 <span data-ttu-id="9968d-107">你可以通过使用代码以强制方式或通过配置以声明方式指定服务的终结点地址。</span><span class="sxs-lookup"><span data-stu-id="9968d-107">The endpoint address for a service can be specified either imperatively using code or declaratively through configuration.</span></span> <span data-ttu-id="9968d-108">在代码中定义终结点通常是不可行的，因为已部署服务的绑定和地址通常与在部署服务时所用的绑定和地址不同。</span><span class="sxs-lookup"><span data-stu-id="9968d-108">Defining endpoints in code is usually not practical because the bindings and addresses for a deployed service are typically different from those used while the service is being developed.</span></span> <span data-ttu-id="9968d-109">它是定义使用配置的服务终结点更为可行。</span><span class="sxs-lookup"><span data-stu-id="9968d-109">It is more practical to define service endpoints using configuration.</span></span>  
  
 <span data-ttu-id="9968d-110"><xref:System.ServiceModel.EndpointAddress> 不实现 <xref:System.Runtime.Serialization.ISerializable> 接口，因此不可序列化。</span><span class="sxs-lookup"><span data-stu-id="9968d-110"><xref:System.ServiceModel.EndpointAddress> does not implement the <xref:System.Runtime.Serialization.ISerializable> interface and so is not serializable.</span></span> <span data-ttu-id="9968d-111">若要使终结点作为服务协定的一部分进行公开，它必须是可序列化的，而且还必须与 Web 服务寻址 (WS-Addressing) 协议兼容。</span><span class="sxs-lookup"><span data-stu-id="9968d-111">For an endpoint to be exposed as part of a service contract it must be serializable and it must also be compliant with the Web Service Addressing (WS-Addressing) protocol.</span></span> <span data-ttu-id="9968d-112">与 WS-Addressing 1.0 版和 2004 年 8 月版兼容的可序列化终结点分别由 <xref:System.ServiceModel.EndpointAddress10> 和 <xref:System.ServiceModel.EndpointAddressAugust2004> 类提供。</span><span class="sxs-lookup"><span data-stu-id="9968d-112">Serializable endpoints that are compliant with version 1.0 and the August 2004 version of WS-Addressing are provided, respectively, by the <xref:System.ServiceModel.EndpointAddress10> and <xref:System.ServiceModel.EndpointAddressAugust2004> classes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#0](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/hostapplication.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9968d-113">初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9968d-113">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(System::String ^ uri);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="9968d-114">标识终结点的 URI。</span><span class="sxs-lookup"><span data-stu-id="9968d-114">The URI that identifies the endpoint.</span></span></param>
        <summary><span data-ttu-id="9968d-115">使用指定的 URI 字符串初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9968d-115">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#13](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (Uri uri, params System.ServiceModel.Channels.AddressHeader[] addressHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, class System.ServiceModel.Channels.AddressHeader[] addressHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(Uri ^ uri, ... cli::array &lt;System::ServiceModel::Channels::AddressHeader ^&gt; ^ addressHeaders);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="addressHeaders" Type="System.ServiceModel.Channels.AddressHeader[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="9968d-116">标识终结点位置的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-116">The <see cref="T:System.Uri" /> that identifies the endpoint location.</span></span></param>
        <param name="addressHeaders"><span data-ttu-id="9968d-117">类型为 <see cref="T:System.Array" /> 的 <see cref="T:System.ServiceModel.Channels.AddressHeader" />，包含用于与终结点交互的地址信息。</span><span class="sxs-lookup"><span data-stu-id="9968d-117">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains address information used to interact with the endpoint.</span></span></param>
        <summary><span data-ttu-id="9968d-118">使用指定的 URI 和标头初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9968d-118">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI and headers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9968d-119">下面的代码演示此构造函数的用法。</span><span class="sxs-lookup"><span data-stu-id="9968d-119">The following code shows the use of this constructor.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (Uri uri, System.ServiceModel.EndpointIdentity identity, params System.ServiceModel.Channels.AddressHeader[] addressHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, class System.ServiceModel.EndpointIdentity identity, class System.ServiceModel.Channels.AddressHeader[] addressHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(Uri ^ uri, System::ServiceModel::EndpointIdentity ^ identity, ... cli::array &lt;System::ServiceModel::Channels::AddressHeader ^&gt; ^ addressHeaders);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="addressHeaders" Type="System.ServiceModel.Channels.AddressHeader[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="9968d-120">标识终结点位置的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-120">The <see cref="T:System.Uri" /> that identifies the endpoint location.</span></span></param>
        <param name="identity"><span data-ttu-id="9968d-121">终结点的 <see cref="T:System.ServiceModel.EndpointIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-121">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</span></span></param>
        <param name="addressHeaders"><span data-ttu-id="9968d-122">类型为 <see cref="T:System.Array" /> 的 <see cref="T:System.ServiceModel.Channels.AddressHeader" />，包含用于与终结点交互的地址信息。</span><span class="sxs-lookup"><span data-stu-id="9968d-122">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains address information used to interact with the endpoint.</span></span></param>
        <summary><span data-ttu-id="9968d-123">使用指定的 URI、标识和标头初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9968d-123">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, and headers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9968d-124">下面的代码演示如何使用 <xref:System.ServiceModel.EndpointAddress>、<xref:System.Uri> 和 <xref:System.ServiceModel.EndpointIdentity> 对象的数组来构造 <xref:System.ServiceModel.Channels.AddressHeader> 对象。</span><span class="sxs-lookup"><span data-stu-id="9968d-124">The following code shows how to construct an <xref:System.ServiceModel.EndpointAddress> object with a <xref:System.Uri>, <xref:System.ServiceModel.EndpointIdentity> and an array of <xref:System.ServiceModel.Channels.AddressHeader> objects.</span></span>  
  
 [!code-csharp[EndpointAddress#2](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (Uri uri, System.ServiceModel.EndpointIdentity identity, System.ServiceModel.Channels.AddressHeaderCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, class System.ServiceModel.EndpointIdentity identity, class System.ServiceModel.Channels.AddressHeaderCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(Uri ^ uri, System::ServiceModel::EndpointIdentity ^ identity, System::ServiceModel::Channels::AddressHeaderCollection ^ headers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="headers" Type="System.ServiceModel.Channels.AddressHeaderCollection" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="9968d-125">标识终结点位置的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-125">The <see cref="T:System.Uri" /> that identifies the endpoint location.</span></span></param>
        <param name="identity"><span data-ttu-id="9968d-126">终结点的 <see cref="T:System.ServiceModel.EndpointIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-126">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</span></span></param>
        <param name="headers"><span data-ttu-id="9968d-127">包含用于与终结点交互的地址信息的 <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-127">The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information used to interact with the endpoint.</span></span></param>
        <summary><span data-ttu-id="9968d-128">使用指定的 URI、标识和标头集合初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9968d-128">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, and header collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9968d-129">下面的代码演示如何使用 <xref:System.ServiceModel.EndpointAddress>、<xref:System.Uri> 和 <xref:System.ServiceModel.EndpointIdentity> 对象来构造 <xref:System.ServiceModel.Channels.AddressHeaderCollection> 对象。</span><span class="sxs-lookup"><span data-stu-id="9968d-129">The following code shows how to construct a <xref:System.ServiceModel.EndpointAddress> object with a <xref:System.Uri>, <xref:System.ServiceModel.EndpointIdentity> and an <xref:System.ServiceModel.Channels.AddressHeaderCollection> object.</span></span>  
  
 [!code-csharp[EndpointAddress#3](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddress (Uri uri, System.ServiceModel.EndpointIdentity identity, System.ServiceModel.Channels.AddressHeaderCollection headers, System.Xml.XmlDictionaryReader metadataReader, System.Xml.XmlDictionaryReader extensionReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, class System.ServiceModel.EndpointIdentity identity, class System.ServiceModel.Channels.AddressHeaderCollection headers, class System.Xml.XmlDictionaryReader metadataReader, class System.Xml.XmlDictionaryReader extensionReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddress(Uri ^ uri, System::ServiceModel::EndpointIdentity ^ identity, System::ServiceModel::Channels::AddressHeaderCollection ^ headers, System::Xml::XmlDictionaryReader ^ metadataReader, System::Xml::XmlDictionaryReader ^ extensionReader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="identity" Type="System.ServiceModel.EndpointIdentity" />
        <Parameter Name="headers" Type="System.ServiceModel.Channels.AddressHeaderCollection" />
        <Parameter Name="metadataReader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="extensionReader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="9968d-130">标识终结点位置的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-130">The <see cref="T:System.Uri" /> that identifies the endpoint location.</span></span></param>
        <param name="identity"><span data-ttu-id="9968d-131">终结点的 <see cref="T:System.ServiceModel.EndpointIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-131">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</span></span></param>
        <param name="headers"><span data-ttu-id="9968d-132">包含用于与终结点交互的地址信息的 <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-132">The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information used to interact with the endpoint.</span></span></param>
        <param name="metadataReader"><span data-ttu-id="9968d-133">从中获取终结点元数据的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-133">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint metadata is obtained.</span></span></param>
        <param name="extensionReader"><span data-ttu-id="9968d-134">从中获取扩展的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-134">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which extensions are obtained.</span></span></param>
        <summary><span data-ttu-id="9968d-135">使用指定的 URI、标识、标头集合、元数据和扩展读取器初始化 <see cref="T:System.ServiceModel.EndpointAddress" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="9968d-135">Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, header collection, and metadata and extension readers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9968d-136">WS-Addressing 规范允许任意扩展元素出现在使用 <xref:System.Xml.XmlDictionaryReader> 获取的终结点引用 (EPR) 末尾处。</span><span class="sxs-lookup"><span data-stu-id="9968d-136">The WS-Addressing specification allows for arbitrary extension elements to appear at the end of an Endpoint Reference (EPR) that can be obtained using an <xref:System.Xml.XmlDictionaryReader>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9968d-137">下面的代码演示如何实例化 <xref:System.ServiceModel.EndpointAddress>，以指定 <xref:System.Uri>、<xref:System.ServiceModel.EndpointIdentity>、标头集合、元数据 <xref:System.Xml.XmlDictionaryReader> 和扩展 <xref:System.Xml.XmlDictionaryReader>。</span><span class="sxs-lookup"><span data-stu-id="9968d-137">The following code shows how to instantiate a <xref:System.ServiceModel.EndpointAddress> that specifies a <xref:System.Uri>, an <xref:System.ServiceModel.EndpointIdentity>, a headers collection, a metadata <xref:System.Xml.XmlDictionaryReader> and an extension <xref:System.Xml.XmlDictionaryReader>.</span></span>  
  
 [!code-csharp[EndpointAddress#6](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousUri">
      <MemberSignature Language="C#" Value="public static Uri AnonymousUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Uri AnonymousUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.AnonymousUri" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AnonymousUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Uri ^ AnonymousUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9968d-138">获取匿名 URI 的与版本无关的表示形式。</span><span class="sxs-lookup"><span data-stu-id="9968d-138">Gets a version-neutral representation of the anonymous URI.</span></span></summary>
        <value><span data-ttu-id="9968d-139">A<see cref="T:System.Uri" />值http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous。</span><span class="sxs-lookup"><span data-stu-id="9968d-139">A <see cref="T:System.Uri" /> with the value http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9968d-140">如果用于初始化构造函数的 URI 的值为 <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A>，则 <xref:System.ServiceModel.EndpointAddress.IsAnonymous%2A> 设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="9968d-140">If the value of the URI used to initialize the constructor is the <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A>, then <xref:System.ServiceModel.EndpointAddress.IsAnonymous%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="9968d-141"><xref:System.ServiceModel.EndpointAddress> 是一个与版本无关的类，<xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A> 属性会返回一个采用非特定表示形式的值。</span><span class="sxs-lookup"><span data-stu-id="9968d-141"><xref:System.ServiceModel.EndpointAddress> is a version-neutral class and the <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A> property returns a value is a neutral representation.</span></span> <span data-ttu-id="9968d-142">当您尝试将它写出或转换到某个版本时，它就会转变为该版本的适当值。</span><span class="sxs-lookup"><span data-stu-id="9968d-142">When you write this out or convert this to one version or the other, then it turns into the right value for that version.</span></span>  
  
 <span data-ttu-id="9968d-143">由于目前大量网络技术的广泛应用（例如 NAT、DHCP 和防火墙），许多部署都不能将一个有意义的全局 URI 分配给指定的终结点。</span><span class="sxs-lookup"><span data-stu-id="9968d-143">Due to the range of network technologies currently in widespread use (for example, NAT, DHCP, and firewalls), many deployments cannot assign a meaningful global URI to a given endpoint.</span></span> <span data-ttu-id="9968d-144">若要允许这些*匿名*终结点以启动消息交换模式，并收到了答复，Web 服务寻址规范定义了[URI](http://go.microsoft.com/fwlink/?LinkId=96169)以供不能有一个稳定的终结点解析 URI。</span><span class="sxs-lookup"><span data-stu-id="9968d-144">To allow these *anonymous* endpoints to initiate message exchange patterns and receive replies, the Web Services Addressing specification defines a [URI](http://go.microsoft.com/fwlink/?LinkId=96169) for use by endpoints that cannot have a stable, resolvable URI.</span></span>  
  
 <span data-ttu-id="9968d-145">使用此地址的请求必须提供某种机制，用以发送答复或错误（例如，在相同的传输连接上返回答复）。</span><span class="sxs-lookup"><span data-stu-id="9968d-145">Requests that use this address must provide some mechanism for delivering replies or faults (for example, returning the reply on the same transport connection).</span></span> <span data-ttu-id="9968d-146">此机制可以是请求/答复传输协议（例如 HTTP GET 或 POST）。</span><span class="sxs-lookup"><span data-stu-id="9968d-146">This mechanism can be a request/reply transport protocol (for example, HTTP GET or POST).</span></span> <span data-ttu-id="9968d-147">此 URI 可用作答复消息的目标位置，而不应用作其他情况的目标位置。</span><span class="sxs-lookup"><span data-stu-id="9968d-147">This URI can be used as the destination for reply messages and should not be used as the destination in other circumstances.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#13](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyTo">
      <MemberSignature Language="C#" Value="public void ApplyTo (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyTo(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyTo(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="9968d-148">要分配其标头值的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-148">The <see cref="T:System.ServiceModel.Channels.Message" /> whose header values are being assigned.</span></span></param>
        <summary><span data-ttu-id="9968d-149">将终结点地址的 URI 和属性分配给指定消息的标头值。</span><span class="sxs-lookup"><span data-stu-id="9968d-149">Assigns the URI and properties of the endpoint address to the values of the headers of a specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9968d-150"><xref:System.ServiceModel.EndpointAddress.ApplyTo%28System.ServiceModel.Channels.Message%29> 方法使用当前 <xref:System.ServiceModel.EndpointAddress.Uri%2A> 的 <xref:System.ServiceModel.EndpointAddress> 来设置消息的“To”。</span><span class="sxs-lookup"><span data-stu-id="9968d-150">The <xref:System.ServiceModel.EndpointAddress.ApplyTo%28System.ServiceModel.Channels.Message%29> method sets the "To" of the message with the <xref:System.ServiceModel.EndpointAddress.Uri%2A> of the current <xref:System.ServiceModel.EndpointAddress>.</span></span> <span data-ttu-id="9968d-151">请记住，这里“ApplyTo”的意思是“将此地址应用到消息的‘To’标头”。</span><span class="sxs-lookup"><span data-stu-id="9968d-151">Remember that "ApplyTo" means here "apply this address to the 'To' header of the message".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9968d-152">下面的代码演示如何将终结点地址的 URI 和属性应用到消息的标头。</span><span class="sxs-lookup"><span data-stu-id="9968d-152">The following code shows how to apply the URI and properties of an endpoint address to the headers of a message.</span></span>  
  
 [!code-csharp[EndpointAddress#4](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9968d-153"><paramref name="message" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-153"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9968d-154">要与当前终结点地址进行比较的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-154">The <see cref="T:System.Object" /> to be compared to the current endpoint address.</span></span></param>
        <summary><span data-ttu-id="9968d-155">返回一个值，该值指示指定的对象与当前终结点地址是否相等。</span><span class="sxs-lookup"><span data-stu-id="9968d-155">Returns a value that indicates whether a specified object is equivalent to the current endpoint address.</span></span></summary>
        <returns>
          <span data-ttu-id="9968d-156">如果指定的对象与当前地址相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-156"><see langword="true" /> if the specified object is equivalent to the current address; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#20](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9968d-157">提供当前终结点地址的唯一哈希代码。</span><span class="sxs-lookup"><span data-stu-id="9968d-157">Provides a unique hash code for the current endpoint address.</span></span></summary>
        <returns><span data-ttu-id="9968d-158">当前终结点地址的唯一哈希代码。</span><span class="sxs-lookup"><span data-stu-id="9968d-158">A unique hash code for the current endpoint address.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9968d-159"><xref:System.ServiceModel.EndpointAddress.GetHashCode%2A> 适用于哈希算法和诸如哈希表之类的数据结构。</span><span class="sxs-lookup"><span data-stu-id="9968d-159"><xref:System.ServiceModel.EndpointAddress.GetHashCode%2A> is suitable for use in hashing algorithms and with data structures such as a hash table.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#21](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReaderAtExtensions">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReader GetReaderAtExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlDictionaryReader GetReaderAtExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.GetReaderAtExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReaderAtExtensions () As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlDictionaryReader ^ GetReaderAtExtensions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9968d-160">获取使您可以访问扩展的 XML 字典读取器。</span><span class="sxs-lookup"><span data-stu-id="9968d-160">Gets the XML dictionary reader that provides access to the extensions.</span></span></summary>
        <returns><span data-ttu-id="9968d-161">使您可以访问扩展的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-161">The <see cref="T:System.Xml.XmlDictionaryReader" /> that provides access to the extensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9968d-162">读取器使您可以访问未包含在由 WS-Addressing 定义的终结点引用模型中的信息。</span><span class="sxs-lookup"><span data-stu-id="9968d-162">The reader provides access to the information that is not contained in the model of the endpoint reference defined by WS-Addressing.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#7](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReaderAtMetadata">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReader GetReaderAtMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlDictionaryReader GetReaderAtMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.GetReaderAtMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReaderAtMetadata () As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlDictionaryReader ^ GetReaderAtMetadata();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9968d-163">获取使您可以访问终结点元数据的 XML 字典读取器。</span><span class="sxs-lookup"><span data-stu-id="9968d-163">Gets the XML dictionary reader that provides access to the metadata for an endpoint.</span></span></summary>
        <returns><span data-ttu-id="9968d-164">使您可以访问终结点元数据的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-164">The <see cref="T:System.Xml.XmlDictionaryReader" /> that provides access to the metadata for an endpoint.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#8](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.AddressHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.AddressHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As AddressHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::AddressHeaderCollection ^ Headers { System::ServiceModel::Channels::AddressHeaderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.AddressHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9968d-165">获取生成器可以创建的终结点的地址标头的集合。</span><span class="sxs-lookup"><span data-stu-id="9968d-165">Gets the collection of address headers for the endpoints that the builder can create.</span></span></summary>
        <value><span data-ttu-id="9968d-166">包含终结点地址信息的 <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-166">The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information for the endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#14](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.Identity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identity As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointIdentity ^ Identity { System::ServiceModel::EndpointIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9968d-167">获取用于验证终结点的标识。</span><span class="sxs-lookup"><span data-stu-id="9968d-167">Gets the identity for the endpoint used to authenticate it.</span></span></summary>
        <value><span data-ttu-id="9968d-168">终结点的 <see cref="T:System.ServiceModel.EndpointIdentity" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-168">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9968d-169">提供一个标识，与某个终结点交换消息的其他终结点可以使用该标识对该终结点进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="9968d-169">Provides an identity that enables the authentication of an endpoint by other endpoints that exchange messages with it.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#15](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9968d-170">获取一个值，该值指示终结点是否为匿名。</span><span class="sxs-lookup"><span data-stu-id="9968d-170">Gets a value that indicates whether the endpoint is *anonymous*.</span></span></summary>
        <value>
          <span data-ttu-id="9968d-171">如果终结点为 <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-171"><see langword="true" /> if the endpoint is <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9968d-172">使用此方法可以在将 URI 从 <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A> 手动复制到 <xref:System.ServiceModel.EndpointAddress> 或 <xref:System.ServiceModel.EndpointAddress10> 的 URI 时检查 <xref:System.ServiceModel.EndpointAddressAugust2004>。</span><span class="sxs-lookup"><span data-stu-id="9968d-172">Use this method to check for the <xref:System.ServiceModel.EndpointAddress.AnonymousUri%2A> when manually copying the URI from an <xref:System.ServiceModel.EndpointAddress> to the URI of either a <xref:System.ServiceModel.EndpointAddress10> or a <xref:System.ServiceModel.EndpointAddressAugust2004>.</span></span> <span data-ttu-id="9968d-173">此操作必须执行，因为 <xref:System.ServiceModel.EndpointAddress10> 和 <xref:System.ServiceModel.EndpointAddressAugust2004> 都具有特殊的匿名值。</span><span class="sxs-lookup"><span data-stu-id="9968d-173">This must be done because both <xref:System.ServiceModel.EndpointAddress10> and <xref:System.ServiceModel.EndpointAddressAugust2004> have special anonymous values.</span></span> <span data-ttu-id="9968d-174">如果复制的 URI 是匿名的，则用户必须使用这些值。</span><span class="sxs-lookup"><span data-stu-id="9968d-174">Users must use these values if the URI being copied is anonymous.</span></span>  
  
 <span data-ttu-id="9968d-175">由于目前大量网络技术的广泛应用（例如 NAT、DHCP 和防火墙），许多部署都不能将一个有意义的全局 URI 分配给指定的终结点。</span><span class="sxs-lookup"><span data-stu-id="9968d-175">Due to the range of network technologies currently in widespread use (for example, NAT, DHCP, and firewalls), many deployments cannot assign a meaningful global URI to a given endpoint.</span></span> <span data-ttu-id="9968d-176">若要允许这些*匿名*终结点以启动消息交换模式，并收到了答复，Web 服务寻址规范定义了[URI](http://go.microsoft.com/fwlink/?LinkId=96169)以供不能有一个稳定的终结点解析 URI。</span><span class="sxs-lookup"><span data-stu-id="9968d-176">To allow these *anonymous* endpoints to initiate message exchange patterns and receive replies, the Web Services Addressing specification defines a [URI](http://go.microsoft.com/fwlink/?LinkId=96169) for use by endpoints that cannot have a stable, resolvable URI.</span></span>  
  
 <span data-ttu-id="9968d-177">使用此地址的请求必须提供某种机制，用以发送答复或错误（例如，在相同的传输连接上返回答复）。</span><span class="sxs-lookup"><span data-stu-id="9968d-177">Requests that use this address must provide some mechanism for delivering replies or faults (for example, returning the reply on the same transport connection).</span></span> <span data-ttu-id="9968d-178">此机制可以是请求/答复传输协议（例如 HTTP GET 或 POST）。</span><span class="sxs-lookup"><span data-stu-id="9968d-178">This mechanism can be a request/reply transport protocol (for example, HTTP GET or POST).</span></span> <span data-ttu-id="9968d-179">此 URI 可用作答复消息的目标位置，而不应用作其他情况的目标位置。</span><span class="sxs-lookup"><span data-stu-id="9968d-179">This URI can be used as the destination for reply messages and should not be used as the destination in other circumstances.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#16](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNone">
      <MemberSignature Language="C#" Value="public bool IsNone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNone" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.IsNone" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNone As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNone { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9968d-180">获取一个值，该值指示终结点 URI 是否为 <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-180">Gets a value that indicates whether the URI for the endpoint is the <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</span></span></summary>
        <value>
          <span data-ttu-id="9968d-181">如果终结点 URI 是 <see langword="true" />，则为 <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-181"><see langword="true" /> if the URI of the endpoint is <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9968d-182">使用此方法可以在将 URI 从 <xref:System.ServiceModel.EndpointAddress.NoneUri%2A> 手动复制到 <xref:System.ServiceModel.EndpointAddress> 或 <xref:System.ServiceModel.EndpointAddress10> 的 URI 时检查 <xref:System.ServiceModel.EndpointAddressAugust2004>。</span><span class="sxs-lookup"><span data-stu-id="9968d-182">Use this method to check for the <xref:System.ServiceModel.EndpointAddress.NoneUri%2A> when manually copying the URI from an <xref:System.ServiceModel.EndpointAddress> to the URI of either a <xref:System.ServiceModel.EndpointAddress10> or a <xref:System.ServiceModel.EndpointAddressAugust2004>.</span></span> <span data-ttu-id="9968d-183">此操作必须执行，因为 <xref:System.ServiceModel.EndpointAddress10> 和 <xref:System.ServiceModel.EndpointAddressAugust2004> 都具有特殊的 None URI 值。</span><span class="sxs-lookup"><span data-stu-id="9968d-183">This must be done because both <xref:System.ServiceModel.EndpointAddress10> and <xref:System.ServiceModel.EndpointAddressAugust2004> have special none URI values.</span></span> <span data-ttu-id="9968d-184">如果复制的 URI 是 None，则用户必须使用这些值。</span><span class="sxs-lookup"><span data-stu-id="9968d-184">Users must use these values if the URI being copied is none.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#17](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoneUri">
      <MemberSignature Language="C#" Value="public static Uri NoneUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Uri NoneUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.NoneUri" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NoneUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Uri ^ NoneUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9968d-185">获取一个与版本无关的 URI，用作不得向其发送消息的终结点地址。</span><span class="sxs-lookup"><span data-stu-id="9968d-185">Gets a version-neutral URI used for the address of an endpoint to which a message must not be sent.</span></span></summary>
        <value><span data-ttu-id="9968d-186">A<see cref="T:System.Uri" />值http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None。</span><span class="sxs-lookup"><span data-stu-id="9968d-186">A <see cref="T:System.Uri" /> with the value http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9968d-187">如果用于初始化构造函数的 URI 的值为 <xref:System.ServiceModel.EndpointAddress.NoneUri%2A>，则 <xref:System.ServiceModel.EndpointAddress.IsNone%2A> 设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="9968d-187">If the value of the URI used to initialize the constructor is the <xref:System.ServiceModel.EndpointAddress.NoneUri%2A>, then <xref:System.ServiceModel.EndpointAddress.IsNone%2A> is set to `true`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#18](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.ServiceModel.EndpointAddress address1, System.ServiceModel.EndpointAddress address2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.ServiceModel.EndpointAddress address1, class System.ServiceModel.EndpointAddress address2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (address1 As EndpointAddress, address2 As EndpointAddress) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::ServiceModel::EndpointAddress ^ address1, System::ServiceModel::EndpointAddress ^ address2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address1" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="address2" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address1"><span data-ttu-id="9968d-188">要比较的 <see cref="T:System.ServiceModel.EndpointAddress" /> 对象之一。</span><span class="sxs-lookup"><span data-stu-id="9968d-188">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</span></span></param>
        <param name="address2"><span data-ttu-id="9968d-189">要比较的 <see cref="T:System.ServiceModel.EndpointAddress" /> 对象之一。</span><span class="sxs-lookup"><span data-stu-id="9968d-189">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</span></span></param>
        <summary><span data-ttu-id="9968d-190">返回一个值，该值指示指定的终结点地址是否不相等。</span><span class="sxs-lookup"><span data-stu-id="9968d-190">Returns a value that indicates whether specified endpoint addresses are not equivalent.</span></span></summary>
        <returns>
          <span data-ttu-id="9968d-191">如果终结点地址等同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-191"><see langword="true" /> if the endpoint addresses are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9968d-192">此运算符的等效方法是<xref:System.ServiceModel.EndpointAddress.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9968d-192">The equivalent method for this operator is <xref:System.ServiceModel.EndpointAddress.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
## Examples  
 [!code-csharp[EndpointAddress#5](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.ServiceModel.EndpointAddress address1, System.ServiceModel.EndpointAddress address2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.ServiceModel.EndpointAddress address1, class System.ServiceModel.EndpointAddress address2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (address1 As EndpointAddress, address2 As EndpointAddress) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::ServiceModel::EndpointAddress ^ address1, System::ServiceModel::EndpointAddress ^ address2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address1" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="address2" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address1"><span data-ttu-id="9968d-193">要比较的 <see cref="T:System.ServiceModel.EndpointAddress" /> 对象之一。</span><span class="sxs-lookup"><span data-stu-id="9968d-193">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</span></span></param>
        <param name="address2"><span data-ttu-id="9968d-194">要比较的 <see cref="T:System.ServiceModel.EndpointAddress" /> 对象之一。</span><span class="sxs-lookup"><span data-stu-id="9968d-194">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</span></span></param>
        <summary><span data-ttu-id="9968d-195">返回一个值，该值指示指定的终结点地址是否不相等。</span><span class="sxs-lookup"><span data-stu-id="9968d-195">Returns a value that indicates whether specified endpoint addresses are not equivalent.</span></span></summary>
        <returns>
          <span data-ttu-id="9968d-196">如果终结点地址不等同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-196"><see langword="true" /> if the endpoint addresses are not equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="9968d-197">此运算符的等效方法是<xref:System.ServiceModel.EndpointAddress.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9968d-197">The equivalent method for this operator is <xref:System.ServiceModel.EndpointAddress.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
## Examples  
 [!code-csharp[EndpointAddress#22](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadFrom">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9968d-198">从指定的 XML 读取器读取终结点地址。</span><span class="sxs-lookup"><span data-stu-id="9968d-198">Reads an endpoint address from a specified XML reader.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadFrom (reader As XmlDictionaryReader) As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="9968d-199">从中获取终结点地址的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-199">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</span></span></param>
        <summary><span data-ttu-id="9968d-200">从指定的 XML 读取器读取终结点地址。</span><span class="sxs-lookup"><span data-stu-id="9968d-200">Reads an endpoint address from a specified XML dictionary reader.</span></span></summary>
        <returns><span data-ttu-id="9968d-201">从 XML 字典读取器读取的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-201">The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML dictionary reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9968d-202">下面的代码演示如何从 XML 字典读取器读取终结点地址。</span><span class="sxs-lookup"><span data-stu-id="9968d-202">The following code shows how to read an endpoint address from a XML dictionary reader.</span></span>  
  
 [!code-csharp[EndpointAddress#10](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="addressingVersion"><span data-ttu-id="9968d-203">当前终结点地址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-203">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span></span></param>
        <param name="reader"><span data-ttu-id="9968d-204">从中获取终结点地址的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-204">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</span></span></param>
        <summary><span data-ttu-id="9968d-205">从指定的 XML 读取器读取指定地址版本的终结点地址。</span><span class="sxs-lookup"><span data-stu-id="9968d-205">Reads an endpoint address for a specified address version from a specified XML dictionary reader.</span></span></summary>
        <returns><span data-ttu-id="9968d-206">从 XML 字典读取器读取的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-206">The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML dictionary reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#25](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="addressingVersion"><span data-ttu-id="9968d-207">当前终结点地址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-207">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span></span></param>
        <param name="reader"><span data-ttu-id="9968d-208">从中获取终结点地址的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-208">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</span></span></param>
        <summary><span data-ttu-id="9968d-209">从指定的 XML 读取器读取指定地址版本的终结点地址。</span><span class="sxs-lookup"><span data-stu-id="9968d-209">Reads an endpoint address for a specified address version from a specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="9968d-210">从 XML 读取器读取的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-210">The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9968d-211">下面的代码演示如何从 XML 字典读取器读取终结点地址。</span><span class="sxs-lookup"><span data-stu-id="9968d-211">The following code shows how to read in an endpoint address from an XML dictionary reader.</span></span>  
  
 [!code-csharp[EndpointAddress#12](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.Xml.XmlDictionaryReader reader, System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString ns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.Xml.XmlDictionaryReader reader, class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadFrom (reader As XmlDictionaryReader, localName As XmlDictionaryString, ns As XmlDictionaryString) As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::Xml::XmlDictionaryReader ^ reader, System::Xml::XmlDictionaryString ^ localName, System::Xml::XmlDictionaryString ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="ns" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="9968d-212">从中获取终结点地址的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-212">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</span></span></param>
        <param name="localName"><span data-ttu-id="9968d-213">一个 <see cref="T:System.Xml.XmlDictionaryString" />，其中包含要包含终结点地址的 XML 节点的本地名称。</span><span class="sxs-lookup"><span data-stu-id="9968d-213">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the local name for the XML node to contain the endpoint address.</span></span></param>
        <param name="ns"><span data-ttu-id="9968d-214">一个 <see cref="T:System.Xml.XmlDictionaryString" />，其中包含要包含终结点地址的 XML 节点的命名空间。</span><span class="sxs-lookup"><span data-stu-id="9968d-214">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</span></span></param>
        <summary><span data-ttu-id="9968d-215">从指定的 XML 读取器读取具有指定限定名的终结点地址。</span><span class="sxs-lookup"><span data-stu-id="9968d-215">Reads an endpoint address with a specified qualified name from a specified XML dictionary reader.</span></span></summary>
        <returns><span data-ttu-id="9968d-216">从 XML 字典读取器中读取的具有限定名的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-216">The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML dictionary reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9968d-217">下面的代码演示如何从 XML 字典读取器读取终结点地址。</span><span class="sxs-lookup"><span data-stu-id="9968d-217">The following code shows how to read in an endpoint address from an XML dictionary reader.</span></span>  
  
 [!code-csharp[EndpointAddress#11](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryReader reader, System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString ns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryReader reader, class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryReader ^ reader, System::Xml::XmlDictionaryString ^ localName, System::Xml::XmlDictionaryString ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="ns" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <param name="addressingVersion"><span data-ttu-id="9968d-218">当前终结点地址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-218">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span></span></param>
        <param name="reader"><span data-ttu-id="9968d-219">从中获取终结点地址的 <see cref="T:System.Xml.XmlDictionaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-219">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</span></span></param>
        <param name="localName"><span data-ttu-id="9968d-220">包含要包含终结点地址的 XML 节点的本地名称。</span><span class="sxs-lookup"><span data-stu-id="9968d-220">Contains the local name for the XML node to contain the endpoint address.</span></span></param>
        <param name="ns"><span data-ttu-id="9968d-221">包含要包含终结点地址的 XML 节点的命名空间。</span><span class="sxs-lookup"><span data-stu-id="9968d-221">Contains the namespace for the XML node to contain the endpoint address.</span></span></param>
        <summary><span data-ttu-id="9968d-222">从指定的 XML 字典读取器读取具有指定限定名的指定地址版本的终结点地址。</span><span class="sxs-lookup"><span data-stu-id="9968d-222">Reads an endpoint address for a specified address version with a specified qualified name from a specified XML dictionary reader.</span></span></summary>
        <returns><span data-ttu-id="9968d-223">从 XML 读取器中读取的具有限定名的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-223">The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#26](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadFrom">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointAddress ReadFrom (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlReader reader, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointAddress ReadFrom(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlReader reader, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointAddress ^ ReadFrom(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlReader ^ reader, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="addressingVersion"><span data-ttu-id="9968d-224">当前终结点地址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-224">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span></span></param>
        <param name="reader"><span data-ttu-id="9968d-225">从中获取终结点地址的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-225">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</span></span></param>
        <param name="localName"><span data-ttu-id="9968d-226">包含要包含终结点地址的 XML 节点的本地名称。</span><span class="sxs-lookup"><span data-stu-id="9968d-226">Contains the local name for the XML node to contain the endpoint address.</span></span></param>
        <param name="ns"><span data-ttu-id="9968d-227">包含要包含终结点地址的 XML 节点的命名空间。</span><span class="sxs-lookup"><span data-stu-id="9968d-227">Contains the namespace for the XML node to contain the endpoint address.</span></span></param>
        <summary><span data-ttu-id="9968d-228">从指定的 XML 读取器读取具有指定限定名的指定地址版本的终结点地址。</span><span class="sxs-lookup"><span data-stu-id="9968d-228">Reads an endpoint address for a specified address version with a specified qualified name from a specified XML reader.</span></span></summary>
        <returns><span data-ttu-id="9968d-229">从 XML 读取器中读取的具有限定名的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-229">The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#26](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9968d-230">返回终结点地址中包含的 URI 的规范字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="9968d-230">Returns a canonical string representation of the URI that is contained in the endpoint address.</span></span></summary>
        <returns><span data-ttu-id="9968d-231">标识终结点的 URI。</span><span class="sxs-lookup"><span data-stu-id="9968d-231">The URI that identifies the endpoint.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#27](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointAddress.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9968d-232">获取终结点的 URI。</span><span class="sxs-lookup"><span data-stu-id="9968d-232">Gets the URI for the endpoint.</span></span></summary>
        <value><span data-ttu-id="9968d-233">终结点的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-233">The <see cref="T:System.Uri" /> for the endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9968d-234">URI 可标识发送消息的位置。</span><span class="sxs-lookup"><span data-stu-id="9968d-234">The URI identifies where a message is being sent.</span></span> <span data-ttu-id="9968d-235">若要设置终结点地址的 URI，请使用 <xref:System.ServiceModel.EndpointAddressBuilder.Uri%2A>。</span><span class="sxs-lookup"><span data-stu-id="9968d-235">To set a URI for an endpoint address, use <xref:System.ServiceModel.EndpointAddressBuilder.Uri%2A>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[EndpointAddress#19](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteContentsTo">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9968d-236">将节点的所有子节点保存到指定的 XML 编写器中。</span><span class="sxs-lookup"><span data-stu-id="9968d-236">Saves all the child nodes of the node to the XML writer specified.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteContentsTo">
      <MemberSignature Language="C#" Value="public void WriteContentsTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteContentsTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteContentsTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="addressingVersion"><span data-ttu-id="9968d-237">当前终结点地址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-237">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span></span></param>
        <param name="writer"><span data-ttu-id="9968d-238">终结点地址所保存到的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-238">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</span></span></param>
        <summary><span data-ttu-id="9968d-239">将节点的所有子节点保存到指定的 XML 字典编写器中。</span><span class="sxs-lookup"><span data-stu-id="9968d-239">Saves all the child nodes of the node to the XML dictionary writer specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#29](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9968d-240"><paramref name="writer" /> 或 <paramref name="addressingVersion" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-240"><paramref name="writer" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteContentsTo">
      <MemberSignature Language="C#" Value="public void WriteContentsTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteContentsTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteContentsTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="addressingVersion"><span data-ttu-id="9968d-241">当前终结点地址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-241">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span></span></param>
        <param name="writer"><span data-ttu-id="9968d-242">终结点地址所保存到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-242">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</span></span></param>
        <summary><span data-ttu-id="9968d-243">将节点的所有子节点保存到指定的 XML 编写器中。</span><span class="sxs-lookup"><span data-stu-id="9968d-243">Saves all the child nodes of the node to the XML writer specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#30](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9968d-244"><paramref name="writer" /> 或 <paramref name="addressingVersion" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-244"><paramref name="writer" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteTo">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9968d-245">将指定版本的当前终结点地址保存到 XML 编写器或 XML 字典编写器。</span><span class="sxs-lookup"><span data-stu-id="9968d-245">Saves the current endpoint address of a specified version to an XML writer or an XML dictionary writer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="addressingVersion"><span data-ttu-id="9968d-246">当前终结点地址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-246">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span></span></param>
        <param name="writer"><span data-ttu-id="9968d-247">终结点地址所保存到的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-247">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</span></span></param>
        <summary><span data-ttu-id="9968d-248">将指定版本的当前终结点地址保存到指定的 XML 字典编写器。</span><span class="sxs-lookup"><span data-stu-id="9968d-248">Saves the current endpoint address of a specified version to a specified XML dictionary writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#31](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9968d-249"><paramref name="writer" /> 或 <paramref name="addressingVersion" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-249"><paramref name="writer" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="addressingVersion"><span data-ttu-id="9968d-250">当前终结点地址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-250">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span></span></param>
        <param name="writer"><span data-ttu-id="9968d-251">终结点地址所保存到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-251">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</span></span></param>
        <summary><span data-ttu-id="9968d-252">将指定版本的当前终结点地址保存到指定的 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="9968d-252">Saves the current endpoint address of a specified version to a specified XML writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#32](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9968d-253"><paramref name="writer" /> 或 <paramref name="addressingVersion" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-253"><paramref name="writer" /> or <paramref name="addressingVersion" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryWriter writer, System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString ns);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryWriter writer, class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString ns) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryWriter ^ writer, System::Xml::XmlDictionaryString ^ localName, System::Xml::XmlDictionaryString ^ ns);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlDictionaryWriter writer, System.Xml.XmlDictionaryString localname, System.Xml.XmlDictionaryString ns);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlDictionaryWriter writer, class System.Xml.XmlDictionaryString localname, class System.Xml.XmlDictionaryString ns) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlDictionaryWriter ^ writer, System::Xml::XmlDictionaryString ^ localname, System::Xml::XmlDictionaryString ^ ns);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" Index="0" />
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" Index="1" />
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="localname" Type="System.Xml.XmlDictionaryString" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.Xml.XmlDictionaryString" Index="3" />
      </Parameters>
      <Docs>
        <param name="addressingVersion"><span data-ttu-id="9968d-254">当前终结点地址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-254">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span></span></param>
        <param name="writer"><span data-ttu-id="9968d-255">终结点地址所保存到的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-255">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</span></span></param>
        <param name="localname">To be added.</param>
        <param name="ns"><span data-ttu-id="9968d-256"><see cref="T:System.Xml.XmlDictionaryString" />，其中包含要包含终结点地址的 XML 节点的命名空间。</span><span class="sxs-lookup"><span data-stu-id="9968d-256">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</span></span></param>
        <summary><span data-ttu-id="9968d-257">使用指定的命名空间和本地名称将指定版本的当前终结点地址保存到 XML 字典编写器。</span><span class="sxs-lookup"><span data-stu-id="9968d-257">Saves the current endpoint address of a specified version to an XML dictionary writer with a specified namespace and local name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#33](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9968d-258"><paramref name="writer" /> 或 <paramref name="addressingVersion" /> 或 <paramref name="localName" /> 或 <paramref name="ns" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-258"><paramref name="writer" /> or <paramref name="addressingVersion" /> or <paramref name="localName" /> or <paramref name="ns" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlWriter writer, string localName, string ns);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlWriter writer, string localName, string ns) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter,System.String,System.String)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlWriter ^ writer, System::String ^ localName, System::String ^ ns);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public void WriteTo (System.ServiceModel.Channels.AddressingVersion addressingVersion, System.Xml.XmlWriter writer, string localname, string ns);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.ServiceModel.Channels.AddressingVersion addressingVersion, class System.Xml.XmlWriter writer, string localname, string ns) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::ServiceModel::Channels::AddressingVersion ^ addressingVersion, System::Xml::XmlWriter ^ writer, System::String ^ localname, System::String ^ ns);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressingVersion" Type="System.ServiceModel.Channels.AddressingVersion" Index="0" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="1" />
        <Parameter Name="localName" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="localname" Type="System.String" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="addressingVersion"><span data-ttu-id="9968d-259">当前终结点地址的 <see cref="T:System.ServiceModel.Channels.AddressingVersion" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-259">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</span></span></param>
        <param name="writer"><span data-ttu-id="9968d-260">终结点地址所保存到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-260">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</span></span></param>
        <param name="localname">To be added.</param>
        <param name="ns"><span data-ttu-id="9968d-261"><see cref="T:System.Xml.XmlDictionaryString" />，其中包含要包含终结点地址的 XML 节点的命名空间。</span><span class="sxs-lookup"><span data-stu-id="9968d-261">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</span></span></param>
        <summary><span data-ttu-id="9968d-262">使用指定的命名空间和本地名称将指定版本的当前终结点地址保存到 XML 编写器。</span><span class="sxs-lookup"><span data-stu-id="9968d-262">Saves the current endpoint address of a specified version to an XML writer with a specified namespace and local name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[EndpointAddress#33](~/samples/snippets/csharp/VS_Snippets_CFX/endpointaddress/cs/snippets.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9968d-263"><paramref name="writer" /> 或 <paramref name="addressingVersion" /> 或 <paramref name="localName" /> 或 <paramref name="ns" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9968d-263"><paramref name="writer" /> or <paramref name="addressingVersion" /> or <paramref name="localName" /> or <paramref name="ns" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>