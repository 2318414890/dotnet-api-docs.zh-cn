<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageHeaderException.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac552636a684489a9b2f3801f597fda6c95da186d3c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52636a684489a9b2f3801f597fda6c95da186d3c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.MessageHeaderException">
          <source>The exception that is thrown when the expectations regarding headers of a SOAP message are not satisfied when the message is processed.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>This exception is typically thrown when there are too many headers or headers are missing from the message.</source>
          <target state="translated">通常，当消息中存在太多标头或缺少标头时都会引发此异常。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>This can include infrastructure headers such as the Action and Reliable Message headers.</source>
          <target state="translated">这可以包括基础结构标头，如“操作和可靠消息”标头。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>This exception derives from <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>, which in turn derives from <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>.</source>
          <target state="translated">此异常从 <ph id="ph1">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph> 派生，而后者则从 <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> 派生。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> class represents a class of recoverable errors that may be thrown during communication between endpoints and that robust <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client and service applications are expected to handle.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> 类表示在终结点间进行通信时可能引发的一类可恢复的错误，并且需要可靠的 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 客户端和服务应用程序来进行处理。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>To prevent the more generic <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> handler from catching the more specific <ph id="ph2">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>, catch this exception prior to handling <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>.</source>
          <target state="translated">若要阻止更为通用的 <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> 处理程序捕捉更为具体的 <ph id="ph2">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>，请在处理 <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> 之前捕捉此异常。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.MessageHeaderException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>If you want to pass an error message to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">如果要将错误消息传递给用户，请使用 <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.String%29&gt;</ph> 构造函数。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>If you want to pass an error message and a reference to the inner exception that is the cause of the exception to the user, use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> constructor.</source>
          <target state="translated">如果要将错误消息和内部异常（导致此异常的原因）的引用传递给用户，请使用 <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.String%2CSystem.Exception%29&gt;</ph> 构造函数。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.MessageHeaderException">
          <source>If you want to pass serialization information and streaming context, use the <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29&gt;</ph> constructor.</source>
          <target state="translated">如果要传递序列化信息和流上下文，请使用 <ph id="ph1">&lt;xref:System.ServiceModel.MessageHeaderException.%23ctor%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29&gt;</ph> 构造函数。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
          <source>The message carried in the exception.</source>
          
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class with the specified message.</source>
          
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
          <source>Use this constructor when you want to pass an error message to the user.</source>
          <target state="translated">当您要将错误消息传递给用户时，请使用此构造函数。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
          <source>The content of the message parameter should be understandable to the intended users.</source>
          <target state="translated">消息参数的内容应该是预期用户可以理解的。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized object data about the exception being thrown.</source>
          
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains contextual information about the source or destination.</source>
          
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class used to deserialize data into a <ph id="ph2">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> object.</source>
          
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to restore the exception object transmitted over a stream.</source>
          <target state="translated">在反序列化过程中调用此构造函数以还原通过流传输的异常对象。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
          <source>The exception message.</source>
          
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiple message header is a duplicate; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no message headers.</source>
          
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message and a value that indicates whether the message header is a duplicate or is missing.</source>
          
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>The exception message.</source>
          
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that contains the inner exception that caused the exception.</source>
          
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message and the inner exception that caused the exception.</source>
          
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>Use this constructor when you want to pass an error message and information about an inner exception up to the user.</source>
          <target state="translated">当您要将错误消息和有关内部异常的信息传递给用户时，请使用此构造函数。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>The content of the message parameter should be understandable to the intended users.</source>
          <target state="translated">消息参数的内容应该是预期用户可以理解的。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">因前一个异常而直接引发的异常可以在 <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 属性中包含对前一个异常的引用。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor or a <ph id="ph2">`null`</ph> reference (<ph id="ph3">`Nothing`</ph> in Visual Basic) if the <ph id="ph4">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> 属性返回传递到构造函数中的相同值，或者如果 <ph id="ph2">`null`</ph> 属性没有向构造函数提供内部异常值，则返回 <ph id="ph3">`Nothing`</ph> 引用（在 Visual Basic 中为 <ph id="ph4">&lt;xref:System.Exception.InnerException%2A&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
          <source>The exception message.</source>
          
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
          <source>The name of the message header.</source>
          
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
          <source>The namespace of the message header.</source>
          
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message, header name and namespace.</source>
          
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source>The exception message.</source>
          
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source>The name of the message header.</source>
          
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source>The namespace of the message header.</source>
          
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiple message header is a duplicate; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no message headers.</source>
          
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message, header name and namespace, and a value that indicates whether the message header is a duplicate or is missing.</source>
          
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>The exception message.</source>
          
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>The name of the message header.</source>
          
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>The namespace of the message header.</source>
          
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that contains the inner exception that caused the exception.</source>
          
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message, header name and namespace, and the inner exception that caused the exception.</source>
          
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>The exception message.</source>
          
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>The name of the message header.</source>
          
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>The namespace of the message header.</source>
          
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiple message header is a duplicate; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no message headers.</source>
          
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> that contains the inner exception that caused the exception.</source>
          
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.MessageHeaderException" /&gt;</ph> class using the specified message, header name and namespace, a value that indicates whether the message header is a duplicate or is missing, and the inner exception that caused the exception.</source>
          
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageHeaderException.HeaderName">
          <source>Gets the name of the SOAP header that caused the exception.</source>
          
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageHeaderException.HeaderName">
          <source>The name of the SOAP header.</source>
          <target state="translated">SOAP 标头的名称。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
          <source>Gets the namespace of the SOAP header that caused the exception.</source>
          
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
          <source>The namespace of the SOAP header.</source>
          <target state="translated">SOAP 标头的命名空间。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
          <source>Gets a value that indicates whether there are multiple message headers or no message headers.</source>
          
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiple message header is a duplicate; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no message headers.</source>
          <target state="translated">如果多个消息头是重复的，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果没有消息头，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>