<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EndpointIdentity.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9575d09f-9d72-4690-889e-b83c405ca4563f59815b9ac3e590686fd707bf2479c1e82eea02.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f59815b9ac3e590686fd707bf2479c1e82eea02</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">254e16ae65e82f4aa59360cd8572b36b6b5b2f80</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/05/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.EndpointIdentity">
          <source>An abstract class that when implemented provides an identity that enables the authentication of an endpoint by clients that exchange messages with it.</source>
          <target state="translated">一个抽象类，实现此类后可提供一个标识，与终结点交换消息的客户端可以使用该标识对终结点进行身份验证。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.EndpointIdentity">
          <source>The value of the identity for an endpoint can be set with constructors of <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph>, where its value can also be accessed as a read-only <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress.Identity%2A&gt;</ph> property.</source>
          <target state="translated">可使用 <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress&gt;</ph> 的构造函数来设置终结点标识的值，在此构造函数中，该值可作为只读 <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress.Identity%2A&gt;</ph> 属性进行访问。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.#ctor">
          <source>Creates an empty <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> instance.</source>
          <target state="translated">创建一个空的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source>The name for the DNS identity.</source>
          <target state="translated">DNS 标识的名称。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source>Creates a DNS identity with a specified DNS name.</source>
          <target state="translated">使用指定的 DNS 名称创建 DNS 标识。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source>A DNS <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="dnsName" /&gt;</ph>.</source>
          <target state="translated">一个与特定的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> 关联的 DNS <ph id="ph2">&lt;paramref name="dnsName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain a DNS claim that represents this identity.</source>
          <target state="translated">通过此标识连接到终结点的安全 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 客户端将验证由服务器提供的声明是否包含一个表示此标识的 DNS 声明。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source>This static method creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.DnsEndpointIdentity&gt;</ph> by calling its constructor <ph id="ph2">&lt;xref:System.ServiceModel.DnsEndpointIdentity.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">此静态方法通过调用其构造函数 <ph id="ph1">&lt;xref:System.ServiceModel.DnsEndpointIdentity&gt;</ph> 创建 <ph id="ph2">&lt;xref:System.ServiceModel.DnsEndpointIdentity.%23ctor%2A&gt;</ph> 的实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">下面的代码演示如何调用此方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
          <source><ph id="ph1">&lt;paramref name="dnsName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dnsName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Claims.Claim" /&gt;</ph> used to create the new identity.</source>
          <target state="translated">一个用于创建新标识的 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Claims.Claim" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source>Creates an identity with the specified claim.</source>
          <target state="translated">使用指定的声明创建一个标识。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="identity" /&gt;</ph>.</source>
          <target state="translated">一个与特定的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> 关联的 <ph id="ph2">&lt;paramref name="identity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain the identity claim used to construct this identity.</source>
          <target state="translated">通过此标识连接到终结点的安全 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 将验证由服务器提供的声明是否包含一个用于构造此标识的标识声明。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source>This method can create an identity of type <ph id="ph1">&lt;xref:System.ServiceModel.DnsEndpointIdentity&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.SpnEndpointIdentity&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.UpnEndpointIdentity&gt;</ph>, or <ph id="ph4">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph>.</source>
          <target state="translated">此方法能够创建类型 <ph id="ph1">&lt;xref:System.ServiceModel.DnsEndpointIdentity&gt;</ph>、<ph id="ph2">&lt;xref:System.ServiceModel.SpnEndpointIdentity&gt;</ph>、<ph id="ph3">&lt;xref:System.ServiceModel.UpnEndpointIdentity&gt;</ph> 或 <ph id="ph4">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph> 的标识。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">下面的代码演示如何调用此方法。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
          <source><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identity" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.EndpointIdentity">
          <source>Creates an RSA identity.</source>
          <target state="translated">创建一个 RSA 标识。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.EndpointIdentity">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain a claim that contains the RSA public key used to construct this identity.</source>
          <target state="translated">通过此标识连接到终结点的安全 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 客户端将验证在服务器提供的众多声明中是否具有一个包含用于构建此标识的 RSA 公钥的声明。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.EndpointIdentity">
          <source>One of these static methods creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph> by calling its constructor <ph id="ph2">&lt;xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">这些静态方法之一通过调用其构造函数 <ph id="ph1">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph> 创建 <ph id="ph2">&lt;xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A&gt;</ph> 的实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> that contains the certificate for the RSA identity.</source>
          <target state="translated">一个包含 RSA 标识的证书的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Creates an RSA identity with the specified X.509 certificate.</source>
          <target state="translated">使用指定的 X.509 证书创建一个 RSA 标识。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>An RSA <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="certificate" /&gt;</ph>.</source>
          <target state="translated">一个与指定的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> 关联的 <ph id="ph2">&lt;paramref name="certificate" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain a claim that contains the RSA public key obtained from the certificate used to construct this identity.</source>
          <target state="translated">通过此标识连接到终结点的安全 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 客户端将验证服务器提供的声明中是否具有一个包含从证书获取的用于构造此标识的 RSA 公钥的声明。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>This static method creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph> by calling its constructor, <ph id="ph2">&lt;xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">此静态方法通过调用其构造函数 <ph id="ph1">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph> 创建 <ph id="ph2">&lt;xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A&gt;</ph> 的实例。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">下面的代码演示如何调用此方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> is not an RSA certificate.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> 不是一个 RSA 证书。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
          <source>The public key for the RSA identity.</source>
          <target state="translated">RSA 标识的公钥。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
          <source>Creates an RSA identity with the specified public key.</source>
          <target state="translated">使用指定的公钥创建一个 RSA 标识。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
          <source>An RSA <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="publicKey" /&gt;</ph>.</source>
          <target state="translated">一个与指定的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> 关联的 <ph id="ph2">&lt;paramref name="publicKey" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain a claim that contains the RSA public key used to construct this identity.</source>
          <target state="translated">通过此标识连接到终结点的安全 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 客户端将验证在服务器提供的众多声明中是否具有一个包含用于构建此标识的 RSA 公钥的声明。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
          <source>This static method creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph> by calling its constructor, <ph id="ph2">&lt;xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">此静态方法通过调用其构造函数 <ph id="ph1">&lt;xref:System.ServiceModel.RsaEndpointIdentity&gt;</ph> 创建 <ph id="ph2">&lt;xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A&gt;</ph> 的实例。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
          <source><ph id="ph1">&lt;paramref name="publicKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="publicKey" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>The name for the SPN identity.</source>
          <target state="translated">SPN 标识的名称。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>Creates a server principal name (SPN) identity with a specified name.</source>
          <target state="translated">使用指定名称创建服务器主体名称 (SPN) 标识。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>An SPN <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="spnName" /&gt;</ph>.</source>
          <target state="translated">一个与特定的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> 关联的 SPN <ph id="ph2">&lt;paramref name="spnName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity uses the SPN when performing SSPI authentication with the endpoint.</source>
          <target state="translated">通过此标识连接到终结点的安全 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 客户端在使用终结点进行 SSPI 身份验证时将使用 SPN。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>This static method creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.SpnEndpointIdentity&gt;</ph> by calling its constructor, <ph id="ph2">&lt;xref:System.ServiceModel.SpnEndpointIdentity.%23ctor%2A&gt;</ph>, using <ph id="ph3">`spnName`</ph> as the input parameter.</source>
          <target state="translated">此静态方法通过调用其构造函数 <ph id="ph1">&lt;xref:System.ServiceModel.SpnEndpointIdentity&gt;</ph>，并使用 <ph id="ph2">&lt;xref:System.ServiceModel.SpnEndpointIdentity.%23ctor%2A&gt;</ph> 作为输入参数创建 <ph id="ph3">`spnName`</ph> 的实例。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>If <ph id="ph1">`spnName`</ph> is specified with an empty string, authentication falls back from Kerberos to NTLM if possible.</source>
          <target state="translated">如果使用空字符串指定 <ph id="ph1">`spnName`</ph>，则一旦可能，身份验证将从 Kerberos 回退到 NTLM。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A&gt;</ph> is <ph id="ph2">`false`</ph>, authentication fails.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A&gt;</ph> 为 <ph id="ph2">`false`</ph>，则身份验证失败。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">下面的代码演示如何调用此方法。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
          <source><ph id="ph1">&lt;paramref name="spnName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="spnName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>The name for the UPN identity.</source>
          <target state="translated">UPN 标识的名称。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>Creates a user principal name (UPN) identity with a specified name.</source>
          <target state="translated">使用指定名称创建用户主体名称 (UPN) 标识。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>A UPN <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="upnName" /&gt;</ph>.</source>
          <target state="translated">一个与指定的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> 关联的 UPN <ph id="ph2">&lt;paramref name="upnName" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity uses the UPN when performing SSPI authentication with the endpoint.</source>
          <target state="translated">通过此标识连接到终结点的安全 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 客户端在使用终结点进行 SSPI 身份验证时将使用 UPN。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>This static method creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.UpnEndpointIdentity&gt;</ph> by calling its constructor, <ph id="ph2">&lt;xref:System.ServiceModel.UpnEndpointIdentity.%23ctor%2A&gt;</ph>, using <ph id="ph3">`upnName`</ph> as the input parameter.</source>
          <target state="translated">此静态方法通过调用其构造函数 <ph id="ph1">&lt;xref:System.ServiceModel.UpnEndpointIdentity&gt;</ph>，并使用 <ph id="ph2">&lt;xref:System.ServiceModel.UpnEndpointIdentity.%23ctor%2A&gt;</ph> 作为输入参数创建 <ph id="ph3">`upnName`</ph> 的实例。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>If <ph id="ph1">`upnName`</ph> is specified with an empty string, authentication falls back from Kerberos to NTLM if possible.</source>
          <target state="translated">如果使用空字符串指定 <ph id="ph1">`upnName`</ph>，则一旦可能，身份验证将从 Kerberos 回退到 NTLM。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A&gt;</ph> is <ph id="ph2">`false`</ph>, <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> makes a best-effort to throw an exception if NTLM is used.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A&gt;</ph> 为 <ph id="ph2">`false`</ph>，则一旦使用 NTLM，<ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 将尽最大努力引发异常。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>Note that setting this property to <ph id="ph1">`false`</ph> may not prevent NTLM credentials from being sent over the wire.</source>
          <target state="translated">请注意，将此属性设置为 <ph id="ph1">`false`</ph> 可能不阻止通过网络发送 NTLM 凭据。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">下面的代码演示如何调用此方法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
          <source><ph id="ph1">&lt;paramref name="upnName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="upnName" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.EndpointIdentity">
          <source>Creates an X509Certificate identity.</source>
          <target state="translated">创建一个 X509Certificate 标识。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.EndpointIdentity">
          <source>Choose between these two constructors based on whether you have supporting certificates.</source>
          <target state="translated">基于是否拥有支持证书在这两个构造函数中进行选择。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.EndpointIdentity">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain the claim that contains the thumbprint of the certificate used to construct this identity.</source>
          <target state="translated">通过此标识连接到终结点的安全 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 客户端将验证服务器提供的声明中是否具有一个包含用于构造此标识的证书指纹的声明。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> that contains the certificate for the identity.</source>
          <target state="translated">一个包含标识的证书的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Creates an X509Certificate identity with the specified certificate.</source>
          <target state="translated">使用指定的证书创建一个 X509Certificate 标识。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>An X509Certificate <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="certificate" /&gt;</ph>.</source>
          <target state="translated">一个与特定的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> 关联的 X509Certificate <ph id="ph2">&lt;paramref name="certificate" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain the claim that contains the thumbprint of the certificate used to construct this identity.</source>
          <target state="translated">通过此标识连接到终结点的安全 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 客户端将验证服务器提供的声明中是否具有一个包含用于构造此标识的证书指纹的声明。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>This <ph id="ph1">`static`</ph> method creates an instance of <ph id="ph2">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity&gt;</ph> by calling its constructor, <ph id="ph3">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity.%23ctor%2A&gt;</ph>, using <ph id="ph4">`certificate`</ph> as the input parameter.</source>
          <target state="translated">此 <ph id="ph1">`static`</ph> 方法通过调用其构造函数 <ph id="ph2">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity&gt;</ph>，并使用 <ph id="ph3">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity.%23ctor%2A&gt;</ph> 作为输入参数创建 <ph id="ph4">`certificate`</ph> 的实例。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The following code shows how to call this method.</source>
          <target state="translated">下面的代码演示如何调用此方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> that contains the primary certificate for the identity.</source>
          <target state="translated">一个包含标识的主要证书的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /&gt;</ph> that contains the supporting certificates for the identity.</source>
          <target state="translated">一个包含标识的支持证书的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source>Creates an X509Certificate identity with the specified primary and supporting certificates.</source>
          <target state="translated">使用指定的主要支持证书创建一个 X509Certificate 标识。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source>A secure <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client that connects to an endpoint with this identity verifies that the claims presented by the server contain the claim that contains the thumbprint of the certificate used to construct this identity.</source>
          <target state="translated">通过此标识连接到终结点的安全 <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 客户端将验证服务器提供的声明中是否具有一个包含用于构造此标识的证书指纹的声明。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source>An X509Certificate <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> associated with the specified <ph id="ph2">&lt;paramref name="primaryCertificate" /&gt;</ph> and <ph id="ph3">&lt;paramref name="supportingCertificates." /&gt;</ph></source>
          <target state="translated">一个与特定的 <ph id="ph2">&lt;paramref name="primaryCertificate" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="supportingCertificates." /&gt;</ph> 关联的 X509Certificate <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source>This static method creates an instance of <ph id="ph1">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity&gt;</ph> by calling its constructor, <ph id="ph2">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity.%23ctor%2A&gt;</ph>, using <ph id="ph3">`primaryCertificate`</ph> and <ph id="ph4">`supportingCertificates`</ph> as input parameters.</source>
          <target state="translated">此静态方法通过调用其构造函数 <ph id="ph1">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity&gt;</ph>，并使用 <ph id="ph2">&lt;xref:System.ServiceModel.X509CertificateEndpointIdentity.%23ctor%2A&gt;</ph> 和 <ph id="ph3">`primaryCertificate`</ph> 作为输入参数创建 <ph id="ph4">`supportingCertificates`</ph> 的实例。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
          <source><ph id="ph1">&lt;paramref name="primaryCertificate" /&gt;</ph> or <ph id="ph2">&lt;paramref name="supportingCertificates" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="primaryCertificate" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="supportingCertificates" /&gt;</ph> 为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
          <source>Returns a value that determines whether a specified object is equal to the current identity object or if they have equal security properties.</source>
          <target state="translated">返回一个值，该值确定指定的对象是否与当前的标识对象相等，或者它们是否拥有相等的安全属性。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is equivalent to the current identity or contains the same security properties; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的对象 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 与当前的标识相等或包含相同的安全属性，则为 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.GetHashCode">
          <source>Provides a hash code for the current instance of the identity.</source>
          <target state="translated">提供当前标识实例的哈希代码。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.GetHashCode">
          <source>The hash code for the current identity.</source>
          <target state="translated">当前标识的哈希代码。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.EndpointIdentity.IdentityClaim">
          <source>Gets the identity claim that corresponds to the identity.</source>
          <target state="translated">获取对应于此标识的标识声明。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.EndpointIdentity.IdentityClaim">
          <source>The <ph id="ph1">&lt;see cref="T:System.IdentityModel.Claims.Claim" /&gt;</ph> that represents the identity claim.</source>
          <target state="translated">表示标识声明的 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Claims.Claim" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.EndpointIdentity.IdentityClaim">
          <source>Clients that authenticate the server should verify that the claims that represent the server contain the identity claim provided by the <ph id="ph1">`EndpointIdentity`</ph>.</source>
          <target state="translated">对服务器进行身份验证的客户端应验证标识服务器的声明是否包含由 <ph id="ph1">`EndpointIdentity`</ph> 提供的标识声明。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.EndpointIdentity">
          <source>Initializes an <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)">
          <source>Initializes an <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> with the specified claim.</source>
          <target state="translated">使用指定的声明初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)">
          <source>This method is called by the constructors of all the classes derived from <ph id="ph1">&lt;xref:System.ServiceModel.EndpointIdentity.Initialize%2A&gt;</ph>).</source>
          <target state="translated">由派生自 <ph id="ph1">&lt;xref:System.ServiceModel.EndpointIdentity.Initialize%2A&gt;</ph>) 的所有类的构造函数调用此方法。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})">
          <source>Initializes an <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> with the specified claim and an interface and compares equality.</source>
          <target state="translated">使用指定的声明和接口初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointIdentity" /&gt;</ph> 并对相等性进行比较。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.ToString">
          <source>Returns the identity.</source>
          <target state="translated">返回标识。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.EndpointIdentity.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> of the form "identity(string)" where string = <ph id="ph2">&lt;see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" /&gt;</ph>.</source>
          <target state="translated">形式为“标识（字符串）”的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中字符串 = <ph id="ph2">&lt;see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>