<Type Name="CommunicationException" FullName="System.ServiceModel.CommunicationException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a8f18397dbe4eee24aca7d40e2b7622f2344045" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36411915" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CommunicationException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CommunicationException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.CommunicationException" />
  <TypeSignature Language="VB.NET" Value="Public Class CommunicationException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommunicationException : SystemException" />
  <TypeSignature Language="F#" Value="type CommunicationException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netcore-1.0">System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c0f27-101">表示服务或客户端应用程序中的通信错误。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0f27-101">Represents a communication error in either the service or client application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0f27-102">可靠的客户端和服务 Windows Communication Foundation (WCF) 应用程序句柄<xref:System.ServiceModel.CommunicationException>可能进行通信时引发的对象。</span><span class="sxs-lookup"><span data-stu-id="c0f27-102">Robust client and service Windows Communication Foundation (WCF) applications handle <xref:System.ServiceModel.CommunicationException> objects that may be thrown during communication.</span></span> <span data-ttu-id="c0f27-103">有两个客户端通常也会预计到的 <xref:System.ServiceModel.CommunicationException> 派生的异常类型（<xref:System.ServiceModel.FaultException%601> 和 <xref:System.ServiceModel.FaultException>）。</span><span class="sxs-lookup"><span data-stu-id="c0f27-103">There are also two <xref:System.ServiceModel.CommunicationException>-derived exception types (<xref:System.ServiceModel.FaultException%601> and <xref:System.ServiceModel.FaultException>) that clients also often expect.</span></span> <span data-ttu-id="c0f27-104">因此，为了防止一般 <xref:System.ServiceModel.CommunicationException> 处理程序捕获到这些更具体的异常类型，请在处理 <xref:System.ServiceModel.CommunicationException> 之前捕获这些异常。</span><span class="sxs-lookup"><span data-stu-id="c0f27-104">Therefore, in order to prevent the generic <xref:System.ServiceModel.CommunicationException> handler from catching these more specific exception types, catch these exceptions prior to handling <xref:System.ServiceModel.CommunicationException>.</span></span>  
  
-   <span data-ttu-id="c0f27-105">如果响应双向操作（即，具有 <xref:System.ServiceModel.FaultException%601> 属性的方法，其 <xref:System.ServiceModel.OperationContractAttribute> 设置为 <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A>）时收到操作协定中指定的 SOAP 错误，将在客户端上引发 `false` 对象。</span><span class="sxs-lookup"><span data-stu-id="c0f27-105"><xref:System.ServiceModel.FaultException%601> objects are thrown on the client when a SOAP fault that is specified in the operation contract is received in response to a two-way operation (that is, a method with an <xref:System.ServiceModel.OperationContractAttribute> attribute with <xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A> set to `false`).</span></span>  
  
 <span data-ttu-id="c0f27-106">如果侦听器接收到操作协定中不期望或未指定的 SOAP 错误，将会引发 <xref:System.ServiceModel.FaultException> 对象。</span><span class="sxs-lookup"><span data-stu-id="c0f27-106"><xref:System.ServiceModel.FaultException> objects are thrown when a listener receives a SOAP fault that is not expected or specified in the operation contract.</span></span> <span data-ttu-id="c0f27-107">通常，如果在调试应用程序时将服务的 <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> 属性设置为 `true`，就会发生这一情况。</span><span class="sxs-lookup"><span data-stu-id="c0f27-107">This usually occurs when the application is being debugged and the service has the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> property set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0f27-108">实现自定义通道和绑定元素时，强烈建议您的组件只引发 <xref:System.TimeoutException?displayProperty=nameWithType> 或 <xref:System.ServiceModel.CommunicationException> 派生的对象。</span><span class="sxs-lookup"><span data-stu-id="c0f27-108">When implementing custom channels and binding elements, it is strongly recommended that your components throw only <xref:System.TimeoutException?displayProperty=nameWithType> or <xref:System.ServiceModel.CommunicationException>-derived objects.</span></span> <span data-ttu-id="c0f27-109">如果您的组件引发了此组件特定的可恢复异常，则将在 <xref:System.ServiceModel.CommunicationException> 对象内包装该异常。</span><span class="sxs-lookup"><span data-stu-id="c0f27-109">In the case where your components throw a recoverable exception that is specific to the component, wrap that exception inside a <xref:System.ServiceModel.CommunicationException> object.</span></span>  
  
 <span data-ttu-id="c0f27-110">有关设计和使用 WCF 错误系统详细信息，请参阅[指定和处理在协定和服务中的错误](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)。</span><span class="sxs-lookup"><span data-stu-id="c0f27-110">For more details about designing and using the WCF fault system, see [Specifying and Handling Faults in Contracts and Services](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c0f27-111">WCF 运行时将不会引发<xref:System.ServiceModel.CommunicationException>这是不安全，以处理在它离开 WCF 运行时并进入用户代码的点。</span><span class="sxs-lookup"><span data-stu-id="c0f27-111">The WCF Runtime will not throw a <xref:System.ServiceModel.CommunicationException> that is unsafe to handle at the point where it leaves the WCF Runtime and enters user code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0f27-112">下面的代码示例演示处理 <xref:System.ServiceModel.CommunicationException> 类型的客户端。</span><span class="sxs-lookup"><span data-stu-id="c0f27-112">The following code example shows a client that handles <xref:System.ServiceModel.CommunicationException> types.</span></span> <span data-ttu-id="c0f27-113">此客户端也处理 <xref:System.ServiceModel.FaultException> 对象，因为服务的 <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> 已设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="c0f27-113">This client also handles <xref:System.ServiceModel.FaultException> objects because the service has <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> set to `true`.</span></span>  
  
 [!code-csharp[IErrorHandler#3](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/client.cs#3)]
 [!code-vb[IErrorHandler#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0f27-114">初始化 <see cref="T:System.ServiceModel.CommunicationException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f27-114">Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommunicationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.CommunicationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommunicationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0f27-115">初始化 <see cref="T:System.ServiceModel.CommunicationException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f27-115">Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommunicationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.CommunicationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommunicationException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.CommunicationException : string -&gt; System.ServiceModel.CommunicationException" Usage="new System.ServiceModel.CommunicationException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c0f27-116">错误条件的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f27-116">The description of the error condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0f27-117">使用指定的消息初始化 <see cref="T:System.ServiceModel.CommunicationException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f27-117">Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class, using the specified message.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CommunicationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.CommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CommunicationException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.CommunicationException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.ServiceModel.CommunicationException" Usage="new System.ServiceModel.CommunicationException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="c0f27-118">与反序列化进程相关的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f27-118">Information relevant to the deserialization process.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c0f27-119">反序列化进程的上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f27-119">The context of the deserialization process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0f27-120">使用指定的序列化信息和上下文对象初始化 <see cref="T:System.ServiceModel.CommunicationException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f27-120">Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class, using the specified serialization information and context objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommunicationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommunicationException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.CommunicationException : string * Exception -&gt; System.ServiceModel.CommunicationException" Usage="new System.ServiceModel.CommunicationException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c0f27-121">错误条件的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f27-121">The description of the error condition.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="c0f27-122">要使用的内部异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f27-122">The inner exception to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0f27-123">使用指定的消息和内部异常初始化 <see cref="T:System.ServiceModel.CommunicationException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0f27-123">Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class, using the specified message and the inner exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>