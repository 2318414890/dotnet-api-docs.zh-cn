<Type Name="ZipFileExtensions" FullName="System.IO.Compression.ZipFileExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc9c1088f45649b96e4af085879fde1dc4d8204f" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996861" /></Metadata><TypeSignature Language="C#" Value="public static class ZipFileExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ZipFileExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipFileExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ZipFileExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipFileExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ZipFileExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.6">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供扩展方法<see cref="T:System.IO.Compression.ZipArchive" />和<see cref="T:System.IO.Compression.ZipArchiveEntry" />类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Compression.ZipFileExtensions>类仅包含静态方法的扩展<xref:System.IO.Compression.ZipArchive>和<xref:System.IO.Compression.ZipArchiveEntry>类。 不创建的实例<xref:System.IO.Compression.ZipFileExtensions>类; 相反，使用这些方法的实例<xref:System.IO.Compression.ZipArchive>或<xref:System.IO.Compression.ZipArchiveEntry>。  
  
 若要使用的扩展方法，必须引用`System.IO.Compression.FileSystem`在项目中的程序集。 `System.IO.Compression.FileSystem`程序集不在可用[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用。 因此，<xref:System.IO.Compression.ZipFileExtensions>并<xref:System.IO.Compression.ZipFile>类 (在这两个`System.IO.Compression.FileSystem`程序集) 中均不提供[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用。 在中[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用程序，您使用的压缩文件使用中的方法<xref:System.IO.Compression.ZipArchive>， <xref:System.IO.Compression.ZipArchiveEntry>， <xref:System.IO.Compression.DeflateStream>，和<xref:System.IO.Compression.GZipStream>。  
  
 <xref:System.IO.Compression.ZipFileExtensions>类包含扩展的四个方法<xref:System.IO.Compression.ZipArchive>:  
  
-   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%28System.IO.Compression.ZipArchive%2CSystem.String%29>  

-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.Boolean%29>  

 <xref:System.IO.Compression.ZipFileExtensions>类包含两个扩展的方法<xref:System.IO.Compression.ZipArchiveEntry>:  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>  
  
   
  
## Examples  
 下面的示例演示如何从现有的文件，zip 存档中创建新的条目并提取存档到一个目录的内容。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 下面的示例演示如何循环访问的 zip 存档内容并提取扩展名为.txt 的文件。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateEntryFromFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>通过将其压缩并将其添加到邮编存档的存档文件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateEntryFromFile (destination As ZipArchive, sourceFileName As String, entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Compression::ZipArchiveEntry ^ CreateEntryFromFile(System::IO::Compression::ZipArchive ^ destination, System::String ^ sourceFileName, System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="static member CreateEntryFromFile : System.IO.Compression.ZipArchive * string * string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="System.IO.Compression.ZipFileExtensions.CreateEntryFromFile (destination, sourceFileName, entryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destination">若要添加到文件的 zip 存档。</param>
        <param name="sourceFileName">要存档的文件路径。 可以指定相对或绝对路径。 相对路径是指相对于当前工作目录的路径。</param>
        <param name="entryName">要创建在 zip 存档中的项的名称。</param>
        <summary>通过将其压缩并将其添加到邮编存档的存档文件。</summary>
        <returns>在 zip 存档中新项的包装器。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 存档中的新项包含指定的文件的内容`sourceFileName`。 如果具有指定名称的条目 (`entryName`) 已存在具有相同名称在存档中创建一个第二个条目。 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>条目的属性设置为最后一个文件系统上的文件的更改的时间。  
  
 当`ZipArchiveMode.Update`存在，则条目的大小限制仅限于<xref:System.Int32.MaxValue?displayProperty=nameWithType>。 此限制是因为更新模式使用<xref:System.IO.MemoryStream>在内部以允许查找所需更新存档时和<xref:System.IO.MemoryStream>有一个最大 int 的大小等于  
   
  
## Examples  
 下面的示例演示如何从现有的文件的 zip 存档中创建新的条目。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceFileName" /> 为 <see cref="F:System.String.Empty" />，仅包含空格，或者包含至少一个无效字符。  
  
或 
 <paramref name="entryName" /> 为 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceFileName" /> 或 <paramref name="entryName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.PathTooLongException">在 <paramref name="sourceFileName" /> 内，指定的路径、文件名或者两者都超出了系统定义的最大长度。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceFileName" /> 无效（例如，它位于未映射的驱动器上）。</exception>
        <exception cref="T:System.IO.IOException">无法打开由 <paramref name="sourceFileName" /> 指定的文件，或文件太大，无法更新（当前限制为 [`Int32.MaxValue`](https://docs.microsoft.com/dotnet/api/system.int32.maxvalue)）。</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="sourceFileName" /> 指定目录。  
  
或 
调用方没有所需的权限访问指定的文件<paramref name="sourceFileName" />。</exception>
        <exception cref="T:System.IO.FileNotFoundException">指定的文件<paramref name="sourceFileName" />找不到。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceFileName" /> 参数格式无效。  
  
或 
zip 存档不支持写入。</exception>
        <exception cref="T:System.ObjectDisposedException">zip 存档已释放。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Compression::ZipArchiveEntry ^ CreateEntryFromFile(System::IO::Compression::ZipArchive ^ destination, System::String ^ sourceFileName, System::String ^ entryName, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="static member CreateEntryFromFile : System.IO.Compression.ZipArchive * string * string * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.ZipArchiveEntry" Usage="System.IO.Compression.ZipFileExtensions.CreateEntryFromFile (destination, sourceFileName, entryName, compressionLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="destination">若要添加到文件的 zip 存档。</param>
        <param name="sourceFileName">要存档的文件路径。 可以指定相对或绝对路径。 相对路径是指相对于当前工作目录的路径。</param>
        <param name="entryName">要创建在 zip 存档中的项的名称。</param>
        <param name="compressionLevel">指示创建项时是否强调速度或压缩有效性的枚举值之一。</param>
        <summary>通过将其压缩使用指定的压缩级别，并将其添加到邮编存档的存档文件。</summary>
        <returns>在 zip 存档中新项的包装器。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 存档中的新项包含指定的文件的内容`sourceFileName`。 如果具有指定名称的条目 (`entryName`) 已存在具有相同名称在存档中创建一个第二个条目。 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>条目的属性设置为最后一个文件系统上的文件的更改的时间。  
  
 当`ZipArchiveMode.Update`存在，则条目的大小限制仅限于<xref:System.Int32.MaxValue?displayProperty=nameWithType>。 此限制是因为更新模式使用<xref:System.IO.MemoryStream>在内部以允许查找所需更新存档时和<xref:System.IO.MemoryStream>有一个最大 int 的大小等于  
  
## Examples  
 下面的示例演示如何从现有的文件，zip 存档中创建新的条目，然后指定压缩级别。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program4.cs#4)]
 [!code-vb[System.IO.Compression.ZipArchive#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceFileName" /> 为 <see cref="F:System.String.Empty" />，仅包含空格，或者包含至少一个无效字符。  
  
或 
 <paramref name="entryName" /> 为 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceFileName" /> 或 <paramref name="entryName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><paramref name="sourceFileName" /> 无效（例如，它位于未映射的驱动器上）。</exception>
        <exception cref="T:System.IO.PathTooLongException">在 <paramref name="sourceFileName" /> 内，指定的路径、文件名或者两者都超出了系统定义的最大长度。</exception>
        <exception cref="T:System.IO.IOException">无法打开由 <paramref name="sourceFileName" /> 指定的文件，或文件太大，无法更新（当前限制为 [`Int32.MaxValue`](https://docs.microsoft.com/dotnet/api/system.int32.maxvalue)）。</exception>
        <exception cref="T:System.UnauthorizedAccessException"><paramref name="sourceFileName" /> 指定目录。  
  
或 
调用方没有所需的权限访问指定的文件<paramref name="sourceFileName" />。</exception>
        <exception cref="T:System.IO.FileNotFoundException">指定的文件<paramref name="sourceFileName" />找不到。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="sourceFileName" /> 参数格式无效。  
  
或 
zip 存档不支持写入。</exception>
        <exception cref="T:System.ObjectDisposedException">zip 存档已释放。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToDirectory (source As ZipArchive, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToDirectory(System::IO::Compression::ZipArchive ^ source, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : System.IO.Compression.ZipArchive * string -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToDirectory (source, destinationDirectoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">从中提取文件的 zip 存档。</param>
        <param name="destinationDirectoryName">要在其中放置解压缩的文件的目录路径。 可以指定相对或绝对路径。 相对路径是指相对于当前工作目录的路径。</param>
        <summary>将 zip 存档中的所有文件都解压缩到文件系统的一个目录下。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法创建指定的目录`destinationDirectoryName`。 如果目标目录已存在，此方法不会覆盖它;它会引发<xref:System.IO.IOException>异常。 该方法还会创建反映在 zip 存档中的层次结构的子目录。 如果在提取过程中发生错误，存档将保持部分提取。 每个提取的文件具有指定的目录的同一相对路径`destinationDirectoryName`作为其源项已存档的根。  
  
   
  
## Examples  
 下面的示例演示如何从现有的文件，zip 存档中创建新的条目并将存档解压缩到新目录。 到编译器的顺序此代码示例中，你必须引用`System.IO.Compression`和`System.IO.Compression.FileSystem`你的项目中的程序集。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" /> 为 <see cref="F:System.String.Empty" />，仅包含空格，或者包含至少一个无效字符。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationDirectoryName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定路径的长度超出系统定义的最大长度。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定的路径无效（例如，它位于未映射的驱动器上）。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationDirectoryName" /> 指定的目录已存在。  
  
或 
存档中的一个条目名是 <see cref="F:System.String.Empty" />，仅包含空格，或者包含至少一个无效字符。  
  
或 
从存档中解压缩一个条目将在 <paramref name="destinationDirectoryName" /> 指定的目录之外创建一个文件。 （例如，如果条目名中包含父目录访问器，则可能发生这种情况。） 
或 
存档中的两个或多个条目名相同。</exception>
        <exception cref="T:System.UnauthorizedAccessException">调用方没有写入目标目录所需的权限。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" /> 包含无效的格式。</exception>
        <exception cref="T:System.IO.InvalidDataException">存档条目无法找到或已损坏。  
  
或 
使用了一种不支持的压缩方法压缩存档条目。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToDirectory (source As ZipArchive, destinationDirectoryName As String, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToDirectory(System::IO::Compression::ZipArchive ^ source, System::String ^ destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : System.IO.Compression.ZipArchive * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToDirectory (source, destinationDirectoryName, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destinationDirectoryName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source"><see cref="T:System.IO.Compression.ZipArchive" />提取。</param>
        <param name="destinationDirectoryName">在文件系统上的目标目录路径。 路径可以是相对值还是绝对值。 相对路径是指相对于当前工作目录的路径。</param>
        <param name="overwriteFiles"><see langword="true" /> 若要指示; 覆盖现有文件<see langword="false" />否则为。</param>
        <summary>提取所有文件系统上存档到一个目录中的文件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks
 指定的目录可能已存在。 此方法将创建指定的目录及所有子目录，如有必要。

 如果提取存档时出错，存档将保持部分提取。
 
 将提取的每个条目，从而使提取的文件具有的相同相对路径`destinationDirectoryName`如条目已存档的根。
 
 如果要存档的文件具有无效上一次将使用修改后的时间，第一个日期和时间 Zip 时间戳格式 （1980 年 1 月 1 日午夜） 中可表示。
 
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationArchiveFileName" /> 是一个零长度字符串，包含仅为空格，或者包含一个或多个无效字符，由定义<see cref="F:System.IO.Path.InvalidPathChars" />。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationArchiveFileName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定的路径和/或文件名超过了系统定义的最大长度。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定的路径无效（例如，它位于未映射的驱动器上）。</exception>
        <exception cref="T:System.IO.IOException">名称<see cref="T:System.IO.Compression.ZipArchiveEntry" />是长度为零，包含仅为空格，或者包含一个或多个无效字符，由定义<see cref="F:System.IO.Path.InvalidPathChars" />。

或

提取<see cref="T:System.IO.Compression.ZipArchiveEntry" />会导致超出目标文件<paramref name="destinationArchiveFileName" />（例如，如果条目名中包含父目录访问器）。

或

一个<see cref="T:System.IO.Compression.ZipArchiveEntry" />已从相同存档的已提取条目与相同的名称。</exception>
        <exception cref="T:System.UnauthorizedAccessException">调用方没有所要求的权限。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationArchiveFileName" /> 的格式无效。</exception>
        <exception cref="T:System.IO.InvalidDataException">一个<see cref="T:System.IO.Compression.ZipArchiveEntry" />找不到或已损坏。

或

一个<see cref="T:System.IO.Compression.ZipArchiveEntry" />使用不受支持的压缩方法压缩。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExtractToFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>提取到文件的 zip 存档中的条目。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToFile (source As ZipArchiveEntry, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToFile(System::IO::Compression::ZipArchiveEntry ^ source, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="static member ExtractToFile : System.IO.Compression.ZipArchiveEntry * string -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToFile (source, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">要从其中解压缩文件的 zip 存档条目。</param>
        <param name="destinationFileName">从条目内容创建的文件的路径。 可以指定相对或绝对路径。 相对路径是指相对于当前工作目录的路径。</param>
        <summary>提取到文件的 zip 存档中的条目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目标文件已存在，此方法不会覆盖它;它会引发<xref:System.IO.IOException>异常。 若要覆盖现有文件，请使用<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>方法重载。  
  
 该文件的上次编写时间设置为 zip 存档中的项的更改; 最后一个时间此值存储在<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>属性。  
  
 不能使用此方法提取目录，则使用<xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>方法相反。  
  
   
  
## Examples  
 下面的示例演示如何循环访问 zip 存档文件的内容并提取扩展名为.txt 的文件。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。  
  
或 
 <paramref name="destinationFileName" /> 指定目录。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationFileName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定的路径和/或文件名超过了系统定义的最大长度。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定的路径无效（例如，它位于未映射的驱动器上）。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationFileName" /> 已存在。  
  
或 
出现 I/O 错误。  
  
或 
该条目当前处于打开状态，可以写入。  
  
或 
该条目已从存档中删除。</exception>
        <exception cref="T:System.UnauthorizedAccessException">调用方没有创建新文件所需的权限。</exception>
        <exception cref="T:System.IO.InvalidDataException">该条目在存档中缺少或已损坏，无法读取。  
  
或 
已经通过使用一种不受支持的压缩方法压缩该条目。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放该条目所属的 zip 存档。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationFileName" /> 的格式无效。  
  
或 
该条目的 zip 存档是在 <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> 模式中打开的，不允许检索条目。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToFile (source As ZipArchiveEntry, destinationFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToFile(System::IO::Compression::ZipArchiveEntry ^ source, System::String ^ destinationFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member ExtractToFile : System.IO.Compression.ZipArchiveEntry * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToFile (source, destinationFileName, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">要从其中解压缩文件的 zip 存档条目。</param>
        <param name="destinationFileName">从条目内容创建的文件的路径。 可以指定相对或绝对路径。 相对路径是指相对于当前工作目录的路径。</param>
        <param name="overwrite">如果覆盖与目标文件同名的现有文件，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>将 zip 存档中的条目解压缩到文件下，并可选择覆盖具有相同名称的现有文件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 该文件的上次编写时间设置为 zip 存档中的项的更改; 最后一个时间此值存储在<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>属性。  
  
 不能使用此方法提取目录，则使用<xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>方法相反。  
  
   
  
## Examples  
 下面的示例演示如何循环访问 zip 存档文件的内容并提取扩展名为.txt 的文件。 它将覆盖目标文件夹中具有相同名称的现有文件。 到编译器的顺序此代码示例中，你必须引用`System.IO.Compression`和`System.IO.Compression.FileSystem`你的项目中的程序集。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchive#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。  
  
或 
 <paramref name="destinationFileName" /> 指定目录。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationFileName" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定的路径和/或文件名超过了系统定义的最大长度。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定的路径无效（例如，它位于未映射的驱动器上）。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationFileName" /> 已存在，且 <paramref name="overwrite" /> 是 <see langword="false" />。  
  
或 
出现 I/O 错误。  
  
或 
该条目当前处于打开状态，可以写入。  
  
或 
该条目已从存档中删除。</exception>
        <exception cref="T:System.UnauthorizedAccessException">调用方没有创建新文件所需的权限。</exception>
        <exception cref="T:System.IO.InvalidDataException">存档中缺少该条目，或者该条目已损坏且无法读取。  
  
或 
已经通过使用一种不受支持的压缩方法压缩该条目。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放该条目所属的 zip 存档。</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationFileName" /> 的格式无效。  
  
或 
该条目的 zip 存档是在 <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> 模式中打开的，不允许检索条目。</exception>
      </Docs>
    </Member>
  </Members>
</Type>