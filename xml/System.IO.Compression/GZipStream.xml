<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GZipStream.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59b8e560ab1beb7443cc4ebf7aff75a5018a4f538.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b8e560ab1beb7443cc4ebf7aff75a5018a4f538</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Compression.GZipStream">
          <source>Provides methods and properties used to compress and decompress streams.</source>
          <target state="translated">提供用于压缩和解压缩流的方法和属性。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>This class represents the gzip data format, which uses an industry-standard algorithm for lossless file compression and decompression.</source>
          <target state="translated">此类表示 gzip 数据格式，这用于无损文件压缩和解压缩的行业标准算法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>The format includes a cyclic redundancy check value for detecting data corruption.</source>
          <target state="translated">格式包括一个用于检测数据损坏的循环冗余校验值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>The gzip data format uses the same algorithm as the <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class, but can be extended to use other compression formats.</source>
          <target state="translated">Gzip 数据格式使用相同的算法为<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>类，但可以进行扩展以使用其他压缩格式。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>The format can be readily implemented in a manner not covered by patents.</source>
          <target state="translated">格式可以轻松实现未涵盖的专利的方式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> class uses the zlib library for compression.</source>
          <target state="translated">从开始<ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>、<ph id="ph2">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>类压缩使用 zlib 库。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.</source>
          <target state="translated">因此，它提供更好的压缩算法，并且在大多数情况下，比它更小压缩的文件提供.NET Framework 的早期版本。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>Compressed <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> objects written to a file with an extension of .gz can be decompressed using many common compression tools; however, this class does not inherently provide functionality for adding files to or extracting files from zip archives.</source>
          <target state="translated">压缩<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>写入扩展名为.gz 的文件的对象可以使用许多常用的压缩工具进行解压缩; 但是，此类不本质上是提供用于添加文件到或从 zip 存档中提取文件的功能。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>The compression functionality in <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> is exposed as a stream.</source>
          <target state="translated">中的压缩功能<ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>以流的形式公开。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data.</source>
          <target state="translated">基于逐字节地读取数据，因此不可能进行多轮验证来确定压缩整个文件或较大的数据块的最佳方法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> classes are best used on uncompressed sources of data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>未压缩的数据源，最好使用类。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>If the source data is already compressed, using these classes may actually increase the size of the stream.</source>
          <target state="translated">如果已压缩源数据，使用这些类实际上可能增加流的大小。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class to compress and decompress a directory of files.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>类来压缩和解压缩文件的目录。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Compression.GZipStream">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>.</source>
          <target state="translated">继承自<ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>，必须重写以下成员： <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>， <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>，和<ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.IO.Compression.GZipStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>The stream to write the compressed data to.</source>
          <target state="translated">要将压缩数据写入到其中的流。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</source>
          <target state="translated">压缩流时，指示是否要强调速度或压缩效率的枚举值之一。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> class by using the specified stream and compression level.</source>
          <target state="translated">用指定的流和压缩级别初始化 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class.</source>
          <target state="translated">当你想要指定压缩效率或速度是否更重要的实例时使用此构造函数<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>This constructor overload uses the compression mode <ph id="ph1">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">此构造函数重载使用的压缩模式<ph id="ph1">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>To set the compression mode to another value, use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph> overload.</source>
          <target state="translated">若要压缩模式设置为另一个值，使用<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph>或<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph>重载。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>The following example shows how to set the compression level when creating a <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何在创建时设置压缩级别<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>The stream does not support write operations such as compression.</source>
          <target state="translated">流不支持写入操作，如压缩。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
          <source>(The <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> property on the stream object is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.)</source>
          <target state="translated">（流对象上的 <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> 属性是 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。）</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>The stream the compressed or decompressed data is written to.</source>
          <target state="translated">压缩或解压缩后的数据被写入的流。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>One of the enumeration values that indicates whether to compress or decompress the stream.</source>
          <target state="translated">指示是要压缩还是解压缩流的枚举值之一。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> class by using the specified stream and compression mode.</source>
          <target state="translated">用指定的流和压缩模式初始化 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>By default, <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> owns the underlying stream, so closing the <ph id="ph2">`stream`</ph> parameter also closes the underlying stream.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>拥有基础流，因此关闭<ph id="ph2">`stream`</ph>参数也会关闭基础流。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>Note that the state of the underlying stream can affect the usability of the stream.</source>
          <target state="translated">请注意，基础流的状态可能会影响该流的可用性。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.</source>
          <target state="translated">此外，任何显式检查会不进行，因此没有其他引发异常时创建的新实例。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>If an instance of the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class is created with the <ph id="ph2">`mode`</ph> parameter equal to <ph id="ph3">`Compress`</ph> and no further action occurs, the stream will appear as a valid, empty compressed file.</source>
          <target state="translated">实例时，如果<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>类创建与<ph id="ph2">`mode`</ph>参数等于<ph id="ph3">`Compress`</ph>和任何进一步的操作发生，流将显示为一个有效的压缩文件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>By default, the compression level is set to <ph id="ph1">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph> when the compression mode is <ph id="ph2">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">默认情况下，压缩级别设置为<ph id="ph1">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph>压缩模式时<ph id="ph2">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>The following example initializes a new instance of the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class with <ph id="ph2">`mode`</ph> set to <ph id="ph3">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">下面的示例初始化的新实例<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>类，该类具有<ph id="ph2">`mode`</ph>设置为<ph id="ph3">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class.</source>
          <target state="translated">此示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> enumeration value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 枚举值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Compress" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Compress" /&gt;</ph>，而 <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> 为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Decompress" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanRead" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Decompress" /&gt;</ph>，而 <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanRead" /&gt;</ph> 为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>The stream to write the compressed data to.</source>
          <target state="translated">要将压缩数据写入到其中的流。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</source>
          <target state="translated">压缩流时，指示是否要强调速度或压缩效率的枚举值之一。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to leave the stream object open after disposing the <ph id="ph2">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在释放 <ph id="ph2">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 对象之后打开流对象，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> class by using the specified stream and compression level, and optionally leaves the stream open.</source>
          <target state="translated">使用指定的流和压缩级别，初始化 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 类的新实例，有选择性的打开流。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class, and whether to leave the stream object open after disposing the <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> object.</source>
          <target state="translated">当你想要指定压缩效率或速度是否更重要的实例时使用此构造函数<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>类，以及是否释放之后打开流对象<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>This constructor overload uses the compression mode <ph id="ph1">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">此构造函数重载使用的压缩模式<ph id="ph1">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>To set the compression mode to another value, use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph> overload.</source>
          <target state="translated">若要压缩模式设置为另一个值，使用<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29&gt;</ph>或<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29&gt;</ph>重载。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>The following example shows how to set the compression level when creating a <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> object and how to leave the stream open.</source>
          <target state="translated">下面的示例演示如何在创建时设置压缩级别<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>对象以及如何打开流。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>The stream does not support write operations such as compression.</source>
          <target state="translated">流不支持写入操作，如压缩。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
          <source>(The <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> property on the stream object is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.)</source>
          <target state="translated">（流对象上的 <ph id="ph1">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> 属性是 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。）</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>The stream the compressed or decompressed data is written to.</source>
          <target state="translated">压缩或解压缩后的数据被写入的流。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>One of the enumeration values that indicates whether to compress or decompress the stream.</source>
          <target state="translated">指示是要压缩还是解压缩流的枚举值之一。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to leave the stream open after disposing the <ph id="ph2">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在释放 <ph id="ph2">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 对象之后打开流，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> class by using the specified stream and compression mode, and optionally leaves the stream open.</source>
          <target state="translated">使用指定的流和压缩模式，初始化 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 类的新实例，有选择性的打开流。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>By default, <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> owns the underlying stream, so closing the <ph id="ph2">`stream`</ph> parameter also closes the underlying stream.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>拥有基础流，因此关闭<ph id="ph2">`stream`</ph>参数也会关闭基础流。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>Note that the state of the underlying stream can affect the usability of the stream.</source>
          <target state="translated">请注意，基础流的状态可能会影响该流的可用性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.</source>
          <target state="translated">此外，任何显式检查会不进行，因此没有其他引发异常时创建的新实例。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>If an instance of the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class is created with the <ph id="ph2">`mode`</ph> parameter equal to <ph id="ph3">`Compress`</ph> and no further action occurs, the stream will appear as a valid, empty compressed file.</source>
          <target state="translated">实例时，如果<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>类创建与<ph id="ph2">`mode`</ph>参数等于<ph id="ph3">`Compress`</ph>和任何进一步的操作发生，流将显示为一个有效的压缩文件。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>By default, the compression level is set to <ph id="ph1">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph> when the compression mode is <ph id="ph2">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>.</source>
          <target state="translated">默认情况下，压缩级别设置为<ph id="ph1">&lt;xref:System.IO.Compression.CompressionLevel.Optimal&gt;</ph>压缩模式时<ph id="ph2">&lt;xref:System.IO.Compression.CompressionMode.Compress&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Compress" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Compress" /&gt;</ph>，而 <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanWrite" /&gt;</ph> 为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Decompress" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanRead" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="F:System.IO.Compression.CompressionMode.Decompress" /&gt;</ph>，而 <ph id="ph3">&lt;see cref="P:System.IO.Stream.CanRead" /&gt;</ph> 为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.BaseStream">
          <source>Gets a reference to the underlying stream.</source>
          <target state="translated">获取对基础流的引用。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.BaseStream">
          <source>A stream object that represents the underlying stream.</source>
          <target state="translated">表示基础流的流对象。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.BaseStream">
          <source>The underlying stream is closed.</source>
          <target state="translated">基础流已关闭。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which to begin reading data from the stream.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中的字节偏移量，从该位置开始读取流中的数据。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">最多读取的字节数。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">开始异步读操作。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>(Consider using the <ph id="ph1">&lt;see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> method instead.)</source>
          <target state="translated">（请考虑改用 <ph id="ph1">&lt;see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> 方法。）</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An object that represents the asynchronous read operation, which could still be pending.</source>
          <target state="translated">表示异步读取操作（可能仍处于挂起状态）的对象。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous read operations by using the <ph id="ph2">&lt;xref:System.IO.Stream.ReadAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">从开始<ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，你可以使用执行异步读取的操作<ph id="ph2">&lt;xref:System.IO.Stream.ReadAsync%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph> method is still available in <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph>方法是在中仍然可用<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>以支持旧版代码; 但是，你可以通过来实现异步 I/O 操作更轻松地使用新的异步方法。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For more information, see .</source>
          <target state="translated">有关详细信息，请参阅。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Pass the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> return value to the <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph> method of the stream to determine how many bytes were read and to release operating system resources used for reading.</source>
          <target state="translated">传递<ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>返回到值<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph>以确定已读取的字节数并释放用于进行读取的操作系统资源的流的方法。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>You can do this either by using the same code that called <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph> or in a callback passed to <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated">你可完成此操作通过使用相同的代码调用<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph>或传递给回调<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.</source>
          <target state="translated">异步读取或写入时，会发出，未完成 I/O 操作时，将更新流中的当前位置。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Multiple simultaneous asynchronous requests render the request completion order uncertain.</source>
          <target state="translated">多个同时进行的异步请求呈现请求完成顺序不确定。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.CanRead%2A&gt;</ph> property to determine whether the current <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> object supports reading.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.CanRead%2A&gt;</ph>属性来确定是否当前<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>对象支持读取。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph>.</source>
          <target state="translated">如果流已关闭或传递了无效参数，将立即引发异常从<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph>.</source>
          <target state="translated">异步读取请求，例如，I/O 请求过程的磁盘故障过程中发生的错误发生在线程池线程和调用时引发异常<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class to compress and decompress a file.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>类来压缩和解压缩文件。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method tried to  read asynchronously past the end of the stream, or a disk error occurred.</source>
          <target state="translated">尝试异步读取超过了流的结尾，或者发生了磁盘错误。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>One or more of the arguments is invalid.</source>
          <target state="translated">一个或多个自变量无效。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Methods were called after the stream was closed.</source>
          <target state="translated">在流关闭后调用方法。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> implementation does not support the read operation.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 实现不支持读取操作。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A read operation cannot be performed because the stream is closed.</source>
          <target state="translated">由于流已关闭，因此无法执行读取操作。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which to begin writing.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中的字节偏移量，从此处开始写入。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">最多写入的字节数。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">开始异步写操作。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>(Consider using the <ph id="ph1">&lt;see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> method instead.)</source>
          <target state="translated">（请考虑改用 <ph id="ph1">&lt;see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> 方法。）</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An  object that represents the asynchronous write operation, which could still be pending.</source>
          <target state="translated">表示异步写入操作（可能仍处于挂起状态）的对象。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous write operations by using the <ph id="ph2">&lt;xref:System.IO.Stream.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">从开始<ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，你可以通过执行异步写操作<ph id="ph2">&lt;xref:System.IO.Stream.WriteAsync%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> method is still available in <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph>方法是在中仍然可用<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>以支持旧版代码; 但是，你可以通过来实现异步 I/O 操作更轻松地使用新的异步方法。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>For more information, see .</source>
          <target state="translated">有关详细信息，请参阅。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> method starts an asynchronous write operation to a <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> stream object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph>方法会启动到异步写操作<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>流对象。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>You must create a callback method that implements the <ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph> delegate and pass its name to the <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> method.</source>
          <target state="translated">你必须创建实现一个回调方法<ph id="ph1">&lt;xref:System.AsyncCallback&gt;</ph>委托并将传递到其名称<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The underlying stream is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">此基础流为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The underlying stream is closed.</source>
          <target state="translated">基础流已关闭。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.CanRead">
          <source>Gets a value indicating whether the stream supports reading while decompressing a file.</source>
          <target state="translated">获取一个值，该值指示流是否支持在解压缩文件的过程中读取文件。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> value is <ph id="ph3">&lt;see langword="Decompress," /&gt;</ph> and the underlying stream supports reading and is not closed; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 值为 <ph id="ph3">&lt;see langword="Decompress," /&gt;</ph> 而且基础流未关闭并支持读取，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.CanRead">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>.</source>
          <target state="translated">继承自<ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>，必须重写以下成员： <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>， <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>，和<ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.CanSeek">
          <source>Gets a value indicating whether the stream supports seeking.</source>
          <target state="translated">获取一个值，该值指示流是否支持查找。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.CanSeek">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> in all cases.</source>
          <target state="translated">在所有情况下均为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.CanSeek">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>.</source>
          <target state="translated">继承自<ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>，必须重写以下成员： <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>， <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>，和<ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.CanWrite">
          <source>Gets a value indicating whether the stream supports writing.</source>
          <target state="translated">获取一个值，该值指示流是否支持写入。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> value is <ph id="ph3">&lt;see langword="Compress" /&gt;</ph>, and the underlying stream supports writing and is not closed; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 值为 <ph id="ph3">&lt;see langword="Compress" /&gt;</ph> 而且基础流未关闭并支持写入，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.CanWrite">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>, you must override the following members: <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>, and <ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>.</source>
          <target state="translated">继承自<ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph>，必须重写以下成员： <ph id="ph2">&lt;see cref="P:System.IO.Compression.GZipStream.CanSeek" /&gt;</ph>， <ph id="ph3">&lt;see cref="P:System.IO.Compression.GZipStream.CanWrite" /&gt;</ph>，和<ph id="ph4">&lt;see cref="P:System.IO.Compression.GZipStream.CanRead" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 占用的非托管资源，还可以另外再释放托管资源。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 调用受保护<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Dispose%2A&gt;</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Dispose%2A&gt;</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 调用<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Dispose%2A&gt;</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> references.</source>
          <target state="translated">当 <ph id="ph1">`disposing`</ph> 参数为 <ph id="ph2">`true`</ph> 时，此方法释放该 <ph id="ph3">&lt;xref:System.IO.Compression.DeflateStream&gt;</ph> 引用的、由任何托管对象持有的全部资源。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">此方法调用每个引用对象的 <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> 可以由其他对象多次调用。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>.</source>
          <target state="translated">重写 <ph id="ph1">&lt;see cref="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)" /&gt;</ph> 时，请注意不要引用在以前调用 <ph id="ph2">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> 时已释放的对象。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see cref="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>Waits for the pending asynchronous read to complete.</source>
          <target state="translated">等待挂起的异步读取完成。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>(Consider using the <ph id="ph1">&lt;see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> method instead.)</source>
          <target state="translated">（请考虑改用 <ph id="ph1">&lt;see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> 方法。）</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</source>
          <target state="translated">从流中读取的字节数，介于 0（零）和你请求的字节数之间。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Compression.GZipStream" /&gt;</ph> 仅在流的末尾返回零 (0)；否则将一直阻塞，只到至少有一个字节可用。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous read operations by using the <ph id="ph2">&lt;xref:System.IO.Stream.ReadAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">从开始<ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，你可以使用执行异步读取的操作<ph id="ph2">&lt;xref:System.IO.Stream.ReadAsync%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph> method is still available in <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph>方法是在中仍然可用<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>以支持旧版代码; 但是，你可以通过来实现异步 I/O 操作更轻松地使用新的异步方法。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>For more information, see .</source>
          <target state="translated">有关详细信息，请参阅。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>Call this method to determine how many bytes were read from the stream.</source>
          <target state="translated">调用此方法以确定已从流中读取的字节数。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>This method can be called once to return the amount of bytes read between calls to <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph>.</source>
          <target state="translated">可以一次调用此方法以返回到调用之间读取的字节数<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.BeginRead%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.EndRead%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>This method blocks until the I/O operation has completed.</source>
          <target state="translated">此方法将一直阻塞，直到 I/O 操作已完成。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph> class to compress and decompress a file.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream&gt;</ph>类来压缩和解压缩文件。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> did not originate from a <ph id="ph2">&lt;see cref="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> method on the current stream.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 不是源自当前流的 <ph id="ph2">&lt;see cref="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)">
          <source>The end operation cannot be performed because the stream is closed.</source>
          <target state="translated">由于流已关闭，因此无法执行结束操作。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>Handles the end of an asynchronous write operation.</source>
          <target state="translated">处理异步写入操作的结束。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>(Consider using the <ph id="ph1">&lt;see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> method instead.)</source>
          <target state="translated">（请考虑改用 <ph id="ph1">&lt;see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> 方法。）</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can perform asynchronous write operations by using the <ph id="ph2">&lt;xref:System.IO.Stream.WriteAsync%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">从开始<ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>，你可以通过执行异步写操作<ph id="ph2">&lt;xref:System.IO.Stream.WriteAsync%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndWrite%2A&gt;</ph> method is still available in <ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndWrite%2A&gt;</ph>方法是在中仍然可用<ph id="ph2">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>以支持旧版代码; 但是，你可以通过来实现异步 I/O 操作更轻松地使用新的异步方法。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>For more information, see .</source>
          <target state="translated">有关详细信息，请参阅。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndWrite%2A&gt;</ph> method completes the asynchronous write operation started in the <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.EndWrite%2A&gt;</ph>方法完成异步写入操作以启动<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.BeginWrite%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>The underlying stream is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">此基础流为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)">
          <source>The underlying stream is closed.</source>
          <target state="translated">基础流已关闭。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Flush">
          <source>The current implementation of this method has no functionality.</source>
          <target state="translated">此方法的当前实现没有任何功能。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Flush">
          <source>The current implementation of this method does not flush the internal buffer.</source>
          <target state="translated">此方法的当前实现不刷新内部缓冲区。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Flush">
          <source>The internal buffer is flushed when the object is disposed.</source>
          <target state="translated">释放此对象时刷新内部缓冲区。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Flush">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.Length">
          <source>This property is not supported and always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">此属性不受支持，并且总是引发 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.Length">
          <source>A long value.</source>
          <target state="translated">一个长值。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.Length">
          <source>This property is not supported on this stream.</source>
          <target state="translated">此流中不支持此属性。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.Position">
          <source>This property is not supported and always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">此属性不受支持，并且总是引发 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Compression.GZipStream.Position">
          <source>A long value.</source>
          <target state="translated">一个长值。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.IO.Compression.GZipStream.Position">
          <source>This property is not supported on this stream.</source>
          <target state="translated">此流中不支持此属性。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The array used to store decompressed bytes.</source>
          <target state="translated">用于存储解压缩字节的数组。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which the read bytes will be placed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中的字节偏移量，将在此处放置读取的字节。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of decompressed bytes to read.</source>
          <target state="translated">最多要读取的解压缩字节数。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a number of decompressed bytes into the specified byte array.</source>
          <target state="translated">将若干解压缩的字节读入指定的字节数组。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes that were decompressed into the byte array.</source>
          <target state="translated">解压缩到字节数组中的字节数。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If the end of the stream has been reached, zero or the number of bytes read is returned.</source>
          <target state="translated">如果已到达流的末尾，则返回 0 或已读取的字节数。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If data is found in an invalid format, an <ph id="ph1">&lt;xref:System.IO.InvalidDataException&gt;</ph> is thrown as one of the last operations.</source>
          <target state="translated">如果在格式无效中, 找到数据<ph id="ph1">&lt;xref:System.IO.InvalidDataException&gt;</ph>引发作为最后的操作之一。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>A cyclic redundancy check (CRC) is performed as one of the last operations of this method.</source>
          <target state="translated">循环冗余检查 (CRC) 都执行此方法的最后一个操作之一。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The following example shows how to compress and decompress bytes by using the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.Read%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Write%2A&gt;</ph> methods.</source>
          <target state="translated">下面的示例演示如何压缩和解压缩字节使用<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.Read%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Write%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> value was <ph id="ph2">&lt;see langword="Compress" /&gt;</ph> when the object was created.</source>
          <target state="translated">创建对象时 <ph id="ph1">&lt;see cref="T:System.IO.Compression.CompressionMode" /&gt;</ph> 值是 <ph id="ph2">&lt;see langword="Compress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> 或 -</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The underlying stream does not support reading.</source>
          <target state="translated">基础流不支持读取。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="count" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> length minus the index starting point is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 长度减去索引起始点小于 <ph id="ph2">&lt;paramref name="count" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The data is in an invalid format.</source>
          <target state="translated">数据的格式无效。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The stream is closed.</source>
          <target state="translated">流已关闭。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The location in the stream.</source>
          <target state="translated">流中的位置。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This property is not supported and always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">此属性不受支持，并且总是引发 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A long value.</source>
          <target state="translated">一个长值。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>This property is not supported on this stream.</source>
          <target state="translated">此流中不支持此属性。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.SetLength(System.Int64)">
          <source>The length of the stream.</source>
          <target state="translated">流的长度。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.SetLength(System.Int64)">
          <source>This property is not supported and always throws a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">此属性不受支持，并且总是引发 <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.SetLength(System.Int64)">
          <source>This property is not supported on this stream.</source>
          <target state="translated">此流中不支持此属性。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer that contains the data to compress.</source>
          <target state="translated">包含要压缩的数据的缓冲区。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> from which the bytes will be read.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 中的字节偏移量，将从此处开始读取字节。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">最多写入的字节数。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes compressed bytes to the underlying stream from the specified byte array.</source>
          <target state="translated">从指定的字节数组中将压缩的字节写入基础流。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The write operation might not occur immediately but is buffered until the buffer size is reached or until the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> method is called.</source>
          <target state="translated">写入操作可能不会立即发生，但直到达到缓冲区大小，或者直到缓冲<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.Flush%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.IO.Stream.Close%2A&gt;</ph>调用方法。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The following example shows how to compress and decompress bytes by using the <ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.Read%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Write%2A&gt;</ph> methods.</source>
          <target state="translated">下面的示例演示如何压缩和解压缩字节使用<ph id="ph1">&lt;xref:System.IO.Compression.GZipStream.Read%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.Compression.GZipStream.Write%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The write operation cannot be performed because the stream is closed.</source>
          <target state="translated">由于流已关闭，因此无法执行写入操作。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>