<Type Name="ZipArchiveEntry" FullName="System.IO.Compression.ZipArchiveEntry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62f0a4d5f3c357275fb62b9e2410c2ae912a01d8" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58718646" /></Metadata><TypeSignature Language="C#" Value="public class ZipArchiveEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ZipArchiveEntry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipArchiveEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipArchiveEntry" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipArchiveEntry" />
  <TypeSignature Language="F#" Value="type ZipArchiveEntry = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示压缩文档中的压缩文件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zip 存档包含每个压缩文件的一项。 <xref:System.IO.Compression.ZipArchiveEntry>类使你可以检查某项的属性和打开或删除的项。 当您打开一个条目时，可以通过写入到该压缩文件的流来修改压缩的文件。  
  
 用于操作的 zip 存档和其文件条目的方法将分布在三个类： <xref:System.IO.Compression.ZipFile>，<xref:System.IO.Compression.ZipArchive>和<xref:System.IO.Compression.ZipArchiveEntry>。  
  
|自...|使用...|  
|---------|----------|  
|从目录中创建的 zip 存档|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|解压缩 zip 存档到目录的内容|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|将新文件添加到现有的 zip 存档|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|检索 zip 存档中的文件|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|检索所有 zip 存档中的文件|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|若要将流打开到单个文件包含在 zip 存档文件|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|从 zip 存档中删除文件|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 如果引用`System.IO.Compression.FileSystem`在项目中的程序集，可以访问两个扩展方法<xref:System.IO.Compression.ZipArchiveEntry>类。 这些方法都<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>和<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>，并且它们使你可以解压缩到文件项的内容。 `System.IO.Compression.FileSystem`程序集不在可用[!INCLUDE[win8](~/includes/win8-md.md)]。 中[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]应用程序，可以通过使用解压缩存档的内容<xref:System.IO.Compression.DeflateStream>或<xref:System.IO.Compression.GZipStream>，或者可以使用[!INCLUDE[wrt](~/includes/wrt-md.md)]类型[压缩程序](https://go.microsoft.com/fwlink/p/?LinkId=246357)并[解压缩程序](https://go.microsoft.com/fwlink/?LinkId=246358)到压缩和解压缩文件。  
  
   
  
## Examples  
 第一个示例演示如何在 zip 存档中创建新的条目，并向其中写入。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 第二个示例演示如何使用<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>扩展方法。 必须引用`System.IO.Compression.FileSystem`代码项目中的要执行程序集。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Archive">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchive Archive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Compression.ZipArchive Archive" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.Archive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Archive As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Compression::ZipArchive ^ Archive { System::IO::Compression::ZipArchive ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Archive : System.IO.Compression.ZipArchive" Usage="System.IO.Compression.ZipArchiveEntry.Archive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取该项所属的 zip 存档。</summary>
        <value>项 zip 归档该项属于或 <see langword="null" />，如果该项已删除。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedLength">
      <MemberSignature Language="C#" Value="public long CompressedLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CompressedLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.CompressedLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompressedLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long CompressedLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.CompressedLength : int64" Usage="System.IO.Compression.ZipArchiveEntry.CompressedLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取项在 zip 存档中的已压缩大小。</summary>
        <value>在 zip 存档中的项的压缩大小。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 无法检索此属性，当模式设置为<xref:System.IO.Compression.ZipArchiveMode.Create>，或将模式设置为<xref:System.IO.Compression.ZipArchiveMode.Update>和打开条目。  
  
   
  
## Examples  
 下面的示例演示如何检索 zip 存档中的条目和评估条目的属性。 它使用<xref:System.IO.Compression.ZipArchiveEntry.Name%2A>属性显示的项的名称和<xref:System.IO.Compression.ZipArchiveEntry.Length%2A>和<xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A>属性计算多少文件被压缩。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">由于项已修改，属性的值不可用。</exception>
      </Docs>
    </Member>
    <Member MemberName="Crc32">
      <MemberSignature Language="C#" Value="public uint Crc32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Crc32" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.Crc32" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Crc32 As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 Crc32 { System::UInt32 get(); };" />
      <MemberSignature Language="F#" Value="member this.Crc32 : uint32" Usage="System.IO.Compression.ZipArchiveEntry.Crc32" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchiveEntry.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="zipArchiveEntry.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>删除 zip 存档项。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">已打开用于读取或写入的项。</exception>
        <exception cref="T:System.NotSupportedException">除 <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> 之外，此项的 zip 存档已通过一种模式中打开。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此项的 zip 存档。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExternalAttributes">
      <MemberSignature Language="C#" Value="public int ExternalAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExternalAttributes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.ExternalAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalAttributes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExternalAttributes { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExternalAttributes : int with get, set" Usage="System.IO.Compression.ZipArchiveEntry.ExternalAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>操作系统和应用程序特定的文件属性。</summary>
        <value>编写此输入时由应用程序编写的外部属性。 这同时依赖于主机操作系统和应用程序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 外部的属性的映射是主机系统相关。 对于 MS-DOS，低序位字节是 MS-DOS 目录属性字节。 Unix，高高位字节是经常用于存储的文件权限。 如果输入来自标准输入，此字段设置为零。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.IO.Compression.ZipArchiveEntry.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在 zip 存档中入口的相对路径。</summary>
        <value>在 zip 存档中入口的相对路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>属性包含相对路径，包括子目录的层次结构，zip 存档中的条目。 (与此相反，<xref:System.IO.Compression.ZipArchiveEntry.Name%2A>属性包含仅项的名称，不包括子目录层次结构。)例如，如果通过使用 zip 存档中创建两个条目<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>方法，并提供`NewEntry.txt`作为第一个条目的名称和`AddedFolder\\NewEntry.txt`对于第二个条目，这两个条目都`NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.Name%2A>属性。 第一个条目将还具有`NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>属性，但第二个条目会`AddedFolder\\NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>属性。  
  
 您可以指定任何字符串作为一个项，包括指定无效和绝对路径的字符串的路径。 因此，<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>属性可能包含格式不正确的值。 提取 zip 存档的内容时，无效或绝对路径可能会导致异常。  
  
   
  
## Examples  
 下面的示例演示如何循环访问内容的.zip 文件中，并提取包含.txt 扩展名的文件。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastWriteTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset LastWriteTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastWriteTime" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.LastWriteTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LastWriteTime As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeOffset LastWriteTime { DateTimeOffset get(); void set(DateTimeOffset value); };" />
      <MemberSignature Language="F#" Value="member this.LastWriteTime : DateTimeOffset with get, set" Usage="System.IO.Compression.ZipArchiveEntry.LastWriteTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置最后更改 zip 存档中的项的时间。</summary>
        <value>上次在 zip 存档的入口已经改变。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建新项时从现有的文件通过调用<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>方法，<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>修改属性的条目将自动设置为上一次文件。 创建新项时以编程方式通过调用<xref:System.IO.Compression.ZipArchive.CreateEntry%2A>方法，<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>项的属性自动设置为执行的时间。 如果您修改该条目，您必须显式设置<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>属性，如果希望此值以反映最新更改的时间。  
  
 当设置此属性，<xref:System.DateTimeOffset>值转换为特定于 zip 存档的时间戳格式。 此格式支持的分辨率为两秒。 最早的允许的值为 1980 年 1 月 1 0:00:00 （午夜）。 允许的最新值是 2107年 12 月 31 日 23:59:58 （之前午夜的一秒）。 如果上次编写时间的值不是有效的该属性返回的默认值为 1980年 1 月 1 日 0:00:00 （午夜）。  
  
   
  
## Examples  
 下面的示例演示如何打开 zip 存档中的条目、 修改它，并设置<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>属性设置为当前时间。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">尝试设置此属性失败，因为该项的 zip 存档处于 <see cref="F:System.IO.Compression.ZipArchiveMode.Read" /> 模式。</exception>
        <exception cref="T:System.IO.IOException">将存档模式设置为 <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />。  
  
- 或 - 
存档模式已设置为 <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> ，并且已打开该项。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">已尝试将此属性的值设置为早于 1980 年 1 月 1 日 0:00:00（午夜）或晚于 2107 年 12 月 31 日 23:59:58 (午夜的前一秒钟)。</exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.Compression.ZipArchiveEntry.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 zip 存档中的项的未压缩大小。</summary>
        <value>在 zip 存档中的项的未压缩大小。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 无法检索此属性，当模式设置为<xref:System.IO.Compression.ZipArchiveMode.Create>，或将模式设置为<xref:System.IO.Compression.ZipArchiveMode.Update>和打开条目。  
  
   
  
## Examples  
 下面的示例演示如何检索在 zip 存档条目和评估条目的属性。 它使用<xref:System.IO.Compression.ZipArchiveEntry.Name%2A>属性显示的项的名称和<xref:System.IO.Compression.ZipArchiveEntry.Length%2A>和<xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A>属性计算多少文件被压缩。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">由于项已修改，属性的值不可用。</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.IO.Compression.ZipArchiveEntry.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取在 zip 存档中的项的文件名。</summary>
        <value>在 zip 存档中的项的文件名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Compression.ZipArchiveEntry.Name%2A>属性包含的部分<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>最后一个目录分隔符字符后面的属性 (\\)，并且不包括子目录层次结构。 例如，如果通过使用 zip 存档中创建两个条目<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>方法，并提供`NewEntry.txt`作为第一个条目的名称和`AddedFolder\\NewEntry.txt`对于第二个条目，这两个条目都`NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.Name%2A>属性。 第一个条目将还具有`NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>属性，但第二个条目会`AddedFolder\\NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>属性。  
  
   
  
## Examples  
 下面的示例演示如何从 zip 存档中检索项并评估条目的属性。 它使用<xref:System.IO.Compression.ZipArchiveEntry.Name%2A>属性显示的项的名称和<xref:System.IO.Compression.ZipArchiveEntry.Length%2A>和<xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A>属性计算多少文件被压缩。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.IO.Stream Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchiveEntry.Open" />
      <MemberSignature Language="VB.NET" Value="Public Function Open () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ Open();" />
      <MemberSignature Language="F#" Value="member this.Open : unit -&gt; System.IO.Stream" Usage="zipArchiveEntry.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>打开 zip 存档项。</summary>
        <returns>表示输入的内容的流。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于访问 zip 存档中的条目的流。 检索流之后, 可以读取或写入到流。 时写入到流时，将 zip 存档中显示的项进行的修改。  
  
   
  
## Examples  
 下面的示例演示如何创建新的条目，将其与打开<xref:System.IO.Compression.ZipArchiveEntry.Open%2A>方法，并写入到流。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">当前已打开用于写入的项。  
  
- 或 - 
已从存档中删除的项。  
  
- 或 - 
已使用 <see cref="F:System.IO.Compression.ZipArchiveMode.Create" /> 模式打开此项的存档，并且该项已写入到该存档中。</exception>
        <exception cref="T:System.IO.InvalidDataException">存档中缺少该条目，或者该条目已损坏且无法读取。  
  
- 或 - 
该输入已经通过使用一种不被支持的压缩方法压缩。</exception>
        <exception cref="T:System.ObjectDisposedException">已释放此项的 zip 存档。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchiveEntry.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="zipArchiveEntry.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 zip 存档中检索项的相对路径。</summary>
        <returns>项的相对路径，即存储在 <see cref="P:System.IO.Compression.ZipArchiveEntry.FullName" /> 属性中的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>