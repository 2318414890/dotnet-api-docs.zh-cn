<Type Name="StackTrace" FullName="System.Diagnostics.StackTrace">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="111dbb266fdea14b49a674f0fec8c61c22827d8f" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StackTrace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StackTrace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.StackTrace" />
  <TypeSignature Language="VB.NET" Value="Public Class StackTrace" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackTrace" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ca03b-101">表示一个堆栈跟踪，它是一个或多个堆栈帧的有序集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca03b-101">Represents a stack trace, which is an ordered collection of one or more stack frames.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca03b-102"><xref:System.Diagnostics.StackTrace> 信息将与调试生成配置提供最有用的信息。</span><span class="sxs-lookup"><span data-stu-id="ca03b-102"><xref:System.Diagnostics.StackTrace> information will be most informative with Debug build configurations.</span></span> <span data-ttu-id="ca03b-103">默认情况下，调试版本中包含调试符号，而发布版本不能。</span><span class="sxs-lookup"><span data-stu-id="ca03b-103">By default, Debug builds include debug symbols, while Release builds do not.</span></span> <span data-ttu-id="ca03b-104">调试符号中包含的文件、 方法名称、 行号和列信息在构造中使用的大多数<xref:System.Diagnostics.StackFrame>和<xref:System.Diagnostics.StackTrace>对象。</span><span class="sxs-lookup"><span data-stu-id="ca03b-104">The debug symbols contain most of the file, method name, line number, and column information used in constructing <xref:System.Diagnostics.StackFrame> and <xref:System.Diagnostics.StackTrace> objects.</span></span>  
  
 <span data-ttu-id="ca03b-105"><xref:System.Diagnostics.StackTrace> 可能不报告任意多个方法调用预期，由于优化期间发生代码转换。</span><span class="sxs-lookup"><span data-stu-id="ca03b-105"><xref:System.Diagnostics.StackTrace> might not report as many method calls as expected, due to code transformations that occur during optimization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca03b-106">以下控制台应用程序演示如何创建一个简单<xref:System.Diagnostics.StackTrace>并循环访问其帧来获取调试和诊断信息。</span><span class="sxs-lookup"><span data-stu-id="ca03b-106">The following console application demonstrates how to create a simple <xref:System.Diagnostics.StackTrace> and iterate through its frames to obtain debugging and diagnostic information.</span></span>  
  
 [!code-cpp[StackTraceSample1#1](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample1/CPP/stacktracesample1.cpp#1)]
 [!code-csharp[StackTraceSample1#1](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample1/CS/stacktracesample1.cs#1)]
 [!code-vb[StackTraceSample1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample1/VB/stacktracesample1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="ca03b-107">若要访问非托管的代码继承者的功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca03b-107">for the ability of inheritors to access unmanaged code.</span>
      </span>
      <span data-ttu-id="ca03b-108">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca03b-108">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
      </span>
      <span data-ttu-id="ca03b-109">此类不能由部分受信任的代码继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca03b-109">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <altmember cref="P:System.Exception.StackTrace" />
    <altmember cref="P:System.Environment.StackTrace" />
    <altmember cref="P:System.Runtime.Serialization.Formatters.ServerFault.StackTrace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca03b-110">初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-110">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca03b-111">用调用方的帧初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-111">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca03b-112"><xref:System.Diagnostics.StackTrace>使用调用方的当前线程，创建，并且不包含文件名、 行号或列信息。</span><span class="sxs-lookup"><span data-stu-id="ca03b-112">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread, and does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="ca03b-113">如果你希望完成跟踪与仅摘要方法有关调用堆栈的信息，请使用此默认构造函数。</span><span class="sxs-lookup"><span data-stu-id="ca03b-113">Use this default constructor when you want a complete trace with only summary method information about the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca03b-114">下面的代码示例显示堆栈跟踪中的第一个和最后一个函数调用。</span><span class="sxs-lookup"><span data-stu-id="ca03b-114">The following code example displays the first and last function calls in a stack trace.</span></span>  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(bool fNeedFileInfo);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fNeedFileInfo">
          <span data-ttu-id="ca03b-115">如果为 <see langword="true" />，则捕获文件名、行号和列号；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-115">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca03b-116">用调用方的帧初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，可以选择捕获源信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-116">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame, optionally capturing source information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca03b-117"><xref:System.Diagnostics.StackTrace>使用调用方的当前线程创建。</span><span class="sxs-lookup"><span data-stu-id="ca03b-117">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca03b-118">下面的代码示例演示各种<xref:System.Diagnostics.StackTrace>构造函数方法。</span><span class="sxs-lookup"><span data-stu-id="ca03b-118">The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.</span></span>  
  
 [!code-cpp[StackFrameSample1#4](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#4)]
 [!code-csharp[StackFrameSample1#4](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#4)]
 [!code-vb[StackFrameSample1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (System.Diagnostics.StackFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.StackFrame frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (frame As StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(System::Diagnostics::StackFrame ^ frame);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="frame" Type="System.Diagnostics.StackFrame" />
      </Parameters>
      <Docs>
        <param name="frame">
          <span data-ttu-id="ca03b-119">
            <see cref="T:System.Diagnostics.StackTrace" /> 对象应包含的帧。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-119">The frame that the <see cref="T:System.Diagnostics.StackTrace" /> object should contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca03b-120">初始化包含单个帧的 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-120">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class that contains a single frame.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca03b-121">如果你不想进行的完整堆栈跟踪的开销，请使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="ca03b-121">Use this constructor when you do not want the overhead of a full stack trace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca03b-122">以下代码示例写入堆栈跟踪信息写入一个事件日志条目。</span><span class="sxs-lookup"><span data-stu-id="ca03b-122">The following code example writes stack trace information to an event log entry.</span></span>  
  
 [!code-cpp[StackTraceSample3#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample3/CPP/stacktracesample3.cpp#6)]
 [!code-csharp[StackTraceSample3#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample3/CS/stacktracesample3.cs#6)]
 [!code-vb[StackTraceSample3#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample3/VB/stacktracesample3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ca03b-123">从其构造堆栈跟踪的异常对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-123">The exception object from which to construct the stack trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca03b-124">使用提供的异常对象初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-124">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class using the provided exception object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca03b-125"><xref:System.Diagnostics.StackTrace>使用调用方的当前线程，创建，并且不包含文件名、 行号或列信息。</span><span class="sxs-lookup"><span data-stu-id="ca03b-125">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread, and does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="ca03b-126">生成堆栈跟踪描述在异常发生时的堆栈。</span><span class="sxs-lookup"><span data-stu-id="ca03b-126">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca03b-127">参数 <paramref name="e" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-127">The parameter <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (int skipFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 skipFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (skipFrames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(int skipFrames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="skipFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="skipFrames">
          <span data-ttu-id="ca03b-128">堆栈中的帧数，将从其上开始跟踪。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-128">The number of frames up the stack from which to start the trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca03b-129">从调用方的帧初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，跳过指定的帧数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-129">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame, skipping the specified number of frames.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca03b-130"><xref:System.Diagnostics.StackTrace>使用调用方的当前线程，创建，并且不包含文件名、 行号或列信息。</span><span class="sxs-lookup"><span data-stu-id="ca03b-130">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread, and does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="ca03b-131">如果要跳过的帧数大于或等于的帧时调用堆栈上的总数目将创建的实例，<xref:System.Diagnostics.StackTrace>不包含任何帧。</span><span class="sxs-lookup"><span data-stu-id="ca03b-131">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca03b-132">
            <paramref name="skipFrames" /> 参数为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-132">The <paramref name="skipFrames" /> parameter is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, int skipFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, int32 skipFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, skipFrames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, int skipFrames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="skipFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ca03b-133">从其构造堆栈跟踪的异常对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-133">The exception object from which to construct the stack trace.</span>
          </span>
        </param>
        <param name="skipFrames">
          <span data-ttu-id="ca03b-134">堆栈中的帧数，将从其上开始跟踪。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-134">The number of frames up the stack from which to start the trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca03b-135">使用提供的异常对象初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，并跳过指定的帧数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-135">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class using the provided exception object and skipping the specified number of frames.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca03b-136"><xref:System.Diagnostics.StackTrace>不包含文件名、 行号或列信息。</span><span class="sxs-lookup"><span data-stu-id="ca03b-136">The <xref:System.Diagnostics.StackTrace> does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="ca03b-137">生成堆栈跟踪描述在异常发生时的堆栈。</span><span class="sxs-lookup"><span data-stu-id="ca03b-137">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 <span data-ttu-id="ca03b-138">如果要跳过的帧数大于或等于的帧时调用堆栈上的总数目将创建的实例，<xref:System.Diagnostics.StackTrace>不包含任何帧。</span><span class="sxs-lookup"><span data-stu-id="ca03b-138">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca03b-139">参数 <paramref name="e" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-139">The parameter <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca03b-140">
            <paramref name="skipFrames" /> 参数为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-140">The <paramref name="skipFrames" /> parameter is negative.</span>
          </span>
        </exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 skipFrames, bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (skipFrames As Integer, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(int skipFrames, bool fNeedFileInfo);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="skipFrames" Type="System.Int32" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="skipFrames">
          <span data-ttu-id="ca03b-141">堆栈中的帧数，将从其上开始跟踪。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-141">The number of frames up the stack from which to start the trace.</span>
          </span>
        </param>
        <param name="fNeedFileInfo">
          <span data-ttu-id="ca03b-142">如果为 <see langword="true" />，则捕获文件名、行号和列号；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-142">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca03b-143">从调用方的帧初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，跳过指定的帧数并可以选择捕获源信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-143">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame, skipping the specified number of frames and optionally capturing source information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca03b-144">如果要跳过的帧数大于或等于的帧时调用堆栈上的总数目将创建的实例，<xref:System.Diagnostics.StackTrace>不包含任何帧。</span><span class="sxs-lookup"><span data-stu-id="ca03b-144">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca03b-145">下面的代码示例演示各种<xref:System.Diagnostics.StackTrace>构造函数方法。</span><span class="sxs-lookup"><span data-stu-id="ca03b-145">The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.</span></span>  
  
 [!code-cpp[StackFrameSample1#4](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#4)]
 [!code-csharp[StackFrameSample1#4](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#4)]
 [!code-vb[StackFrameSample1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca03b-146">
            <paramref name="skipFrames" /> 参数为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-146">The <paramref name="skipFrames" /> parameter is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (System.Threading.Thread targetThread, bool needFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Thread targetThread, bool needFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetThread As Thread, needFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(System::Threading::Thread ^ targetThread, bool needFileInfo);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="targetThread" Type="System.Threading.Thread" />
        <Parameter Name="needFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetThread">
          <span data-ttu-id="ca03b-147">请求其堆栈跟踪的线程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-147">The thread whose stack trace is requested.</span>
          </span>
        </param>
        <param name="needFileInfo">
          <span data-ttu-id="ca03b-148">如果为 <see langword="true" />，则捕获文件名、行号和列号；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-148">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca03b-149">初始化特定线程的 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，可以选择捕获源信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-149">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class for a specific thread, optionally capturing source information.</span>
          </span>
          <span data-ttu-id="ca03b-150">不要使用此构造函数重载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-150">Do not use this constructor overload.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ca03b-151">不要使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="ca03b-151">Do not use this constructor.</span></span> <span data-ttu-id="ca03b-152">它已过时，并且没有推荐的替代项。</span><span class="sxs-lookup"><span data-stu-id="ca03b-152">It is obsolete, and there is no recommended alternative.</span></span> <span data-ttu-id="ca03b-153">在挂起线程时，你无法获知它正在执行的代码，并且很容易发生死锁。</span><span class="sxs-lookup"><span data-stu-id="ca03b-153">When you suspend a thread, you have no way of knowing what code it is executing, and deadlocks can occur very easily.</span></span> <span data-ttu-id="ca03b-154">例如，如果在安全权限评估期间，您在线程保持锁定的情况下将其挂起，则 <xref:System.AppDomain> 中的其他线程可能被阻止。</span><span class="sxs-lookup"><span data-stu-id="ca03b-154">For example, if you suspend a thread while it holds locks during a security permission evaluation, other threads in the <xref:System.AppDomain> might be blocked.</span></span> <span data-ttu-id="ca03b-155">如果您挂起线程执行类构造函数时中的其他线程<xref:System.AppDomain>中尝试使用类被阻止。</span><span class="sxs-lookup"><span data-stu-id="ca03b-155">If you suspend a thread while it is executing a class constructor, other threads in the <xref:System.AppDomain> that attempt to use that class are blocked.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="ca03b-156">
            <paramref name="targetThread" /> 线程未暂停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-156">The thread <paramref name="targetThread" /> is not suspended.</span>
          </span>
        </exception>
        <altmember cref="T:System.Threading.Thread" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, int32 skipFrames, bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, skipFrames As Integer, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, int skipFrames, bool fNeedFileInfo);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="skipFrames" Type="System.Int32" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ca03b-157">从其构造堆栈跟踪的异常对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-157">The exception object from which to construct the stack trace.</span>
          </span>
        </param>
        <param name="skipFrames">
          <span data-ttu-id="ca03b-158">堆栈中的帧数，将从其上开始跟踪。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-158">The number of frames up the stack from which to start the trace.</span>
          </span>
        </param>
        <param name="fNeedFileInfo">
          <span data-ttu-id="ca03b-159">如果为 <see langword="true" />，则捕获文件名、行号和列号；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-159">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca03b-160">使用提供的异常对象初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，跳过指定的帧数并可以选择捕获源信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-160">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class using the provided exception object, skipping the specified number of frames and optionally capturing source information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca03b-161">生成堆栈跟踪描述在异常发生时的堆栈。</span><span class="sxs-lookup"><span data-stu-id="ca03b-161">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 <span data-ttu-id="ca03b-162">如果要跳过的帧数大于或等于的帧时调用堆栈上的总数目将创建的实例，<xref:System.Diagnostics.StackTrace>不包含任何帧。</span><span class="sxs-lookup"><span data-stu-id="ca03b-162">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca03b-163">参数 <paramref name="e" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-163">The parameter <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca03b-164">
            <paramref name="skipFrames" /> 参数为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-164">The <paramref name="skipFrames" /> parameter is negative.</span>
          </span>
        </exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception exception, bool needFileInfo);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, bool needFileInfo) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ exception, bool needFileInfo);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, bool fNeedFileInfo);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, bool fNeedFileInfo) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)" FrameworkAlternate="netcore-2.0;netcore-1.0;netcore-1.1;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, bool fNeedFileInfo);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1" />
        <Parameter Name="e" Type="System.Exception" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="needFileInfo" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ca03b-165">从其构造堆栈跟踪的异常对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-165">The exception object from which to construct the stack trace.</span>
          </span>
        </param>
        <param name="fNeedFileInfo">
          <span data-ttu-id="ca03b-166">如果为 <see langword="true" />，则捕获文件名、行号和列号；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-166">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="exception">To be added.</param>
        <param name="needFileInfo">To be added.</param>
        <summary>
          <span data-ttu-id="ca03b-167">使用所提供的异常对象初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，可以选择捕获源信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-167">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class, using the provided exception object and optionally capturing source information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca03b-168">生成堆栈跟踪描述在异常发生时的堆栈。</span><span class="sxs-lookup"><span data-stu-id="ca03b-168">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ca03b-169">参数 <paramref name="e" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-169">The parameter <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName="FrameCount">
      <MemberSignature Language="C#" Value="public virtual int FrameCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FrameCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.StackTrace.FrameCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FrameCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FrameCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca03b-170">获取堆栈跟踪中的帧数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-170">Gets the number of frames in the stack trace.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca03b-171">堆栈跟踪中的帧数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-171">The number of frames in the stack trace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ca03b-172">下面的代码示例显示堆栈跟踪中的第一个和最后一个函数调用。</span><span class="sxs-lookup"><span data-stu-id="ca03b-172">The following code example displays the first and last function calls in a stack trace.</span></span>  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFrame">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.StackFrame GetFrame (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.StackFrame GetFrame(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFrame (index As Integer) As StackFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::StackFrame ^ GetFrame(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.StackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="ca03b-173">所请求的堆栈帧的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-173">The index of the stack frame requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca03b-174">获取指定的堆栈帧。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-174">Gets the specified stack frame.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca03b-175">指定的堆栈帧。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-175">The specified stack frame.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca03b-176">堆栈帧进行编号从 0，这是推送的最后一个堆栈帧开始。</span><span class="sxs-lookup"><span data-stu-id="ca03b-176">Stack frames are numbered starting at 0, which is the last stack frame pushed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca03b-177">下面的代码示例显示堆栈跟踪中的第一个和最后一个函数调用。</span><span class="sxs-lookup"><span data-stu-id="ca03b-177">The following code example displays the first and last function calls in a stack trace.</span></span>  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
        <altmember cref="M:System.Diagnostics.StackTrace.GetFrames" />
      </Docs>
    </Member>
    <Member MemberName="GetFrames">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.StackFrame[] GetFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.StackFrame[] GetFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.GetFrames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFrames () As StackFrame()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::StackFrame ^&gt; ^ GetFrames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.StackFrame[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca03b-178">返回当前堆栈跟踪中所有堆栈帧的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-178">Returns a copy of all stack frames in the current stack trace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca03b-179">
            <see cref="T:System.Diagnostics.StackFrame" /> 类型的数组，表示堆栈跟踪中的函数调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-179">An array of type <see cref="T:System.Diagnostics.StackFrame" /> representing the function calls in the stack trace.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca03b-180">使用返回<xref:System.Diagnostics.StackFrame>数组枚举并检查函数调用<xref:System.Diagnostics.StackTrace>。</span><span class="sxs-lookup"><span data-stu-id="ca03b-180">Use the returned <xref:System.Diagnostics.StackFrame> array to enumerate and examine function calls in the <xref:System.Diagnostics.StackTrace>.</span></span> <span data-ttu-id="ca03b-181">返回数组的长度等于<xref:System.Diagnostics.StackTrace.FrameCount%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="ca03b-181">The length of the returned array is equal to the <xref:System.Diagnostics.StackTrace.FrameCount%2A> property value.</span></span>  
  
 <span data-ttu-id="ca03b-182"><xref:System.Diagnostics.StackFrame>数组元素是倒序顺序。</span><span class="sxs-lookup"><span data-stu-id="ca03b-182">The <xref:System.Diagnostics.StackFrame> array elements are in reverse chronological order.</span></span> <span data-ttu-id="ca03b-183"><xref:System.Diagnostics.StackFrame>在阵列上索引 0 表示堆栈跟踪和推送到调用堆栈上的最后一帧中的最新的函数调用。</span><span class="sxs-lookup"><span data-stu-id="ca03b-183">The <xref:System.Diagnostics.StackFrame> at array index 0 represents the most recent function call in the stack trace and the last frame pushed onto the call stack.</span></span> <span data-ttu-id="ca03b-184"><xref:System.Diagnostics.StackFrame>数组索引处<xref:System.Diagnostics.StackTrace.FrameCount%2A>减 1 表示最旧函数中调用的堆栈跟踪以及推送到调用堆栈上的第一帧。</span><span class="sxs-lookup"><span data-stu-id="ca03b-184">The <xref:System.Diagnostics.StackFrame> at array index <xref:System.Diagnostics.StackTrace.FrameCount%2A> minus 1 represents the oldest function call in the stack trace and the first frame pushed onto the call stack.</span></span>  
  
 <span data-ttu-id="ca03b-185">使用<xref:System.Diagnostics.StackTrace.GetFrames%2A>方法来获取堆栈跟踪; 中的所有堆栈帧使用<xref:System.Diagnostics.StackTrace.GetFrame%2A>方法来都获取堆栈跟踪中的特定堆栈帧。</span><span class="sxs-lookup"><span data-stu-id="ca03b-185">Use the <xref:System.Diagnostics.StackTrace.GetFrames%2A> method to obtain all stack frames in a stack trace; use the <xref:System.Diagnostics.StackTrace.GetFrame%2A> method to obtain a specific stack frame in a stack trace.</span></span> <span data-ttu-id="ca03b-186"><xref:System.Diagnostics.StackFrame>索引以同样的顺序的两个方法。</span><span class="sxs-lookup"><span data-stu-id="ca03b-186">The <xref:System.Diagnostics.StackFrame> indexes are ordered alike by the two methods.</span></span> <span data-ttu-id="ca03b-187">例如，<xref:System.Diagnostics.StackFrame>返回的数组中索引 0 处<xref:System.Diagnostics.StackTrace.GetFrames%2A>等效于<xref:System.Diagnostics.StackFrame>返回<xref:System.Diagnostics.StackTrace.GetFrame%2A>输入索引编号为 0。</span><span class="sxs-lookup"><span data-stu-id="ca03b-187">For example, the <xref:System.Diagnostics.StackFrame> at index 0 in the array returned by <xref:System.Diagnostics.StackTrace.GetFrames%2A> is equivalent to the <xref:System.Diagnostics.StackFrame> returned by <xref:System.Diagnostics.StackTrace.GetFrame%2A> with an input index of 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca03b-188">下面的代码示例演示如何枚举中的帧<xref:System.Diagnostics.StackTrace>。</span><span class="sxs-lookup"><span data-stu-id="ca03b-188">The following code example demonstrates enumerating the frames in a <xref:System.Diagnostics.StackTrace>.</span></span>  
  
 [!code-cpp[StackTraceSample2#3](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample2/CPP/stacktracesample2.cpp#3)]
 [!code-csharp[StackTraceSample2#3](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample2/CS/stacktracesample2.cs#3)]
 [!code-vb[StackTraceSample2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample2/VB/stacktracesample2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
        <altmember cref="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="METHODS_TO_SKIP">
      <MemberSignature Language="C#" Value="public const int METHODS_TO_SKIP = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 METHODS_TO_SKIP = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP" />
      <MemberSignature Language="VB.NET" Value="Public Const METHODS_TO_SKIP As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int METHODS_TO_SKIP = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca03b-189">定义要从堆栈跟踪中省略的默认方法数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-189">Defines the default for the number of methods to omit from the stack trace.</span>
          </span>
          <span data-ttu-id="ca03b-190">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-190">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca03b-191">方法，以开头的堆栈跟踪跳过数的默认值。</span><span class="sxs-lookup"><span data-stu-id="ca03b-191">The default value for the number of methods to skip at the beginning of the stack trace.</span></span> <span data-ttu-id="ca03b-192">此常量的值为 0。</span><span class="sxs-lookup"><span data-stu-id="ca03b-192">The value of this constant is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca03b-193">生成堆栈跟踪的可读表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-193">Builds a readable representation of the stack trace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca03b-194">堆栈帧的可读表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca03b-194">A readable representation of the stack trace.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ca03b-195">以下代码示例写入堆栈跟踪信息写入一个事件日志条目。</span><span class="sxs-lookup"><span data-stu-id="ca03b-195">The following code example writes stack trace information to an event log entry.</span></span>  
  
 [!code-cpp[StackTraceSample3#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample3/CPP/stacktracesample3.cpp#6)]
 [!code-csharp[StackTraceSample3#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample3/CS/stacktracesample3.cs#6)]
 [!code-vb[StackTraceSample3#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample3/VB/stacktracesample3.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>