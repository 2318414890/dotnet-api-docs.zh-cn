<Type Name="StackTrace" FullName="System.Diagnostics.StackTrace">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5779118820a84e51ecd6314bb21eb904fc4c1b56" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55394711" /></Metadata><TypeSignature Language="C#" Value="public class StackTrace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StackTrace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.StackTrace" />
  <TypeSignature Language="VB.NET" Value="Public Class StackTrace" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackTrace" />
  <TypeSignature Language="F#" Value="type StackTrace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="43b6b-101">表示一个堆栈跟踪，它是一个或多个堆栈帧的有序集合。</span><span class="sxs-lookup"><span data-stu-id="43b6b-101">Represents a stack trace, which is an ordered collection of one or more stack frames.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b6b-102"><xref:System.Diagnostics.StackTrace> 将最信息性与调试生成配置信息。</span><span class="sxs-lookup"><span data-stu-id="43b6b-102"><xref:System.Diagnostics.StackTrace> information will be most informative with Debug build configurations.</span></span> <span data-ttu-id="43b6b-103">默认情况下，调试版本中包含调试符号，而发布版本不能。</span><span class="sxs-lookup"><span data-stu-id="43b6b-103">By default, Debug builds include debug symbols, while Release builds do not.</span></span> <span data-ttu-id="43b6b-104">调试符号包含大部分文件、 方法名称、 行号和列信息用于构造<xref:System.Diagnostics.StackFrame>和<xref:System.Diagnostics.StackTrace>对象。</span><span class="sxs-lookup"><span data-stu-id="43b6b-104">The debug symbols contain most of the file, method name, line number, and column information used in constructing <xref:System.Diagnostics.StackFrame> and <xref:System.Diagnostics.StackTrace> objects.</span></span>  
  
 <span data-ttu-id="43b6b-105"><xref:System.Diagnostics.StackTrace> 可能不报告任意多个方法调用按预期运行，由于优化期间发生代码转换。</span><span class="sxs-lookup"><span data-stu-id="43b6b-105"><xref:System.Diagnostics.StackTrace> might not report as many method calls as expected, due to code transformations that occur during optimization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43b6b-106">以下控制台应用程序演示如何创建一个简单<xref:System.Diagnostics.StackTrace>并循环访问其帧来获取调试和诊断信息。</span><span class="sxs-lookup"><span data-stu-id="43b6b-106">The following console application demonstrates how to create a simple <xref:System.Diagnostics.StackTrace> and iterate through its frames to obtain debugging and diagnostic information.</span></span>  
  
 [!code-cpp[StackTraceSample1#1](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample1/CPP/stacktracesample1.cpp#1)]
 [!code-csharp[StackTraceSample1#1](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample1/CS/stacktracesample1.cs#1)]
 [!code-vb[StackTraceSample1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample1/VB/stacktracesample1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="43b6b-107">用于访问非托管的代码的继承者的功能。</span><span class="sxs-lookup"><span data-stu-id="43b6b-107">for the ability of inheritors to access unmanaged code.</span></span> <span data-ttu-id="43b6b-108">关联枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="43b6b-108">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span> <span data-ttu-id="43b6b-109">不能由部分受信任代码继承此类。</span><span class="sxs-lookup"><span data-stu-id="43b6b-109">This class cannot be inherited by partially trusted code.</span></span></permission>
    <altmember cref="P:System.Exception.StackTrace" />
    <altmember cref="P:System.Environment.StackTrace" />
    <altmember cref="P:System.Runtime.Serialization.Formatters.ServerFault.StackTrace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43b6b-110">初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="43b6b-110">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43b6b-111">用调用方的帧初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="43b6b-111">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b6b-112"><xref:System.Diagnostics.StackTrace>使用调用方的当前线程创建，并且不包含文件名、 行号，或者列信息。</span><span class="sxs-lookup"><span data-stu-id="43b6b-112">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread, and does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="43b6b-113">当你想仅摘要方法有关的信息的调用堆栈的完整跟踪时，请使用此默认构造函数。</span><span class="sxs-lookup"><span data-stu-id="43b6b-113">Use this default constructor when you want a complete trace with only summary method information about the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43b6b-114">下面的代码示例显示堆栈跟踪中的第一个和最后一个函数调用。</span><span class="sxs-lookup"><span data-stu-id="43b6b-114">The following code example displays the first and last function calls in a stack trace.</span></span>  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(bool fNeedFileInfo);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace fNeedFileInfo" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fNeedFileInfo"><span data-ttu-id="43b6b-115">如果为 <see langword="true" />，则捕获文件名、行号和列号；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="43b6b-115"><see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="43b6b-116">用调用方的帧初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，可以选择捕获源信息。</span><span class="sxs-lookup"><span data-stu-id="43b6b-116">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame, optionally capturing source information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b6b-117"><xref:System.Diagnostics.StackTrace>使用调用方的当前线程创建的。</span><span class="sxs-lookup"><span data-stu-id="43b6b-117">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43b6b-118">下面的代码示例演示了各种<xref:System.Diagnostics.StackTrace>构造函数方法。</span><span class="sxs-lookup"><span data-stu-id="43b6b-118">The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.</span></span>  
  
 [!code-cpp[StackFrameSample1#4](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#4)]
 [!code-csharp[StackFrameSample1#4](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#4)]
 [!code-vb[StackFrameSample1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (System.Diagnostics.StackFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.StackFrame frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (frame As StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(System::Diagnostics::StackFrame ^ frame);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : System.Diagnostics.StackFrame -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace frame" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="frame" Type="System.Diagnostics.StackFrame" />
      </Parameters>
      <Docs>
        <param name="frame"><span data-ttu-id="43b6b-119"><see cref="T:System.Diagnostics.StackTrace" /> 对象应包含的帧。</span><span class="sxs-lookup"><span data-stu-id="43b6b-119">The frame that the <see cref="T:System.Diagnostics.StackTrace" /> object should contain.</span></span></param>
        <summary><span data-ttu-id="43b6b-120">初始化包含单个帧的 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="43b6b-120">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class that contains a single frame.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b6b-121">如果您不想进行完整堆栈跟踪的开销，请使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="43b6b-121">Use this constructor when you do not want the overhead of a full stack trace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43b6b-122">以下代码示例写入堆栈跟踪信息的事件日志条目。</span><span class="sxs-lookup"><span data-stu-id="43b6b-122">The following code example writes stack trace information to an event log entry.</span></span>  
  
 [!code-cpp[StackTraceSample3#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample3/CPP/stacktracesample3.cpp#6)]
 [!code-csharp[StackTraceSample3#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample3/CS/stacktracesample3.cs#6)]
 [!code-vb[StackTraceSample3#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample3/VB/stacktracesample3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : Exception -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace e" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="43b6b-123">从其构造堆栈跟踪的异常对象。</span><span class="sxs-lookup"><span data-stu-id="43b6b-123">The exception object from which to construct the stack trace.</span></span></param>
        <summary><span data-ttu-id="43b6b-124">使用提供的异常对象初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="43b6b-124">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class using the provided exception object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b6b-125"><xref:System.Diagnostics.StackTrace>使用调用方的当前线程创建，并且不包含文件名、 行号，或者列信息。</span><span class="sxs-lookup"><span data-stu-id="43b6b-125">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread, and does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="43b6b-126">生成的堆栈跟踪的异常时描述堆栈。</span><span class="sxs-lookup"><span data-stu-id="43b6b-126">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43b6b-127">参数 <paramref name="e" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43b6b-127">The parameter <paramref name="e" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (int skipFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 skipFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (skipFrames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(int skipFrames);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : int -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace skipFrames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="skipFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="skipFrames"><span data-ttu-id="43b6b-128">堆栈中的帧数，将从其上开始跟踪。</span><span class="sxs-lookup"><span data-stu-id="43b6b-128">The number of frames up the stack from which to start the trace.</span></span></param>
        <summary><span data-ttu-id="43b6b-129">从调用方的帧初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，跳过指定的帧数。</span><span class="sxs-lookup"><span data-stu-id="43b6b-129">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame, skipping the specified number of frames.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b6b-130"><xref:System.Diagnostics.StackTrace>使用调用方的当前线程创建，并且不包含文件名、 行号，或者列信息。</span><span class="sxs-lookup"><span data-stu-id="43b6b-130">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread, and does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="43b6b-131">如果要跳过的帧数大于或等于上时调用堆栈帧的总数创建实例，<xref:System.Diagnostics.StackTrace>不包含任何帧。</span><span class="sxs-lookup"><span data-stu-id="43b6b-131">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="43b6b-132"><paramref name="skipFrames" /> 参数为负。</span><span class="sxs-lookup"><span data-stu-id="43b6b-132">The <paramref name="skipFrames" /> parameter is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, int skipFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, int32 skipFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, skipFrames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, int skipFrames);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : Exception * int -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (e, skipFrames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="skipFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="43b6b-133">从其构造堆栈跟踪的异常对象。</span><span class="sxs-lookup"><span data-stu-id="43b6b-133">The exception object from which to construct the stack trace.</span></span></param>
        <param name="skipFrames"><span data-ttu-id="43b6b-134">堆栈中的帧数，将从其上开始跟踪。</span><span class="sxs-lookup"><span data-stu-id="43b6b-134">The number of frames up the stack from which to start the trace.</span></span></param>
        <summary><span data-ttu-id="43b6b-135">使用提供的异常对象初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，并跳过指定的帧数。</span><span class="sxs-lookup"><span data-stu-id="43b6b-135">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class using the provided exception object and skipping the specified number of frames.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b6b-136"><xref:System.Diagnostics.StackTrace>不包含文件名、 行号，或者列信息。</span><span class="sxs-lookup"><span data-stu-id="43b6b-136">The <xref:System.Diagnostics.StackTrace> does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="43b6b-137">生成的堆栈跟踪的异常时描述堆栈。</span><span class="sxs-lookup"><span data-stu-id="43b6b-137">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 <span data-ttu-id="43b6b-138">如果要跳过的帧数大于或等于上时调用堆栈帧的总数创建实例，<xref:System.Diagnostics.StackTrace>不包含任何帧。</span><span class="sxs-lookup"><span data-stu-id="43b6b-138">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43b6b-139">参数 <paramref name="e" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43b6b-139">The parameter <paramref name="e" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="43b6b-140"><paramref name="skipFrames" /> 参数为负。</span><span class="sxs-lookup"><span data-stu-id="43b6b-140">The <paramref name="skipFrames" /> parameter is negative.</span></span></exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 skipFrames, bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (skipFrames As Integer, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : int * bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (skipFrames, fNeedFileInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="skipFrames" Type="System.Int32" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="skipFrames"><span data-ttu-id="43b6b-141">堆栈中的帧数，将从其上开始跟踪。</span><span class="sxs-lookup"><span data-stu-id="43b6b-141">The number of frames up the stack from which to start the trace.</span></span></param>
        <param name="fNeedFileInfo"><span data-ttu-id="43b6b-142">如果为 <see langword="true" />，则捕获文件名、行号和列号；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="43b6b-142"><see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="43b6b-143">从调用方的帧初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，跳过指定的帧数并可以选择捕获源信息。</span><span class="sxs-lookup"><span data-stu-id="43b6b-143">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame, skipping the specified number of frames and optionally capturing source information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b6b-144">如果要跳过的帧数大于或等于上时调用堆栈帧的总数创建实例，<xref:System.Diagnostics.StackTrace>不包含任何帧。</span><span class="sxs-lookup"><span data-stu-id="43b6b-144">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43b6b-145">下面的代码示例演示了各种<xref:System.Diagnostics.StackTrace>构造函数方法。</span><span class="sxs-lookup"><span data-stu-id="43b6b-145">The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.</span></span>  
  
 [!code-cpp[StackFrameSample1#4](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#4)]
 [!code-csharp[StackFrameSample1#4](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#4)]
 [!code-vb[StackFrameSample1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="43b6b-146"><paramref name="skipFrames" /> 参数为负。</span><span class="sxs-lookup"><span data-stu-id="43b6b-146">The <paramref name="skipFrames" /> parameter is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (System.Threading.Thread targetThread, bool needFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Thread targetThread, bool needFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetThread As Thread, needFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(System::Threading::Thread ^ targetThread, bool needFileInfo);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : System.Threading.Thread * bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (targetThread, needFileInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This constructor has been deprecated.  Please use a constructor that does not require a Thread parameter.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="targetThread" Type="System.Threading.Thread" />
        <Parameter Name="needFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetThread"><span data-ttu-id="43b6b-147">请求其堆栈跟踪的线程。</span><span class="sxs-lookup"><span data-stu-id="43b6b-147">The thread whose stack trace is requested.</span></span></param>
        <param name="needFileInfo"><span data-ttu-id="43b6b-148">如果为 <see langword="true" />，则捕获文件名、行号和列号；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="43b6b-148"><see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="43b6b-149">初始化特定线程的 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，可以选择捕获源信息。</span><span class="sxs-lookup"><span data-stu-id="43b6b-149">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class for a specific thread, optionally capturing source information.</span></span>  
  
<span data-ttu-id="43b6b-150">不要使用此构造函数重载。</span><span class="sxs-lookup"><span data-stu-id="43b6b-150">Do not use this constructor overload.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="43b6b-151">不要使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="43b6b-151">Do not use this constructor.</span></span> <span data-ttu-id="43b6b-152">它已过时，并且没有推荐的替代项。</span><span class="sxs-lookup"><span data-stu-id="43b6b-152">It is obsolete, and there is no recommended alternative.</span></span> <span data-ttu-id="43b6b-153">在挂起线程时，你无法获知它正在执行的代码，并且很容易发生死锁。</span><span class="sxs-lookup"><span data-stu-id="43b6b-153">When you suspend a thread, you have no way of knowing what code it is executing, and deadlocks can occur very easily.</span></span> <span data-ttu-id="43b6b-154">例如，如果在安全权限评估期间，您在线程保持锁定的情况下将其挂起，则 <xref:System.AppDomain> 中的其他线程可能被阻止。</span><span class="sxs-lookup"><span data-stu-id="43b6b-154">For example, if you suspend a thread while it holds locks during a security permission evaluation, other threads in the <xref:System.AppDomain> might be blocked.</span></span> <span data-ttu-id="43b6b-155">如果您挂起线程执行的类构造函数时，其他线程中<xref:System.AppDomain>中尝试使用类被阻止。</span><span class="sxs-lookup"><span data-stu-id="43b6b-155">If you suspend a thread while it is executing a class constructor, other threads in the <xref:System.AppDomain> that attempt to use that class are blocked.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException"><span data-ttu-id="43b6b-156"><paramref name="targetThread" /> 线程未暂停。</span><span class="sxs-lookup"><span data-stu-id="43b6b-156">The thread <paramref name="targetThread" /> is not suspended.</span></span></exception>
        <altmember cref="T:System.Threading.Thread" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, int32 skipFrames, bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, skipFrames As Integer, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : Exception * int * bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (e, skipFrames, fNeedFileInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="skipFrames" Type="System.Int32" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="43b6b-157">从其构造堆栈跟踪的异常对象。</span><span class="sxs-lookup"><span data-stu-id="43b6b-157">The exception object from which to construct the stack trace.</span></span></param>
        <param name="skipFrames"><span data-ttu-id="43b6b-158">堆栈中的帧数，将从其上开始跟踪。</span><span class="sxs-lookup"><span data-stu-id="43b6b-158">The number of frames up the stack from which to start the trace.</span></span></param>
        <param name="fNeedFileInfo"><span data-ttu-id="43b6b-159">如果为 <see langword="true" />，则捕获文件名、行号和列号；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="43b6b-159"><see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="43b6b-160">使用提供的异常对象初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，跳过指定的帧数并可以选择捕获源信息。</span><span class="sxs-lookup"><span data-stu-id="43b6b-160">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class using the provided exception object, skipping the specified number of frames and optionally capturing source information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b6b-161">生成的堆栈跟踪的异常时描述堆栈。</span><span class="sxs-lookup"><span data-stu-id="43b6b-161">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 <span data-ttu-id="43b6b-162">如果要跳过的帧数大于或等于上时调用堆栈帧的总数创建实例，<xref:System.Diagnostics.StackTrace>不包含任何帧。</span><span class="sxs-lookup"><span data-stu-id="43b6b-162">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43b6b-163">参数 <paramref name="e" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43b6b-163">The parameter <paramref name="e" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="43b6b-164"><paramref name="skipFrames" /> 参数为负。</span><span class="sxs-lookup"><span data-stu-id="43b6b-164">The <paramref name="skipFrames" /> parameter is negative.</span></span></exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception exception, bool needFileInfo);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, bool needFileInfo) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ exception, bool needFileInfo);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, bool fNeedFileInfo);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, bool fNeedFileInfo) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, bool fNeedFileInfo);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : Exception * bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (e, fNeedFileInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1" />
        <Parameter Name="e" Type="System.Exception" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="needFileInfo" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="43b6b-165">从其构造堆栈跟踪的异常对象。</span><span class="sxs-lookup"><span data-stu-id="43b6b-165">The exception object from which to construct the stack trace.</span></span></param>
        <param name="fNeedFileInfo"><span data-ttu-id="43b6b-166">如果为 <see langword="true" />，则捕获文件名、行号和列号；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="43b6b-166"><see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span></span></param>
        <param name="exception"><span data-ttu-id="43b6b-167">从其构造堆栈跟踪的异常对象。</span><span class="sxs-lookup"><span data-stu-id="43b6b-167">The exception object from which to construct the stack trace.</span></span></param>
        <param name="needFileInfo"><span data-ttu-id="43b6b-168">如果为 <see langword="true" />，则捕获文件名、行号和列号；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="43b6b-168"><see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="43b6b-169">使用所提供的异常对象初始化 <see cref="T:System.Diagnostics.StackTrace" /> 类的新实例，可以选择捕获源信息。</span><span class="sxs-lookup"><span data-stu-id="43b6b-169">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class, using the provided exception object and optionally capturing source information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b6b-170">生成的堆栈跟踪的异常时描述堆栈。</span><span class="sxs-lookup"><span data-stu-id="43b6b-170">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="43b6b-171">参数 <paramref name="e" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43b6b-171">The parameter <paramref name="e" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName="FrameCount">
      <MemberSignature Language="C#" Value="public virtual int FrameCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FrameCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.StackTrace.FrameCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FrameCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FrameCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FrameCount : int" Usage="System.Diagnostics.StackTrace.FrameCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43b6b-172">获取堆栈跟踪中的帧数。</span><span class="sxs-lookup"><span data-stu-id="43b6b-172">Gets the number of frames in the stack trace.</span></span></summary>
        <value><span data-ttu-id="43b6b-173">堆栈跟踪中的帧数。</span><span class="sxs-lookup"><span data-stu-id="43b6b-173">The number of frames in the stack trace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="43b6b-174">下面的代码示例显示堆栈跟踪中的第一个和最后一个函数调用。</span><span class="sxs-lookup"><span data-stu-id="43b6b-174">The following code example displays the first and last function calls in a stack trace.</span></span>  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFrame">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.StackFrame GetFrame (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.StackFrame GetFrame(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFrame (index As Integer) As StackFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::StackFrame ^ GetFrame(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetFrame : int -&gt; System.Diagnostics.StackFrame&#xA;override this.GetFrame : int -&gt; System.Diagnostics.StackFrame" Usage="stackTrace.GetFrame index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.StackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="43b6b-175">所请求的堆栈帧的索引。</span><span class="sxs-lookup"><span data-stu-id="43b6b-175">The index of the stack frame requested.</span></span></param>
        <summary><span data-ttu-id="43b6b-176">获取指定的堆栈帧。</span><span class="sxs-lookup"><span data-stu-id="43b6b-176">Gets the specified stack frame.</span></span></summary>
        <returns><span data-ttu-id="43b6b-177">指定的堆栈帧。</span><span class="sxs-lookup"><span data-stu-id="43b6b-177">The specified stack frame.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b6b-178">堆栈帧进行编号从 0，这是最后一个推送的堆栈帧开始。</span><span class="sxs-lookup"><span data-stu-id="43b6b-178">Stack frames are numbered starting at 0, which is the last stack frame pushed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43b6b-179">下面的代码示例显示堆栈跟踪中的第一个和最后一个函数调用。</span><span class="sxs-lookup"><span data-stu-id="43b6b-179">The following code example displays the first and last function calls in a stack trace.</span></span>  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
        <altmember cref="M:System.Diagnostics.StackTrace.GetFrames" />
      </Docs>
    </Member>
    <Member MemberName="GetFrames">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.StackFrame[] GetFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.StackFrame[] GetFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.GetFrames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFrames () As StackFrame()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::StackFrame ^&gt; ^ GetFrames();" />
      <MemberSignature Language="F#" Value="abstract member GetFrames : unit -&gt; System.Diagnostics.StackFrame[]&#xA;override this.GetFrames : unit -&gt; System.Diagnostics.StackFrame[]" Usage="stackTrace.GetFrames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.StackFrame[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43b6b-180">返回当前堆栈跟踪中所有堆栈帧的副本。</span><span class="sxs-lookup"><span data-stu-id="43b6b-180">Returns a copy of all stack frames in the current stack trace.</span></span></summary>
        <returns><span data-ttu-id="43b6b-181"><see cref="T:System.Diagnostics.StackFrame" /> 类型的数组，表示堆栈跟踪中的函数调用。</span><span class="sxs-lookup"><span data-stu-id="43b6b-181">An array of type <see cref="T:System.Diagnostics.StackFrame" /> representing the function calls in the stack trace.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b6b-182">使用返回<xref:System.Diagnostics.StackFrame>数组来枚举并检查函数调用中<xref:System.Diagnostics.StackTrace>。</span><span class="sxs-lookup"><span data-stu-id="43b6b-182">Use the returned <xref:System.Diagnostics.StackFrame> array to enumerate and examine function calls in the <xref:System.Diagnostics.StackTrace>.</span></span> <span data-ttu-id="43b6b-183">返回数组的长度等于<xref:System.Diagnostics.StackTrace.FrameCount%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="43b6b-183">The length of the returned array is equal to the <xref:System.Diagnostics.StackTrace.FrameCount%2A> property value.</span></span>  
  
 <span data-ttu-id="43b6b-184"><xref:System.Diagnostics.StackFrame>数组元素是按反向时间顺序。</span><span class="sxs-lookup"><span data-stu-id="43b6b-184">The <xref:System.Diagnostics.StackFrame> array elements are in reverse chronological order.</span></span> <span data-ttu-id="43b6b-185"><xref:System.Diagnostics.StackFrame>在数组索引为 0 表示最新的函数调用的堆栈跟踪和推送到调用堆栈上的最后一帧中。</span><span class="sxs-lookup"><span data-stu-id="43b6b-185">The <xref:System.Diagnostics.StackFrame> at array index 0 represents the most recent function call in the stack trace and the last frame pushed onto the call stack.</span></span> <span data-ttu-id="43b6b-186"><xref:System.Diagnostics.StackFrame>的数组索引处<xref:System.Diagnostics.StackTrace.FrameCount%2A>减 1 表示最旧的函数调用的堆栈跟踪和推送到调用堆栈上的第一帧中。</span><span class="sxs-lookup"><span data-stu-id="43b6b-186">The <xref:System.Diagnostics.StackFrame> at array index <xref:System.Diagnostics.StackTrace.FrameCount%2A> minus 1 represents the oldest function call in the stack trace and the first frame pushed onto the call stack.</span></span>  
  
 <span data-ttu-id="43b6b-187">使用<xref:System.Diagnostics.StackTrace.GetFrames%2A>方法来获取堆栈跟踪; 中的所有堆栈帧使用<xref:System.Diagnostics.StackTrace.GetFrame%2A>方法来都获取堆栈跟踪中的特定堆栈帧。</span><span class="sxs-lookup"><span data-stu-id="43b6b-187">Use the <xref:System.Diagnostics.StackTrace.GetFrames%2A> method to obtain all stack frames in a stack trace; use the <xref:System.Diagnostics.StackTrace.GetFrame%2A> method to obtain a specific stack frame in a stack trace.</span></span> <span data-ttu-id="43b6b-188"><xref:System.Diagnostics.StackFrame>同样的两种方法的顺序索引。</span><span class="sxs-lookup"><span data-stu-id="43b6b-188">The <xref:System.Diagnostics.StackFrame> indexes are ordered alike by the two methods.</span></span> <span data-ttu-id="43b6b-189">例如，<xref:System.Diagnostics.StackFrame>返回的数组中索引 0 处<xref:System.Diagnostics.StackTrace.GetFrames%2A>等效于<xref:System.Diagnostics.StackFrame>返回的<xref:System.Diagnostics.StackTrace.GetFrame%2A>输入索引编号为 0。</span><span class="sxs-lookup"><span data-stu-id="43b6b-189">For example, the <xref:System.Diagnostics.StackFrame> at index 0 in the array returned by <xref:System.Diagnostics.StackTrace.GetFrames%2A> is equivalent to the <xref:System.Diagnostics.StackFrame> returned by <xref:System.Diagnostics.StackTrace.GetFrame%2A> with an input index of 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43b6b-190">下面的代码示例演示如何枚举中的框架<xref:System.Diagnostics.StackTrace>。</span><span class="sxs-lookup"><span data-stu-id="43b6b-190">The following code example demonstrates enumerating the frames in a <xref:System.Diagnostics.StackTrace>.</span></span>  
  
 [!code-cpp[StackTraceSample2#3](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample2/CPP/stacktracesample2.cpp#3)]
 [!code-csharp[StackTraceSample2#3](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample2/CS/stacktracesample2.cs#3)]
 [!code-vb[StackTraceSample2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample2/VB/stacktracesample2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
        <altmember cref="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="METHODS_TO_SKIP">
      <MemberSignature Language="C#" Value="public const int METHODS_TO_SKIP = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 METHODS_TO_SKIP = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP" />
      <MemberSignature Language="VB.NET" Value="Public Const METHODS_TO_SKIP As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int METHODS_TO_SKIP = 0;" />
      <MemberSignature Language="F#" Value="val mutable METHODS_TO_SKIP : int" Usage="System.Diagnostics.StackTrace.METHODS_TO_SKIP" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="43b6b-191">定义要从堆栈跟踪中省略的默认方法数。</span><span class="sxs-lookup"><span data-stu-id="43b6b-191">Defines the default for the number of methods to omit from the stack trace.</span></span> <span data-ttu-id="43b6b-192">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="43b6b-192">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43b6b-193">许多方法可跳过的堆栈跟踪的开始处的默认值。</span><span class="sxs-lookup"><span data-stu-id="43b6b-193">The default value for the number of methods to skip at the beginning of the stack trace.</span></span> <span data-ttu-id="43b6b-194">此常量的值为 0。</span><span class="sxs-lookup"><span data-stu-id="43b6b-194">The value of this constant is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stackTrace.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43b6b-195">生成堆栈跟踪的可读表示形式。</span><span class="sxs-lookup"><span data-stu-id="43b6b-195">Builds a readable representation of the stack trace.</span></span></summary>
        <returns><span data-ttu-id="43b6b-196">堆栈帧的可读表示形式。</span><span class="sxs-lookup"><span data-stu-id="43b6b-196">A readable representation of the stack trace.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="43b6b-197">以下代码示例写入堆栈跟踪信息的事件日志条目。</span><span class="sxs-lookup"><span data-stu-id="43b6b-197">The following code example writes stack trace information to an event log entry.</span></span>  
  
 [!code-cpp[StackTraceSample3#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample3/CPP/stacktracesample3.cpp#6)]
 [!code-csharp[StackTraceSample3#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample3/CS/stacktracesample3.cs#6)]
 [!code-vb[StackTraceSample3#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample3/VB/stacktracesample3.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>