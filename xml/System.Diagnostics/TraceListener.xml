<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TraceListener.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb72c5f0a19ff3ffa188a78d242d3faa1ccf78e99fc7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5f0a19ff3ffa188a78d242d3faa1ccf78e99fc7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Provides the <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> base class for the listeners who monitor trace and debug output.</source>
          <target state="translated">为监视跟踪和调试输出的侦听器提供 <ph id="ph1">&lt;see langword="abstract" /&gt;</ph> 基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>For examples of how to implement a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>, see the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> and the <ph id="ph4">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> classes.</source>
          <target state="translated">有关如何实现的示例<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>，请参阅<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>，<ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>和<ph id="ph4">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated">你必须启用跟踪或调试才能使用跟踪侦听器。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">下面的语法是特定的编译器。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">如果你使用除 C# 或 Visual Basic 编译器，请参阅你的编译器的文档。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or you can add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">若要启用调试 C# 中，添加<ph id="ph1">`/d:DEBUG`</ph>到编译器命令行编译代码，或可以添加时的标志<ph id="ph2">`#define DEBUG`</ph>到你的文件的顶部。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated">在 Visual Basic 中，添加<ph id="ph1">`/d:DEBUG=True`</ph>到编译器命令行的标志。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">若要启用 C# 中的跟踪，将添加<ph id="ph1">`/d:TRACE`</ph>到编译器命令行编译代码，或添加时的标志<ph id="ph2">`#define TRACE`</ph>到你的文件的顶部。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated">在 Visual Basic 中，添加<ph id="ph1">`/d:TRACE=True`</ph>到编译器命令行的标志。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>To add a trace listener, edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">若要添加跟踪侦听器，请编辑配置文件对应于你的应用程序的名称。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">在此文件中，可以添加侦听器、 将其类型设置和其参数，删除的侦听器，或清除以前由应用程序设置的所有侦听器。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>The configuration file should be formatted similar to the following example.</source>
          <target state="translated">应类似于下面的示例配置文件进行格式化。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>For more information on using configuration files for tracing, see <bpt id="p1">[</bpt><ph id="ph1">&amp;lt;</ph>system.diagnostics<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md)</ept>.</source>
          <target state="translated">有关使用配置文件进行跟踪的详细信息，请参阅<bpt id="p1">[</bpt> <ph id="ph1">&amp;lt;</ph>system.diagnostics<ph id="ph2">&amp;gt;</ph><ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/system-diagnostics-element.md)</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>This type is thread safe.</source>
          <target state="translated">此类型是线程安全的。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>Inherit from this class to implement a custom listener for the <ph id="ph1">&lt;see cref="T:System.Diagnostics.Debug" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Diagnostics.Trace" /&gt;</ph> classes.</source>
          <target state="translated">继承此类以实现自定义侦听器<ph id="ph1">&lt;see cref="T:System.Diagnostics.Debug" /&gt;</ph>和<ph id="ph2">&lt;see cref="T:System.Diagnostics.Trace" /&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>At a minimum, you must implement the <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.Write(System.String)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" /&gt;</ph> methods.</source>
          <target state="translated">至少，必须实现<ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.Write(System.String)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.TraceListener">
          <source>Additionally, you can implement the <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.Close" /&gt;</ph> and <ph id="ph3">&lt;see cref="M:System.Diagnostics.TraceListener.Flush" /&gt;</ph> methods.</source>
          <target state="translated">此外，你可以实现<ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.Fail(System.String)" /&gt;</ph>，<ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.Close" /&gt;</ph>和<ph id="ph3">&lt;see cref="M:System.Diagnostics.TraceListener.Flush" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>.</source>
          <target state="translated">下表显示的实例的初始属性值<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Default Value</source>
          <target state="translated">默认值</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Name</source>
          <target state="translated">name</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>The empty string ("").</source>
          <target state="translated">空字符串 ("")。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Indent</source>
          <target state="translated">降级</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Zero.</source>
          <target state="translated">为零。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>IndentSize</source>
          <target state="translated">IndentSize</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.#ctor">
          <source>Four spaces.</source>
          <target state="translated">四个空格。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.#ctor(System.String)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class using the specified name as the listener.</source>
          <target state="translated">用指定的名称作为侦听器来初始化 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>Gets the custom trace listener attributes defined in the application configuration file.</source>
          <target state="translated">获取应用程序配置文件中定义的自定义跟踪侦听器特性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringDictionary" /&gt;</ph> containing the custom attributes for the trace listener.</source>
          <target state="translated">包含自定义跟踪侦听器特性的 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.StringDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> class can add custom attributes by overriding the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> method and returning a string array of custom attribute names.</source>
          <target state="translated">继承自的类<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>类可以通过重写中添加自定义特性<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph>方法并返回的自定义属性名称的字符串数组。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Attributes%2A&gt;</ph> property identifies the custom attributes that are referenced in the application's configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Attributes%2A&gt;</ph>属性标识应用程序的配置文件中引用的自定义属性。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>For example, in the following configuration file excerpt the <ph id="ph1">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph> custom attribute "delimiter" is referenced.</source>
          <target state="translated">例如，在下面的配置文件摘录<ph id="ph1">&lt;xref:System.Diagnostics.DelimitedListTraceListener&gt;</ph>引用自定义特性"分隔符"。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Attributes%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Collections.Specialized.StringDictionary&gt;</ph> containing the string "delimiter".</source>
          <target state="translated">在这种情况下，<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Attributes%2A&gt;</ph>属性返回<ph id="ph2">&lt;xref:System.Collections.Specialized.StringDictionary&gt;</ph>包含字符串"分隔符"。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>Unreferenced custom attributes are not enumerated.</source>
          <target state="translated">未引用的自定义属性不会枚举。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Attributes">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> method.</source>
          <target state="translated">有关更多信息，请参见 <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Close">
          <source>When overridden in a derived class, closes the output stream so it no longer receives tracing or debugging output.</source>
          <target state="translated">在派生类中被重写时，关闭输出流以使它不再接收跟踪或调试输出。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Close">
          <source>Use this method when the output is going to a file, such as to the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
          <target state="translated">使用此方法时输出将为文件，如<ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Close">
          <source>After a call to this method, you must reinitialize the object.</source>
          <target state="translated">在对此方法的调用后, 必须重新初始化该对象。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 占用的资源。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 使用的所有资源。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph>允许使用的资源<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>可以重新分配用于其他目的。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 占用的非托管资源，还可以另外再释放托管资源。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 调用受保护<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.Dispose%2A&gt;</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 调用<ph id="ph2">`Dispose`</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> references.</source>
          <target state="translated">当 <ph id="ph1">`disposing`</ph> 参数为 <ph id="ph2">`true`</ph> 时，此方法释放该 <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> 引用的、由任何托管对象持有的全部资源。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用每个引用对象的 <ph id="ph1">`Dispose`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以由其他对象多次调用。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在重写此方法，请注意不要引用已释放的以前调用中的对象<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关如何实现详细信息<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>实现 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Emits error messages to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 类时，向所创建的侦听器发出错误信息。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>A message to emit.</source>
          <target state="translated">要发出的消息。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>Emits an error message to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 类时，向所创建的侦听器发出错误信息。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>The default behavior is to display the specified message in a message box when the application is running in a user-interface mode, and to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in a <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection.</source>
          <target state="translated">默认行为是在用户界面模式下，并对其运行该应用程序时，将指定的消息显示在一个消息框<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>实例<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection has an instance of a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>集合包含的一个实例<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to or removing one from the collection.</source>
          <target state="translated">可以通过添加自定义此行为<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>到或删除其中一个集合中。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>A message to emit.</source>
          <target state="translated">要发出的消息。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>A detailed message to emit.</source>
          <target state="translated">要发出的详细消息。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>Emits an error message and a detailed error message to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 类时，向所创建的侦听器发出错误信息和详细错误信息。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>The default behavior is to display the message and detailed message in a message box when the application is running in a user-interface mode, and to the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in a <ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection.</source>
          <target state="translated">默认行为是在用户界面模式下，并对其运行该应用程序时显示消息框中的消息和详细的消息<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>实例<ph id="ph2">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection has an instance of a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>集合包含的一个实例<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to or removing one from the collection.</source>
          <target state="translated">可以通过添加自定义此行为<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>到或删除其中一个集合中。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>Gets and sets the trace filter for the trace listener.</source>
          <target state="translated">获取并设置跟踪侦听器的跟踪筛选器。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>An object derived from the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceFilter" /&gt;</ph> base class.</source>
          <target state="translated">一个派生自 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceFilter" /&gt;</ph> 基类的对象。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>A trace filter can be added to a trace listener to provide a layer of screening beyond that provided to the trace source by switches.</source>
          <target state="translated">跟踪筛选器可以添加到跟踪侦听器，以提供额外筛选到跟踪源提供的交换机的层。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>For example, the <ph id="ph1">&lt;xref:System.Diagnostics.EventTypeFilter&gt;</ph> can be added to a trace listener to control the event types that are output by the listener.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Diagnostics.EventTypeFilter&gt;</ph>可以添加到跟踪侦听器来控制输出的事件类型侦听器。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>Listeners that are called because the switch criteria are met can query their filter, if present, to determine if a trace is to be sent to output.</source>
          <target state="translated">交换机条件都满足，因此被称为的侦听器可以查询其筛选器，如果存在，以确定是否要发送输出。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> property to add a source filter to a console trace listener.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph>属性将源筛选器添加到控制台跟踪侦听器。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Filter">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Flush">
          <source>When overridden in a derived class, flushes the output buffer.</source>
          <target state="translated">在派生类中被重写时，刷新输出缓冲区。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>Gets the custom attributes supported by the trace listener.</source>
          <target state="translated">获取跟踪侦听器支持的自定义特性。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>A string array naming the custom attributes supported by the trace listener, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there are no custom attributes.</source>
          <target state="translated">为跟踪侦听器支持的自定义特性命名的字符串数组；或者如果没有自定义特性，则为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>The default implementation for <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">默认实现<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph>返回<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>The following code sample shows an override of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph> method for a custom trace listener.</source>
          <target state="translated">下面的代码示例演示如何重写的<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.GetSupportedAttributes%2A&gt;</ph>自定义跟踪侦听器的方法。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <source>When inheriting from the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class or a derived class, you can override the <ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" /&gt;</ph> method to provide custom attributes for your class.</source>
          <target state="translated">从继承时<ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>类或派生的类，你可以重写<ph id="ph2">&lt;see cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" /&gt;</ph>方法来为您的类提供自定义属性。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>Gets or sets the indent level.</source>
          <target state="translated">获取或设置缩进级别。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>The indent level.</source>
          <target state="translated">缩进级别。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>The default is zero.</source>
          <target state="translated">默认值为零。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> property represents the number of times that the indent specified by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> property is applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph>属性表示的缩进指定的次数<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph>应用属性。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentLevel">
          <source>This property is stored on per-thread/per-request basis.</source>
          <target state="translated">此属性存储在每个线程/每个请求。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>Gets or sets the number of spaces in an indent.</source>
          <target state="translated">获取或设置缩进的空格数。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>The number of spaces in an indent.</source>
          <target state="translated">缩进的空格数。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>The default is four spaces.</source>
          <target state="translated">默认值为 4 个空格。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>The property is stored on per-thread/per-request basis.</source>
          <target state="translated">属性存储基于每个线程/每个请求。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.IndentSize">
          <source>Set operation failed because the value is less than zero.</source>
          <target state="translated">Set 操作失败，因为值小于零。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>Gets a value indicating whether the trace listener is thread safe.</source>
          <target state="translated">获取一个值，该值指示跟踪侦听器是否是线程安全的。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the trace listener is thread safe; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果跟踪侦听器是线程安全的，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>The value of <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> is used to determine whether to use a global lock when writing to the listener.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph>用于确定是否要在写入到侦听器时使用全局锁。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>If the value of <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the global lock is used regardless of the value of <ph id="ph3">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph>.</source>
          <target state="translated">如果值<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph>是<ph id="ph2">`false`</ph>，无论的值如何使用全局锁<ph id="ph3">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>The global lock is not used only if the value of <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the value of <ph id="ph3">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">仅当不使用全局锁的值<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph>是<ph id="ph2">`true`</ph>和的值<ph id="ph3">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph>是<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <source>The default behavior is to use the global lock whenever writing to the listener.</source>
          <target state="translated">默认行为是使用全局锁定时写入侦听器。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.Name">
          <source>Gets or sets a name for this <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">获取或设置此 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Name">
          <source>A name for this <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph>.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Name">
          <source>The default is an empty string ("").</source>
          <target state="translated">默认值为空字符串("")。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.Name">
          <source>The name can be used to organize and access listeners in a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> collection.</source>
          <target state="translated">名称可以用于组织和访问侦听器中的<ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.NeedIndent">
          <source>Gets or sets a value indicating whether to indent the output.</source>
          <target state="translated">获取或设置一个值，该值指示是否缩进输出。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.NeedIndent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the output should be indented; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果应缩进输出，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.NeedIndent">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt;</ph> method, called by the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes, sets the <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property value to <ph id="ph5">`false`</ph> to prevent later, unnecessary indents.</source>
          <target state="translated"><bpt id="p1">**</bpt>请注意<ept id="p1">**</ept><ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteIndent%2A&gt;</ph>调用的方法<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>和<ph id="ph3">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>类集<ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph>属性值设置为<ph id="ph5">`false`</ph>以更高版本，防止不必要的缩进。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.NeedIndent">
          <source>You must set the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property to <ph id="ph2">`true`</ph> each time you wish to indent trace output.</source>
          <target state="translated">必须设置<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph>属性<ph id="ph2">`true`</ph>每当你想要缩进跟踪输出。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Writes trace data to the listener specific output.</source>
          <target state="translated">向特定于侦听器的输出中写入跟踪数据。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> 值之一，指定引发跟踪的事件类型。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">事件的数值标识符。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The trace data to emit.</source>
          <target state="translated">要发出的跟踪数据。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>Writes trace information, a data object and event information to the listener specific output.</source>
          <target state="translated">向特定于侦听器的输出中写入跟踪信息、数据对象和事件信息。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">此方法不应直接由应用程序代码，但由的成员调用<ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>，和<ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>类用于写入输出的跟踪数据。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The default implementation writes the <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph> and <ph id="ph4">`id`</ph> parameters in the header and footer of the trace.</source>
          <target state="translated">默认实现写入<ph id="ph1">`eventCache`</ph>， <ph id="ph2">`source`</ph>，<ph id="ph3">`eventType`</ph>和<ph id="ph4">`id`</ph>页眉和页脚的跟踪中的参数。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">`data`</ph> parameter is written as the body of the trace message.</source>
          <target state="translated"><ph id="ph1">`data`</ph>参数被编写为跟踪消息的正文。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <source>The <ph id="ph1">`ToString`</ph> method of the data object is used to convert the object to a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ToString`</ph>数据对象方法用于将对象转换为<ph id="ph2">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> 值之一，指定引发跟踪的事件类型。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">事件的数值标识符。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>An array of objects to emit as data.</source>
          <target state="translated">要作为数据发出的对象数组。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>Writes trace information, an array of data objects and event information to the listener specific output.</source>
          <target state="translated">向特定于侦听器的输出中写入跟踪信息、数据对象的数组和事件信息。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">此方法不应直接由应用程序代码，但由的成员调用<ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>，和<ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>类用于写入输出的跟踪数据。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">默认实现将的值写入<ph id="ph1">`source`</ph>，<ph id="ph2">`eventType`</ph>和<ph id="ph3">`id`</ph>作为标头的参数。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The data objects are converted to strings using the <ph id="ph1">`ToString`</ph> method of each object.</source>
          <target state="translated">数据对象将转换为字符串使用<ph id="ph1">`ToString`</ph>每个对象的方法。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>数据写入页脚，正在依赖于的值的输出数据的性质<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Writes trace and event information to the listener specific output.</source>
          <target state="translated">向特定于侦听器的输出写入跟踪和事件信息。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> 值之一，指定引发跟踪的事件类型。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">事件的数值标识符。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>Writes trace and event information to the listener specific output.</source>
          <target state="translated">向特定于侦听器的输出写入跟踪和事件信息。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">此方法不应直接由应用程序代码，但由的成员调用<ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>，和<ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>类用于写入输出的跟踪数据。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">默认实现将的值写入<ph id="ph1">`source`</ph>，<ph id="ph2">`eventType`</ph>和<ph id="ph3">`id`</ph>作为标头的参数。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>数据写入页脚，正在依赖于的值的输出数据的性质<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> 值之一，指定引发跟踪的事件类型。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">事件的数值标识符。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>A message to write.</source>
          <target state="translated">要写入的消息。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>Writes trace information, a message, and event information to the listener specific output.</source>
          <target state="translated">向特定于侦听器的输出中写入跟踪信息、消息和事件信息。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">此方法不应直接由应用程序代码，但由的成员调用<ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>，和<ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>类用于写入输出的跟踪数据。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header, followed by the <ph id="ph4">`message`</ph> data.</source>
          <target state="translated">默认实现将的值写入<ph id="ph1">`source`</ph>，<ph id="ph2">`eventType`</ph>和<ph id="ph3">`id`</ph>参数作为标头后, 跟<ph id="ph4">`message`</ph>数据。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>数据写入页脚，正在依赖于的值的输出数据的性质<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> values specifying the type of event that has caused the trace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventType" /&gt;</ph> 值之一，指定引发跟踪的事件类型。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A numeric identifier for the event.</source>
          <target state="translated">事件的数值标识符。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>A format string that contains zero or more format items, which correspond to objects in the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> array.</source>
          <target state="translated">一个格式字符串，其中包含零个或多个格式项，它们对应于 <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> 数组中的对象。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see langword="object" /&gt;</ph> array containing zero or more objects to format.</source>
          <target state="translated">包含零个或多个要格式化的对象的 <ph id="ph1">&lt;see langword="object" /&gt;</ph> 数组。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>Writes trace information, a formatted array of objects and event information to the listener specific output.</source>
          <target state="translated">向特定于侦听器的输出中写入跟踪信息、格式化对象数组和事件信息。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">此方法不应直接由应用程序代码，但由的成员调用<ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>，和<ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>类用于写入输出的跟踪数据。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The default implementation writes the values of the <ph id="ph1">`source`</ph>, <ph id="ph2">`eventType`</ph> and <ph id="ph3">`id`</ph> parameters as a header.</source>
          <target state="translated">默认实现将的值写入<ph id="ph1">`source`</ph>，<ph id="ph2">`eventType`</ph>和<ph id="ph3">`id`</ph>作为标头的参数。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">`args`</ph> object array is converted to a string using the <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph> method, passing the <ph id="ph3">`format`</ph> string and <ph id="ph4">`args`</ph> array to format the string as the message portion of the trace.</source>
          <target state="translated"><ph id="ph1">`args`</ph>对象数组转换为字符串使用<ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph>方法，并传递<ph id="ph3">`format`</ph>字符串和<ph id="ph4">`args`</ph>要跟踪的消息部分作为格式字符串数组。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <source>The <ph id="ph1">`eventCache`</ph> data is written as a footer, the nature of the output data being dependent on the value of the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`eventCache`</ph>数据写入页脚，正在依赖于的值的输出数据的性质<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>Gets or sets the trace output options.</source>
          <target state="translated">获取或设置跟踪输出选项。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>A bitwise combination of the enumeration values.</source>
          <target state="translated">枚举值的按位组合。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Diagnostics.TraceOptions.None" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see cref="F:System.Diagnostics.TraceOptions.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property determines the optional content of trace output.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph>属性确定跟踪输出的可选内容。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The property can be set in the configuration file or programmatically during execution to include additional data specifically for a section of code.</source>
          <target state="translated">该属性可以设置配置文件中或以编程方式在执行期间以包括专门用于某段代码的其他数据。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>For example, you can set the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property for the console trace listener to <ph id="ph2">&lt;xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType&gt;</ph> to add call stack information to the trace output.</source>
          <target state="translated">例如，你可以设置<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph>属性控制台跟踪侦听器，以便<ph id="ph2">&lt;xref:System.Diagnostics.TraceOptions.Callstack?displayProperty=nameWithType&gt;</ph>将调用堆栈信息添加到跟踪输出。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions&gt;</ph> enumeration is not used by the following classes and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions&gt;</ph>枚举不由以下类和方法：</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> class, because it can cause a large volume of data to be written to the log.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>类，因为它可能会导致大量的数据都写入到日志。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> methods of the <ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, and <ph id="ph5">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes.</source>
          <target state="translated"><ph id="ph1">`Write`</ph>和<ph id="ph2">`WriteLine`</ph>方法<ph id="ph3">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph>， <ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>，和<ph id="ph5">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> class when they are not overridden in a derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>类时不在派生类中重写它们。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The following example shows the setting of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property for a console trace listener.</source>
          <target state="translated">下面的示例演示的设置<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph>控制台跟踪侦听器的属性。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>The console trace listener is one of the listeners enumerated in the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph> property of a trace source.</source>
          <target state="translated">控制台跟踪侦听器是一个枚举中的侦听器<ph id="ph1">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A&gt;</ph>的跟踪源的属性。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.TraceListener.TraceOutputOptions">
          <source>Set operation failed because the value is invalid.</source>
          <target state="translated">Set 操作失败，因为值无效。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> object that contains the current process ID, thread ID, and stack trace information.</source>
          <target state="translated">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceEventCache" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A name used to identify the output, typically the name of the application that generated the trace event.</source>
          <target state="translated">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A numeric identifier for the event.</source>
          <target state="translated">事件的数值标识符。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A message to write.</source>
          <target state="translated">要写入的消息。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> object identifying a related activity.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> 对象标识相关活动。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>Writes trace information, a message, a related activity identity and event information to the listener specific output.</source>
          <target state="translated">向侦听器特定的输出中写入跟踪信息、消息、相关活动标识和事件信息。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>This method is not intended to be called directly by application code but by members of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data to output.</source>
          <target state="translated">此方法不应直接由应用程序代码，但由的成员调用<ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>，和<ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph>类用于写入输出的跟踪数据。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;</ph> method is used for the correlation of related traces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A&gt;</ph>方法适用于的相关的跟踪相关性。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceTransfer%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;</ph> method to process the call, with the eventType level set to <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Transfer&gt;</ph> and the <ph id="ph4">`relatedActivityId`</ph><ph id="ph5">&lt;xref:System.Guid&gt;</ph> as a string appended to the message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.TraceTransfer%2A&gt;</ph>方法调用<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceEvent%2A&gt;</ph>方法，以处理调用，使用 eventType 级别设置为<ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Transfer&gt;</ph>和<ph id="ph4">`relatedActivityId`</ph><ph id="ph5">&lt;xref:System.Guid&gt;</ph>作为附加到消息的字符串。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Writes a message, category name, or the value of an object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">实现 <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 类时，向所创建的侦听器写入消息、类别名称或对象的 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 方法值。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose fully qualified class name you want to write.</source>
          <target state="translated">要为其编写完全限定类名的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 类时，向所创建的侦听器写入对象的 <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 方法值。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>A message to write.</source>
          <target state="translated">要写入的消息。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>When overridden in a derived class, writes the specified message to the listener you create in the derived class.</source>
          <target state="translated">在派生类中被重写时，向在该派生类中所创建的侦听器写入指定消息。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>When inheriting from this class, you must implement this method.</source>
          <target state="translated">当从此类继承，则必须实现此方法。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>To support an indentation, you should call <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.WriteIndent" /&gt;</ph> if <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要支持缩进，应调用<ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.WriteIndent" /&gt;</ph>如果<ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph>是<ph id="ph3">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.Write(System.String)">
          <source>If you need to indent the following line, you must reset <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">如果你需要以下行的缩进，必须重置<ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph>到<ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose fully qualified class name you want to write.</source>
          <target state="translated">要为其编写完全限定类名的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">用于组织输出的类别名称。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">实现 <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 类时，向所创建的侦听器写入类别名称和对象的 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 方法值。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">要写入的消息。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">用于组织输出的类别名称。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
          <source>Writes a category name and a message to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 类时，向所创建的侦听器写入类别名称和消息。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>Writes the indent to the listener you create when you implement this class, and resets the <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> property to <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">实现此类时，向所创建的侦听器写入缩进，并将 <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> 属性重置为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>This method writes the indent and resets the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">此方法写入缩进，并将重置<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph>属性<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>Call this method if <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> is <ph id="ph2">`true`</ph> when you are overriding the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> methods.</source>
          <target state="translated">调用此方法，如果<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph>是<ph id="ph2">`true`</ph>当您要重写<ph id="ph3">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph>和<ph id="ph4">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>By default, this method uses blank spaces for indentation.</source>
          <target state="translated">默认情况下，此方法使用空格来缩进。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>The size of the indent is determined by the values of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> properties.</source>
          <target state="translated">缩进的大小确定的值<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph> property represents the number of times the indent of the size specified by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph> property is applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IndentLevel%2A&gt;</ph>属性表示的次数的指定的大小的缩进量<ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.IndentSize%2A&gt;</ph>应用属性。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteIndent">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> classes.</source>
          <target state="translated">调用此方法<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.TraceListener">
          <source>Writes a message, category name, or the value of an object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class, followed by a line terminator.</source>
          <target state="translated">实现 <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 类时，向所创建的侦听器写入消息、类别名称或对象的 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 方法值，后跟行结束符。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose fully qualified class name you want to write.</source>
          <target state="translated">要为其编写完全限定类名的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
          <source>Writes the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class, followed by a line terminator.</source>
          <target state="translated">实现 <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 类时，向所创建的侦听器写入对象的 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 方法值，后跟行结束符。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">您可能会实现的典型的行终止符是回车符后跟换行符 (\r\n)。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>A message to write.</source>
          <target state="translated">要写入的消息。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</source>
          <target state="translated">在派生类中被重写时，向在该派生类中所创建的侦听器写入消息，后跟行结束符。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">您可能会实现的典型的行终止符是回车符后跟换行符 (\r\n)。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>When inheriting from this class, you must implement this method.</source>
          <target state="translated">当从此类继承，则必须实现此方法。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>To support an indentation, call <ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.WriteIndent" /&gt;</ph> if <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要支持缩进，调用<ph id="ph1">&lt;see cref="M:System.Diagnostics.TraceListener.WriteIndent" /&gt;</ph>如果<ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph>是<ph id="ph3">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <source>To indent the following line, you must reset <ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph> to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要缩进的以下行，必须重置<ph id="ph1">&lt;see cref="P:System.Diagnostics.TraceListener.NeedIndent" /&gt;</ph>到<ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> whose fully qualified class name you want to write.</source>
          <target state="translated">要为其编写完全限定类名的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">用于组织输出的类别名称。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> method to the listener you create when you implement the <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class, followed by a line terminator.</source>
          <target state="translated">实现 <ph id="ph2">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 类时，向所创建的侦听器写入类别名称和对象的 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 方法值，后跟行结束符。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">您可能会实现的典型的行终止符是回车符后跟换行符 (\r\n)。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
          <source>A message to write.</source>
          <target state="translated">要写入的消息。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
          <source>A category name used to organize the output.</source>
          <target state="translated">用于组织输出的类别名称。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
          <source>Writes a category name and a message to the listener you create when you implement the <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> class, followed by a line terminator.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Diagnostics.TraceListener" /&gt;</ph> 类时，向所创建的侦听器写入类别名称和消息，后跟行结束符。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
          <source>The typical line terminator you might implement is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">您可能会实现的典型的行终止符是回车符后跟换行符 (\r\n)。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>