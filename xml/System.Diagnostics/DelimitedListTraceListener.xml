<Type Name="DelimitedListTraceListener" FullName="System.Diagnostics.DelimitedListTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="385948fd9f0c9c72019b292e2447c2aff2ac15ce" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52207730" /></Metadata><TypeSignature Language="C#" Value="public class DelimitedListTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DelimitedListTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DelimitedListTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class DelimitedListTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class DelimitedListTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type DelimitedListTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6f9d5-101">将跟踪或调试输出定向到文本编写器（如流编写器）或流（如文件流）。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-101">Directs tracing or debugging output to a text writer, such as a stream writer, or to a stream, such as a file stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f9d5-102">跟踪输出采用由 <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> 属性指定的分隔符分隔的文本格式。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-102">The trace output is in a delimited text format that uses the delimiter specified by the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property.</span></span> <span data-ttu-id="6f9d5-103">使用分隔符来终止的输出行中的每个字段。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-103">The delimiter is used to terminate each field in a line of output.</span></span> <span data-ttu-id="6f9d5-104">例如，若要显示跟踪输出在 Microsoft Excel 电子表格中，可以指定一个逗号 （"，"） 作为分隔符，并创建一个以逗号分隔值 (CSV) 文件。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-104">For example, to display the trace output in a Microsoft Excel spreadsheet, you might specify a comma (",") as a delimiter and create a comma-separated value (CSV) file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6f9d5-105"><xref:System.IDisposable> 接口。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-105"><xref:System.IDisposable> interface.</span></span> <span data-ttu-id="6f9d5-106">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="6f9d5-107">若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try`/ `catch`块。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block.</span></span> <span data-ttu-id="6f9d5-108">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="6f9d5-109">有关详细信息，请参阅中的"使用对象实现 IDisposable"一节<xref:System.IDisposable>接口主题。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="6f9d5-110">可以启用或禁用<xref:System.Diagnostics.DelimitedListTraceListener>通过应用程序配置文件，然后使用已配置的<xref:System.Diagnostics.DelimitedListTraceListener>在应用程序中。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-110">You can enable or disable a <xref:System.Diagnostics.DelimitedListTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.DelimitedListTraceListener> in your application.</span></span> <span data-ttu-id="6f9d5-111">另外，可以创建<xref:System.Diagnostics.DelimitedListTraceListener>在代码中。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-111">Alternately, you can create a <xref:System.Diagnostics.DelimitedListTraceListener> in your code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f9d5-112"><xref:System.Diagnostics.DelimitedListTraceListener>分隔发出的使用方法的名称以单词开头的文本`Trace`，如<xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=nameWithType>或<xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-112">The <xref:System.Diagnostics.DelimitedListTraceListener> delimits only text that is emitted by using the methods that have names starting with the word `Trace`, such as <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6f9d5-113">跟踪数据的使用，将发出<xref:System.Diagnostics.Debug.Write%2A?displayProperty=nameWithType>和<xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=nameWithType>未分隔的方法。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-113">Trace data that is emitted by using the <xref:System.Diagnostics.Debug.Write%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=nameWithType> methods is not delimited.</span></span>  
  
 <span data-ttu-id="6f9d5-114">若要配置<xref:System.Diagnostics.DelimitedListTraceListener>，编辑你的应用程序的名称对应的配置文件。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-114">To configure a <xref:System.Diagnostics.DelimitedListTraceListener>, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="6f9d5-115">在此文件中，可以添加一个侦听器、 为侦听器设置的属性或删除侦听器。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-115">In this file, you can add a listener, set the properties for a listener, or remove a listener.</span></span> <span data-ttu-id="6f9d5-116">配置文件应进行格式化，如下面的示例中所示：</span><span class="sxs-lookup"><span data-stu-id="6f9d5-116">The configuration file should be formatted as shown in the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="delimitedListener"   
          type="System.Diagnostics.DelimitedListTraceListener"   
          delimiter=","   
          initializeData="delimitedOutput.csv"   
          traceOutputOptions="ProcessId, DateTime" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
> [!NOTE]
>  <span data-ttu-id="6f9d5-117">如果尝试写入到正在使用中的文件或不可用，文件名称自动作为前缀的 guid。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-117">If you try to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f9d5-118">旨在由的方法使用的侦听器<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-118">Listeners are intended to be used by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace information.</span></span> <span data-ttu-id="6f9d5-119">不应直接从应用程序代码调用侦听器方法，构造函数，除外。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-119">Listener methods, except for constructors, should not be called directly from application code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6f9d5-120">初始化 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-120">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.Stream -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="6f9d5-121">接收输出的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-121">The <see cref="T:System.IO.Stream" /> to receive the output.</span></span></param>
        <summary><span data-ttu-id="6f9d5-122">初始化写入指定输出流的 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-122">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f9d5-123">此构造函数初始化<xref:System.Diagnostics.TraceListener.Name%2A>属性为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-123">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f9d5-124"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-124"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="6f9d5-125">接收输出的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-125">The <see cref="T:System.IO.TextWriter" /> to receive the output.</span></span></param>
        <summary><span data-ttu-id="6f9d5-126">初始化写入指定文本编写器的 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-126">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified text writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f9d5-127">此构造函数初始化<xref:System.Diagnostics.TraceListener.Name%2A>属性为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-127">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f9d5-128"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-128"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="6f9d5-129">要接收输出的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-129">The name of the file to receive the output.</span></span></param>
        <summary><span data-ttu-id="6f9d5-130">初始化写入指定文件的 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-130">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f9d5-131">此构造函数初始化<xref:System.Diagnostics.TraceListener.Name%2A>属性为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-131">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f9d5-132"><paramref name="fileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-132"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener (stream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="6f9d5-133">接收输出的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-133">The <see cref="T:System.IO.Stream" /> to receive the output.</span></span></param>
        <param name="name"><span data-ttu-id="6f9d5-134">跟踪侦听器的新实例的名称。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-134">The name of the new instance of the trace listener.</span></span></param>
        <summary><span data-ttu-id="6f9d5-135">初始化写入指定输出流并具有指定名称的 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-135">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified output stream and has the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f9d5-136">此构造函数初始化<xref:System.Diagnostics.TraceListener.Name%2A>属性的值`name`参数，或为空字符串 ("") 如果`name`参数是`null`。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-136">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string ("") if the `name` parameter is `null`.</span></span>  <span data-ttu-id="6f9d5-137"><xref:System.Diagnostics.TraceListener.Name%2A>属性可以用作到索引`Listeners`要以编程方式更改侦听器的属性集合。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-137">The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="6f9d5-138">例如，下面的代码设置<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>的实例属性<xref:System.Diagnostics.DelimitedListTraceListener>具有名称"delimListener":</span><span class="sxs-lookup"><span data-stu-id="6f9d5-138">For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name "delimListener":</span></span>  
  
```csharp  
((DelimitedListTraceListener)Trace.Listeners["delimListener"]).Delimiter = ":"  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f9d5-139"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-139"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener (writer, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="6f9d5-140">接收输出的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-140">The <see cref="T:System.IO.TextWriter" /> to receive the output.</span></span></param>
        <param name="name"><span data-ttu-id="6f9d5-141">跟踪侦听器的新实例的名称。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-141">The name of the new instance of the trace listener.</span></span></param>
        <summary><span data-ttu-id="6f9d5-142">初始化写入指定文本编写器并具有指定名称的 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-142">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified text writer and has the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f9d5-143">此构造函数初始化<xref:System.Diagnostics.TraceListener.Name%2A>属性的值`name`参数，或为空字符串 ("") 如果`name`参数是`null`。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-143">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the value of the `name` parameter, or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="6f9d5-144"><xref:System.Diagnostics.TraceListener.Name%2A>属性可以用作到索引`Listeners`要以编程方式更改侦听器的属性集合。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-144">The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="6f9d5-145">例如下面的代码设置<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>的实例属性<xref:System.Diagnostics.DelimitedListTraceListener>具有名称"delimListener":</span><span class="sxs-lookup"><span data-stu-id="6f9d5-145">For example the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name "delimListener":</span></span>  
  
```csharp  
((DelimitedListTraceListener)Trace.Listeners["delimListener"]).Delimiter = ":"  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f9d5-146"><paramref name="writer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-146"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DelimitedListTraceListener (string fileName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DelimitedListTraceListener(System::String ^ fileName, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.DelimitedListTraceListener : string * string -&gt; System.Diagnostics.DelimitedListTraceListener" Usage="new System.Diagnostics.DelimitedListTraceListener (fileName, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="6f9d5-147">要接收输出的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-147">The name of the file to receive the output.</span></span></param>
        <param name="name"><span data-ttu-id="6f9d5-148">跟踪侦听器的新实例的名称。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-148">The name of the new instance of the trace listener.</span></span></param>
        <summary><span data-ttu-id="6f9d5-149">初始化写入指定文件并具有指定名称的 <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-149">Initializes a new instance of the <see cref="T:System.Diagnostics.DelimitedListTraceListener" /> class that writes to the specified file and has the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f9d5-150">此构造函数初始化的新实例<xref:System.IO.StreamWriter>类，指定路径上指定的文件使用<xref:System.Text.Encoding.UTF8%2A>编码。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-150">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="6f9d5-151">如果该文件存在，则将它追加到。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-151">If the file exists, it is appended to.</span></span> <span data-ttu-id="6f9d5-152">如果该文件不存在，被创建一个新文件。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-152">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f9d5-153">若要减少可能出现异常，可能导致无效输出所有字符均都替换"？"字符。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-153">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="6f9d5-154"><xref:System.Diagnostics.TraceListener.Name%2A>属性设置为的值`name`参数，或为空字符串 ("") 如果`name`参数是`null`。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-154">The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the value of the `name` parameter, or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="6f9d5-155"><xref:System.Diagnostics.TraceListener.Name%2A>属性可以用作到索引`Listeners`要以编程方式更改侦听器的属性集合。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-155">The <xref:System.Diagnostics.TraceListener.Name%2A> property can be used as an index into the `Listeners` collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="6f9d5-156">例如，下面的代码设置<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>的实例属性<xref:System.Diagnostics.DelimitedListTraceListener>具有名称"delimListener":</span><span class="sxs-lookup"><span data-stu-id="6f9d5-156">For example, the following code sets the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property for the instance of <xref:System.Diagnostics.DelimitedListTraceListener> that has the name "delimListener":</span></span>  
  
```csharp  
((DelimitedListTraceListener)Trace.Listeners["delimListener"]).Delimiter = ":"  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f9d5-157"><paramref name="fileName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-157"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="System.Diagnostics.DelimitedListTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f9d5-158">获取或设置分隔列表的分隔符。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-158">Gets or sets the delimiter for the delimited list.</span></span></summary>
        <value><span data-ttu-id="6f9d5-159">分隔列表的分隔符。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-159">The delimiter for the delimited list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f9d5-160">默认分隔符是";"（分号）。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-160">The default delimiter is ";" (semicolon).</span></span> <span data-ttu-id="6f9d5-161">下面的配置文件示例演示的设置<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>属性使用`delimiter`配置文件中的属性：</span><span class="sxs-lookup"><span data-stu-id="6f9d5-161">The following configuration file example shows the setting of the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property using the `delimiter` attribute in a configuration file:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="delimitedListener"   
          type="System.Diagnostics.DelimitedListTraceListener"   
          delimiter=":"   
          initializeData="delimitedOutput.txt"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f9d5-162">将 <see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-162"><see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6f9d5-163"><see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> 设置为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-163"><see cref="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" /> is set to an empty string ("").</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="override this.GetSupportedAttributes : unit -&gt; string[]" Usage="delimitedListTraceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6f9d5-164">返回分隔的跟踪侦听器支持的自定义配置文件特性。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-164">Returns the custom configuration file attribute supported by the delimited trace listener.</span></span></summary>
        <returns><span data-ttu-id="6f9d5-165">包含单个值“delimiter”的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-165">A string array that contains the single value "delimiter".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f9d5-166">自定义属性是不从可用于设置属性的类的基类继承的属性。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-166">A custom attribute is an attribute that is not inherited from the base class that can be used to set a property for the class.</span></span> <span data-ttu-id="6f9d5-167">自定义属性<xref:System.Diagnostics.DelimitedListTraceListener>用于设置<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-167">The custom attribute for <xref:System.Diagnostics.DelimitedListTraceListener> is used to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property.</span></span> <span data-ttu-id="6f9d5-168">下面的配置文件示例演示如何使用`delimiter`属性设置<xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>属性：</span><span class="sxs-lookup"><span data-stu-id="6f9d5-168">The following configuration file example shows the use of the `delimiter` attribute to set the <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> property:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="delimitedListener"   
          type="System.Diagnostics.DelimitedListTraceListener"   
          delimiter=":"   
          initializeData="delimitedOutput.txt"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6f9d5-169">向输出文件或流中写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-169">Writes trace data to the output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="delimitedListTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="6f9d5-170">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-170">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="6f9d5-171">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-171">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="6f9d5-172"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-172">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="6f9d5-173">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-173">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="6f9d5-174">要向输出文件或流中写入的数据对象。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-174">A data object to write to the output file or stream.</span></span></param>
        <summary><span data-ttu-id="6f9d5-175">向输出文件或流中写入跟踪信息、数据对象和事件信息。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-175">Writes trace information, a data object, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f9d5-176">值`source`， `eventType`，和`id`参数编写作为标头。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-176">The values of the `source`, `eventType`, and `id` parameters are written as a header.</span></span> <span data-ttu-id="6f9d5-177">数据对象转换为字符串使用`ToString`对象的方法。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-177">The data object is converted to a string using the `ToString` method of the object.</span></span> <span data-ttu-id="6f9d5-178">`eventCache`数据写入作为其内容的值取决于的页脚<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-178">The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6f9d5-179"><xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A>方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-179">The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code.</span></span> <span data-ttu-id="6f9d5-180">它由方法调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-180">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="delimitedListTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="6f9d5-181">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-181">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="6f9d5-182">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-182">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="6f9d5-183"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-183">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="6f9d5-184">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-184">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="6f9d5-185">要向输出文件或流中写入的数据对象数组。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-185">An array of data objects to write to the output file or stream.</span></span></param>
        <summary><span data-ttu-id="6f9d5-186">将跟踪信息、数据对象数组和事件信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-186">Writes trace information, an array of data objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f9d5-187">值`source`， `eventType`，和`id`参数编写作为标头。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-187">The values of the `source`, `eventType`, and `id` parameters are written as a header.</span></span> <span data-ttu-id="6f9d5-188">数据对象将转换为字符串使用`ToString`的每个对象的方法。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-188">The data objects are converted to strings using the `ToString` method of each object.</span></span> <span data-ttu-id="6f9d5-189">`eventCache`数据写入作为其内容的值取决于的页脚<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-189">The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6f9d5-190"><xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A>方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-190">The <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> method is not intended to be called by application code.</span></span> <span data-ttu-id="6f9d5-191">它由方法调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-191">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6f9d5-192">将事件跟踪信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-192">Writes event trace information to an output file or stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="delimitedListTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="6f9d5-193">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-193">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="6f9d5-194">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-194">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="6f9d5-195"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-195">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="6f9d5-196">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-196">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="6f9d5-197">要向输出文件或流中写入的跟踪消息。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-197">The trace message to write to the output file or stream.</span></span></param>
        <summary><span data-ttu-id="6f9d5-198">将跟踪信息、消息和事件信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-198">Writes trace information, a message, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f9d5-199">值`source`， `eventType`，并`id`参数编写为标头后, 跟`message`数据。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-199">The values of the `source`, `eventType`, and `id` parameters are written as a header, followed by the `message` data.</span></span> <span data-ttu-id="6f9d5-200">`eventCache`数据写入作为其内容的值取决于的页脚<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-200">The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6f9d5-201"><xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A>方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-201">The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code.</span></span> <span data-ttu-id="6f9d5-202">它由方法调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-202">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="delimitedListTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="6f9d5-203">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-203">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="6f9d5-204">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-204">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="6f9d5-205"><see cref="T:System.Diagnostics.TraceEventType" /> 值之一，指定引发跟踪的事件类型。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-205">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="6f9d5-206">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-206">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="6f9d5-207">包含零个或多个格式项的格式字符串，这些项与 <paramref name="args" /> 数组中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-207">A format string that contains zero or more format items that correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="6f9d5-208">包含零个或多个要格式化的对象的数组。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-208">An array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="6f9d5-209">将跟踪信息、格式化对象数组和事件信息写入输出文件或流中。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-209">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f9d5-210">值`source`， `eventType`，和`id`参数编写作为标头。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-210">The values of the `source`, `eventType`, and `id` parameters are written as a header.</span></span> <span data-ttu-id="6f9d5-211">`args`对象数组转换为字符串使用<xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>方法，传递`format`字符串和`args`要跟踪的消息部分作为格式字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-211">The `args` object array is converted to a string using the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method, passing the `format` string and `args` array to format the string as the message portion of the trace.</span></span> <span data-ttu-id="6f9d5-212">`eventCache`数据写入作为其内容的值取决于的页脚<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-212">The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6f9d5-213"><xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A>方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-213">The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code.</span></span> <span data-ttu-id="6f9d5-214">它由方法调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="6f9d5-214">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>