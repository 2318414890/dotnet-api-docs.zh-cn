<Type Name="Stopwatch" FullName="System.Diagnostics.Stopwatch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4af45f475f4cc1c65e6b8da9b467cd24498a87fd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36742017" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Stopwatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Stopwatch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Stopwatch" />
  <TypeSignature Language="VB.NET" Value="Public Class Stopwatch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stopwatch" />
  <TypeSignature Language="F#" Value="type Stopwatch = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供一组方法和属性，可用于准确地测量运行时间。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Diagnostics.Stopwatch>实例可以测量运行时间一个时间间隔，或所用时间的总跨多个时间间隔。 在典型<xref:System.Diagnostics.Stopwatch>方案中，调用<xref:System.Diagnostics.Stopwatch.Start%2A>方法，然后最终调用<xref:System.Diagnostics.Stopwatch.Stop%2A>方法，然后检查正在使用的运行时间<xref:System.Diagnostics.Stopwatch.Elapsed%2A>属性。  
  
 A<xref:System.Diagnostics.Stopwatch>实例处于运行或停止; 使用<xref:System.Diagnostics.Stopwatch.IsRunning%2A>来确定的当前状态<xref:System.Diagnostics.Stopwatch>。 使用<xref:System.Diagnostics.Stopwatch.Start%2A>开始测量运行时间; 使用<xref:System.Diagnostics.Stopwatch.Stop%2A>停止测量运行时间。 查询通过属性的运行时间值<xref:System.Diagnostics.Stopwatch.Elapsed%2A>， <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>，或<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>。 运行还是已停止实例时，可以查询运行时间属性。 属性稳定增加的已用时间而<xref:System.Diagnostics.Stopwatch>是运行; 它们保持不变停止实例时。  
  
 默认情况下，运行时间值的<xref:System.Diagnostics.Stopwatch>实例等于所有测量的时间间隔的总数。 每次调用<xref:System.Diagnostics.Stopwatch.Start%2A>开始计数累积的运行时间; 每次调用<xref:System.Diagnostics.Stopwatch.Stop%2A>结束当前的时间间隔测量，并会冻结的累计运行时间值。 使用<xref:System.Diagnostics.Stopwatch.Reset%2A>方法来清除中现有的累计已用时间<xref:System.Diagnostics.Stopwatch>实例。  
  
 <xref:System.Diagnostics.Stopwatch>测量运行时间由计数计时器刻度表示基础计时器机制中的。 如果已安装的硬件和操作系统支持的高分辨率性能计数器，则<xref:System.Diagnostics.Stopwatch>类使用该计数器来测量运行时间。 否则为<xref:System.Diagnostics.Stopwatch>类使用系统计时器来测量运行时间。 使用<xref:System.Diagnostics.Stopwatch.Frequency>和<xref:System.Diagnostics.Stopwatch.IsHighResolution>字段，以确定的精度和解决方法<xref:System.Diagnostics.Stopwatch>计时实现。  
  
 <xref:System.Diagnostics.Stopwatch>类可帮助在托管代码中与计时相关的性能计数器的操作。 具体而言，<xref:System.Diagnostics.Stopwatch.Frequency>字段和<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>方法可用来代替非托管的 Win32 Api`QueryPerformanceFrequency`和`QueryPerformanceCounter`。  
  
> [!NOTE]
>  在多处理器计算机上，它并不重要哪个处理器运行的线程。 但是，由于在 BIOS 或硬件抽象层 (HAL) 中的 bug，你可以在不同的处理器获得不同的计时结果的注意事项。 若要指定线程的处理器关联，请使用<xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=nameWithType>方法。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Diagnostics.Stopwatch>类，以确定应用程序的执行时间。  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 下面的示例演示了利用<xref:System.Diagnostics.Stopwatch>类来计算性能数据。  
  
 [!code-cpp[StopWatchPerfSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#1)]
 [!code-csharp[StopWatchPerfSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#1)]
 [!code-vb[StopWatchPerfSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeSpan" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stopwatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stopwatch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Diagnostics.Stopwatch" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回<xref:System.Diagnostics.Stopwatch>实例已停止，然后实例的运行时间属性为零。  
  
 使用<xref:System.Diagnostics.Stopwatch.Start%2A>方法，以开始测量运行时间与新<xref:System.Diagnostics.Stopwatch>实例。 使用<xref:System.Diagnostics.Stopwatch.StartNew%2A>方法以初始化新<xref:System.Diagnostics.Stopwatch>实例，并立即启动它。  
  
   
  
## Examples  
 下面的示例初始化<xref:System.Diagnostics.Stopwatch>通过使用简单的类构造函数的实例。  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public TimeSpan Elapsed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Elapsed" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elapsed As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Elapsed { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Elapsed : TimeSpan" Usage="System.Diagnostics.Stopwatch.Elapsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前实例测量得出的总运行时间。</summary>
        <value>一个只读的 <see cref="T:System.TimeSpan" />，表示当前实例测量得出的总运行时间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在典型<xref:System.Diagnostics.Stopwatch>方案中，调用<xref:System.Diagnostics.Stopwatch.Start%2A>方法，然后最终调用<xref:System.Diagnostics.Stopwatch.Stop%2A>方法，然后检查正在使用的运行时间<xref:System.Diagnostics.Stopwatch.Elapsed%2A>属性。  
  
 使用<xref:System.Diagnostics.Stopwatch.Elapsed%2A>属性，以检索经过的时间值使用<xref:System.TimeSpan>方法和属性。 例如，你可以设置的格式返回<xref:System.TimeSpan>实例为文本表示形式，或将其传递给需要的另一个类<xref:System.TimeSpan>参数。  
  
 您可以查询属性<xref:System.Diagnostics.Stopwatch.Elapsed%2A>， <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>，和<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>时<xref:System.Diagnostics.Stopwatch>实例处于运行或停止。 属性稳定增加的已用时间而<xref:System.Diagnostics.Stopwatch>是运行; 它们保持不变停止实例时。  
  
 默认情况下，运行时间值的<xref:System.Diagnostics.Stopwatch>实例等于所有测量的时间间隔的总数。 每次调用<xref:System.Diagnostics.Stopwatch.Start%2A>开始计数累积的运行时间; 每次调用<xref:System.Diagnostics.Stopwatch.Stop%2A>结束当前的时间间隔测量，并会冻结的累计运行时间值。 使用<xref:System.Diagnostics.Stopwatch.Reset%2A>方法来清除中现有的累计已用时间<xref:System.Diagnostics.Stopwatch>实例。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Diagnostics.Stopwatch.Elapsed%2A>属性来确定应用程序的执行时间。  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedMilliseconds">
      <MemberSignature Language="C#" Value="public long ElapsedMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedMilliseconds As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedMilliseconds { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedMilliseconds : int64" Usage="System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前实例测量得出的总运行时间（以毫秒为单位）。</summary>
        <value>一个只读长整型，表示当前实例测量得出的总毫秒数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性表示运行时间向下舍入为最接近的整数毫秒值。 对于更高的精度测量，使用<xref:System.Diagnostics.Stopwatch.Elapsed%2A>或<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>属性。  
  
 您可以查询属性<xref:System.Diagnostics.Stopwatch.Elapsed%2A>， <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>，和<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>时<xref:System.Diagnostics.Stopwatch>实例处于运行或停止。 属性稳定增加的已用时间而<xref:System.Diagnostics.Stopwatch>是运行; 它们保持不变停止实例时。  
  
 默认情况下，运行时间值的<xref:System.Diagnostics.Stopwatch>实例等于所有测量的时间间隔的总数。 每次调用<xref:System.Diagnostics.Stopwatch.Start%2A>开始计数累积的运行时间; 每次调用<xref:System.Diagnostics.Stopwatch.Stop%2A>结束当前的时间间隔测量，并会冻结的累计运行时间值。 使用<xref:System.Diagnostics.Stopwatch.Reset%2A>方法来清除中现有的累计已用时间<xref:System.Diagnostics.Stopwatch>实例。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Diagnostics.Stopwatch>类，用于测量的性能的四个不同实现的分析从字符串的整数。 此代码示例摘自更大的示例为提供<xref:System.Diagnostics.Stopwatch>类。  
  
 [!code-cpp[StopWatchPerfSample#3](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#3)]
 [!code-csharp[StopWatchPerfSample#3](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#3)]
 [!code-vb[StopWatchPerfSample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedTicks">
      <MemberSignature Language="C#" Value="public long ElapsedTicks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ElapsedTicks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElapsedTicks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ElapsedTicks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ElapsedTicks : int64" Usage="System.Diagnostics.Stopwatch.ElapsedTicks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前实例测量得出的总运行时间（用计时器刻度表示）。</summary>
        <value>一个只读长整型，表示当前实例测量得出的计时器刻度总数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性表示基础计时器机制中的已用计时周期数。 计时周期是最小时间单位，<xref:System.Diagnostics.Stopwatch>计时器可以测量。 使用<xref:System.Diagnostics.Stopwatch.Frequency>要转换的字段<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>值转换为的秒数。  
  
 您可以查询属性<xref:System.Diagnostics.Stopwatch.Elapsed%2A>， <xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A>，和<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>时<xref:System.Diagnostics.Stopwatch>实例处于运行或停止。 属性稳定增加的已用时间而<xref:System.Diagnostics.Stopwatch>是运行; 它们保持不变停止实例时。  
  
 默认情况下，运行时间值的<xref:System.Diagnostics.Stopwatch>实例等于所有测量的时间间隔的总数。 每次调用<xref:System.Diagnostics.Stopwatch.Start%2A>开始计数累积的运行时间; 每次调用<xref:System.Diagnostics.Stopwatch.Stop%2A>结束当前的时间间隔测量，并会冻结的累计运行时间值。 使用<xref:System.Diagnostics.Stopwatch.Reset%2A>方法来清除中现有的累计已用时间<xref:System.Diagnostics.Stopwatch>实例。  
  
> [!NOTE]
>  <xref:System.Diagnostics.Stopwatch> 刻度是不同于<xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>。 在每个刻度<xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>值表示一个 100 纳秒时间间隔。 在每个刻度<xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A>值表示的时间间隔等于 1 秒除以<xref:System.Diagnostics.Stopwatch.Frequency>。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Diagnostics.Stopwatch>类，用于测量的性能的四个不同实现的分析从字符串的整数。 此代码示例摘自更大的示例为提供<xref:System.Diagnostics.Stopwatch>类。  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Stopwatch.Elapsed" />
        <altmember cref="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="Frequency">
      <MemberSignature Language="C#" Value="public static readonly long Frequency;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 Frequency" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.Frequency" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Frequency As Long " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly long Frequency;" />
      <MemberSignature Language="F#" Value=" staticval mutable Frequency : int64" Usage="System.Diagnostics.Stopwatch.Frequency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取以每秒刻度数表示的计时器频率。 此字段为只读。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 计时器精度和分辨率，该值指示的计时器频率。 例如，计时器频率为 200 万个刻度每第二个等于每个时钟周期的 500 毫微秒的计时器分辨率。 换而言之，由于一秒等于 1 亿毫微秒为单位，每秒 200 万个计时周期的计时器频率相当于每 10 亿毫微秒，可以进一步简化为 1 个刻度每 500 毫微秒的 200 万个刻度。  
  
 <xref:System.Diagnostics.Stopwatch.Frequency>值取决于基础的计时机制的分辨率。 如果已安装的硬件和操作系统支持的高分辨率性能计数器，则<xref:System.Diagnostics.Stopwatch.Frequency>值反映该计数器的频率。 否则为<xref:System.Diagnostics.Stopwatch.Frequency>值基于系统计时器频率。  
  
 因为<xref:System.Diagnostics.Stopwatch>频率取决于安装的硬件和操作系统，<xref:System.Diagnostics.Stopwatch.Frequency>系统运行时，值保持不变。  
  
   
  
## Examples  
 下面的示例显示的频率和解决方法<xref:System.Diagnostics.Stopwatch>计时器。 此代码示例摘自更大的示例为提供<xref:System.Diagnostics.Stopwatch>类。  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="GetTimestamp">
      <MemberSignature Language="C#" Value="public static long GetTimestamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetTimestamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.GetTimestamp" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTimestamp () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long GetTimestamp();" />
      <MemberSignature Language="F#" Value="static member GetTimestamp : unit -&gt; int64" Usage="System.Diagnostics.Stopwatch.GetTimestamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取计时器机制中的当前刻度数。</summary>
        <returns>一个长整型，表示基础计时器机制中的刻度计数器值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Diagnostics.Stopwatch>类使用的高分辨率性能计数器，<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>返回该计数器的当前值。 如果<xref:System.Diagnostics.Stopwatch>类使用系统计时器，<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>返回当前<xref:System.DateTime.Ticks%2A?displayProperty=nameWithType>属性<xref:System.DateTime.Now%2A?displayProperty=nameWithType>实例。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>方法来更新性能计数器。  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </Docs>
    </Member>
    <Member MemberName="IsHighResolution">
      <MemberSignature Language="C#" Value="public static readonly bool IsHighResolution;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsHighResolution" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighResolution As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly bool IsHighResolution;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHighResolution : bool" Usage="System.Diagnostics.Stopwatch.IsHighResolution" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示计时器是否基于高分辨率性能计数器。 此字段为只读。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用计时器<xref:System.Diagnostics.Stopwatch>类取决于系统硬件和操作系统。 <xref:System.Diagnostics.Stopwatch.IsHighResolution> 是`true`如果<xref:System.Diagnostics.Stopwatch>计时器是否基于高分辨率性能计数器。 否则为<xref:System.Diagnostics.Stopwatch.IsHighResolution>是`false`，这指示<xref:System.Diagnostics.Stopwatch>计时器是否基于系统计时器。  
  
   
  
## Examples  
 下面的示例显示的频率和解决方法<xref:System.Diagnostics.Stopwatch>计时器。 此代码示例摘自更大的示例为提供<xref:System.Diagnostics.Stopwatch>类。  
  
 [!code-cpp[StopWatchPerfSample#2](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#2)]
 [!code-csharp[StopWatchPerfSample#2](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#2)]
 [!code-vb[StopWatchPerfSample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Diagnostics.Stopwatch.Frequency" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Stopwatch.IsRunning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunning As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunning { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunning : bool" Usage="System.Diagnostics.Stopwatch.IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个指示 <see cref="T:System.Diagnostics.Stopwatch" /> 计时器是否在运行的值。</summary>
        <value>如果 <see cref="T:System.Diagnostics.Stopwatch" /> 实例当前正在运行，并且在对某个时间间隔的运行时间进行测量，则该值为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Diagnostics.Stopwatch>实例开始运行，而调用<xref:System.Diagnostics.Stopwatch.Start%2A>或<xref:System.Diagnostics.Stopwatch.StartNew%2A>。 通过调用运行该实例会停止<xref:System.Diagnostics.Stopwatch.Stop%2A>或<xref:System.Diagnostics.Stopwatch.Reset%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="stopwatch.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>停止时间间隔测量，并将运行时间重置为零。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Diagnostics.Stopwatch>实例计算，并跨多个时间间隔，保留的累积的运行时间，直到重置实例。 使用<xref:System.Diagnostics.Stopwatch.Stop%2A>停止当前的时间间隔测量和保留的累计运行时间值。 使用<xref:System.Diagnostics.Stopwatch.Reset%2A>若要停止正在进行的任何时间间隔测量，并清除运行时间值。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberSignature Language="F#" Value="member this.Restart : unit -&gt; unit" Usage="stopwatch.Restart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>停止时间间隔测量，将运行时间重置为零，然后开始测量运行时间。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Diagnostics.Stopwatch>实例计算，并跨多个时间间隔，保留的累积的运行时间，直到重置或重新启动实例。 使用<xref:System.Diagnostics.Stopwatch.Stop%2A>停止当前的时间间隔测量和保留的累计运行时间值。 使用<xref:System.Diagnostics.Stopwatch.Reset%2A>若要停止正在进行的任何时间间隔测量，并清除运行时间值。 使用<xref:System.Diagnostics.Stopwatch.Restart%2A>来停止当前间隔测量和启动新的时间间隔测量。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="stopwatch.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>开始或继续测量某个时间间隔的运行时间。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在典型<xref:System.Diagnostics.Stopwatch>方案中，调用<xref:System.Diagnostics.Stopwatch.Start%2A>方法，然后最终调用<xref:System.Diagnostics.Stopwatch.Stop%2A>方法，然后检查正在使用的运行时间<xref:System.Diagnostics.Stopwatch.Elapsed%2A>属性。  
  
 启动后，<xref:System.Diagnostics.Stopwatch>计时器测量当前时间间隔，用已用的计时器刻度表示，直到在实例处于停止或重置。 启动<xref:System.Diagnostics.Stopwatch>，它是已在运行不会更改的计时器状态或重置的运行时间属性。  
  
 当<xref:System.Diagnostics.Stopwatch>实例测量多个时间间隔，<xref:System.Diagnostics.Stopwatch.Start%2A>方法恢复测量与当前的运行时间值的时间。 A<xref:System.Diagnostics.Stopwatch>实例计算，并跨多个时间间隔，保留的累积的运行时间，直到重置实例。 使用<xref:System.Diagnostics.Stopwatch.Reset%2A>方法之前调用<xref:System.Diagnostics.Stopwatch.Start%2A>清除中的累计已用时间<xref:System.Diagnostics.Stopwatch>实例。 使用<xref:System.Diagnostics.Stopwatch.Restart%2A>方法<xref:System.Diagnostics.Stopwatch.Reset%2A>和<xref:System.Diagnostics.Stopwatch.Start%2A><xref:System.Diagnostics.Stopwatch>使用单个命令。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Diagnostics.Stopwatch.Start%2A>方法来启动一个计时器，测量应用程序的执行时间。  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="StartNew">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Stopwatch StartNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.Stopwatch StartNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.StartNew" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StartNew () As Stopwatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::Stopwatch ^ StartNew();" />
      <MemberSignature Language="F#" Value="static member StartNew : unit -&gt; System.Diagnostics.Stopwatch" Usage="System.Diagnostics.Stopwatch.StartNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Stopwatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>对新的 <see cref="T:System.Diagnostics.Stopwatch" /> 实例进行初始化，将运行时间属性设置为零，然后开始测量运行时间。</summary>
        <returns>刚刚开始测量运行时间的 <see cref="T:System.Diagnostics.Stopwatch" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法等效于调用<xref:System.Diagnostics.Stopwatch>构造函数，然后再调用<xref:System.Diagnostics.Stopwatch.Start%2A>上的新实例。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Diagnostics.Stopwatch>类，用于测量的性能的四个不同实现的分析从字符串的整数。 此代码示例摘自更大的示例为提供<xref:System.Diagnostics.Stopwatch>类。  
  
 [!code-cpp[StopWatchPerfSample#4](~/samples/snippets/cpp/VS_Snippets_CLR/StopWatchPerfSample/CPP/source.cpp#4)]
 [!code-csharp[StopWatchPerfSample#4](~/samples/snippets/csharp/VS_Snippets_CLR/StopWatchPerfSample/CS/source.cs#4)]
 [!code-vb[StopWatchPerfSample#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StopWatchPerfSample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Stop" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Stopwatch.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="stopwatch.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>停止测量某个时间间隔的运行时间。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在典型<xref:System.Diagnostics.Stopwatch>方案中，调用<xref:System.Diagnostics.Stopwatch.Start%2A>方法，然后最终调用<xref:System.Diagnostics.Stopwatch.Stop%2A>方法，然后检查正在使用的运行时间<xref:System.Diagnostics.Stopwatch.Elapsed%2A>属性。  
  
 <xref:System.Diagnostics.Stopwatch.Stop%2A>方法结束当前的时间间隔测量。 停止<xref:System.Diagnostics.Stopwatch>即未运行不会更改的计时器状态或重置的运行时间属性。  
  
 当<xref:System.Diagnostics.Stopwatch>实例测量多个时间间隔，<xref:System.Diagnostics.Stopwatch.Stop%2A>方法相当于暂停经过的时间度量。 后续调用<xref:System.Diagnostics.Stopwatch.Start%2A>恢复测量与当前的运行时间值的时间。 使用<xref:System.Diagnostics.Stopwatch.Reset%2A>方法来清除中的累计已用时间<xref:System.Diagnostics.Stopwatch>实例。  
  
   
  
## Examples  
 下面的示例演示如何使用<xref:System.Diagnostics.Stopwatch.Stop%2A>方法来停止测量应用程序的执行时间的计时器。  
  
 [!code-csharp[System.Diagnostics.Stopwatch#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/CS/source.cs#1)]
 [!code-vb[System.Diagnostics.Stopwatch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.Stopwatch/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Stopwatch.StartNew" />
        <altmember cref="P:System.Diagnostics.Stopwatch.IsRunning" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Start" />
        <altmember cref="M:System.Diagnostics.Stopwatch.Reset" />
      </Docs>
    </Member>
  </Members>
</Type>