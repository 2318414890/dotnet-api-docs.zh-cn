<Type Name="EventLogInstaller" FullName="System.Diagnostics.EventLogInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dea502097bd7de2a1d19d1c41fb212d88ea6ba2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventLogInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogInstaller : System::Configuration::Install::ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8cf88-101">使您能够安装和配置应用程序在运行时所读取或写入的事件日志。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8cf88-101">Allows you to install and configure an event log that your application reads from or writes to when running.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cf88-102"><xref:System.Diagnostics.EventLogInstaller>由[Installutil.exe （安装程序工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)时安装事件日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-102">The <xref:System.Diagnostics.EventLogInstaller> is used by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) when installing an event log.</span></span> <span data-ttu-id="8cf88-103"><xref:System.Diagnostics.EventLogInstaller>类可以仅在本地计算机上安装事件日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-103">The <xref:System.Diagnostics.EventLogInstaller> class can install event logs only on the local computer.</span></span>  
  
 <span data-ttu-id="8cf88-104">使用<xref:System.Diagnostics.EventLogInstaller>类在你的应用程序将写入事件日志，但并不需要使用你的应用程序的事件日志安装程序从事件日志进行读取。</span><span class="sxs-lookup"><span data-stu-id="8cf88-104">Use the <xref:System.Diagnostics.EventLogInstaller> class when your application writes to an event log; it is not necessary to use an event log installer for your application to read from an event log.</span></span> <span data-ttu-id="8cf88-105">应用程序和服务应写入应用程序日志或自定义日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-105">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="8cf88-106">设备驱动程序应写入系统日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-106">Device drivers should write to the System log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cf88-107">安全日志是只读的。</span><span class="sxs-lookup"><span data-stu-id="8cf88-107">The Security log is read-only.</span></span>  
  
 <span data-ttu-id="8cf88-108">安装程序将创建的事件源中指定的<xref:System.Diagnostics.EventLogInstaller.Source%2A>属性和它的事件日志中指定的寄存器<xref:System.Diagnostics.EventLogInstaller.Log%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-108">The installer creates the event source that you specify in the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property and registers it for the event log specified in <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span> <span data-ttu-id="8cf88-109">此行为是类似于调用<xref:System.Diagnostics.EventLog.CreateEventSource%2A>上<xref:System.Diagnostics.EventLog>组件。</span><span class="sxs-lookup"><span data-stu-id="8cf88-109">This behavior is similar to calling <xref:System.Diagnostics.EventLog.CreateEventSource%2A> on the <xref:System.Diagnostics.EventLog> component.</span></span>  
  
 <span data-ttu-id="8cf88-110">使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>和<xref:System.Diagnostics.EventLog.WriteEntry%2A>方法来向事件日志写入事件。</span><span class="sxs-lookup"><span data-stu-id="8cf88-110">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods to write events to an event log.</span></span> <span data-ttu-id="8cf88-111">必须指定事件源写入事件;你必须创建并在编写与源的第一个条目之前，配置事件源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-111">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="8cf88-112">在你的应用程序的安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-112">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="8cf88-113">这样，可以为操作系统来刷新其已注册的事件源的列表和它们的配置的时间。</span><span class="sxs-lookup"><span data-stu-id="8cf88-113">This allows time for the operating system to refresh its list of registered event sources and their configurations.</span></span> <span data-ttu-id="8cf88-114">如果操作系统未刷新其事件源的列表，并尝试写入新的源的事件写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="8cf88-114">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="8cf88-115">你可以配置新的源使用<xref:System.Diagnostics.EventLogInstaller>，或使用<xref:System.Diagnostics.EventLog.CreateEventSource%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8cf88-115">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="8cf88-116">若要创建新的事件源的计算机上，必须具有管理权限。</span><span class="sxs-lookup"><span data-stu-id="8cf88-116">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="8cf88-117">你可以创建现有的事件日志或新的事件日志的事件源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-117">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="8cf88-118">在创建新的源的新的事件日志时，系统将为该日志，此源注册，但之前向其中写入的第一个条目，将不会创建日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-118">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="8cf88-119">若要安装事件日志，创建继承自项目安装程序类<xref:System.Configuration.Install.Installer>，并设置<xref:System.ComponentModel.RunInstallerAttribute>到类`true`。</span><span class="sxs-lookup"><span data-stu-id="8cf88-119">To install an event log, create a project installer class that inherits from <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`.</span></span> <span data-ttu-id="8cf88-120">在项目中，创建<xref:System.Diagnostics.EventLogInstaller>为每个事件日志中指出你的应用程序将写入，并将实例添加到你的项目安装程序类。</span><span class="sxs-lookup"><span data-stu-id="8cf88-120">Within your project, create an <xref:System.Diagnostics.EventLogInstaller> for each event log that your application will write to and add the instance to your project installer class.</span></span>  
  
 <span data-ttu-id="8cf88-121">当[Installutil.exe （安装程序工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)是调用，它会查看<xref:System.ComponentModel.RunInstallerAttribute>。</span><span class="sxs-lookup"><span data-stu-id="8cf88-121">When the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) is called, it looks at the <xref:System.ComponentModel.RunInstallerAttribute>.</span></span> <span data-ttu-id="8cf88-122">如果它是`true`，该工具会安装中的所有项<xref:System.Configuration.Install.Installer.Installers%2A>项目安装程序与关联的集合。</span><span class="sxs-lookup"><span data-stu-id="8cf88-122">If it is `true`, the tool installs all the items in the <xref:System.Configuration.Install.Installer.Installers%2A> collection that are associated with your project installer.</span></span> <span data-ttu-id="8cf88-123">如果<xref:System.ComponentModel.RunInstallerAttribute>是`false`，此工具将忽略项目安装程序。</span><span class="sxs-lookup"><span data-stu-id="8cf88-123">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the tool ignores the project installer.</span></span>  
  
 <span data-ttu-id="8cf88-124">修改的其他属性<xref:System.Diagnostics.EventLogInstaller>之前或之后添加到的实例<xref:System.Configuration.Install.Installer.Installers%2A>项目安装程序，但之前运行该安装程序工具的集合。</span><span class="sxs-lookup"><span data-stu-id="8cf88-124">You modify other properties of an <xref:System.Diagnostics.EventLogInstaller> either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer, but before the installer tool runs.</span></span> <span data-ttu-id="8cf88-125">必须设置<xref:System.Diagnostics.EventLogInstaller.Source%2A>属性，如果你的应用程序将写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-125">You must set the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property if your application will be writing to the event log.</span></span>  
  
 <span data-ttu-id="8cf88-126">使用<xref:System.Diagnostics.EventLogInstaller>注册一个新的或现有的事件日志; 新的源不使用<xref:System.Diagnostics.EventLogInstaller>若要更改现有源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-126">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="8cf88-127"><xref:System.Diagnostics.EventLogInstaller>类不会修改现有源以匹配的指定的安装属性的配置属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-127">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="8cf88-128"><xref:System.Diagnostics.EventLogInstaller.Install%2A>方法引发异常，如果<xref:System.Diagnostics.EventLogInstaller.Source%2A>属性与匹配的计算机上的不同事件日志注册源名称。</span><span class="sxs-lookup"><span data-stu-id="8cf88-128">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="8cf88-129"><xref:System.Diagnostics.EventLogInstaller.Install%2A>方法如果不注册源<xref:System.Diagnostics.EventLogInstaller.Source%2A>属性与匹配的已注册为相同的事件日志中指定的源名称<xref:System.Diagnostics.EventLogInstaller.Log%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-129">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="8cf88-130">为你的事件类别和消息字符串，可以向本地化的资源文件注册事件源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-130">You can register the event source with localized resource files for your event category and message strings.</span></span> <span data-ttu-id="8cf88-131">你的应用程序可以写入事件日志项使用资源标识符，而不指定实际的字符串。</span><span class="sxs-lookup"><span data-stu-id="8cf88-131">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="8cf88-132">事件查看器使用的资源标识符来查找并显示基于当前语言设置的本地化的资源文件中的相应字符串。</span><span class="sxs-lookup"><span data-stu-id="8cf88-132">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="8cf88-133">你可以注册一个单独的文件的事件类别、 消息和参数插入字符串，或者也可以注册为所有三种类型的字符串的相同资源文件。</span><span class="sxs-lookup"><span data-stu-id="8cf88-133">You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="8cf88-134">使用<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>， <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>， <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>，和<xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A>属性来配置要向事件日志写入本地化的条目的源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-134">Use the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>, <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="8cf88-135">如果你的应用程序将直接写入事件日志的字符串值，你不需要设置这些属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-135">If your application writes strings values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="8cf88-136">要写入本地化的项还是要直接写入字符串，则必须配置源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-136">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8cf88-137">如果你的应用程序将使用资源标识符和字符串值的条目，则必须注册两个单独的源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-137">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="8cf88-138">例如，使用资源文件，配置一个源，然后使用在该源<xref:System.Diagnostics.EventLog.WriteEvent%2A>方法来编写使用到事件日志的资源标识符的条目。</span><span class="sxs-lookup"><span data-stu-id="8cf88-138">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="8cf88-139">创建不同的源，而无需资源文件，然后使用在该源<xref:System.Diagnostics.EventLog.WriteEntry%2A>方法使用该源的事件日志中直接写入字符串。</span><span class="sxs-lookup"><span data-stu-id="8cf88-139">Create a different source without resource files and then use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
 <span data-ttu-id="8cf88-140">通常情况下，不调用的方法<xref:System.Diagnostics.EventLogInstaller>类在代码中; 它们通常仅由 Installutil.exe 调用。</span><span class="sxs-lookup"><span data-stu-id="8cf88-140">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> class from within your code; they are generally called only by Installutil.exe.</span></span> <span data-ttu-id="8cf88-141">该工具将自动调用<xref:System.Diagnostics.EventLogInstaller.Install%2A>在安装过程中的方法。</span><span class="sxs-lookup"><span data-stu-id="8cf88-141">The tool automatically calls the <xref:System.Diagnostics.EventLogInstaller.Install%2A> method during the installation process.</span></span> <span data-ttu-id="8cf88-142">如有必要，它退出故障，通过调用<xref:System.Diagnostics.EventLogInstaller.Rollback%2A>生成异常的对象的方法。</span><span class="sxs-lookup"><span data-stu-id="8cf88-142">It backs out failures, if necessary, by calling the <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method for the object that generated the exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cf88-143">下面的代码示例设置新的事件源的安装属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-143">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="8cf88-144">下面的代码示例设置的源名称和事件日志名称，并添加<xref:System.Diagnostics.EventLogInstaller>到<xref:System.Configuration.Install.Installer.Installers%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="8cf88-144">The code example sets the source name and the event log name, and adds the <xref:System.Diagnostics.EventLogInstaller> to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
 [!code-cpp[EventLogInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogInstaller/CPP/eventloginstaller.cpp#1)]
 [!code-csharp[EventLogInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogInstaller/CS/eventloginstaller.cs#1)]
 [!code-vb[EventLogInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogInstaller/VB/eventloginstaller.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8cf88-145">初始化 <see cref="T:System.Diagnostics.EventLogInstaller" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-145">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogInstaller" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cf88-146">获取或设置类别资源文件中类别的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-146">Gets or sets the number of categories in the category resource file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cf88-147">类别资源文件中的类别的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-147">The number of categories in the category resource file.</span>
          </span>
          <span data-ttu-id="8cf88-148">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-148">The default value is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cf88-149">使用<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>和<xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>属性来写入事件时使用本地化的类别字符串。</span><span class="sxs-lookup"><span data-stu-id="8cf88-149">Use the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="8cf88-150">如果你在写入该事件时提供一种类别，事件查看器将显示事件项中，类别。</span><span class="sxs-lookup"><span data-stu-id="8cf88-150">The Event Viewer displays the category for an event entry, if you supply a category when you write the event.</span></span> <span data-ttu-id="8cf88-151">事件日志类别是应用程序定义的字符串，用于帮助筛选事件，或提供有关事件的信息。</span><span class="sxs-lookup"><span data-stu-id="8cf88-151">Event log categories are application-defined strings that help filter events, or provide information on an event.</span></span> <span data-ttu-id="8cf88-152">例如，你的应用程序可以定义为不同的组件或不同的操作分隔不同类别。</span><span class="sxs-lookup"><span data-stu-id="8cf88-152">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="8cf88-153">事件类别是可选的;如果你的应用程序不使用类别，则不要设置<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>和<xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-153">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="8cf88-154">有关如何定义事件消息和生成事件资源文件的详细信息，请参阅处平台 SDK 文档中的"消息编译器"主题[ http://msdn.microsoft.com ](http://msdn.microsoft.com/)。</span><span class="sxs-lookup"><span data-stu-id="8cf88-154">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cf88-155">下面的代码示例设置新的事件源的安装属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-155">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="8cf88-156">下面的代码示例设置事件源的名称、 事件日志名称和本地化的事件文本的资源文件。</span><span class="sxs-lookup"><span data-stu-id="8cf88-156">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="8cf88-157">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</span><span class="sxs-lookup"><span data-stu-id="8cf88-157">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="8cf88-158">消息文本文件是从其创建的消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-158">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="8cf88-159">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</span><span class="sxs-lookup"><span data-stu-id="8cf88-159">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cf88-160">获取或设置包含源的类别字符串的资源文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-160">Gets or sets the path of the resource file that contains category strings for the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cf88-161">类别资源文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-161">The path of the category resource file.</span>
          </span>
          <span data-ttu-id="8cf88-162">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-162">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cf88-163">使用<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>和<xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>属性来写入事件时使用本地化的类别字符串。</span><span class="sxs-lookup"><span data-stu-id="8cf88-163">Use the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="8cf88-164">如果你在写入该事件时提供一种类别，事件查看器将显示事件项的类别。</span><span class="sxs-lookup"><span data-stu-id="8cf88-164">The Event Viewer displays the category for an event entry if you supply a category when you write the event.</span></span> <span data-ttu-id="8cf88-165">事件日志类别是应用程序定义的字符串，帮助筛选事件，或提供有关的事件的信息。</span><span class="sxs-lookup"><span data-stu-id="8cf88-165">Event log categories are application-defined strings that help filter events, or provide information about an event.</span></span> <span data-ttu-id="8cf88-166">例如，你的应用程序可能具有不同的组件或不同的操作的单独类别。</span><span class="sxs-lookup"><span data-stu-id="8cf88-166">For example, your application might have separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="8cf88-167">事件类别是可选的;如果你的应用程序不使用类别，则不要设置<xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>和<xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-167">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> and <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="8cf88-168">有关如何定义事件消息和生成事件资源文件的详细信息，请参阅处平台 SDK 文档中的"消息编译器"主题[ http://msdn.microsoft.com ](http://msdn.microsoft.com/)。</span><span class="sxs-lookup"><span data-stu-id="8cf88-168">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cf88-169">下面的代码示例设置新的事件源的安装属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-169">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="8cf88-170">下面的代码示例设置事件源的名称、 事件日志名称和本地化的事件文本的资源文件。</span><span class="sxs-lookup"><span data-stu-id="8cf88-170">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="8cf88-171">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</span><span class="sxs-lookup"><span data-stu-id="8cf88-171">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="8cf88-172">消息文本文件是从其创建的消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-172">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="8cf88-173">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</span><span class="sxs-lookup"><span data-stu-id="8cf88-173">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="8cf88-174">用作 <see cref="T:System.ComponentModel.IComponent" /> 的模板的 <see cref="T:System.Diagnostics.EventLogInstaller" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-174">An <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Diagnostics.EventLogInstaller" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cf88-175">复制安装时所需要的 <see cref="T:System.Diagnostics.EventLog" /> 组件（与事件日志对应）的属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-175">Copies the property values of an <see cref="T:System.Diagnostics.EventLog" /> component that are required at installation time for an event log.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cf88-176">通过指定的组件`component`参数必须是<xref:System.Diagnostics.EventLog>; 否则为将引发异常。</span><span class="sxs-lookup"><span data-stu-id="8cf88-176">The component specified by the `component` parameter must be an <xref:System.Diagnostics.EventLog>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="8cf88-177">通常情况下，不调用的方法<xref:System.Diagnostics.EventLogInstaller>从在代码中; 它们通常称为只能由[Installutil.exe （安装程序工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)。</span><span class="sxs-lookup"><span data-stu-id="8cf88-177">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span> <span data-ttu-id="8cf88-178"><xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A> Installutil.exe 使用它来设置的属性值<xref:System.Diagnostics.EventLogInstaller>为的现有值<xref:System.Diagnostics.EventLog>。</span><span class="sxs-lookup"><span data-stu-id="8cf88-178"><xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A> is used by Installutil.exe to set the property values for the <xref:System.Diagnostics.EventLogInstaller> to the values of an existing <xref:System.Diagnostics.EventLog>.</span></span>  
  
 <span data-ttu-id="8cf88-179">如果<xref:System.Diagnostics.EventLog.Log%2A>的<xref:System.Diagnostics.EventLog>，它是在传递为空字符串 ("")，必须设置<xref:System.Diagnostics.EventLog.Log%2A>为有效的值之前在安装程序执行的属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-179">If the <xref:System.Diagnostics.EventLog.Log%2A> of the <xref:System.Diagnostics.EventLog> that is passed in is an empty string (""), you must set the <xref:System.Diagnostics.EventLog.Log%2A> property to a valid value before the installer executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cf88-180">指定的组件不是 <see cref="T:System.Diagnostics.EventLog" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-180">The specified component is not an <see cref="T:System.Diagnostics.EventLog" />.</span>
          </span>
          <span data-ttu-id="8cf88-181">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-181">-or-</span>
          </span>
          <span data-ttu-id="8cf88-182">指定组件的 <see cref="P:System.Diagnostics.EventLog.Log" /> 或 <see cref="P:System.Diagnostics.EventLog.Source" /> 属性为 <see langword="null" /> 或空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-182">The <see cref="P:System.Diagnostics.EventLog.Log" /> or <see cref="P:System.Diagnostics.EventLog.Source" /> property of the specified component is either <see langword="null" /> or empty.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">
          <span data-ttu-id="8cf88-183">
            <see cref="T:System.Collections.IDictionary" />，用于保存执行回滚或卸载操作所需的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-183">An <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a rollback or uninstall operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cf88-184">执行安装并将事件日志信息写入注册表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-184">Performs the installation and writes event log information to the registry.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cf88-185"><xref:System.Diagnostics.EventLogInstaller.Install%2A>方法将事件日志信息写入注册表中，并将事件日志关联与由指定的日志<xref:System.Diagnostics.EventLogInstaller.Log%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-185">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method writes event log information to the registry, and associates the event log with a log that is specified by the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span> <span data-ttu-id="8cf88-186">如果不存在日志 （和指定源），<xref:System.Diagnostics.EventLogInstaller.Install%2A>创建日志并将新的源与它关联。</span><span class="sxs-lookup"><span data-stu-id="8cf88-186">If the log does not already exist (and a source is specified), <xref:System.Diagnostics.EventLogInstaller.Install%2A> creates a log and associates the new source with it.</span></span>  
  
 <span data-ttu-id="8cf88-187">通常情况下，不调用的方法<xref:System.Diagnostics.EventLogInstaller>从在代码中; 它们通常称为只能由[Installutil.exe （安装程序工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)。</span><span class="sxs-lookup"><span data-stu-id="8cf88-187">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span> <span data-ttu-id="8cf88-188">该工具将自动调用<xref:System.Diagnostics.EventLogInstaller.Install%2A>在安装过程中要写入事件日志正在安装的注册表信息的方法。</span><span class="sxs-lookup"><span data-stu-id="8cf88-188">The tool automatically calls the <xref:System.Diagnostics.EventLogInstaller.Install%2A> method during the installation process to write registry information that is associated with the event log being installed.</span></span> <span data-ttu-id="8cf88-189">安装是事务性的因此如果在安装过程中的任何安装项目组件故障，则所有以前安装的组件将回滚到其安装前的状态。</span><span class="sxs-lookup"><span data-stu-id="8cf88-189">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously-installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="8cf88-190">这通过调用每个组件实现<xref:System.Diagnostics.EventLogInstaller.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8cf88-190">This is accomplished by calling each component's <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="8cf88-191">使用<xref:System.Diagnostics.EventLogInstaller>注册一个新的或现有的事件日志; 新的源不使用<xref:System.Diagnostics.EventLogInstaller>若要更改现有源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-191">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="8cf88-192"><xref:System.Diagnostics.EventLogInstaller>类不会修改现有源以匹配的指定的安装属性的配置属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-192">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="8cf88-193"><xref:System.Diagnostics.EventLogInstaller.Install%2A>方法引发异常，如果<xref:System.Diagnostics.EventLogInstaller.Source%2A>属性与匹配的计算机上的不同事件日志注册源名称。</span><span class="sxs-lookup"><span data-stu-id="8cf88-193">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="8cf88-194"><xref:System.Diagnostics.EventLogInstaller.Install%2A>方法跳过注册源，如果<xref:System.Diagnostics.EventLogInstaller.Source%2A>属性与匹配的已注册为相同的事件日志中指定的源名称<xref:System.Diagnostics.EventLogInstaller.Log%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-194">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method skips registering the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="8cf88-195">应用程序的安装例程使用项目安装程序的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>属性来自动维护有关已安装的组件的信息。</span><span class="sxs-lookup"><span data-stu-id="8cf88-195">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="8cf88-196">传递到此状态信息<xref:System.Diagnostics.EventLogInstaller.Install%2A>作为`stateSaver`工具安装每个参数，将持续更新<xref:System.Diagnostics.EventLogInstaller>。</span><span class="sxs-lookup"><span data-stu-id="8cf88-196">This state information, which is passed to <xref:System.Diagnostics.EventLogInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the tool installs each <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="8cf88-197">通常情况下，不需要为你的代码来显式修改此状态信息。</span><span class="sxs-lookup"><span data-stu-id="8cf88-197">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="8cf88-198">安装程序尝试使用的平台不是 Windows NT 4.0 或更新版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-198">The platform the installer is trying to use is not Windows NT 4.0 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cf88-199">已经为另一个事件日志注册了 <see cref="P:System.Diagnostics.EventLogInstaller.Source" /> 属性中指定的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-199">The name specified in the <see cref="P:System.Diagnostics.EventLogInstaller.Source" /> property is already registered for a different event log.</span>
          </span>
        </exception>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">
          <span data-ttu-id="8cf88-200">要比较的安装程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-200">The installer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cf88-201">确定安装程序和指定的另一个安装程序是否引用同一个源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-201">Determines whether an installer and another specified installer refer to the same source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cf88-202">如果当前安装程序和由 <paramref name="otherInstaller" /> 参数指定的安装程序安装或卸载相同的源，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-202">
              <see langword="true" /> if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter would install or uninstall the same source; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cf88-203">通常情况下，不调用的方法<xref:System.Diagnostics.EventLogInstaller>从在代码中; 它们是通常只能由调用的安装程序工具 (Installutil.exe)。</span><span class="sxs-lookup"><span data-stu-id="8cf88-203">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the Installer tool (Installutil.exe).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cf88-204">获取或设置要向其设置源的日志的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-204">Gets or sets the name of the log to set the source to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cf88-205">日志的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-205">The name of the log.</span>
          </span>
          <span data-ttu-id="8cf88-206">这可以是 Application、System 或一个自定义的日志名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-206">This can be Application, System, or a custom log name.</span>
          </span>
          <span data-ttu-id="8cf88-207">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-207">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cf88-208">你可以使用<xref:System.Diagnostics.EventLogInstaller.Log%2A>相关联中指定的源属性<xref:System.Diagnostics.EventLogInstaller.Source%2A>属性与现有的日志或本地计算机上的新日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-208">You can use the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property to associate the source you specify in the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property with either an existing log or a new log on the local computer.</span></span> <span data-ttu-id="8cf88-209">[Installutil.exe （安装程序工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)使用此信息来将源映射到计算机的注册表中的日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-209">The [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) uses this information to map the source to the log in the computer's registry.</span></span> <span data-ttu-id="8cf88-210">应用程序和服务应写入应用程序日志或自定义日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-210">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="8cf88-211">设备驱动程序应写入系统日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-211">Device drivers should write to the System log.</span></span>  
  
 <span data-ttu-id="8cf88-212">若要将条目写入到事件日志，必须创建源并将其注册到事件日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-212">To write entries to an event log, you must create a source and register it with an event log.</span></span> <span data-ttu-id="8cf88-213">事件源可以仅将一个日志写入一次。</span><span class="sxs-lookup"><span data-stu-id="8cf88-213">An event source can only write to one log at a time.</span></span> <span data-ttu-id="8cf88-214">安装程序使用的值<xref:System.Diagnostics.EventLogInstaller.Source%2A>属性以将你的应用程序注册事件日志条目的有效源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-214">The installer uses the value of the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property to register your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="8cf88-215">如果未指定安装程序运行之前的日志名称，安装程序将注册你的应用程序日志的源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-215">If you do not specify a log name before the installer runs, the installer registers your source to the Application log.</span></span> <span data-ttu-id="8cf88-216">如果指定新的源和现有的日志时，安装程序将创建一个新的事件源，并将其与您指定的日志关联。</span><span class="sxs-lookup"><span data-stu-id="8cf88-216">If you specify a new source and an existing log, the installer creates a new event source and associates it with the log you specify.</span></span> <span data-ttu-id="8cf88-217">如果指定新的源和新的日志，安装程序将在注册表中，新的日志与相关联的新的源，但直到第一个条目写入，则不会创建日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-217">If you specify both a new source and a new log, the installer associates the new source with the new log in the registry, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="8cf88-218">操作系统将事件日志存储为文件。</span><span class="sxs-lookup"><span data-stu-id="8cf88-218">The operating system stores event logs as files.</span></span> <span data-ttu-id="8cf88-219">当你使用<xref:System.Diagnostics.EventLogInstaller>或<xref:System.Diagnostics.EventLog.CreateEventSource%2A>方法来创建新的事件日志，关联的文件存储在指定的计算机上的 %SystemRoot%\System32\Config 目录中。</span><span class="sxs-lookup"><span data-stu-id="8cf88-219">When you use <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="8cf88-220">通过追加的前 8 个字符设置的文件名称<xref:System.Diagnostics.EventLogInstaller.Log%2A>".evt"文件扩展名的属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-220">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property with the ".evt" file name extension.</span></span>  
  
 <span data-ttu-id="8cf88-221">使用<xref:System.Diagnostics.EventLogInstaller>注册一个新的或现有的事件日志; 新的源不使用<xref:System.Diagnostics.EventLogInstaller>若要更改现有源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-221">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="8cf88-222"><xref:System.Diagnostics.EventLogInstaller>类不会修改现有源以匹配的指定的安装属性的配置属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-222">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="8cf88-223"><xref:System.Diagnostics.EventLogInstaller.Install%2A>方法引发异常，如果<xref:System.Diagnostics.EventLogInstaller.Source%2A>属性与匹配的计算机上的不同事件日志注册源名称。</span><span class="sxs-lookup"><span data-stu-id="8cf88-223">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="8cf88-224"><xref:System.Diagnostics.EventLogInstaller.Install%2A>方法如果不注册源<xref:System.Diagnostics.EventLogInstaller.Source%2A>属性与匹配的已注册为相同的事件日志中指定的源名称<xref:System.Diagnostics.EventLogInstaller.Log%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-224">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="8cf88-225">有关详细的事件日志和源有关各种行为的信息，请参阅<xref:System.Diagnostics.EventLog>类文档<xref:System.Diagnostics.EventLog.Log%2A>和<xref:System.Diagnostics.EventLog.Source%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-225">For more detailed information about the behaviors of event logs and sources, see the <xref:System.Diagnostics.EventLog> class documentation for the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.Source%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cf88-226">获取或设置资源文件的路径，该文件包含源的消息格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-226">Gets or sets the path of the resource file that contains message formatting strings for the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cf88-227">消息资源文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-227">The path of the message resource file.</span>
          </span>
          <span data-ttu-id="8cf88-228">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-228">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cf88-229">使用<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>属性配置事件日志源写入本地化的事件消息。</span><span class="sxs-lookup"><span data-stu-id="8cf88-229">Use the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property to configure an event log source to write localized event messages.</span></span> <span data-ttu-id="8cf88-230">事件消息是应用程序定义的字符串，描述向用户事件。</span><span class="sxs-lookup"><span data-stu-id="8cf88-230">Event messages are application-defined strings that describe the event to the user.</span></span>  
  
 <span data-ttu-id="8cf88-231">你的应用程序可以编写使用资源标识符的事件日志条目。</span><span class="sxs-lookup"><span data-stu-id="8cf88-231">Your application can write event log entries using resource identifiers.</span></span> <span data-ttu-id="8cf88-232">资源标识符的消息中编制索引<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>。</span><span class="sxs-lookup"><span data-stu-id="8cf88-232">A resource identifier indexes a message located in the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>.</span></span> <span data-ttu-id="8cf88-233">事件查看器使用的资源标识符来查找并显示基于当前语言设置的本地化的资源文件中的相应字符串。</span><span class="sxs-lookup"><span data-stu-id="8cf88-233">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span>  
  
 <span data-ttu-id="8cf88-234">要写入本地化的项还是要直接写入字符串，则必须配置事件源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-234">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8cf88-235">使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>方法写入本地化的项配置了消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-235">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="8cf88-236">如果你的应用程序写入事件消息字符串直接，而不是在本地化的资源文件中，使用的资源标识符未设置<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-236">If your application writes event message strings directly, rather than using a resource identifier in a localized resource file, do not set the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="8cf88-237">如果<xref:System.Diagnostics.EventLog.MachineName%2A>属性不是本地计算机标识符 ("。")，.NET 框架将假定资源文件位于远程计算机上。</span><span class="sxs-lookup"><span data-stu-id="8cf88-237">If the <xref:System.Diagnostics.EventLog.MachineName%2A> property is not the local computer identifier ("."), the .NET Framework assumes that the resource file is on a remote computer.</span></span> <span data-ttu-id="8cf88-238">如果<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>属性值包含驱动器号，则假定资源文件位于\\ \\< machinename\>\\< 驱动器\>$ 共享 (例如， \\\server\c$)。</span><span class="sxs-lookup"><span data-stu-id="8cf88-238">If the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property value contains a drive letter, the resource file is assumed to be on the \\\\<machinename\>\\<drive\>$ share (for example, \\\server\c$).</span></span> <span data-ttu-id="8cf88-239">如果值包含字符串 %systemroot%，则假定资源文件位于\\ \\< machinename\>\admin$ 共享 (例如， \\\server\admin$)。</span><span class="sxs-lookup"><span data-stu-id="8cf88-239">If the value contains the string %systemroot%, the resource file is assumed to be on the \\\\<machinename\>\admin$ share (for example, \\\server\admin$).</span></span>  
  
 <span data-ttu-id="8cf88-240">有关如何定义事件消息和生成事件资源文件的详细信息，请参阅处平台 SDK 文档中的"消息编译器"主题[ http://msdn.microsoft.com ](http://msdn.microsoft.com/)。</span><span class="sxs-lookup"><span data-stu-id="8cf88-240">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cf88-241">下面的代码示例设置新的事件源的安装属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-241">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="8cf88-242">下面的代码示例设置事件源的名称、 事件日志名称和本地化的事件文本的资源文件。</span><span class="sxs-lookup"><span data-stu-id="8cf88-242">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="8cf88-243">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</span><span class="sxs-lookup"><span data-stu-id="8cf88-243">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="8cf88-244">消息文本文件是从其创建的消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-244">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="8cf88-245">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</span><span class="sxs-lookup"><span data-stu-id="8cf88-245">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cf88-246">获取或设置资源文件的路径，该文件包含源的消息参数字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-246">Gets or sets the path of the resource file that contains message parameter strings for the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cf88-247">消息参数资源文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-247">The path of the message parameter resource file.</span>
          </span>
          <span data-ttu-id="8cf88-248">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-248">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cf88-249">使用<xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A>属性可以配置将与本地化的事件消息写入事件日志源插入参数字符串。</span><span class="sxs-lookup"><span data-stu-id="8cf88-249">Use the <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> property to configure an event log source to write localized event messages with inserted parameter strings.</span></span> <span data-ttu-id="8cf88-250">中指定每个本地化的事件消息<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>属性可以包含插入字符串的占位符。</span><span class="sxs-lookup"><span data-stu-id="8cf88-250">Each localized event message specified in the <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> property can contain placeholders for insertion strings.</span></span> <span data-ttu-id="8cf88-251">这些占位符用于指定的位置和事件消息中的独立于语言的字符串的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="8cf88-251">These placeholders are used to specify the position and resource identifier for a language-independent string within the event message.</span></span> <span data-ttu-id="8cf88-252">事件查看器的相应字符串替换占位符<xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A>和格式本地化的事件项的事件日志消息。</span><span class="sxs-lookup"><span data-stu-id="8cf88-252">The Event Viewer replaces the placeholders with the corresponding strings from the <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> and formats the event log message for the localized event entry.</span></span>  
  
 <span data-ttu-id="8cf88-253">例如，以下部分的消息文本文件定义的参数占位符的字符串：</span><span class="sxs-lookup"><span data-stu-id="8cf88-253">For example, the following section of a message text file defines a string with a parameter placeholder:</span></span>  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 <span data-ttu-id="8cf88-254">在参数资源文件中，插入字符串必须使用定义的资源标识符，对应于占位符，如下所示：</span><span class="sxs-lookup"><span data-stu-id="8cf88-254">Within the parameter resource file, the insertion string must be defined with the resource identifier that corresponds to the placeholder, as shown below:</span></span>  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 <span data-ttu-id="8cf88-255">要写入本地化的项还是要直接写入字符串，则必须配置事件源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-255">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="8cf88-256">使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>方法写入本地化的项配置了消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-256">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="8cf88-257">如果你的应用程序将事件消息字符串直接写入事件日志中，或者你<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>不包含消息未设置带有参数插入占位符<xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-257">If your application writes event message strings directly to the event log, or if your <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> does not contain messages with parameter insertion placeholders, do not set the <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="8cf88-258">有关如何定义事件消息和生成事件资源文件的详细信息，请参阅处平台 SDK 文档中的"消息编译器"主题[ http://msdn.microsoft.com ](http://msdn.microsoft.com/)。</span><span class="sxs-lookup"><span data-stu-id="8cf88-258">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cf88-259">下面的代码示例设置新的事件源的安装属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-259">The following code example sets the installation properties for a new event source.</span></span> <span data-ttu-id="8cf88-260">下面的代码示例设置事件源的名称、 事件日志名称和本地化的事件文本的资源文件。</span><span class="sxs-lookup"><span data-stu-id="8cf88-260">The code example sets the event source name, event log name, and resource file for localized event text.</span></span>  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 <span data-ttu-id="8cf88-261">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</span><span class="sxs-lookup"><span data-stu-id="8cf88-261">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="8cf88-262">消息文本文件是从其创建的消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-262">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="8cf88-263">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</span><span class="sxs-lookup"><span data-stu-id="8cf88-263">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="8cf88-264">具体而言，为资源标识符 1004年定义消息将使用占位符，对于为资源标识符 5002 定义的参数字符串。</span><span class="sxs-lookup"><span data-stu-id="8cf88-264">Specifically, the message defined for resource identifier 1004 uses a placeholder for a parameter string defined for resource identifier 5002.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="8cf88-265">
            <see cref="T:System.Collections.IDictionary" /> 包含计算机的安装前状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-265">An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cf88-266">通过回滚安装过程写入注册表的事件日志信息，将计算机还原为安装前的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-266">Restores the computer to the state it was in before the installation by rolling back the event log information that the installation procedure wrote to the registry.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cf88-267"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A>方法撤消的效果<xref:System.Diagnostics.EventLogInstaller.Install%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8cf88-267">The <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method undoes the effects of the <xref:System.Diagnostics.EventLogInstaller.Install%2A> method.</span></span> <span data-ttu-id="8cf88-268"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 如果安装项目中的任何组件的安装失败时进行调用。</span><span class="sxs-lookup"><span data-stu-id="8cf88-268"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> is called if the installation of any component in the installation project fails.</span></span> <span data-ttu-id="8cf88-269"><xref:System.Diagnostics.EventLogInstaller.Install%2A>方法创建或设置事件日志和事件源的属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-269">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method creates or sets the properties for an event log and event source.</span></span> <span data-ttu-id="8cf88-270"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> 删除事件日志和源，或者将预先存在的源的属性重置为其安装前的值。</span><span class="sxs-lookup"><span data-stu-id="8cf88-270"><xref:System.Diagnostics.EventLogInstaller.Rollback%2A> either deletes the event log and source or resets the properties of a pre-existing source to its pre-installation values.</span></span>  
  
 <span data-ttu-id="8cf88-271">通常情况下，不调用的方法<xref:System.Diagnostics.EventLogInstaller>从在代码中; 它们通常称为只能由[Installutil.exe （安装程序工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)。</span><span class="sxs-lookup"><span data-stu-id="8cf88-271">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span> <span data-ttu-id="8cf88-272">该工具将调用<xref:System.Diagnostics.EventLogInstaller.Rollback%2A>方法时若要安装，若要撤消安装过程中已进行任何更改，这个或另一个组件已失败。</span><span class="sxs-lookup"><span data-stu-id="8cf88-272">The tool calls the <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> method, when this or another component has failed to install, to undo any changes that the installation process has already made.</span></span>  
  
 <span data-ttu-id="8cf88-273">应用程序的安装例程使用项目安装程序的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>属性来自动维护有关已安装的组件的信息。</span><span class="sxs-lookup"><span data-stu-id="8cf88-273">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="8cf88-274">传递到此状态信息<xref:System.Diagnostics.EventLogInstaller.Rollback%2A>作为`savedState`参数，将持续更新，因为该工具将每个<xref:System.Diagnostics.EventLogInstaller>。</span><span class="sxs-lookup"><span data-stu-id="8cf88-274">This state information, which is passed to <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the tool rolls back each <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="8cf88-275">通常情况下，不需要为你的代码来显式修改此状态信息。</span><span class="sxs-lookup"><span data-stu-id="8cf88-275">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cf88-276">获取或设置要在日志中注册的源名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-276">Gets or sets the source name to register with the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cf88-277">要在事件日志中注册为项源的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-277">The name to register with the event log as a source of entries.</span>
          </span>
          <span data-ttu-id="8cf88-278">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-278">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cf88-279">事件源指示什么来记录事件。</span><span class="sxs-lookup"><span data-stu-id="8cf88-279">The event source indicates what logs the event.</span></span> <span data-ttu-id="8cf88-280">它通常是应用程序的名称或大型应用程序内的一个组件的名称。</span><span class="sxs-lookup"><span data-stu-id="8cf88-280">It is often the name of the application, or the name of a component within a large application.</span></span>  
  
 <span data-ttu-id="8cf88-281">安装程序使用的值<xref:System.Diagnostics.EventLogInstaller.Source%2A>属性以将你的应用程序注册事件日志条目的有效源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-281">The installer uses the value of the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property to register your application with the event log as a valid source of entries.</span></span> <span data-ttu-id="8cf88-282">新的源名称不能与现有源名称或现有的事件日志名称匹配。</span><span class="sxs-lookup"><span data-stu-id="8cf88-282">A new source name cannot match an existing source name or an existing event log name.</span></span> <span data-ttu-id="8cf88-283">每个源可以仅写入一个事件日志一次;但是，你的应用程序可以使用多个源写入多个事件日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-283">Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="8cf88-284">例如，你的应用程序可能需要为不同的事件日志或不同的资源文件配置的多个源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-284">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="8cf88-285">应用程序和服务应写入应用程序日志或自定义日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-285">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="8cf88-286">设备驱动程序应写入系统日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-286">Device drivers should write to the System log.</span></span> <span data-ttu-id="8cf88-287">如果未指定安装程序运行之前的日志名称，安装程序将注册你的应用程序日志的源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-287">If you do not specify a log name before the installer runs, the installer registers your source to the Application log.</span></span> <span data-ttu-id="8cf88-288">如果指定不存在日志的名称，系统注册<xref:System.Diagnostics.EventLogInstaller.Source%2A>向此日志，但直到第一个条目写入不创建日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-288">If you specify the name of a log that does not exist, the system registers the <xref:System.Diagnostics.EventLogInstaller.Source%2A> to that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="8cf88-289">使用<xref:System.Diagnostics.EventLogInstaller>注册一个新的或现有的事件日志; 新的源不使用<xref:System.Diagnostics.EventLogInstaller>若要更改现有源。</span><span class="sxs-lookup"><span data-stu-id="8cf88-289">Use <xref:System.Diagnostics.EventLogInstaller> to register a new source for a new or existing event log; do not use <xref:System.Diagnostics.EventLogInstaller> to change an existing source.</span></span> <span data-ttu-id="8cf88-290"><xref:System.Diagnostics.EventLogInstaller>类不会修改现有源以匹配的指定的安装属性的配置属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-290">The <xref:System.Diagnostics.EventLogInstaller> class does not modify the configuration properties of an existing source to match the specified installation properties.</span></span> <span data-ttu-id="8cf88-291"><xref:System.Diagnostics.EventLogInstaller.Install%2A>方法引发异常，如果<xref:System.Diagnostics.EventLogInstaller.Source%2A>属性与匹配的计算机上的不同事件日志注册源名称。</span><span class="sxs-lookup"><span data-stu-id="8cf88-291">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method throws an exception if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is registered for a different event log on the computer.</span></span> <span data-ttu-id="8cf88-292"><xref:System.Diagnostics.EventLogInstaller.Install%2A>方法如果不注册源<xref:System.Diagnostics.EventLogInstaller.Source%2A>属性与匹配的已注册为相同的事件日志中指定的源名称<xref:System.Diagnostics.EventLogInstaller.Log%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-292">The <xref:System.Diagnostics.EventLogInstaller.Install%2A> method does not register the source if the <xref:System.Diagnostics.EventLogInstaller.Source%2A> property matches a source name that is already registered for the same event log specified in the <xref:System.Diagnostics.EventLogInstaller.Log%2A> property.</span></span>  
  
 <span data-ttu-id="8cf88-293">有关详细的事件日志和源有关各种行为的信息，请参阅<xref:System.Diagnostics.EventLog>类文档<xref:System.Diagnostics.EventLog.Log%2A>和<xref:System.Diagnostics.EventLog.Source%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-293">For more detailed information about the behaviors of event logs and sources, see the <xref:System.Diagnostics.EventLog> class documentation for the <xref:System.Diagnostics.EventLog.Log%2A> and <xref:System.Diagnostics.EventLog.Source%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="8cf88-294">
            <see cref="T:System.Collections.IDictionary" /> 包含计算机的安装前状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-294">An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cf88-295">通过从注册表中移除事件日志信息来移除安装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-295">Removes an installation by removing event log information from the registry.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cf88-296">如果<xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A>属性值是`Remove`、<xref:System.Diagnostics.EventLogInstaller.Uninstall%2A>方法删除源和相关联的安装程序创建的日志<xref:System.Diagnostics.EventLogInstaller.Log%2A>和<xref:System.Diagnostics.EventLogInstaller.Source%2A>指定创建新的事件日志和源的属性。</span><span class="sxs-lookup"><span data-stu-id="8cf88-296">If the <xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A> property value is `Remove`, the <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> method deletes the source and the associated log that the installer created if the <xref:System.Diagnostics.EventLogInstaller.Log%2A> and <xref:System.Diagnostics.EventLogInstaller.Source%2A> properties specified the creation of a new event log and source.</span></span>  
  
 <span data-ttu-id="8cf88-297">通常情况下，不调用的方法<xref:System.Diagnostics.EventLogInstaller>从在代码中; 它们通常称为只能由[Installutil.exe （安装程序工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)中卸载模式。</span><span class="sxs-lookup"><span data-stu-id="8cf88-297">Typically, you do not call the methods of the <xref:System.Diagnostics.EventLogInstaller> from within your code; they are generally called only by the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) in uninstall mode.</span></span> <span data-ttu-id="8cf88-298">该工具将自动调用<xref:System.Diagnostics.EventLogInstaller.Uninstall%2A>方法使受其安装前的状态，安装的系统部件还原。</span><span class="sxs-lookup"><span data-stu-id="8cf88-298">The tool automatically calls the <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states.</span></span> <span data-ttu-id="8cf88-299">这包括删除事件日志正在卸载的注册表信息。</span><span class="sxs-lookup"><span data-stu-id="8cf88-299">This includes deleting registry information that is associated with the event log being uninstalled.</span></span>  
  
 <span data-ttu-id="8cf88-300">应用程序的卸载例程使用项目安装程序的<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>属性来自动维护有关已卸载的组件的信息。</span><span class="sxs-lookup"><span data-stu-id="8cf88-300">An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> property to automatically maintain information about the components that have already been uninstalled.</span></span> <span data-ttu-id="8cf88-301">传递到此状态信息<xref:System.Diagnostics.EventLogInstaller.Uninstall%2A>作为`savedState`工具卸载每个参数，将持续更新<xref:System.Diagnostics.EventLogInstaller>。</span><span class="sxs-lookup"><span data-stu-id="8cf88-301">This state information, which is passed to <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the tool uninstalls each <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="8cf88-302">通常情况下，不需要为你的代码来显式修改此状态信息。</span><span class="sxs-lookup"><span data-stu-id="8cf88-302">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cf88-303">获取或设置一个值，以指示 [Installutil.exe（安装程序工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)在卸载时应删除事件日志还是保留其安装状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-303">Gets or sets a value that indicates whether the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) should remove the event log or leave it in its installed state at uninstall time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cf88-304">
            <see cref="T:System.Configuration.Install.UninstallAction" /> 值之一，它指示在卸载 <see cref="T:System.Diagnostics.EventLog" /> 时将事件日志保留在何种状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-304">One of the <see cref="T:System.Configuration.Install.UninstallAction" /> values that indicates what state to leave the event log in when the <see cref="T:System.Diagnostics.EventLog" /> is uninstalled.</span>
          </span>
          <span data-ttu-id="8cf88-305">默认值为 <see langword="Remove" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-305">The default is <see langword="Remove" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cf88-306">安装事件日志，可以根据需要连接到现有的日志。</span><span class="sxs-lookup"><span data-stu-id="8cf88-306">When you install an event log, you can optionally connect it to an existing log.</span></span> <span data-ttu-id="8cf88-307">如果这样做，你必须决定是否日志应返回到其安装前的状态，还是应保持在其当前的安装后的状态。</span><span class="sxs-lookup"><span data-stu-id="8cf88-307">If you do so, you must decide whether the log should return to its pre-installation state, or remain in its current, post-installation state.</span></span> <span data-ttu-id="8cf88-308">如果您选择要返回到其安装前状态的事件日志，不会还原到在安装事件日志条目的更改。</span><span class="sxs-lookup"><span data-stu-id="8cf88-308">If you elect to return the event log to its pre-installation state, changes to the event log entries at installation are not restored.</span></span> <span data-ttu-id="8cf88-309">你可以重置与关联的事件日志属性<xref:System.Diagnostics.EventLogInstaller>到其安装前的值。</span><span class="sxs-lookup"><span data-stu-id="8cf88-309">You can reset only the event log properties that are associated with the <xref:System.Diagnostics.EventLogInstaller> to their pre-installation values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="8cf88-310">
            <see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" /> 包含无效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-310">
              <see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" /> contains an invalid value.</span>
          </span>
          <span data-ttu-id="8cf88-311">只有 <see langword="Remove" /> 和 <see langword="NoAction" /> 才是此属性的有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cf88-311">The only valid values for this property are <see langword="Remove" /> and <see langword="NoAction" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>