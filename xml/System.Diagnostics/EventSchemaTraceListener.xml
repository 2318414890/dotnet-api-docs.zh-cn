<Type Name="EventSchemaTraceListener" FullName="System.Diagnostics.EventSchemaTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="abdcf6aaf89cf211719c282b059b7c15b4d68ff5" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061162" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSchemaTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSchemaTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventSchemaTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSchemaTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSchemaTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="56359-101">将端对端事件的跟踪或调试输出定向到 XML 编码的符合架构的日志文件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="56359-101">Directs tracing or debugging output of end-to-end events to an XML-encoded, schema-compliant log file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-102"><xref:System.Diagnostics.EventSchemaTraceListener>类提供了端到端符合架构的事件的跟踪。</span><span class="sxs-lookup"><span data-stu-id="56359-102">The <xref:System.Diagnostics.EventSchemaTraceListener> class provides tracing of end-to-end schema-compliant events.</span></span> <span data-ttu-id="56359-103">你可用于跨线程的异类组件的系统的端到端跟踪<xref:System.AppDomain>，过程中和计算机边界。</span><span class="sxs-lookup"><span data-stu-id="56359-103">You can use end-to-end tracing for a system that has heterogeneous components that cross thread, <xref:System.AppDomain>, process, and computer boundaries.</span></span> <span data-ttu-id="56359-104">标准化的事件架构 (请参阅[事件使用者的事件表示](http://go.microsoft.com/fwlink/?LinkId=78955)) 被定义为跨这些边界启用跟踪。</span><span class="sxs-lookup"><span data-stu-id="56359-104">A standardized event schema (see [Event Representation for Event Consumers](http://go.microsoft.com/fwlink/?LinkId=78955)) has been defined to enable tracing across these boundaries.</span></span> <span data-ttu-id="56359-105">此外，该架构允许添加符合架构的自定义元素。</span><span class="sxs-lookup"><span data-stu-id="56359-105">The schema enables the addition of custom, schema-compliant elements.</span></span> <span data-ttu-id="56359-106">你可以使用[服务跟踪查看器工具 (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129)来显示事件数据。</span><span class="sxs-lookup"><span data-stu-id="56359-106">You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) to display the event data.</span></span>  
  
 <span data-ttu-id="56359-107"><xref:System.Diagnostics.EventSchemaTraceListener> 使用隐式支持无锁跟踪针对日志记录的性能优化。</span><span class="sxs-lookup"><span data-stu-id="56359-107"><xref:System.Diagnostics.EventSchemaTraceListener> is tuned for logging performance with implicit support for lock-free tracing.</span></span>  
  
 <span data-ttu-id="56359-108"><xref:System.Diagnostics.EventSchemaTraceListener>类将跟踪和调试信息的 XML 编码的文本流转换的转换。</span><span class="sxs-lookup"><span data-stu-id="56359-108">The <xref:System.Diagnostics.EventSchemaTraceListener> class converts tracing and debugging information into an XML-encoded text stream.</span></span> <span data-ttu-id="56359-109">本部分中后面的表中显示了 XML 输出的说明。</span><span class="sxs-lookup"><span data-stu-id="56359-109">The description of the XML output is shown in the tables later in this section.</span></span>  
  
 <span data-ttu-id="56359-110">你可以启用或禁用<xref:System.Diagnostics.EventSchemaTraceListener>通过应用程序配置文件中，对象，然后使用已配置<xref:System.Diagnostics.EventSchemaTraceListener>应用程序中的对象。</span><span class="sxs-lookup"><span data-stu-id="56359-110">You can enable or disable an <xref:System.Diagnostics.EventSchemaTraceListener> object through the application configuration file, and then use the configured <xref:System.Diagnostics.EventSchemaTraceListener> object in your application.</span></span> <span data-ttu-id="56359-111">或者，你可以创建<xref:System.Diagnostics.EventSchemaTraceListener>在代码中的对象。</span><span class="sxs-lookup"><span data-stu-id="56359-111">Alternately, you can create an <xref:System.Diagnostics.EventSchemaTraceListener> object in your code.</span></span> <span data-ttu-id="56359-112">我们建议你通过应用程序配置文件启用跟踪侦听器。</span><span class="sxs-lookup"><span data-stu-id="56359-112">We recommend that you enable trace listeners through the application configuration file.</span></span> <span data-ttu-id="56359-113">有关使用跟踪和调试配置文件的信息，请参阅[跟踪和调试设置架构](http://msdn.microsoft.com/library/277ca5f6-e1c4-41b6-a47f-3a67ce5b94ac)。</span><span class="sxs-lookup"><span data-stu-id="56359-113">For information about the use of configuration files for tracing and debugging, see [Trace and Debug Settings Schema](http://msdn.microsoft.com/library/277ca5f6-e1c4-41b6-a47f-3a67ce5b94ac).</span></span>  
  
 <span data-ttu-id="56359-114">若要配置<xref:System.Diagnostics.EventSchemaTraceListener>对象，修改配置文件对应于你的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="56359-114">To configure an <xref:System.Diagnostics.EventSchemaTraceListener> object, modify the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="56359-115">在此文件中，可以添加、 删除或设置侦听器的属性。</span><span class="sxs-lookup"><span data-stu-id="56359-115">In this file, you can add, remove, or set the properties for a listener.</span></span> <span data-ttu-id="56359-116">配置文件应格式如下：</span><span class="sxs-lookup"><span data-stu-id="56359-116">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sources>  
            <source name="TestSource" >  
                <listeners>  
                    <!--Remove the default trace listener for better performance.-->  
                    <remove name="Default"/>  
                    <!--Note: Removing the default trace listener prevents the dialog box   
                    from being displayed for Debug.Fail or Debug.Assert commands that are   
                    executed in user mode.-->  
                    <add name="eventListener"   
                      type="System.Diagnostics.EventSchemaTraceListener,  system.core"  
                      initializeData="TraceOutput.xml"   
                      traceOutputOptions="ProcessId, DateTime, Timestamp"   
                      bufferSize="65536"  
                      maximumFileSize="20480000"  
                      logRetentionOption="LimitedCircularFiles"  
                      maximumNumberOfFiles="2"/>  
                </listeners>  
            </source>  
        </sources>  
    </system.diagnostics>  
```  
  
 <span data-ttu-id="56359-117"><xref:System.Diagnostics.EventSchemaTraceListener>类继承<xref:System.Diagnostics.TraceListener.Filter%2A>从基类的属性<xref:System.Diagnostics.TraceListener>。</span><span class="sxs-lookup"><span data-stu-id="56359-117">The <xref:System.Diagnostics.EventSchemaTraceListener> class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.</span></span> <span data-ttu-id="56359-118"><xref:System.Diagnostics.TraceListener.Filter%2A>属性允许的额外级别的筛选在侦听器的跟踪输出。</span><span class="sxs-lookup"><span data-stu-id="56359-118">The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows for an additional level of trace output filtering at the listener.</span></span> <span data-ttu-id="56359-119">如果存在，筛选器，则`Trace`方法的跟踪侦听器调用<xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>筛选器来确定是否发出跟踪的方法。</span><span class="sxs-lookup"><span data-stu-id="56359-119">If a filter is present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.</span></span>  
  
 <span data-ttu-id="56359-120">如果尝试写入到的文件正在使用或不可用，GUID 后缀是自动添加到的文件名称。</span><span class="sxs-lookup"><span data-stu-id="56359-120">If an attempt is made to write to a file that is being used or is unavailable, a GUID suffix is automatically added to the file name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56359-121">侦听器方法旨在由方法的调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类。</span><span class="sxs-lookup"><span data-stu-id="56359-121">Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.</span></span> <span data-ttu-id="56359-122">请勿直接从应用程序代码中调用该侦听器方法。</span><span class="sxs-lookup"><span data-stu-id="56359-122">Do not call the listener methods directly from application code.</span></span> <span data-ttu-id="56359-123"><xref:System.Diagnostics.EventSchemaTraceListener>侦听器主要适用于使用<xref:System.Diagnostics.TraceSource>类。</span><span class="sxs-lookup"><span data-stu-id="56359-123">The <xref:System.Diagnostics.EventSchemaTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 <span data-ttu-id="56359-124">下表描述的元素和特性的 XML 输出。</span><span class="sxs-lookup"><span data-stu-id="56359-124">The following table describes the elements and attributes of the XML output.</span></span>  
  
|<span data-ttu-id="56359-125">元素</span><span class="sxs-lookup"><span data-stu-id="56359-125">Element</span></span>|<span data-ttu-id="56359-126">特性</span><span class="sxs-lookup"><span data-stu-id="56359-126">Attributes</span></span>|<span data-ttu-id="56359-127">输出</span><span class="sxs-lookup"><span data-stu-id="56359-127">Output</span></span>|<span data-ttu-id="56359-128">说明</span><span class="sxs-lookup"><span data-stu-id="56359-128">Notes</span></span>|  
|-------------|----------------|------------|-----------|  
|`CallStack`|<span data-ttu-id="56359-129">无</span><span class="sxs-lookup"><span data-stu-id="56359-129">None</span></span>|<span data-ttu-id="56359-130">取决于是否存在的<xref:System.Diagnostics.TraceOptions.Callstack>中标记出来<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="56359-130">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Callstack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="56359-131">特殊字符如 > 或 < 替换为转义序列。</span><span class="sxs-lookup"><span data-stu-id="56359-131">Special characters such as > or < are replaced with escape sequences.</span></span> <span data-ttu-id="56359-132">请参阅下一个表中的转义的字符转换表。</span><span class="sxs-lookup"><span data-stu-id="56359-132">See the escaped character translation table in the next table.</span></span>|  
|`Computer`|<span data-ttu-id="56359-133">无</span><span class="sxs-lookup"><span data-stu-id="56359-133">None</span></span>|<span data-ttu-id="56359-134">始终存在。</span><span class="sxs-lookup"><span data-stu-id="56359-134">Always present.</span></span>|<span data-ttu-id="56359-135">此元素表示的值<xref:System.Environment.MachineName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="56359-135">This element represents the value of the <xref:System.Environment.MachineName%2A> property.</span></span>|  
|`Correlation`|`ActivityID`|<span data-ttu-id="56359-136">始终存在。</span><span class="sxs-lookup"><span data-stu-id="56359-136">Always present.</span></span>|<span data-ttu-id="56359-137">如果`ActivityID`未指定，则默认值是一个空 GUID。</span><span class="sxs-lookup"><span data-stu-id="56359-137">If `ActivityID` is not specified, the default is an empty GUID.</span></span>|  
||`RelatedActivityID`|<span data-ttu-id="56359-138">取决于是否存在的`relatedActivityId`中的参数`Trace`方法调用。</span><span class="sxs-lookup"><span data-stu-id="56359-138">Depends on the presence of the `relatedActivityId` parameter in the `Trace` method call.</span></span>|<span data-ttu-id="56359-139">`RelatedActivityID`特性都对应于`relatedActivityId`参数<xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56359-139">The `RelatedActivityID` attribute corresponds to the `relatedActivityId` parameter of the <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> method.</span></span>|  
|`Data`|<span data-ttu-id="56359-140">无</span><span class="sxs-lookup"><span data-stu-id="56359-140">None</span></span>|<span data-ttu-id="56359-141">始终存在。</span><span class="sxs-lookup"><span data-stu-id="56359-141">Always present.</span></span>|<span data-ttu-id="56359-142">此元素表示参数输入 (`data`)。</span><span class="sxs-lookup"><span data-stu-id="56359-142">This element represents parameter input (`data`).</span></span> <span data-ttu-id="56359-143">每个数据对象提供一个元素。</span><span class="sxs-lookup"><span data-stu-id="56359-143">One element is provided for each data object.</span></span> <span data-ttu-id="56359-144">在事件日志的情况下`Data`元素包含转义的 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="56359-144">In the case of event logs, the `Data` element contains escaped XML data.</span></span> <span data-ttu-id="56359-145">对于数据日志，`Data`元素包含非转义的数据。</span><span class="sxs-lookup"><span data-stu-id="56359-145">In the case of data logs, the `Data` element contains unescaped data.</span></span> <span data-ttu-id="56359-146">数据日志输出使用`ToString`传入的数据对象的方法。</span><span class="sxs-lookup"><span data-stu-id="56359-146">The data log output uses the `ToString` method of the passed-in data objects.</span></span>|  
|`Event`|<span data-ttu-id="56359-147">无</span><span class="sxs-lookup"><span data-stu-id="56359-147">None</span></span>|<span data-ttu-id="56359-148">始终存在。</span><span class="sxs-lookup"><span data-stu-id="56359-148">Always present.</span></span>|<span data-ttu-id="56359-149">此元素包含一个跟踪事件。</span><span class="sxs-lookup"><span data-stu-id="56359-149">This element contains a trace event.</span></span>|  
|`EventData`|<span data-ttu-id="56359-150">无</span><span class="sxs-lookup"><span data-stu-id="56359-150">None</span></span>|<span data-ttu-id="56359-151">事件日志的存在。</span><span class="sxs-lookup"><span data-stu-id="56359-151">Present for event logs.</span></span>|<span data-ttu-id="56359-152">此元素表示参数输入 (`message`， `args`)。</span><span class="sxs-lookup"><span data-stu-id="56359-152">This element represents parameter input (`message`, `args`).</span></span> <span data-ttu-id="56359-153">它包含`Data`元素与通过调用创建的转义 XML 数据<xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56359-153">It contains `Data` elements with escaped XML data that is created by calling the <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> method.</span></span>|  
|`EventID`|<span data-ttu-id="56359-154">无</span><span class="sxs-lookup"><span data-stu-id="56359-154">None</span></span>|<span data-ttu-id="56359-155">始终存在。</span><span class="sxs-lookup"><span data-stu-id="56359-155">Always present.</span></span>|<span data-ttu-id="56359-156">此元素表示参数输入 (`id`)。</span><span class="sxs-lookup"><span data-stu-id="56359-156">This element represents parameter input (`id`).</span></span>|  
|`Execution`|`ProcessID`|<span data-ttu-id="56359-157">取决于是否存在的<xref:System.Diagnostics.TraceOptions.ProcessId>中标记出来<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="56359-157">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.ProcessId> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="56359-158">`ProcessID`中指定属性<xref:System.Diagnostics.TraceEventCache>。</span><span class="sxs-lookup"><span data-stu-id="56359-158">The `ProcessID` attribute is specified in the <xref:System.Diagnostics.TraceEventCache>.</span></span> <span data-ttu-id="56359-159">在 Microsoft Windows 98 和 Windows 千禧年 Edition 操作系统上，如果`ProcessID`大于 2147483647，它是负数正数表示形式，因此应转换若要获取正确的进程标识符。</span><span class="sxs-lookup"><span data-stu-id="56359-159">On the Microsoft Windows 98 and Windows Millenium Edition operating systems, if `ProcessID` is larger than 2,147,483,647, it is a positive representation of a negative number and should be converted to obtain the correct process identifier.</span></span>|  
||`ThreadID`|<span data-ttu-id="56359-160">当存在`ProcessID`存在。</span><span class="sxs-lookup"><span data-stu-id="56359-160">Present when `ProcessID` is present.</span></span>|<span data-ttu-id="56359-161">`ThreadID`中指定属性<xref:System.Diagnostics.TraceEventCache>。</span><span class="sxs-lookup"><span data-stu-id="56359-161">The `ThreadID` attribute is specified in the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Level`|<span data-ttu-id="56359-162">无</span><span class="sxs-lookup"><span data-stu-id="56359-162">None</span></span>|<span data-ttu-id="56359-163">始终存在。</span><span class="sxs-lookup"><span data-stu-id="56359-163">Always present.</span></span>|<span data-ttu-id="56359-164">此元素表示参数输入 (的数值`eventType`)。</span><span class="sxs-lookup"><span data-stu-id="56359-164">This element represents parameter input (the numeric value of `eventType`).</span></span> <span data-ttu-id="56359-165">大于 255 的参数值都表示为级别 8，输出<xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="56359-165">Parameter values that are larger than 255 are output as a level 8, which represents <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType>.</span></span> <span data-ttu-id="56359-166">跟踪事件类型<xref:System.Diagnostics.TraceEventType.Critical>， <xref:System.Diagnostics.TraceEventType.Error>， <xref:System.Diagnostics.TraceEventType.Warning>， <xref:System.Diagnostics.TraceEventType.Information>，和<xref:System.Diagnostics.TraceEventType.Verbose>分别作为级别 1、 2、 4、 8 和 10，为输出。</span><span class="sxs-lookup"><span data-stu-id="56359-166">Trace event types <xref:System.Diagnostics.TraceEventType.Critical>, <xref:System.Diagnostics.TraceEventType.Error>, <xref:System.Diagnostics.TraceEventType.Warning>, <xref:System.Diagnostics.TraceEventType.Information>, and <xref:System.Diagnostics.TraceEventType.Verbose> are output as levels 1, 2, 4, 8, and 10, respectively.</span></span>|  
|`LogicalOperationStack`|<span data-ttu-id="56359-167">无</span><span class="sxs-lookup"><span data-stu-id="56359-167">None</span></span>|<span data-ttu-id="56359-168">取决于是否存在的<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>中标记出来<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="56359-168">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="56359-169">只有一个逻辑操作可以存在。</span><span class="sxs-lookup"><span data-stu-id="56359-169">Only one logical operation can exist.</span></span> <span data-ttu-id="56359-170">因此，值编写为`LogicalOperation`下的子节点`LogicalOperationStack`元素。</span><span class="sxs-lookup"><span data-stu-id="56359-170">Therefore, the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.</span></span>|  
|`OpCode`|<span data-ttu-id="56359-171">无</span><span class="sxs-lookup"><span data-stu-id="56359-171">None</span></span>|<span data-ttu-id="56359-172">当存在`Level`大于 255。</span><span class="sxs-lookup"><span data-stu-id="56359-172">Present when `Level` is greater than 255.</span></span>|<span data-ttu-id="56359-173">此元素表示具有数字值大于 255 的跟踪的事件类型。</span><span class="sxs-lookup"><span data-stu-id="56359-173">This element represents Trace event types that have numeric values greater than 255.</span></span> <span data-ttu-id="56359-174"><xref:System.Diagnostics.TraceEventType.Start><xref:System.Diagnostics.TraceEventType.Stop>， <xref:System.Diagnostics.TraceEventType.Suspend>， <xref:System.Diagnostics.TraceEventType.Resume>，或<xref:System.Diagnostics.TraceEventType.Transfer>分别作为级别 1、 2、 4、 8 和 10，为输出。</span><span class="sxs-lookup"><span data-stu-id="56359-174"><xref:System.Diagnostics.TraceEventType.Start>, <xref:System.Diagnostics.TraceEventType.Stop>, <xref:System.Diagnostics.TraceEventType.Suspend>, <xref:System.Diagnostics.TraceEventType.Resume>, or <xref:System.Diagnostics.TraceEventType.Transfer> are output as levels 1, 2, 4, 8, and 10, respectively.</span></span>|  
|`Provider`|`GUID`|<span data-ttu-id="56359-175">始终存在。</span><span class="sxs-lookup"><span data-stu-id="56359-175">Always present.</span></span>|<span data-ttu-id="56359-176">始终为空。</span><span class="sxs-lookup"><span data-stu-id="56359-176">Always empty.</span></span>|  
|`RenderingInfo`|`Culture`|<span data-ttu-id="56359-177">始终存在。</span><span class="sxs-lookup"><span data-stu-id="56359-177">Always present.</span></span>|<span data-ttu-id="56359-178">该属性表示的事件类型的资源字符串。</span><span class="sxs-lookup"><span data-stu-id="56359-178">This attribute represents a resource string for the event type.</span></span> <span data-ttu-id="56359-179">它始终是"en EN\\"。</span><span class="sxs-lookup"><span data-stu-id="56359-179">It is always "en-EN\\".</span></span>|  
|`System`|`Name`|<span data-ttu-id="56359-180">始终存在。</span><span class="sxs-lookup"><span data-stu-id="56359-180">Always present.</span></span>||  
|`TimeCreated`|`SystemTime`|<span data-ttu-id="56359-181">取决于是否存在的<xref:System.Diagnostics.TraceOptions.DateTime>中标记出来<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="56359-181">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.DateTime> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="56359-182">时间是值<xref:System.Diagnostics.TraceEventCache.DateTime%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="56359-182">The time is the value of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="56359-183">此属性表示为协调世界时</span><span class="sxs-lookup"><span data-stu-id="56359-183">This property is expressed as Coordinated Universal Time</span></span>|  
|`TimeStamp`|<span data-ttu-id="56359-184">无</span><span class="sxs-lookup"><span data-stu-id="56359-184">None</span></span>|<span data-ttu-id="56359-185">取决于是否存在的<xref:System.Diagnostics.TraceOptions.Timestamp>中标记出来<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="56359-185">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Timestamp> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="56359-186">此元素中指定<xref:System.Diagnostics.TraceEventCache>。</span><span class="sxs-lookup"><span data-stu-id="56359-186">This element is specified in the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`UserData`|<span data-ttu-id="56359-187">无</span><span class="sxs-lookup"><span data-stu-id="56359-187">None</span></span>|<span data-ttu-id="56359-188">存在数据日志。</span><span class="sxs-lookup"><span data-stu-id="56359-188">Present for data logs.</span></span>|<span data-ttu-id="56359-189">此元素包含`Data`元素与非转义，提供用户数据从<xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56359-189">This element contains `Data` elements with unescaped, user-provided data from a <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> method.</span></span>|  
  
 <span data-ttu-id="56359-190">下表显示了 XML 输出中转义的字符。</span><span class="sxs-lookup"><span data-stu-id="56359-190">The following table shows the characters that are escaped in the XML output.</span></span> <span data-ttu-id="56359-191">转义发生中的所有元素和属性除外`UserData`元素，它包含用户提供，以未转义的数据。</span><span class="sxs-lookup"><span data-stu-id="56359-191">Escaping occurs in all the elements and attributes except for the `UserData` element, which contains user-provided, unescaped data.</span></span> <span data-ttu-id="56359-192">`UserData`元素是对的调用结果<xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56359-192">The `UserData` element is a result of calls to the <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> method.</span></span>  
  
|<span data-ttu-id="56359-193">转义字符</span><span class="sxs-lookup"><span data-stu-id="56359-193">Escaped character</span></span>|<span data-ttu-id="56359-194">“值”</span><span class="sxs-lookup"><span data-stu-id="56359-194">Value</span></span>|  
|-----------------------|-----------|  
|&|&amp;|  
|\<|&lt;|  
|>|&gt;|  
|<span data-ttu-id="56359-195">"</span><span class="sxs-lookup"><span data-stu-id="56359-195">"</span></span>|&quot;|  
|\|&apos;|  
|<span data-ttu-id="56359-196">0xD</span><span class="sxs-lookup"><span data-stu-id="56359-196">0xD</span></span>|<span data-ttu-id="56359-197">&\#xD;</span><span class="sxs-lookup"><span data-stu-id="56359-197">&\#xD;</span></span>|  
|<span data-ttu-id="56359-198">0xA</span><span class="sxs-lookup"><span data-stu-id="56359-198">0xA</span></span>|<span data-ttu-id="56359-199">&\#xA;</span><span class="sxs-lookup"><span data-stu-id="56359-199">&\#xA;</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="56359-200">下面的代码示例演示如何使用<xref:System.Diagnostics.EventSchemaTraceListener>类。</span><span class="sxs-lookup"><span data-stu-id="56359-200">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-cpp[System.Diagnostics.EventSchemaTraceListener#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/CPP/eventschematracelistener.cpp#1)]
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="56359-201">初始化 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-201">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="56359-202">日志文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-202">The path for the log file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-203">通过将指定文件用作调试和跟踪输出的接收方来初始化 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-203">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class, using the specified file as the recipient of debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-204">默认情况下，记录一个文件的不受限制的大小。</span><span class="sxs-lookup"><span data-stu-id="56359-204">By default, one file of unrestricted size is logged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56359-205">下面的代码示例演示如何使用<xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="56359-205">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%29?displayProperty=nameWithType> constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="56359-206">日志文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-206">The path for the log file.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="56359-207">侦听器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-207">The name of the listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-208">通过将指定文件用作调试和跟踪输出的接收方，来初始化具有指定名称的 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-208">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class with the specified name, using the specified file as the recipient of debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56359-209">下面的代码示例演示如何使用<xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="56359-209">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#2)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="56359-210">日志文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-210">The path for the log file.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="56359-211">侦听器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-211">The name of the listener.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="56359-212">输出缓冲区的大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-212">The size of the output buffer, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-213">通过将指定文件用作调试和跟踪输出的接收方，来初始化具有指定名称和指定缓冲区大小的 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-213">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class with the specified name and specified buffer size, using the specified file as the recipient of debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-214">出于性能考虑，`bufferSize`应是 1024 个字节的倍数。</span><span class="sxs-lookup"><span data-stu-id="56359-214">For performance considerations, `bufferSize` should be a multiple of 1024 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56359-215">下面的代码示例演示如何使用<xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="56359-215">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%29?displayProperty=nameWithType> constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#3)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize, valuetype System.Diagnostics.TraceLogRetentionOption logRetentionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer, logRetentionOption As TraceLogRetentionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize, System::Diagnostics::TraceLogRetentionOption logRetentionOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="56359-216">日志文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-216">The path for the log file.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="56359-217">侦听器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-217">The name of the listener.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="56359-218">输出缓冲区的大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-218">The size of the output buffer, in bytes.</span>
          </span>
        </param>
        <param name="logRetentionOption">
          <span data-ttu-id="56359-219">
            <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-219">One of the <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-220">通过将具有指定日志保留策略的指定文件用作调试和跟踪输出的接收方，来初始化具有指定名称和指定缓冲区大小的 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-220">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class with the specified name and specified buffer size, using the specified file with the specified log retention policy as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-221">出于性能考虑，`bufferSize`应是 1024 个字节的倍数。</span><span class="sxs-lookup"><span data-stu-id="56359-221">For performance considerations, `bufferSize` should be a multiple of 1024 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56359-222">下面的代码示例演示如何使用<xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="56359-222">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%29?displayProperty=nameWithType> constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#4)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption, long maximumFileSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize, valuetype System.Diagnostics.TraceLogRetentionOption logRetentionOption, int64 maximumFileSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer, logRetentionOption As TraceLogRetentionOption, maximumFileSize As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize, System::Diagnostics::TraceLogRetentionOption logRetentionOption, long maximumFileSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" />
        <Parameter Name="maximumFileSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="56359-223">日志文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-223">The path for the log file.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="56359-224">侦听器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-224">The name of the listener.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="56359-225">输出缓冲区的大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-225">The size of the output buffer, in bytes.</span>
          </span>
        </param>
        <param name="logRetentionOption">
          <span data-ttu-id="56359-226">
            <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-226">One of the <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> values.</span>
          </span>
        </param>
        <param name="maximumFileSize">
          <span data-ttu-id="56359-227">最大文件大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-227">The maximum file size, in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-228">通过将具有指定日志保留策略和最大大小的指定文件用作调试和跟踪输出的接收方，来初始化具有指定名称和缓冲区大小的 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-228">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class with the specified name and specified buffer size, using the specified file with the specified log retention policy and maximum size as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-229">出于性能考虑，`bufferSize`和`maximumFileSize`应为 1024 个字节的倍数。</span><span class="sxs-lookup"><span data-stu-id="56359-229">For performance considerations, `bufferSize` and `maximumFileSize` should be multiples of 1024 bytes.</span></span> <span data-ttu-id="56359-230">`maximumFileSize` 不是绝对值，它是一个阈值，它可能会超过直到达到最后一条消息的大小。</span><span class="sxs-lookup"><span data-stu-id="56359-230">`maximumFileSize` is not an absolute value, it is a threshold which can be exceeded up to the size of the last message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56359-231">下面的代码示例演示如何使用<xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%2CSystem.Int64%29?displayProperty=nameWithType>构造函数。</span><span class="sxs-lookup"><span data-stu-id="56359-231">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.Diagnostics.TraceLogRetentionOption%2CSystem.Int64%29?displayProperty=nameWithType> constructor.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener.Ctors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/CS/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener.Ctors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener.Ctors/VB/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="56359-232">
            <paramref name="maximumFileSize" /> 为负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-232">
              <paramref name="maximumFileSize" /> is a negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSchemaTraceListener (string fileName, string name, int bufferSize, System.Diagnostics.TraceLogRetentionOption logRetentionOption, long maximumFileSize, int maximumNumberOfFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string name, int32 bufferSize, valuetype System.Diagnostics.TraceLogRetentionOption logRetentionOption, int64 maximumFileSize, int32 maximumNumberOfFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, name As String, bufferSize As Integer, logRetentionOption As TraceLogRetentionOption, maximumFileSize As Long, maximumNumberOfFiles As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSchemaTraceListener(System::String ^ fileName, System::String ^ name, int bufferSize, System::Diagnostics::TraceLogRetentionOption logRetentionOption, long maximumFileSize, int maximumNumberOfFiles);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="logRetentionOption" Type="System.Diagnostics.TraceLogRetentionOption" />
        <Parameter Name="maximumFileSize" Type="System.Int64" />
        <Parameter Name="maximumNumberOfFiles" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="56359-233">日志文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-233">The path for the log file.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="56359-234">侦听器名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-234">The name of the listener.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="56359-235">输出缓冲区的大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-235">The size of the output buffer, in bytes.</span>
          </span>
        </param>
        <param name="logRetentionOption">
          <span data-ttu-id="56359-236">
            <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-236">One of the <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> values.</span>
          </span>
        </param>
        <param name="maximumFileSize">
          <span data-ttu-id="56359-237">最大文件大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-237">The maximum file size, in bytes.</span>
          </span>
        </param>
        <param name="maximumNumberOfFiles">
          <span data-ttu-id="56359-238">输出日志文件的最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-238">The maximum number of output log files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-239">通过将具有指定日志保留策略、最大大小和文件计数的指定文件用作调试和跟踪输出的接收方，来初始化具有指定名称和指定缓冲区大小的 <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-239">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSchemaTraceListener" /> class with the specified name and specified buffer size, using the specified file with the specified log retention policy, maximum size, and file count as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-240">出于性能考虑，`bufferSize`和`maximumFileSize`应为 1024 个字节的倍数。</span><span class="sxs-lookup"><span data-stu-id="56359-240">For performance considerations, `bufferSize` and `maximumFileSize` should be multiples of 1024 bytes.</span></span> <span data-ttu-id="56359-241">`maximumFileSize` 不是绝对值的数值;它是可以直到达到最后一条消息的大小超过了阈值。</span><span class="sxs-lookup"><span data-stu-id="56359-241">`maximumFileSize` is not an absolute value; it is a threshold that can be exceeded up to the size of the last message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56359-242">下面的代码示例演示如何使用<xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="56359-242">The following code example demonstrates how to use the <xref:System.Diagnostics.EventSchemaTraceListener.%23ctor%2A> constructor.</span></span> <span data-ttu-id="56359-243">此代码示例是一个更大的示例为提供的一部分<xref:System.Diagnostics.EventSchemaTraceListener>类。</span><span class="sxs-lookup"><span data-stu-id="56359-243">This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#2)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="56359-244">
            <paramref name="maximumNumberOfFiles" /> 小于 2，<paramref name="logRetentionOption" /> 为 <see cref="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-244">
              <paramref name="maximumNumberOfFiles" /> is less than 2, and <paramref name="logRetentionOption" /> is <see cref="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public int BufferSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BufferSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56359-245">获取输出缓冲区的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-245">Gets the size of the output buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56359-246">输出缓冲区的大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-246">The size of the output buffer, in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-247">通过设置属性值`bufferSize`构造函数中的参数。</span><span class="sxs-lookup"><span data-stu-id="56359-247">The property value is set by the `bufferSize` parameter in the constructor.</span></span> <span data-ttu-id="56359-248">出于性能原因，缓冲区大小应设置为 1024 字节的倍数。</span><span class="sxs-lookup"><span data-stu-id="56359-248">For performance reasons, the buffer size should be set to a multiple of 1024 bytes.</span></span> <span data-ttu-id="56359-249">我们建议 32 * 1024 字节的默认大小或 64\*1024 个字节，以获得最佳性能。</span><span class="sxs-lookup"><span data-stu-id="56359-249">We recommend either the default size of 32*1024 bytes or 64\*1024 bytes for best performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56359-250">下面的代码示例演示如何显示的值<xref:System.Diagnostics.EventSchemaTraceListener.BufferSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="56359-250">The following code example demonstrates how to display the value of the <xref:System.Diagnostics.EventSchemaTraceListener.BufferSize%2A> property.</span></span> <span data-ttu-id="56359-251">此代码示例是一个更大的示例为提供的一部分<xref:System.Diagnostics.EventSchemaTraceListener>类。</span><span class="sxs-lookup"><span data-stu-id="56359-251">This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#5)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56359-252">关闭该侦听器的日志文件，以使其不再接收跟踪或调试输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-252">Closes the log file for this listener so that it no longer receives tracing or debugging output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="56359-253">要写入的基本错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-253">The basic error message to write.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="56359-254">要追加到基本错误消息中的详细错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-254">The detailed error message to append to the basic error message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-255">将包含基本错误消息和详细错误消息的错误信息写入日志文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-255">Writes error information, including a basic error message and a detailed error message, to the log file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56359-256">导致缓冲数据写入该侦听器的日志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-256">Causes buffered data to be written to the log for this listener.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56359-257">获取跟踪侦听器支持的自定义 XML 配置特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-257">Gets the custom XML configuration attributes that the trace listener supports.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56359-258">一个 <see cref="T:System.String" /> 数组，其中包含此侦听器可识别的 XML 配置特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-258">A <see cref="T:System.String" /> array that contains the XML configuration attributes recognized by this listener.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-259">可以在 XML 配置文件中使用此方法返回的自定义属性来控制的实例的行为的<xref:System.Diagnostics.EventSchemaTraceListener>类。</span><span class="sxs-lookup"><span data-stu-id="56359-259">The custom attributes that are returned by this method can be used in the XML configuration file to control the behavior of an instance of the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span> <span data-ttu-id="56359-260">使用任何其他属性会导致配置异常。</span><span class="sxs-lookup"><span data-stu-id="56359-260">Using any other attribute causes a configuration exception.</span></span> <span data-ttu-id="56359-261"><xref:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes%2A>方法<xref:System.Diagnostics.EventSchemaTraceListener>数组值返回以下字符串:"bufferSize"，"logRetentionOption"，"maximumFileSize"和"maximumNumberOfFiles"。</span><span class="sxs-lookup"><span data-stu-id="56359-261">The <xref:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes%2A> method for the <xref:System.Diagnostics.EventSchemaTraceListener> returns the following string array values: "bufferSize", "logRetentionOption", "maximumFileSize", and "maximumNumberOfFiles".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public override bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsThreadSafe { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56359-262">获取一个值，该值指示跟踪侦听器是否是线程安全的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-262">Gets a value indicating whether the trace listener is thread safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56359-263">始终返回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-263">Always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56359-264">下面的代码示例演示如何显示的值<xref:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="56359-264">The following code example demonstrates how to display the value of the <xref:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe%2A> property.</span></span> <span data-ttu-id="56359-265">此代码示例是一个更大的示例为提供的一部分<xref:System.Diagnostics.EventSchemaTraceListener>类。</span><span class="sxs-lookup"><span data-stu-id="56359-265">This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#4)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumFileSize">
      <MemberSignature Language="C#" Value="public long MaximumFileSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumFileSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumFileSize { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56359-266">获取日志文件的最大大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-266">Gets the maximum size of the log file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56359-267">最大文件大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-267">The maximum file size, in bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-268">通过设置属性值`maximumFileSize`构造函数中的参数或`maximumFileSize`配置文件中的属性。</span><span class="sxs-lookup"><span data-stu-id="56359-268">The property value is set by the `maximumFileSize` parameter in the constructor or the `maximumFileSize` attribute in the configuration file.</span></span> <span data-ttu-id="56359-269">出于性能原因，你应设置为 1024 字节的倍数的最大文件大小。</span><span class="sxs-lookup"><span data-stu-id="56359-269">For performance reasons, you should set the maximum file size to a multiple of 1024 bytes.</span></span> <span data-ttu-id="56359-270"><xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A>属性值不是绝对; 它是可以直到达到最后一条消息的大小超过了阈值。</span><span class="sxs-lookup"><span data-stu-id="56359-270">The <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> property value is not an absolute; it is a threshold that can be exceeded up to the size of the last message.</span></span>  
  
 <span data-ttu-id="56359-271">下表显示可能的值与默认值文件大小与每个跟踪日志保留选项相关联。</span><span class="sxs-lookup"><span data-stu-id="56359-271">The following table shows the possible and default values for file size that are associated with each trace log retention option.</span></span> <span data-ttu-id="56359-272">这些值标记为不适用，则指示<xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A>属性不会检查该<xref:System.Diagnostics.TraceLogRetentionOption>值。</span><span class="sxs-lookup"><span data-stu-id="56359-272">The values marked as N/A indicate that the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> property is not checked for that <xref:System.Diagnostics.TraceLogRetentionOption> value.</span></span>  
  
|<span data-ttu-id="56359-273">TraceLogRetentionOption</span><span class="sxs-lookup"><span data-stu-id="56359-273">TraceLogRetentionOption</span></span>|<span data-ttu-id="56359-274">最大文件大小</span><span class="sxs-lookup"><span data-stu-id="56359-274">Maximum file size</span></span>|<span data-ttu-id="56359-275">默认文件大小</span><span class="sxs-lookup"><span data-stu-id="56359-275">Default file size</span></span>|  
|-----------------------------|-----------------------|-----------------------|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles>|<span data-ttu-id="56359-276">不可用</span><span class="sxs-lookup"><span data-stu-id="56359-276">N/A</span></span>|<span data-ttu-id="56359-277">-1</span><span class="sxs-lookup"><span data-stu-id="56359-277">-1</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles>|<span data-ttu-id="56359-278">>0</span><span class="sxs-lookup"><span data-stu-id="56359-278">>0</span></span>|<span data-ttu-id="56359-279">4 KB</span><span class="sxs-lookup"><span data-stu-id="56359-279">4 KB</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize>|<span data-ttu-id="56359-280">>0</span><span class="sxs-lookup"><span data-stu-id="56359-280">>0</span></span>|<span data-ttu-id="56359-281">4 KB</span><span class="sxs-lookup"><span data-stu-id="56359-281">4 KB</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize>|<span data-ttu-id="56359-282">>0</span><span class="sxs-lookup"><span data-stu-id="56359-282">>0</span></span>|<span data-ttu-id="56359-283">4 KB</span><span class="sxs-lookup"><span data-stu-id="56359-283">4 KB</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles>|<span data-ttu-id="56359-284">>0</span><span class="sxs-lookup"><span data-stu-id="56359-284">>0</span></span>|<span data-ttu-id="56359-285">4 KB</span><span class="sxs-lookup"><span data-stu-id="56359-285">4 KB</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="56359-286">下面的代码示例演示如何显示的值<xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="56359-286">The following code example demonstrates how to display the value of the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A> property.</span></span> <span data-ttu-id="56359-287">此代码示例是一个更大的示例为提供的一部分<xref:System.Diagnostics.EventSchemaTraceListener>类。</span><span class="sxs-lookup"><span data-stu-id="56359-287">This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#6)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumNumberOfFiles">
      <MemberSignature Language="C#" Value="public int MaximumNumberOfFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumNumberOfFiles" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumNumberOfFiles As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumNumberOfFiles { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56359-288">获取日志文件最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-288">Gets the maximum number of log files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56359-289">日志文件最大数是由文件的 <see cref="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" /> 属性的值来确定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-289">The maximum number of log files, determined by the value of the <see cref="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" /> property for the file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-290">通过设置属性值`maximumNumberOfFiles`构造函数中的参数或`maximumNumberOfFiles`配置文件中的属性。</span><span class="sxs-lookup"><span data-stu-id="56359-290">The property value is set by the `maximumNumberOfFiles` parameter in the constructor or the `maximumNumberOfFiles` attribute in the configuration file.</span></span>  
  
 <span data-ttu-id="56359-291">下表显示对于文件大小和文件计数与每个跟踪日志保留选项相关联的可能和默认值。</span><span class="sxs-lookup"><span data-stu-id="56359-291">The following table shows the possible and default values for file size and file count that are associated with each trace log retention option.</span></span> <span data-ttu-id="56359-292">这些值标记为不适用，则指示<xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A>属性不会检查该<xref:System.Diagnostics.TraceLogRetentionOption>值。</span><span class="sxs-lookup"><span data-stu-id="56359-292">The values marked as N/A indicate that the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A> property is not checked for that <xref:System.Diagnostics.TraceLogRetentionOption> value.</span></span>  
  
|<span data-ttu-id="56359-293">TraceLogRetentionOption</span><span class="sxs-lookup"><span data-stu-id="56359-293">TraceLogRetentionOption</span></span>|<span data-ttu-id="56359-294">最大文件数</span><span class="sxs-lookup"><span data-stu-id="56359-294">Maximum number of files</span></span>|<span data-ttu-id="56359-295">文件默认数量</span><span class="sxs-lookup"><span data-stu-id="56359-295">Default number of files</span></span>|  
|-----------------------------|-----------------------------|-----------------------------|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles>|<span data-ttu-id="56359-296">不可用</span><span class="sxs-lookup"><span data-stu-id="56359-296">N/A</span></span>|<span data-ttu-id="56359-297">1</span><span class="sxs-lookup"><span data-stu-id="56359-297">1</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles>|<span data-ttu-id="56359-298">不可用</span><span class="sxs-lookup"><span data-stu-id="56359-298">N/A</span></span>|<span data-ttu-id="56359-299">1</span><span class="sxs-lookup"><span data-stu-id="56359-299">1</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize>|<span data-ttu-id="56359-300">不可用</span><span class="sxs-lookup"><span data-stu-id="56359-300">N/A</span></span>|<span data-ttu-id="56359-301">-1</span><span class="sxs-lookup"><span data-stu-id="56359-301">-1</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize>|<span data-ttu-id="56359-302">>0</span><span class="sxs-lookup"><span data-stu-id="56359-302">>0</span></span>|<span data-ttu-id="56359-303">1</span><span class="sxs-lookup"><span data-stu-id="56359-303">1</span></span>|  
|<xref:System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles>|<span data-ttu-id="56359-304">>1</span><span class="sxs-lookup"><span data-stu-id="56359-304">>1</span></span>|<span data-ttu-id="56359-305">2</span><span class="sxs-lookup"><span data-stu-id="56359-305">2</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="56359-306">下面的代码示例演示如何显示的值<xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="56359-306">The following code example demonstrates how to display the value of the <xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A> property.</span></span> <span data-ttu-id="56359-307">此代码示例是一个更大的示例为提供的一部分<xref:System.Diagnostics.EventSchemaTraceListener>类。</span><span class="sxs-lookup"><span data-stu-id="56359-307">This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#7)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="56359-308">将跟踪数据写入日志文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-308">Writes trace data to the log file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="56359-309">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-309">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="56359-310">源名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-310">The source name.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="56359-311">
            <see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-311">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="56359-312">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-312">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="56359-313">要发出的数据对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-313">A data object to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-314">将跟踪信息、单个数据对象和事件信息写入日志文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-314">Writes trace information, a single data object, and event information to the log file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-315">`eventCache`， `source`， `eventType`，和`id`页眉和页脚的跟踪中使用参数。</span><span class="sxs-lookup"><span data-stu-id="56359-315">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="56359-316">`id`参数转换为无符号整数，它写入之前。</span><span class="sxs-lookup"><span data-stu-id="56359-316">The `id` parameter is converted to an unsigned integer before it is written.</span></span> <span data-ttu-id="56359-317">因此，一个负数`id`作为较大的正整数写入值。</span><span class="sxs-lookup"><span data-stu-id="56359-317">Therefore, a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="56359-318">`data`参数写作`Data`中的节点`UserData`元素。</span><span class="sxs-lookup"><span data-stu-id="56359-318">The `data` parameter is written as a `Data` node in the `UserData` element.</span></span> <span data-ttu-id="56359-319">`ToString`数据对象方法用于将对象转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="56359-319">The `ToString` method of the data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="56359-320">此方法不应直接由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="56359-320">This method is not intended to be called directly by application code.</span></span> <span data-ttu-id="56359-321">方法的调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="56359-321">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="56359-322">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-322">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="56359-323">源名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-323">The source name.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="56359-324">
            <see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-324">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="56359-325">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-325">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="56359-326">要发出的数据对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-326">An array of data objects to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-327">将跟踪信息、多个数据对象和事件信息写入日志文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-327">Writes trace information, multiple data objects, and event information to the log file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-328">`eventCache`， `source`， `eventType`，和`id`页眉和页脚的跟踪中使用参数。</span><span class="sxs-lookup"><span data-stu-id="56359-328">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="56359-329">`id`参数转换为无符号整数，它写入之前。</span><span class="sxs-lookup"><span data-stu-id="56359-329">The `id` parameter is converted to an unsigned integer before it is written.</span></span> <span data-ttu-id="56359-330">因此，一个负数`id`作为较大的正整数写入值。</span><span class="sxs-lookup"><span data-stu-id="56359-330">Therefore, a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="56359-331">中的对象`data`参数数组都被编写为`Data`中的节点`UserData`元素。</span><span class="sxs-lookup"><span data-stu-id="56359-331">The objects in the `data` parameter array are written as `Data` nodes in the `UserData` element.</span></span> <span data-ttu-id="56359-332">`ToString`的每个数据对象的方法用于将对象转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="56359-332">The `ToString` method of each data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="56359-333">此方法不应直接由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="56359-333">This method is not intended to be called directly by application code.</span></span> <span data-ttu-id="56359-334">方法的调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="56359-334">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="56359-335">将事件跟踪信息写入日志文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-335">Writes event trace information to the log file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="56359-336">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-336">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="56359-337">源名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-337">The source name.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="56359-338">
            <see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-338">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="56359-339">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-339">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="56359-340">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-340">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-341">将跟踪信息、消息和事件信息写入日志文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-341">Writes trace information, a message, and event information to the log file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-342">`eventCache`， `source`， `eventType`，和`id`页眉和页脚的跟踪中使用参数。</span><span class="sxs-lookup"><span data-stu-id="56359-342">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="56359-343">`id`参数转换为无符号整数，它写入之前。</span><span class="sxs-lookup"><span data-stu-id="56359-343">The `id` parameter is converted to an unsigned integer before it is written.</span></span> <span data-ttu-id="56359-344">因此，一个负数`id`作为较大的正整数写入值。</span><span class="sxs-lookup"><span data-stu-id="56359-344">Therefore, a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="56359-345">`message`参数写作`Data`中的节点`EventData`元素。</span><span class="sxs-lookup"><span data-stu-id="56359-345">The `message` parameter is written as a `Data` node in the `EventData` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="56359-346">此方法不应直接由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="56359-346">This method is not intended to be called directly by application code.</span></span> <span data-ttu-id="56359-347">方法的调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="56359-347">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="56359-348">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-348">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="56359-349">源名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-349">The source name.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="56359-350">
            <see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-350">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="56359-351">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-351">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="56359-352">包含零个或多个格式项的格式字符串，这些项与 <c>args</c> 数组中的对象相对应。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-352">A format string that contains zero or more format items that correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="56359-353">一个对象数组，其中包含零个或多个要设置格式的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-353">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-354">将跟踪信息、格式化消息和事件信息写入日志文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-354">Writes trace information, a formatted message, and event information to the log file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-355">`eventCache`， `source`， `eventType`，和`id`页眉和页脚的跟踪中使用参数。</span><span class="sxs-lookup"><span data-stu-id="56359-355">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="56359-356">`id`参数转换为无符号整数，它写入之前。</span><span class="sxs-lookup"><span data-stu-id="56359-356">The `id` parameter is converted to an unsigned integer before it is written.</span></span> <span data-ttu-id="56359-357">因此，一个负数`id`作为较大的正整数写入值。</span><span class="sxs-lookup"><span data-stu-id="56359-357">Therefore, a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="56359-358"><xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>调用方法和`format`字符串和`args`数组作为参数传递。</span><span class="sxs-lookup"><span data-stu-id="56359-358">The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called and the `format` string and `args` array are passed in as parameters.</span></span> <span data-ttu-id="56359-359">此方法设置的格式`args`对象数组并将写入格式化的数组作为`Data`中的节点`EventData`元素。</span><span class="sxs-lookup"><span data-stu-id="56359-359">This method formats the `args` object array and writes the formatted array as the `Data` node in the `EventData` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="56359-360">此方法不应直接由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="56359-360">This method is not intended to be called directly by application code.</span></span> <span data-ttu-id="56359-361">方法的调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="56359-361">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceLogRetentionOption">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceLogRetentionOption TraceLogRetentionOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.TraceLogRetentionOption TraceLogRetentionOption" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceLogRetentionOption As TraceLogRetentionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceLogRetentionOption TraceLogRetentionOption { System::Diagnostics::TraceLogRetentionOption get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceLogRetentionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56359-362">获取该文件的跟踪日志保留选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-362">Gets the trace log retention option for the file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56359-363">
            <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-363">One of the <see cref="T:System.Diagnostics.TraceLogRetentionOption" /> values.</span>
          </span>
          <span data-ttu-id="56359-364">默认值为 <see cref="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-364">The default is <see cref="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56359-365">下面的代码示例演示如何显示的值<xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="56359-365">The following code example demonstrates how to display the value of the <xref:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption%2A> property.</span></span> <span data-ttu-id="56359-366">此代码示例是一个更大的示例为提供的一部分<xref:System.Diagnostics.EventSchemaTraceListener>类。</span><span class="sxs-lookup"><span data-stu-id="56359-366">This code example is part of a larger example that is provided for the <xref:System.Diagnostics.EventSchemaTraceListener> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#9)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="56359-367">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-367">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="56359-368">源名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-368">The source name.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="56359-369">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-369">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="56359-370">要写入的跟踪消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-370">A trace message to write.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="56359-371">标识相关活动的 <see cref="T:System.Guid" /> 结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-371">A <see cref="T:System.Guid" /> structure that identifies a related activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-372">将跟踪信息（包括相关活动的标识）、消息和事件信息写入日志文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-372">Writes trace information, including the identity of a related activity, a message, and event information, to the log file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-373"><xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A>方法用于关联相关的跟踪。</span><span class="sxs-lookup"><span data-stu-id="56359-373">The <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> method is used to correlate related traces.</span></span> <span data-ttu-id="56359-374">`eventCache`， `source`， `id`，和`relatedActivityId`页眉和页脚的跟踪中使用参数。</span><span class="sxs-lookup"><span data-stu-id="56359-374">The `eventCache`, `source`, `id`, and `relatedActivityId` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="56359-375">`id`参数转换为无符号整数，它写入之前。</span><span class="sxs-lookup"><span data-stu-id="56359-375">The `id` parameter is converted to an unsigned integer before it is written.</span></span> <span data-ttu-id="56359-376">因此，一个负数`id`作为较大的正整数写入值。</span><span class="sxs-lookup"><span data-stu-id="56359-376">Therefore, a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="56359-377">`message`参数写作`Data`元素。</span><span class="sxs-lookup"><span data-stu-id="56359-377">The `message` parameter is written as the `Data` element.</span></span> <span data-ttu-id="56359-378"><xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType>调用方法来转换`relatedActivityId`值为"B"格式字符串，它显示在标头。</span><span class="sxs-lookup"><span data-stu-id="56359-378">The <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> method is called to convert the `relatedActivityId` value to a "B" formatted string, which appears in the header.</span></span> <span data-ttu-id="56359-379">`Opcode`页脚中的元素标识与跟踪事件类型<xref:System.Diagnostics.TraceEventType.Transfer>。</span><span class="sxs-lookup"><span data-stu-id="56359-379">The `Opcode` element in the footer identifies the trace event type as a <xref:System.Diagnostics.TraceEventType.Transfer>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="56359-380"><xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A>不应由应用程序代码调用方法。</span><span class="sxs-lookup"><span data-stu-id="56359-380">The <xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A> method should not be called by application code.</span></span> <span data-ttu-id="56359-381">它旨在供<xref:System.Diagnostics.TraceSource>对象发出的跟踪信息其<xref:System.Diagnostics.TraceSource.TraceTransfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56359-381">It is intended to be used by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="56359-382">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-382">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-383">将消息写入日志文件，且不提供任何其他上下文信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-383">Writes a message to the log file without providing any additional context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-384"><xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A>调用方法来将消息记录为<xref:System.Diagnostics.TraceEventType.Information>事件。</span><span class="sxs-lookup"><span data-stu-id="56359-384">The <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> method is called to log the message as an <xref:System.Diagnostics.TraceEventType.Information> event.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="56359-385">此方法不应直接由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="56359-385">This method is not intended to be called directly by application code.</span></span> <span data-ttu-id="56359-386">方法的调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="56359-386">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="56359-387">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-387">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56359-388">将后跟当前行终止符的消息写入日志文件，且不提供任何其他上下文信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-388">Writes a message followed by the current line terminator to the log file without providing any additional context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-389"><xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A>调用方法来将消息记录为<xref:System.Diagnostics.TraceEventType.Information>事件。</span><span class="sxs-lookup"><span data-stu-id="56359-389">The <xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A> method is called to log the message as an <xref:System.Diagnostics.TraceEventType.Information> event.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="56359-390">此方法不应直接由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="56359-390">This method is not intended to be called directly by application code.</span></span> <span data-ttu-id="56359-391">方法的调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="56359-391">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Writer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSchemaTraceListener.Writer" />
      <MemberSignature Language="VB.NET" Value="Public Property Writer As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Writer { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56359-392">获取或设置写入日志文件的基础文本编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-392">Gets or sets the underlying text writer that writes to the log file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56359-393">
            <see cref="T:System.IO.TextWriter" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-393">A <see cref="T:System.IO.TextWriter" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56359-394">尝试使用 set 访问器<xref:System.Diagnostics.EventSchemaTraceListener.Writer%2A>属性引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="56359-394">An attempt to use the set accessor for the <xref:System.Diagnostics.EventSchemaTraceListener.Writer%2A> property raises a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="56359-395">尝试向 <see cref="P:System.Diagnostics.EventSchemaTraceListener.Writer" /> 属性分配值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="56359-395">An attempt was made to assign a value to the <see cref="P:System.Diagnostics.EventSchemaTraceListener.Writer" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>