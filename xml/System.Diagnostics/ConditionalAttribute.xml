<Type Name="ConditionalAttribute" FullName="System.Diagnostics.ConditionalAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81f6a270fe659ce8724aaa882a4ba2dbdfb14f48" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConditionalAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ConditionalAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConditionalAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConditionalAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="abdee-101">Indicates to compilers that a method call or attribute should be ignored unless a specified conditional compilation symbol is defined.</span>
      <span class="sxs-lookup">
        <span data-stu-id="abdee-101">Indicates to compilers that a method call or attribute should be ignored unless a specified conditional compilation symbol is defined.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdee-102">你可以将应用<xref:System.Diagnostics.ConditionalAttribute>归于方法和类。</span><span class="sxs-lookup"><span data-stu-id="abdee-102">You can apply the <xref:System.Diagnostics.ConditionalAttribute> attribute to methods and classes.</span></span> <span data-ttu-id="abdee-103">但是，在类上的其使用方式均仅为派生自的类型无效<xref:System.Attribute>。</span><span class="sxs-lookup"><span data-stu-id="abdee-103">However, its use on classes is valid only for types that are derived from <xref:System.Attribute>.</span></span> <span data-ttu-id="abdee-104"><xref:System.Diagnostics.ConditionalAttribute> 将被忽略，或者将生成编译器警告或错误消息当应用于任何其他类型。</span><span class="sxs-lookup"><span data-stu-id="abdee-104"><xref:System.Diagnostics.ConditionalAttribute> either will be ignored or will produce a compiler warning or error message if you apply it to any other type.</span></span>  
  
 <span data-ttu-id="abdee-105">应用<xref:System.Diagnostics.ConditionalAttribute>到方法指示编译器将对方法的调用应不编译为 Microsoft 中间语言 (MSIL) 的条件编译符号，除非关联<xref:System.Diagnostics.ConditionalAttribute>定义。</span><span class="sxs-lookup"><span data-stu-id="abdee-105">Applying <xref:System.Diagnostics.ConditionalAttribute> to a method indicates to compilers that a call to the method should not be compiled into Microsoft intermediate language (MSIL) unless the conditional compilation symbol that is associated with <xref:System.Diagnostics.ConditionalAttribute> is defined.</span></span> <span data-ttu-id="abdee-106">如果您将此特性应用于不返回 void 的方法，则将在 Visual Studio 中收到编译错误。</span><span class="sxs-lookup"><span data-stu-id="abdee-106">You will get a compilation error in Visual Studio if you apply this attribute to a method that does not return void.</span></span> <span data-ttu-id="abdee-107">应用<xref:System.Diagnostics.ConditionalAttribute>成属性指示，除非已定义条件编译符号后，不应属性到元数据中发出。</span><span class="sxs-lookup"><span data-stu-id="abdee-107">Applying <xref:System.Diagnostics.ConditionalAttribute> to an attribute indicates that the attribute should not be emitted to metadata unless the conditional compilation symbol is defined.</span></span> <span data-ttu-id="abdee-108">任何自变量传递给方法或属性仍然编译器通过检查类型。</span><span class="sxs-lookup"><span data-stu-id="abdee-108">Any arguments passed to the method or attribute are still type-checked by the compiler.</span></span>  
  
 <span data-ttu-id="abdee-109">可以使用以下方法来定义条件编译符号：</span><span class="sxs-lookup"><span data-stu-id="abdee-109">You can use the following techniques to define conditional compilation symbols:</span></span>  
  
-   <span data-ttu-id="abdee-110">使用编译器命令行选项;例如， **/ 定义： 调试**。</span><span class="sxs-lookup"><span data-stu-id="abdee-110">Use compiler command-line options; for example, **/define:DEBUG**.</span></span>  
  
-   <span data-ttu-id="abdee-111">使用操作系统 shell 中; 中的环境变量例如，**将调试设置 = 1**。</span><span class="sxs-lookup"><span data-stu-id="abdee-111">Use environment variables in the operating system shell; for example, **set DEBUG=1**.</span></span>  
  
-   <span data-ttu-id="abdee-112">在源代码中使用杂注；例如，定义编译变量，如下所示：</span><span class="sxs-lookup"><span data-stu-id="abdee-112">Use pragmas in the source code; for example, define the compilation variable as follows:</span></span>  
  
    ```csharp  
    #define DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=True  
    ```  
  
     <span data-ttu-id="abdee-113">若要取消定义变量，请使用下列内容：</span><span class="sxs-lookup"><span data-stu-id="abdee-113">To undefine the variable, use the following:</span></span>  
  
    ```csharp  
    #undef DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=False  
    ```  
  
 <span data-ttu-id="abdee-114">允许符合公共语言规范 (CLS) 的编译器忽略<xref:System.Diagnostics.ConditionalAttribute>。</span><span class="sxs-lookup"><span data-stu-id="abdee-114">Compilers that comply with the Common Language Specification (CLS) are permitted to ignore <xref:System.Diagnostics.ConditionalAttribute>.</span></span> <span data-ttu-id="abdee-115">C#、Visual Basic 和 C++ 编译器支持 <xref:System.Diagnostics.ConditionalAttribute>；JScript 编译器不支持此特性。</span><span class="sxs-lookup"><span data-stu-id="abdee-115">The C#, Visual Basic, and C++ compilers support <xref:System.Diagnostics.ConditionalAttribute>; the JScript compiler does not support the attribute.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abdee-116">在 Visual Basic 中，`AddressOf` 运算符不受此特性的影响。</span><span class="sxs-lookup"><span data-stu-id="abdee-116">In Visual Basic, the `AddressOf` operator is not affected by this attribute.</span></span> <span data-ttu-id="abdee-117">例如，`Call CType(AddressOf delegate, Action)` 始终调用 `delegate`，但 `Call delegate()` 不会执行此操作。</span><span class="sxs-lookup"><span data-stu-id="abdee-117">For example, `Call CType(AddressOf delegate, Action)` always invokes `delegate`, although `Call delegate()` might not.</span></span>  
  
 <span data-ttu-id="abdee-118"><xref:System.Diagnostics.ConditionalAttribute> 应用于中定义的方法<xref:System.Diagnostics.Debug>和<xref:System.Diagnostics.Trace>类。</span><span class="sxs-lookup"><span data-stu-id="abdee-118"><xref:System.Diagnostics.ConditionalAttribute> is applied to the methods that are defined in the <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes.</span></span>  
  
 <span data-ttu-id="abdee-119">有关如何使用属性的详细信息，请参阅[属性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="abdee-119">For more information about how to use attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abdee-120">以下示例演示了 <xref:System.Diagnostics.ConditionalAttribute> 的用法。</span><span class="sxs-lookup"><span data-stu-id="abdee-120">The following example demonstrates the use of <xref:System.Diagnostics.ConditionalAttribute>.</span></span> <span data-ttu-id="abdee-121">该示例假定该条件被定义使用**/ 定义**编译器选项。</span><span class="sxs-lookup"><span data-stu-id="abdee-121">The example assumes that the condition is defined with the **/define** compiler option.</span></span> <span data-ttu-id="abdee-122">你可以通过更改编译器选项来获取不同的结果。</span><span class="sxs-lookup"><span data-stu-id="abdee-122">You can obtain different results by changing the compiler option.</span></span> <span data-ttu-id="abdee-123">你可以选择通过使用代码示例中的杂注而不是将这些杂注标识为编译器选项来定义条件。</span><span class="sxs-lookup"><span data-stu-id="abdee-123">You can optionally define the conditions by using pragmas in the sample code instead of identifying them as compiler options.</span></span>  
  
 [!code-csharp[ConditionalAttributeSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#7)]
 [!code-vb[ConditionalAttributeSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalAttribute (string conditionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string conditionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalAttribute(System::String ^ conditionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionString">
          <span data-ttu-id="abdee-124">A string that specifies the case-sensitive conditional compilation symbol that is associated with the attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abdee-124">A string that specifies the case-sensitive conditional compilation symbol that is associated with the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="abdee-125">Initializes a new instance of the <see cref="T:System.Diagnostics.ConditionalAttribute" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abdee-125">Initializes a new instance of the <see cref="T:System.Diagnostics.ConditionalAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="abdee-126">下面的示例演示如何使用<xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="abdee-126">The following example demonstrates how to use the <xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A> constructor.</span></span> <span data-ttu-id="abdee-127">此示例摘自更大的示例为提供<xref:System.Diagnostics.ConditionalAttribute>类。</span><span class="sxs-lookup"><span data-stu-id="abdee-127">This example is part of a larger example provided for the <xref:System.Diagnostics.ConditionalAttribute> class.</span></span>  
  
 [!code-csharp[ConditionalAttributeSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#8)]
 [!code-vb[ConditionalAttributeSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionString">
      <MemberSignature Language="C#" Value="public string ConditionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConditionString" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConditionString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="abdee-128">Gets the conditional compilation symbol that is associated with the <see cref="T:System.Diagnostics.ConditionalAttribute" /> attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="abdee-128">Gets the conditional compilation symbol that is associated with the <see cref="T:System.Diagnostics.ConditionalAttribute" /> attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="abdee-129">一个字符串，指定与关联的区分大小写的条件编译符号<see cref="T:System.Diagnostics.ConditionalAttribute" />属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="abdee-129">A string that specifies the case-sensitive conditional compilation symbol that is associated with the <see cref="T:System.Diagnostics.ConditionalAttribute" /> attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abdee-130">此属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="abdee-130">This property is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>