<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventSourceCreationData.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cc5fb64c08e7407b6912a57b42da416cf47201c6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc5fb64c08e7407b6912a57b42da416cf47201c6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>Represents the configuration settings used to create an event log source on the local computer or a remote computer.</source>
          <target state="translated">表示用于在本地或远程计算机上创建事件日志源的配置设置。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph> class to configure a new source for writing localized entries to an event log.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph>用于配置新的源向事件日志写入本地化的项类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>It is not necessary to use this class to read from an event log.</source>
          <target state="translated">不需要使用此类从事件日志进行读取。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>This class defines the configuration settings for a new event source and its associated event log.</source>
          <target state="translated">此类定义一个新的事件源和其关联的事件日志的配置设置。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>The associated event log can be on the local computer or a remote computer.</source>
          <target state="translated">相关联的事件日志可以位于本地计算机或远程计算机上。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>To create a new source for a new or existing event log on the local computer, set the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.Source%2A&gt;</ph> properties of an <ph id="ph3">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph> and call the <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要在本地计算机上创建新的源的新的或现有的事件日志，设置<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.Source%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph>并调用<ph id="ph4">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>This method creates the event source you specify in the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.Source%2A&gt;</ph> property and registers it for the event log specified in <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph>.</source>
          <target state="translated">此方法创建在指定的事件源<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.Source%2A&gt;</ph>它为事件日志中指定的属性和寄存器<ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>This behavior is similar to using the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> class to register an event source for an event log.</source>
          <target state="translated">此行为是类似于使用<ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>类，以注册事件日志的事件源。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> methods to write events to an event log.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>方法来向事件日志写入事件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</source>
          <target state="translated">必须指定事件源写入事件;你必须创建并在编写与源的第一个条目之前，配置事件源。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>Create the new event source during the installation of your application.</source>
          <target state="translated">在你的应用程序的安装过程中创建新的事件源。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configurations.</source>
          <target state="translated">这样，可以为操作系统来刷新其已注册的事件源的列表和它们的配置的时间。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
          <target state="translated">如果操作系统未刷新其事件源的列表，并尝试写入新的源的事件写入操作将失败。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
          <target state="translated">你可以配置新的源使用<ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>，或使用<ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>You must have administrative rights on the computer to create a new event source.</source>
          <target state="translated">若要创建新的事件源的计算机上，必须具有管理权限。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>You can create an event source for an existing event log or a new event log.</source>
          <target state="translated">你可以创建现有的事件日志或新的事件日志的事件源。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</source>
          <target state="translated">在创建新的源的新的事件日志时，系统将为该日志，此源注册，但之前向其中写入的第一个条目，将不会创建日志。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</source>
          <target state="translated">每个源可以仅写入一个事件日志一次;但是，你的应用程序可以使用多个源写入多个事件日志。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>For example, your application might need multiple sources configured for different event logs or different resource files.</source>
          <target state="translated">例如，你的应用程序可能需要为不同的事件日志或不同的资源文件配置的多个源。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</source>
          <target state="translated">若要更改现有源的配置详细信息，必须删除源，然后使用新的配置创建。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</source>
          <target state="translated">如果其他应用程序或组件使用的现有源，请使用更新的配置，而无需删除现有的源创建新的源。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>You can register the event source with localized resources for your event category and message strings.</source>
          <target state="translated">你可以先使用本地化的资源注册事件源，为你的事件类别和消息字符串。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>Your application can write event log entries using resource identifiers, rather than specifying the actual string.</source>
          <target state="translated">你的应用程序可以写入事件日志项使用资源标识符，而不指定实际的字符串。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</source>
          <target state="translated">事件查看器使用的资源标识符来查找并显示基于当前语言设置的本地化的资源文件中的相应字符串。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</source>
          <target state="translated">你可以注册一个单独的文件的事件类别、 消息和参数插入字符串，或者也可以注册为所有三种类型的字符串的相同资源文件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A&gt;</ph> properties to configure the source to write localized entries to the event log.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A&gt;</ph>属性来配置要向事件日志写入本地化的条目的源。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>If your application writes string values directly to the event log, you do not need to set these properties.</source>
          <target state="translated">如果你的应用程序将直接写入事件日志的字符串值，你不需要设置这些属性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
          <target state="translated">要写入本地化的项还是要直接写入字符串，则必须配置源。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method writes the given string directly to the event log; it does not use a localizable message resource file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>方法直接写入事件日志将写入给定的字符串; 它不使用可本地化的消息资源文件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write events using a localized message resource file.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>方法来写入事件时使用本地化的消息资源文件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
          <target state="translated">如果你的应用程序将使用资源标识符和字符串值的条目，则必须注册两个单独的源。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
          <target state="translated">例如，使用资源文件，配置一个源，然后使用在该源<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>方法来编写使用到事件日志的资源标识符的条目。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>Then create a different source without resource files and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
          <target state="translated">创建不同的源，而无需资源文件，然后使用在该源<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>方法使用该源的事件日志中直接写入字符串。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>The following code example sets the configuration properties for an event source from command-line arguments.</source>
          <target state="translated">下面的代码示例通过命令行参数设置事件源的配置属性。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>The input arguments specify the event source name, event log name, computer name, and event message resource file.</source>
          <target state="translated">输入自变量指定事件源名称、 事件日志名称、 计算机名和事件消息资源文件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>The code example verifies that the source does not conflict with an existing event source, and then creates the new event source for the specified event log.</source>
          <target state="translated">下面的代码示例需要验证，事件源不冲突与现有的事件源，然后，指定的事件日志的新事件源。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>for calling any member of <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph> with full trust.</source>
          <target state="translated">调用的任何成员<ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph>以完全信任。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.EventSourceCreationData">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>The name to register with the event log as a source of entries.</source>
          <target state="translated">要在事件日志中注册为项源的名称。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>The name of the log to which entries from the source are written.</source>
          <target state="translated">要将来自源的项写入其中的日志的名称。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph> class with a specified event source and event log name.</source>
          <target state="translated">使用指定的事件源和事件日志名称对 <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph> 类的新实例进行初始化。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>To write entries to an event log, you must first create an event source for the event log.</source>
          <target state="translated">若要将条目写入到事件日志，必须首先创建事件日志的事件源。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>To register a new source, initialize an <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph> instance, configure the instance properties for your application, and call the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要注册一个新的源，初始化<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph>实例时，配置你的应用程序，并调用的实例属性<ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>After the source is registered, you can write entries from the source using the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> methods.</source>
          <target state="translated">注册源之后，可以将条目写入从源使用<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>You can register the event source with localized resources for your event category and message strings.</source>
          <target state="translated">你可以先使用本地化的资源注册事件源，为你的事件类别和消息字符串。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>Your application can write event log entries using resource identifiers, rather than specifying the actual string.</source>
          <target state="translated">你的应用程序可以写入事件日志项使用资源标识符，而不指定实际的字符串。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</source>
          <target state="translated">事件查看器使用的资源标识符来查找并显示基于当前语言设置的本地化的资源文件中的相应字符串。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</source>
          <target state="translated">你可以注册一个单独的文件的事件类别、 消息和参数插入字符串，或者也可以注册为所有三种类型的字符串的相同资源文件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A&gt;</ph> properties to configure the source to write localized entries to the event log.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A&gt;</ph>属性来配置要向事件日志写入本地化的条目的源。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>If your application writes string values directly to the event log, you do not need to set these properties.</source>
          <target state="translated">如果你的应用程序将直接写入事件日志的字符串值，你不需要设置这些属性。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
          <target state="translated">要写入本地化的项还是要直接写入字符串，则必须配置源。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
          <target state="translated">如果你的应用程序将使用资源标识符和字符串值的条目，则必须注册两个单独的源。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
          <target state="translated">例如，使用资源文件，配置一个源，然后使用在该源<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>方法来编写使用到事件日志的资源标识符的条目。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>Then create a different source without resource files and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log.</source>
          <target state="translated">创建不同的源，而无需资源文件，然后使用在该源<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>方法将字符串直接写入事件日志。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>The following table shows initial property values for an <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph>.</source>
          <target state="translated">下表显示的初始属性值<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>Initial Value</source>
          <target state="translated">初始值</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">`source`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`source`</ph> 参数。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">`logName`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">`logName`</ph> 参数。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>The local computer (".").</source>
          <target state="translated">本地计算机 ("。")。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>Zero</source>
          <target state="translated">零</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source><ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">`null`</ph>（在 Visual Basic 中为 <ph id="ph2">`Nothing`</ph>）。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source><ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">`null`</ph>（在 Visual Basic 中为 <ph id="ph2">`Nothing`</ph>）。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source><ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">`null`</ph>（在 Visual Basic 中为 <ph id="ph2">`Nothing`</ph>）。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>The following code example determines whether the event source named <ph id="ph1">`SampleApplicationSource`</ph> is registered on the local computer.</source>
          <target state="translated">下面的代码示例确定是否将名为事件源<ph id="ph1">`SampleApplicationSource`</ph>已在本地计算机上注册。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</source>
          <target state="translated">如果事件源不存在，该示例设置源的消息资源文件，并创建新的事件源。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>Finally, the code example sets the localized display name for the event log, using the resource identifier value in <ph id="ph1">`DisplayNameMsgId`</ph> and the resource file path in <ph id="ph2">`messageFile`</ph>.</source>
          <target state="translated">最后，代码示例设置使用中的资源标识符值的事件日志的本地化的显示名称<ph id="ph1">`DisplayNameMsgId`</ph>和中的资源文件路径<ph id="ph2">`messageFile`</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</source>
          <target state="translated">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>A message text file is the source from which the message resource file is created.</source>
          <target state="translated">消息文本文件是从其创建的消息资源文件的源。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</source>
          <target state="translated">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>for calling any member of <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph> with full trust.</source>
          <target state="translated">调用的任何成员<ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph>以完全信任。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>Gets or sets the number of categories in the category resource file.</source>
          <target state="translated">获取或设置类别资源文件中类别的数目。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>The number of categories in the category resource file.</source>
          <target state="translated">类别资源文件中的类别的数目。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>The default value is zero.</source>
          <target state="translated">默认值为 0。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A&gt;</ph> properties to write events with localized category strings.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A&gt;</ph>属性来写入事件时使用本地化的类别字符串。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>The Event Viewer displays the category for an event entry if you supply a category when you write the event.</source>
          <target state="translated">如果你在写入该事件时提供一种类别，事件查看器将显示事件项的类别。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>Event log categories are application-defined strings that help filter events, or provide further information on the event.</source>
          <target state="translated">事件日志类别是应用程序定义的字符串，用于帮助筛选事件或事件上提供进一步的信息。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>For example, your application can define separate categories for different components or different operations.</source>
          <target state="translated">例如，你的应用程序可以定义为不同的组件或不同的操作分隔不同类别。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>Event categories are optional; if your application does not use categories, do not set the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A&gt;</ph> properties.</source>
          <target state="translated">事件类别是可选的;如果你的应用程序不使用类别，则不要设置<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com</ph><ept id="p1">](http://msdn.microsoft.com/)</ept>.</source>
          <target state="translated">有关如何定义事件消息和生成事件资源文件的详细信息，请参阅处平台 SDK 文档中的"消息编译器"主题<bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com</ph> <ept id="p1">](http://msdn.microsoft.com/)</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>The following code example determines whether the event source named <ph id="ph1">`SampleApplicationSource`</ph> is registered on the local computer.</source>
          <target state="translated">下面的代码示例确定是否将名为事件源<ph id="ph1">`SampleApplicationSource`</ph>已在本地计算机上注册。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</source>
          <target state="translated">如果事件源不存在，该示例设置源的消息资源文件，并创建新的事件源。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>Finally, the code example sets the localized display name for the event log, using the resource identifier value in <ph id="ph1">`DisplayNameMsgId`</ph> and the resource file path in <ph id="ph2">`messageFile`</ph>.</source>
          <target state="translated">最后，代码示例设置使用中的资源标识符值的事件日志的本地化的显示名称<ph id="ph1">`DisplayNameMsgId`</ph>和中的资源文件路径<ph id="ph2">`messageFile`</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</source>
          <target state="translated">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>A message text file is the source from which the message resource file is created.</source>
          <target state="translated">消息文本文件是从其创建的消息资源文件的源。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</source>
          <target state="translated">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>The property is set to a negative value or to a value larger than <ph id="ph1">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated">该属性设置为负值或大于 <ph id="ph1">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>for calling any member of <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph> with full trust.</source>
          <target state="translated">调用的任何成员<ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph>以完全信任。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>Gets or sets the path of the resource file that contains category strings for the source.</source>
          <target state="translated">获取或设置包含源的类别字符串的资源文件的路径。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>The path of the category resource file.</source>
          <target state="translated">类别资源文件的路径。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>The default is an empty string ("").</source>
          <target state="translated">默认值为空字符串("")。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A&gt;</ph> properties to write events with localized category strings.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A&gt;</ph>属性来写入事件时使用本地化的类别字符串。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>The Event Viewer displays the category for an event entry if you supply a category when you write the event.</source>
          <target state="translated">如果你在写入该事件时提供一种类别，事件查看器将显示事件项的类别。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>Event log categories are application-defined strings that help filter events, or provide further information on the event.</source>
          <target state="translated">事件日志类别是应用程序定义的字符串，用于帮助筛选事件或事件上提供进一步的信息。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>For example, your application can define separate categories for different components or different operations.</source>
          <target state="translated">例如，你的应用程序可以定义为不同的组件或不同的操作分隔不同类别。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>Event categories are optional; if your application does not use categories, do not set the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A&gt;</ph> properties.</source>
          <target state="translated">事件类别是可选的;如果你的应用程序不使用类别，则不要设置<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com</ph><ept id="p1">](http://msdn.microsoft.com/)</ept>.</source>
          <target state="translated">有关如何定义事件消息和生成事件资源文件的详细信息，请参阅处平台 SDK 文档中的"消息编译器"主题<bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com</ph> <ept id="p1">](http://msdn.microsoft.com/)</ept>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>The following code example determines whether the event source named <ph id="ph1">`SampleApplicationSource`</ph> is registered on the local computer.</source>
          <target state="translated">下面的代码示例确定是否将名为事件源<ph id="ph1">`SampleApplicationSource`</ph>已在本地计算机上注册。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</source>
          <target state="translated">如果事件源不存在，该示例设置源的消息资源文件，并创建新的事件源。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>Finally, the code example sets the localized display name for the event log, using the resource identifier value in <ph id="ph1">`DisplayNameMsgId`</ph> and the resource file path in <ph id="ph2">`messageFile`</ph>.</source>
          <target state="translated">最后，代码示例设置使用中的资源标识符值的事件日志的本地化的显示名称<ph id="ph1">`DisplayNameMsgId`</ph>和中的资源文件路径<ph id="ph2">`messageFile`</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</source>
          <target state="translated">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>A message text file is the source from which the message resource file is created.</source>
          <target state="translated">消息文本文件是从其创建的消息资源文件的源。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</source>
          <target state="translated">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>for calling any member of <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph> with full trust.</source>
          <target state="translated">调用的任何成员<ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph>以完全信任。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>Gets or sets the name of the event log to which the source writes entries.</source>
          <target state="translated">获取或设置事件日志的名称，事件源要向该日志写入项。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>The name of the event log.</source>
          <target state="translated">事件日志的名称。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>This can be Application, System, or a custom log name.</source>
          <target state="translated">这可以是 Application、System 或一个自定义的日志名称。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>The default value is "Application."</source>
          <target state="translated">默认值为“Application”。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph> property to identify the event log that your application writes entries to using the new source.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph>属性来标识你的应用程序使用新的源写入条目的事件日志。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>The event log can be a new log or an existing log.</source>
          <target state="translated">事件日志可以是新的日志或现有的日志。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>Applications and services should write to the Application log or a custom log.</source>
          <target state="translated">应用程序和服务应写入应用程序日志或自定义日志。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>Device drivers should write to the System log.</source>
          <target state="translated">设备驱动程序应写入系统日志。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>If you do not explicitly set the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph> property, the event log defaults to the Application log.</source>
          <target state="translated">如果未显式设置<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph>属性，默认为应用程序日志的事件日志。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>The Security log is read-only.</source>
          <target state="translated">安全日志是只读的。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>To target an existing log for the new source, set the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph> property to the existing event log name.</source>
          <target state="translated">若要针对新的来源的现有的日志，设置<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph>到现有的事件日志名称的属性。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>To create a new event log for the source, you must set the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph> property.</source>
          <target state="translated">若要创建新的事件日志源，必须设置<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>Event log names must consist of printable characters, and cannot include the characters '*', '?', or '<ph id="ph1">\\</ph>'.</source>
          <target state="translated">事件日志名称必须由可打印字符组成，且不得包含字符“*”、“?”或“<ph id="ph1">\\</ph>”。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>The first 8 characters of the event log name must be different from the first 8 characters of existing names of event logs on the specified computer.</source>
          <target state="translated">事件日志名称的前 8 个字符必须是不同于现有指定的计算机上的事件日志名称的前 8 个字符。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>The operating system stores event logs as files.</source>
          <target state="translated">操作系统将事件日志存储为文件。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>When you use <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> or the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>或<ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph>方法来创建新的事件日志，关联的文件存储在指定的计算机上的 %SystemRoot%\System32\Config 目录中。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>The file name is set by appending the first 8 characters of the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph> property with the ".evt" file name extension.</source>
          <target state="translated">通过追加的前 8 个字符设置的文件名称<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph>".evt"文件扩展名的属性。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>The following code example sets the configuration properties for an event source from command-line arguments.</source>
          <target state="translated">下面的代码示例通过命令行参数设置事件源的配置属性。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>The input arguments specify the event source name, event log name, computer name, and event message resource file.</source>
          <target state="translated">输入自变量指定事件源名称、 事件日志名称、 计算机名和事件消息资源文件。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph> class.</source>
          <target state="translated">此示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>for calling any member of <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph> with full trust.</source>
          <target state="translated">调用的任何成员<ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph>以完全信任。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.LogName">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSourceCreationData.MachineName">
          <source>Gets or sets the name of the computer on which to register the event source.</source>
          <target state="translated">获取或设置在其上注册事件源的计算机的名称。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MachineName">
          <source>The name of the system on which to register the event source.</source>
          <target state="translated">在其上注册事件源的系统的名称。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MachineName">
          <source>The default is the local computer (".").</source>
          <target state="translated">默认为本地计算机 (".")。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MachineName">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.MachineName%2A&gt;</ph> value cannot be an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.MachineName%2A&gt;</ph>值不能为空字符串。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MachineName">
          <source>If the machine name is not explicitly set, it defaults to the local computer (".").</source>
          <target state="translated">如果未显式设置的计算机名称，则默认为本地计算机 ("。")。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MachineName">
          <source>When registering a source on a remote computer, you must have administrative rights on that computer to write the registry values with sufficient permissions.</source>
          <target state="translated">注册时的远程计算机上的源，你必须编写使用具有足够权限的注册表值该计算机上具有管理权限。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MachineName">
          <source>The following code example sets the configuration properties for an event source from command-line arguments.</source>
          <target state="translated">下面的代码示例通过命令行参数设置事件源的配置属性。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MachineName">
          <source>The input arguments specify the event source name, event log name, computer name, and event message resource file.</source>
          <target state="translated">输入自变量指定事件源名称、 事件日志名称、 计算机名和事件消息资源文件。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MachineName">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph> class.</source>
          <target state="translated">此示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSourceCreationData.MachineName">
          <source>The computer name is invalid.</source>
          <target state="translated">计算机名称无效。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MachineName">
          <source>for calling any member of <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph> with full trust.</source>
          <target state="translated">调用的任何成员<ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph>以完全信任。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MachineName">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>Gets or sets the path of the message resource file that contains message formatting strings for the source.</source>
          <target state="translated">获取或设置消息资源文件的路径，该文件包含源的消息格式字符串。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>The path of the message resource file.</source>
          <target state="translated">消息资源文件的路径。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>The default is an empty string ("").</source>
          <target state="translated">默认值为空字符串("")。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph> property to configure an event log source to write localized event messages.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph>属性配置事件日志源写入本地化的事件消息。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>Event messages are application-defined strings that describe the event to the user.</source>
          <target state="translated">事件消息是应用程序定义的字符串，描述向用户事件。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>Your application can write event log entries using resource identifiers.</source>
          <target state="translated">你的应用程序可以编写使用资源标识符的事件日志条目。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>A resource identifier indexes a message located in the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph>.</source>
          <target state="translated">资源标识符的消息中编制索引<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>The Event Viewer uses the resource identifier to find and display the corresponding string from the localized message resource file based on current language settings.</source>
          <target state="translated">事件查看器使用的资源标识符来查找并显示基于当前语言设置的本地化的消息资源文件中的相应字符串。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>The event source must be configured either for writing localized entries or for writing direct strings.</source>
          <target state="translated">要写入本地化的项还是要直接写入字符串，则必须配置事件源。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write localized entries for a source configured with a message resource file.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>方法写入本地化的项配置了消息资源文件的源。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>If your application writes event message strings directly, rather than using a resource identifier in a localized resource file, do not set the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph> property.</source>
          <target state="translated">如果你的应用程序写入事件消息字符串直接，而不是在本地化的资源文件中，使用的资源标识符未设置<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com</ph><ept id="p1">](http://msdn.microsoft.com/)</ept>.</source>
          <target state="translated">有关如何定义事件消息和生成事件资源文件的详细信息，请参阅处平台 SDK 文档中的"消息编译器"主题<bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com</ph> <ept id="p1">](http://msdn.microsoft.com/)</ept>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>The following code example determines whether the event source named <ph id="ph1">`SampleApplicationSource`</ph> is registered on the local computer.</source>
          <target state="translated">下面的代码示例确定是否将名为事件源<ph id="ph1">`SampleApplicationSource`</ph>已在本地计算机上注册。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</source>
          <target state="translated">如果事件源不存在，该示例设置源的消息资源文件，并创建新的事件源。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>Finally, the code example sets the localized display name for the event log, using the resource identifier value in <ph id="ph1">`DisplayNameMsgId`</ph> and the resource file path in <ph id="ph2">`messageFile`</ph>.</source>
          <target state="translated">最后，代码示例设置使用中的资源标识符值的事件日志的本地化的显示名称<ph id="ph1">`DisplayNameMsgId`</ph>和中的资源文件路径<ph id="ph2">`messageFile`</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</source>
          <target state="translated">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>A message text file is the source from which the message resource file is created.</source>
          <target state="translated">消息文本文件是从其创建的消息资源文件的源。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</source>
          <target state="translated">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>for calling any member of <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph> with full trust.</source>
          <target state="translated">调用的任何成员<ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph>以完全信任。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>Gets or sets the path of the resource file that contains message parameter strings for the source.</source>
          <target state="translated">获取或设置资源文件的路径，该文件包含源的消息参数字符串。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>The path of the parameter resource file.</source>
          <target state="translated">参数资源文件的路径。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>The default is an empty string ("").</source>
          <target state="translated">默认值为空字符串("")。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A&gt;</ph> property to configure an event log source to write localized event messages with inserted parameter strings.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A&gt;</ph>属性可以配置将与本地化的事件消息写入事件日志源插入参数字符串。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>Each localized event message specified in the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph> property can contain placeholders for insertion strings.</source>
          <target state="translated">中指定每个本地化的事件消息<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph>属性可以包含插入字符串的占位符。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>These placeholders are used to specify the position and resource identifier for a language-independent string within the event message.</source>
          <target state="translated">这些占位符用于指定的位置和事件消息中的独立于语言的字符串的资源标识符。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>The Event Viewer fills in the placeholders using the corresponding strings from the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A&gt;</ph> and formats the event log message for the localized event entry.</source>
          <target state="translated">事件查看器在使用中的相应字符串的占位符填充<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A&gt;</ph>和格式本地化的事件项的事件日志消息。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>For example, the following section of a message text file defines a string with a parameter placeholder:</source>
          <target state="translated">例如，以下部分的消息文本文件定义的参数占位符的字符串：</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>Within the parameter resource file, the insertion string must be defined with the resource identifier that corresponds to the placeholder, as shown below:</source>
          <target state="translated">在参数资源文件中，插入字符串必须使用定义的资源标识符，对应于占位符，如下所示：</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>The event source must be configured either for writing localized entries or for writing direct strings.</source>
          <target state="translated">要写入本地化的项还是要直接写入字符串，则必须配置事件源。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write localized entries for a source configured with a message resource file.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>方法写入本地化的项配置了消息资源文件的源。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>If your application writes event message strings directly to the event log, or if your <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph> property does not contain messages with parameter insertion placeholders, do not set the <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A&gt;</ph> property.</source>
          <target state="translated">如果你的应用程序将事件消息字符串直接写入事件日志中，或者你<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph>属性不包含用参数插入占位符的消息时，未设置<ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com</ph><ept id="p1">](http://msdn.microsoft.com/)</ept>.</source>
          <target state="translated">有关如何定义事件消息和生成事件资源文件的详细信息，请参阅处平台 SDK 文档中的"消息编译器"主题<bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com</ph> <ept id="p1">](http://msdn.microsoft.com/)</ept>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>The following code example determines whether the event source named <ph id="ph1">`SampleApplicationSource`</ph> is registered on the local computer.</source>
          <target state="translated">下面的代码示例确定是否将名为事件源<ph id="ph1">`SampleApplicationSource`</ph>已在本地计算机上注册。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</source>
          <target state="translated">如果事件源不存在，该示例设置源的消息资源文件，并创建新的事件源。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>Finally, the code example sets the localized display name for the event log, using the resource identifier value in <ph id="ph1">`DisplayNameMsgId`</ph> and the resource file path in <ph id="ph2">`messageFile`</ph>.</source>
          <target state="translated">最后，代码示例设置使用中的资源标识符值的事件日志的本地化的显示名称<ph id="ph1">`DisplayNameMsgId`</ph>和中的资源文件路径<ph id="ph2">`messageFile`</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</source>
          <target state="translated">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>A message text file is the source from which the message resource file is created.</source>
          <target state="translated">消息文本文件是从其创建的消息资源文件的源。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</source>
          <target state="translated">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>Specifically, the message defined for resource identifier 1004 uses a placeholder for a parameter string defined for resource identifier 5002.</source>
          <target state="translated">具体而言，为资源标识符 1004年定义消息将使用占位符，对于为资源标识符 5002 定义的参数字符串。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>for calling any member of <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph> with full trust.</source>
          <target state="translated">调用的任何成员<ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph>以完全信任。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>Gets or sets the name to register with the event log as an event source.</source>
          <target state="translated">获取或设置要在事件日志中注册为事件源的名称。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>The name to register with the event log as a source of entries.</source>
          <target state="translated">要在事件日志中注册为项源的名称。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>The default is an empty string ("").</source>
          <target state="translated">默认值为空字符串("")。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>The source name is often the name of the application, or the name of a component within a large application.</source>
          <target state="translated">源名称通常是应用程序的名称或大型应用程序内的一个组件的名称。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.Source%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Diagnostics.EventSourceCreationData.MachineName%2A&gt;</ph> properties to create registry values on the target computer for the new source and its associated event log.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType&gt;</ph>方法使用<ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.Source%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Diagnostics.EventSourceCreationData.MachineName%2A&gt;</ph>属性以创建新的源和其关联的事件日志在目标计算机上的注册表值。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>A new source name cannot match an existing source name or an existing event log name on the target computer.</source>
          <target state="translated">新的源名称不能与现有源名称或目标计算机上的现有事件日志名称匹配。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>After the registry values for the source are created, your application can use the source to write entries to the configured event log.</source>
          <target state="translated">创建源的注册表值后，你的应用程序可用于源将条目写入到配置的事件日志。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</source>
          <target state="translated">每个源可以仅写入一个事件日志一次;但是，你的应用程序可以使用多个源写入多个事件日志。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>For example, your application might require multiple sources configured for different event logs or different resource files.</source>
          <target state="translated">例如，你的应用程序可能需要为不同的事件日志或不同的资源文件配置的多个源。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>The following code example sets the configuration properties for an event source from command-line arguments.</source>
          <target state="translated">下面的代码示例通过命令行参数设置事件源的配置属性。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>The input arguments specify the event source name, event log name, computer name, and event message resource file.</source>
          <target state="translated">输入自变量指定事件源名称、 事件日志名称、 计算机名和事件消息资源文件。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph> class.</source>
          <target state="translated">此示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>for calling any member of <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph> with full trust.</source>
          <target state="translated">调用的任何成员<ph id="ph1">&lt;see cref="T:System.Diagnostics.EventSourceCreationData" /&gt;</ph>以完全信任。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.EventSourceCreationData.Source">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>