<Type Name="EventSourceCreationData" FullName="System.Diagnostics.EventSourceCreationData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc5fb64c08e7407b6912a57b42da416cf47201c6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventSourceCreationData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSourceCreationData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventSourceCreationData" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSourceCreationData" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSourceCreationData" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="14c5d-101">表示用于在本地或远程计算机上创建事件日志源的配置设置。</span>
      <span class="sxs-lookup">
        <span data-stu-id="14c5d-101">Represents the configuration settings used to create an event log source on the local computer or a remote computer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14c5d-102">使用<xref:System.Diagnostics.EventSourceCreationData>用于配置新的源向事件日志写入本地化的项类。</span><span class="sxs-lookup"><span data-stu-id="14c5d-102">Use the <xref:System.Diagnostics.EventSourceCreationData> class to configure a new source for writing localized entries to an event log.</span></span> <span data-ttu-id="14c5d-103">不需要使用此类从事件日志进行读取。</span><span class="sxs-lookup"><span data-stu-id="14c5d-103">It is not necessary to use this class to read from an event log.</span></span>  
  
 <span data-ttu-id="14c5d-104">此类定义一个新的事件源和其关联的事件日志的配置设置。</span><span class="sxs-lookup"><span data-stu-id="14c5d-104">This class defines the configuration settings for a new event source and its associated event log.</span></span> <span data-ttu-id="14c5d-105">相关联的事件日志可以位于本地计算机或远程计算机上。</span><span class="sxs-lookup"><span data-stu-id="14c5d-105">The associated event log can be on the local computer or a remote computer.</span></span> <span data-ttu-id="14c5d-106">若要在本地计算机上创建新的源的新的或现有的事件日志，设置<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>和<xref:System.Diagnostics.EventSourceCreationData.Source%2A>属性<xref:System.Diagnostics.EventSourceCreationData>并调用<xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="14c5d-106">To create a new source for a new or existing event log on the local computer, set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> and <xref:System.Diagnostics.EventSourceCreationData.Source%2A> properties of an <xref:System.Diagnostics.EventSourceCreationData> and call the <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="14c5d-107">此方法创建在指定的事件源<xref:System.Diagnostics.EventSourceCreationData.Source%2A>它为事件日志中指定的属性和寄存器<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>。</span><span class="sxs-lookup"><span data-stu-id="14c5d-107">This method creates the event source you specify in the <xref:System.Diagnostics.EventSourceCreationData.Source%2A> property and registers it for the event log specified in <xref:System.Diagnostics.EventSourceCreationData.LogName%2A>.</span></span> <span data-ttu-id="14c5d-108">此行为是类似于使用<xref:System.Diagnostics.EventLogInstaller>类，以注册事件日志的事件源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-108">This behavior is similar to using the <xref:System.Diagnostics.EventLogInstaller> class to register an event source for an event log.</span></span>  
  
 <span data-ttu-id="14c5d-109">使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>和<xref:System.Diagnostics.EventLog.WriteEntry%2A>方法来向事件日志写入事件。</span><span class="sxs-lookup"><span data-stu-id="14c5d-109">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> and <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods to write events to an event log.</span></span> <span data-ttu-id="14c5d-110">必须指定事件源写入事件;你必须创建并在编写与源的第一个条目之前，配置事件源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-110">You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</span></span>  
  
 <span data-ttu-id="14c5d-111">在你的应用程序的安装过程中创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-111">Create the new event source during the installation of your application.</span></span> <span data-ttu-id="14c5d-112">这样，可以为操作系统来刷新其已注册的事件源的列表和它们的配置的时间。</span><span class="sxs-lookup"><span data-stu-id="14c5d-112">This allows time for the operating system to refresh its list of registered event sources and their configurations.</span></span> <span data-ttu-id="14c5d-113">如果操作系统未刷新其事件源的列表，并尝试写入新的源的事件写入操作将失败。</span><span class="sxs-lookup"><span data-stu-id="14c5d-113">If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</span></span> <span data-ttu-id="14c5d-114">你可以配置新的源使用<xref:System.Diagnostics.EventLogInstaller>，或使用<xref:System.Diagnostics.EventLog.CreateEventSource%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="14c5d-114">You can configure a new source using an <xref:System.Diagnostics.EventLogInstaller>, or using the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method.</span></span> <span data-ttu-id="14c5d-115">若要创建新的事件源的计算机上，必须具有管理权限。</span><span class="sxs-lookup"><span data-stu-id="14c5d-115">You must have administrative rights on the computer to create a new event source.</span></span>  
  
 <span data-ttu-id="14c5d-116">你可以创建现有的事件日志或新的事件日志的事件源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-116">You can create an event source for an existing event log or a new event log.</span></span> <span data-ttu-id="14c5d-117">在创建新的源的新的事件日志时，系统将为该日志，此源注册，但之前向其中写入的第一个条目，将不会创建日志。</span><span class="sxs-lookup"><span data-stu-id="14c5d-117">When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</span></span>  
  
 <span data-ttu-id="14c5d-118">每个源可以仅写入一个事件日志一次;但是，你的应用程序可以使用多个源写入多个事件日志。</span><span class="sxs-lookup"><span data-stu-id="14c5d-118">Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="14c5d-119">例如，你的应用程序可能需要为不同的事件日志或不同的资源文件配置的多个源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-119">For example, your application might need multiple sources configured for different event logs or different resource files.</span></span>  
  
 <span data-ttu-id="14c5d-120">若要更改现有源的配置详细信息，必须删除源，然后使用新的配置创建。</span><span class="sxs-lookup"><span data-stu-id="14c5d-120">To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</span></span> <span data-ttu-id="14c5d-121">如果其他应用程序或组件使用的现有源，请使用更新的配置，而无需删除现有的源创建新的源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-121">If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</span></span>  
  
 <span data-ttu-id="14c5d-122">你可以先使用本地化的资源注册事件源，为你的事件类别和消息字符串。</span><span class="sxs-lookup"><span data-stu-id="14c5d-122">You can register the event source with localized resources for your event category and message strings.</span></span> <span data-ttu-id="14c5d-123">你的应用程序可以写入事件日志项使用资源标识符，而不指定实际的字符串。</span><span class="sxs-lookup"><span data-stu-id="14c5d-123">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="14c5d-124">事件查看器使用的资源标识符来查找并显示基于当前语言设置的本地化的资源文件中的相应字符串。</span><span class="sxs-lookup"><span data-stu-id="14c5d-124">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="14c5d-125">你可以注册一个单独的文件的事件类别、 消息和参数插入字符串，或者也可以注册为所有三种类型的字符串的相同资源文件。</span><span class="sxs-lookup"><span data-stu-id="14c5d-125">You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="14c5d-126">使用<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>， <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>， <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>，和<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>属性来配置要向事件日志写入本地化的条目的源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-126">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="14c5d-127">如果你的应用程序将直接写入事件日志的字符串值，你不需要设置这些属性。</span><span class="sxs-lookup"><span data-stu-id="14c5d-127">If your application writes string values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="14c5d-128">要写入本地化的项还是要直接写入字符串，则必须配置源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-128">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="14c5d-129"><xref:System.Diagnostics.EventLog.WriteEntry%2A>方法直接写入事件日志将写入给定的字符串; 它不使用可本地化的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="14c5d-129">The <xref:System.Diagnostics.EventLog.WriteEntry%2A> method writes the given string directly to the event log; it does not use a localizable message resource file.</span></span> <span data-ttu-id="14c5d-130">使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>方法来写入事件时使用本地化的消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="14c5d-130">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write events using a localized message resource file.</span></span>  
  
 <span data-ttu-id="14c5d-131">如果你的应用程序将使用资源标识符和字符串值的条目，则必须注册两个单独的源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-131">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="14c5d-132">例如，使用资源文件，配置一个源，然后使用在该源<xref:System.Diagnostics.EventLog.WriteEvent%2A>方法来编写使用到事件日志的资源标识符的条目。</span><span class="sxs-lookup"><span data-stu-id="14c5d-132">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="14c5d-133">创建不同的源，而无需资源文件，然后使用在该源<xref:System.Diagnostics.EventLog.WriteEntry%2A>方法使用该源的事件日志中直接写入字符串。</span><span class="sxs-lookup"><span data-stu-id="14c5d-133">Then create a different source without resource files and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log using that source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14c5d-134">下面的代码示例通过命令行参数设置事件源的配置属性。</span><span class="sxs-lookup"><span data-stu-id="14c5d-134">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="14c5d-135">输入自变量指定事件源名称、 事件日志名称、 计算机名和事件消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="14c5d-135">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="14c5d-136">下面的代码示例需要验证，事件源不冲突与现有的事件源，然后，指定的事件日志的新事件源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-136">The code example verifies that the source does not conflict with an existing event source, and then creates the new event source for the specified event log.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#1)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#1)]
 [!code-vb[EventLog_EventSourceCreation_Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="14c5d-137">调用的任何成员<see cref="T:System.Diagnostics.EventSourceCreationData" />以完全信任。</span>
      <span class="sxs-lookup">
        <span data-stu-id="14c5d-137">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
      </span>
      <span data-ttu-id="14c5d-138">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="14c5d-138">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      </span>
    </permission>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="T:System.Diagnostics.EventLogInstaller" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSourceCreationData (string source, string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source, string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As String, logName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSourceCreationData(System::String ^ source, System::String ^ logName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="14c5d-139">要在事件日志中注册为项源的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-139">The name to register with the event log as a source of entries.</span>
          </span>
        </param>
        <param name="logName">
          <span data-ttu-id="14c5d-140">要将来自源的项写入其中的日志的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-140">The name of the log to which entries from the source are written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14c5d-141">使用指定的事件源和事件日志名称对 <see cref="T:System.Diagnostics.EventSourceCreationData" /> 类的新实例进行初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-141">Initializes a new instance of the <see cref="T:System.Diagnostics.EventSourceCreationData" /> class with a specified event source and event log name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14c5d-142">若要将条目写入到事件日志，必须首先创建事件日志的事件源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-142">To write entries to an event log, you must first create an event source for the event log.</span></span> <span data-ttu-id="14c5d-143">若要注册一个新的源，初始化<xref:System.Diagnostics.EventSourceCreationData>实例时，配置你的应用程序，并调用的实例属性<xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="14c5d-143">To register a new source, initialize an <xref:System.Diagnostics.EventSourceCreationData> instance, configure the instance properties for your application, and call the <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="14c5d-144">注册源之后，可以将条目写入从源使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>或<xref:System.Diagnostics.EventLog.WriteEntry%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="14c5d-144">After the source is registered, you can write entries from the source using the <xref:System.Diagnostics.EventLog.WriteEvent%2A> or <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods.</span></span>  
  
 <span data-ttu-id="14c5d-145">你可以先使用本地化的资源注册事件源，为你的事件类别和消息字符串。</span><span class="sxs-lookup"><span data-stu-id="14c5d-145">You can register the event source with localized resources for your event category and message strings.</span></span> <span data-ttu-id="14c5d-146">你的应用程序可以写入事件日志项使用资源标识符，而不指定实际的字符串。</span><span class="sxs-lookup"><span data-stu-id="14c5d-146">Your application can write event log entries using resource identifiers, rather than specifying the actual string.</span></span> <span data-ttu-id="14c5d-147">事件查看器使用的资源标识符来查找并显示基于当前语言设置的本地化的资源文件中的相应字符串。</span><span class="sxs-lookup"><span data-stu-id="14c5d-147">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</span></span> <span data-ttu-id="14c5d-148">你可以注册一个单独的文件的事件类别、 消息和参数插入字符串，或者也可以注册为所有三种类型的字符串的相同资源文件。</span><span class="sxs-lookup"><span data-stu-id="14c5d-148">You can register a separate file for event categories, messages, and parameter insertion strings, or you can register the same resource file for all three types of strings.</span></span> <span data-ttu-id="14c5d-149">使用<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>， <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>， <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>，和<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>属性来配置要向事件日志写入本地化的条目的源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-149">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>, <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>, and <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> properties to configure the source to write localized entries to the event log.</span></span> <span data-ttu-id="14c5d-150">如果你的应用程序将直接写入事件日志的字符串值，你不需要设置这些属性。</span><span class="sxs-lookup"><span data-stu-id="14c5d-150">If your application writes string values directly to the event log, you do not need to set these properties.</span></span>  
  
 <span data-ttu-id="14c5d-151">要写入本地化的项还是要直接写入字符串，则必须配置源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-151">The source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="14c5d-152">如果你的应用程序将使用资源标识符和字符串值的条目，则必须注册两个单独的源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-152">If your application writes entries using both resource identifiers and string values, you must register two separate sources.</span></span> <span data-ttu-id="14c5d-153">例如，使用资源文件，配置一个源，然后使用在该源<xref:System.Diagnostics.EventLog.WriteEvent%2A>方法来编写使用到事件日志的资源标识符的条目。</span><span class="sxs-lookup"><span data-stu-id="14c5d-153">For example, configure one source with resource files, and then use that source in the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write entries using resource identifiers to the event log.</span></span> <span data-ttu-id="14c5d-154">创建不同的源，而无需资源文件，然后使用在该源<xref:System.Diagnostics.EventLog.WriteEntry%2A>方法将字符串直接写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="14c5d-154">Then create a different source without resource files and use that source in the <xref:System.Diagnostics.EventLog.WriteEntry%2A> method to write strings directly to the event log.</span></span>  
  
 <span data-ttu-id="14c5d-155">下表显示的初始属性值<xref:System.Diagnostics.EventSourceCreationData>。</span><span class="sxs-lookup"><span data-stu-id="14c5d-155">The following table shows initial property values for an <xref:System.Diagnostics.EventSourceCreationData>.</span></span>  
  
|<span data-ttu-id="14c5d-156">Property</span><span class="sxs-lookup"><span data-stu-id="14c5d-156">Property</span></span>|<span data-ttu-id="14c5d-157">初始值</span><span class="sxs-lookup"><span data-stu-id="14c5d-157">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Diagnostics.EventSourceCreationData.Source%2A>|<span data-ttu-id="14c5d-158">`source` 参数。</span><span class="sxs-lookup"><span data-stu-id="14c5d-158">The `source` parameter.</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>|<span data-ttu-id="14c5d-159">`logName` 参数。</span><span class="sxs-lookup"><span data-stu-id="14c5d-159">The `logName` parameter.</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.MachineName%2A>|<span data-ttu-id="14c5d-160">本地计算机 ("。")。</span><span class="sxs-lookup"><span data-stu-id="14c5d-160">The local computer (".").</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>|<span data-ttu-id="14c5d-161">零</span><span class="sxs-lookup"><span data-stu-id="14c5d-161">Zero</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>|<span data-ttu-id="14c5d-162">`null`（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="14c5d-162">`null` (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>|<span data-ttu-id="14c5d-163">`null`（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="14c5d-163">`null` (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>|<span data-ttu-id="14c5d-164">`null`（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="14c5d-164">`null` (`Nothing` in Visual Basic).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="14c5d-165">下面的代码示例确定是否将名为事件源`SampleApplicationSource`已在本地计算机上注册。</span><span class="sxs-lookup"><span data-stu-id="14c5d-165">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="14c5d-166">如果事件源不存在，该示例设置源的消息资源文件，并创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-166">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="14c5d-167">最后，代码示例设置使用中的资源标识符值的事件日志的本地化的显示名称`DisplayNameMsgId`和中的资源文件路径`messageFile`。</span><span class="sxs-lookup"><span data-stu-id="14c5d-167">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="14c5d-168">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</span><span class="sxs-lookup"><span data-stu-id="14c5d-168">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="14c5d-169">消息文本文件是从其创建的消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-169">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="14c5d-170">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</span><span class="sxs-lookup"><span data-stu-id="14c5d-170">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="14c5d-171">调用的任何成员<see cref="T:System.Diagnostics.EventSourceCreationData" />以完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-171">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="14c5d-172">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-172">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.Source" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.LogName" />
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14c5d-173">获取或设置类别资源文件中类别的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-173">Gets or sets the number of categories in the category resource file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14c5d-174">类别资源文件中的类别的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-174">The number of categories in the category resource file.</span>
          </span>
          <span data-ttu-id="14c5d-175">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-175">The default value is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14c5d-176">使用<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>和<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>属性来写入事件时使用本地化的类别字符串。</span><span class="sxs-lookup"><span data-stu-id="14c5d-176">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="14c5d-177">如果你在写入该事件时提供一种类别，事件查看器将显示事件项的类别。</span><span class="sxs-lookup"><span data-stu-id="14c5d-177">The Event Viewer displays the category for an event entry if you supply a category when you write the event.</span></span> <span data-ttu-id="14c5d-178">事件日志类别是应用程序定义的字符串，用于帮助筛选事件或事件上提供进一步的信息。</span><span class="sxs-lookup"><span data-stu-id="14c5d-178">Event log categories are application-defined strings that help filter events, or provide further information on the event.</span></span> <span data-ttu-id="14c5d-179">例如，你的应用程序可以定义为不同的组件或不同的操作分隔不同类别。</span><span class="sxs-lookup"><span data-stu-id="14c5d-179">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="14c5d-180">事件类别是可选的;如果你的应用程序不使用类别，则不要设置<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>和<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="14c5d-180">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="14c5d-181">有关如何定义事件消息和生成事件资源文件的详细信息，请参阅处平台 SDK 文档中的"消息编译器"主题[ http://msdn.microsoft.com ](http://msdn.microsoft.com/)。</span><span class="sxs-lookup"><span data-stu-id="14c5d-181">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14c5d-182">下面的代码示例确定是否将名为事件源`SampleApplicationSource`已在本地计算机上注册。</span><span class="sxs-lookup"><span data-stu-id="14c5d-182">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="14c5d-183">如果事件源不存在，该示例设置源的消息资源文件，并创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-183">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="14c5d-184">最后，代码示例设置使用中的资源标识符值的事件日志的本地化的显示名称`DisplayNameMsgId`和中的资源文件路径`messageFile`。</span><span class="sxs-lookup"><span data-stu-id="14c5d-184">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="14c5d-185">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</span><span class="sxs-lookup"><span data-stu-id="14c5d-185">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="14c5d-186">消息文本文件是从其创建的消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-186">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="14c5d-187">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</span><span class="sxs-lookup"><span data-stu-id="14c5d-187">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="14c5d-188">该属性设置为负值或大于 <see cref="F:System.UInt16.MaxValue" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-188">The property is set to a negative value or to a value larger than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="14c5d-189">调用的任何成员<see cref="T:System.Diagnostics.EventSourceCreationData" />以完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-189">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="14c5d-190">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-190">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14c5d-191">获取或设置包含源的类别字符串的资源文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-191">Gets or sets the path of the resource file that contains category strings for the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14c5d-192">类别资源文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-192">The path of the category resource file.</span>
          </span>
          <span data-ttu-id="14c5d-193">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-193">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14c5d-194">使用<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>和<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>属性来写入事件时使用本地化的类别字符串。</span><span class="sxs-lookup"><span data-stu-id="14c5d-194">Use the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties to write events with localized category strings.</span></span> <span data-ttu-id="14c5d-195">如果你在写入该事件时提供一种类别，事件查看器将显示事件项的类别。</span><span class="sxs-lookup"><span data-stu-id="14c5d-195">The Event Viewer displays the category for an event entry if you supply a category when you write the event.</span></span> <span data-ttu-id="14c5d-196">事件日志类别是应用程序定义的字符串，用于帮助筛选事件或事件上提供进一步的信息。</span><span class="sxs-lookup"><span data-stu-id="14c5d-196">Event log categories are application-defined strings that help filter events, or provide further information on the event.</span></span> <span data-ttu-id="14c5d-197">例如，你的应用程序可以定义为不同的组件或不同的操作分隔不同类别。</span><span class="sxs-lookup"><span data-stu-id="14c5d-197">For example, your application can define separate categories for different components or different operations.</span></span>  
  
 <span data-ttu-id="14c5d-198">事件类别是可选的;如果你的应用程序不使用类别，则不要设置<xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A>和<xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="14c5d-198">Event categories are optional; if your application does not use categories, do not set the <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> and <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> properties.</span></span>  
  
 <span data-ttu-id="14c5d-199">有关如何定义事件消息和生成事件资源文件的详细信息，请参阅处平台 SDK 文档中的"消息编译器"主题[ http://msdn.microsoft.com ](http://msdn.microsoft.com/)。</span><span class="sxs-lookup"><span data-stu-id="14c5d-199">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14c5d-200">下面的代码示例确定是否将名为事件源`SampleApplicationSource`已在本地计算机上注册。</span><span class="sxs-lookup"><span data-stu-id="14c5d-200">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="14c5d-201">如果事件源不存在，该示例设置源的消息资源文件，并创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-201">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="14c5d-202">最后，代码示例设置使用中的资源标识符值的事件日志的本地化的显示名称`DisplayNameMsgId`和中的资源文件路径`messageFile`。</span><span class="sxs-lookup"><span data-stu-id="14c5d-202">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="14c5d-203">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</span><span class="sxs-lookup"><span data-stu-id="14c5d-203">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="14c5d-204">消息文本文件是从其创建的消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-204">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="14c5d-205">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</span><span class="sxs-lookup"><span data-stu-id="14c5d-205">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="14c5d-206">调用的任何成员<see cref="T:System.Diagnostics.EventSourceCreationData" />以完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-206">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="14c5d-207">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-207">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="LogName">
      <MemberSignature Language="C#" Value="public string LogName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.LogName" />
      <MemberSignature Language="VB.NET" Value="Public Property LogName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14c5d-208">获取或设置事件日志的名称，事件源要向该日志写入项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-208">Gets or sets the name of the event log to which the source writes entries.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14c5d-209">事件日志的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-209">The name of the event log.</span>
          </span>
          <span data-ttu-id="14c5d-210">这可以是 Application、System 或一个自定义的日志名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-210">This can be Application, System, or a custom log name.</span>
          </span>
          <span data-ttu-id="14c5d-211">默认值为“Application”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-211">The default value is "Application."</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14c5d-212">使用<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>属性来标识你的应用程序使用新的源写入条目的事件日志。</span><span class="sxs-lookup"><span data-stu-id="14c5d-212">Use the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property to identify the event log that your application writes entries to using the new source.</span></span> <span data-ttu-id="14c5d-213">事件日志可以是新的日志或现有的日志。</span><span class="sxs-lookup"><span data-stu-id="14c5d-213">The event log can be a new log or an existing log.</span></span> <span data-ttu-id="14c5d-214">应用程序和服务应写入应用程序日志或自定义日志。</span><span class="sxs-lookup"><span data-stu-id="14c5d-214">Applications and services should write to the Application log or a custom log.</span></span> <span data-ttu-id="14c5d-215">设备驱动程序应写入系统日志。</span><span class="sxs-lookup"><span data-stu-id="14c5d-215">Device drivers should write to the System log.</span></span> <span data-ttu-id="14c5d-216">如果未显式设置<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>属性，默认为应用程序日志的事件日志。</span><span class="sxs-lookup"><span data-stu-id="14c5d-216">If you do not explicitly set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property, the event log defaults to the Application log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="14c5d-217">安全日志是只读的。</span><span class="sxs-lookup"><span data-stu-id="14c5d-217">The Security log is read-only.</span></span>  
  
 <span data-ttu-id="14c5d-218">若要针对新的来源的现有的日志，设置<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>到现有的事件日志名称的属性。</span><span class="sxs-lookup"><span data-stu-id="14c5d-218">To target an existing log for the new source, set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property to the existing event log name.</span></span> <span data-ttu-id="14c5d-219">若要创建新的事件日志源，必须设置<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="14c5d-219">To create a new event log for the source, you must set the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property.</span></span> <span data-ttu-id="14c5d-220">事件日志名称必须由可打印字符组成，且不得包含字符“\*”、“?”或“\\”。</span><span class="sxs-lookup"><span data-stu-id="14c5d-220">Event log names must consist of printable characters, and cannot include the characters '\*', '?', or '\\'.</span></span> <span data-ttu-id="14c5d-221">事件日志名称的前 8 个字符必须是不同于现有指定的计算机上的事件日志名称的前 8 个字符。</span><span class="sxs-lookup"><span data-stu-id="14c5d-221">The first 8 characters of the event log name must be different from the first 8 characters of existing names of event logs on the specified computer.</span></span>  
  
 <span data-ttu-id="14c5d-222">操作系统将事件日志存储为文件。</span><span class="sxs-lookup"><span data-stu-id="14c5d-222">The operating system stores event logs as files.</span></span> <span data-ttu-id="14c5d-223">当你使用<xref:System.Diagnostics.EventLogInstaller>或<xref:System.Diagnostics.EventLog.CreateEventSource%2A>方法来创建新的事件日志，关联的文件存储在指定的计算机上的 %SystemRoot%\System32\Config 目录中。</span><span class="sxs-lookup"><span data-stu-id="14c5d-223">When you use <xref:System.Diagnostics.EventLogInstaller> or the <xref:System.Diagnostics.EventLog.CreateEventSource%2A> method to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</span></span> <span data-ttu-id="14c5d-224">通过追加的前 8 个字符设置的文件名称<xref:System.Diagnostics.EventSourceCreationData.LogName%2A>".evt"文件扩展名的属性。</span><span class="sxs-lookup"><span data-stu-id="14c5d-224">The file name is set by appending the first 8 characters of the <xref:System.Diagnostics.EventSourceCreationData.LogName%2A> property with the ".evt" file name extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14c5d-225">下面的代码示例通过命令行参数设置事件源的配置属性。</span><span class="sxs-lookup"><span data-stu-id="14c5d-225">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="14c5d-226">输入自变量指定事件源名称、 事件日志名称、 计算机名和事件消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="14c5d-226">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="14c5d-227">此示例摘自更大的示例为提供<xref:System.Diagnostics.EventSourceCreationData>类。</span><span class="sxs-lookup"><span data-stu-id="14c5d-227">This example is part of a larger example provided for the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#2)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#2)]
 [!code-vb[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="14c5d-228">调用的任何成员<see cref="T:System.Diagnostics.EventSourceCreationData" />以完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-228">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="14c5d-229">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-229">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.Log" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14c5d-230">获取或设置在其上注册事件源的计算机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-230">Gets or sets the name of the computer on which to register the event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14c5d-231">在其上注册事件源的系统的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-231">The name of the system on which to register the event source.</span>
          </span>
          <span data-ttu-id="14c5d-232">默认为本地计算机 (".")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-232">The default is the local computer (".").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14c5d-233"><xref:System.Diagnostics.EventSourceCreationData.MachineName%2A>值不能为空字符串。</span><span class="sxs-lookup"><span data-stu-id="14c5d-233">The <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> value cannot be an empty string.</span></span> <span data-ttu-id="14c5d-234">如果未显式设置的计算机名称，则默认为本地计算机 ("。")。</span><span class="sxs-lookup"><span data-stu-id="14c5d-234">If the machine name is not explicitly set, it defaults to the local computer (".").</span></span>  
  
 <span data-ttu-id="14c5d-235">注册时的远程计算机上的源，你必须编写使用具有足够权限的注册表值该计算机上具有管理权限。</span><span class="sxs-lookup"><span data-stu-id="14c5d-235">When registering a source on a remote computer, you must have administrative rights on that computer to write the registry values with sufficient permissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14c5d-236">下面的代码示例通过命令行参数设置事件源的配置属性。</span><span class="sxs-lookup"><span data-stu-id="14c5d-236">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="14c5d-237">输入自变量指定事件源名称、 事件日志名称、 计算机名和事件消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="14c5d-237">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="14c5d-238">此示例摘自更大的示例为提供<xref:System.Diagnostics.EventSourceCreationData>类。</span><span class="sxs-lookup"><span data-stu-id="14c5d-238">This example is part of a larger example provided for the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#2)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#2)]
 [!code-vb[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="14c5d-239">计算机名称无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-239">The computer name is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="14c5d-240">调用的任何成员<see cref="T:System.Diagnostics.EventSourceCreationData" />以完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-240">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="14c5d-241">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-241">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventLog.MachineName" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.Source" />
        <altmember cref="M:System.Diagnostics.EventLog.Exists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14c5d-242">获取或设置消息资源文件的路径，该文件包含源的消息格式字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-242">Gets or sets the path of the message resource file that contains message formatting strings for the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14c5d-243">消息资源文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-243">The path of the message resource file.</span>
          </span>
          <span data-ttu-id="14c5d-244">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-244">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14c5d-245">使用<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>属性配置事件日志源写入本地化的事件消息。</span><span class="sxs-lookup"><span data-stu-id="14c5d-245">Use the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property to configure an event log source to write localized event messages.</span></span> <span data-ttu-id="14c5d-246">事件消息是应用程序定义的字符串，描述向用户事件。</span><span class="sxs-lookup"><span data-stu-id="14c5d-246">Event messages are application-defined strings that describe the event to the user.</span></span>  
  
 <span data-ttu-id="14c5d-247">你的应用程序可以编写使用资源标识符的事件日志条目。</span><span class="sxs-lookup"><span data-stu-id="14c5d-247">Your application can write event log entries using resource identifiers.</span></span> <span data-ttu-id="14c5d-248">资源标识符的消息中编制索引<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>。</span><span class="sxs-lookup"><span data-stu-id="14c5d-248">A resource identifier indexes a message located in the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>.</span></span> <span data-ttu-id="14c5d-249">事件查看器使用的资源标识符来查找并显示基于当前语言设置的本地化的消息资源文件中的相应字符串。</span><span class="sxs-lookup"><span data-stu-id="14c5d-249">The Event Viewer uses the resource identifier to find and display the corresponding string from the localized message resource file based on current language settings.</span></span>  
  
 <span data-ttu-id="14c5d-250">要写入本地化的项还是要直接写入字符串，则必须配置事件源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-250">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="14c5d-251">使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>方法写入本地化的项配置了消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-251">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="14c5d-252">如果你的应用程序写入事件消息字符串直接，而不是在本地化的资源文件中，使用的资源标识符未设置<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="14c5d-252">If your application writes event message strings directly, rather than using a resource identifier in a localized resource file, do not set the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="14c5d-253">有关如何定义事件消息和生成事件资源文件的详细信息，请参阅处平台 SDK 文档中的"消息编译器"主题[ http://msdn.microsoft.com ](http://msdn.microsoft.com/)。</span><span class="sxs-lookup"><span data-stu-id="14c5d-253">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14c5d-254">下面的代码示例确定是否将名为事件源`SampleApplicationSource`已在本地计算机上注册。</span><span class="sxs-lookup"><span data-stu-id="14c5d-254">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="14c5d-255">如果事件源不存在，该示例设置源的消息资源文件，并创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-255">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="14c5d-256">最后，代码示例设置使用中的资源标识符值的事件日志的本地化的显示名称`DisplayNameMsgId`和中的资源文件路径`messageFile`。</span><span class="sxs-lookup"><span data-stu-id="14c5d-256">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="14c5d-257">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</span><span class="sxs-lookup"><span data-stu-id="14c5d-257">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="14c5d-258">消息文本文件是从其创建的消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-258">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="14c5d-259">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</span><span class="sxs-lookup"><span data-stu-id="14c5d-259">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="14c5d-260">调用的任何成员<see cref="T:System.Diagnostics.EventSourceCreationData" />以完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-260">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="14c5d-261">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-261">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14c5d-262">获取或设置资源文件的路径，该文件包含源的消息参数字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-262">Gets or sets the path of the resource file that contains message parameter strings for the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14c5d-263">参数资源文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-263">The path of the parameter resource file.</span>
          </span>
          <span data-ttu-id="14c5d-264">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-264">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14c5d-265">使用<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>属性可以配置将与本地化的事件消息写入事件日志源插入参数字符串。</span><span class="sxs-lookup"><span data-stu-id="14c5d-265">Use the <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> property to configure an event log source to write localized event messages with inserted parameter strings.</span></span> <span data-ttu-id="14c5d-266">中指定每个本地化的事件消息<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>属性可以包含插入字符串的占位符。</span><span class="sxs-lookup"><span data-stu-id="14c5d-266">Each localized event message specified in the <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property can contain placeholders for insertion strings.</span></span> <span data-ttu-id="14c5d-267">这些占位符用于指定的位置和事件消息中的独立于语言的字符串的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="14c5d-267">These placeholders are used to specify the position and resource identifier for a language-independent string within the event message.</span></span> <span data-ttu-id="14c5d-268">事件查看器在使用中的相应字符串的占位符填充<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>和格式本地化的事件项的事件日志消息。</span><span class="sxs-lookup"><span data-stu-id="14c5d-268">The Event Viewer fills in the placeholders using the corresponding strings from the <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> and formats the event log message for the localized event entry.</span></span>  
  
 <span data-ttu-id="14c5d-269">例如，以下部分的消息文本文件定义的参数占位符的字符串：</span><span class="sxs-lookup"><span data-stu-id="14c5d-269">For example, the following section of a message text file defines a string with a parameter placeholder:</span></span>  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 <span data-ttu-id="14c5d-270">在参数资源文件中，插入字符串必须使用定义的资源标识符，对应于占位符，如下所示：</span><span class="sxs-lookup"><span data-stu-id="14c5d-270">Within the parameter resource file, the insertion string must be defined with the resource identifier that corresponds to the placeholder, as shown below:</span></span>  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 <span data-ttu-id="14c5d-271">要写入本地化的项还是要直接写入字符串，则必须配置事件源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-271">The event source must be configured either for writing localized entries or for writing direct strings.</span></span> <span data-ttu-id="14c5d-272">使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>方法写入本地化的项配置了消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-272">Use the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method to write localized entries for a source configured with a message resource file.</span></span>  
  
 <span data-ttu-id="14c5d-273">如果你的应用程序将事件消息字符串直接写入事件日志中，或者你<xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A>属性不包含用参数插入占位符的消息时，未设置<xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="14c5d-273">If your application writes event message strings directly to the event log, or if your <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> property does not contain messages with parameter insertion placeholders, do not set the <xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A> property.</span></span>  
  
 <span data-ttu-id="14c5d-274">有关如何定义事件消息和生成事件资源文件的详细信息，请参阅处平台 SDK 文档中的"消息编译器"主题[ http://msdn.microsoft.com ](http://msdn.microsoft.com/)。</span><span class="sxs-lookup"><span data-stu-id="14c5d-274">For details about defining event messages and building event resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14c5d-275">下面的代码示例确定是否将名为事件源`SampleApplicationSource`已在本地计算机上注册。</span><span class="sxs-lookup"><span data-stu-id="14c5d-275">The following code example determines whether the event source named `SampleApplicationSource` is registered on the local computer.</span></span> <span data-ttu-id="14c5d-276">如果事件源不存在，该示例设置源的消息资源文件，并创建新的事件源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-276">If the event source does not exist, the example sets the message resource file for the source and creates the new event source.</span></span> <span data-ttu-id="14c5d-277">最后，代码示例设置使用中的资源标识符值的事件日志的本地化的显示名称`DisplayNameMsgId`和中的资源文件路径`messageFile`。</span><span class="sxs-lookup"><span data-stu-id="14c5d-277">Finally, the code example sets the localized display name for the event log, using the resource identifier value in `DisplayNameMsgId` and the resource file path in `messageFile`.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#6)]
 [!code-csharp[EventLog_WriteEvent#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#6)]
 [!code-vb[EventLog_WriteEvent#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#6)]  
  
 <span data-ttu-id="14c5d-278">代码示例使用下面的消息文本文件，内置于 EventLogMsgs.dll 的资源库。</span><span class="sxs-lookup"><span data-stu-id="14c5d-278">The code example uses the following message text file, built into the resource library EventLogMsgs.dll.</span></span> <span data-ttu-id="14c5d-279">消息文本文件是从其创建的消息资源文件的源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-279">A message text file is the source from which the message resource file is created.</span></span> <span data-ttu-id="14c5d-280">消息文本文件定义的资源标识符和类别、 事件消息和参数插入字符串的文本。</span><span class="sxs-lookup"><span data-stu-id="14c5d-280">The message text file defines the resource identifiers and text for the category, event message, and parameter insertion strings.</span></span> <span data-ttu-id="14c5d-281">具体而言，为资源标识符 1004年定义消息将使用占位符，对于为资源标识符 5002 定义的参数字符串。</span><span class="sxs-lookup"><span data-stu-id="14c5d-281">Specifically, the message defined for resource identifier 1004 uses a placeholder for a parameter string defined for resource identifier 5002.</span></span>  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="14c5d-282">调用的任何成员<see cref="T:System.Diagnostics.EventSourceCreationData" />以完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-282">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="14c5d-283">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-283">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventSourceCreationData.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="14c5d-284">获取或设置要在事件日志中注册为事件源的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-284">Gets or sets the name to register with the event log as an event source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="14c5d-285">要在事件日志中注册为项源的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-285">The name to register with the event log as a source of entries.</span>
          </span>
          <span data-ttu-id="14c5d-286">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-286">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14c5d-287">源名称通常是应用程序的名称或大型应用程序内的一个组件的名称。</span><span class="sxs-lookup"><span data-stu-id="14c5d-287">The source name is often the name of the application, or the name of a component within a large application.</span></span> <span data-ttu-id="14c5d-288"><xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType>方法使用<xref:System.Diagnostics.EventSourceCreationData.Source%2A>， <xref:System.Diagnostics.EventSourceCreationData.LogName%2A>，和<xref:System.Diagnostics.EventSourceCreationData.MachineName%2A>属性以创建新的源和其关联的事件日志在目标计算机上的注册表值。</span><span class="sxs-lookup"><span data-stu-id="14c5d-288">The <xref:System.Diagnostics.EventLog.CreateEventSource%28System.Diagnostics.EventSourceCreationData%29?displayProperty=nameWithType> method uses the <xref:System.Diagnostics.EventSourceCreationData.Source%2A>, <xref:System.Diagnostics.EventSourceCreationData.LogName%2A>, and <xref:System.Diagnostics.EventSourceCreationData.MachineName%2A> properties to create registry values on the target computer for the new source and its associated event log.</span></span> <span data-ttu-id="14c5d-289">新的源名称不能与现有源名称或目标计算机上的现有事件日志名称匹配。</span><span class="sxs-lookup"><span data-stu-id="14c5d-289">A new source name cannot match an existing source name or an existing event log name on the target computer.</span></span>  
  
 <span data-ttu-id="14c5d-290">创建源的注册表值后，你的应用程序可用于源将条目写入到配置的事件日志。</span><span class="sxs-lookup"><span data-stu-id="14c5d-290">After the registry values for the source are created, your application can use the source to write entries to the configured event log.</span></span>  
  
 <span data-ttu-id="14c5d-291">每个源可以仅写入一个事件日志一次;但是，你的应用程序可以使用多个源写入多个事件日志。</span><span class="sxs-lookup"><span data-stu-id="14c5d-291">Each source can only write to one event log at a time; however, your application can use multiple sources to write to multiple event logs.</span></span> <span data-ttu-id="14c5d-292">例如，你的应用程序可能需要为不同的事件日志或不同的资源文件配置的多个源。</span><span class="sxs-lookup"><span data-stu-id="14c5d-292">For example, your application might require multiple sources configured for different event logs or different resource files.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="14c5d-293">下面的代码示例通过命令行参数设置事件源的配置属性。</span><span class="sxs-lookup"><span data-stu-id="14c5d-293">The following code example sets the configuration properties for an event source from command-line arguments.</span></span> <span data-ttu-id="14c5d-294">输入自变量指定事件源名称、 事件日志名称、 计算机名和事件消息资源文件。</span><span class="sxs-lookup"><span data-stu-id="14c5d-294">The input arguments specify the event source name, event log name, computer name, and event message resource file.</span></span> <span data-ttu-id="14c5d-295">此示例摘自更大的示例为提供<xref:System.Diagnostics.EventSourceCreationData>类。</span><span class="sxs-lookup"><span data-stu-id="14c5d-295">This example is part of a larger example provided for the <xref:System.Diagnostics.EventSourceCreationData> class.</span></span>  
  
 [!code-cpp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/cpp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CPP/source.cpp#2)]
 [!code-csharp[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/csharp/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/CS/source.cs#2)]
 [!code-vb[EventLog_EventSourceCreation_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLog_EventSourceCreation_Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="14c5d-296">调用的任何成员<see cref="T:System.Diagnostics.EventSourceCreationData" />以完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-296">for calling any member of <see cref="T:System.Diagnostics.EventSourceCreationData" /> with full trust.</span>
          </span>
          <span data-ttu-id="14c5d-297">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="14c5d-297">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.Source" />
        <altmember cref="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>