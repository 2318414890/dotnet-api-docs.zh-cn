<Type Name="Debugger" FullName="System.Diagnostics.Debugger">
  <TypeSignature Language="C#" Value="public sealed class Debugger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Debugger extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Debugger" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Debugger" />
  <TypeSignature Language="C++ CLI" Value="public ref class Debugger sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Debug</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="54d60-101">启用与调试器的通讯。</span><span class="sxs-lookup"><span data-stu-id="54d60-101">Enables communication with a debugger.</span></span> <span data-ttu-id="54d60-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="54d60-102">This class cannot be inherited.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Debugger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Debugger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Call the static methods directly on this type", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d60-103">初始化 <see cref="T:System.Diagnostics.Debugger" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="54d60-103">Initializes a new instance of the <see cref="T:System.Diagnostics.Debugger" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static void Break ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Break() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.Break" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Break ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Break();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d60-104">发出信号表示连接调试器的断点。</span><span class="sxs-lookup"><span data-stu-id="54d60-104">Signals a breakpoint to an attached debugger.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d60-105">如果未附加调试器，如果他们想要将调试器附加要求用户。</span><span class="sxs-lookup"><span data-stu-id="54d60-105">If no debugger is attached, users are asked if they want to attach a debugger.</span></span> <span data-ttu-id="54d60-106">如果用户是，将启动调试器。</span><span class="sxs-lookup"><span data-stu-id="54d60-106">If users say yes, the debugger is started.</span></span> <span data-ttu-id="54d60-107">如果附加调试器后，调试器处于有信号状态与用户断点事件，并且调试器将暂停执行的进程，就像调试器断点具有命中。</span><span class="sxs-lookup"><span data-stu-id="54d60-107">If a debugger is attached, the debugger is signaled with a user breakpoint event, and the debugger suspends execution of the process just as if a debugger breakpoint had been hit.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="54d60-108">从开始[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]，运行时不再执行严格控制启动的调试器<xref:System.Diagnostics.Debugger.Break%2A>方法，但改为将向 Windows 错误报告 (WER) 子系统报告错误。</span><span class="sxs-lookup"><span data-stu-id="54d60-108">Starting with [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the runtime no longer exercises tight control of launching the debugger for the <xref:System.Diagnostics.Debugger.Break%2A> method, but instead reports an error to the Windows Error Reporting (WER) subsystem.</span></span> <span data-ttu-id="54d60-109">WER 提供许多设置，以自定义报告体验，以便大量因素会影响 WER 响应错误，如操作系统版本、 进程、 会话、 用户、 计算机和域的方式的问题。</span><span class="sxs-lookup"><span data-stu-id="54d60-109">WER provides many settings to customize the problem reporting experience, so a lot of factors will influence  the way WER responds to an error such as operating system version, process, session, user, machine and domain.</span></span> <span data-ttu-id="54d60-110">如果你在遇到意外的结果调用时<xref:System.Diagnostics.Debugger.Break%2A>方法，检查您的计算机上的 WER 设置。</span><span class="sxs-lookup"><span data-stu-id="54d60-110">If you're having unexpected results when calling  the <xref:System.Diagnostics.Debugger.Break%2A> method,  check the  WER settings on your machine.</span></span> <span data-ttu-id="54d60-111">有关如何自定义 wer 的步骤的详细信息，请参阅[WER 设置](https://msdn.microsoft.com/library/windows/desktop/bb513638.aspx)。</span><span class="sxs-lookup"><span data-stu-id="54d60-111">For more information on how to customize WER, see [WER Settings](https://msdn.microsoft.com/library/windows/desktop/bb513638.aspx).</span></span> <span data-ttu-id="54d60-112">如果你想要确保而不考虑 WER 设置启动调试器时，一定要调用<xref:System.Diagnostics.Debugger.Launch%2A>方法相反。</span><span class="sxs-lookup"><span data-stu-id="54d60-112">If you want to ensure the debugger is launched regardless of the WER settings, be sure to call the <xref:System.Diagnostics.Debugger.Launch%2A> method instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54d60-113">下面的代码示例演示如何停止对的调用在调试器<xref:System.Console.WriteLine%2A>。</span><span class="sxs-lookup"><span data-stu-id="54d60-113">The following code example demonstrates how to stop the debugger at the call to <xref:System.Console.WriteLine%2A>.</span></span>  
  
```vb  
Debugger.Break()  
Console.WriteLine("Hello, world.")  
```  
  
```csharp  
Debugger.Break();  
Console.WriteLine("Hello, world.");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="54d60-114"><see cref="T:System.Security.Permissions.UIPermission" /> 未设置为在调试器中设置断点。</span><span class="sxs-lookup"><span data-stu-id="54d60-114">The <see cref="T:System.Security.Permissions.UIPermission" /> is not set to break into the debugger.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="54d60-115">若要启动调试器的权限。</span><span class="sxs-lookup"><span data-stu-id="54d60-115">for permission to start a debugger.</span></span> <span data-ttu-id="54d60-116">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="54d60-116">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="54d60-117">用于操作与非托管代码。</span><span class="sxs-lookup"><span data-stu-id="54d60-117">for operating with unmanaged code.</span></span> <span data-ttu-id="54d60-118">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="54d60-118">Associated enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultCategory">
      <MemberSignature Language="C#" Value="public static readonly string DefaultCategory;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultCategory" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Debugger.DefaultCategory" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultCategory As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultCategory;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54d60-119">用常数表示消息的默认类别。</span><span class="sxs-lookup"><span data-stu-id="54d60-119">Represents the default category of message with a constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d60-120">此默认常量的值是`null`。</span><span class="sxs-lookup"><span data-stu-id="54d60-120">The value of this default constant is `null`.</span></span> <span data-ttu-id="54d60-121"><xref:System.Diagnostics.Debugger.DefaultCategory> 使用 <xref:System.Diagnostics.Debugger.Log%2A>。</span><span class="sxs-lookup"><span data-stu-id="54d60-121"><xref:System.Diagnostics.Debugger.DefaultCategory> is used by <xref:System.Diagnostics.Debugger.Log%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="public static bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debugger.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAttached { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54d60-122">获取一个值，它指示调试器是否已附加到进程。</span><span class="sxs-lookup"><span data-stu-id="54d60-122">Gets a value that indicates whether a debugger is attached to the process.</span></span></summary>
        <value>
          <span data-ttu-id="54d60-123">如果调试器已连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54d60-123"><see langword="true" /> if a debugger is attached; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLogging">
      <MemberSignature Language="C#" Value="public static bool IsLogging ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLogging() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.IsLogging" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLogging () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLogging();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d60-124">检查连接的调试器是否已启用日志记录。</span><span class="sxs-lookup"><span data-stu-id="54d60-124">Checks to see if logging is enabled by an attached debugger.</span></span></summary>
        <returns>
          <span data-ttu-id="54d60-125">如果已连接调试器并已启用日志记录，则值为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54d60-125"><see langword="true" /> if a debugger is attached and logging is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="54d60-126">连接的调试器是 <see langword="DbgManagedDebugger" /> 注册表项中已注册的托管调试器。</span><span class="sxs-lookup"><span data-stu-id="54d60-126">The attached debugger is the registered managed debugger in the <see langword="DbgManagedDebugger" /> registry key.</span></span> <span data-ttu-id="54d60-127">有关此注册表项的详细信息，请参阅[启用 JIT 附加调试](~/docs/framework/debug-trace-profile/enabling-jit-attach-debugging.md)。</span><span class="sxs-lookup"><span data-stu-id="54d60-127">For more information on this key, see [Enabling JIT-Attach Debugging](~/docs/framework/debug-trace-profile/enabling-jit-attach-debugging.md).</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Launch">
      <MemberSignature Language="C#" Value="public static bool Launch ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Launch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.Launch" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Launch () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Launch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d60-128">启动调试器并将其连接到进程。</span><span class="sxs-lookup"><span data-stu-id="54d60-128">Launches and attaches a debugger to the process.</span></span></summary>
        <returns>
          <span data-ttu-id="54d60-129">如果启动成功或者调试器已连接，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="54d60-129"><see langword="true" /> if the startup is successful or if the debugger is already attached; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d60-130">如果已附加调试器，它会执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="54d60-130">If a debugger is already attached, nothing happens.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="54d60-131"><see cref="T:System.Security.Permissions.UIPermission" /> 未设置为启动调试器。</span><span class="sxs-lookup"><span data-stu-id="54d60-131">The <see cref="T:System.Security.Permissions.UIPermission" /> is not set to start the debugger.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="54d60-132">若要启动调试器的权限。</span><span class="sxs-lookup"><span data-stu-id="54d60-132">for permission to start a debugger.</span></span> <span data-ttu-id="54d60-133">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="54d60-133">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="54d60-134">用于操作与非托管代码。</span><span class="sxs-lookup"><span data-stu-id="54d60-134">for operating with unmanaged code.</span></span> <span data-ttu-id="54d60-135">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></span><span class="sxs-lookup"><span data-stu-id="54d60-135">Associated enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></span></span></permission>
        <altmember cref="T:System.Security.Permissions.UIPermission" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (int level, string category, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(int32 level, string category, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Log (level As Integer, category As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Log(int level, System::String ^ category, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="level"><span data-ttu-id="54d60-136">消息重要性的说明。</span><span class="sxs-lookup"><span data-stu-id="54d60-136">A description of the importance of the message.</span></span></param>
        <param name="category"><span data-ttu-id="54d60-137">消息的类别。</span><span class="sxs-lookup"><span data-stu-id="54d60-137">The category of the message.</span></span></param>
        <param name="message"><span data-ttu-id="54d60-138">要显示的消息。</span><span class="sxs-lookup"><span data-stu-id="54d60-138">The message to show.</span></span></param>
        <summary><span data-ttu-id="54d60-139">发送连接调试器的消息。</span><span class="sxs-lookup"><span data-stu-id="54d60-139">Posts a message for the attached debugger.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d60-140">如果没有任何附加调试器，则此方法无效。</span><span class="sxs-lookup"><span data-stu-id="54d60-140">If there is no debugger attached, this method has no effect.</span></span> <span data-ttu-id="54d60-141">调试器可能或可能不会报告消息，根据其设置。</span><span class="sxs-lookup"><span data-stu-id="54d60-141">The debugger might or might not report the message, depending upon its settings.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54d60-142">类别参数被限制为 256 个字符。</span><span class="sxs-lookup"><span data-stu-id="54d60-142">The category parameter is limited to 256 characters.</span></span> <span data-ttu-id="54d60-143">字符串长度超过 256 个字符将被截断。</span><span class="sxs-lookup"><span data-stu-id="54d60-143">Strings longer than 256 characters are truncated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOfCrossThreadDependency">
      <MemberSignature Language="C#" Value="public static void NotifyOfCrossThreadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NotifyOfCrossThreadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub NotifyOfCrossThreadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void NotifyOfCrossThreadDependency();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="54d60-144">通知调试器执行即将进入一个涉及跨线程依赖项的路径。</span><span class="sxs-lookup"><span data-stu-id="54d60-144">Notifies a debugger that execution is about to enter a path that involves a cross-thread dependency.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d60-145">调试器必须专门允许他们希望接收的回调。</span><span class="sxs-lookup"><span data-stu-id="54d60-145">Debuggers must specifically enable callbacks that they wish to receive.</span></span> <span data-ttu-id="54d60-146">调试器，想要接收跨线程依赖项回调必须调用该方法。</span><span class="sxs-lookup"><span data-stu-id="54d60-146">A debugger that wants to receive cross-thread dependency callbacks must call the  method.</span></span>  
  
 <span data-ttu-id="54d60-147">已选定的调试器<xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A>可以采取相应的操作，在收到通知时。</span><span class="sxs-lookup"><span data-stu-id="54d60-147">A debugger that has selected <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> can take appropriate action upon notification.</span></span> <span data-ttu-id="54d60-148">例如，通常执行的函数评估需要冻结除了执行求值的线程以外的所有线程。</span><span class="sxs-lookup"><span data-stu-id="54d60-148">For example, performing a function evaluation typically requires freezing all threads except for the thread that is performing the evaluation.</span></span> <span data-ttu-id="54d60-149">如果函数求值需要在多个线程上的执行，因为可能会出现在远程处理方案中，将阻止评估。</span><span class="sxs-lookup"><span data-stu-id="54d60-149">If the function evaluation requires execution on more than one thread, as might occur in remoting scenarios, the evaluation will block.</span></span> <span data-ttu-id="54d60-150"><xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A>通知会通知调试器它拥有以释放线程或中止函数求值。</span><span class="sxs-lookup"><span data-stu-id="54d60-150">The <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> notification informs the debugger that it has to release a thread or abort the function evaluation.</span></span> <span data-ttu-id="54d60-151">此方法返回后，通知将受到集合。</span><span class="sxs-lookup"><span data-stu-id="54d60-151">The notification is subject to collection after this method returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>