<Type Name="Switch" FullName="System.Diagnostics.Switch">
  <TypeSignature Language="C#" Value="public abstract class Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Switch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Switch" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Switch abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e9fc6-101">提供一个用于创建新的调试和跟踪开关的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-101">Provides an abstract base class to create new debugging and tracing switches.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fc6-102">交换机提供了用于控制跟踪和调试输出在运行时使用外部设置的有效机制。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-102">A switch provides an efficient mechanism for controlling tracing and debugging output at run time using external settings.</span></span> <span data-ttu-id="e9fc6-103"><xref:System.Diagnostics.Switch>类实现开关，从而允许您在运行时更改交换机级别的默认行为。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-103">The <xref:System.Diagnostics.Switch> class implements default behavior for switches, allowing you to change the switch level at run time.</span></span>  
  
 <span data-ttu-id="e9fc6-104">此类是适用于基<xref:System.Diagnostics.BooleanSwitch>，<xref:System.Diagnostics.SourceSwitch>和<xref:System.Diagnostics.TraceSwitch>类。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-104">This class is the base class for the <xref:System.Diagnostics.BooleanSwitch>, <xref:System.Diagnostics.SourceSwitch> and the <xref:System.Diagnostics.TraceSwitch> classes.</span></span> <span data-ttu-id="e9fc6-105">这些开关可满足大多数调试和跟踪需求。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-105">These switches meet most debugging and tracing needs.</span></span> <span data-ttu-id="e9fc6-106">关于跟踪开关的详细信息，请参阅[跟踪开关](~/docs/framework/debug-trace-profile/trace-switches.md)。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-106">For more information about trace switches, see [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md).</span></span>  
  
 <span data-ttu-id="e9fc6-107">你必须启用跟踪或调试才能使用交换机。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-107">You must enable tracing or debugging to use a switch.</span></span> <span data-ttu-id="e9fc6-108">下面的语法是特定的编译器。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-108">The following syntax is compiler specific.</span></span> <span data-ttu-id="e9fc6-109">如果你使用除 C# 或 Visual Basic 编译器，请参阅你的编译器的文档。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-109">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="e9fc6-110">若要启用调试 C# 中，添加`/d:DEBUG`到编译器命令行编译代码，或可以添加时的标志`#define DEBUG`到你的文件的顶部。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-110">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="e9fc6-111">在 Visual Basic 中，添加`/d:DEBUG=True`到编译器命令行的标志。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-111">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="e9fc6-112">若要启用跟踪在 C# 中使用，将添加`/d:TRACE`到编译器命令行编译代码，或添加时的标志`#define TRACE`到你的文件的顶部。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-112">To enable tracing using in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="e9fc6-113">在 Visual Basic 中，添加`/d:TRACE=True`到编译器命令行的标志。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-113">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="e9fc6-114">若要设置你的交换机的级别，请编辑配置文件对应于你的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-114">To set the level of your switch, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="e9fc6-115">在此文件中，可以添加交换机并将其值设置、 移除开关，或清除所有交换机以前由应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-115">Within this file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application.</span></span> <span data-ttu-id="e9fc6-116">配置文件的格式应类似下面的示例：</span><span class="sxs-lookup"><span data-stu-id="e9fc6-116">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="true" />  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="e9fc6-117">此示例配置节定义<xref:System.Diagnostics.BooleanSwitch>与<xref:System.Diagnostics.Switch.DisplayName%2A>属性设置为`mySwitch`和<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>值设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-117">This example configuration section defines a <xref:System.Diagnostics.BooleanSwitch> with the <xref:System.Diagnostics.Switch.DisplayName%2A> property set to `mySwitch` and the <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> value set to `true`.</span></span> <span data-ttu-id="e9fc6-118">在你的应用程序，你可以通过创建中使用已配置的开关值<xref:System.Diagnostics.BooleanSwitch>具有相同名称，如下面的代码示例中所示。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-118">Within your application, you can use the configured switch value by creating a <xref:System.Diagnostics.BooleanSwitch> with the same name, as shown in the following code example.</span></span>  
  
 [!code-cpp[Classic Switch Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/remarks.cpp#4)]
 [!code-csharp[Classic Switch Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/remarks.cs#4)]  
  
   
  
## Examples  
 <span data-ttu-id="e9fc6-119">下面的示例演示如何定义一个新<xref:System.Diagnostics.Switch>与四个可用于跟踪调用堆栈的跟踪级别的类。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-119">The following example shows how to define a new <xref:System.Diagnostics.Switch> class with four levels of tracing that can be used to trace a call stack.</span></span> <span data-ttu-id="e9fc6-120">你可以使用进入或退出记录方法的每次你的应用程序时的检测到的交换机。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-120">You can use the switch to instrument your application to log each time the method is entered or exited.</span></span>  
  
 <span data-ttu-id="e9fc6-121">第一个示例创建用于设置开关的级别的枚举。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-121">The first example creates the enumeration used to set the level of the switch.</span></span>  
  
 [!code-cpp[Classic Switch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Switch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/source.cs#1)]
 [!code-vb[Classic Switch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Switch Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e9fc6-122">下面的示例创建新的开关。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-122">The following example creates the new switch.</span></span> <span data-ttu-id="e9fc6-123">该代码会实施`Level`属性来设置新的开关的值。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-123">The code implements a `Level` property to set the value of the new switch.</span></span> <span data-ttu-id="e9fc6-124">`Level` 调用受保护的属性<xref:System.Diagnostics.Switch.SwitchSetting%2A>，将值分配到新的交换机。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-124">`Level` calls the protected property <xref:System.Diagnostics.Switch.SwitchSetting%2A> that assigns the value to the new switch.</span></span> <span data-ttu-id="e9fc6-125">此示例还实现两个取值函数属性以获取开关的分配的值。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-125">This example also implements two assessor properties to get the assigned value of the switch.</span></span>  
  
 [!code-cpp[Classic Switch Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Switch Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/source.cs#2)]
 [!code-vb[Classic Switch Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Switch Example/VB/source.vb#2)]  
  
 <span data-ttu-id="e9fc6-126">下面的示例创建中的新交换机`Main`。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-126">The following example creates a new switch in `Main`.</span></span> <span data-ttu-id="e9fc6-127">它创建一个新的开关，并将其分配一个值。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-127">It creates a new switch and assigns it a value.</span></span> <span data-ttu-id="e9fc6-128">然后，具体取决于交换机设置，它将输出调试消息进入和离开方法。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-128">Then, depending on the switch settings, it outputs debugging messages for entering and leaving the method.</span></span>  
  
 [!code-cpp[Classic Switch Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Switch Example/CPP/source.cpp#3)]
 [!code-csharp[Classic Switch Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Switch Example/CS/source.cs#3)]
 [!code-vb[Classic Switch Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Switch Example/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="e9fc6-129">如果需要跟踪级别，或设置的机制切换不同于所提供的级别<see cref="T:System.Diagnostics.BooleanSwitch" />，<see cref="T:System.Diagnostics.SourceSwitch" />和<see cref="T:System.Diagnostics.TraceSwitch" />，可以从继承<see cref="T:System.Diagnostics.Switch" />。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-129">If you need trace levels, or mechanisms for setting switch levels different from those provided by <see cref="T:System.Diagnostics.BooleanSwitch" />, <see cref="T:System.Diagnostics.SourceSwitch" /> and <see cref="T:System.Diagnostics.TraceSwitch" />, you can inherit from <see cref="T:System.Diagnostics.Switch" />.</span></span> <span data-ttu-id="e9fc6-130">当从此类继承，则必须实现<see cref="P:System.Diagnostics.Switch.SwitchSetting" />方法。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-130">When inheriting from this class, you must implement the <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> method.</span></span></para>
    </block>
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e9fc6-131">初始化 <see cref="T:System.Diagnostics.Switch" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-131">Initializes a new instance of the <see cref="T:System.Diagnostics.Switch" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Switch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Switch(System::String ^ displayName, System::String ^ description);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName"><span data-ttu-id="e9fc6-132">开关的名称。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-132">The name of the switch.</span></span></param>
        <param name="description"><span data-ttu-id="e9fc6-133">开关说明。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-133">The description for the switch.</span></span></param>
        <summary><span data-ttu-id="e9fc6-134">初始化 <see cref="T:System.Diagnostics.Switch" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-134">Initializes a new instance of the <see cref="T:System.Diagnostics.Switch" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fc6-135">当你创建一个新<xref:System.Diagnostics.Switch>对象、 的值`displayName`参数用来查找初始开关设置。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-135">When you create a new <xref:System.Diagnostics.Switch> object, the value of the `displayName` parameter is used to find initial switch settings.</span></span> <span data-ttu-id="e9fc6-136">默认值为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-136">The default value is an empty string ("").</span></span>  
  
 <span data-ttu-id="e9fc6-137">在 XML 配置文件中，你可以添加交换机和将其值设置、 删除交换机，或清除所有交换机以前由应用程序设置。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-137">Within the XML configuration file, you can add a switch and set its value, remove a switch, or clear all the switches previously set by the application.</span></span> <span data-ttu-id="e9fc6-138">执行应用程序时，则不检测动态更改配置文件。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-138">Dynamic changes to the configuration file are not detected while the application is executing.</span></span> <span data-ttu-id="e9fc6-139">你必须停止并重新启动应用程序，然后对配置文件的更改才会生效。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-139">You must stop and restart an application before changes to the configuration file take effect.</span></span> <span data-ttu-id="e9fc6-140">配置文件的格式应类似下面的示例：</span><span class="sxs-lookup"><span data-stu-id="e9fc6-140">The configuration file should be formatted like the following example:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="10" />  
      <add name="myNewSwitch" value="20" />  
      <remove name="mySwitch" />  
      <clear/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e9fc6-141">若要设置开关的值，设置<see cref="P:System.Diagnostics.Switch.SwitchSetting" />构造函数中的属性。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-141">To set the value of the switch, set the <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> property in the constructor.</span></span></para>
        </block>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.SourceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Switch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Switch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="defaultSwitchValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName"><span data-ttu-id="e9fc6-142">开关的名称。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-142">The name of the switch.</span></span></param>
        <param name="description"><span data-ttu-id="e9fc6-143">切换描述。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-143">The description of the switch.</span></span></param>
        <param name="defaultSwitchValue"><span data-ttu-id="e9fc6-144">开关的默认值。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-144">The default value for the switch.</span></span></param>
        <summary><span data-ttu-id="e9fc6-145">通过指定开关的显示名称、说明和默认值来初始化 <see cref="T:System.Diagnostics.Switch" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-145">Initializes a new instance of the <see cref="T:System.Diagnostics.Switch" /> class, specifying the display name, description, and default value for the switch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fc6-146">`displayName`参数用于设置的值<xref:System.Diagnostics.Switch.DisplayName%2A>属性，与`description`参数用于设置的值<xref:System.Diagnostics.Switch.Description%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-146">The `displayName` parameter is used to set the value of the <xref:System.Diagnostics.Switch.DisplayName%2A> property, and the `description` parameter is use to set the value of the <xref:System.Diagnostics.Switch.Description%2A> property.</span></span> <span data-ttu-id="e9fc6-147">`defaultSwitchValue`参数是开关的值，如果<xref:System.Diagnostics.Switch.Value%2A>通过代码或通过配置文件特性未设置属性。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-147">The `defaultSwitchValue` parameter is the value for the switch if the <xref:System.Diagnostics.Switch.Value%2A> property is not set by code or by the configuration file attribute.</span></span> <span data-ttu-id="e9fc6-148">请参阅<xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29>重载的其他信息。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-148">See the <xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29> overload for additional information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fc6-149">获取在应用程序配置文件中定义的自定义开关特性。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-149">Gets the custom switch attributes defined in the application configuration file.</span></span></summary>
        <value><span data-ttu-id="e9fc6-150">一个 <see cref="T:System.Collections.Specialized.StringDictionary" />，包含跟踪开关的自定义特性（不区分大小写）。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-150">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the case-insensitive custom attributes for the trace switch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fc6-151"><xref:System.Diagnostics.Switch.Attributes%2A>属性标识应用程序的配置文件中引用的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-151">The <xref:System.Diagnostics.Switch.Attributes%2A> property identifies the custom attributes referenced in the application's configuration file.</span></span> <span data-ttu-id="e9fc6-152">未引用的自定义属性不会枚举。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-152">Unreferenced custom attributes are not enumerated.</span></span> <span data-ttu-id="e9fc6-153">继承自的类<xref:System.Diagnostics.Switch>类可以通过重写中添加自定义特性<xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>方法并返回的自定义属性名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-153">Classes that inherit from the <xref:System.Diagnostics.Switch> class can add custom attributes by overriding the <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> method and returning a string array of custom attribute names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9fc6-154">下面的代码示例演示如何显示无法识别的自定义开关特性。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-154">The following code sample shows how to display the unrecognized attributes for a custom switch.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#15)]
 [!code-vb[System.Diagnostics.TraceSource#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fc6-155">获取开关说明。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-155">Gets a description of the switch.</span></span></summary>
        <value><span data-ttu-id="e9fc6-156">切换描述。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-156">The description of the switch.</span></span> <span data-ttu-id="e9fc6-157">默认值为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-157">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fc6-158">此属性应指示开关的功能；例如，“为目录观察程序组件启用跟踪”。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-158">This property should indicate the function of the switch; for example, "Enables tracing for a directory watcher component."</span></span> <span data-ttu-id="e9fc6-159">此值由 `descriptor` 构造函数中的 <xref:System.Diagnostics.Switch.%23ctor%2A> 参数设置。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-159">The value is set by the `descriptor` parameter in the <xref:System.Diagnostics.Switch.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fc6-160">获取用于标识该开关的名称。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-160">Gets a name used to identify the switch.</span></span></summary>
        <value><span data-ttu-id="e9fc6-161">用于标识该开关的名称。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-161">The name used to identify the switch.</span></span> <span data-ttu-id="e9fc6-162">默认值为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-162">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fc6-163">当你创建一个新<xref:System.Diagnostics.Switch>对象，<xref:System.Diagnostics.Switch.DisplayName%2A>查找初始交换机设置。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-163">When you create a new <xref:System.Diagnostics.Switch> object, the <xref:System.Diagnostics.Switch.DisplayName%2A> finds initial switch settings.</span></span> <span data-ttu-id="e9fc6-164">有关详细信息，请参阅<xref:System.Diagnostics.Switch.%23ctor%2A>构造函数和[如何： 创建、 初始化和配置跟踪开关](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md)Visual Studio 文档中。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-164">For more information, see the <xref:System.Diagnostics.Switch.%23ctor%2A> constructor and [How to: Create, Initialize and Configure Trace Switches](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) in the Visual Studio documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9fc6-165">下面的代码示例显示了由跟踪源使用的交换机的显示名称。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-165">The following code example displays the display name for the switch in use by a trace source.</span></span>  <span data-ttu-id="e9fc6-166">此代码示例是可在更大的示例的一部分<xref:System.Diagnostics.TraceSource>类摘要。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-166">This code example is part of a larger example that can be found in the <xref:System.Diagnostics.TraceSource> class summary.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#10)]
 [!code-vb[System.Diagnostics.TraceSource#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9fc6-167">获取开关支持的自定义特性。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-167">Gets the custom attributes supported by the switch.</span></span></summary>
        <returns><span data-ttu-id="e9fc6-168">一个字符串数组，包含开关所支持的自定义特性的名称；如果该开关不支持任何自定义特性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-168">A string array that contains the names of the custom attributes supported by the switch, or <see langword="null" /> if there no custom attributes are supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fc6-169">默认实现<xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>方法返回`null`。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-169">The default implementation for the <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> method returns `null`.</span></span> <span data-ttu-id="e9fc6-170">如果在配置文件中添加了开关和自定义属性指定，而且不包含在返回的字符串数组<xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>、<xref:System.Configuration.ConfigurationException>交换机加载时引发。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-170">If a switch is added in a configuration file and custom attributes are specified that are not included in the string array returned by <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>, a <xref:System.Configuration.ConfigurationException> is thrown when the switch is loaded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9fc6-171">下面的代码示例演示如何重写的<xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>自定义的开关的方法。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-171">The following code sample shows an override of the <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A> method for a custom switch.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#34)]
 [!code-vb[System.Diagnostics.TraceSource#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#34)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e9fc6-172">从继承时<see cref="T:System.Diagnostics.Switch" />类或派生的类，你可以重写<see cref="M:System.Diagnostics.Switch.GetSupportedAttributes" />方法来为您的类提供自定义属性。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-172">When inheriting from the <see cref="T:System.Diagnostics.Switch" /> class or a derived class, you can override the <see cref="M:System.Diagnostics.Switch.GetSupportedAttributes" /> method to provide custom attributes for your class.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSwitchSettingChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSwitchSettingChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSwitchSettingChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.OnSwitchSettingChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSwitchSettingChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSwitchSettingChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9fc6-173">当 <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> 属性更改时调用。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-173">Invoked when the <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fc6-174"><xref:System.Diagnostics.Switch.OnSwitchSettingChanged%2A> 调用首次交换机读取<xref:System.Diagnostics.Switch.SwitchSetting%2A>从配置文件值和调用再次每次更改开关的值。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-174"><xref:System.Diagnostics.Switch.OnSwitchSettingChanged%2A> is invoked the first time a switch reads the <xref:System.Diagnostics.Switch.SwitchSetting%2A> value from the configuration file and is invoked again each time the switch's value is changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Switch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9fc6-175">当 <see cref="P:System.Diagnostics.Switch.Value" /> 属性更改时调用。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-175">Invoked when the <see cref="P:System.Diagnostics.Switch.Value" /> property is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fc6-176">默认实现将新值的分析<xref:System.Diagnostics.Switch.Value%2A>属性设置为一个整数值，它用于设置<xref:System.Diagnostics.Switch.SwitchSetting%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-176">The default implementation parses the new value of the <xref:System.Diagnostics.Switch.Value%2A> property to an integer value which it uses to set the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e9fc6-177">你应重写此方法并使用设置相应的转换<see cref="P:System.Diagnostics.Switch.SwitchSetting" />你的交换机的值。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-177">You should override this method and use a conversion that sets the appropriate <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> value for your switch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SwitchSetting">
      <MemberSignature Language="C#" Value="protected int SwitchSetting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SwitchSetting" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.SwitchSetting" />
      <MemberSignature Language="VB.NET" Value="Protected Property SwitchSetting As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int SwitchSetting { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fc6-178">获取或设置此开关的当前设置。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-178">Gets or sets the current setting for this switch.</span></span></summary>
        <value><span data-ttu-id="e9fc6-179">此开关的当前设置。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-179">The current setting for this switch.</span></span> <span data-ttu-id="e9fc6-180">默认值为零。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-180">The default is zero.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="protected string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Switch.Value" />
      <MemberSignature Language="VB.NET" Value="Protected Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fc6-181">获取或设置开关的值。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-181">Gets or sets the value of the switch.</span></span></summary>
        <value><span data-ttu-id="e9fc6-182">一个表示开关的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-182">A string representing the value of the switch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fc6-183"><xref:System.Diagnostics.Switch.OnValueChanged%2A>时调用方法的值<xref:System.Diagnostics.Switch.Value%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-183">The <xref:System.Diagnostics.Switch.OnValueChanged%2A> method is called when the value of the <xref:System.Diagnostics.Switch.Value%2A> property is changed.</span></span> <span data-ttu-id="e9fc6-184"><xref:System.Diagnostics.Switch.OnValueChanged%2A>方法分析此属性的值，并将其转换为整数值，然后将其用于将设置<xref:System.Diagnostics.Switch.SwitchSetting%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-184">The <xref:System.Diagnostics.Switch.OnValueChanged%2A> method parses the value of this property and converts it to an integer value, which is then used to set the <xref:System.Diagnostics.Switch.SwitchSetting%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="e9fc6-185">该值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-185">The value is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="e9fc6-186">或</span><span class="sxs-lookup"><span data-stu-id="e9fc6-186">-or-</span></span>  
  
 <span data-ttu-id="e9fc6-187">该值不是仅由一个可选负号后跟一系列从 0 到 9 的数字组成的。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-187">The value does not consist solely of an optional negative sign followed by a sequence of digits ranging from 0 to 9.</span></span>  
  
 <span data-ttu-id="e9fc6-188">或</span><span class="sxs-lookup"><span data-stu-id="e9fc6-188">-or-</span></span>  
  
 <span data-ttu-id="e9fc6-189">该值表示小于 <see cref="F:System.Int32.MinValue" /> 或大于 <see cref="F:System.Int32.MaxValue" /> 的数字。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-189">The value represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e9fc6-190">应重写<see cref="M:System.Diagnostics.Switch.OnValueChanged" />方法并提供设置相应的转换运算<see cref="P:System.Diagnostics.Switch.SwitchSetting" />你的交换机的值。</span><span class="sxs-lookup"><span data-stu-id="e9fc6-190">You should override the <see cref="M:System.Diagnostics.Switch.OnValueChanged" /> method and provide a conversion operation that sets the appropriate <see cref="P:System.Diagnostics.Switch.SwitchSetting" /> value for your switch.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>