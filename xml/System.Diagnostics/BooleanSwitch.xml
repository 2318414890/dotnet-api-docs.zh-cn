<Type Name="BooleanSwitch" FullName="System.Diagnostics.BooleanSwitch">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b58e7d34a5fb79c78b3d636524b0f55025244987" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48707825" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BooleanSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BooleanSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.BooleanSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class BooleanSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class BooleanSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type BooleanSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.SwitchLevel(typeof(System.Boolean))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供简单的打开/关闭开关来控制调试和跟踪输出。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 布尔型跟踪开关可用于启用或禁用基于其重要性的消息。 使用<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>属性来获取开关的当前值。  
  
 可以启用或禁用<xref:System.Diagnostics.BooleanSwitch>通过应用程序配置文件，然后使用已配置的<xref:System.Diagnostics.BooleanSwitch>在应用程序中的值。 另外，可以创建<xref:System.Diagnostics.BooleanSwitch>在您的代码和集<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>属性直接以检测特定部分的代码。  
  
 若要配置<xref:System.Diagnostics.BooleanSwitch>，编辑你的应用程序的名称对应的配置文件。 在此文件中，可以添加或删除一个开关，设置开关的值，或清除所有交换机之前设置应用程序。 配置文件的格式应类似下面的示例。  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1"/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 此示例配置节定义<xref:System.Diagnostics.BooleanSwitch>与<xref:System.Diagnostics.Switch.DisplayName%2A>属性设置为`mySwitch`并且<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>值设置为`true`。 在应用程序中，可以使用已配置的开关值，通过创建<xref:System.Diagnostics.BooleanSwitch>具有相同的名称，如下面的代码示例中所示。  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/remarks.cs#2)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/remarks.vb#2)]  
  
 默认情况下，<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>属性使用配置文件中指定的值设置。 值为 0，则设置配置开关<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>属性设置为`false`; 以非零值来设置配置开关<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>属性设置为`true`。 如果<xref:System.Diagnostics.BooleanSwitch>构造函数不能在配置文件中，查找初始开关设置<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>属性的新开关设置为`false`默认情况下。  
  
 必须启用跟踪或调试要使用交换机。 下面的语法是特定的编译器。 如果使用除 C# 或 Visual Basic 编译器，请参阅您的编译器的文档。  
  
-   若要启用调试 C# 中，添加`/d:DEBUG`到编译器命令行编译代码，也可以添加标志`#define DEBUG`到你的文件的顶部。 在 Visual Basic 中，添加`/d:DEBUG=True`到编译器命令行的标志。  
  
-   若要启用 C# 中的跟踪，请添加`/d:TRACE`到编译器命令行编译代码，或添加时标志`#define TRACE`到你的文件的顶部。 在 Visual Basic 中，添加`/d:TRACE=True`到编译器命令行的标志。  
  
> [!NOTE]
>  这些调试和跟踪编译器开关时将不再需要使用<xref:System.Diagnostics.BooleanSwitch>中隔离的类。 它们仅需要结合<xref:System.Diagnostics.Trace>或<xref:System.Diagnostics.Debug>有条件地编译的方法。  
  
 检测应用程序的详细信息，请参阅<xref:System.Diagnostics.Debug>和<xref:System.Diagnostics.Trace>。 有关配置和使用跟踪开关的详细信息，请参阅[跟踪开关](~/docs/framework/debug-trace-profile/trace-switches.md)。  
  
> [!NOTE]
>  若要提高性能，可以使<xref:System.Diagnostics.BooleanSwitch>成员`static`在类中。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Diagnostics.BooleanSwitch>并使用该开关确定是否要打印一条错误消息。 在类级别上创建交换机。 `Main`方法将传递到其位置`MyMethod`，其输出一条错误消息，并发生错误的位置。  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Diagnostics.BooleanSwitch" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">要在用户界面上显示的名称。</param>
        <param name="description">切换描述。</param>
        <summary>使用指定的显示名称和说明初始化 <see cref="T:System.Diagnostics.BooleanSwitch" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当您创建<xref:System.Diagnostics.BooleanSwitch>，则`displayName`参数用来查找初始交换机设置。 如果构造函数找不到初始设置<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>属性设置为`false`（禁用）。  
  
 若要设置的级别应用<xref:System.Diagnostics.BooleanSwitch>，编辑配置文件与应用程序的名称相对应。 在此文件中，可以添加一个开关和将其值设置、 删除一个开关，或清除所有交换机以前由应用程序设置。 配置文件的格式应类似下面的示例：  
  
```xml  
<configuration>  
    <system.diagnostics>  
       <switches>  
          <add name="mySwitch" value="10" />  
          <add name="myNewSwitch" value="20" />  
          <remove name="mySwitch" />  
          <clear/>  
       </switches>  
    </system.diagnostics>  
 </configuration>  
```  
  
> [!NOTE]
>  创建的开关均应为`static`。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Diagnostics.BooleanSwitch>并使用该开关确定是否要打印一条错误消息。 在类级别上创建交换机。 `Main`方法将传递到其位置`MyMethod`，其输出一条错误消息，并发生错误的位置。  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="defaultSwitchValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">要显示在用户界面上的名称。</param>
        <param name="description">切换描述。</param>
        <param name="defaultSwitchValue">开关的默认值。</param>
        <summary>用指定的显示名称、说明和默认开关值初始化 <see cref="T:System.Diagnostics.BooleanSwitch" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `displayName`参数用于设置的值<xref:System.Diagnostics.Switch.DisplayName%2A>属性，并`description`参数用于设置的值<xref:System.Diagnostics.Switch.Description%2A>属性。 `defaultSwitchValue`参数是保存为字段，用于初始化<xref:System.Diagnostics.Switch.Value%2A>上第一次引用的属性。 有关构造函数使用的详细信息，请参阅<xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29>构造函数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个指示开关已启用还是已禁用的值。</summary>
        <value>如果开关已启用，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，此字段设置为`false`（禁用）。 若要启用此开关，此字段的值分配为`true`。 若要禁用此开关，分配到值`false`。  此属性的值由派生类的属性的值<xref:System.Diagnostics.Switch.SwitchSetting%2A>。  
  
> [!NOTE]
>  此方法使用<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>标志，用于防止不受信任的代码中调用; 仅直接调用方需要具有<xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType>权限。 如果你的代码可以从部分受信任代码调用，不传递的用户输入<xref:System.Runtime.InteropServices.Marshal>类而不进行验证的方法。  
  
   
  
## Examples  
 下面的代码示例创建<xref:System.Diagnostics.BooleanSwitch>并使用该开关确定是否要打印一条错误消息。 在类级别上创建交换机。 `Main`方法将传递到其位置`MyMethod`，这将打印一条错误消息和错误发生的位置。  
  
 [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">调用方没有正确的权限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用于与非托管代码的操作。 要求值<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;关联枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</permission>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="booleanSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定 <see cref="P:System.Diagnostics.Switch.Value" /> 属性的新值是否可以被解析为一个布尔值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.BooleanSwitch.OnValueChanged%2A>方法确定新值是否为布尔值 （"false"或"true"） 的有效字符串表示形式。 因此，该方法将设置如果<xref:System.Diagnostics.Switch.SwitchSetting%2A>属性设置为 0 或 1。  否则，调用基方法，它将字符串值转换为整数值，然后将其用于设置<xref:System.Diagnostics.Switch.SwitchSetting%2A>属性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>