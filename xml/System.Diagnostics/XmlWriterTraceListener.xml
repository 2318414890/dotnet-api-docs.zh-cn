<Type Name="XmlWriterTraceListener" FullName="System.Diagnostics.XmlWriterTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f5dee81413f1eca24d18db1320164d7c7eca4132" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37767168" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlWriterTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlWriterTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.XmlWriterTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlWriterTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type XmlWriterTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="31f72-101">将跟踪或调试输出作为 XML 编码的数据定向到 <see cref="T:System.IO.TextWriter" /> 或 <see cref="T:System.IO.Stream" />（如 <see cref="T:System.IO.FileStream" />）。</span>
      <span class="sxs-lookup">
        <span data-stu-id="31f72-101">Directs tracing or debugging output as XML-encoded data to a <see cref="T:System.IO.TextWriter" /> or to a <see cref="T:System.IO.Stream" />, such as a <see cref="T:System.IO.FileStream" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="31f72-102">必须具有非托管代码权限来创建的实例<xref:System.Diagnostics.XmlWriterTraceListener>类。</span><span class="sxs-lookup"><span data-stu-id="31f72-102">You must have unmanaged code permission to create an instance of the <xref:System.Diagnostics.XmlWriterTraceListener> class.</span></span>  
  
 <span data-ttu-id="31f72-103"><xref:System.Diagnostics.XmlWriterTraceListener>类将跟踪和调试信息的 XML 编码的文本流。</span><span class="sxs-lookup"><span data-stu-id="31f72-103">The <xref:System.Diagnostics.XmlWriterTraceListener> class converts tracing and debugging information into an XML-encoded text stream.</span></span> <span data-ttu-id="31f72-104">将 XML 输出的说明所示各表所述。</span><span class="sxs-lookup"><span data-stu-id="31f72-104">The description of the XML output is shown in the tables that follow.</span></span> <span data-ttu-id="31f72-105">可以使用[Service Trace Viewer Tool (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129)来显示 XML 输出。</span><span class="sxs-lookup"><span data-stu-id="31f72-105">You can use the [Service Trace Viewer Tool (SvcTraceViewer.exe)](http://go.microsoft.com/fwlink/p/?LinkId=240129) to display the XML output.</span></span>  
  
 <span data-ttu-id="31f72-106">可以启用或禁用<xref:System.Diagnostics.XmlWriterTraceListener>通过应用程序配置文件，然后使用已配置的<xref:System.Diagnostics.XmlWriterTraceListener>在应用程序中。</span><span class="sxs-lookup"><span data-stu-id="31f72-106">You can enable or disable an <xref:System.Diagnostics.XmlWriterTraceListener> through the application configuration file and then use the configured <xref:System.Diagnostics.XmlWriterTraceListener> in your application.</span></span> <span data-ttu-id="31f72-107">另外，可以创建<xref:System.Diagnostics.XmlWriterTraceListener>在代码中。</span><span class="sxs-lookup"><span data-stu-id="31f72-107">Alternately, you can create an <xref:System.Diagnostics.XmlWriterTraceListener> in your code.</span></span>  
  
 <span data-ttu-id="31f72-108">若要配置<xref:System.Diagnostics.XmlWriterTraceListener>，编辑你的应用程序的名称对应的配置文件。</span><span class="sxs-lookup"><span data-stu-id="31f72-108">To configure an <xref:System.Diagnostics.XmlWriterTraceListener>, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="31f72-109">在此文件中，可以添加或删除侦听器、 为侦听器设置的属性或删除侦听器。</span><span class="sxs-lookup"><span data-stu-id="31f72-109">In this file, you can add or remove a listener, set the properties for a listener, or remove listeners.</span></span> <span data-ttu-id="31f72-110">配置文件的格式应类似下面的示例。</span><span class="sxs-lookup"><span data-stu-id="31f72-110">The configuration file should be formatted like the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="xmlListener"   
          type="System.Diagnostics.XmlWriterTraceListener"   
          initializeData="xmlOutput.xml"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="31f72-111"><xref:System.Diagnostics.XmlWriterTraceListener>类继承<xref:System.Diagnostics.TraceListener.Filter%2A>属性从基类<xref:System.Diagnostics.TraceListener>。</span><span class="sxs-lookup"><span data-stu-id="31f72-111">The <xref:System.Diagnostics.XmlWriterTraceListener> class inherits the <xref:System.Diagnostics.TraceListener.Filter%2A> property from the base class <xref:System.Diagnostics.TraceListener>.</span></span>  <span data-ttu-id="31f72-112"><xref:System.Diagnostics.TraceListener.Filter%2A>属性允许另一级别的跟踪输出在侦听器的筛选。</span><span class="sxs-lookup"><span data-stu-id="31f72-112">The <xref:System.Diagnostics.TraceListener.Filter%2A> property allows an additional level of trace output filtering at the listener.</span></span>  <span data-ttu-id="31f72-113">如果存在，筛选器`Trace`方法的跟踪侦听器调用<xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>筛选器以确定是否发出跟踪的方法。</span><span class="sxs-lookup"><span data-stu-id="31f72-113">If there is a filter present, the `Trace` methods of the trace listener call the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method of the filter to determine whether to emit the trace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31f72-114">如果尝试写入到正在使用中的文件或不可用，文件名称自动作为前缀的 guid。</span><span class="sxs-lookup"><span data-stu-id="31f72-114">If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31f72-115">侦听器方法旨在由方法调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类。</span><span class="sxs-lookup"><span data-stu-id="31f72-115">Listener methods are intended to be called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes.</span></span>  <span data-ttu-id="31f72-116">侦听器方法不应直接从应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="31f72-116">The listener methods are not intended to be called directly from application code.</span></span> <span data-ttu-id="31f72-117"><xref:System.Diagnostics.XmlWriterTraceListener>侦听器主要是以供<xref:System.Diagnostics.TraceSource>类。</span><span class="sxs-lookup"><span data-stu-id="31f72-117">The <xref:System.Diagnostics.XmlWriterTraceListener> listener is primarily intended for use by the <xref:System.Diagnostics.TraceSource> class.</span></span> <span data-ttu-id="31f72-118"><xref:System.Diagnostics.XmlWriterTraceListener.Write%2A>和<xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A>可以调用方法<xref:System.Diagnostics.Trace>并<xref:System.Diagnostics.Debug>类和默认值提供的 XML 元素的<xref:System.Diagnostics.Trace>和<xref:System.Diagnostics.Debug>不提供的值。</span><span class="sxs-lookup"><span data-stu-id="31f72-118">The <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> and <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> methods can be called by the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> classes, and default values are provided for the XML elements that <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> do not supply values for.</span></span>  
  
 <span data-ttu-id="31f72-119">下表介绍的元素和属性的 XML 输出。</span><span class="sxs-lookup"><span data-stu-id="31f72-119">The following table describes the elements and attributes of the XML output.</span></span>  
  
|<span data-ttu-id="31f72-120">元素</span><span class="sxs-lookup"><span data-stu-id="31f72-120">Element</span></span>|<span data-ttu-id="31f72-121">特性</span><span class="sxs-lookup"><span data-stu-id="31f72-121">Attributes</span></span>|<span data-ttu-id="31f72-122">输出</span><span class="sxs-lookup"><span data-stu-id="31f72-122">Output</span></span>|<span data-ttu-id="31f72-123">说明</span><span class="sxs-lookup"><span data-stu-id="31f72-123">Notes</span></span>|  
|-------------|----------------|------------|-----------|  
|`CallStack`|<span data-ttu-id="31f72-124">无</span><span class="sxs-lookup"><span data-stu-id="31f72-124">None</span></span>|<span data-ttu-id="31f72-125">取决于是否存在<xref:System.Diagnostics.TraceOptions.Callstack>标记中<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="31f72-125">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Callstack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="31f72-126">特殊字符如 > 或 < 使用转义序列替换。</span><span class="sxs-lookup"><span data-stu-id="31f72-126">Special characters such as > or < are replaced with escape sequences.</span></span> <span data-ttu-id="31f72-127">请参阅后面的转义的字符转换表。</span><span class="sxs-lookup"><span data-stu-id="31f72-127">See the escaped character translation table that follows.</span></span>|  
|`Computer`|<span data-ttu-id="31f72-128">无</span><span class="sxs-lookup"><span data-stu-id="31f72-128">None</span></span>|<span data-ttu-id="31f72-129">始终存在。</span><span class="sxs-lookup"><span data-stu-id="31f72-129">Always present.</span></span>|<span data-ttu-id="31f72-130"><xref:System.Environment.MachineName%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="31f72-130">The value of the <xref:System.Environment.MachineName%2A> property.</span></span>|  
|`Correlation`|`ActivityID`|<span data-ttu-id="31f72-131">始终存在</span><span class="sxs-lookup"><span data-stu-id="31f72-131">Always present</span></span>|<span data-ttu-id="31f72-132">如果未指定，默认值为一个空的 GUID。</span><span class="sxs-lookup"><span data-stu-id="31f72-132">If not specified, the default is an empty GUID.</span></span>|  
||`RelatedActivityID`|<span data-ttu-id="31f72-133">取决于是否存在`relatedActivityId`跟踪方法调用中的参数。</span><span class="sxs-lookup"><span data-stu-id="31f72-133">Depends on the presence of the `relatedActivityId` parameter in the Trace method call.</span></span>|<span data-ttu-id="31f72-134"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> 方法的 `relatedActivityId` 参数。</span><span class="sxs-lookup"><span data-stu-id="31f72-134">The `relatedActivityId` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method.</span></span>|  
|`DataItem`|<span data-ttu-id="31f72-135">无</span><span class="sxs-lookup"><span data-stu-id="31f72-135">None</span></span>|<span data-ttu-id="31f72-136">取决于`data`参数的<xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="31f72-136">Depends on the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method.</span></span>|<span data-ttu-id="31f72-137">此元素可包含的元素或一个元素的数组，因此值编写为一系列`DataItem`节点下的`TraceData`元素。</span><span class="sxs-lookup"><span data-stu-id="31f72-137">This element can contain an array of elements or one element, so the values are written as a set of `DataItem` nodes under the `TraceData` element.</span></span><br /><br /> <span data-ttu-id="31f72-138">数据输出使用`ToString`传入的数据对象的方法。</span><span class="sxs-lookup"><span data-stu-id="31f72-138">The data output uses the `ToString` method of the passed-in data objects.</span></span>|  
|`EventID`|<span data-ttu-id="31f72-139">无</span><span class="sxs-lookup"><span data-stu-id="31f72-139">None</span></span>|<span data-ttu-id="31f72-140">始终存在。</span><span class="sxs-lookup"><span data-stu-id="31f72-140">Always present.</span></span>|<span data-ttu-id="31f72-141">参数输入 (`id`)。</span><span class="sxs-lookup"><span data-stu-id="31f72-141">Parameter input (`id`).</span></span>|  
|`Execution`|`ProcessName`|<span data-ttu-id="31f72-142">始终存在。</span><span class="sxs-lookup"><span data-stu-id="31f72-142">Always present.</span></span>|<span data-ttu-id="31f72-143">从<xref:System.Diagnostics.TraceEventCache>。</span><span class="sxs-lookup"><span data-stu-id="31f72-143">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
||`ProcessID`|<span data-ttu-id="31f72-144">始终存在。</span><span class="sxs-lookup"><span data-stu-id="31f72-144">Always present.</span></span>|<span data-ttu-id="31f72-145">从<xref:System.Diagnostics.TraceEventCache>。</span><span class="sxs-lookup"><span data-stu-id="31f72-145">From the <xref:System.Diagnostics.TraceEventCache>.</span></span> <span data-ttu-id="31f72-146">在 Windows 98 和 Windows Me 操作系统上，如果`ProcessID`大于的 2,147,483,647 它是负数的正值表示形式并应将转换为获取正确的进程标识符。</span><span class="sxs-lookup"><span data-stu-id="31f72-146">On Windows 98 and Windows Me operating systems, if `ProcessID` is greater than 2,147,483,647 it is a positive representation of a negative number and should be converted to obtain the correct process identifier.</span></span>|  
||`ThreadID`|<span data-ttu-id="31f72-147">始终存在。</span><span class="sxs-lookup"><span data-stu-id="31f72-147">Always present.</span></span>|<span data-ttu-id="31f72-148">从<xref:System.Diagnostics.TraceEventCache>。</span><span class="sxs-lookup"><span data-stu-id="31f72-148">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Level`|<span data-ttu-id="31f72-149">无</span><span class="sxs-lookup"><span data-stu-id="31f72-149">None</span></span>|<span data-ttu-id="31f72-150">始终存在。</span><span class="sxs-lookup"><span data-stu-id="31f72-150">Always present.</span></span>|<span data-ttu-id="31f72-151">参数输入 (的数值`eventType`)。</span><span class="sxs-lookup"><span data-stu-id="31f72-151">Parameter input (the numeric value of `eventType`).</span></span> <span data-ttu-id="31f72-152">参数值大于 255 的输出形式 255。</span><span class="sxs-lookup"><span data-stu-id="31f72-152">Parameter values greater than 255 are output as 255.</span></span>|  
|`LogicalOperationStack`|<span data-ttu-id="31f72-153">无</span><span class="sxs-lookup"><span data-stu-id="31f72-153">None</span></span>|<span data-ttu-id="31f72-154">取决于是否存在<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>标记中<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="31f72-154">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="31f72-155">不可以有多个逻辑操作，因此值编写为`LogicalOperation`节点下的`LogicalOperationStack`元素。</span><span class="sxs-lookup"><span data-stu-id="31f72-155">There can be more than one logical operation, so the values are written as `LogicalOperation` nodes under the `LogicalOperationStack` element.</span></span>|  
|`Message`|<span data-ttu-id="31f72-156">无</span><span class="sxs-lookup"><span data-stu-id="31f72-156">None</span></span>|<span data-ttu-id="31f72-157">取决于存在跟踪方法调用中的消息。</span><span class="sxs-lookup"><span data-stu-id="31f72-157">Depends on the presence of a message in the Trace method call.</span></span>|<span data-ttu-id="31f72-158">如果未提供格式设置参数，则此元素是将格式化的消息。</span><span class="sxs-lookup"><span data-stu-id="31f72-158">This element is a formatted message if formatting arguments are provided.</span></span>|  
|`Source`|`Name`|<span data-ttu-id="31f72-159">始终存在。</span><span class="sxs-lookup"><span data-stu-id="31f72-159">Always present.</span></span>|<span data-ttu-id="31f72-160">输入的参数。</span><span class="sxs-lookup"><span data-stu-id="31f72-160">Parameter input.</span></span>|  
|`SubType`|`Name`|<span data-ttu-id="31f72-161">始终存在。</span><span class="sxs-lookup"><span data-stu-id="31f72-161">Always present.</span></span>|<span data-ttu-id="31f72-162">输入的参数。</span><span class="sxs-lookup"><span data-stu-id="31f72-162">Parameter input.</span></span>|  
|`TimeCreated`|`SystemTime`|<span data-ttu-id="31f72-163">始终存在。</span><span class="sxs-lookup"><span data-stu-id="31f72-163">Always present.</span></span>|<span data-ttu-id="31f72-164">如果不存在于<xref:System.Diagnostics.TraceEventCache>，默认值为当前的时间。</span><span class="sxs-lookup"><span data-stu-id="31f72-164">If not present in the <xref:System.Diagnostics.TraceEventCache>, the default is the current time.</span></span>|  
|`TimeStamp`|<span data-ttu-id="31f72-165">无</span><span class="sxs-lookup"><span data-stu-id="31f72-165">None</span></span>|<span data-ttu-id="31f72-166">取决于是否存在<xref:System.Diagnostics.TraceOptions.Timestamp>标记中<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="31f72-166">Depends on the presence of the <xref:System.Diagnostics.TraceOptions.Timestamp> flag in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="31f72-167">从<xref:System.Diagnostics.TraceEventCache>。</span><span class="sxs-lookup"><span data-stu-id="31f72-167">From the <xref:System.Diagnostics.TraceEventCache>.</span></span>|  
|`Type`|<span data-ttu-id="31f72-168">无</span><span class="sxs-lookup"><span data-stu-id="31f72-168">None</span></span>|<span data-ttu-id="31f72-169">始终存在。</span><span class="sxs-lookup"><span data-stu-id="31f72-169">Always present.</span></span>|<span data-ttu-id="31f72-170">值始终为 3。</span><span class="sxs-lookup"><span data-stu-id="31f72-170">Always the value 3.</span></span>|  
  
 <span data-ttu-id="31f72-171">下表显示 XML 输出中转义的字符。</span><span class="sxs-lookup"><span data-stu-id="31f72-171">The following table shows the characters that are escaped in the XML output.</span></span> <span data-ttu-id="31f72-172">转义发生在所有元素和特性除外`DataItem`元素，如果该对象传递给不进行转义`data`的参数<xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>方法是<xref:System.Xml.XPath.XPathNavigator>对象。</span><span class="sxs-lookup"><span data-stu-id="31f72-172">Escaping occurs in all the elements and attributes with the exception of the `DataItem` element, which is not escaped if the object passed to the `data` parameter of the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method is an <xref:System.Xml.XPath.XPathNavigator> object.</span></span> <span data-ttu-id="31f72-173">如果<xref:System.Xml.XPath.XPathNavigator>用于数据对象，<xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A>调用方法和作为非转义的数据跟踪整个根节点。</span><span class="sxs-lookup"><span data-stu-id="31f72-173">If an <xref:System.Xml.XPath.XPathNavigator> is used for the data object, the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method is called and the entire root node is traced as unescaped data.</span></span>  
  
|<span data-ttu-id="31f72-174">转义字符</span><span class="sxs-lookup"><span data-stu-id="31f72-174">Escaped character</span></span>|<span data-ttu-id="31f72-175">“值”</span><span class="sxs-lookup"><span data-stu-id="31f72-175">Value</span></span>|  
|-----------------------|-----------|  
|&|&amp;|  
|\<|&lt;|  
|>|&gt;|  
|<span data-ttu-id="31f72-176">"</span><span class="sxs-lookup"><span data-stu-id="31f72-176">"</span></span>|&quot;|  
|\|&apos;|  
|<span data-ttu-id="31f72-177">0xD</span><span class="sxs-lookup"><span data-stu-id="31f72-177">0xD</span></span>|<span data-ttu-id="31f72-178">&\#xD;</span><span class="sxs-lookup"><span data-stu-id="31f72-178">&\#xD;</span></span>|  
|<span data-ttu-id="31f72-179">0xA</span><span class="sxs-lookup"><span data-stu-id="31f72-179">0xA</span></span>|<span data-ttu-id="31f72-180">&\#xA;</span><span class="sxs-lookup"><span data-stu-id="31f72-180">&\#xA;</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="31f72-181">下面的代码示例演示如何使用<xref:System.Diagnostics.XmlWriterTraceListener>类将转义和非转义的数据写入文件日志。</span><span class="sxs-lookup"><span data-stu-id="31f72-181">The following code example shows the use of the <xref:System.Diagnostics.XmlWriterTraceListener> class to write both escaped and non-escaped data to file logs.</span></span>  
  
 [!code-csharp[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/VB/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="31f72-182">表示调用非托管的代码的能力。</span>
      <span class="sxs-lookup">
        <span data-stu-id="31f72-182">for the ability to call unmanaged code.</span>
      </span>
      <span data-ttu-id="31f72-183">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="31f72-183">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
      </span>
    </permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31f72-184">初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-184">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="31f72-185">
            <see cref="T:System.IO.Stream" />，它表示跟踪侦听器写入的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-185">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-186">通过将指定的流用作调试和跟踪输出的接收者来初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-186">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified stream as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-187"><xref:System.Diagnostics.TraceListener.Name%2A>属性初始化为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="31f72-187">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31f72-188">
            <paramref name="stream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-188">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-189">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-189">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-190">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-190">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="31f72-191">
            <see cref="T:System.IO.TextWriter" />，它接收来自跟踪侦听器的输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-191">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-192">通过将指定的编写器用作调试和跟踪输出的接收者来初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-192">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class using the specified writer as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-193"><xref:System.Diagnostics.TraceListener.Name%2A>属性初始化为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="31f72-193">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31f72-194">
            <paramref name="writer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-194">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-195">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-195">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-196">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-196">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="31f72-197">要写入的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-197">The name of the file to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-198">通过将指定的文件用作调试和跟踪输出的接收者来初始化 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-198">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class, using the specified file as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-199">此构造函数初始化的新实例<xref:System.IO.StreamWriter>类，指定路径上指定的文件使用<xref:System.Text.Encoding.UTF8%2A>编码。</span><span class="sxs-lookup"><span data-stu-id="31f72-199">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="31f72-200">如果该文件存在，则将它追加到。</span><span class="sxs-lookup"><span data-stu-id="31f72-200">If the file exists, it is appended to.</span></span> <span data-ttu-id="31f72-201">如果该文件不存在，被创建一个新文件。</span><span class="sxs-lookup"><span data-stu-id="31f72-201">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31f72-202">若要减少可能出现异常，可能导致无效输出所有字符均都替换"？"字符。</span><span class="sxs-lookup"><span data-stu-id="31f72-202">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="31f72-203"><xref:System.Diagnostics.TraceListener.Name%2A>属性初始化为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="31f72-203">The <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31f72-204">
            <paramref name="filename" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-204">
              <paramref name="filename" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-205">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-205">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-206">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-206">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (stream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="31f72-207">
            <see cref="T:System.IO.Stream" />，它表示跟踪侦听器写入的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-207">A <see cref="T:System.IO.Stream" /> that represents the stream the trace listener writes to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="31f72-208">新实例的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-208">The name of the new instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-209">通过将指定的流用作调试和跟踪输出的接收者来初始化具有指定名称的 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-209">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified stream as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-210">此构造函数初始化<xref:System.Diagnostics.TraceListener.Name%2A>属性设置为`name`参数值或为空字符串 ("") 如果`name`参数是`null`。</span><span class="sxs-lookup"><span data-stu-id="31f72-210">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="31f72-211">名称可以用作到索引<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>要以编程方式更改侦听器的属性集合。</span><span class="sxs-lookup"><span data-stu-id="31f72-211">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="31f72-212">例如，下面的代码设置<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>的实例属性<xref:System.Diagnostics.XmlWriterTraceListener>其<xref:System.Diagnostics.TraceListener.Name%2A>属性是"xmlListener"。</span><span class="sxs-lookup"><span data-stu-id="31f72-212">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31f72-213">
            <paramref name="stream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-213">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-214">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-214">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-215">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-215">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (writer, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="31f72-216">
            <see cref="T:System.IO.TextWriter" />，它接收来自跟踪侦听器的输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-216">A <see cref="T:System.IO.TextWriter" /> that receives the output from the trace listener.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="31f72-217">新实例的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-217">The name of the new instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-218">通过将指定的编写器用作调试和跟踪输出的接收者来初始化具有指定名称的 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-218">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified writer as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-219">此构造函数初始化<xref:System.Diagnostics.TraceListener.Name%2A>属性设置为`name`参数值或为空字符串 ("") 如果`name`参数是`null`。</span><span class="sxs-lookup"><span data-stu-id="31f72-219">This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="31f72-220">名称可以用作到索引<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>要以编程方式更改侦听器的属性集合。</span><span class="sxs-lookup"><span data-stu-id="31f72-220">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="31f72-221">例如，下面的代码设置<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>的实例属性<xref:System.Diagnostics.XmlWriterTraceListener>其<xref:System.Diagnostics.TraceListener.Name%2A>属性是"xmlListener"。</span><span class="sxs-lookup"><span data-stu-id="31f72-221">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31f72-222">
            <paramref name="writer" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-222">
              <paramref name="writer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-223">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-223">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-224">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-224">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (filename, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="31f72-225">要写入的文件的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-225">The name of the file to write to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="31f72-226">新实例的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-226">The name of the new instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-227">通过将指定的文件用作调试和跟踪输出的接收者来初始化具有指定名称的 <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-227">Initializes a new instance of the <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> class with the specified name, using the specified file as the recipient of the debugging and tracing output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-228">此构造函数初始化的新实例<xref:System.IO.StreamWriter>类，指定路径上指定的文件使用<xref:System.Text.Encoding.UTF8%2A>编码。</span><span class="sxs-lookup"><span data-stu-id="31f72-228">This constructor initializes a new instance of the <xref:System.IO.StreamWriter> class for the specified file on the specified path, using <xref:System.Text.Encoding.UTF8%2A> encoding.</span></span> <span data-ttu-id="31f72-229">如果该文件存在，则将它追加到。</span><span class="sxs-lookup"><span data-stu-id="31f72-229">If the file exists, it is appended to.</span></span> <span data-ttu-id="31f72-230">如果该文件不存在，被创建一个新文件。</span><span class="sxs-lookup"><span data-stu-id="31f72-230">If the file does not exist, a new file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31f72-231">若要减少可能出现异常，可能导致无效输出所有字符均都替换"？"字符。</span><span class="sxs-lookup"><span data-stu-id="31f72-231">To reduce the chance of an exception, any character that might invalidate the output is replaced with a "?" character.</span></span>  
  
 <span data-ttu-id="31f72-232"><xref:System.Diagnostics.TraceListener.Name%2A>属性设置为`name`参数值或为空字符串 ("") 如果`name`参数是`null`。</span><span class="sxs-lookup"><span data-stu-id="31f72-232">The <xref:System.Diagnostics.TraceListener.Name%2A> property is set to the `name` parameter value or to an empty string ("") if the `name` parameter is `null`.</span></span> <span data-ttu-id="31f72-233">名称可以用作到索引<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>要以编程方式更改侦听器的属性集合。</span><span class="sxs-lookup"><span data-stu-id="31f72-233">The name can be used as an index into the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection to programmatically change the properties for the listener.</span></span> <span data-ttu-id="31f72-234">例如，下面的代码设置<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>的实例属性<xref:System.Diagnostics.XmlWriterTraceListener>其<xref:System.Diagnostics.TraceListener.Name%2A>属性是"xmlListener"。</span><span class="sxs-lookup"><span data-stu-id="31f72-234">For example, the following code sets the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property for an instance of <xref:System.Diagnostics.XmlWriterTraceListener> whose <xref:System.Diagnostics.TraceListener.Name%2A> property is "xmlListener".</span></span>  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =  
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31f72-235">
            <paramref name="stream" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-235">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-236">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-236">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-237">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-237">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlWriterTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31f72-238">关闭该侦听器的 <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />，以使其不再接收跟踪或调试输出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-238">Closes the <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> for this listener so that it no longer receives tracing or debugging output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="xmlWriterTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="31f72-239">要写入的错误信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-239">The error message to write.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="31f72-240">要追加到错误信息的详细错误信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-240">The detailed error message to append to the error message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-241">将包含错误信息和详细错误信息的跟踪信息写入文件或流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-241">Writes trace information including an error message and a detailed error message to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-242">默认行为是在消息框中显示消息和详细的消息，应用程序在用户界面模式中，并对其运行时<xref:System.Diagnostics.TraceListener>实例中<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>集合。</span><span class="sxs-lookup"><span data-stu-id="31f72-242">The default behavior is to display the message and detailed message in a message box when the application is running in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="31f72-243">默认情况下，该集合包含的一个实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="31f72-243">By default, the collection contains an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="31f72-244">可以通过添加或删除自定义此行为<xref:System.Diagnostics.TraceListener>集合中。</span><span class="sxs-lookup"><span data-stu-id="31f72-244">You can customize this behavior by adding or removing a <xref:System.Diagnostics.TraceListener> from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-245">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-245">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-246">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-246">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31f72-247">向输出文件或流中写入跟踪数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-247">Writes trace data to the output file or stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="31f72-248">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-248">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="31f72-249">源名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-249">The source name.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="31f72-250">
            <see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-250">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="31f72-251">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-251">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="31f72-252">要发出的数据对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-252">A data object to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-253">将跟踪信息、数据对象和事件信息写入文件或流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-253">Writes trace information, a data object, and event information to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-254">`eventCache`， `source`， `eventType`，和`id`标头和跟踪页脚中使用参数。</span><span class="sxs-lookup"><span data-stu-id="31f72-254">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="31f72-255">`id`参数转换为无符号整数之前编写，因此为负`id`值编写为一个较大的正整数。</span><span class="sxs-lookup"><span data-stu-id="31f72-255">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="31f72-256">`data`形式写入参数`DataItem`中的节点`TraceData`元素。</span><span class="sxs-lookup"><span data-stu-id="31f72-256">The `data` parameter is written as a `DataItem` node in the `TraceData` element.</span></span> <span data-ttu-id="31f72-257">`ToString`数据对象的方法用于将对象转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="31f72-257">The `ToString` method of the data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31f72-258">此方法不应由应用程序代码直接调用。</span><span class="sxs-lookup"><span data-stu-id="31f72-258">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="31f72-259">它由方法调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="31f72-259">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-260">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-260">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-261">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-261">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="31f72-262">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-262">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="31f72-263">源名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-263">The source name.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="31f72-264">
            <see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-264">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="31f72-265">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-265">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="31f72-266">要发出的数据对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-266">An array of data objects to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-267">将跟踪信息、数据对象和事件信息写入文件或流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-267">Writes trace information, data objects, and event information to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-268">`eventCache`， `source`， `eventType`，和`id`标头和跟踪页脚中使用参数。</span><span class="sxs-lookup"><span data-stu-id="31f72-268">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="31f72-269">`id`参数转换为无符号整数之前编写，因此为负`id`值编写为一个较大的正整数。</span><span class="sxs-lookup"><span data-stu-id="31f72-269">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="31f72-270">中的对象`data`方式编写参数数组`DataItem`中的节点`TraceData`元素。</span><span class="sxs-lookup"><span data-stu-id="31f72-270">The objects in the `data` parameter array are written as `DataItem` nodes in the `TraceData` element.</span></span> <span data-ttu-id="31f72-271">`ToString`的每个数据对象的方法用于将对象转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="31f72-271">The `ToString` method of each data object is used to convert the object to a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31f72-272">此方法不应由应用程序代码直接调用。</span><span class="sxs-lookup"><span data-stu-id="31f72-272">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="31f72-273">它由方法调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="31f72-273">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-274">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-274">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-275">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-275">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31f72-276">将事件跟踪信息写入输出文件或流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-276">Writes event trace information to the output file or stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="31f72-277">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-277">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="31f72-278">源名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-278">The source name.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="31f72-279">
            <see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-279">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="31f72-280">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-280">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="31f72-281">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-281">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-282">将跟踪信息、消息和事件信息写入文件或流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-282">Writes trace information, a message, and event information to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-283">`eventCache`， `source`， `eventType`，和`id`标头和跟踪页脚中使用参数。</span><span class="sxs-lookup"><span data-stu-id="31f72-283">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="31f72-284">`id`参数转换为无符号整数之前编写，因此为负`id`值编写为一个较大的正整数。</span><span class="sxs-lookup"><span data-stu-id="31f72-284">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="31f72-285">`message`形式写入参数`Message`元素。</span><span class="sxs-lookup"><span data-stu-id="31f72-285">The `message` parameter is written as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31f72-286">此方法不应由应用程序代码直接调用。</span><span class="sxs-lookup"><span data-stu-id="31f72-286">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="31f72-287">它由方法调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="31f72-287">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-288">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-288">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-289">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-289">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="31f72-290">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-290">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="31f72-291">源名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-291">The source name.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="31f72-292">
            <see cref="T:System.Diagnostics.TraceEventType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-292">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="31f72-293">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-293">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="31f72-294">包含零个或多个格式项的格式字符串，这些项与 <c>args</c> 数组中的对象相对应。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-294">A format string that contains zero or more format items that correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="31f72-295">包含零个或多个要格式化的对象的对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-295">An object array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-296">将跟踪信息、格式化消息和事件信息写入文件或流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-296">Writes trace information, a formatted message, and event information to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-297">`eventCache`， `source`， `eventType`，和`id`标头和跟踪页脚中使用参数。</span><span class="sxs-lookup"><span data-stu-id="31f72-297">The `eventCache`, `source`, `eventType`, and `id` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="31f72-298">`id`参数转换为无符号整数之前编写，因此为负`id`值编写为一个较大的正整数。</span><span class="sxs-lookup"><span data-stu-id="31f72-298">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="31f72-299"><xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>调用方法，并传入`format`字符串并`args`作为参数，若要设置格式的数组`args`对象数组作为`Message`元素。</span><span class="sxs-lookup"><span data-stu-id="31f72-299">The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called, passing in the `format` string and `args` array as parameters, to format the `args` object array as the `Message` element.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31f72-300">此方法不应由应用程序代码直接调用。</span><span class="sxs-lookup"><span data-stu-id="31f72-300">This method is not intended to be called directly by application code.</span></span>  <span data-ttu-id="31f72-301">它由方法调用<xref:System.Diagnostics.Debug>， <xref:System.Diagnostics.Trace>，和<xref:System.Diagnostics.TraceSource>类来写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="31f72-301">It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-302">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-302">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-303">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-303">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="xmlWriterTraceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="31f72-304">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的 <see cref="T:System.Diagnostics.TraceEventCache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-304">A <see cref="T:System.Diagnostics.TraceEventCache" /> that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="31f72-305">源名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-305">The source name.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="31f72-306">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-306">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="31f72-307">要写入的跟踪消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-307">A trace message to write.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="31f72-308">标识相关活动的 <see cref="T:System.Guid" /> 结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-308">A <see cref="T:System.Guid" /> structure that identifies a related activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-309">将跟踪信息（包括相关活动的标识）、消息和事件信息写入文件或流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-309">Writes trace information including the identity of a related activity, a message, and event information to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-310"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>方法是否用于关联相关的跟踪。</span><span class="sxs-lookup"><span data-stu-id="31f72-310">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is used for the correlation of related traces.</span></span> <span data-ttu-id="31f72-311">`eventCache`， `source`， `id`，和`relatedActivityId`标头和跟踪页脚中使用参数。</span><span class="sxs-lookup"><span data-stu-id="31f72-311">The `eventCache`, `source`, `id`, and `relatedActivityId` parameters are used in the header and footer of the trace.</span></span> <span data-ttu-id="31f72-312">`id`参数转换为无符号整数之前编写，因此为负`id`值编写为一个较大的正整数。</span><span class="sxs-lookup"><span data-stu-id="31f72-312">The `id` parameter is converted to an unsigned integer before writing, so a negative `id` value is written as a large positive integer.</span></span> <span data-ttu-id="31f72-313">`message`形式写入参数`Message`元素。</span><span class="sxs-lookup"><span data-stu-id="31f72-313">The `message` parameter is written as the `Message` element.</span></span> <span data-ttu-id="31f72-314"><xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType>调用方法来转换`relatedActivityId`"B"的值格式的字符串，它显示在标头。</span><span class="sxs-lookup"><span data-stu-id="31f72-314">The <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> method is called to convert the `relatedActivityId`value to a "B" formatted string, which appears in the header.</span></span> <span data-ttu-id="31f72-315">`SubTypeName`页脚中的元素标识跟踪事件的类型为<xref:System.Diagnostics.TraceEventType.Transfer>。</span><span class="sxs-lookup"><span data-stu-id="31f72-315">The `SubTypeName` element in the footer identifies the trace event type as a <xref:System.Diagnostics.TraceEventType.Transfer>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="31f72-316"><xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>方法不应由应用程序代码调用。</span><span class="sxs-lookup"><span data-stu-id="31f72-316">The <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> method is not intended to be called by application code.</span></span>  <span data-ttu-id="31f72-317">它旨在通过调用<xref:System.Diagnostics.TraceSource>发出的跟踪信息的对象及其<xref:System.Diagnostics.TraceSource.TraceTransfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="31f72-317">It is intended to be called by a <xref:System.Diagnostics.TraceSource> object to emit the trace information for its <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-318">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-318">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-319">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-319">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="xmlWriterTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="31f72-320">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-320">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-321">将不包含任何其他上下文信息的原义消息写入文件或流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-321">Writes a verbatim message without any additional context information to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-322">使用<xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>方法中的日志输出包含上下文信息。</span><span class="sxs-lookup"><span data-stu-id="31f72-322">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-323">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-323">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-324">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-324">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="xmlWriterTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="31f72-325">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-325">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31f72-326">将不包含任何其他上下文信息且后跟当前行结束符的原义消息写入文件或流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-326">Writes a verbatim message without any additional context information followed by the current line terminator to the file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31f72-327">使用<xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>方法中的日志输出包含上下文信息。</span><span class="sxs-lookup"><span data-stu-id="31f72-327">Use the <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A> method to include context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="31f72-328">表示调用非托管的代码的能力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-328">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="31f72-329">关联枚举：<see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31f72-329">Associated enumeration: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>