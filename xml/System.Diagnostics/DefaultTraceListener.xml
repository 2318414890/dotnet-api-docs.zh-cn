<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DefaultTraceListener.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e581445bf8b73278f54dd2d25bd773d01ccd85e1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e581445bf8b73278f54dd2d25bd773d01ccd85e1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Provides the default output methods and behavior for tracing.</source>
          <target state="translated">提供用于跟踪的默认输出方法和行为。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>An instance of this class is automatically added to the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collections.</source>
          <target state="translated">此类的实例会自动添加到<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Explicitly adding a second <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.</source>
          <target state="translated">显式添加第二个<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>原因复制调试器输出窗口中的消息和重复的消息框断言。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>By default, the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph> methods emit the message to the Win32 <ph id="ph3">`OutputDebugString`</ph> function and to the <ph id="ph4">&lt;xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>方法发出到 Win32 消息<ph id="ph3">`OutputDebugString`</ph>函数并对其<ph id="ph4">&lt;xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>For information about the <ph id="ph1">`OutputDebugString`</ph> function, see the Platform SDK or MSDN.</source>
          <target state="translated">璝惠<ph id="ph1">`OutputDebugString`</ph>函数中，请参阅平台 SDK 或 MSDN。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>方法，默认情况下，会显示一个消息框时在用户界面模式中运行应用程序; 它也发出消息使用<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The display of the message box for <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph> method calls depends on the presence of the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">显示的消息框<ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.Debug.Fail%2A&gt;</ph>方法调用取决于是否存在的<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>不在<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>集合，消息框不会显示。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>clear&gt; element<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, by the <bpt id="p2">[</bpt><ph id="ph3">\&lt;</ph>remove&gt; element<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph4">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph5">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph6">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>可以删除<bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>清除 &gt; 元素<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>，也可由<bpt id="p2">[</bpt><ph id="ph3">\&lt;</ph>删除 &gt; 元素<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>，或通过调用<ph id="ph4">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph>方法<ph id="ph5">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph>属性 (<ph id="ph6">`System.Diagnostics.Trace.Listeners.Clear()`</ph>)。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>You must enable tracing or debugging to use a trace listener.</source>
          <target state="translated">你必须启用跟踪或调试才能使用跟踪侦听器。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The following syntax is compiler specific.</source>
          <target state="translated">下面的语法是特定的编译器。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</source>
          <target state="translated">如果你使用除 C# 或 Visual Basic 编译器，请参阅你的编译器的文档。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To enable debugging in C#, add the <ph id="ph1">`/d:DEBUG`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define DEBUG`</ph> to the top of your file.</source>
          <target state="translated">若要启用调试 C# 中，添加<ph id="ph1">`/d:DEBUG`</ph>到编译器命令行编译代码，或添加时的标志<ph id="ph2">`#define DEBUG`</ph>到你的文件的顶部。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:DEBUG=True`</ph> flag to the compiler command line.</source>
          <target state="translated">在 Visual Basic 中，添加<ph id="ph1">`/d:DEBUG=True`</ph>到编译器命令行的标志。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To enable tracing in C#, add the <ph id="ph1">`/d:TRACE`</ph> flag to the compiler command line when you compile your code, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
          <target state="translated">若要启用 C# 中的跟踪，将添加<ph id="ph1">`/d:TRACE`</ph>到编译器命令行编译代码，或添加时的标志<ph id="ph2">`#define TRACE`</ph>到你的文件的顶部。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> flag to the compiler command line.</source>
          <target state="translated">在 Visual Basic 中，添加<ph id="ph1">`/d:TRACE=True`</ph>到编译器命令行的标志。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To add a trace listener, edit the configuration file that corresponds to the name of your application.</source>
          <target state="translated">若要添加跟踪侦听器，请编辑配置文件对应于你的应用程序的名称。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</source>
          <target state="translated">在此文件中，可以添加侦听器、 将其类型设置和其参数，删除的侦听器，或清除以前由应用程序设置的所有侦听器。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The configuration file should be formatted similar to the following example:</source>
          <target state="translated">配置文件的格式应类似于下面的示例：</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The following code example calculates binomial coefficients, which are values used in probability and statistics.</source>
          <target state="translated">下面的代码示例计算二项式系数，概率和统计信息中使用的值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>This example uses a <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> to trace results and log errors.</source>
          <target state="translated">此示例使用<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>跟踪结果以及记录错误。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>It creates a new <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, adds it to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection, and sets the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph> property to the log file specified in the command-line arguments.</source>
          <target state="translated">它创建一个新<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>，将其添加到<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>集合，并设置<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph>到命令行自变量中指定的日志文件的属性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If an error is detected while processing the input parameter, or if the <ph id="ph1">`CalcBinomial`</ph> function throws an exception, the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph> method logs and displays an error message.</source>
          <target state="translated">如果处理的输入的参数时检测到错误或如果<ph id="ph1">`CalcBinomial`</ph>函数引发异常，<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>方法记录并显示一条错误消息。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the error message is also written to the console.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph>属性是<ph id="ph2">`false`</ph>，错误消息也会写入到控制台。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>When the result is calculated successfully, the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph> methods write the results to the log file.</source>
          <target state="translated">已成功，计算结果时<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph>和<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph>方法会将结果写入日志文件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph> methods cause trace information to be written only to the <ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A&gt;</ph>方法导致跟踪信息，从而只写入<ph id="ph4">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>To write trace information to all listeners in the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection, use the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Write%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;</ph> methods of the <ph id="ph5">&lt;xref:System.Diagnostics.Trace&gt;</ph> class.</source>
          <target state="translated">若要将跟踪信息写入到中的所有侦听器<ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>集合，使用<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Write%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;</ph>方法<ph id="ph5">&lt;xref:System.Diagnostics.Trace&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>This class is thread safe.</source>
          <target state="translated">此类是线程安全的。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Diagnostics.DefaultTraceListener" /&gt;</ph> class with "Default" as its <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.Name" /&gt;</ph> property value.</source>
          <target state="translated">在将 <ph id="ph1">&lt;see cref="T:System.Diagnostics.DefaultTraceListener" /&gt;</ph> 属性值设置为其默认值的情况下，初始化 <ph id="ph2">&lt;see cref="P:System.Diagnostics.TraceListener.Name" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.#ctor">
          <source>The following code example removes the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> provided by the application from the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection and then creates a new <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> and adds it to the <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection.</source>
          <target state="translated">下面的代码示例中删除<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>从应用程序提供<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>集合，然后创建一个新<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>和将其添加到<ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source>Gets or sets a value indicating whether the application is running in user-interface mode.</source>
          <target state="translated">获取或设置一个值，该值指示应用程序是否以用户界面模式运行。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if user-interface mode is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果启用了用户界面模式，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source>The following code example calls a function that calls the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph> method to log an error message if the function throws an exception.</source>
          <target state="translated">下面的代码示例调用调用的函数，<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph>方法来记录一条错误消息，如果该函数将引发异常。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the method also writes the error message to the console.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A&gt;</ph>属性是<ph id="ph2">`false`</ph>，该方法还将错误消息写入控制台。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Diagnostics.DefaultTraceListener">
          <source>Emits or displays a message and a stack trace for an assertion that always fails.</source>
          <target state="translated">为总是失败的断言发出或显示消息和堆栈跟踪。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>The message to emit or display.</source>
          <target state="translated">要发出或显示的消息。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>Emits or displays a message and a stack trace for an assertion that always fails.</source>
          <target state="translated">为总是失败的断言发出或显示消息和堆栈跟踪。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>By default, this method sends the <ph id="ph1">`message`</ph> parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> instance.</source>
          <target state="translated">默认情况下，此方法可发送<ph id="ph1">`message`</ph>参数和堆栈跟踪到一个消息框 （如果在用户界面模式下运行应用程序） 和<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>The following code example writes an error message to a <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> using the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29&gt;</ph> method.</source>
          <target state="translated">下面的代码示例将错误消息写入<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>使用<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
          <source>The method also writes the message to the console if a user interface is not available.</source>
          <target state="translated">方法未提供用户界面时，还将消息写入到控制台。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The message to emit or display.</source>
          <target state="translated">要发出或显示的消息。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The detailed message to emit or display.</source>
          <target state="translated">要发出或显示的详细消息。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>Emits or displays detailed messages and a stack trace for an assertion that always fails.</source>
          <target state="translated">为总是失败的断言发出或显示详细消息和堆栈跟踪。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>By default, this method sends the <ph id="ph1">`message`</ph> parameter, the <ph id="ph2">`detailMessage`</ph> parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> instance.</source>
          <target state="translated">默认情况下，此方法可发送<ph id="ph1">`message`</ph>参数，<ph id="ph2">`detailMessage`</ph>参数，并且堆栈跟踪到一个消息框 （如果在用户界面模式下运行应用程序） 和<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The following code example calls a function that calls the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph> method to log a detailed error message if the function throws an exception.</source>
          <target state="translated">下面的代码示例调用调用的函数，<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29&gt;</ph>方法来记录详细的错误消息，如果该函数将引发异常。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
          <source>The method writes the message to the console if a user interface is not available.</source>
          <target state="translated">该方法将消息写入控制台，如果用户界面不可用。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Diagnostics.DefaultTraceListener.LogFileName">
          <source>Gets or sets the name of a log file to write trace or debug messages to.</source>
          <target state="translated">获取或设置要在其中写入跟踪或调试消息的日志文件的名称。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.LogFileName">
          <source>The name of a log file to write trace or debug messages to.</source>
          <target state="translated">要写入跟踪或调试消息的日志文件名。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Diagnostics.DefaultTraceListener.LogFileName">
          <source>The following code example creates a new <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>, adds it to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph> collection, and sets the <ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph> property to the log file specified in the command-line arguments.</source>
          <target state="translated">下面的代码示例创建一个新<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>，将其添加到<ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType&gt;</ph>集合，并设置<ph id="ph3">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A&gt;</ph>到命令行自变量中指定的日志文件的属性。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>The message to write to <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph>.</source>
          <target state="translated">要写入 <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> 的消息。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>Writes the output to the <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> function and to the <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> method.</source>
          <target state="translated">将输出写入 <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> 函数和 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>For information about the Win32 <ph id="ph1">`OutputDebugString`</ph> debugging function, see "OutputDebugString" in the Platform SDK or MSDN.</source>
          <target state="translated">有关 Win32<ph id="ph1">`OutputDebugString`</ph>调试函数，请参阅平台 SDK 或 MSDN 中的"OutputDebugString"。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
          <source>The following code example formats the results of a function and uses the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph> method to write the first part of the message to a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">下面的代码示例设置函数的结果的格式并使用<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29&gt;</ph>方法写入到消息的第一个部分<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>The message to write to <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph>.</source>
          <target state="translated">要写入 <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> 的消息。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>Writes the output to the <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> function and to the <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> method, followed by a carriage return and line feed (\r\n).</source>
          <target state="translated">将输出写入 <ph id="ph1">&lt;see langword="OutputDebugString" /&gt;</ph> 函数和 <ph id="ph2">&lt;see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /&gt;</ph> 方法，后接回车符和换行符 (\r\n)。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>The default line terminator is a carriage return followed by a line feed (\r\n).</source>
          <target state="translated">默认行结束符是回车符后接一个换行符 (\r\n)。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>For information about the Win32 <ph id="ph1">`OutputDebugString`</ph> debugging function, see the Platform SDK or MSDN.</source>
          <target state="translated">有关 Win32<ph id="ph1">`OutputDebugString`</ph>调试函数，请参阅平台 SDK 或 MSDN。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>This method sets the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">此方法会设置<ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.NeedIndent%2A&gt;</ph>属性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
          <source>The following code example formats the results of a function and uses the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph> method to write the last part of the message to a <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
          <target state="translated">下面的代码示例设置函数的结果的格式并使用<ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29&gt;</ph>方法写入到消息的最后一个部分<ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>