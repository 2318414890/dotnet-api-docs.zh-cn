<Type Name="EventLogEntry" FullName="System.Diagnostics.EventLogEntry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="35dfb75bdaa57dcdeaa058a6955423618173b22d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventLogEntry : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EventLogEntry extends System.ComponentModel.Component implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogEntry" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventLogEntry&#xA;Inherits Component&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogEntry sealed : System::ComponentModel::Component, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="faed6-101">在事件日志中封装单个记录。</span>
      <span class="sxs-lookup">
        <span data-stu-id="faed6-101">Encapsulates a single record in the event log.</span>
      </span>
      <span data-ttu-id="faed6-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="faed6-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-103">你通常不会创建的实例<xref:System.Diagnostics.EventLogEntry>直接使用时<xref:System.Diagnostics.EventLog>类。</span><span class="sxs-lookup"><span data-stu-id="faed6-103">You usually will not create instances of <xref:System.Diagnostics.EventLogEntry> directly when working with the <xref:System.Diagnostics.EventLog> class.</span></span> <span data-ttu-id="faed6-104"><xref:System.Diagnostics.EventLog.Entries%2A>的成员<xref:System.Diagnostics.EventLog>类包含一套<xref:System.Diagnostics.EventLogEntry>实例，通过使用读取时循环访问<xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=nameWithType>类索引成员。</span><span class="sxs-lookup"><span data-stu-id="faed6-104">The <xref:System.Diagnostics.EventLog.Entries%2A> member of the <xref:System.Diagnostics.EventLog> class contains a collection of <xref:System.Diagnostics.EventLogEntry> instances, which you iterate over when reading by using the <xref:System.Diagnostics.EventLogEntryCollection.Item%2A?displayProperty=nameWithType> class index member.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="faed6-105">此类型实现<xref:System.IDisposable>接口。</span><span class="sxs-lookup"><span data-stu-id="faed6-105">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="faed6-106">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="faed6-106">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="faed6-107">若要直接释放类型，调用其<xref:System.IDisposable.Dispose%2A>中的方法`try` / `catch`块。</span><span class="sxs-lookup"><span data-stu-id="faed6-107">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="faed6-108">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="faed6-108">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="faed6-109">有关详细信息，请参阅中的"使用实现 IDisposable 的对象"部分<xref:System.IDisposable>接口主题。</span><span class="sxs-lookup"><span data-stu-id="faed6-109">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="faed6-110">下面的代码示例演示如何将<xref:System.Diagnostics.EventLogEntry>类。</span><span class="sxs-lookup"><span data-stu-id="faed6-110">The following code example demonstrates the use of the <xref:System.Diagnostics.EventLogEntry> class.</span></span> <span data-ttu-id="faed6-111">在此示例中，`switch`语句使用控制台输入要搜索指定的事件类型的事件日志条目。</span><span class="sxs-lookup"><span data-stu-id="faed6-111">In this example, a `switch` statement uses console input to search for event log entries for the specified event type.</span></span>  <span data-ttu-id="faed6-112">如果找到匹配项，则在控制台显示日志项的源信息。</span><span class="sxs-lookup"><span data-stu-id="faed6-112">If a match is found, log entry source information is displayed at the console.</span></span>  
  
 [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]
 [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]
 [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="T:System.Diagnostics.EventLogEntryCollection" />
    <altmember cref="T:System.Diagnostics.EventInstance" />
  </Docs>
  <Members>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Category" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Category As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Category { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The category of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-113">获取与该项的 <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> 属性关联的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-113">Gets the text associated with the <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> property for this entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-114">应用程序特定的类别文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-114">The application-specific category text.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-115">每个应用程序 （事件源） 可以定义自己带编号的类别以及它们映射到的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="faed6-115">Each application (event source) can define its own numbered categories and the text strings to which they are mapped.</span></span> <span data-ttu-id="faed6-116">事件查看器可以在日志中使用的类别筛选事件。</span><span class="sxs-lookup"><span data-stu-id="faed6-116">The Event Viewer can use the category to filter events in the log.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="faed6-117">未能为与类别关联的插入字符串之一分配空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-117">The space could not be allocated for one of the insertion strings associated with the category.</span>
          </span>
        </exception>
        <altmember cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
      </Docs>
    </Member>
    <Member MemberName="CategoryNumber">
      <MemberSignature Language="C#" Value="public short CategoryNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 CategoryNumber" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryNumber As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short CategoryNumber { short get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("An ID for the category of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-118">获取事件日志项的类别号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-118">Gets the category number of the event log entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-119">该项的应用程序特定类别号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-119">The application-specific category number for this entry.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-120">每个应用程序 （事件源） 可以定义自己带编号的类别以及它们映射到的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="faed6-120">Each application (event source) can define its own numbered categories and the text strings to which they are mapped.</span></span> <span data-ttu-id="faed6-121">事件查看器可以在日志中使用的类别筛选事件。</span><span class="sxs-lookup"><span data-stu-id="faed6-121">The Event Viewer can use the category to filter events in the log.</span></span> <span data-ttu-id="faed6-122">类别必须是连续编号开头使用数字 1。</span><span class="sxs-lookup"><span data-stu-id="faed6-122">The categories must be numbered consecutively beginning with the number 1.</span></span> <span data-ttu-id="faed6-123">指定的类别号<xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="faed6-123">The category number is specified by the <xref:System.Diagnostics.EventInstance.CategoryId%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="faed6-124">事件查看器可将类别显示为数字值，或者它可以作为资源标识符使用类别，以显示本地化的类别字符串。</span><span class="sxs-lookup"><span data-stu-id="faed6-124">The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</span></span> <span data-ttu-id="faed6-125">有关详情，请参阅<xref:System.Diagnostics.EventInstance>。</span><span class="sxs-lookup"><span data-stu-id="faed6-125">For more information, see <xref:System.Diagnostics.EventInstance>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.EntryType" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.Category" />
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Binary data associated with this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-126">获取与该项关联的二进制数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-126">Gets the binary data associated with the entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-127">包含与此项关联的二进制数据的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-127">An array of bytes that holds the binary data associated with the entry.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-128">获取此属性创建一个数组，其中包含的项的特定事件的二进制数据，其中显示组合的十六进制转义序列和文本格式中的事件查看器的副本。</span><span class="sxs-lookup"><span data-stu-id="faed6-128">Getting this property creates an array that holds a copy of the entry's event-specific binary data, which the Event Viewer displays in combined hexadecimal and text format.</span></span> <span data-ttu-id="faed6-129">特定于事件的数据有时用来存储应用程序将独立于事件查看器中，例如处理的信息，以使报表从日志文件。</span><span class="sxs-lookup"><span data-stu-id="faed6-129">Event-specific data is sometimes used to store information that the application will process independently of the Event Viewer, for example, to make reports from the log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryType EntryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.EventLogEntryType EntryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.EntryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntryType As EventLogEntryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryType EntryType { System::Diagnostics::EventLogEntryType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The type of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-130">获取该项的事件类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-130">Gets the event type of this entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-131">与事件日志中的项相关联的事件类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-131">The event type that is associated with the entry in the event log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-132">所有事件类型具有定义完善的常用数据，并且可以根据需要包含特定于事件的数据。</span><span class="sxs-lookup"><span data-stu-id="faed6-132">All event types have well-defined common data and can optionally include event-specific data.</span></span> <span data-ttu-id="faed6-133">每个事件是应用程序将指示它在报告事件时的单一类型。</span><span class="sxs-lookup"><span data-stu-id="faed6-133">Each event is of a single type, which the application indicates when it reports the event.</span></span> <span data-ttu-id="faed6-134">事件查看器使用的事件类型来确定要在事件日志的列表视图中显示的图标。</span><span class="sxs-lookup"><span data-stu-id="faed6-134">The Event Viewer uses the event type to determine which icon to display in the list view of the event log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="faed6-135">下面的代码示例演示如何将<xref:System.Diagnostics.EventLogEntry.EntryType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="faed6-135">The following code example demonstrates the use of the <xref:System.Diagnostics.EventLogEntry.EntryType%2A> property.</span></span> <span data-ttu-id="faed6-136">在此示例中，`switch`语句使用控制台输入要搜索指定的事件日志条目<xref:System.Diagnostics.EventLogEntry.EntryType%2A>。</span><span class="sxs-lookup"><span data-stu-id="faed6-136">In this example, a `switch` statement uses console input to search for event log entries for the specified <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.</span></span>  <span data-ttu-id="faed6-137">如果找到匹配项，则在控制台显示日志项的源信息。</span><span class="sxs-lookup"><span data-stu-id="faed6-137">If a match is found, log entry source information is displayed at the console.</span></span>  
  
 [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]
 [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]
 [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventInstance.EntryType" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Diagnostics.EventLogEntry otherEntry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class System.Diagnostics.EventLogEntry otherEntry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (otherEntry As EventLogEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Diagnostics::EventLogEntry ^ otherEntry);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherEntry" Type="System.Diagnostics.EventLogEntry" />
      </Parameters>
      <Docs>
        <param name="otherEntry">
          <span data-ttu-id="faed6-138">要比较的 <see cref="T:System.Diagnostics.EventLogEntry" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-138">The <see cref="T:System.Diagnostics.EventLogEntry" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faed6-139">对两个事件日志项进行比较。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-139">Performs a comparison between two event log entries.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="faed6-140">如果 <see cref="T:System.Diagnostics.EventLogEntry" /> 对象完全相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-140">
              <see langword="true" /> if the <see cref="T:System.Diagnostics.EventLogEntry" /> objects are identical; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-141">此方法执行两个对象之间的逐字节比较。</span><span class="sxs-lookup"><span data-stu-id="faed6-141">This method performs a byte-by-byte comparison between the two objects.</span></span> <span data-ttu-id="faed6-142">它不会不确定是否两个<xref:System.Diagnostics.EventLogEntry>实例引用同一对象。</span><span class="sxs-lookup"><span data-stu-id="faed6-142">It does not determine whether the two <xref:System.Diagnostics.EventLogEntry> instances refer to the same object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventID">
      <MemberSignature Language="C#" Value="public int EventID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EventID" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.EventID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EventID { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("An ID number for this event entry.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use InstanceId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-143">获取当前事件项的应用程序特定事件标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-143">Gets the application-specific event identifier for the current event entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-144">事件消息的应用程序特定标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-144">The application-specific identifier for the event message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-145">事件日志，并且最顶部的两位掩码中，此值表示的项的事件标识符。</span><span class="sxs-lookup"><span data-stu-id="faed6-145">This value represents the event identifier for the entry in the event log, with the top two bits masked off.</span></span> <span data-ttu-id="faed6-146"><xref:System.Diagnostics.EventLogEntry.InstanceId%2A>一个事件日志条目的属性表示为事件源的消息资源文件中的事件的完整的 32 位资源标识符。</span><span class="sxs-lookup"><span data-stu-id="faed6-146">The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source.</span></span> <span data-ttu-id="faed6-147">来自同一源的两个事件日志项可以有匹配<xref:System.Diagnostics.EventLogEntry.EventID%2A>值，但具有不同<xref:System.Diagnostics.EventLogEntry.InstanceId%2A>存在差异导致的事件标识符最高两位的值。</span><span class="sxs-lookup"><span data-stu-id="faed6-147">Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the event identifier.</span></span>  
  
 <span data-ttu-id="faed6-148">如果应用程序写入事件项使用之一<xref:System.Diagnostics.EventLog.WriteEntry%2A>方法，<xref:System.Diagnostics.EventLogEntry.EventID%2A>属性匹配可选`eventId`参数。</span><span class="sxs-lookup"><span data-stu-id="faed6-148">If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the optional `eventId` parameter.</span></span> <span data-ttu-id="faed6-149">如果应用程序编写事件使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>或 Win32 API `ReportEvent`、<xref:System.Diagnostics.EventLogEntry.EventID%2A>与最高的两位掩码属性相匹配的事件的资源标识符。</span><span class="sxs-lookup"><span data-stu-id="faed6-149">If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A> or the Win32 API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.EventID%2A> property matches the resource identifier for the event, with the top two bits masked off.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.InstanceId" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Sequence numer of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-150">获取该项在事件日志中的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-150">Gets the index of this entry in the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-151">该项在事件日志中的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-151">The index of this entry in the event log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-152">此数量不一定是从零开始。</span><span class="sxs-lookup"><span data-stu-id="faed6-152">This number is not necessarily zero-based.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public long InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceId { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The instance ID for this event entry.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-153">获取指定事件项的消息文本的资源标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-153">Gets the resource identifier that designates the message text of the event entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-154">资源标识符，与事件源的消息资源文件中的字符串定义对应。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-154">A resource identifier that corresponds to a string definition in the message resource file of the event source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-155"><xref:System.Diagnostics.EventLogEntry.InstanceId%2A>属性唯一地标识配置的事件源的事件条目。</span><span class="sxs-lookup"><span data-stu-id="faed6-155">The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property uniquely identifies an event entry for a configured event source.</span></span> <span data-ttu-id="faed6-156"><xref:System.Diagnostics.EventLogEntry.InstanceId%2A>为事件日志条目表示为事件源的消息资源文件中的事件的完整的 32 位资源标识符。</span><span class="sxs-lookup"><span data-stu-id="faed6-156">The <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> for an event log entry represents the full 32-bit resource identifier for the event in the message resource file for the event source.</span></span> <span data-ttu-id="faed6-157"><xref:System.Diagnostics.EventLogEntry.EventID%2A>属性等于<xref:System.Diagnostics.EventLogEntry.InstanceId%2A>与最高的两位掩码。</span><span class="sxs-lookup"><span data-stu-id="faed6-157">The <xref:System.Diagnostics.EventLogEntry.EventID%2A> property equals the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> with the top two bits masked off.</span></span> <span data-ttu-id="faed6-158">来自同一源的两个事件日志项可以有匹配<xref:System.Diagnostics.EventLogEntry.EventID%2A>值，但具有不同<xref:System.Diagnostics.EventLogEntry.InstanceId%2A>存在差异导致的资源标识符最高两位的值。</span><span class="sxs-lookup"><span data-stu-id="faed6-158">Two event log entries from the same source can have matching <xref:System.Diagnostics.EventLogEntry.EventID%2A> values, but have different <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> values due to differences in the top two bits of the resource identifier.</span></span>  
  
 <span data-ttu-id="faed6-159">如果应用程序写入事件项使用之一<xref:System.Diagnostics.EventLog.WriteEntry%2A>方法，<xref:System.Diagnostics.EventLogEntry.InstanceId%2A>属性匹配可选`eventId`参数。</span><span class="sxs-lookup"><span data-stu-id="faed6-159">If the application wrote the event entry using one of the <xref:System.Diagnostics.EventLog.WriteEntry%2A> methods, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the optional `eventId` parameter.</span></span> <span data-ttu-id="faed6-160">如果应用程序编写事件使用<xref:System.Diagnostics.EventLog.WriteEvent%2A>、<xref:System.Diagnostics.EventLogEntry.InstanceId%2A>属性中指定的资源标识符匹配<xref:System.Diagnostics.EventInstance.InstanceId%2A>的`instance`参数。</span><span class="sxs-lookup"><span data-stu-id="faed6-160">If the application wrote the event using <xref:System.Diagnostics.EventLog.WriteEvent%2A>, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the <xref:System.Diagnostics.EventInstance.InstanceId%2A> of the `instance` parameter.</span></span> <span data-ttu-id="faed6-161">如果应用程序写入事件使用 Win32 API `ReportEvent`、<xref:System.Diagnostics.EventLogEntry.InstanceId%2A>属性中指定的资源标识符匹配`dwEventID`参数。</span><span class="sxs-lookup"><span data-stu-id="faed6-161">If the application wrote the event using the Win32 API `ReportEvent`, the <xref:System.Diagnostics.EventLogEntry.InstanceId%2A> property matches the resource identifier specified in the `dwEventID` parameter.</span></span>  
  
 <span data-ttu-id="faed6-162">有关如何定义事件消息和生成事件日志资源文件的详细信息，请参阅处平台 SDK 文档中的"消息编译器"主题[ http://msdn.microsoft.com ](http://msdn.microsoft.com/)。有关事件日志的标识符的详细信息，请参阅平台 SDK 中的"事件标识符"主题。</span><span class="sxs-lookup"><span data-stu-id="faed6-162">For details about defining event messages and building event log resource files, see the "Message Compiler" topic in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/). For details about event log identifiers, see the "Event Identifiers" topic in the Platform SDK.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="faed6-163">下面的代码示例中搜索事件日志中具有特定的资源标识符的项。</span><span class="sxs-lookup"><span data-stu-id="faed6-163">The following code example searches an event log for entries with a particular resource identifier.</span></span> <span data-ttu-id="faed6-164">此代码示例显示事件消息以了解每个匹配项，并计算在日志中的匹配项的总数目。</span><span class="sxs-lookup"><span data-stu-id="faed6-164">The code example displays the event message for each matching entry, and counts the total number of matching entries in the log.</span></span> <span data-ttu-id="faed6-165">每个条目的消息文本可能也可能不是相同的;每个事件消息取决于事件源消息文件、 插入字符串和写入时使用的参数。</span><span class="sxs-lookup"><span data-stu-id="faed6-165">The message text for each entry may or may not be the same; each event message depends on the event source message file, insertion strings, and parameters used when it was written.</span></span>  
  
 [!code-cpp[EventLog_WriteEvent#10](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#10)]
 [!code-csharp[EventLog_WriteEvent#10](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#10)]
 [!code-vb[EventLog_WriteEvent#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The Computer on which this event entry occured.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-166">获取在其上生成该项的计算机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-166">Gets the name of the computer on which this entry was generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-167">包含事件日志的计算机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-167">The name of the computer that contains the event log.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.BinaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The message of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-168">获取与该事件项关联的本地化消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-168">Gets the localized message associated with this event entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-169">消息的格式化、本地化文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-169">The formatted, localized text for the message.</span>
          </span>
          <span data-ttu-id="faed6-170">其中包含关联的替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-170">This includes associated replacement strings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-171">获取此属性将打开注册表项以确定包含本地化后的文本的.dll 文件的文件名。</span><span class="sxs-lookup"><span data-stu-id="faed6-171">Getting this property opens the registry to determine the file name of the .dll file that contains the localized text.</span></span> <span data-ttu-id="faed6-172">如果测试你的源代码时，你会收到注册表错误，请验证计算机上存在的.dll 文件。</span><span class="sxs-lookup"><span data-stu-id="faed6-172">If you receive a registry error when testing your source code, verify that the .dll file exists on the computer.</span></span> <span data-ttu-id="faed6-173">如果插入字符串包含消息中，捕获其分配中的错误。</span><span class="sxs-lookup"><span data-stu-id="faed6-173">If insertion strings are included in the message, catch errors in their allocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="faed6-174">未能为与消息关联的插入字符串之一分配空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-174">The space could not be allocated for one of the insertion strings associated with the message.</span>
          </span>
        </exception>
        <altmember cref="T:System.Diagnostics.EventInstance" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="ReplacementStrings">
      <MemberSignature Language="C#" Value="public string[] ReplacementStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ReplacementStrings" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.ReplacementStrings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReplacementStrings As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ReplacementStrings { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Application strings for this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-175">获取与事件日志项关联的替换字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-175">Gets the replacement strings associated with the event log entry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-176">包含存储在事件项中的替换字符串的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-176">An array that holds the replacement strings stored in the event entry.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-177">此属性只检索的替换字符串的项。</span><span class="sxs-lookup"><span data-stu-id="faed6-177">This property retrieves only the replacement strings for the entry.</span></span> <span data-ttu-id="faed6-178">若要检索完整的消息，请阅读<xref:System.Diagnostics.EventLogEntry.Message%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="faed6-178">To retrieve the full message, read the <xref:System.Diagnostics.EventLogEntry.Message%2A> property.</span></span>  
  
 <span data-ttu-id="faed6-179"><xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A>属性包含在事件日志条目中使用的替换字符串的本地化的版本。</span><span class="sxs-lookup"><span data-stu-id="faed6-179">The <xref:System.Diagnostics.EventLogEntry.ReplacementStrings%2A> property contains the localized versions of replacement strings that are used in the event log entry.</span></span> <span data-ttu-id="faed6-180">如果你提供包含在你的应用程序每个目标语言的字符串的资源文件，你可以发出该计算机使用的语言中的事件日志消息。</span><span class="sxs-lookup"><span data-stu-id="faed6-180">If you provide resource files that contain strings in each target language for your application, you can emit event log messages in the language that is used on that computer.</span></span> <span data-ttu-id="faed6-181">为此，请创建的实例<xref:System.Resources.ResourceManager>包含替换字符串的资源程序集的类。</span><span class="sxs-lookup"><span data-stu-id="faed6-181">To do that, create an instance of the <xref:System.Resources.ResourceManager> class for the resource assembly that contains your replacement strings.</span></span> <span data-ttu-id="faed6-182">第一个参数<xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29>构造函数标识要使用的资源程序集。</span><span class="sxs-lookup"><span data-stu-id="faed6-182">The first parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29> constructor identifies the resource assembly to be used.</span></span> <span data-ttu-id="faed6-183">使用<xref:System.Resources.ResourceManager.GetString%2A>该实例提供本地化的消息的日志事件的方法。</span><span class="sxs-lookup"><span data-stu-id="faed6-183">Use the <xref:System.Resources.ResourceManager.GetString%2A> method of that instance to supply localized messages for log events.</span></span> <span data-ttu-id="faed6-184">下面的代码会自动设置用于当前区域性的语言的消息。</span><span class="sxs-lookup"><span data-stu-id="faed6-184">The following code automatically sets the message to the language for the current culture.</span></span>  
  
```  
ResourceManager LocRM = new ResourceManager("ReplacementStrings.TestStrings",   
      typeof(Program).Assembly);  
EventLog e1 = new EventLog("LocTest", "MyMachine", "LocTest");  
// Get the string associated with the current culture.  
e1.WriteEntry(LocRM.GetString("strMessage"),  
   EventLogEntryType.Information);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.Message" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The source application of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-185">获取生成该事件的应用程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-185">Gets the name of the application that generated this event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-186">在事件日志中注册为该事件的源的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-186">The name registered with the event log as the source of this event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-187">事件源指示什么来记录事件。</span><span class="sxs-lookup"><span data-stu-id="faed6-187">The event source indicates what logged the event.</span></span> <span data-ttu-id="faed6-188">它通常是应用程序的名称或应用程序的子组件名称如果应用程序非常大。</span><span class="sxs-lookup"><span data-stu-id="faed6-188">It is often the name of the application or the name of a subcomponent of the application if the application is large.</span></span> <span data-ttu-id="faed6-189">应用程序和服务通常写入到 （并且因此可用于的资源） 应用程序日志或自定义日志。</span><span class="sxs-lookup"><span data-stu-id="faed6-189">Applications and services usually write to (and therefore are sources for) the Application log or a custom log.</span></span> <span data-ttu-id="faed6-190">设备驱动程序通常写入系统日志。</span><span class="sxs-lookup"><span data-stu-id="faed6-190">Device drivers usually write to the System log.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="faed6-191">下面的代码示例演示如何将<xref:System.Diagnostics.EventLogEntry.Source%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="faed6-191">The following code example demonstrates the use of the <xref:System.Diagnostics.EventLogEntry.Source%2A> property.</span></span> <span data-ttu-id="faed6-192">在此示例中，`switch`语句使用控制台输入要搜索指定的事件日志条目<xref:System.Diagnostics.EventLogEntry.EntryType%2A>。</span><span class="sxs-lookup"><span data-stu-id="faed6-192">In this example, a `switch` statement uses console input to search for event log entries for the specified <xref:System.Diagnostics.EventLogEntry.EntryType%2A>.</span></span>  <span data-ttu-id="faed6-193">如果找到匹配项，则<xref:System.Diagnostics.EventLogEntry.Source%2A>属性信息显示在控制台。</span><span class="sxs-lookup"><span data-stu-id="faed6-193">If a match is found, the <xref:System.Diagnostics.EventLogEntry.Source%2A> property information is displayed at the console.</span></span>  
  
 [!code-cpp[EventLogEntry_Source#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogEntry_Source/CPP/eventlogentry_source.cpp#1)]
 [!code-csharp[EventLogEntry_Source#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogEntry_Source/CS/eventlogentry_source.cs#1)]
 [!code-vb[EventLogEntry_Source#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogEntry_Source/VB/eventlogentry_source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Needs serialization support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="faed6-194">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-194">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="faed6-195">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-195">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="faed6-196">使用将目标对象序列化所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-196">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeGenerated">
      <MemberSignature Language="C#" Value="public DateTime TimeGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.TimeGenerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeGenerated As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeGenerated { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("Generation time of this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-197">获取生成该事件的本地时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-197">Gets the local time at which this event was generated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-198">生成该事件的本地时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-198">The local time at which this event was generated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-199">此成员包含生成事件的时间。</span><span class="sxs-lookup"><span data-stu-id="faed6-199">This member holds the time that an event was generated.</span></span> <span data-ttu-id="faed6-200">这可能不是事件日志中的事件信息写入时的时间相同。</span><span class="sxs-lookup"><span data-stu-id="faed6-200">This might not be the same as the time when the event information was written to the event log.</span></span> <span data-ttu-id="faed6-201">对于后者，读取<xref:System.Diagnostics.EventLogEntry.TimeWritten%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="faed6-201">For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeWritten%2A> property.</span></span>  
  
 <span data-ttu-id="faed6-202">通常是生成一个事件的时间和它记录的时间之间的延迟。</span><span class="sxs-lookup"><span data-stu-id="faed6-202">There is usually a lag between the time that an event is generated and the time it is logged.</span></span> <span data-ttu-id="faed6-203">很多重要知道生成事件的除非你想要查看的日志记录是否存在显著的滞后。</span><span class="sxs-lookup"><span data-stu-id="faed6-203">It is more important to know when the event was generated, unless you want to see if there is a significant lag in logging.</span></span> <span data-ttu-id="faed6-204">如果日志文件位于不同的服务器上并且在遇到瓶颈，则可能发生的。</span><span class="sxs-lookup"><span data-stu-id="faed6-204">That can happen if your log files are on a different server and you are experiencing a bottleneck.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.TimeWritten" />
      </Docs>
    </Member>
    <Member MemberName="TimeWritten">
      <MemberSignature Language="C#" Value="public DateTime TimeWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeWritten" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.TimeWritten" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeWritten As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeWritten { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The time at which this event entry was written to the logfile.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-205">获取在日志中写入该事件的本地时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-205">Gets the local time at which this event was written to the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-206">在日志中写入该事件的本地时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-206">The local time at which this event was written to the log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-207">此成员包含某一事件的信息写入事件日志的时间。</span><span class="sxs-lookup"><span data-stu-id="faed6-207">This member holds the time that an event's information is written to the event log.</span></span> <span data-ttu-id="faed6-208">这可能不在同一生成事件的时间。</span><span class="sxs-lookup"><span data-stu-id="faed6-208">This might not be the same time as when the event was generated.</span></span> <span data-ttu-id="faed6-209">对于后者，读取<xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="faed6-209">For the latter, read the <xref:System.Diagnostics.EventLogEntry.TimeGenerated%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogEntry.TimeGenerated" />
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogEntry.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.MonitoringDescription("The name of a user associated with this event entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="faed6-210">获取负责该事件的用户的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-210">Gets the name of the user who is responsible for this event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="faed6-211">唯一标识用户或组的安全标识符 (SID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-211">The security identifier (SID) that uniquely identifies a user or group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="faed6-212">此属性通常是空白中而不是安全日志的日志的事件。</span><span class="sxs-lookup"><span data-stu-id="faed6-212">This property is often blank for events in logs other than the Security log.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="faed6-213">未能为用户的 SID 获取帐户信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="faed6-213">Account information could not be obtained for the user's SID.</span>
          </span>
        </exception>
        <altmember cref="P:System.Diagnostics.EventLogEntry.Source" />
      </Docs>
    </Member>
  </Members>
</Type>