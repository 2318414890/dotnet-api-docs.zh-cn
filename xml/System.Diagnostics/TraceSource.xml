<Type Name="TraceSource" FullName="System.Diagnostics.TraceSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4caa5811c989fc979484b9d07a7c31c32638d19" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TraceSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSource" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSource" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6e0eb-101">提供一组方法和属性，利用这些方法和属性，应用程序可以跟踪代码的执行并将跟踪消息和它们的源关联起来。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6e0eb-101">Provides a set of methods and properties that enable applications to trace the execution of code and associate trace messages with their source.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-102"><xref:System.Diagnostics.TraceSource> 类由应用程序用来生成可与应用程序相关联的跟踪。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-102">The <xref:System.Diagnostics.TraceSource> class is used by applications to produce traces that can be associated with the application.</span></span> <span data-ttu-id="6e0eb-103"><xref:System.Diagnostics.TraceSource> 提供了一些跟踪方法，利用这些跟踪方法，你可以方便地跟踪事件，跟踪数据和发出信息跟踪。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-103"><xref:System.Diagnostics.TraceSource> provides tracing methods that allow you to easily trace events, trace data, and issue informational traces.</span></span> <span data-ttu-id="6e0eb-104">跟踪输出<xref:System.Diagnostics.TraceSource>可通过配置文件设置控制。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-104">Trace output from <xref:System.Diagnostics.TraceSource> can be controlled by configuration file settings.</span></span> <span data-ttu-id="6e0eb-105">配置文件位于与应用程序可执行文件夹中，并具有扩展名.config 文件添加应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-105">The configuration file is located in the folder with the application executable and has the name of the application with the .config file name extension added.</span></span> <span data-ttu-id="6e0eb-106">例如，TraceSourceSample.exe 的配置文件的名称是 TraceSourceSample.exe.config。配置文件可以用于确定发送的跟踪信息的位置和要跟踪的活动级别。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-106">For example, the name of the configuration file for TraceSourceSample.exe is TraceSourceSample.exe.config. The configuration file can be used to determine where the trace information is to be sent and what levels of activity are to be traced.</span></span> <span data-ttu-id="6e0eb-107">下面的示例演示的示例应用程序配置文件的内容。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-107">The following example shows the contents of a sample application configuration file.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest" switchName="SourceSwitch"   
        switchType="System.Diagnostics.SourceSwitch" >  
        <listeners>  
          <add name="console" />  
          <remove name ="Default" />  
        </listeners>  
      </source>  
    </sources>  
    <switches>  
      <!-- You can set the level at which tracing is to occur -->  
      <add name="SourceSwitch" value="Warning" />  
        <!-- You can turn tracing off -->  
        <!--add name="SourceSwitch" value="Off" -->  
    </switches>  
    <sharedListeners>  
      <add name="console"   
        type="System.Diagnostics.ConsoleTraceListener"   
        initializeData="false"/>  
    </sharedListeners>  
    <trace autoflush="true" indentsize="4">  
      <listeners>  
        <add name="console" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="6e0eb-108"><xref:System.Diagnostics.TraceSource>类由源，通常为应用程序的名称的名称。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-108">The <xref:System.Diagnostics.TraceSource> class is identified by the name of a source, typically the name of the application.</span></span>  <span data-ttu-id="6e0eb-109">来自特定组件的跟踪消息可由启动特定的跟踪源，允许所有消息来自该组件就可以轻松识别。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-109">The trace messages coming from a particular component can be initiated by a particular trace source, allowing all messages coming from that component to be easily identified.</span></span>  
  
 <span data-ttu-id="6e0eb-110"><xref:System.Diagnostics.TraceSource> 定义跟踪方法，但实际上并不提供任何特定的机制用于生成和存储跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-110"><xref:System.Diagnostics.TraceSource> defines tracing methods but does not actually provide any specific mechanism for generating and storing tracing data.</span></span> <span data-ttu-id="6e0eb-111">跟踪侦听器，是可以由跟踪源加载的插件被生成跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-111">The tracing data is produced by trace listeners, which are plug-ins that can be loaded by trace sources.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e0eb-112">不应在终止期间调用跟踪方法。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-112">You should not call the tracing methods during finalization.</span></span> <span data-ttu-id="6e0eb-113">这样可以导致<xref:System.ObjectDisposedException>引发。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-113">Doing so can result in an <xref:System.ObjectDisposedException> being thrown.</span></span>  
  
 <span data-ttu-id="6e0eb-114">可以通过添加或删除自定义跟踪输出的目标<xref:System.Diagnostics.TraceListener>实例到或从存储在集合<xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-114">You can customize the tracing output's target by adding or removing <xref:System.Diagnostics.TraceListener> instances to or from the collection stored in the <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="6e0eb-115">默认情况下，使用的实例生成跟踪输出<xref:System.Diagnostics.DefaultTraceListener>类。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-115">By default, trace output is produced using an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="6e0eb-116">上面的配置文件示例演示了如何移除<xref:System.Diagnostics.DefaultTraceListener>和添加<xref:System.Diagnostics.ConsoleTraceListener>以生成跟踪源的跟踪输出。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-116">The preceding configuration file example demonstrates removing the <xref:System.Diagnostics.DefaultTraceListener> and adding a <xref:System.Diagnostics.ConsoleTraceListener> to produce the trace output for the trace source.</span></span> <span data-ttu-id="6e0eb-117">有关详细信息，请参阅[&lt;侦听器&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-source.md)和[ &lt;sharedListeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/sharedlisteners-element.md)。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-117">For more information, see [&lt;listeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-source.md) and [&lt;sharedListeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/sharedlisteners-element.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e0eb-118">添加到跟踪侦听器<xref:System.Diagnostics.TraceSource.Listeners%2A>集合可能导致异常引发时进行跟踪，如果跟踪侦听器使用的资源不可用。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-118">Adding a trace listener to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="6e0eb-119">条件和引发的异常取决于跟踪侦听器，并不能在本主题中枚举。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-119">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="6e0eb-120">它可能会有用呼叫<xref:System.Diagnostics.TraceSource>中的方法`try` / `catch`块来检测和处理从跟踪侦听器的任何异常。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-120">It may be useful to place calls to the <xref:System.Diagnostics.TraceSource> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
 <span data-ttu-id="6e0eb-121"><xref:System.Diagnostics.SourceSwitch>类提供了一种能够动态地控制跟踪输出。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-121">The <xref:System.Diagnostics.SourceSwitch> class provides the means to dynamically control the tracing output.</span></span> <span data-ttu-id="6e0eb-122">前面的配置文件示例演示如何你可以关闭从跟踪源和控制哪些跟踪的级别发生的跟踪。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-122">The preceding configuration file example shows how you can turn off tracing from a trace source and control the level at which tracing occurs.</span></span>  <span data-ttu-id="6e0eb-123">无需重新编译你的应用程序，可以修改源开关的值。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-123">You can modify the value of the source switch without recompiling your application.</span></span> <span data-ttu-id="6e0eb-124">有关使用配置文件设置开关的信息，请参阅<xref:System.Diagnostics.Switch>和[如何： 创建、 初始化和配置跟踪开关](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md)。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-124">For information on using the configuration file to set a switch, see <xref:System.Diagnostics.Switch> and [How to: Create, Initialize and Configure Trace Switches](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e0eb-125">如果在执行应用程序时修改配置文件，必须停止并重新启动应用程序或<xref:System.Diagnostics.Trace.Refresh%2A>必须调用方法，然后新设置才会生效。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-125">If you modify a configuration file while an application is executing, the application must be stopped and restarted or the <xref:System.Diagnostics.Trace.Refresh%2A> method must be called before the new settings take effect.</span></span>  
  
 <span data-ttu-id="6e0eb-126"><xref:System.Diagnostics.TraceEventType>枚举用于定义跟踪消息的事件类型。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-126">The <xref:System.Diagnostics.TraceEventType> enumeration is used to define the event type of the trace message.</span></span> <span data-ttu-id="6e0eb-127">跟踪筛选器使用<xref:System.Diagnostics.TraceEventType>确定如果跟踪侦听器应生成跟踪消息。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-127">Trace filters use the <xref:System.Diagnostics.TraceEventType> to determine if a trace listener should produce the trace message.</span></span>  
  
 <span data-ttu-id="6e0eb-128">跟踪侦听器可根据需要通过跟踪筛选器筛选的附加层。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-128">The trace listeners can optionally have an additional layer of filtering through a trace filter.</span></span>  <span data-ttu-id="6e0eb-129">如果跟踪侦听器具有关联的筛选器，该侦听器将调用<xref:System.Diagnostics.TraceFilter.ShouldTrace%2A>上该筛选器，以确定是否生成跟踪信息的方法。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-129">If a trace listener has an associated filter, the listener calls the <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method on that filter to determine whether or not to produce the trace information.</span></span>  
  
 <span data-ttu-id="6e0eb-130">跟踪侦听器使用的值<xref:System.Diagnostics.Trace>类属性<xref:System.Diagnostics.Trace.Indent%2A>， <xref:System.Diagnostics.Trace.IndentSize%2A>，和<xref:System.Diagnostics.Trace.AutoFlush%2A>跟踪输出的格式。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-130">The trace listeners use the values of the <xref:System.Diagnostics.Trace> class properties <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, and <xref:System.Diagnostics.Trace.AutoFlush%2A> to format trace output.</span></span> <span data-ttu-id="6e0eb-131">你可以使用配置文件属性来设置<xref:System.Diagnostics.Trace.Indent%2A>， <xref:System.Diagnostics.Trace.IndentSize%2A>，和<xref:System.Diagnostics.Trace.AutoFlush%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-131">You can use configuration file attributes to set the <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, and <xref:System.Diagnostics.Trace.AutoFlush%2A> properties.</span></span> <span data-ttu-id="6e0eb-132">下面的示例设置<xref:System.Diagnostics.Trace.AutoFlush%2A>属性`false`和<xref:System.Diagnostics.Trace.IndentSize%2A>为 3 的属性。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-132">The following example sets the <xref:System.Diagnostics.Trace.AutoFlush%2A> property to `false` and the <xref:System.Diagnostics.Trace.IndentSize%2A> property to 3.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6e0eb-133">下面的代码示例演示了利用<xref:System.Diagnostics.TraceSource>类将转发到侦听器的跟踪。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-133">The following code example shows the use of the <xref:System.Diagnostics.TraceSource> class to forward traces to listeners.</span></span>  <span data-ttu-id="6e0eb-134">该示例还演示了交换机和筛选器的使用情况。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-134">The example also demonstrates switch and filter usage.</span></span>  
  
 [!code-cpp[System.Diagnostics.TraceSource2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CPP/tracesource2.cpp#1)]
 [!code-csharp[System.Diagnostics.TraceSource2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceSource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="6e0eb-135">此类型是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6e0eb-135">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6e0eb-136">初始化 <see cref="T:System.Diagnostics.TraceSource" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-136">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceSource" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6e0eb-137">源的名称（通常为应用程序的名称）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-137">The name of the source (typically, the name of the application).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e0eb-138">使用指定的源名称初始化 <see cref="T:System.Diagnostics.TraceSource" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-138">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceSource" /> class, using the specified name for the source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-139">源名称用于标识跟踪。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-139">The source name is used to identify traces.</span></span> <span data-ttu-id="6e0eb-140">它由<xref:System.Diagnostics.SourceFilter>确定跟踪侦听器是否应生成跟踪。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-140">It is used by a <xref:System.Diagnostics.SourceFilter> to determine whether a trace listener should produce the trace.</span></span> <span data-ttu-id="6e0eb-141">建议的做法是使用应用程序的名称作为源名称。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-141">The recommended practice is to use the name of the application for the source name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e0eb-142">不需要创建一个新<xref:System.Diagnostics.TraceSource>为每个跟踪请求的实例。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-142">It is not necessary to create a new <xref:System.Diagnostics.TraceSource> instance for each trace request.</span></span> <span data-ttu-id="6e0eb-143">创建一个<xref:System.Diagnostics.TraceSource>实例并使用它的应用程序的所有跟踪请求。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-143">Create one <xref:System.Diagnostics.TraceSource> instance and use it for all trace requests for the application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e0eb-144">下面的代码示例演示了利用<xref:System.Diagnostics.TraceSource.%23ctor%2A>构造函数来创建一个新<xref:System.Diagnostics.TraceSource>对象。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-144">The following code example shows the use of the <xref:System.Diagnostics.TraceSource.%23ctor%2A> constructor to create a new <xref:System.Diagnostics.TraceSource> object.</span></span> <span data-ttu-id="6e0eb-145">此代码示例摘自更大的示例为提供<xref:System.Diagnostics.TraceSource>类。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-145">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6e0eb-146">
            <paramref name="name" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-146">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6e0eb-147">
            <paramref name="name" /> 为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-147">
              <paramref name="name" /> is an empty string ("").</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name, System.Diagnostics.SourceLevels defaultLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Diagnostics.SourceLevels defaultLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, defaultLevel As SourceLevels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name, System::Diagnostics::SourceLevels defaultLevel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultLevel" Type="System.Diagnostics.SourceLevels" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6e0eb-148">源的名称，通常为应用程序的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-148">The name of the source, typically the name of the application.</span>
          </span>
        </param>
        <param name="defaultLevel">
          <span data-ttu-id="6e0eb-149">枚举的按位组合，指定要跟踪的默认源级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-149">A bitwise combination of the enumeration values that specifies the default source level at which to trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e0eb-150">使用源的指定名称和执行跟踪的默认源级别初始化 <see cref="T:System.Diagnostics.TraceSource" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-150">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceSource" /> class, using the specified name for the source and the default source level at which tracing is to occur.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-151">源名称用于标识跟踪。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-151">The source name is used to identify traces.</span></span> <span data-ttu-id="6e0eb-152">它可由<xref:System.Diagnostics.SourceSwitch>以确定是否发生跟踪和<xref:System.Diagnostics.SourceFilter>来确定是否可生成跟踪。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-152">It can be used by a <xref:System.Diagnostics.SourceSwitch> to determine if tracing is to occur and by a <xref:System.Diagnostics.SourceFilter> to determine whether to produce the trace.</span></span> <span data-ttu-id="6e0eb-153">使用默认源级别<xref:System.Diagnostics.EventTypeFilter>以确定是否发生跟踪基于要跟踪的消息的源级别。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-153">The default source level is used by an <xref:System.Diagnostics.EventTypeFilter> to determine if tracing is to occur based on the source level of the message to be traced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e0eb-154">不需要创建一个新<xref:System.Diagnostics.TraceSource>为每个跟踪请求的实例。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-154">It is not necessary to create a new <xref:System.Diagnostics.TraceSource> instance for each trace request.</span></span> <span data-ttu-id="6e0eb-155">创建一个<xref:System.Diagnostics.TraceSource>实例并使用它的应用程序的所有跟踪请求。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-155">Create one <xref:System.Diagnostics.TraceSource> instance and use it for all trace requests for the application.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6e0eb-156">
            <paramref name="name" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-156">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6e0eb-157">
            <paramref name="name" /> 为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-157">
              <paramref name="name" /> is an empty string ("").</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6e0eb-158">获取在应用程序配置文件中定义的自定义开关特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-158">Gets the custom switch attributes defined in the application configuration file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6e0eb-159">包含跟踪开关的自定义特性的 <see cref="T:System.Collections.Specialized.StringDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-159">A <see cref="T:System.Collections.Specialized.StringDictionary" /> containing the custom attributes for the trace switch.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-160"><xref:System.Diagnostics.TraceSource.Attributes%2A>属性标识应用程序的配置文件中引用的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-160">The <xref:System.Diagnostics.TraceSource.Attributes%2A> property identifies the custom attributes referenced in the application's configuration file.</span></span> <span data-ttu-id="6e0eb-161">未引用的自定义属性不会枚举。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-161">Unreferenced custom attributes are not enumerated.</span></span> <span data-ttu-id="6e0eb-162">继承自的类<xref:System.Diagnostics.TraceSource>类可以通过重写中添加自定义特性<xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=nameWithType>方法并返回的自定义属性名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-162">Classes that inherit from the <xref:System.Diagnostics.TraceSource> class can add custom attributes by overriding the <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=nameWithType> method and returning a string array of custom attribute names.</span></span>  
  
 <span data-ttu-id="6e0eb-163">以下是指定自定义特性的跟踪源元素的一个示例`SecondTraceSourceAttribute`:</span><span class="sxs-lookup"><span data-stu-id="6e0eb-163">The following is a sample of a trace source element specifying the custom attribute `SecondTraceSourceAttribute`:</span></span>  
  
```  
<sources>  
  <source name="TraceTest" switchName="TestSourceSwitch"   
    switchType="Testing.MySourceSwitch, TraceSample"   
    SecondTraceSourceAttribute="two">  
  </source>  
</sources>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6e0eb-164">下面的代码示例演示如何显示的自定义属性<xref:System.Diagnostics.TraceSource>。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-164">The following code sample shows how to display the custom attributes for a <xref:System.Diagnostics.TraceSource>.</span></span>  <span data-ttu-id="6e0eb-165">此代码示例摘自更大的示例为提供<xref:System.Diagnostics.TraceSource>类。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-165">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#14)]
 [!code-vb[System.Diagnostics.TraceSource2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e0eb-166">关闭跟踪侦听器集合中的所有跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-166">Closes all the trace listeners in the trace listener collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-167"><xref:System.Diagnostics.TraceSource.Close%2A>方法调用<xref:System.Diagnostics.TraceListener.Close%2A>方法中的每个跟踪侦听器<xref:System.Diagnostics.TraceSource.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-167">The <xref:System.Diagnostics.TraceSource.Close%2A> method calls the <xref:System.Diagnostics.TraceListener.Close%2A> method of each trace listener in the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e0eb-168">下面的代码示例演示如何使用<xref:System.Diagnostics.TraceSource.Close%2A>方法来关闭集合中的所有侦听器。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-168">The following code example shows how you can use the <xref:System.Diagnostics.TraceSource.Close%2A> method to close all the listeners in the collection.</span></span> <span data-ttu-id="6e0eb-169">此代码示例摘自更大的示例为提供<xref:System.Diagnostics.TraceSource>类。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-169">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6e0eb-170">用于操作与非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-170">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="6e0eb-171">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-171">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e0eb-172">刷新跟踪侦听器集合中的所有跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-172">Flushes all the trace listeners in the trace listener collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-173"><xref:System.Diagnostics.TraceSource.Flush%2A>方法调用<xref:System.Diagnostics.TraceListener.Flush%2A>方法中的每个跟踪侦听器<xref:System.Diagnostics.TraceSource.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-173">The <xref:System.Diagnostics.TraceSource.Flush%2A> method calls the <xref:System.Diagnostics.TraceListener.Flush%2A> method of each trace listener in the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e0eb-174">下面的代码示例演示如何使用<xref:System.Diagnostics.TraceSource.Flush%2A>方法以刷新所有的侦听器集合中。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-174">The following code example shows how you can use the <xref:System.Diagnostics.TraceSource.Flush%2A> method to flush all the listeners in the collection.</span></span> <span data-ttu-id="6e0eb-175">此代码示例摘自更大的示例为提供<xref:System.Diagnostics.TraceSource>类。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-175">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e0eb-176">终止期间尝试跟踪事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-176">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6e0eb-177">获取跟踪源所支持的自定义特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-177">Gets the custom attributes supported by the trace source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e0eb-178">对跟踪源支持的自定义特性进行命名的字符串数组；如果不存在自定义特性，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-178">A string array naming the custom attributes supported by the trace source, or <see langword="null" /> if there are no custom attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-179">默认实现<xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A>返回`null`。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-179">The default implementation for <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e0eb-180">下面的代码示例演示如何重写的<xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A>的方法来确定自定义属性`MyTraceSource`类。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-180">The following code example shows an override of the <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> method to identify the custom attributes for the `MyTraceSource` class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6e0eb-181">从继承时<see cref="T:System.Diagnostics.TraceSource" />类或派生的类，你可以重写<see cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />方法来为您的类提供自定义属性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6e0eb-181">When inheriting from the <see cref="T:System.Diagnostics.TraceSource" /> class or a derived class, you can override the <see cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" /> method to provide custom attributes for your class.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6e0eb-182">获取跟踪源的跟踪侦听器集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-182">Gets the collection of trace listeners for the trace source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6e0eb-183">包含与源关联的活动跟踪侦听器的 <see cref="T:System.Diagnostics.TraceListenerCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-183">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> that contains the active trace listeners associated with the source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-184">此属性用于访问和执行操作的跟踪侦听器。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-184">Use this property to access and perform operations on the trace listeners.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6e0eb-185">用于操作与非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-185">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="6e0eb-186">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-186">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6e0eb-187">获取跟踪源的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-187">Gets the name of the trace source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6e0eb-188">跟踪源的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-188">The name of the trace source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-189">通过设置名称`name`参数传递给构造函数。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-189">The name is set by the `name` parameter passed to the constructor.</span></span> <span data-ttu-id="6e0eb-190">可以通过使用引用到跟踪源`name`配置文件中的属性。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-190">You can refer to the trace source by using the `name` attribute in the configuration file.</span></span>  
  
 <span data-ttu-id="6e0eb-191">下面的 XML 元素显示引用的配置文件中的跟踪源。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-191">The following XML element shows referring to a trace source in the configuration file.</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest">  
      </source>  
    </sources>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="6e0eb-192">下面的代码示例演示如何将构造函数调用中的跟踪源。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-192">The following code sample shows how to name a trace source in the constructor call.</span></span>  <span data-ttu-id="6e0eb-193">此代码示例摘自更大的示例为提供<xref:System.Diagnostics.TraceSource>类。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-193">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceSwitch Switch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SourceSwitch Switch" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Switch" />
      <MemberSignature Language="VB.NET" Value="Public Property Switch As SourceSwitch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceSwitch ^ Switch { System::Diagnostics::SourceSwitch ^ get(); void set(System::Diagnostics::SourceSwitch ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceSwitch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6e0eb-194">获取或设置源开关的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-194">Gets or sets the source switch value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6e0eb-195">表示源开关值的 <see cref="T:System.Diagnostics.SourceSwitch" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-195">A <see cref="T:System.Diagnostics.SourceSwitch" /> object representing the source switch value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-196"><xref:System.Diagnostics.TraceSource.Switch%2A>属性允许跟踪源调用中的侦听器之前的消息筛选。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-196">The <xref:System.Diagnostics.TraceSource.Switch%2A> property allows the filtering of messages before the trace source calls the listeners.</span></span>  
  
 <span data-ttu-id="6e0eb-197">使用开关来检查是否应生成或忽略跟踪调用。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-197">The switch is used to check whether trace calls should be generated or ignored.</span></span> <span data-ttu-id="6e0eb-198">每个跟踪方法调用<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法<xref:System.Diagnostics.SourceSwitch>来确定是否继续进行跟踪。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-198">Each trace method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> method of the <xref:System.Diagnostics.SourceSwitch> to determine whether to proceed with the trace.</span></span> <span data-ttu-id="6e0eb-199">如果调用返回`true`，则将调用侦听器。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-199">If the call returns `true`, the listeners are called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6e0eb-200">将 <see cref="P:System.Diagnostics.TraceSource.Switch" /> 设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-200">
              <see cref="P:System.Diagnostics.TraceSource.Switch" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="6e0eb-201">用于操作与非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-201">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="6e0eb-202">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-202">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6e0eb-203">将跟踪数据写入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-203">Writes trace data to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventType">
          <span data-ttu-id="6e0eb-204">指定跟踪数据的事件类型的其中一个枚举值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-204">One of the enumeration values that specifies the event type of the trace data.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="6e0eb-205">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-205">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="6e0eb-206">跟踪数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-206">The trace data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e0eb-207">使用指定的事件类型、事件标识符和跟踪数据，将跟踪数据写入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-207">Writes trace data to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified event type, event identifier, and trace data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-208"><xref:System.Diagnostics.TraceSource.TraceData%2A>方法、 like<xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法，适用于自动工具，但它还允许其他对象，如异常实例，对此跟踪在附加。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-208">The <xref:System.Diagnostics.TraceSource.TraceData%2A> method, like the <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method, is intended for automated tools, but it also allows the attaching of an additional object, such as an exception instance, to the trace.</span></span>  
  
 <span data-ttu-id="6e0eb-209"><xref:System.Diagnostics.TraceSource.TraceData%2A>方法调用<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=nameWithType>方法<xref:System.Diagnostics.SourceSwitch>返回对象<xref:System.Diagnostics.TraceSource.Switch%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-209">The <xref:System.Diagnostics.TraceSource.TraceData%2A> method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=nameWithType> method of the <xref:System.Diagnostics.SourceSwitch> object returned by the <xref:System.Diagnostics.TraceSource.Switch%2A> property.</span></span> <span data-ttu-id="6e0eb-210">如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>返回`true`，<xref:System.Diagnostics.TraceSource.TraceData%2A>调用相应<xref:System.Diagnostics.TraceListener.TraceData%2A>上的所有侦听器方法。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-210">If <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> returns `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> calls the corresponding <xref:System.Diagnostics.TraceListener.TraceData%2A> method on all listeners.</span></span> <span data-ttu-id="6e0eb-211">否则为<xref:System.Diagnostics.TraceSource.TraceData%2A>返回而不会调用的侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-211">Otherwise, <xref:System.Diagnostics.TraceSource.TraceData%2A> returns without calling the listeners' methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e0eb-212"><xref:System.Diagnostics.EventLogTraceListener>对象被限制为最多`id`65,535 的值。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-212">The <xref:System.Diagnostics.EventLogTraceListener> object is limited to a maximum `id` value of 65,535.</span></span> <span data-ttu-id="6e0eb-213">如果`id`指定的值是否大于 65,535，<xref:System.Diagnostics.EventLogTraceListener>对象使用 65,535。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-213">If the `id` value specified is greater than 65,535, the <xref:System.Diagnostics.EventLogTraceListener> object uses 65,535.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e0eb-214">下面的代码示例演示了利用<xref:System.Diagnostics.TraceSource.TraceData%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.Object%29>方法筛选，并将跟踪消息转发到侦听器。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-214">The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceData%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.Object%29> method to filter and forward a trace message to the listeners.</span></span> <span data-ttu-id="6e0eb-215">此代码示例摘自更大的示例为提供<xref:System.Diagnostics.TraceSource>类。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-215">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e0eb-216">终止期间尝试跟踪事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-216">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">
          <span data-ttu-id="6e0eb-217">指定跟踪数据的事件类型的其中一个枚举值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-217">One of the enumeration values that specifies the event type of the trace data.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="6e0eb-218">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-218">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="6e0eb-219">包含跟踪数据的对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-219">An object array containing the trace data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e0eb-220">使用指定的事件类型、事件标识符和跟踪数据数组，将跟踪数据写入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-220">Writes trace data to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified event type, event identifier, and trace data array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-221"><xref:System.Diagnostics.TraceSource.TraceData%2A>方法、 like<xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法，适用于自动工具，但它还允许附加其他对象，如异常实例和堆栈跟踪，对此跟踪。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-221">The <xref:System.Diagnostics.TraceSource.TraceData%2A> method, like the <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method, is intended for automated tools, but it also allows the attaching of additional objects, such as an exception instance and a stack trace, to the trace.</span></span>  
  
 <span data-ttu-id="6e0eb-222"><xref:System.Diagnostics.TraceSource.TraceData%2A>方法调用<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法<xref:System.Diagnostics.SourceSwitch>返回对象<xref:System.Diagnostics.TraceSource.Switch%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-222">The <xref:System.Diagnostics.TraceSource.TraceData%2A> method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> method of the <xref:System.Diagnostics.SourceSwitch> object returned by the <xref:System.Diagnostics.TraceSource.Switch%2A> property.</span></span> <span data-ttu-id="6e0eb-223">如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>返回`true`，<xref:System.Diagnostics.TraceSource.TraceData%2A>调用相应<xref:System.Diagnostics.TraceListener.TraceData%2A>上的所有侦听器方法。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-223">If <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> returns `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> calls the corresponding <xref:System.Diagnostics.TraceListener.TraceData%2A> method on all listeners.</span></span> <span data-ttu-id="6e0eb-224">否则为<xref:System.Diagnostics.TraceSource.TraceData%2A>返回而不会调用的侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-224">Otherwise, <xref:System.Diagnostics.TraceSource.TraceData%2A> returns without calling the listeners' methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e0eb-225"><xref:System.Diagnostics.EventLogTraceListener>对象被限制为最多`id`65,535 的值。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-225">The <xref:System.Diagnostics.EventLogTraceListener> object is limited to a maximum `id` value of 65,535.</span></span> <span data-ttu-id="6e0eb-226">如果`id`指定的值是否大于 65,535，<xref:System.Diagnostics.EventLogTraceListener>对象使用 65,535。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-226">If the `id` value specified is greater than 65,535, the <xref:System.Diagnostics.EventLogTraceListener> object uses 65,535.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e0eb-227">终止期间尝试跟踪事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-227">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6e0eb-228">将跟踪事件消息写入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-228">Writes a trace event message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventType">
          <span data-ttu-id="6e0eb-229">指定跟踪数据的事件类型的其中一个枚举值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-229">One of the enumeration values that specifies the event type of the trace data.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="6e0eb-230">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-230">A numeric identifier for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e0eb-231">使用指定的事件类型和事件标识符，将跟踪事件消息写入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-231">Writes a trace event message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified event type and event identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-232"><xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法的意图是可由工具自动处理的跟踪事件。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-232">The <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method is intended to trace events that can be processed automatically by tools.</span></span> <span data-ttu-id="6e0eb-233">例如，监视工具可以通知管理员特定事件跟踪由特定的源。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-233">For example, a monitoring tool can notify an administrator if a specific event is traced by a specific source.</span></span>  
  
 <span data-ttu-id="6e0eb-234"><xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法调用<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法<xref:System.Diagnostics.SourceSwitch>返回对象<xref:System.Diagnostics.TraceSource.Switch%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-234">The <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> method of the <xref:System.Diagnostics.SourceSwitch> object returned by the <xref:System.Diagnostics.TraceSource.Switch%2A> property.</span></span> <span data-ttu-id="6e0eb-235">如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>返回`true`，<xref:System.Diagnostics.TraceSource.TraceEvent%2A>调用相应<xref:System.Diagnostics.TraceListener.TraceEvent%2A>的每个侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-235">If <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> returns `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> calls the corresponding <xref:System.Diagnostics.TraceListener.TraceEvent%2A> method of each listener.</span></span> <span data-ttu-id="6e0eb-236">否则为<xref:System.Diagnostics.TraceSource.TraceEvent%2A>返回而不会调用的侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-236">Otherwise, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> returns without calling the listeners' methods.</span></span>  
  
 <span data-ttu-id="6e0eb-237">跟踪内容是特定于侦听器。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-237">The trace content is listener specific.</span></span> <span data-ttu-id="6e0eb-238">如果侦听器实现不重写该方法，默认输出将为跟踪源、 其数字标识和事件类型的名称。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-238">If the method is not overridden by the listener implementation, the default output is the name of the trace source, its numeric identity, and the event type.</span></span>  <span data-ttu-id="6e0eb-239">其他跟踪内容是依赖于该侦听器的<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-239">Additional trace content is dependent upon the listener's <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e0eb-240"><xref:System.Diagnostics.EventLogTraceListener>对象被限制为最多`id`65,535 的值。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-240">The <xref:System.Diagnostics.EventLogTraceListener> object is limited to a maximum `id` value of 65,535.</span></span> <span data-ttu-id="6e0eb-241">如果`id`指定的值是否大于 65,535，<xref:System.Diagnostics.EventLogTraceListener>使用 65,535。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-241">If the `id` value specified is greater than 65,535, the <xref:System.Diagnostics.EventLogTraceListener> uses 65,535.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e0eb-242">下面的代码示例演示了利用<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29>方法以将跟踪事件传递到侦听器。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-242">The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> method to pass a trace event to the listeners.</span></span> <span data-ttu-id="6e0eb-243">此代码示例摘自更大的示例为提供<xref:System.Diagnostics.TraceSource>类。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-243">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#17)]
 [!code-vb[System.Diagnostics.TraceSource2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e0eb-244">终止期间尝试跟踪事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-244">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventType">
          <span data-ttu-id="6e0eb-245">指定跟踪数据的事件类型的其中一个枚举值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-245">One of the enumeration values that specifies the event type of the trace data.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="6e0eb-246">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-246">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="6e0eb-247">要写入的跟踪消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-247">The trace message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e0eb-248">使用指定的事件类型、事件标识符和消息，将跟踪事件消息写入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-248">Writes a trace event message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified event type, event identifier, and message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-249"><xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法的意图是可由工具自动处理的跟踪事件。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-249">The <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method is intended to trace events that can be processed automatically by tools.</span></span> <span data-ttu-id="6e0eb-250">例如，监视工具可以通知管理员特定事件跟踪由特定的源。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-250">For example, a monitoring tool can notify an administrator if a specific event is traced by a specific source.</span></span>  
  
 <span data-ttu-id="6e0eb-251"><xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法调用<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法<xref:System.Diagnostics.SourceSwitch>返回对象<xref:System.Diagnostics.TraceSource.Switch%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-251">The <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> method of the <xref:System.Diagnostics.SourceSwitch> object returned by the <xref:System.Diagnostics.TraceSource.Switch%2A> property.</span></span> <span data-ttu-id="6e0eb-252">如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>返回`true`，<xref:System.Diagnostics.TraceSource.TraceEvent%2A>调用相应<xref:System.Diagnostics.TraceListener.TraceEvent%2A>的每个侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-252">If <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> returns `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> calls the corresponding <xref:System.Diagnostics.TraceListener.TraceEvent%2A> method of each listener.</span></span> <span data-ttu-id="6e0eb-253">否则为<xref:System.Diagnostics.TraceSource.TraceEvent%2A>返回而不会调用的侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-253">Otherwise, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> returns without calling the listeners' methods.</span></span>  
  
 <span data-ttu-id="6e0eb-254">跟踪内容是特定于侦听器。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-254">The trace content is listener specific.</span></span> <span data-ttu-id="6e0eb-255">如果侦听器实现不重写该方法，默认输出将为跟踪源、 其数字标识、 事件类型，以及消息的名称。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-255">If the method is not overridden by the listener implementation, the default output is the name of the trace source, its numeric identity, the event type, and the message.</span></span>  <span data-ttu-id="6e0eb-256">其他跟踪内容是依赖于该侦听器的<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-256">Additional trace content is dependent upon the listener's <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e0eb-257"><xref:System.Diagnostics.EventLogTraceListener>对象被限制为最多`id`65,535 的值。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-257">The <xref:System.Diagnostics.EventLogTraceListener> object is limited to a maximum `id` value of 65,535.</span></span> <span data-ttu-id="6e0eb-258">如果`id`指定的值是否大于 65,535，<xref:System.Diagnostics.EventLogTraceListener>对象使用 65,535。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-258">If the `id` value specified is greater than 65,535, the <xref:System.Diagnostics.EventLogTraceListener> object uses 65,535.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e0eb-259">下面的代码示例演示了利用<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29>方法以将跟踪事件传递到侦听器。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-259">The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> method to pass a trace event to the listeners.</span></span> <span data-ttu-id="6e0eb-260">此代码示例摘自更大的示例为提供<xref:System.Diagnostics.TraceSource>类。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-260">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#18)]
 [!code-vb[System.Diagnostics.TraceSource2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e0eb-261">终止期间尝试跟踪事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-261">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">
          <span data-ttu-id="6e0eb-262">指定跟踪数据的事件类型的其中一个枚举值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-262">One of the enumeration values that specifies the event type of the trace data.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="6e0eb-263">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-263">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="6e0eb-264">一个复合格式字符串，其中包含与零个或多个格式项混合的文本，与 <c>args</c> 数组中的对象相对应。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-264">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="6e0eb-265">包含零个或多个要格式化的对象的 <see langword="object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-265">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e0eb-266">使用指定的事件类型、事件标识符以及参数数组和格式，将跟踪事件写入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-266">Writes a trace event to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified event type, event identifier, and argument array and format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-267">有关详细信息`format`参数，请参阅[复合格式设置](~/docs/standard/base-types/composite-formatting.md)。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-267">For more information about the `format` parameter, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
 <span data-ttu-id="6e0eb-268"><xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法的意图是可由工具自动处理的跟踪事件。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-268">The <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method is intended to trace events that can be processed automatically by tools.</span></span> <span data-ttu-id="6e0eb-269">例如，监视工具可以通知管理员特定事件跟踪由特定的源。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-269">For example, a monitoring tool can notify an administrator if a specific event is traced by a specific source.</span></span>  
  
 <span data-ttu-id="6e0eb-270"><xref:System.Diagnostics.TraceSource.TraceEvent%2A>方法调用<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>方法<xref:System.Diagnostics.SourceSwitch>返回对象<xref:System.Diagnostics.TraceSource.Switch%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-270">The <xref:System.Diagnostics.TraceSource.TraceEvent%2A> method calls the <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> method of the <xref:System.Diagnostics.SourceSwitch> object returned by the <xref:System.Diagnostics.TraceSource.Switch%2A> property.</span></span> <span data-ttu-id="6e0eb-271">如果<xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A>返回`true`，<xref:System.Diagnostics.TraceSource.TraceEvent%2A>调用相应<xref:System.Diagnostics.TraceListener.TraceEvent%2A>的每个侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-271">If <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> returns `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> calls the corresponding <xref:System.Diagnostics.TraceListener.TraceEvent%2A> method of each listener.</span></span> <span data-ttu-id="6e0eb-272">否则为<xref:System.Diagnostics.TraceSource.TraceEvent%2A>返回而不会调用的侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-272">Otherwise, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> returns without calling the listeners' methods.</span></span>  
  
 <span data-ttu-id="6e0eb-273">跟踪内容是特定于侦听器。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-273">The trace content is listener specific.</span></span> <span data-ttu-id="6e0eb-274">默认值<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>方法将写入源名称、 事件类型和数字标识中的跟踪标头，然后调用<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>方法，并传递`format`字符串和`args`数组并使用<xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType>属性格式化作为消息输出的字符串。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-274">The default <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> method writes the source name, event type, and numeric identity in the trace header, then calls the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method, passing the `format` string and `args` array and using the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> property to format the string as the message output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6e0eb-275"><xref:System.Diagnostics.EventLogTraceListener>对象被限制为最多`id`65,535 的值。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-275">The <xref:System.Diagnostics.EventLogTraceListener> object is limited to a maximum `id` value of 65,535.</span></span> <span data-ttu-id="6e0eb-276">如果`id`指定的值是否大于 65,535，<xref:System.Diagnostics.EventLogTraceListener>对象使用 65,535。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-276">If the `id` value specified is greater than 65,535, the <xref:System.Diagnostics.EventLogTraceListener> object uses 65,535.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6e0eb-277">下面的代码示例演示了利用<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29>方法以将跟踪事件传递到侦听器。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-277">The following code example shows the use of the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> method to pass a trace event to the listeners.</span></span> <span data-ttu-id="6e0eb-278">此代码示例摘自更大的示例为提供<xref:System.Diagnostics.TraceSource>类。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-278">This code example is part of a larger example provided for the <xref:System.Diagnostics.TraceSource> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.TraceSource2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#24)]
 [!code-vb[System.Diagnostics.TraceSource2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6e0eb-279">
            <paramref name="format" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-279">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="6e0eb-280">
            <paramref name="format" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-280">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="6e0eb-281">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-281">-or-</span>
          </span>
          <span data-ttu-id="6e0eb-282">表示要设置格式的参数的数字小于零，或者大于等于要设置格式的指定对象的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-282">The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e0eb-283">终止期间尝试跟踪事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-283">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6e0eb-284">将信息性消息写入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-284">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="6e0eb-285">要写入的信息性消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-285">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e0eb-286">使用指定消息，将信息性消息写入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-286">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-287"><xref:System.Diagnostics.TraceSource.TraceInformation%2A>方法提供旨在由用户而不是工具读取一条信息性消息。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-287">The <xref:System.Diagnostics.TraceSource.TraceInformation%2A> method provides an informational message intended to be read by users and not by tools.</span></span>  
  
 <span data-ttu-id="6e0eb-288"><xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%29> 调用<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>方法，设置`eventType`到<xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType>并将作为消息字符串中传递的信息性消息。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-288"><xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%29> calls the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> method, setting `eventType` to <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> and passing the informative message as the message string.</span></span> <span data-ttu-id="6e0eb-289"><xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>方法反过来调用<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>方法的每个跟踪侦听器。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-289">The <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> method in turn calls the <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> method of each trace listener.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e0eb-290">终止期间尝试跟踪事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-290">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="6e0eb-291">一个复合格式字符串，其中包含与零个或多个格式项混合的文本，与 <c>args</c> 数组中的对象相对应。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-291">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="6e0eb-292">包含零个或多个要格式化的对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-292">An array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e0eb-293">使用指定的对象数组和格式化信息，将信息性消息写入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-293">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified object array and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-294">有关详细信息`format`参数，请参阅[复合格式设置](~/docs/standard/base-types/composite-formatting.md)。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-294">For more information about the `format` parameter, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
 <span data-ttu-id="6e0eb-295"><xref:System.Diagnostics.TraceSource.TraceInformation%2A>方法提供旨在由用户而不是工具读取一条信息性消息。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-295">The <xref:System.Diagnostics.TraceSource.TraceInformation%2A> method provides an informational message intended to be read by users and not by tools.</span></span>  
  
 <span data-ttu-id="6e0eb-296"><xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%2CSystem.Object%5B%5D%29> 调用<xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>方法，设置`eventType`到<xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType>并传递消息内容作为包含格式设置信息的对象数组。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-296"><xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%2CSystem.Object%5B%5D%29> calls the <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> method, setting `eventType` to <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> and passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="6e0eb-297"><xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>方法反过来调用<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>方法的每个跟踪侦听器。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-297">The <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> method in turn calls the <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> method of each trace listener.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6e0eb-298">
            <paramref name="format" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-298">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="6e0eb-299">
            <paramref name="format" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-299">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="6e0eb-300">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-300">-or-</span>
          </span>
          <span data-ttu-id="6e0eb-301">表示要设置格式的参数的数字小于零，或者大于等于要设置格式的指定对象的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-301">The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6e0eb-302">终止期间尝试跟踪事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-302">An attempt was made to trace an event during finalization.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public void TraceTransfer (int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceTransfer(int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceTransfer (id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceTransfer(int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="6e0eb-303">事件的数值标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-303">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="6e0eb-304">要写入的跟踪消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-304">The trace message to write.</span>
          </span>
        </param>
        <param name="relatedActivityId">
          <span data-ttu-id="6e0eb-305">标识相关活动的结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-305">A structure that identifies the related activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e0eb-306">使用指定的数字标识符、消息和相关活动标识符，将跟踪传输消息写入 <see cref="P:System.Diagnostics.TraceSource.Listeners" /> 集合的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e0eb-306">Writes a trace transfer message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection using the specified numeric identifier, message, and related activity identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e0eb-307"><xref:System.Diagnostics.TraceSource.TraceTransfer%2A>方法调用<xref:System.Diagnostics.TraceListener.TraceTransfer%2A>方法中的每个跟踪侦听器<xref:System.Diagnostics.TraceSource.Listeners%2A>属性来写入跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-307">The <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method calls the <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> method of each trace listener in the <xref:System.Diagnostics.TraceSource.Listeners%2A> property to write the trace information.</span></span> <span data-ttu-id="6e0eb-308">默认值<xref:System.Diagnostics.TraceListener.TraceTransfer%2A>基类中的方法<xref:System.Diagnostics.TraceListener>类调用<xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType>方法以处理调用，设置`eventType`到<xref:System.Diagnostics.TraceEventType.Transfer?displayProperty=nameWithType>和追加的字符串表示形式`relatedActivityId`GUID `message`。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-308">The default <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> method in the base <xref:System.Diagnostics.TraceListener> class calls the <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> method to process the call, setting `eventType` to <xref:System.Diagnostics.TraceEventType.Transfer?displayProperty=nameWithType> and appending a string representation of the `relatedActivityId` GUID to `message`.</span></span>  
  
 <span data-ttu-id="6e0eb-309"><xref:System.Diagnostics.TraceSource.TraceTransfer%2A> 旨在与的逻辑操作一起使用<xref:System.Diagnostics.CorrelationManager>。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-309"><xref:System.Diagnostics.TraceSource.TraceTransfer%2A> is intended to be used with the logical operations of a <xref:System.Diagnostics.CorrelationManager>.</span></span> <span data-ttu-id="6e0eb-310">`relatedActivityId`参数与<xref:System.Diagnostics.CorrelationManager.ActivityId%2A>属性<xref:System.Diagnostics.CorrelationManager>对象。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-310">The `relatedActivityId` parameter relates to the <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> property of a <xref:System.Diagnostics.CorrelationManager> object.</span></span> <span data-ttu-id="6e0eb-311">如果逻辑运算开始一个活动中，然后转移到另一个，第二个活动来记录通过调用该传输<xref:System.Diagnostics.TraceSource.TraceTransfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-311">If a logical operation begins in one activity and transfers to another, the second activity logs the transfer by calling the <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> method.</span></span> <span data-ttu-id="6e0eb-312"><xref:System.Diagnostics.TraceSource.TraceTransfer%2A>呼叫与新的活动标识相关到以前的身份。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-312">The <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> call relates the new activity identity to the previous identity.</span></span> <span data-ttu-id="6e0eb-313">此功能的最有可能使用者是可以报告跨越多个活动的逻辑操作的跟踪查看器。</span><span class="sxs-lookup"><span data-stu-id="6e0eb-313">The most likely consumer of this functionality is a trace viewer that can report logical operations that span multiple activities.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.XmlWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventSchemaTraceListener" />
        <altmember cref="T:System.Diagnostics.DelimitedListTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>