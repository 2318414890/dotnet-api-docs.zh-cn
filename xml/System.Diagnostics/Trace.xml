<Type Name="Trace" FullName="System.Diagnostics.Trace">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e42fd94386357117b180964fe8e0ea782e8fcab0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36674299" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Trace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Trace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Trace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Trace" />
  <TypeSignature Language="C++ CLI" Value="public ref class Trace sealed" />
  <TypeSignature Language="F#" Value="type Trace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0fb12-101">提供一组方法和属性，帮助您跟踪代码的执行。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0fb12-101">Provides a set of methods and properties that help you trace the execution of your code.</span>
      </span>
      <span data-ttu-id="0fb12-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0fb12-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-103">你可以使用的属性和方法中的<xref:System.Diagnostics.Trace>来检测发行的类生成。</span><span class="sxs-lookup"><span data-stu-id="0fb12-103">You can use the properties and methods in the <xref:System.Diagnostics.Trace> class to instrument release builds.</span></span> <span data-ttu-id="0fb12-104">检测可用于监视在真实生活设置中运行的应用程序的运行状况。</span><span class="sxs-lookup"><span data-stu-id="0fb12-104">Instrumentation allows you to monitor the health of your application running in real-life settings.</span></span> <span data-ttu-id="0fb12-105">跟踪帮助隔离问题，而不影响正在运行的系统修复它们。</span><span class="sxs-lookup"><span data-stu-id="0fb12-105">Tracing helps you isolate problems and fix them without disturbing a running system.</span></span>  
  
 <span data-ttu-id="0fb12-106">此类提供了方法显示<xref:System.Diagnostics.Trace.Assert%2A>对话框中，并发出始终将断言<xref:System.Diagnostics.Trace.Fail%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-106">This class provides methods to display an <xref:System.Diagnostics.Trace.Assert%2A> dialog box, and to emit an assertion that will always <xref:System.Diagnostics.Trace.Fail%2A>.</span></span> <span data-ttu-id="0fb12-107">此类提供的以下变体的写入方法： <xref:System.Diagnostics.Trace.Write%2A>， <xref:System.Diagnostics.Trace.WriteLine%2A>， <xref:System.Diagnostics.Trace.WriteIf%2A>，和<xref:System.Diagnostics.Trace.WriteLineIf%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-107">This class provides write methods in the following variations: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, and <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="0fb12-108"><xref:System.Diagnostics.BooleanSwitch>和<xref:System.Diagnostics.TraceSwitch>类提供动态控制跟踪输出方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-108">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="0fb12-109">无需重新编译你的应用程序，可以修改这些开关的值。</span><span class="sxs-lookup"><span data-stu-id="0fb12-109">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="0fb12-110">有关使用配置文件设置开关的信息，请参阅<xref:System.Diagnostics.Switch>类和[如何： 创建、 初始化和配置跟踪开关](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md)主题。</span><span class="sxs-lookup"><span data-stu-id="0fb12-110">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [How to: Create, Initialize and Configure Trace Switches](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="0fb12-111">可以通过添加自定义跟踪输出的目标<xref:System.Diagnostics.TraceListener>实例到或删除实例从<xref:System.Diagnostics.Trace.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0fb12-111">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="0fb12-112"><xref:System.Diagnostics.Trace.Listeners%2A>集合共享两个<xref:System.Diagnostics.Debug>和<xref:System.Diagnostics.Trace>类; 添加到其中一个类的跟踪侦听器将侦听器添加到两。</span><span class="sxs-lookup"><span data-stu-id="0fb12-112">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="0fb12-113">默认情况下，使用发出跟踪输出<xref:System.Diagnostics.DefaultTraceListener>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-113">By default, trace output is emitted using the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-114">添加到跟踪侦听器<xref:System.Diagnostics.Trace.Listeners%2A>集合可能导致异常引发时进行跟踪，如果跟踪侦听器使用的资源不可用。</span><span class="sxs-lookup"><span data-stu-id="0fb12-114">Adding a trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="0fb12-115">条件和引发的异常取决于跟踪侦听器，并不能在本主题中枚举。</span><span class="sxs-lookup"><span data-stu-id="0fb12-115">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="0fb12-116">它可能会有用呼叫<xref:System.Diagnostics.Trace>中的方法`try` / `catch`块来检测和处理从跟踪侦听器的任何异常。</span><span class="sxs-lookup"><span data-stu-id="0fb12-116">It may be useful to place calls to the <xref:System.Diagnostics.Trace> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-117">如果将跟踪侦听器添加到部分受信任的代码，则您将收到 <xref:System.Security.SecurityException> 异常，因为添加跟踪侦听器需要 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> 权限。</span><span class="sxs-lookup"><span data-stu-id="0fb12-117">If you add trace listeners to partially trusted code, you will get a <xref:System.Security.SecurityException> exception, because adding trace listeners requires <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission.</span></span> <span data-ttu-id="0fb12-118">若要跟踪正在 Visual Studio 的沙盒中运行的部分受信任的代码，请不要添加跟踪侦听器。</span><span class="sxs-lookup"><span data-stu-id="0fb12-118">To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners.</span></span> <span data-ttu-id="0fb12-119">相反，查看<xref:System.Diagnostics.Trace>和<xref:System.Diagnostics.Debug>中的消息**输出**窗口。</span><span class="sxs-lookup"><span data-stu-id="0fb12-119">Instead, view the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> messages in the **Output** window.</span></span>  
  
 <span data-ttu-id="0fb12-120"><xref:System.Diagnostics.Trace>类提供的属性来获取或设置的级别<xref:System.Diagnostics.Trace.Indent%2A>、 <xref:System.Diagnostics.Trace.IndentSize%2A>，以及是否<xref:System.Diagnostics.Trace.AutoFlush%2A>每次写入后。</span><span class="sxs-lookup"><span data-stu-id="0fb12-120">The <xref:System.Diagnostics.Trace> class provides properties to get or set the level of <xref:System.Diagnostics.Trace.Indent%2A>, the <xref:System.Diagnostics.Trace.IndentSize%2A>, and whether to <xref:System.Diagnostics.Trace.AutoFlush%2A> after each write.</span></span>  
  
 <span data-ttu-id="0fb12-121">若要设置<xref:System.Diagnostics.Trace.AutoFlush%2A>和<xref:System.Diagnostics.Trace.IndentSize%2A>为<xref:System.Diagnostics.Trace>，你可以编辑与你的应用程序名称相对应的配置文件。</span><span class="sxs-lookup"><span data-stu-id="0fb12-121">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="0fb12-122">配置文件的格式应类似下面的示例：</span><span class="sxs-lookup"><span data-stu-id="0fb12-122">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="0fb12-123"><xref:System.Diagnostics.ConditionalAttribute>特性应用于的方法<xref:System.Diagnostics.Trace>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-123">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Trace>.</span></span> <span data-ttu-id="0fb12-124">支持的编译器<xref:System.Diagnostics.ConditionalAttribute>忽略对这些方法的调用，除非"TRACE"定义为有条件编译符号。</span><span class="sxs-lookup"><span data-stu-id="0fb12-124">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "TRACE" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="0fb12-125">请参阅编译器的文档，以确定是否<xref:System.Diagnostics.ConditionalAttribute>支持以及用于定义条件编译符号的语法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-125">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-126">在 Visual Studio 项目中，默认情况下，为调试版本定义“DEBUG”条件编译符号，并为调试版本和发行版本定义“TRACE”符号。</span><span class="sxs-lookup"><span data-stu-id="0fb12-126">In Visual Studio projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="0fb12-127">有关如何禁用此行为的信息，请参阅 Visual Studio 文档。</span><span class="sxs-lookup"><span data-stu-id="0fb12-127">For information about how to disable this behavior, see the Visual Studio documentation.</span></span>  
  
 <span data-ttu-id="0fb12-128">若要在 C# 中定义“TRACE”条件编译符号，请在使用命令行编译代码时将 `/d:TRACE` 选项添加到编译器命令行，或将 `#define TRACE` 添加到文件顶部。</span><span class="sxs-lookup"><span data-stu-id="0fb12-128">To define the "TRACE" conditional compilation symbol in C#, add the `/d:TRACE` option to the compiler command line when you compile your code using a command line, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="0fb12-129">在 Visual Basic 中，添加`/d:TRACE=True`到编译器命令行选项或添加`#Const TRACE=True`文件。</span><span class="sxs-lookup"><span data-stu-id="0fb12-129">In Visual Basic, add the `/d:TRACE=True` option to the compiler command line or add `#Const TRACE=True` to the file.</span></span>  
  
 <span data-ttu-id="0fb12-130"><xref:System.Diagnostics.ConditionalAttribute> 不支持 c + + 编译器。</span><span class="sxs-lookup"><span data-stu-id="0fb12-130"><xref:System.Diagnostics.ConditionalAttribute> is not supported by the C++ compiler.</span></span> <span data-ttu-id="0fb12-131">若要提供等效的功能，必须将对的方法的调用<xref:System.Diagnostics.Trace>中`#if defined(TRACE) ... #endif`块，并添加`/DTRACE`到编译器命令行选项或添加`#define TRACE`文件。</span><span class="sxs-lookup"><span data-stu-id="0fb12-131">To provide equivalent functionality, you must enclose calls to the methods of <xref:System.Diagnostics.Trace> in an `#if defined(TRACE) ... #endif` block, and add the `/DTRACE` option to the compiler command line or add `#define TRACE` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-132">下面的示例使用<xref:System.Diagnostics.Trace>以指示开头和结尾的程序的执行。</span><span class="sxs-lookup"><span data-stu-id="0fb12-132">The following example uses <xref:System.Diagnostics.Trace> to indicate the beginning and the end of a program's execution.</span></span> <span data-ttu-id="0fb12-133">此示例还使用<xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType>和<xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType>方法来区分将跟踪输出。</span><span class="sxs-lookup"><span data-stu-id="0fb12-133">The example also uses the <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> methods to distinguish the tracing output.</span></span> <span data-ttu-id="0fb12-134">有关使用的更完整示例<xref:System.Diagnostics.Trace>，请参阅[如何： 向应用程序代码添加跟踪语句](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md)。</span><span class="sxs-lookup"><span data-stu-id="0fb12-134">For a more complete example of the use of <xref:System.Diagnostics.Trace>, see [How to: Add Trace Statements to Application Code](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span></span>  
  
 [!code-cpp[Classic Trace Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace Example/CS/source.cs#1)]
 [!code-vb[Classic Trace Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="0fb12-135">用于操作与非托管代码。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0fb12-135">for operating with unmanaged code.</span>
      </span>
      <span data-ttu-id="0fb12-136">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0fb12-136">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
      </span>
      <span data-ttu-id="0fb12-137">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="0fb12-137">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
    <threadsafe>
      <span data-ttu-id="0fb12-138">此类型是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0fb12-138">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-139">检查条件 ；如果条件为 <see langword="false" />，则输出消息，并显示一个消息框，其中显示调用堆栈。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-139">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberSignature Language="F#" Value="static member Assert : bool -&gt; unit" Usage="System.Diagnostics.Trace.Assert condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="0fb12-140">要计算的条件表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-140">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="0fb12-141">如果条件为 <see langword="true" />，则不会发送失败消息，也不显示消息框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-141">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-142">检查条件 ；如果条件为 <see langword="false" />，则显示一个消息框，其中显示调用堆栈。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-142">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-143">使用<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>方法如果你想要执行断言版本中的可生成。</span><span class="sxs-lookup"><span data-stu-id="0fb12-143">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="0fb12-144"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>方法仅在调试版本中有效。</span><span class="sxs-lookup"><span data-stu-id="0fb12-144">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="0fb12-145">有关详细信息，请参阅[托管代码中的断言](/visualstudio/debugger/assertions-in-managed-code)。</span><span class="sxs-lookup"><span data-stu-id="0fb12-145">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="0fb12-146">通常情况下，<xref:System.Diagnostics.Trace.Assert%28System.Boolean%29>方法用于标识程序开发过程的逻辑错误。</span><span class="sxs-lookup"><span data-stu-id="0fb12-146">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="0fb12-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> 计算条件。</span><span class="sxs-lookup"><span data-stu-id="0fb12-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> evaluates the condition.</span></span> <span data-ttu-id="0fb12-148">如果结果为`false`，它将发送到失败消息<xref:System.Diagnostics.Trace.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0fb12-148">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="0fb12-149">可以通过添加自定义此行为<xref:System.Diagnostics.TraceListener>，或从中移除<xref:System.Diagnostics.Trace.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0fb12-149">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="0fb12-150">当在用户界面模式下运行应用程序时，它将显示一个消息框，显示文件和行号的调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="0fb12-150">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="0fb12-151">消息框包含三个按钮：**中止**，**重试**，和**忽略**。</span><span class="sxs-lookup"><span data-stu-id="0fb12-151">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="0fb12-152">单击**中止**按钮终止应用程序。</span><span class="sxs-lookup"><span data-stu-id="0fb12-152">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="0fb12-153">单击**重试**向你发送到调试器中的代码中，如果你的应用程序运行在调试器中，或如果它不是打开调试器。</span><span class="sxs-lookup"><span data-stu-id="0fb12-153">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="0fb12-154">单击**忽略**继续在代码中的下一步指令。</span><span class="sxs-lookup"><span data-stu-id="0fb12-154">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-155">在消息框显示取决于是否存在的<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-155">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="0fb12-156">如果<xref:System.Diagnostics.DefaultTraceListener>不在<xref:System.Diagnostics.Trace.Listeners%2A>集合，消息框不会显示。</span><span class="sxs-lookup"><span data-stu-id="0fb12-156">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="0fb12-157"><xref:System.Diagnostics.DefaultTraceListener>可以删除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;删除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或通过调用<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>属性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="0fb12-157">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="0fb12-158">你可以更改的行为<xref:System.Diagnostics.DefaultTraceListener>对应于你的应用程序的名称的配置文件中。</span><span class="sxs-lookup"><span data-stu-id="0fb12-158">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="0fb12-159">在此文件中，你可以启用和禁用断言消息框或设置<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0fb12-159">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0fb12-160">配置文件应格式如下：</span><span class="sxs-lookup"><span data-stu-id="0fb12-160">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-161">下面的示例创建数组的索引。</span><span class="sxs-lookup"><span data-stu-id="0fb12-161">The following example creates an index for an array.</span></span> <span data-ttu-id="0fb12-162">然后被执行一些操作设置的值的索引。</span><span class="sxs-lookup"><span data-stu-id="0fb12-162">Then some action is performed that sets the value of the index.</span></span> <span data-ttu-id="0fb12-163">接下来，该代码调用<xref:System.Diagnostics.Trace.Assert%2A>验证索引值是否有效。</span><span class="sxs-lookup"><span data-stu-id="0fb12-163">Next the code calls <xref:System.Diagnostics.Trace.Assert%2A> to verify the index value is valid.</span></span> <span data-ttu-id="0fb12-164">如果不是有效，<xref:System.Diagnostics.Trace.Assert%2A>输出调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="0fb12-164">If it is not valid, the <xref:System.Diagnostics.Trace.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Trace.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="0fb12-165">要计算的条件表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-165">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="0fb12-166">如果条件为 <see langword="true" />，则不会发送指定消息，也不显示消息框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-166">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="0fb12-167">要发送到 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-167">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-168">检查条件；如果条件为 <see langword="false" />，则输出指定消息并显示指示调用堆栈的消息框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-168">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-169">使用<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>方法如果你想要执行断言版本中的可生成。</span><span class="sxs-lookup"><span data-stu-id="0fb12-169">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="0fb12-170"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>方法仅在调试版本中有效。</span><span class="sxs-lookup"><span data-stu-id="0fb12-170">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="0fb12-171">有关详细信息，请参阅[托管代码中的断言](/visualstudio/debugger/assertions-in-managed-code)。</span><span class="sxs-lookup"><span data-stu-id="0fb12-171">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="0fb12-172">通常情况下，<xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29>方法用于标识程序开发过程的逻辑错误。</span><span class="sxs-lookup"><span data-stu-id="0fb12-172">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="0fb12-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> 计算条件。</span><span class="sxs-lookup"><span data-stu-id="0fb12-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> evaluates the condition.</span></span> <span data-ttu-id="0fb12-174">如果结果为`false`，它将发送到指定的诊断消息<xref:System.Diagnostics.Trace.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0fb12-174">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="0fb12-175">可以通过添加自定义此行为<xref:System.Diagnostics.TraceListener>，或从中移除<xref:System.Diagnostics.Trace.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0fb12-175">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="0fb12-176">当在用户界面模式下运行应用程序时，它将显示一个消息框，显示文件和行号的调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="0fb12-176">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="0fb12-177">消息框包含三个按钮：**中止**，**重试**，和**忽略**。</span><span class="sxs-lookup"><span data-stu-id="0fb12-177">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="0fb12-178">单击**中止**按钮终止应用程序。</span><span class="sxs-lookup"><span data-stu-id="0fb12-178">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="0fb12-179">单击**重试**向你发送到调试器中的代码中，如果你的应用程序运行在调试器中，或如果它不是打开调试器。</span><span class="sxs-lookup"><span data-stu-id="0fb12-179">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="0fb12-180">单击**忽略**继续在代码中的下一步指令。</span><span class="sxs-lookup"><span data-stu-id="0fb12-180">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-181">在消息框显示取决于是否存在的<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-181">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="0fb12-182">如果<xref:System.Diagnostics.DefaultTraceListener>不在<xref:System.Diagnostics.Trace.Listeners%2A>集合，消息框不会显示。</span><span class="sxs-lookup"><span data-stu-id="0fb12-182">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="0fb12-183"><xref:System.Diagnostics.DefaultTraceListener>可以删除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;删除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或通过调用<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>属性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="0fb12-183">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="0fb12-184">你可以更改的行为<xref:System.Diagnostics.DefaultTraceListener>对应于你的应用程序的名称的配置文件中。</span><span class="sxs-lookup"><span data-stu-id="0fb12-184">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="0fb12-185">在此文件中，你可以启用和禁用断言消息框或设置<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0fb12-185">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0fb12-186">配置文件应格式如下：</span><span class="sxs-lookup"><span data-stu-id="0fb12-186">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-187">下面的示例检查可以看到，`type`参数才有效。</span><span class="sxs-lookup"><span data-stu-id="0fb12-187">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="0fb12-188">如果`type`中传递`null`、<xref:System.Diagnostics.Trace.Assert%2A>输出消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-188">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.Assert (condition, message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="0fb12-189">要计算的条件表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-189">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="0fb12-190">如果条件为 <see langword="true" />，则不会发送指定的消息，也不显示消息框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-190">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="0fb12-191">要发送到 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-191">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="0fb12-192">要发送到 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合的详细消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-192">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-193">检查条件 ；如果条件为 <see langword="false" />，则输出两条指定消息，并显示一个消息框，其中显示调用堆栈。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-193">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-194">使用<xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType>方法如果你想要执行断言版本中的可生成。</span><span class="sxs-lookup"><span data-stu-id="0fb12-194">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="0fb12-195"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType>方法仅在调试版本中有效。</span><span class="sxs-lookup"><span data-stu-id="0fb12-195">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="0fb12-196">有关详细信息，请参阅[托管代码中的断言](/visualstudio/debugger/assertions-in-managed-code)。</span><span class="sxs-lookup"><span data-stu-id="0fb12-196">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="0fb12-197">通常情况下，<xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29>方法用于标识程序开发过程的逻辑错误。</span><span class="sxs-lookup"><span data-stu-id="0fb12-197">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="0fb12-198"><xref:System.Diagnostics.Trace.Assert%2A> 计算条件。</span><span class="sxs-lookup"><span data-stu-id="0fb12-198"><xref:System.Diagnostics.Trace.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="0fb12-199">如果结果为`false`，它将指定的诊断消息和详细的消息到发送<xref:System.Diagnostics.Trace.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0fb12-199">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="0fb12-200">可以通过添加自定义此行为<xref:System.Diagnostics.TraceListener>，或从中移除<xref:System.Diagnostics.Trace.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0fb12-200">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="0fb12-201">当在用户界面模式下运行应用程序时，它将显示一个消息框，显示文件和行号的调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="0fb12-201">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="0fb12-202">消息框包含三个按钮：**中止**，**重试**，和**忽略**。</span><span class="sxs-lookup"><span data-stu-id="0fb12-202">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="0fb12-203">单击**中止**按钮终止应用程序。</span><span class="sxs-lookup"><span data-stu-id="0fb12-203">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="0fb12-204">单击**重试**向你发送到调试器中的代码中，如果你的应用程序运行在调试器中，或如果它不是打开调试器。</span><span class="sxs-lookup"><span data-stu-id="0fb12-204">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="0fb12-205">单击**忽略**继续在代码中的下一步指令。</span><span class="sxs-lookup"><span data-stu-id="0fb12-205">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-206">在消息框显示取决于是否存在的<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-206">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="0fb12-207">如果<xref:System.Diagnostics.DefaultTraceListener>不在<xref:System.Diagnostics.Trace.Listeners%2A>集合，消息框不会显示。</span><span class="sxs-lookup"><span data-stu-id="0fb12-207">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="0fb12-208"><xref:System.Diagnostics.DefaultTraceListener>可以删除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;删除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或通过调用<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>属性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="0fb12-208">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="0fb12-209">你可以更改的行为<xref:System.Diagnostics.DefaultTraceListener>对应于你的应用程序的名称的配置文件中。</span><span class="sxs-lookup"><span data-stu-id="0fb12-209">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="0fb12-210">在此文件中，你可以启用和禁用断言消息框或设置<xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0fb12-210">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0fb12-211">配置文件应格式如下：</span><span class="sxs-lookup"><span data-stu-id="0fb12-211">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-212">下面的示例检查可以看到，`type`参数才有效。</span><span class="sxs-lookup"><span data-stu-id="0fb12-212">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="0fb12-213">如果`type`中传递`null`、<xref:System.Diagnostics.Trace.Assert%2A>输出消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-213">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Diagnostics.Trace.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-214">获取或设置每次写入后是否应在 <see cref="P:System.Diagnostics.Trace.Listeners" /> 上调用 <see cref="M:System.Diagnostics.Trace.Flush" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-214">Gets or sets whether <see cref="M:System.Diagnostics.Trace.Flush" /> should be called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0fb12-215">如果每次写入后在 <see cref="P:System.Diagnostics.Trace.Listeners" /> 上调用 <see cref="M:System.Diagnostics.Trace.Flush" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-215">
              <see langword="true" /> if <see cref="M:System.Diagnostics.Trace.Flush" /> is called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-216">默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-216">The default is `false`.</span></span>  
  
 <span data-ttu-id="0fb12-217">刷新流将不会刷新其基础的编码器，除非你明确地调用<xref:System.Diagnostics.Trace.Flush%2A>或<xref:System.Diagnostics.Trace.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-217">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="0fb12-218">设置<xref:System.Diagnostics.Trace.AutoFlush%2A>到`true`意味着数据从缓冲区刷新到流中，但不是会刷新编码器状态。</span><span class="sxs-lookup"><span data-stu-id="0fb12-218">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="0fb12-219">这将允许编码器，以便它可以正确编码的字符的下一步块保持其状态 （部分字符）。</span><span class="sxs-lookup"><span data-stu-id="0fb12-219">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="0fb12-220">这种情况下会影响 UTF8 和 UTF7 其中某些字符仅后才能进行编码的编码器收到的相邻字符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-220">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="0fb12-221">若要设置<xref:System.Diagnostics.Trace.AutoFlush%2A>和<xref:System.Diagnostics.Trace.IndentSize%2A>为<xref:System.Diagnostics.Trace>，还可以编辑与你的应用程序名称相对应的配置文件。</span><span class="sxs-lookup"><span data-stu-id="0fb12-221">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="0fb12-222">配置文件的格式应类似下面的示例：</span><span class="sxs-lookup"><span data-stu-id="0fb12-222">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0fb12-223">用于操作与非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-223">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="0fb12-224">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-224">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="0fb12-225">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-225">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberSignature Language="F#" Value="static member Close : unit -&gt; unit" Usage="System.Diagnostics.Trace.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-226">刷新输出缓冲区，然后关闭 <see cref="P:System.Diagnostics.Trace.Listeners" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-226">Flushes the output buffer, and then closes the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-227">使用此方法时输出将为文件，如<xref:System.Diagnostics.TextWriterTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-227">Use this method when the output is going to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-228">刷新流将不会刷新其基础的编码器，除非你明确地调用<xref:System.Diagnostics.Trace.Flush%2A>或<xref:System.Diagnostics.Trace.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-228">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="0fb12-229">设置<xref:System.Diagnostics.Trace.AutoFlush%2A>到`true`意味着数据从缓冲区刷新到流中，但不是会刷新编码器状态。</span><span class="sxs-lookup"><span data-stu-id="0fb12-229">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="0fb12-230">这将允许编码器，以便它可以正确编码的字符的下一步块保持其状态 （部分字符）。</span><span class="sxs-lookup"><span data-stu-id="0fb12-230">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="0fb12-231">这种情况下会影响 UTF8 和 UTF7 其中某些字符仅后才能进行编码的编码器收到的相邻字符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-231">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-232">下面的示例创建<xref:System.Diagnostics.TextWriterTraceListener>名为`myTextListener`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-232">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="0fb12-233">`myTextListener` 使用<xref:System.IO.StreamWriter>调用`myOutputWriter`要写入到名为的文件`TestFile.txt`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-233">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="0fb12-234">该示例创建的文件、 流和文本编写器，一行文本写入文件，然后刷新并关闭输出。</span><span class="sxs-lookup"><span data-stu-id="0fb12-234">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0fb12-235">用于操作与非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-235">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="0fb12-236">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-236">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0fb12-237">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-237">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationManager">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.CorrelationManager CorrelationManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.CorrelationManager CorrelationManager" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.CorrelationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrelationManager As CorrelationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::CorrelationManager ^ CorrelationManager { System::Diagnostics::CorrelationManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationManager : System.Diagnostics.CorrelationManager" Usage="System.Diagnostics.Trace.CorrelationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CorrelationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-238">获取此跟踪的线程的相关管理器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-238">Gets the correlation manager for the thread for this trace.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0fb12-239">与此跟踪线程关联的 <see cref="T:System.Diagnostics.CorrelationManager" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-239">The <see cref="T:System.Diagnostics.CorrelationManager" /> object associated with the thread for this trace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-240">这是一个高级的属性，大多数应用程序不应具有要使用的场合。</span><span class="sxs-lookup"><span data-stu-id="0fb12-240">This is an advanced property that most applications should not have occasion to use.</span></span>  
  
 <span data-ttu-id="0fb12-241"><xref:System.Diagnostics.CorrelationManager>类提供了用于在线程绑定上下文中存储的逻辑操作标识和自动标记生成的存储的标识的线程的每个跟踪事件的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-241">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0fb12-242">用于操作与非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-242">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="0fb12-243">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-243">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="0fb12-244">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-244">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.CorrelationManager" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-245">发出一条错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-245">Emits an error message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Fail : string -&gt; unit" Usage="System.Diagnostics.Trace.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0fb12-246">要发出的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-246">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-247">发出指定的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-247">Emits the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-248">默认跟踪侦听器的默认行为是输出`message`参数到消息框时应用程序运行在用户界面模式下，并对其<xref:System.Diagnostics.TraceListener>实例<xref:System.Diagnostics.Trace.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0fb12-248">The default behavior for the default trace listener is to output the `message` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-249">显示消息框是依赖于是否存在<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-249">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="0fb12-250">如果<xref:System.Diagnostics.DefaultTraceListener>不在<xref:System.Diagnostics.Trace.Listeners%2A>集合，消息框不会显示。</span><span class="sxs-lookup"><span data-stu-id="0fb12-250">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="0fb12-251"><xref:System.Diagnostics.DefaultTraceListener>可以删除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;删除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或通过调用<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>属性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="0fb12-251">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="0fb12-252">可以通过添加自定义此行为<xref:System.Diagnostics.TraceListener>添加或从中移除<xref:System.Diagnostics.Trace.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0fb12-252">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-253">下面的示例使用<xref:System.Diagnostics.Trace.Fail%2A>方法以在异常处理期间打印消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-253">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0fb12-254">你还可以使用<xref:System.Diagnostics.Trace.Fail%2A>switch 语句中的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-254">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Fail : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0fb12-255">要发出的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-255">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="0fb12-256">要发出的详细消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-256">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-257">发出一条错误消息和一条详细的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-257">Emits an error message, and a detailed error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-258">默认行为是输出的默认跟踪侦听器`message`参数和`detailedMessage`参数到消息框时应用程序运行在用户界面模式下，并对其<xref:System.Diagnostics.TraceListener>实例<xref:System.Diagnostics.Trace.Listeners%2A>集合.</span><span class="sxs-lookup"><span data-stu-id="0fb12-258">The default behavior is for the default trace listener to output the `message` parameter and the `detailedMessage` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-259">显示消息框是依赖于是否存在<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-259">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="0fb12-260">如果<xref:System.Diagnostics.DefaultTraceListener>不在<xref:System.Diagnostics.Trace.Listeners%2A>集合，消息框不会显示。</span><span class="sxs-lookup"><span data-stu-id="0fb12-260">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="0fb12-261"><xref:System.Diagnostics.DefaultTraceListener>可以删除[&lt;清除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)、 [&lt;删除&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)，或通过调用<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>方法<xref:System.Diagnostics.Trace.Listeners%2A>属性 (`System.Diagnostics.Trace.Listeners.Clear()`)。</span><span class="sxs-lookup"><span data-stu-id="0fb12-261">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="0fb12-262">可以通过添加自定义此行为<xref:System.Diagnostics.TraceListener>添加或从中移除<xref:System.Diagnostics.Trace.Listeners%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="0fb12-262">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-263">下面的示例使用<xref:System.Diagnostics.Trace.Fail%2A>方法以在异常处理期间打印消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-263">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0fb12-264">你还可以使用<xref:System.Diagnostics.Trace.Fail%2A>switch 语句中的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-264">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Diagnostics.Trace.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-265">刷新输出缓冲区，并使放入缓冲区中的数据写入 <see cref="P:System.Diagnostics.Trace.Listeners" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-265">Flushes the output buffer, and causes buffered data to be written to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-266">刷新流将不会刷新其基础的编码器，除非你明确地调用<xref:System.Diagnostics.Trace.Flush%2A>或<xref:System.Diagnostics.Trace.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-266">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="0fb12-267">设置<xref:System.Diagnostics.Trace.AutoFlush%2A>到`true`意味着数据从缓冲区刷新到流中，但不是会刷新编码器状态。</span><span class="sxs-lookup"><span data-stu-id="0fb12-267">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="0fb12-268">这将允许编码器，以便它可以正确编码的字符的下一步块保持其状态 （部分字符）。</span><span class="sxs-lookup"><span data-stu-id="0fb12-268">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="0fb12-269">这种情况下会影响 UTF8 和 UTF7 其中某些字符仅后才能进行编码的编码器收到的相邻字符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-269">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-270">下面的示例创建<xref:System.Diagnostics.TextWriterTraceListener>名为`myTextListener`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-270">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="0fb12-271">`myTextListener` 使用<xref:System.IO.StreamWriter>调用`myOutputWriter`要写入到名为的文件`TestFile.txt`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-271">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="0fb12-272">该示例创建的文件、 流和文本编写器，一行文本写入文件，然后刷新并关闭输出。</span><span class="sxs-lookup"><span data-stu-id="0fb12-272">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberSignature Language="F#" Value="static member Indent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Indent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-273">将当前的 <see cref="P:System.Diagnostics.Trace.IndentLevel" /> 增加 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-273">Increases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0fb12-274">下面的示例递增和递减缩进级别并发出跟踪消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-274">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0fb12-275">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="0fb12-275">This example produces the following output:</span></span>  
  
```  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Unindent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.Trace.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-276">获取或设置缩进级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-276">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0fb12-277">缩进级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-277">The indent level.</span>
          </span>
          <span data-ttu-id="0fb12-278">默认值为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-278">The default is zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-279"><xref:System.Diagnostics.Trace.IndentLevel%2A>属性表示的次数缩进量<xref:System.Diagnostics.Trace.IndentSize%2A>应用。</span><span class="sxs-lookup"><span data-stu-id="0fb12-279">The <xref:System.Diagnostics.Trace.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Trace.IndentSize%2A> is applied.</span></span> <span data-ttu-id="0fb12-280">此属性存储在每个线程/每个请求。</span><span class="sxs-lookup"><span data-stu-id="0fb12-280">This property is stored on per-thread/per-request basis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-281">下面的示例递增和递减缩进级别并发出跟踪消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-281">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0fb12-282">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="0fb12-282">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.Trace.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-283">获取或设置缩进的空格数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-283">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0fb12-284">缩进的空格数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-284">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="0fb12-285">默认值为四。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-285">The default is four.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-286">A<xref:System.Diagnostics.TextWriterTraceListener>将此数字解释为空格。</span><span class="sxs-lookup"><span data-stu-id="0fb12-286">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="0fb12-287"><xref:System.Diagnostics.EventLogTraceListener>将忽略此值。</span><span class="sxs-lookup"><span data-stu-id="0fb12-287">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="0fb12-288">此属性存储在每个线程/每个请求。</span><span class="sxs-lookup"><span data-stu-id="0fb12-288">This property is stored on per-thread/per-request basis.</span></span>  
  
 <span data-ttu-id="0fb12-289">若要设置<xref:System.Diagnostics.Trace.AutoFlush%2A>和<xref:System.Diagnostics.Trace.IndentSize%2A>为<xref:System.Diagnostics.Trace>，还可以编辑与你的应用程序名称相对应的配置文件。</span><span class="sxs-lookup"><span data-stu-id="0fb12-289">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="0fb12-290">配置文件的格式应类似下面的示例：</span><span class="sxs-lookup"><span data-stu-id="0fb12-290">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.Trace.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-291">获取正在监视跟踪输出的侦听器集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-291">Gets the collection of listeners that is monitoring the trace output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0fb12-292">表示监视跟踪输出的类型 <see cref="T:System.Diagnostics.TraceListener" /> 集合的 <see cref="T:System.Diagnostics.TraceListenerCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-292">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> that represents a collection of type <see cref="T:System.Diagnostics.TraceListener" /> monitoring the trace output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-293">中的侦听器生成跟踪输出中的格式化的输出。</span><span class="sxs-lookup"><span data-stu-id="0fb12-293">The listeners produce formatted output from the trace output.</span></span> <span data-ttu-id="0fb12-294">默认情况下，集合包含的实例<xref:System.Diagnostics.DefaultTraceListener>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-294">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="0fb12-295">如果你想要删除默认的侦听器，调用<xref:System.Diagnostics.TraceListenerCollection.Remove%2A>方法，并将其传递的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-295">If you want to remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="0fb12-296">若要将输出重定向到控制台窗口中，添加的实例<xref:System.Diagnostics.ConsoleTraceListener>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-296">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-297"><xref:System.Diagnostics.Trace.Listeners%2A>集合共享两个<xref:System.Diagnostics.Debug>和<xref:System.Diagnostics.Trace>类; 添加到其中一个类的跟踪侦听器将侦听器添加到两。</span><span class="sxs-lookup"><span data-stu-id="0fb12-297">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-298">下面的示例创建<xref:System.Diagnostics.ConsoleTraceListener>，输出到控制台屏幕。</span><span class="sxs-lookup"><span data-stu-id="0fb12-298">The following example creates a <xref:System.Diagnostics.ConsoleTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="0fb12-299">然后代码将添加到新的侦听器<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-299">The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Trace.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0fb12-300">用于操作与非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-300">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="0fb12-301">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="0fb12-302">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh();" />
      <MemberSignature Language="F#" Value="static member Refresh : unit -&gt; unit" Usage="System.Diagnostics.Trace.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-303">刷新跟踪配置数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-303">Refreshes the trace configuration data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-304">当启动应用程序时捕获跟踪配置数据。</span><span class="sxs-lookup"><span data-stu-id="0fb12-304">Trace configuration data is captured when the application is started.</span></span> <span data-ttu-id="0fb12-305">如果启动应用程序后更改的配置数据，则调用<xref:System.Diagnostics.Trace.Refresh%2A>方法来更新跟踪配置数据。</span><span class="sxs-lookup"><span data-stu-id="0fb12-305">If the configuration data is changed after the application is started, call the <xref:System.Diagnostics.Trace.Refresh%2A> method to update the trace configuration data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceError">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-306">将错误消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-306">Writes error information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceError : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0fb12-307">要写入的信息性消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-307">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-308">使用指定消息，将错误消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-308">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-309"><xref:System.Diagnostics.Trace.TraceError%2A> 调用`TraceEvent`方法为每个跟踪侦听器，具有跟踪事件类型<xref:System.Diagnostics.TraceEventType.Error>，将作为消息字符串中传递的信息性消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-309"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceError : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceError (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="0fb12-310">一个格式字符串，其中包含零个或多个格式项，它们对应于 <c>args</c> 数组中的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-310">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="0fb12-311">包含零个或多个要格式化的对象的 <see langword="object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-311">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-312">使用指定的对象数组和格式化信息，将错误消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-312">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-313"><xref:System.Diagnostics.Trace.TraceError%2A> 调用`TraceEvent`中具有跟踪事件类型的跟踪侦听器的方法<xref:System.Diagnostics.TraceEventType.Error>，将作为包含格式设置信息的对象数组传递消息内容。</span><span class="sxs-lookup"><span data-stu-id="0fb12-313"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="0fb12-314">请参阅<xref:System.String.Format%2A>有关详细信息的方法`format`和`args`参数。</span><span class="sxs-lookup"><span data-stu-id="0fb12-314">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-315">将信息性消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-315">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0fb12-316">要写入的信息性消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-316">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-317">使用指定消息，将信息性消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-317">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> 调用`TraceEvent`方法为每个跟踪侦听器，具有跟踪事件类型<xref:System.Diagnostics.TraceEventType.Information>，将作为消息字符串中传递的信息性消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceInformation : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="0fb12-319">一个格式字符串，其中包含零个或多个格式项，它们对应于 <c>args</c> 数组中的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-319">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="0fb12-320">包含零个或多个要格式化的对象的 <see langword="object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-320">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-321">使用指定的对象数组和格式化信息，将信息性消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-321">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> 调用`TraceEvent`中具有跟踪事件类型的跟踪侦听器的方法<xref:System.Diagnostics.TraceEventType.Information>，将作为包含格式设置信息的对象数组传递消息内容。</span><span class="sxs-lookup"><span data-stu-id="0fb12-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="0fb12-323">请参阅<xref:System.String.Format%2A>有关详细信息的方法`format`和`args`参数。</span><span class="sxs-lookup"><span data-stu-id="0fb12-323">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceWarning">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-324">将警告信息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-324">Writes warning information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0fb12-325">要写入的信息性消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-325">The informative message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-326">使用指定的消息将警告消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-326">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> 调用`TraceEvent`方法为每个跟踪事件类型的跟踪侦听器<xref:System.Diagnostics.TraceEventType.Warning>，将作为消息字符串中传递的信息性消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` method for each trace listener with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member TraceWarning : string * obj[] -&gt; unit" Usage="System.Diagnostics.Trace.TraceWarning (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="0fb12-328">一个格式字符串，其中包含零个或多个格式项，它们对应于 <c>args</c> 数组中的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-328">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="0fb12-329">包含零个或多个要格式化的对象的 <see langword="object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-329">An <see langword="object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-330">使用指定的对象数组和格式化信息，将警告消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-330">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> 调用`TraceEvent`中具有跟踪事件类型的跟踪侦听器的方法<xref:System.Diagnostics.TraceEventType.Warning>，将作为包含格式设置信息的对象数组传递消息内容。</span><span class="sxs-lookup"><span data-stu-id="0fb12-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="0fb12-332">请参阅<xref:System.String.Format%2A>有关详细信息的方法`format`和`args`参数。</span><span class="sxs-lookup"><span data-stu-id="0fb12-332">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberSignature Language="F#" Value="static member Unindent : unit -&gt; unit" Usage="System.Diagnostics.Trace.Unindent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-333">将当前的 <see cref="P:System.Diagnostics.Trace.IndentLevel" /> 减少 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-333">Decreases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0fb12-334">下面的示例递增和递减缩进级别并发出跟踪消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-334">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0fb12-335">该示例产生下面的输出：</span><span class="sxs-lookup"><span data-stu-id="0fb12-335">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Indent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="UseGlobalLock">
      <MemberSignature Language="C#" Value="public static bool UseGlobalLock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseGlobalLock" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.UseGlobalLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseGlobalLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseGlobalLock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseGlobalLock : bool with get, set" Usage="System.Diagnostics.Trace.UseGlobalLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-336">获取或设置一个值，该值指示是否应使用全局锁。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-336">Gets or sets a value indicating whether the global lock should be used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0fb12-337">如果要使用全局锁，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-337">
              <see langword="true" /> if the global lock is to be used; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0fb12-338">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-338">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-339">如果跟踪侦听器不是线程安全的无论的值如何，始终使用全局锁<xref:System.Diagnostics.Trace.UseGlobalLock%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-339">The global lock is always used if the trace listener is not thread safe, regardless of the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span></span> <span data-ttu-id="0fb12-340"><xref:System.Diagnostics.TraceListener.IsThreadSafe%2A>属性用于确定侦听器是否是线程安全。</span><span class="sxs-lookup"><span data-stu-id="0fb12-340">The <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> property is used to determine if the listener is thread safe.</span></span> <span data-ttu-id="0fb12-341">仅当不使用全局锁的值<xref:System.Diagnostics.Trace.UseGlobalLock%2A>是`false`和的值<xref:System.Diagnostics.TraceListener.IsThreadSafe%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-341">The global lock is not used only if the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A> is `false` and the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `true`.</span></span> <span data-ttu-id="0fb12-342">默认行为是使用全局锁。</span><span class="sxs-lookup"><span data-stu-id="0fb12-342">The default behavior is to use the global lock.</span></span>  
  
 <span data-ttu-id="0fb12-343">若要设置<xref:System.Diagnostics.Trace.UseGlobalLock%2A>为<xref:System.Diagnostics.Trace>，还可以编辑与你的应用程序名称相对应的配置文件。</span><span class="sxs-lookup"><span data-stu-id="0fb12-343">To set the <xref:System.Diagnostics.Trace.UseGlobalLock%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="0fb12-344">配置文件的格式应类似下面的示例：</span><span class="sxs-lookup"><span data-stu-id="0fb12-344">The configuration file should be formatted like the following example:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace useGlobalLock="false" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="0fb12-345">用于操作与非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-345">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="0fb12-346">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-346">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
          <span data-ttu-id="0fb12-347">关联的枚举：  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-347">Associated enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-348">将有关跟踪的信息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-348">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Diagnostics.Trace.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0fb12-349">其名称将发送至 <see cref="P:System.Diagnostics.Trace.Listeners" /> 的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-349">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-350">将对象 <see cref="M:System.Object.ToString" /> 方法的值写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-350">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-351">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-351">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-352">此方法调用<xref:System.Diagnostics.TraceListener.Write%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-352">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-353">ASP.NET 提供对 Web 页定制的跟踪功能。</span><span class="sxs-lookup"><span data-stu-id="0fb12-353">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="0fb12-354">若要在 ASP.NET 页中编写跟踪消息，使用<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0fb12-354">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="0fb12-355">默认情况下，ASP.NET 网页，该语句相关联的代码在`Trace.Write("...")`是对的调用<xref:System.Web.TraceContext.Write%2A>方法<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0fb12-355">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0fb12-356">若要使用<xref:System.Diagnostics.Trace?displayProperty=nameWithType>类在 Web 页中，你必须包括命名空间，例如， `System.Diagnostics.Trace.Write("...")`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-356">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-357">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-357">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-358">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-358">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-359">如果开关设置为<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，该示例将输出的名字`value`参数<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-359">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the `value` parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-360">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-360">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-361">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Verbose`，该示例将输出与第一条消息位于同一行中的消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-361">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="0fb12-362">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-362">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Diagnostics.Trace.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0fb12-363">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-363">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-364">将消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-364">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-365">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-366">此方法调用<xref:System.Diagnostics.TraceListener.Write%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-366">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-367">ASP.NET 提供对 Web 页定制的跟踪功能。</span><span class="sxs-lookup"><span data-stu-id="0fb12-367">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="0fb12-368">若要在 ASP.NET 页中编写跟踪消息，使用<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0fb12-368">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="0fb12-369">默认情况下，ASP.NET 网页，该语句相关联的代码在`Trace.Write("...")`是对的调用<xref:System.Web.TraceContext.Write%2A>方法<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0fb12-369">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0fb12-370">若要使用<xref:System.Diagnostics.Trace?displayProperty=nameWithType>类在 Web 页中，你必须包括命名空间，例如， `System.Diagnostics.Trace.Write("...")`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-370">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-371">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-371">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-372">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-372">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-373">如果开关设置为<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，该示例将输出发送给第一个错误消息<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-373">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-374">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-374">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-375">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Verbose`，该示例将输出与第一条消息位于同一行上的第二个错误消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-375">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="0fb12-376">行结束符遵循第二条消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-376">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0fb12-377">一个 <see cref="T:System.Object" />，其名称将发送至 <see cref="P:System.Diagnostics.Trace.Listeners" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-377">An <see cref="T:System.Object" /> name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="0fb12-378">用于组织输出的类别名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-378">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-379">将类别名称和对象的 <see cref="M:System.Object.ToString" /> 方法的值写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-379">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-380">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-380">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-381">`category`参数可以用于输出消息分组。</span><span class="sxs-lookup"><span data-stu-id="0fb12-381">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="0fb12-382">此方法调用<xref:System.Diagnostics.TraceListener.Write%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-382">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-383">ASP.NET 提供对 Web 页定制的跟踪功能。</span><span class="sxs-lookup"><span data-stu-id="0fb12-383">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="0fb12-384">若要在 ASP.NET 页中编写跟踪消息，使用<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0fb12-384">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="0fb12-385">默认情况下，ASP.NET 网页，该语句相关联的代码在`Trace.Write("...")`是对的调用<xref:System.Web.TraceContext.Write%2A>方法<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0fb12-385">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0fb12-386">若要使用<xref:System.Diagnostics.Trace?displayProperty=nameWithType>类在 Web 页中，你必须包括命名空间，例如， `System.Diagnostics.Trace.Write("...")`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-386">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-387">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-387">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-388">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-388">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-389">如果开关设置为<xref:System.Diagnostics.TraceLevel> `Verbose`，该示例将输出的名称`myObject`和`category`到<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-389">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-390">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-390">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-391">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Error`或更高版本，该示例将输出与第一条消息位于同一行上的第二个错误消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-391">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="0fb12-392">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-392">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : string * string -&gt; unit" Usage="System.Diagnostics.Trace.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0fb12-393">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-393">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="0fb12-394">用于组织输出的类别名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-394">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-395">将类别名称和消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-395">Writes a category name and a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-396">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-396">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-397">`category`参数可以用于输出消息分组。</span><span class="sxs-lookup"><span data-stu-id="0fb12-397">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="0fb12-398">此方法调用<xref:System.Diagnostics.TraceListener.Write%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-398">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb12-399">ASP.NET 提供对 Web 页定制的跟踪功能。</span><span class="sxs-lookup"><span data-stu-id="0fb12-399">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="0fb12-400">若要在 ASP.NET 页中编写跟踪消息，使用<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0fb12-400">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="0fb12-401">默认情况下，ASP.NET 网页，该语句相关联的代码在`Trace.Write("...")`是对的调用<xref:System.Web.TraceContext.Write%2A>方法<xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0fb12-401">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0fb12-402">若要使用<xref:System.Diagnostics.Trace?displayProperty=nameWithType>类在 Web 页中，你必须包括命名空间，例如， `System.Diagnostics.Trace.Write("...")`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-402">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-403">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-403">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-404">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-404">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-405">如果开关设置为<xref:System.Diagnostics.TraceLevel> `Verbose`，该示例将输出发送给第一个错误消息<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-405">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-406">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-406">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-407">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Error`或更高版本，该示例将输出与第一条消息位于同一行上的第二个错误消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-407">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="0fb12-408">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-408">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-409">如果条件为 <see langword="true" />，则将有关跟踪的信息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-409">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="0fb12-410">若要使消息被写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-410">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0fb12-411">其名称将发送至 <see cref="P:System.Diagnostics.Trace.Listeners" /> 的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-411">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-412">如果条件为 <see langword="true" />，则向 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器写入对象的 <see cref="M:System.Object.ToString" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-412">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-413">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-413">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-414">此方法调用<xref:System.Diagnostics.TraceListener.Write%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-414">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-415">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-415">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-416">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-416">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-417">如果开关设置为<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，该示例将输出值参数的第一个名称<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-417">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-418">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-418">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-419">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Verbose`，该示例将输出与第一条消息位于同一行中的消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-419">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="0fb12-420">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-420">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0fb12-421">
            <para>可以通过使用检测应用程序性能的影响最小化<see langword="If...Then" />语句而不是使用<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />语句。下面的两个代码示例将相同的调试消息发送。但是，第一个示例是要快得多当跟踪处于关闭状态，因为如果<c>mySwitch.TraceError</c>计算结果为<see langword="false" />不调用<see cref="M:System.Diagnostics.Trace.Write(System.String)" />。第二个示例始终调用<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />，即使当<c>mySwitch.TraceError</c>是<see langword="false" />和不生成任何跟踪输出。这可能导致不必要地执行任意复杂的代码。 \* \* 第一个示例 \* \* '' if(mySwitch.TraceError) Trace.Write ("一个数字 ="+ 一个数字 +"超出范围");'\* \* 第二个示例 \* \*' ' Trace.WriteIf (mySwitch.TraceError，"一个数字 ="+ 一个数字 +"超出范围");\`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-421">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="0fb12-422">若要使消息被写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-422">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="0fb12-423">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-423">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-424">如果条件为 <see langword="true" />，则将消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-424">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-425">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-425">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-426">此方法调用<xref:System.Diagnostics.TraceListener.Write%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-426">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-427">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-427">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-428">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-428">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-429">如果开关设置为<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，该示例将输出发送给第一个错误消息<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-429">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-430">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-430">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-431">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Verbose`，该示例将输出与第一条消息位于同一行上的第二个错误消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-431">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="0fb12-432">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-432">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0fb12-433">
            <para>可以通过使用检测应用程序性能的影响最小化<see langword="If...Then" />语句而不是使用<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />语句。下面的两个代码示例将相同的调试消息发送。但是，第一个示例是要快得多当跟踪处于关闭状态，因为如果<c>mySwitch.TraceError</c>计算结果为<see langword="false" />不调用<see cref="M:System.Diagnostics.Trace.Write(System.String)" />。第二个示例始终调用<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />，即使当<c>mySwitch.TraceError</c>是<see langword="false" />和不生成任何跟踪输出。这可能导致不必要地执行任意复杂的代码。 \* \* 第一个示例 \* \* '' if(mySwitch.TraceError) Trace.Write ("一个数字 ="+ 一个数字 +"超出范围");'\* \* 第二个示例 \* \*' ' Trace.WriteIf (mySwitch.TraceError，"一个数字 ="+ 一个数字 +"超出范围");\`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-433">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="0fb12-434">若要使消息被写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-434">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0fb12-435">其名称将发送至 <see cref="P:System.Diagnostics.Trace.Listeners" /> 的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-435">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="0fb12-436">用于组织输出的类别名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-436">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-437">如果条件为 <see langword="true" />，则向 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器写入类别名称和对象的 <see cref="M:System.Object.ToString" /> 方法值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-437">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-438">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-438">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-439">`category`参数可以用于输出消息分组。</span><span class="sxs-lookup"><span data-stu-id="0fb12-439">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="0fb12-440">此方法调用<xref:System.Diagnostics.TraceListener.Write%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-440">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-441">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-441">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-442">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-442">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-443">如果开关设置为<xref:System.Diagnostics.TraceLevel> `Verbose`，该示例将输出的名称`myObject`和`category`到<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-443">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-444">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-444">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-445">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Error`或更高版本，该示例将输出与第一条消息位于同一行上的第二个错误消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-445">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="0fb12-446">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-446">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0fb12-447">
            <para>可以通过使用检测应用程序性能的影响最小化<see langword="If...Then" />语句而不是使用<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />语句。下面的两个代码示例将相同的调试消息发送。但是，第一个示例是要快得多当跟踪处于关闭状态，因为如果<c>mySwitch.TraceError</c>计算结果为<see langword="false" />不调用<see cref="M:System.Diagnostics.Trace.Write(System.String)" />。第二个示例始终调用<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />，即使当<c>mySwitch.TraceError</c>是<see langword="false" />和不生成任何跟踪输出。这可能导致不必要地执行任意复杂的代码。 \* \* 第一个示例 \* \* '' if(mySwitch.TraceError) Trace.Write ("一个数字 ="+ 一个数字 +"超出范围");'\* \* 第二个示例 \* \*' ' Trace.WriteIf (mySwitch.TraceError，"一个数字 ="+ 一个数字 +"超出范围");\`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-447">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="0fb12-448">若要使消息被写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-448">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="0fb12-449">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-449">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="0fb12-450">用于组织输出的类别名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-450">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-451">如果条件为 <see langword="true" />，则将类别名称和消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-451">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-452">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-452">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-453">`category`参数可以用于输出消息分组。</span><span class="sxs-lookup"><span data-stu-id="0fb12-453">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="0fb12-454">此方法调用<xref:System.Diagnostics.TraceListener.Write%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-454">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-455">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-455">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-456">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-456">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-457">如果开关设置为<xref:System.Diagnostics.TraceLevel> `Verbose`，该示例将输出发送给第一个错误消息<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-457">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-458">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-458">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-459">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Error`或更高版本，该示例将输出与第一条消息位于同一行上的第二个错误消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-459">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="0fb12-460">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-460">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0fb12-461">
            <para>可以通过使用检测应用程序性能的影响最小化<see langword="If...Then" />语句而不是使用<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />语句。下面的两个代码示例将相同的调试消息发送。但是，第一个示例是要快得多当跟踪处于关闭状态，因为如果<c>mySwitch.TraceError</c>计算结果为<see langword="false" />不调用<see cref="M:System.Diagnostics.Trace.Write(System.String)" />。第二个示例始终调用<see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />，即使当<c>mySwitch.TraceError</c>是<see langword="false" />和不生成任何跟踪输出。这可能导致不必要地执行任意复杂的代码。 \* \* 第一个示例 \* \* '' if(mySwitch.TraceError) Trace.Write ("一个数字 ="+ 一个数字 +"超出范围");'\* \* 第二个示例 \* \*' ' Trace.WriteIf (mySwitch.TraceError，"一个数字 ="+ 一个数字 +"超出范围");\`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-461">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.Write("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-462">将有关跟踪的信息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-462">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0fb12-463">其名称将发送至 <see cref="P:System.Diagnostics.Trace.Listeners" /> 的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-463">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-464">将对象 <see cref="M:System.Object.ToString" /> 方法的值写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-464">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-465">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-465">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-466">此方法调用<xref:System.Diagnostics.TraceListener.WriteLine%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-466">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-467">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-467">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-468">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-468">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-469">如果开关设置为<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，该示例将输出发送给第一个错误消息<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-469">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-470">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-470">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-471">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Verbose`，该示例将输出与第一条消息位于同一行上的对象的名称。</span><span class="sxs-lookup"><span data-stu-id="0fb12-471">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="0fb12-472">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-472">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0fb12-473">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-473">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-474">将消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-474">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-475">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-475">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-476">此方法调用<xref:System.Diagnostics.TraceListener.WriteLine%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-476">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-477">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-477">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-478">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-478">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-479">如果开关设置为<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，该示例将输出发送给第一个错误消息<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-479">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-480">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-480">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-481">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Verbose`，该示例将输出与第一条消息位于同一行上的第二个错误消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-481">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="0fb12-482">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-482">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0fb12-483">其名称将发送至 <see cref="P:System.Diagnostics.Trace.Listeners" /> 的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-483">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="0fb12-484">用于组织输出的类别名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-484">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-485">将类别名称和对象的 <see cref="M:System.Object.ToString" /> 方法的值写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-485">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-486">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-486">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-487">`category`参数可以用于输出消息分组。</span><span class="sxs-lookup"><span data-stu-id="0fb12-487">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="0fb12-488">此方法调用<xref:System.Diagnostics.TraceListener.WriteLine%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-488">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-489">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-489">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-490">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-490">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-491">如果开关设置为<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，该示例将输出发送给第一个错误消息<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-491">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-492">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-492">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-493">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Verbose`，该示例将输出与第一条消息位于同一行上的第二个错误消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-493">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="0fb12-494">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-494">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="0fb12-495">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-495">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="0fb12-496">用于组织输出的类别名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-496">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-497">将类别名称和消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-497">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-498">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-498">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-499">`category`参数可以用于输出消息分组。</span><span class="sxs-lookup"><span data-stu-id="0fb12-499">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="0fb12-500">此方法调用<xref:System.Diagnostics.TraceListener.WriteLine%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-500">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-501">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-501">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-502">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-502">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-503">如果开关设置为<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，该示例将输出发送给第一个错误消息<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-503">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-504">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-504">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-505">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Verbose`，该示例将输出的第二个错误消息和`category`上第一条消息所在的行。</span><span class="sxs-lookup"><span data-stu-id="0fb12-505">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="0fb12-506">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-506">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0fb12-507">如果条件为 <see langword="true" />，则将有关跟踪的信息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-507">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="0fb12-508">若要使消息被写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-508">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0fb12-509">其名称将发送至 <see cref="P:System.Diagnostics.Trace.Listeners" /> 的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-509">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-510">如果条件为 <see langword="true" />，则向 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器写入对象的 <see cref="M:System.Object.ToString" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-510">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-511">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-511">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-512">此方法调用<xref:System.Diagnostics.TraceListener.WriteLine%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-512">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-513">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-513">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-514">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-514">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-515">如果开关设置为<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，该示例将输出发送给第一个错误消息<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-515">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-516">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-516">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-517">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Verbose`，该示例将输出与第一条消息位于同一行上的对象的名称。</span><span class="sxs-lookup"><span data-stu-id="0fb12-517">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="0fb12-518">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-518">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0fb12-519">
            <para>可以通过使用检测应用程序性能的影响最小化<see langword="If...Then" />语句而不是使用<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />语句。下面的两个代码示例将相同的调试消息发送。但是，第一个示例是要快得多当跟踪处于关闭状态，因为如果<c>mySwitch.TraceError</c>计算结果为<see langword="false" />不调用<see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />。第二个示例始终调用<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />，即使当<c>mySwitch.TraceError</c>是<see langword="false" />和不生成任何跟踪输出。这可能导致不必要地执行任意复杂的代码。 \* \* 第一个示例 \* \* '' if(mySwitch.TraceError) Trace.WriteLine ("一个数字 ="+ 一个数字 +"超出范围");'\* \* 第二个示例 \* \*' ' Trace.WriteLineIf (mySwitch.TraceError，"一个数字 ="+ 一个数字 +"超出范围");\`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-519">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="0fb12-520">若要使消息被写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-520">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="0fb12-521">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-521">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-522">如果条件为 <see langword="true" />，则将消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-522">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-523">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-523">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-524">此方法调用<xref:System.Diagnostics.TraceListener.WriteLine%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-524">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-525">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-525">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-526">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-526">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-527">如果开关设置为<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，该示例将输出发送给第一个错误消息<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-527">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-528">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-528">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-529">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Verbose`，该示例将输出与第一条消息位于同一行上的第二个错误消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-529">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="0fb12-530">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-530">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0fb12-531">
            <para>可以通过使用检测应用程序性能的影响最小化<see langword="If...Then" />语句而不是使用<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />语句。下面的两个代码示例将相同的调试消息发送。但是，第一个示例是要快得多当跟踪处于关闭状态，因为如果<c>mySwitch.TraceError</c>计算结果为<see langword="false" />不调用<see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />。第二个示例始终调用<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />，即使当<c>mySwitch.TraceError</c>是<see langword="false" />和不生成任何跟踪输出。这可能导致不必要地执行任意复杂的代码。 \* \* 第一个示例 \* \* '' if(mySwitch.TraceError) Trace.WriteLine ("一个数字 ="+ 一个数字 +"超出范围");'\* \* 第二个示例 \* \*' ' Trace.WriteLineIf (mySwitch.TraceError，"一个数字 ="+ 一个数字 +"超出范围");\`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-531">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="0fb12-532">若要使消息被写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-532">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0fb12-533">其名称将发送至 <see cref="P:System.Diagnostics.Trace.Listeners" /> 的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-533">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="0fb12-534">用于组织输出的类别名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-534">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-535">如果条件为 <see langword="true" />，则向 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器写入类别名称和对象的 <see cref="M:System.Object.ToString" /> 方法值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-535">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-536">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-536">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-537">`category`参数可以用于输出消息分组。</span><span class="sxs-lookup"><span data-stu-id="0fb12-537">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="0fb12-538">此方法调用<xref:System.Diagnostics.TraceListener.WriteLine%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-538">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-539">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-539">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-540">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-540">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-541">如果开关设置为<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，该示例将输出发送给第一个错误消息<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-541">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-542">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-542">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-543">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Verbose`，该示例将输出与第一条消息位于同一行上的第二个错误消息。</span><span class="sxs-lookup"><span data-stu-id="0fb12-543">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="0fb12-544">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-544">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0fb12-545">
            <para>可以通过使用检测应用程序性能的影响最小化<see langword="If...Then" />语句而不是使用<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />语句。下面的两个代码示例将相同的调试消息发送。但是，第一个示例是要快得多当跟踪处于关闭状态，因为如果<c>mySwitch.TraceError</c>计算结果为<see langword="false" />不调用<see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />。第二个示例始终调用<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />，即使当<c>mySwitch.TraceError</c>是<see langword="false" />和不生成任何跟踪输出。这可能导致不必要地执行任意复杂的代码。 \* \* 第一个示例 \* \* '' if(mySwitch.TraceError) Trace.WriteLine ("一个数字 ="+ 一个数字 +"超出范围");'\* \* 第二个示例 \* \*' ' Trace.WriteLineIf (mySwitch.TraceError，"一个数字 ="+ 一个数字 +"超出范围");\`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-545">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Trace.WriteLineIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="0fb12-546">若要使消息被写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-546">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="0fb12-547">要写入的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-547">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="0fb12-548">用于组织输出的类别名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-548">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb12-549">如果条件为 <see langword="true" />，则将类别名称和消息写入 <see cref="P:System.Diagnostics.Trace.Listeners" /> 集合中的跟踪侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-549">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb12-550">默认情况下，则输出写入到的实例<xref:System.Diagnostics.DefaultTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-550">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="0fb12-551">`category`参数可以用于输出消息分组。</span><span class="sxs-lookup"><span data-stu-id="0fb12-551">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="0fb12-552">此方法调用<xref:System.Diagnostics.TraceListener.WriteLine%2A>的跟踪侦听器的方法。</span><span class="sxs-lookup"><span data-stu-id="0fb12-552">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb12-553">下面的示例创建<xref:System.Diagnostics.TraceSwitch>名为`generalSwitch`。</span><span class="sxs-lookup"><span data-stu-id="0fb12-553">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="0fb12-554">此开关已设置之外的代码示例。</span><span class="sxs-lookup"><span data-stu-id="0fb12-554">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="0fb12-555">如果开关设置为<xref:System.Diagnostics.TraceLevel>`Error`或更高版本，该示例将输出发送给第一个错误消息<xref:System.Diagnostics.Trace.Listeners%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb12-555">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="0fb12-556">有关将添加到侦听器信息<xref:System.Diagnostics.Trace.Listeners%2A>集合，请参阅<xref:System.Diagnostics.TraceListenerCollection>类。</span><span class="sxs-lookup"><span data-stu-id="0fb12-556">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="0fb12-557">然后，如果<xref:System.Diagnostics.TraceLevel>设置为`Verbose`，该示例将输出的第二个错误消息和`category`上第一条消息所在的行。</span><span class="sxs-lookup"><span data-stu-id="0fb12-557">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="0fb12-558">第二条消息后跟行结束符。</span><span class="sxs-lookup"><span data-stu-id="0fb12-558">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0fb12-559">
            <para>可以通过使用检测应用程序性能的影响最小化<see langword="If...Then" />语句而不是使用<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />语句。下面的两个代码示例将相同的调试消息发送。但是，第一个示例是要快得多当跟踪处于关闭状态，因为如果<c>mySwitch.TraceError</c>计算结果为<see langword="false" />不调用<see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />。第二个示例始终调用<see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />，即使当<c>mySwitch.TraceError</c>是<see langword="false" />和不生成任何跟踪输出。这可能导致不必要地执行任意复杂的代码。 \* \* 第一个示例 \* \* '' if(mySwitch.TraceError) Trace.WriteLine ("一个数字 ="+ 一个数字 +"超出范围");'\* \* 第二个示例 \* \*' ' Trace.WriteLineIf (mySwitch.TraceError，"一个数字 ="+ 一个数字 +"超出范围");\`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb12-559">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  **First example**  ``` if(mySwitch.TraceError) Trace.WriteLine("aNumber = " + aNumber + " out of range"); ```  **Second example**  ``` Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>