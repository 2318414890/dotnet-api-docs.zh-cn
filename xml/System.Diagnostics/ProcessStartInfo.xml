<Type Name="ProcessStartInfo" FullName="System.Diagnostics.ProcessStartInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="429e7f7e680f0fdbd1797f7a14b279abf51de2e5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39862854" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProcessStartInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ProcessStartInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ProcessStartInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProcessStartInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProcessStartInfo sealed" />
  <TypeSignature Language="F#" Value="type ProcessStartInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2010b-101">指定启动进程时使用的一组值。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2010b-101">Specifies a set of values that are used when you start a process.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-102"><xref:System.Diagnostics.ProcessStartInfo> 使用连同<xref:System.Diagnostics.Process>组件。</span><span class="sxs-lookup"><span data-stu-id="2010b-102"><xref:System.Diagnostics.ProcessStartInfo> is used together with the <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="2010b-103">当启动进程使用<xref:System.Diagnostics.Process>类，您可以访问附加到正在运行的进程时处理之外，可用的信息。</span><span class="sxs-lookup"><span data-stu-id="2010b-103">When you start a process using the <xref:System.Diagnostics.Process> class, you have access to process information in addition to that available when attaching to a running process.</span></span>  
  
 <span data-ttu-id="2010b-104">可以使用<xref:System.Diagnostics.ProcessStartInfo>类更好地控制启动的进程。</span><span class="sxs-lookup"><span data-stu-id="2010b-104">You can use the <xref:System.Diagnostics.ProcessStartInfo> class for better control over the process you start.</span></span> <span data-ttu-id="2010b-105">至少必须设置<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>属性，而是手动或使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="2010b-105">You must at least set the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property, either manually or using the constructor.</span></span> <span data-ttu-id="2010b-106">任何应用程序或文档的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="2010b-106">The file name is any application or document.</span></span> <span data-ttu-id="2010b-107">此处将文档定义已打开任何文件类型或默认与之关联的操作。</span><span class="sxs-lookup"><span data-stu-id="2010b-107">Here a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="2010b-108">您可以查看已注册的文件类型和其关联的应用程序为您的计算机通过使用**文件夹选项**对话框中，可通过操作系统。</span><span class="sxs-lookup"><span data-stu-id="2010b-108">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="2010b-109">**高级**按钮可显示是否与特定的已注册的文件类型关联的打开操作的对话框。</span><span class="sxs-lookup"><span data-stu-id="2010b-109">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="2010b-110">此外，可以设置其他属性用于定义要与该文件执行的操作。</span><span class="sxs-lookup"><span data-stu-id="2010b-110">In addition, you can set other properties that define actions to take with that file.</span></span> <span data-ttu-id="2010b-111">可以指定特定于类型的值<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>属性<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-111">You can specify a value specific to the type of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property for the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property.</span></span> <span data-ttu-id="2010b-112">例如，可以指定"打印"文档类型。</span><span class="sxs-lookup"><span data-stu-id="2010b-112">For example, you can specify "print" for a document type.</span></span> <span data-ttu-id="2010b-113">此外，可以指定<xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>属性值是要传递到该文件的打开过程的命令行参数。</span><span class="sxs-lookup"><span data-stu-id="2010b-113">Additionally, you can specify <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property values to be command-line arguments to pass to the file's open procedure.</span></span> <span data-ttu-id="2010b-114">例如，如果您指定在文本编辑器应用程序<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>属性，可以使用<xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>属性来指定要通过在编辑器中打开的文本文件。</span><span class="sxs-lookup"><span data-stu-id="2010b-114">For example, if you specify a text editor application in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property, you can use the <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property to specify a text file to be opened by the editor.</span></span>  
  
 <span data-ttu-id="2010b-115">标准输入通常是键盘，而标准输出和标准错误通常是监视器屏幕。</span><span class="sxs-lookup"><span data-stu-id="2010b-115">Standard input is usually the keyboard, and standard output and standard error are usually the monitor screen.</span></span> <span data-ttu-id="2010b-116">但是，可以使用<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>， <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>，和<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A>属性使过程，以获取从输入或输出返回到一个文件或其他设备。</span><span class="sxs-lookup"><span data-stu-id="2010b-116">However, you can use the <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, and <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> properties to cause the process to get input from or return output to a file or other device.</span></span> <span data-ttu-id="2010b-117">如果您使用<xref:System.Diagnostics.Process.StandardInput%2A>， <xref:System.Diagnostics.Process.StandardOutput%2A>，或<xref:System.Diagnostics.Process.StandardError%2A>上的属性<xref:System.Diagnostics.Process>组件，您必须首先设置相应的值上<xref:System.Diagnostics.ProcessStartInfo>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-117">If you use the <xref:System.Diagnostics.Process.StandardInput%2A>, <xref:System.Diagnostics.Process.StandardOutput%2A>, or <xref:System.Diagnostics.Process.StandardError%2A> properties on the <xref:System.Diagnostics.Process> component, you must first set the corresponding value on the <xref:System.Diagnostics.ProcessStartInfo> property.</span></span> <span data-ttu-id="2010b-118">否则，系统读取或写入到流时引发异常。</span><span class="sxs-lookup"><span data-stu-id="2010b-118">Otherwise, the system throws an exception when you read or write to the stream.</span></span>  
  
 <span data-ttu-id="2010b-119">设置<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>属性可指定是否使用操作系统 shell 启动进程。</span><span class="sxs-lookup"><span data-stu-id="2010b-119">Set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to specify whether to start the process by using the operating system shell.</span></span> <span data-ttu-id="2010b-120">如果<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>设置为`false`、 新进程将继承标准输入标准输出和标准错误流调用的处理，除非<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>， <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>，或<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A>属性，分别设置为`true`.</span><span class="sxs-lookup"><span data-stu-id="2010b-120">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is set to `false`, the new process inherits the standard input, standard output, and standard error streams of the calling process, unless the <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, or <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> properties, respectively, are set to `true`.</span></span> 
  
 <span data-ttu-id="2010b-121">您可以更改的任何值<xref:System.Diagnostics.ProcessStartInfo>进程启动时间的属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-121">You can change the value of any <xref:System.Diagnostics.ProcessStartInfo> property up to the time that the process starts.</span></span> <span data-ttu-id="2010b-122">启动进程后，更改这些值将产生不起作用。</span><span class="sxs-lookup"><span data-stu-id="2010b-122">After you start the process, changing these values has no effect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2010b-123">此类包含在类级别应用于所有成员的链接要求。</span><span class="sxs-lookup"><span data-stu-id="2010b-123">This class contains a link demand at the class level that applies to all members.</span></span> <span data-ttu-id="2010b-124">一个<xref:System.Security.SecurityException>直接调用方没有完全信任权限时引发。</span><span class="sxs-lookup"><span data-stu-id="2010b-124">A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission.</span></span> <span data-ttu-id="2010b-125">有关安全要求的详细信息，请参阅[链接要求](~/docs/framework/misc/link-demands.md)。</span><span class="sxs-lookup"><span data-stu-id="2010b-125">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2010b-126">下面的代码示例演示如何使用<xref:System.Diagnostics.ProcessStartInfo>类，启动 Internet Explorer 中，提供目标 Url 与<xref:System.Diagnostics.ProcessStartInfo>参数。</span><span class="sxs-lookup"><span data-stu-id="2010b-126">The following code example demonstrates how to use the <xref:System.Diagnostics.ProcessStartInfo> class to start Internet Explorer, providing the destination URLs as <xref:System.Diagnostics.ProcessStartInfo> arguments.</span></span>  
  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="2010b-127">调用成员的<see cref="T:System.Diagnostics.ProcessStartInfo" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2010b-127">for calling members of <see cref="T:System.Diagnostics.ProcessStartInfo" />.</span>
      </span>
      <span data-ttu-id="2010b-128">要求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;[NIB： 命名权限集](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2010b-128">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; [NIB: Named Permission Sets](http://msdn.microsoft.com/library/08250d67-c99d-4ab0-8d2b-b0e12019f6e3): <see langword="FullTrust" />.</span>
      </span>
    </permission>
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-129">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-129">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2010b-130">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 类的新实例，而不指定启动进程时使用的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-130">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class without specifying a file name with which to start the process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-131">必须设置至少<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>属性之前启动进程。</span><span class="sxs-lookup"><span data-stu-id="2010b-131">You must set at least the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property before you start the process.</span></span> <span data-ttu-id="2010b-132">任何应用程序或文档的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="2010b-132">The file name is any application or document.</span></span> <span data-ttu-id="2010b-133">在这种情况下，将文档定义已打开任何文件类型或默认与之关联的操作。</span><span class="sxs-lookup"><span data-stu-id="2010b-133">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="2010b-134">您可以查看已注册的文件类型和其关联的应用程序为您的计算机通过使用**文件夹选项**对话框中，可通过操作系统。</span><span class="sxs-lookup"><span data-stu-id="2010b-134">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="2010b-135">**高级**按钮可显示是否与特定的已注册的文件类型关联的打开操作的对话框。</span><span class="sxs-lookup"><span data-stu-id="2010b-135">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="2010b-136">（可选） 在开始该过程之前，还可以设置其他属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-136">Optionally, you can also set other properties before you start the process.</span></span> <span data-ttu-id="2010b-137"><xref:System.Diagnostics.ProcessStartInfo.Verb%2A>属性提供立即行动起来，如"打印"中指示的文件与<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-137">The <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property supplies actions to take, such as "print", with the file indicated in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="2010b-138"><xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>属性提供一种方式时系统将其打开，将命令行参数传递到该文件。</span><span class="sxs-lookup"><span data-stu-id="2010b-138">The <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property supplies a way to pass command-line arguments to the file when the system opens it.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="2010b-139">对于直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-139">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2010b-140">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-140">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ProcessStartInfo : string -&gt; System.Diagnostics.ProcessStartInfo" Usage="new System.Diagnostics.ProcessStartInfo fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="2010b-141">启动进程时使用的应用程序或文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-141">An application or document with which to start a process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2010b-142">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 类的新实例，并指定启动进程时使用的诸如应用程序或文档的文件名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-142">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class and specifies a file name such as an application or document with which to start the process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-143">任何应用程序或文档的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="2010b-143">The file name is any application or document.</span></span> <span data-ttu-id="2010b-144">在这种情况下，将文档定义已打开任何文件类型或默认与之关联的操作。</span><span class="sxs-lookup"><span data-stu-id="2010b-144">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="2010b-145">您可以查看已注册的文件类型和其关联的应用程序为您的计算机通过使用**文件夹选项**对话框中，可通过操作系统。</span><span class="sxs-lookup"><span data-stu-id="2010b-145">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="2010b-146">**高级**按钮可显示是否与特定的已注册的文件类型关联的打开操作的对话框。</span><span class="sxs-lookup"><span data-stu-id="2010b-146">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="2010b-147">您可以更改<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>属性后调用此构造函数，最多的进程启动的时间。</span><span class="sxs-lookup"><span data-stu-id="2010b-147">You can change the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property after you call this constructor, up to the time that the process starts.</span></span> <span data-ttu-id="2010b-148">启动进程后，更改这些值将产生不起作用。</span><span class="sxs-lookup"><span data-stu-id="2010b-148">After you start the process, changing these values has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="2010b-149">对于直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-149">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2010b-150">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-150">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo (string fileName, string arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, arguments As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo(System::String ^ fileName, System::String ^ arguments);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ProcessStartInfo : string * string -&gt; System.Diagnostics.ProcessStartInfo" Usage="new System.Diagnostics.ProcessStartInfo (fileName, arguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="arguments" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="2010b-151">启动进程时使用的应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-151">An application with which to start a process.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="2010b-152">进程启动时要传递给应用程序的命令行自变量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-152">Command-line arguments to pass to the application when the process starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2010b-153">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 类的新实例，指定启动该进程时使用的应用程序文件名以及要传递给该应用程序的一组命令行参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-153">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class, specifies an application file name with which to start the process, and specifies a set of command-line arguments to pass to the application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-154">任何应用程序或文档的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="2010b-154">The file name is any application or document.</span></span> <span data-ttu-id="2010b-155">在这种情况下，将文档定义已打开任何文件类型或默认与之关联的操作。</span><span class="sxs-lookup"><span data-stu-id="2010b-155">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="2010b-156">您可以查看已注册的文件类型和其关联的应用程序为您的计算机通过使用**文件夹选项**对话框中，可通过操作系统。</span><span class="sxs-lookup"><span data-stu-id="2010b-156">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="2010b-157">**高级**按钮可显示是否与特定的已注册的文件类型关联的打开操作的对话框。</span><span class="sxs-lookup"><span data-stu-id="2010b-157">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="2010b-158">您可以更改<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>或<xref:System.Diagnostics.ProcessStartInfo.Arguments%2A>属性后调用此构造函数，最多的进程启动的时间。</span><span class="sxs-lookup"><span data-stu-id="2010b-158">You can change the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> or <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> properties after you call this constructor, up to the time that the process starts.</span></span> <span data-ttu-id="2010b-159">启动进程后，更改这些值将产生不起作用。</span><span class="sxs-lookup"><span data-stu-id="2010b-159">After you start the process, changing these values has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">
          <span data-ttu-id="2010b-160">对于直接调用方的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-160">for full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="2010b-161">此成员不能由部分信任的代码使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-161">This member cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ArgumentList">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; ArgumentList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; ArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentList As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ ArgumentList { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentList : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="System.Diagnostics.ProcessStartInfo.ArgumentList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Arguments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Command line arguments that will be passed to the application specified by the FileName property.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessArguments")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-162">获取或设置启动应用程序时要使用的一组命令行自变量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-162">Gets or sets the set of command-line arguments to use when starting the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-163">单个字符串包含要传递给在 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性中指定的目标应用程序的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-163">A single string containing the arguments to pass to the target application specified in the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          </span>
          <span data-ttu-id="2010b-164">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-164">The default is an empty string ("").</span>
          </span>
          <span data-ttu-id="2010b-165">在 Windows Vista 和早期的 Windows 操作系统上，添加至进程全径的长度的参数长度必须小于 2080。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-165">On Windows Vista and earlier versions of the Windows operating system, the length of the arguments added to the length of the full path to the process must be less than 2080.</span>
          </span>
          <span data-ttu-id="2010b-166">在 Windows 7 和更高版本，此长度必须小于 32699。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-166">On Windows 7 and later versions, the length must be less than 32699.</span>
          </span>
          <span data-ttu-id="2010b-167">参数由目标应用程序进行分析和解释，因此必须与该应用程序的预期保持一致。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-167">Arguments are parsed and interpreted by the target application, so must align with the expectations of that application.</span>
          </span>
          <span data-ttu-id="2010b-168">对于以下示例中所演示的 .NET 的应用程序，空格被解释为多个参数之间的分隔符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-168">For.NET applications as demonstrated in the Examples below, spaces are interpreted as a separator between multiple arguments.</span>
          </span>
          <span data-ttu-id="2010b-169">包含空格的单个参数必须用引号引起来，但这些引号不会传递到目标应用程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-169">A single argument that includes spaces must be surrounded by quotation marks, but those quotation marks are not carried through to the target application.</span>
          </span>
          <span data-ttu-id="2010b-170">在包括引号在内的最终已分析的自变量中，每个标记均会进行三重转义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-170">In include quotation marks in the final parsed argument, triple-escape each mark.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2010b-171">下面的第一个示例创建一个小型应用程序 (argsecho.exe) 该回显到控制台其自变量。</span><span class="sxs-lookup"><span data-stu-id="2010b-171">The first example below creates a small application (argsecho.exe) that echos its arguments to the console.</span></span> <span data-ttu-id="2010b-172">第二个示例创建调用 argsecho.exe 演示参数属性的不同变体的应用程序。</span><span class="sxs-lookup"><span data-stu-id="2010b-172">The second example creates an application that invokes argsecho.exe to demonstrate different variations for the Arguments property.</span></span>  
  
 [!code-cpp[Process.Start_static#3](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#3)]
 [!code-csharp[Process.Start_static#3](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#3)]
 [!code-vb[Process.Start_static#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#3)]  
  
 [!code-cpp[Process.Start_static#2](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#2)]
 [!code-csharp[Process.Start_static#2](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#2)]
 [!code-vb[Process.Start_static#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNoWindow">
      <MemberSignature Language="C#" Value="public bool CreateNoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateNoWindow" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property CreateNoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateNoWindow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CreateNoWindow : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.CreateNoWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to start the process without creating a new window to contain it.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessCreateNoWindow")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-173">获取或设置指示是否在新窗口中启动该进程的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-173">Gets or sets a value indicating whether to start the process in a new window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-174">如果应启动该进程而不创建包含它的新窗口，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-174">
              <see langword="true" /> if the process should be started without creating a new window to contain it; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2010b-175">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-175">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-176">如果 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 属性为 `true`，或者 <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> 和 <xref:System.Diagnostics.ProcessStartInfo.Password%2A> 属性不为 `null`，则将忽略 <xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A> 属性值并创建一个新窗口。</span><span class="sxs-lookup"><span data-stu-id="2010b-176">If the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property is `true` or the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> properties are not `null`, the <xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A> property value is ignored and a new window is created.</span></span>  

 <span data-ttu-id="2010b-177">.NET core 不支持直接在类似于 Unix 的平台，包括 macOS 和 Linux 上创建的 windows。</span><span class="sxs-lookup"><span data-stu-id="2010b-177">.NET Core does not support creating windows directly on Unix-like platforms, including macOS and Linux.</span></span> <span data-ttu-id="2010b-178">在这种平台上，将忽略此属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-178">This property is ignored on such platforms.</span></span>
  
   
  
## Examples  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-179">获取或设置确定要在启动进程时使用的域的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-179">Gets or sets a value that identifies the domain to use when starting the process.</span>
          </span>
          <span data-ttu-id="2010b-180">如果此值为 <see langword="null" />，则必须以 UPN 格式指定 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-180">If this value is <see langword="null" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property must be specified in UPN format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-181">要在启动进程时使用的 Active Directory 域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-181">The Active Directory domain to use when starting the process.</span>
          </span>
          <span data-ttu-id="2010b-182">如果此值为 <see langword="null" />，则必须以 UPN 格式指定 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-182">If this value is <see langword="null" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property must be specified in UPN format.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="2010b-183">此属性是兴趣的浓厚使用 Active Directory 的企业环境中的用户。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-183">This property is primarily of interest to users within enterprise environments that use Active Directory.</span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Environment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Environment" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Environment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Environment { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Environment : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Diagnostics.ProcessStartInfo.Environment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-184">获取应用于此进程及其子进程的环境变量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-184">Gets the environment variables that apply to this process and its child processes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-185">一个泛型字典，包含应用于此进程及其子进程的环境变量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-185">A generic dictionary containing the environment variables that apply to this process and its child processes.</span>
          </span>
          <span data-ttu-id="2010b-186">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-186">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-187">环境变量包含的文件搜索路径、 临时文件、 特定于应用程序的选项和其他类似的信息的目录。</span><span class="sxs-lookup"><span data-stu-id="2010b-187">The environment variables contain search paths for files, directories for temporary files, application-specific options, and other similar information.</span></span> <span data-ttu-id="2010b-188">尽管您不能直接设置<xref:System.Diagnostics.ProcessStartInfo.Environment%2A>属性，可以修改该属性返回的泛型字典。</span><span class="sxs-lookup"><span data-stu-id="2010b-188">Although you cannot directly set the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property, you can modify the generic dictionary returned by the property.</span></span> <span data-ttu-id="2010b-189">例如，下面的代码添加 TempPath 环境变量： `myProcess.StartInfo.Environment.Add("TempPath", "C:\\Temp")`。</span><span class="sxs-lookup"><span data-stu-id="2010b-189">For example, the following code adds a TempPath environment variable: `myProcess.StartInfo.Environment.Add("TempPath", "C:\\Temp")`.</span></span>  <span data-ttu-id="2010b-190">必须设置<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>属性设置为`false`以更改后启动过程<xref:System.Diagnostics.ProcessStartInfo.Environment%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-190">You must set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to `false` to start the process after changing the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property.</span></span> <span data-ttu-id="2010b-191">如果<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`，则<xref:System.InvalidOperationException>时引发<xref:System.Diagnostics.Process.Start%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="2010b-191">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, an <xref:System.InvalidOperationException> is thrown when the <xref:System.Diagnostics.Process.Start%2A> method is called.</span></span>  
  
 <span data-ttu-id="2010b-192">在.NET Framework 应用程序，使用<xref:System.Diagnostics.ProcessStartInfo.Environment%2A>属性是使用相同<xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-192">On .NET Framework applications, using the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property is the same as using the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="M:System.Diagnostics.Process.Start" />
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary EnvironmentVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvironmentVariables As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ EnvironmentVariables { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvironmentVariables : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Set of environment variables that apply to this process and child processes.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessEnvironmentVariables")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-193">获取文件的搜索路径、临时文件的目录、应用程序特定的选项和其他类似信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-193">Gets search paths for files, directories for temporary files, application-specific options, and other similar information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-194">提供应用于此进程和子进程的环境变量的字符串字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-194">A string dictionary that provides environment variables that apply to this process and child processes.</span>
          </span>
          <span data-ttu-id="2010b-195">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-195">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-196">虽然不能设置，但<xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A>属性，您可以修改<xref:System.Collections.Specialized.StringDictionary>属性返回。</span><span class="sxs-lookup"><span data-stu-id="2010b-196">Although you cannot set the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property, you can modify the <xref:System.Collections.Specialized.StringDictionary> returned by the property.</span></span> <span data-ttu-id="2010b-197">例如，下面的代码添加 TempPath 环境变量： `myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`。</span><span class="sxs-lookup"><span data-stu-id="2010b-197">For example, the following code adds a TempPath environment variable: `myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`.</span></span>  <span data-ttu-id="2010b-198">必须设置<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>属性设置为`false`以更改后启动过程<xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-198">You must set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to `false` to start the process after changing the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property.</span></span> <span data-ttu-id="2010b-199">如果<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`，则<xref:System.InvalidOperationException>时引发<xref:System.Diagnostics.Process.Start%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="2010b-199">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, an <xref:System.InvalidOperationException> is thrown when the <xref:System.Diagnostics.Process.Start%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDialog">
      <MemberSignature Language="C#" Value="public bool ErrorDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ErrorDialog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ErrorDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ErrorDialog { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorDialog : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.ErrorDialog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to show an error dialog to the user if there is an error.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessErrorDialog")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-200">获取或设置指示不能启动进程时是否向用户显示错误对话框的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-200">Gets or sets a value indicating whether an error dialog box is displayed to the user if the process cannot be started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-201">如果在不能启动进程时在屏幕上显示错误对话框，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-201">
              <see langword="true" /> if an error dialog box should be displayed on the screen if the process cannot be started; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2010b-202">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-202">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2010b-203"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 必须是`true`如果你想要设置<xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A>到`true`。</span><span class="sxs-lookup"><span data-stu-id="2010b-203"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> must be `true` if you want to set <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDialogParentHandle">
      <MemberSignature Language="C#" Value="public IntPtr ErrorDialogParentHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ErrorDialogParentHandle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorDialogParentHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ErrorDialogParentHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorDialogParentHandle : nativeint with get, set" Usage="System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-204">获取或设置在为不能启动的进程显示错误对话框时要使用的窗口句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-204">Gets or sets the window handle to use when an error dialog box is shown for a process that cannot be started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-205">一个指针，标识因进程启动失败而产生的错误对话框的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-205">A pointer to the handle of the error dialog box that results from a process start failure.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-206">如果<xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A>是`true`，则<xref:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle%2A>属性指定显示的对话框中的父窗口。</span><span class="sxs-lookup"><span data-stu-id="2010b-206">If <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle%2A> property specifies the parent window for the dialog box that is shown.</span></span> <span data-ttu-id="2010b-207">它可用于指定要保留在应用程序前的对话框的父级。</span><span class="sxs-lookup"><span data-stu-id="2010b-207">It is useful to specify a parent to keep the dialog box in front of the application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.FileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The name of the application, document or URL to start.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessFileName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-208">获取或设置要启动的应用程序或文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-208">Gets or sets the application or document to start.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-209">要启动的应用程序的名称或某文件类型的文档的名称，该文件类型与应用程序关联并且拥有可用的默认打开操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-209">The name of the application to start, or the name of a document of a file type that is associated with an application and that has a default open action available to it.</span>
          </span>
          <span data-ttu-id="2010b-210">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-210">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-211">必须设置至少<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>属性之前启动进程。</span><span class="sxs-lookup"><span data-stu-id="2010b-211">You must set at least the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property before you start the process.</span></span> <span data-ttu-id="2010b-212">任何应用程序或文档的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="2010b-212">The file name is any application or document.</span></span> <span data-ttu-id="2010b-213">将文档定义已打开任何文件类型或默认与之关联的操作。</span><span class="sxs-lookup"><span data-stu-id="2010b-213">A document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="2010b-214">您可以查看已注册的文件类型和其关联的应用程序为您的计算机通过使用**文件夹选项**对话框中，可通过操作系统。</span><span class="sxs-lookup"><span data-stu-id="2010b-214">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="2010b-215">**高级**按钮可显示是否与特定的已注册的文件类型关联的打开操作的对话框。</span><span class="sxs-lookup"><span data-stu-id="2010b-215">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="2010b-216">可供你的文件类型套部分取决于值<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-216">The set of file types available to you depends in part on the value of the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property.</span></span> <span data-ttu-id="2010b-217">如果<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`，可以启动任何文档，并对文件执行操作，如打印与<xref:System.Diagnostics.Process>组件。</span><span class="sxs-lookup"><span data-stu-id="2010b-217">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, you can start any document and perform operations on the file, such as printing, with the <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="2010b-218">当<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`false`，可以启动的可执行文件与<xref:System.Diagnostics.Process>组件。</span><span class="sxs-lookup"><span data-stu-id="2010b-218">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, you can start only executables with the <xref:System.Diagnostics.Process> component.</span></span>  
  
 <span data-ttu-id="2010b-219">可以通过设置启动 ClickOnce 应用程序<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>属性设置为最初从中安装应用程序的位置 （例如，Web 地址）。</span><span class="sxs-lookup"><span data-stu-id="2010b-219">You can start a ClickOnce application by setting the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property to the location (for example, a Web address) from which you originally installed the application.</span></span> <span data-ttu-id="2010b-220">通过在您的硬盘上指定其安装的位置不启动 ClickOnce 应用程序。</span><span class="sxs-lookup"><span data-stu-id="2010b-220">Do not start a ClickOnce application by specifying its installed location on your hard disk.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadUserProfile">
      <MemberSignature Language="C#" Value="public bool LoadUserProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadUserProfile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadUserProfile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadUserProfile { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LoadUserProfile : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.LoadUserProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-221">获取或设置指示是否从注册表加载 Windows 用户配置文件的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-221">Gets or sets a value that indicates whether the Windows user profile is to be loaded from the registry.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-222">如果应加载 Windows 用户概况，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-222">
              <see langword="true" /> if the Windows user profile should be loaded; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2010b-223">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-223">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-224">如果正在使用的用户名、 密码和域启动的过程，将引用此属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-224">This property is referenced if the process is being started by using the user name, password, and domain.</span></span>  
  
 <span data-ttu-id="2010b-225">如果值为`true`，用户的配置文件中`HKEY_USERS`加载注册表项。</span><span class="sxs-lookup"><span data-stu-id="2010b-225">If the value is `true`, the user's profile in the `HKEY_USERS` registry key is loaded.</span></span> <span data-ttu-id="2010b-226">正在加载配置文件可能非常耗时。</span><span class="sxs-lookup"><span data-stu-id="2010b-226">Loading the profile can be time-consuming.</span></span> <span data-ttu-id="2010b-227">因此，最好使用此值仅在必须访问中的信息`HKEY_CURRENT_USER`注册表项。</span><span class="sxs-lookup"><span data-stu-id="2010b-227">Therefore, it is best to use this value only if you must access the information in the `HKEY_CURRENT_USER` registry key.</span></span>  
  
 <span data-ttu-id="2010b-228">在 Windows Server 2003 和 Windows 2000 中，配置文件是卸载后已终止新进程，而不考虑是否该进程已在创建子进程。</span><span class="sxs-lookup"><span data-stu-id="2010b-228">In Windows Server 2003 and Windows 2000, the profile is unloaded after the new process has been terminated, regardless of whether the process has created child processes.</span></span>  
  
 <span data-ttu-id="2010b-229">在 Windows XP 中，新过程完成后会卸载配置文件，它已创建的所有子进程已被都终止。</span><span class="sxs-lookup"><span data-stu-id="2010b-229">In Windows XP, the profile is unloaded after the new process and all child processes it has created have been terminated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString Password" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ Password { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : System.Security.SecureString with get, set" Usage="System.Diagnostics.ProcessStartInfo.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-230">获取或设置一个安全字符串，其中包含要在启动进程时使用的用户密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-230">Gets or sets a secure string that contains the user password to use when starting the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-231">启动进程时使用的用户密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-231">The user password to use when starting the process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="2010b-232"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>必须设置属性，如果<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>和<xref:System.Diagnostics.ProcessStartInfo.Password%2A>提供。</span><span class="sxs-lookup"><span data-stu-id="2010b-232">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="2010b-233">如果未设置默认工作目录为 %systemroot%\system32。</span><span class="sxs-lookup"><span data-stu-id="2010b-233">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2010b-234">设置<xref:System.Diagnostics.ProcessStartInfo.Domain%2A>， <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>，并<xref:System.Diagnostics.ProcessStartInfo.Password%2A>中的属性<xref:System.Diagnostics.ProcessStartInfo>对象是使用用户凭据启动的进程的建议的做法。</span><span class="sxs-lookup"><span data-stu-id="2010b-234">Setting the <xref:System.Diagnostics.ProcessStartInfo.Domain%2A>, <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>, and the <xref:System.Diagnostics.ProcessStartInfo.Password%2A> properties in a <xref:System.Diagnostics.ProcessStartInfo> object is the recommended practice for starting a process with user credentials.</span></span>  
  
 <span data-ttu-id="2010b-235">一个<xref:System.Security.SecureString>对象就像<xref:System.String>对象，其文本值。</span><span class="sxs-lookup"><span data-stu-id="2010b-235">A <xref:System.Security.SecureString> object is like a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="2010b-236">但是，值<xref:System.Security.SecureString>对象会自动加密，直到你的应用程序将其标记为只读的并且它可以从内存中删除计算机由你的应用程序或.NET Framework 垃圾回收器可以修改它。</span><span class="sxs-lookup"><span data-stu-id="2010b-236">However, the value of a <xref:System.Security.SecureString> object is automatically encrypted, it can be modified until your application marks it as read-only, and it can be deleted from computer memory by either your application or the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="2010b-237">有关安全字符串和如何获取用于设置此属性的密码的示例的详细信息，请参见 <xref:System.Security.SecureString> 类。</span><span class="sxs-lookup"><span data-stu-id="2010b-237">For more information about secure strings and an example of how to obtain a password to set this property, see the <xref:System.Security.SecureString> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2010b-238">如果提供的值<xref:System.Diagnostics.ProcessStartInfo.Password%2A>属性，<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>属性必须`false`，或<xref:System.InvalidOperationException>时将引发<xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType>调用方法。</span><span class="sxs-lookup"><span data-stu-id="2010b-238">If you provide a value for the <xref:System.Diagnostics.ProcessStartInfo.Password%2A> property, the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property must be `false`, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordInClearText">
      <MemberSignature Language="C#" Value="public string PasswordInClearText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordInClearText" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordInClearText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordInClearText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordInClearText : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.PasswordInClearText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-239">获取或设置明文形式的用户密码以便在开始进程时使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-239">Gets or sets the user password in clear text to use when starting the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-240">明文形式的用户密码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-240">The user password in clear text.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardError">
      <MemberSignature Language="C#" Value="public bool RedirectStandardError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardError" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardError : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process's error output is written to the Process instance's StandardError member.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessRedirectStandardError")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-241">获取或设置指示是否将应用程序的错误输出写入 <see cref="P:System.Diagnostics.Process.StandardError" /> 流中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-241">Gets or sets a value that indicates whether the error output of an application is written to the <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-242">如果错误输出应写入 <see cref="P:System.Diagnostics.Process.StandardError" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-242">
              <see langword="true" /> if error output should be written to <see cref="P:System.Diagnostics.Process.StandardError" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2010b-243">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-243">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-244">当<xref:System.Diagnostics.Process>将文本写入到它的标准错误流，通常在控制台上显示文本。</span><span class="sxs-lookup"><span data-stu-id="2010b-244">When a <xref:System.Diagnostics.Process> writes text to its standard error stream, that text is typically displayed on the console.</span></span> <span data-ttu-id="2010b-245">通过将重定向<xref:System.Diagnostics.Process.StandardError%2A>流，可以操作或取消进程的错误输出。</span><span class="sxs-lookup"><span data-stu-id="2010b-245">By redirecting the <xref:System.Diagnostics.Process.StandardError%2A> stream, you can manipulate or suppress the error output of a process.</span></span> <span data-ttu-id="2010b-246">例如，可以筛选文本、 格式设置不同，或将输出写入到控制台和一个指定的日志文件。</span><span class="sxs-lookup"><span data-stu-id="2010b-246">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2010b-247">必须设置<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>到`false`如果你想要设置<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A>到`true`。</span><span class="sxs-lookup"><span data-stu-id="2010b-247">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> to `true`.</span></span> <span data-ttu-id="2010b-248">否则，从读取<xref:System.Diagnostics.Process.StandardError%2A>流将引发异常。</span><span class="sxs-lookup"><span data-stu-id="2010b-248">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="2010b-249">重定向<xref:System.Diagnostics.Process.StandardError%2A>可以读取流，以同步方式还是以异步方式。</span><span class="sxs-lookup"><span data-stu-id="2010b-249">The redirected <xref:System.Diagnostics.Process.StandardError%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="2010b-250">等方法<xref:System.IO.StreamReader.Read%2A>，<xref:System.IO.StreamReader.ReadLine%2A>和<xref:System.IO.StreamReader.ReadToEnd%2A>执行同步读取的操作的错误输出流的过程。</span><span class="sxs-lookup"><span data-stu-id="2010b-250">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A> and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the error output stream of the process.</span></span> <span data-ttu-id="2010b-251">这些同步读取操作未完成之前关联<xref:System.Diagnostics.Process>写入其<xref:System.Diagnostics.Process.StandardError%2A>流式处理，或关闭流。</span><span class="sxs-lookup"><span data-stu-id="2010b-251">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardError%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="2010b-252">与此相反，<xref:System.Diagnostics.Process.BeginErrorReadLine%2A>开始异步读取操作上<xref:System.Diagnostics.Process.StandardError%2A>流。</span><span class="sxs-lookup"><span data-stu-id="2010b-252">In contrast, <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="2010b-253">此方法启用流输出一个指定的事件处理程序，并立即返回给调用方，可以执行其他工作，而流输出定向到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="2010b-253">This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2010b-254">处理异步输出的应用程序应调用<xref:System.Diagnostics.Process.WaitForExit%2A>方法，以确保已刷新输出缓冲区。</span><span class="sxs-lookup"><span data-stu-id="2010b-254">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit%2A> method to ensure that the output buffer has been flushed.</span></span>  
  
 <span data-ttu-id="2010b-255">同步读取操作引入了读取从调用方之间的依赖关系<xref:System.Diagnostics.Process.StandardError%2A>流和子进程的写入该流。</span><span class="sxs-lookup"><span data-stu-id="2010b-255">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="2010b-256">这些依赖关系可能会导致死锁情况。</span><span class="sxs-lookup"><span data-stu-id="2010b-256">These dependencies can cause deadlock conditions.</span></span> <span data-ttu-id="2010b-257">当调用方读取子进程的重定向流时，它所依赖的子。</span><span class="sxs-lookup"><span data-stu-id="2010b-257">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="2010b-258">调用方等待读取操作，直到子写入流或关闭流。</span><span class="sxs-lookup"><span data-stu-id="2010b-258">The caller waits for the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="2010b-259">子进程在编写时数据不足，无法填充其重定向的流，它是依赖于父。</span><span class="sxs-lookup"><span data-stu-id="2010b-259">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="2010b-260">子进程先等待下一个写入操作的父项从完整的流中读取或关闭流。</span><span class="sxs-lookup"><span data-stu-id="2010b-260">The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="2010b-261">对于其他以完成操作时，调用方和子进程等待并都不可以继续时，将产生死锁情况。</span><span class="sxs-lookup"><span data-stu-id="2010b-261">The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</span></span> <span data-ttu-id="2010b-262">可以通过评估的调用方和子进程之间的依赖关系来避免死锁。</span><span class="sxs-lookup"><span data-stu-id="2010b-262">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  
  
 <span data-ttu-id="2010b-263">例如，下面的 C# 代码演示如何从重定向流中读取并等待子进程退出。</span><span class="sxs-lookup"><span data-stu-id="2010b-263">For example, the following C# code shows how to read from a redirected stream and wait for the child process to exit.</span></span>  
  
```csharp  
// Start the child process.  
 Process p = new Process();  
 // Redirect the error stream of the child process.  
 p.StartInfo.UseShellExecute = false;  
 p.StartInfo.RedirectStandardError = true;  
 p.StartInfo.FileName = "Write500Lines.exe";  
 p.Start();  
 // Do not wait for the child process to exit before  
 // reading to the end of its redirected error stream.  
 // p.WaitForExit();  
 // Read the error stream first and then wait.  
 string error = p.StandardError.ReadToEnd();  
 p.WaitForExit();  
```  
  
 <span data-ttu-id="2010b-264">代码示例调用，因此可避免死锁条件`p.StandardError.ReadToEnd`之前`p.WaitForExit`。</span><span class="sxs-lookup"><span data-stu-id="2010b-264">The code example avoids a deadlock condition by calling `p.StandardError.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="2010b-265">如果父进程的调用可能导致死锁条件`p.WaitForExit`之前`p.StandardError.ReadToEnd`和子进程会写入足够多的文本以填充重定向的流。</span><span class="sxs-lookup"><span data-stu-id="2010b-265">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardError.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="2010b-266">父进程将无限期地等待子进程退出。</span><span class="sxs-lookup"><span data-stu-id="2010b-266">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="2010b-267">子进程将无限期地等待父读取完整<xref:System.Diagnostics.Process.StandardError%2A>流。</span><span class="sxs-lookup"><span data-stu-id="2010b-267">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="2010b-268">从标准输出和标准错误流中读取的所有文本时出现类似问题。</span><span class="sxs-lookup"><span data-stu-id="2010b-268">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="2010b-269">例如，下面的 C# 代码执行两个流的读取的操作。</span><span class="sxs-lookup"><span data-stu-id="2010b-269">For example, the following C# code performs a read operation on both streams.</span></span>  
  
```csharp  
// Do not perform a synchronous read to the end of both  
// redirected streams.  
// string output = p.StandardOutput.ReadToEnd();  
// string error = p.StandardError.ReadToEnd();  
// p.WaitForExit();  
// Use asynchronous read operations on at least one of the streams.  
p.BeginOutputReadLine();  
string error = p.StandardError.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="2010b-270">代码示例执行异步读取操作上，因此可避免死锁条件<xref:System.Diagnostics.Process.StandardOutput%2A>流。</span><span class="sxs-lookup"><span data-stu-id="2010b-270">The code example avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="2010b-271">如果父进程调用产生死锁情况`p.StandardOutput.ReadToEnd`跟`p.StandardError.ReadToEnd`和子进程会写入足够多的文本以填充其错误流。</span><span class="sxs-lookup"><span data-stu-id="2010b-271">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="2010b-272">父进程将无限期地等待子进程关闭其<xref:System.Diagnostics.Process.StandardOutput%2A>流。</span><span class="sxs-lookup"><span data-stu-id="2010b-272">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="2010b-273">子进程将无限期地等待父读取完整<xref:System.Diagnostics.Process.StandardError%2A>流。</span><span class="sxs-lookup"><span data-stu-id="2010b-273">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="2010b-274">异步读取的操作可用于避免这些依赖关系和其潜在的死锁。</span><span class="sxs-lookup"><span data-stu-id="2010b-274">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="2010b-275">或者，您可以通过创建两个线程和读取单独的线程上的每个流的输出来避免死锁情况。</span><span class="sxs-lookup"><span data-stu-id="2010b-275">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2010b-276">下面的示例使用`net use`命令和用户提供的参数将映射的网络资源。</span><span class="sxs-lookup"><span data-stu-id="2010b-276">The following example uses the `net use` command together with a user-supplied argument to map a network resource.</span></span> <span data-ttu-id="2010b-277">然后，读取的 net 命令标准错误流，并将其写入控制台。</span><span class="sxs-lookup"><span data-stu-id="2010b-277">It then reads the standard error stream of the net command and writes it to console.</span></span>  
  
 [!code-cpp[Process_StandardError#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardError/CPP/source.cpp#1)]
 [!code-csharp[Process_StandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardError/CS/source.cs#1)]
 [!code-vb[Process_StandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardError/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardError" />
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardInput">
      <MemberSignature Language="C#" Value="public bool RedirectStandardInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardInput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardInput : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process command input is read from the Process instance's StandardInput member.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessRedirectStandardInput")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-278">获取或设置指示应用程序的输入是否从 <see cref="P:System.Diagnostics.Process.StandardInput" /> 流中读取的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-278">Gets or sets a value indicating whether the input for an application is read from the <see cref="P:System.Diagnostics.Process.StandardInput" /> stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-279">如果应从 <see cref="P:System.Diagnostics.Process.StandardInput" /> 读取输入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-279">
              <see langword="true" /> if input should be read from <see cref="P:System.Diagnostics.Process.StandardInput" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2010b-280">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-280">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-281">一个<xref:System.Diagnostics.Process>可以读取从其标准输入流，通常是键盘输入的文本。</span><span class="sxs-lookup"><span data-stu-id="2010b-281">A <xref:System.Diagnostics.Process> can read input text from its standard input stream, typically the keyboard.</span></span> <span data-ttu-id="2010b-282">通过将重定向<xref:System.Diagnostics.Process.StandardInput%2A>流，你可以以编程方式指定进程的输入。</span><span class="sxs-lookup"><span data-stu-id="2010b-282">By redirecting the <xref:System.Diagnostics.Process.StandardInput%2A> stream, you can programmatically specify the input of a process.</span></span> <span data-ttu-id="2010b-283">例如，而不是使用键盘输入，可以提供从指定文件的内容的文本或从另一个应用程序的输出。</span><span class="sxs-lookup"><span data-stu-id="2010b-283">For example, instead of using keyboard input, you can provide text from the contents of a designated file or output from another application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2010b-284">必须设置<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>到`false`如果你想要设置<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>到`true`。</span><span class="sxs-lookup"><span data-stu-id="2010b-284">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A> to `true`.</span></span> <span data-ttu-id="2010b-285">否则，写入<xref:System.Diagnostics.Process.StandardInput%2A>流将引发异常。</span><span class="sxs-lookup"><span data-stu-id="2010b-285">Otherwise, writing to the <xref:System.Diagnostics.Process.StandardInput%2A> stream throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2010b-286">下面的示例演示如何重定向<xref:System.Diagnostics.Process.StandardInput%2A>进程的流。</span><span class="sxs-lookup"><span data-stu-id="2010b-286">The following example illustrates how to redirect the <xref:System.Diagnostics.Process.StandardInput%2A> stream of a process.</span></span> <span data-ttu-id="2010b-287">`sort`命令是一个控制台应用程序的读取，并对文本输入进行排序。</span><span class="sxs-lookup"><span data-stu-id="2010b-287">The `sort` command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="2010b-288">该示例启动`sort`命令和重定向的输入。</span><span class="sxs-lookup"><span data-stu-id="2010b-288">The example starts the `sort` command with redirected input.</span></span> <span data-ttu-id="2010b-289">然后，它会提示用户输入文本，并将传递到文本`sort`进程的重定向通过<xref:System.Diagnostics.Process.StandardInput%2A>流。</span><span class="sxs-lookup"><span data-stu-id="2010b-289">It then prompts the user for text, and passes the text to the `sort` process through the redirected <xref:System.Diagnostics.Process.StandardInput%2A> stream.</span></span> <span data-ttu-id="2010b-290">`sort`结果显示到控制台上的用户。</span><span class="sxs-lookup"><span data-stu-id="2010b-290">The `sort` results are displayed to the user on the console.</span></span>  
  
 [!code-cpp[Process_StandardInput#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardInput/CPP/process_standardinput.cpp#1)]
 [!code-csharp[Process_StandardInput#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardInput/CS/process_standardinput.cs#1)]
 [!code-vb[Process_StandardInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardInput/VB/process_standardinput.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardInput" />
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardOutput">
      <MemberSignature Language="C#" Value="public bool RedirectStandardOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardOutput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardOutput : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process output is written to the Process instance's StandardOutput member.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessRedirectStandardOutput")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-291">获取或设置指示是否将应用程序的文本输出写入 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 流中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-291">Gets or sets a value that indicates whether the textual output of an application is written to the <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-292">如果输出应写入 <see cref="P:System.Diagnostics.Process.StandardOutput" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-292">
              <see langword="true" /> if output should be written to <see cref="P:System.Diagnostics.Process.StandardOutput" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2010b-293">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-293">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-294">当<xref:System.Diagnostics.Process>将文本写入其标准流，通常在控制台上显示文本。</span><span class="sxs-lookup"><span data-stu-id="2010b-294">When a <xref:System.Diagnostics.Process> writes text to its standard stream, that text is typically displayed on the console.</span></span> <span data-ttu-id="2010b-295">通过设置<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>到`true`重定向<xref:System.Diagnostics.Process.StandardOutput%2A>流，可以操作或取消进程的输出。</span><span class="sxs-lookup"><span data-stu-id="2010b-295">By setting <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> to `true` to redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> stream, you can manipulate or suppress the output of a process.</span></span> <span data-ttu-id="2010b-296">例如，可以筛选文本、 格式设置不同，或将输出写入到控制台和一个指定的日志文件。</span><span class="sxs-lookup"><span data-stu-id="2010b-296">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2010b-297">必须设置<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>到`false`如果你想要设置<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>到`true`。</span><span class="sxs-lookup"><span data-stu-id="2010b-297">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> to `true`.</span></span> <span data-ttu-id="2010b-298">否则，从读取<xref:System.Diagnostics.Process.StandardOutput%2A>流将引发异常。</span><span class="sxs-lookup"><span data-stu-id="2010b-298">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="2010b-299">重定向<xref:System.Diagnostics.Process.StandardOutput%2A>可以读取流，以同步方式还是以异步方式。</span><span class="sxs-lookup"><span data-stu-id="2010b-299">The redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="2010b-300">等方法<xref:System.IO.StreamReader.Read%2A>， <xref:System.IO.StreamReader.ReadLine%2A>，和<xref:System.IO.StreamReader.ReadToEnd%2A>执行同步读取的操作过程的输出流。</span><span class="sxs-lookup"><span data-stu-id="2010b-300">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A>, and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the output stream of the process.</span></span> <span data-ttu-id="2010b-301">这些同步读取操作未完成之前关联<xref:System.Diagnostics.Process>写入其<xref:System.Diagnostics.Process.StandardOutput%2A>流式处理，或关闭流。</span><span class="sxs-lookup"><span data-stu-id="2010b-301">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardOutput%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="2010b-302">与此相反，<xref:System.Diagnostics.Process.BeginOutputReadLine%2A>开始异步读取操作上<xref:System.Diagnostics.Process.StandardOutput%2A>流。</span><span class="sxs-lookup"><span data-stu-id="2010b-302">In contrast, <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="2010b-303">此方法启用指定的事件处理程序 (请参阅<xref:System.Diagnostics.Process.OutputDataReceived>) 流输出并立即返回给调用方，它可以执行其他工作，而流输出定向到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="2010b-303">This method enables a designated event handler (see <xref:System.Diagnostics.Process.OutputDataReceived>) for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2010b-304">处理异步输出的应用程序应调用<xref:System.Diagnostics.Process.WaitForExit%2A>方法，以确保已刷新输出缓冲区。</span><span class="sxs-lookup"><span data-stu-id="2010b-304">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit%2A> method to ensure that the output buffer has been flushed.</span></span>  
  
 <span data-ttu-id="2010b-305">同步读取操作引入了读取从调用方之间的依赖关系<xref:System.Diagnostics.Process.StandardOutput%2A>流和子进程的写入该流。</span><span class="sxs-lookup"><span data-stu-id="2010b-305">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="2010b-306">这些依赖关系可能会导致死锁情况。</span><span class="sxs-lookup"><span data-stu-id="2010b-306">These dependencies can cause deadlock conditions.</span></span> <span data-ttu-id="2010b-307">当调用方读取子进程的重定向流时，它所依赖的子。</span><span class="sxs-lookup"><span data-stu-id="2010b-307">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="2010b-308">调用方等待读取操作，直到子写入流或关闭流。</span><span class="sxs-lookup"><span data-stu-id="2010b-308">The caller waits for the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="2010b-309">子进程在编写时数据不足，无法填充其重定向的流，它是依赖于父。</span><span class="sxs-lookup"><span data-stu-id="2010b-309">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="2010b-310">子进程先等待下一个写入操作的父项从完整的流中读取或关闭流。</span><span class="sxs-lookup"><span data-stu-id="2010b-310">The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="2010b-311">对于其他以完成操作时，调用方和子进程等待并都不可以继续时，将产生死锁情况。</span><span class="sxs-lookup"><span data-stu-id="2010b-311">The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</span></span> <span data-ttu-id="2010b-312">可以通过评估的调用方和子进程之间的依赖关系来避免死锁。</span><span class="sxs-lookup"><span data-stu-id="2010b-312">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  
  
 <span data-ttu-id="2010b-313">例如，下面的 C# 代码演示如何从重定向流中读取并等待子进程退出。</span><span class="sxs-lookup"><span data-stu-id="2010b-313">For example, the following C# code shows how to read from a redirected stream and wait for the child process to exit.</span></span>  
  
```csharp  
Process p = new Process();  
p.StartInfo.UseShellExecute = false;  
p.StartInfo.RedirectStandardOutput = true;  
p.StartInfo.FileName = "Write500Lines.exe";  
p.Start();  
  
// To avoid deadlocks, always read the output stream first and then wait.  
string output = p.StandardOutput.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="2010b-314">代码示例调用，因此可避免死锁条件`p.StandardOutput.ReadToEnd`之前`p.WaitForExit`。</span><span class="sxs-lookup"><span data-stu-id="2010b-314">The code example avoids a deadlock condition by calling `p.StandardOutput.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="2010b-315">如果父进程的调用可能导致死锁条件`p.WaitForExit`之前`p.StandardOutput.ReadToEnd`和子进程会写入足够多的文本以填充重定向的流。</span><span class="sxs-lookup"><span data-stu-id="2010b-315">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardOutput.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="2010b-316">父进程将无限期地等待子进程退出。</span><span class="sxs-lookup"><span data-stu-id="2010b-316">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="2010b-317">子进程将无限期地等待父读取完整<xref:System.Diagnostics.Process.StandardOutput%2A>流。</span><span class="sxs-lookup"><span data-stu-id="2010b-317">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span>  
  
 <span data-ttu-id="2010b-318">从标准输出和标准错误流中读取的所有文本时出现类似问题。</span><span class="sxs-lookup"><span data-stu-id="2010b-318">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="2010b-319">例如，下面的 C# 代码执行两个流的读取的操作。</span><span class="sxs-lookup"><span data-stu-id="2010b-319">For example, the following C# code performs a read operation on both streams.</span></span>  
  
```csharp  
// To avoid deadlocks, use asynchronous read operations on at least one of the streams.  
// Do not perform a synchronous read to the end of both redirected streams.  
p.BeginOutputReadLine();  
string error = p.StandardError.ReadToEnd();  
p.WaitForExit();  
```  
  
 <span data-ttu-id="2010b-320">代码示例执行异步读取操作上，因此可避免死锁条件<xref:System.Diagnostics.Process.StandardOutput%2A>流。</span><span class="sxs-lookup"><span data-stu-id="2010b-320">The code example avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="2010b-321">如果父进程调用产生死锁情况`p.StandardOutput.ReadToEnd`跟`p.StandardError.ReadToEnd`和子进程会写入足够多的文本以填充其错误流。</span><span class="sxs-lookup"><span data-stu-id="2010b-321">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="2010b-322">父进程将无限期地等待子进程关闭其<xref:System.Diagnostics.Process.StandardOutput%2A>流。</span><span class="sxs-lookup"><span data-stu-id="2010b-322">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="2010b-323">子进程将无限期地等待父读取完整<xref:System.Diagnostics.Process.StandardError%2A>流。</span><span class="sxs-lookup"><span data-stu-id="2010b-323">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
  
 <span data-ttu-id="2010b-324">异步读取的操作可用于避免这些依赖关系和其潜在的死锁。</span><span class="sxs-lookup"><span data-stu-id="2010b-324">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="2010b-325">或者，您可以通过创建两个线程和读取单独的线程上的每个流的输出来避免死锁情况。</span><span class="sxs-lookup"><span data-stu-id="2010b-325">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ProcessOneStream#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessOneStream/CPP/stdstr.cpp#1)]
 [!code-csharp[ProcessOneStream#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessOneStream/CS/stdstr.cs#1)]
 [!code-vb[ProcessOneStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessOneStream/VB/stdstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardOutput" />
      </Docs>
    </Member>
    <Member MemberName="StandardErrorEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardErrorEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardErrorEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardErrorEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardErrorEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardErrorEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardErrorEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-326">获取或设置错误输出的首选编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-326">Gets or sets the preferred encoding for error output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-327">表示错误输出的首选编码的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-327">An object that represents the preferred encoding for error output.</span>
          </span>
          <span data-ttu-id="2010b-328">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-328">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-329">如果的值<xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A>属性是`null`，过程将使用错误输出的默认标准错误编码。</span><span class="sxs-lookup"><span data-stu-id="2010b-329">If the value of the <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> property is `null`, the process uses the default standard error encoding for error output.</span></span> <span data-ttu-id="2010b-330"><xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A>进程启动之前，必须设置属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-330">The <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> property must be set before the process is started.</span></span> <span data-ttu-id="2010b-331">设置此属性不能保证该进程将使用指定的编码;该进程将使用它支持这些编码。</span><span class="sxs-lookup"><span data-stu-id="2010b-331">Setting this property does not guarantee that the process will use the specified encoding; the process will use only those encodings that it supports.</span></span> <span data-ttu-id="2010b-332">应测试应用程序，以确定受支持的编码。</span><span class="sxs-lookup"><span data-stu-id="2010b-332">The application should be tested to determine which encodings are supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardInputEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardInputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardInputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardInputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardInputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardInputEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardOutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardOutputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardOutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardOutputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardOutputEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardOutputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-333">获取或设置标准输出的首选编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-333">Gets or sets the preferred encoding for standard output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-334">表示标准输出的首选编码的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-334">An object that represents the preferred encoding for standard output.</span>
          </span>
          <span data-ttu-id="2010b-335">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-335">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-336">如果的值<xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A>属性是`null`，进程使用的标准输出的默认标准输出编码。</span><span class="sxs-lookup"><span data-stu-id="2010b-336">If the value of the <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> property is `null`, the process uses the default standard output encoding for the standard output.</span></span> <span data-ttu-id="2010b-337"><xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A>进程启动之前，必须设置属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-337">The <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> property must be set before the process is started.</span></span> <span data-ttu-id="2010b-338">设置此属性不能保证该进程将使用指定的编码。</span><span class="sxs-lookup"><span data-stu-id="2010b-338">Setting this property does not guarantee that the process will use the specified encoding.</span></span> <span data-ttu-id="2010b-339">应测试应用程序，以确定该过程支持的编码。</span><span class="sxs-lookup"><span data-stu-id="2010b-339">The application should be tested to determine which encodings the process supports.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-340">获取或设置在启动进程时使用的用户名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-340">Gets or sets the user name to use when starting the process.</span>
          </span>
          <span data-ttu-id="2010b-341">如果使用 UPN 格式，<paramref name="user" />@<paramref name="DNS_domain_name" />，则 <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 属性必须为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-341">If you use the UPN format, <paramref name="user" />@<paramref name="DNS_domain_name" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> property must be <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-342">启动进程时使用的用户名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-342">The user name to use when starting the process.</span>
          </span>
          <span data-ttu-id="2010b-343">如果使用 UPN 格式，<paramref name="user" />@<paramref name="DNS_domain_name" />，则 <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 属性必须为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-343">If you use the UPN format, <paramref name="user" />@<paramref name="DNS_domain_name" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> property must be <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="2010b-344"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>必须设置属性，如果<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>和<xref:System.Diagnostics.ProcessStartInfo.Password%2A>提供。</span><span class="sxs-lookup"><span data-stu-id="2010b-344">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="2010b-345">如果未设置默认工作目录为 %systemroot%\system32。</span><span class="sxs-lookup"><span data-stu-id="2010b-345">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
 <span data-ttu-id="2010b-346">如果<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>属性不是`null`或空字符串，<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>属性必须是`false`，或<xref:System.InvalidOperationException>时将引发<xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType>调用方法。</span><span class="sxs-lookup"><span data-stu-id="2010b-346">If the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> property is not `null` or an empty string, the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property must be `false`, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseShellExecute">
      <MemberSignature Language="C#" Value="public bool UseShellExecute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseShellExecute" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
      <MemberSignature Language="VB.NET" Value="Public Property UseShellExecute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseShellExecute { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseShellExecute : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.UseShellExecute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to use the operating system shell to start the process.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessUseShellExecute")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-347">获取或设置指示是否使用操作系统 shell 启动进程的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-347">Gets or sets a value indicating whether to use the operating system shell to start the process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-348">如果应在启动进程时使用 shell，则为 <see langword="true" />；如果直接从可执行文件创建进程，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-348">
              <see langword="true" /> if the shell should be used when starting the process; <see langword="false" /> if the process should be created directly from the executable file.</span>
          </span>
          <span data-ttu-id="2010b-349">默认值是<see langword="true" />上的.NET Framework 应用和<see langword="false" />上.NET Core 应用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-349">The default is <see langword="true" /> on .NET Framework apps and <see langword="false" /> on .NET Core apps.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[## Remarks

<span data-ttu-id="2010b-350">此属性设置为`false`，可将输入、 输出和错误流重定向。</span><span class="sxs-lookup"><span data-stu-id="2010b-350">Setting this property to `false` enables you to redirect input, output, and error streams.</span></span>

> [!NOTE]
> <span data-ttu-id="2010b-351"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> 必须是`false`如果<xref:System.Diagnostics.ProcessStartInfo.UserName>属性不是`null`或空字符串，或<xref:System.InvalidOperationException>时将引发<xref:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)?displayProperty=nameWithType>调用方法。</span><span class="sxs-lookup"><span data-stu-id="2010b-351"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> must be `false` if the <xref:System.Diagnostics.ProcessStartInfo.UserName> property is not `null` or an empty string, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)?displayProperty=nameWithType> method is called.</span></span>

<span data-ttu-id="2010b-352">在使用操作系统 shell 启动进程时，可以使用 <xref:System.Diagnostics.Process> 对象启动任何文档（可以是与具有默认打开操作的可执行文件关联的任何注册文件）并对该文件执行操作（如打印）。</span><span class="sxs-lookup"><span data-stu-id="2010b-352">When you use the operating system shell to start processes, you can start any document (which is any registered file type associated with an executable that has a default open action) and perform operations on the file, such as printing, by using the <xref:System.Diagnostics.Process> object.</span></span> <span data-ttu-id="2010b-353">当 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> 为 `false` 时，仅可使用 <xref:System.Diagnostics.Process> 对象启动可执行文件。</span><span class="sxs-lookup"><span data-stu-id="2010b-353">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> is `false`, you can start only executables by using the <xref:System.Diagnostics.Process> object.</span></span>

> [!NOTE]
> <span data-ttu-id="2010b-354"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> 必须是`true`如果您设置<xref:System.Diagnostics.ProcessStartInfo.ErrorDialog>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="2010b-354"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> must be `true` if you set the <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog> property to `true`.</span></span>

<span data-ttu-id="2010b-355">如果您设置<xref:System.Diagnostics.ProcessStartInfo.WindowStyle>到<xref:System.Diagnostics.ProcessWindowStyle.Hidden?displayProperty=nameWithType>，<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute>必须设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="2010b-355">If you set the <xref:System.Diagnostics.ProcessStartInfo.WindowStyle> to <xref:System.Diagnostics.ProcessWindowStyle.Hidden?displayProperty=nameWithType>, <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> must be set to `true`.</span></span>

### <a name="workingdirectory"></a><span data-ttu-id="2010b-356">WorkingDirectory</span><span class="sxs-lookup"><span data-stu-id="2010b-356">WorkingDirectory</span></span>

<span data-ttu-id="2010b-357"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> 属性的行为随 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> 属性的值而异。</span><span class="sxs-lookup"><span data-stu-id="2010b-357">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> property behaves differently depending on the value of the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> property.</span></span> <span data-ttu-id="2010b-358">当<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute>是`true`，则<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory>属性指定的可执行文件的位置。</span><span class="sxs-lookup"><span data-stu-id="2010b-358">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> property specifies the location of the executable.</span></span> <span data-ttu-id="2010b-359">如果 <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory*> 是一个空字符串，则假定当前目录包含可执行文件。</span><span class="sxs-lookup"><span data-stu-id="2010b-359">If <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory*> is an empty string, it is assumed that the current directory contains the executable.</span></span>

<span data-ttu-id="2010b-360">当<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute>是`false`，则<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory>属性不用于查找可执行文件。</span><span class="sxs-lookup"><span data-stu-id="2010b-360">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> property is not used to find the executable.</span></span> <span data-ttu-id="2010b-361">相反，它只能由已启动的进程使用，并且仅在新进程的上下文中有意义。</span><span class="sxs-lookup"><span data-stu-id="2010b-361">Instead, it is used only by the process that is started and has meaning only within the context of the new process.</span></span> <span data-ttu-id="2010b-362">当<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute>是`false`，则<xref:System.Diagnostics.ProcessStartInfo.FileName>属性可以是可执行文件的完全限定的路径或简单的可执行文件名称，系统将尝试在 PATH 环境变量所指定的文件夹中查找。</span><span class="sxs-lookup"><span data-stu-id="2010b-362">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.FileName> property can be either a fully qualified path to the executable, or a simple executable name that the system will attempt to find within folders specified by the PATH environment variable.</span></span>

## Examples

[!code-cpp[ProcessOneStream#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessOneStream/CPP/stdstr.cpp#1)]
[!code-csharp[ProcessOneStream#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessOneStream/CS/stdstr.cs#1)]
[!code-vb[ProcessOneStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessOneStream/VB/stdstr.vb#1)]]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="2010b-363">尝试在通用 Windows 平台 (UWP) 应用上将值设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-363">An attempt to set the value to <see langword="true" /> on Universal Windows Platform (UWP) apps occurs.</span>
          </span>
        </exception>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      </Docs>
    </Member>
    <Member MemberName="Verb">
      <MemberSignature Language="C#" Value="public string Verb { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Verb" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Verb" />
      <MemberSignature Language="VB.NET" Value="Public Property Verb As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Verb { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Verb : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Verb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The verb to apply to the document specified by the FileName property.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessVerb")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-364">获取或设置打开 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性指定的应用程序或文档时要使用的谓词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-364">Gets or sets the verb to use when opening the application or document specified by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-365">要对进程打开的文件执行的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-365">The action to take with the file that the process opens.</span>
          </span>
          <span data-ttu-id="2010b-366">默认值为空字符串 ("")，它表示没有操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-366">The default is an empty string (""), which signifies no action.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-367">每个文件扩展名有其自己的谓词，可以通过使用获取集<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-367">Each file name extension has its own set of verbs, which can be obtained by using the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span> <span data-ttu-id="2010b-368">例如，"`print`"谓词将打印文档通过使用指定<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>。</span><span class="sxs-lookup"><span data-stu-id="2010b-368">For example, the "`print`" verb will print a document specified by using <xref:System.Diagnostics.ProcessStartInfo.FileName%2A>.</span></span> <span data-ttu-id="2010b-369">可以通过使用空字符串指定默认的谓词 ("")。</span><span class="sxs-lookup"><span data-stu-id="2010b-369">The default verb can be specified by using an empty string ("").</span></span> <span data-ttu-id="2010b-370">谓词的示例包括"编辑"、"打开"、"OpenAsReadOnly"、"打印"和"Printto"。</span><span class="sxs-lookup"><span data-stu-id="2010b-370">Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</span></span> <span data-ttu-id="2010b-371">应使用返回的谓词集中出现的谓词<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-371">You should use only verbs that appear in the set of verbs returned by the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span>  
  
 <span data-ttu-id="2010b-372">当你使用<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>属性，您必须包括文件扩展名设置的值时<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-372">When you use the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property, you must include the file name extension when you set the value of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="2010b-373">文件名称不需要提供一个扩展，如果手动输入一个值<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-373">The file name does not need to have an extension if you manually enter a value for the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2010b-374">下面的代码示例通过使用指定的谓词和文件名称启动一个新进程。</span><span class="sxs-lookup"><span data-stu-id="2010b-374">The following code example starts a new process by using the specified verb and file name.</span></span> <span data-ttu-id="2010b-375">此代码示例是为提供一个更大示例的一部分<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-375">This code example is part of a larger example provided for the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span>  
  
 [!code-csharp[ProcessVerbs_Diagnostics#4](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessVerbs_Diagnostics/CS/source.cs#4)]
 [!code-vb[ProcessVerbs_Diagnostics#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessVerbs_Diagnostics/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.Verbs" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public string[] Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Verbs { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : string[]" Usage="System.Diagnostics.ProcessStartInfo.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-376">获取与 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性指定的文件类型关联的一组谓词。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-376">Gets the set of verbs associated with the type of file specified by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-377">系统可应用于 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性所指示文件的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-377">The actions that the system can apply to the file indicated by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2010b-378"><xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>属性使您能够确定可用于指定的文件的谓词<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-378">The <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property enables you to determine the verbs that can be used with the file specified by the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="2010b-379">可以设置<xref:System.Diagnostics.ProcessStartInfo.Verb%2A>属性设置为任何谓词集中的值。</span><span class="sxs-lookup"><span data-stu-id="2010b-379">You can set the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property to the value of any verb in the set.</span></span> <span data-ttu-id="2010b-380">谓词的示例包括"编辑"、"打开"、"OpenAsReadOnly"、"打印"和"Printto"。</span><span class="sxs-lookup"><span data-stu-id="2010b-380">Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</span></span>  
  
 <span data-ttu-id="2010b-381">当你使用<xref:System.Diagnostics.ProcessStartInfo.Verbs%2A>属性，您必须包括文件扩展名设置的值时<xref:System.Diagnostics.ProcessStartInfo.FileName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="2010b-381">When you use the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property, you must include the file name extension when you set the value of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="2010b-382">文件扩展名确定可能的谓词组。</span><span class="sxs-lookup"><span data-stu-id="2010b-382">The file name extension determines the set of possible verbs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2010b-383">下面的代码示例显示所选的文件名称定义的谓词。</span><span class="sxs-lookup"><span data-stu-id="2010b-383">The following code example displays the defined verbs for the chosen file name.</span></span> <span data-ttu-id="2010b-384">如果用户选择一个定义的谓词，该示例将启动一个新的进程，使用所选的谓词和输入的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="2010b-384">If the user selects one of the defined verbs, the example starts a new process using the selected verb and the input file name.</span></span>  
  
 [!code-csharp[ProcessVerbs_Diagnostics#3](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessVerbs_Diagnostics/CS/source.cs#3)]
 [!code-vb[ProcessVerbs_Diagnostics#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessVerbs_Diagnostics/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.Verb" />
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ProcessWindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ProcessWindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As ProcessWindowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ProcessWindowStyle WindowStyle { System::Diagnostics::ProcessWindowStyle get(); void set(System::Diagnostics::ProcessWindowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : System.Diagnostics.ProcessWindowStyle with get, set" Usage="System.Diagnostics.ProcessStartInfo.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("How the main window should be created when the process starts.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessWindowStyle")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessWindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-385">获取或设置启动进程时使用的窗口状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-385">Gets or sets the window state to use when the process is started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-386">枚举值之一，它指示是在最大化窗口、最小化窗口、正常(即非最大化也非最小化)窗口还是在不可见的窗口中启动进程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-386">One of the enumeration values that indicates whether the process is started in a window that is maximized, minimized, normal (neither maximized nor minimized), or not visible.</span>
          </span>
          <span data-ttu-id="2010b-387">默认值为 <see langword="Normal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-387">The default is <see langword="Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="2010b-388">窗口样式不是 <see cref="T:System.Diagnostics.ProcessWindowStyle" /> 枚举成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-388">The window style is not one of the <see cref="T:System.Diagnostics.ProcessWindowStyle" /> enumeration members.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WorkingDirectory">
      <MemberSignature Language="C#" Value="public string WorkingDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkingDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkingDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkingDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkingDirectory : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.WorkingDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The initial working directory for the process.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessWorkingDirectory")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2010b-389">当 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 属性为 <see langword="false" /> 时，将获取或设置要启动的进程的工作目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-389">When the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property is <see langword="false" />, gets or sets the working directory for the process to be started.</span>
          </span>
          <span data-ttu-id="2010b-390">当 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 为 <see langword="true" /> 时，获取或设置包含要启动的进程的目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-390">When <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is <see langword="true" />, gets or sets the directory that contains the process to be started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2010b-391">当 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 为 <see langword="true" /> 时，是包含要启动的进程的目录的完全限定名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-391">When <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is <see langword="true" />, the fully qualified name of the directory that contains the process to be started.</span>
          </span>
          <span data-ttu-id="2010b-392">当 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 属性为 <see langword="false" /> 时，则为要启动的进程的工作目录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-392">When the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property is <see langword="false" />, the working directory for the process to be started.</span>
          </span>
          <span data-ttu-id="2010b-393">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2010b-393">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="2010b-394"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>必须设置属性，如果<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>和<xref:System.Diagnostics.ProcessStartInfo.Password%2A>提供。</span><span class="sxs-lookup"><span data-stu-id="2010b-394">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="2010b-395">如果未设置默认工作目录为 %systemroot%\system32。</span><span class="sxs-lookup"><span data-stu-id="2010b-395">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
 <span data-ttu-id="2010b-396">如果目录已系统 path 变量的一部分，您无需重复此属性中的目录的位置。</span><span class="sxs-lookup"><span data-stu-id="2010b-396">If the directory is already part of the system path variable, you do not have to repeat the directory's location in this property.</span></span>  
  
 <span data-ttu-id="2010b-397"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>属性的行为以不同的方式时<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`比<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`false`。</span><span class="sxs-lookup"><span data-stu-id="2010b-397">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property behaves differently when <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true` than when <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`.</span></span> <span data-ttu-id="2010b-398">当<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`true`，则<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>属性指定的可执行文件的位置。</span><span class="sxs-lookup"><span data-stu-id="2010b-398">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property specifies the location of the executable.</span></span> <span data-ttu-id="2010b-399">如果<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>是空字符串，则认为当前目录以包含可执行文件。</span><span class="sxs-lookup"><span data-stu-id="2010b-399">If <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> is an empty string, the current directory is understood to contain the executable.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2010b-400">当 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 是 `true` 时，启动可执行文件的应用程序的工作目录也是该可执行文件的工作目录。</span><span class="sxs-lookup"><span data-stu-id="2010b-400">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the working directory of the application that starts the executable is also the working directory of the executable.</span></span>  
  
 <span data-ttu-id="2010b-401">当<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>是`false`，则<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A>属性不用于查找可执行文件。</span><span class="sxs-lookup"><span data-stu-id="2010b-401">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property is not used to find the executable.</span></span> <span data-ttu-id="2010b-402">相反，其值应用于已启动的进程，并且仅在新进程的上下文中有意义。</span><span class="sxs-lookup"><span data-stu-id="2010b-402">Instead, its value applies to the process that is started and only has meaning within the context of the new process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>