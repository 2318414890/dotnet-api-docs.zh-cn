<Type Name="FileVersionInfo" FullName="System.Diagnostics.FileVersionInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ee821734b014e2fa20a7d9f5368c4e7f26d305bf" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37663700" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileVersionInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileVersionInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.FileVersionInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileVersionInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileVersionInfo sealed" />
  <TypeSignature Language="F#" Value="type FileVersionInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides version information for a physical file on disk.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，版本号被显示为"主要版本号.次部件号"。 文件版本号是一个 64 位数字，用于保存文件的版本号，如下所示：  
  
-   第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。  
  
-   下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。  
  
-   16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。  
  
-   最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。  
  
 使用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取此类方法<xref:System.Diagnostics.FileVersionInfo>包含文件有关的信息，然后查看有关文件的信息的属性。 <xref:System.Diagnostics.FileVersionInfo.FileVersion%2A>属性提供有关文件的版本信息。 <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>，和<xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A>属性提供了指定的文件的一部分的产品的版本信息。 调用<xref:System.Diagnostics.FileVersionInfo.ToString%2A>若要获取此文件的属性及其值的部分列表。  
  
 <xref:System.Diagnostics.FileVersionInfo>属性基于内置到文件的版本资源信息。 版本资源通常内置二进制文件，如.exe 或.dll 文件;文本文件没有版本资源信息。  
  
 在 Win32 资源文件，或程序集特性通常指定版本资源。 例如<xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>属性反映`VS_FF_DEBUG`标记的文件中的值`VS_FIXEDFILEINFO`块中，它构建从`VERSIONINFO`Win32 资源文件中的资源。  有关 Win32 资源文件中指定版本资源的详细信息，请参阅"关于资源文件中"和"VERSIONINFO 资源"平台 SDK 中。 有关.NET 模块中指定版本资源的详细信息，请参阅[设置程序集特性](~/docs/framework/app-domains/set-assembly-attributes.md)主题。  
  
> [!NOTE]
>  此类，可以在类级别应用于所有成员的链接要求。 一个<xref:System.Security.SecurityException>直接调用方没有完全信任权限时引发。 有关链接要求的详细信息，请参阅[链接要求](~/docs/framework/misc/link-demands.md)。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印在文本框中的说明和版本数。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">对于直接调用方的完全信任。 部分受信任的代码不能使用此类。</permission>
    <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
    <altmember cref="T:System.Version" />
  </Docs>
  <Members>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public string Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comments" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comments { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comments : string" Usage="System.Diagnostics.FileVersionInfo.Comments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the comments associated with the file.</summary>
        <value>与文件关联的注释，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性包含可以显示用于诊断目的的其他信息。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后，它输出中的文本框中的注释。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompanyName : string" Usage="System.Diagnostics.FileVersionInfo.CompanyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the company that produced the file.</summary>
        <value>生成文件的公司的名称，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.CompanyName%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileBuildPart">
      <MemberSignature Language="C#" Value="public int FileBuildPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileBuildPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileBuildPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileBuildPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FileBuildPart : int" Usage="System.Diagnostics.FileVersionInfo.FileBuildPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the build number of the file.</summary>
        <value>表示文件生成号的值，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，版本号被显示为"主要版本号.次部件号"。 文件版本号是一个 64 位数字，用于保存文件的版本号，如下所示：  
  
-   第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。  
  
-   下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。  
  
-   16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。  
  
-   最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。  
  
 此属性获取第三个组 16 位。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="FileDescription">
      <MemberSignature Language="C#" Value="public string FileDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileDescription" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileDescription : string" Usage="System.Diagnostics.FileVersionInfo.FileDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the description of the file.</summary>
        <value>文件说明，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.FileDescription%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileMajorPart">
      <MemberSignature Language="C#" Value="public int FileMajorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileMajorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileMajorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileMajorPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FileMajorPart : int" Usage="System.Diagnostics.FileVersionInfo.FileMajorPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the major part of the version number.</summary>
        <value>表示版本号主要部分的值，当文件不包含版本信息时则为 0（零）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，版本号被显示为"主要版本号.次部件号"。 文件版本号是一个 64 位数字，用于保存文件的版本号，如下所示：  
  
-   第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。  
  
-   下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。  
  
-   16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。  
  
-   最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。  
  
 此属性获取第一组 16 位。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="FileMinorPart">
      <MemberSignature Language="C#" Value="public int FileMinorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileMinorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileMinorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileMinorPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FileMinorPart : int" Usage="System.Diagnostics.FileVersionInfo.FileMinorPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minor part of the version number of the file.</summary>
        <value>表示文件版本号次要部分的值，当文件不包含版本信息时则为 0（零）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，版本号被显示为"主要版本号.次部件号"。 文件版本号是一个 64 位数字，用于保存文件的版本号，如下所示：  
  
-   第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。  
  
-   下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。  
  
-   16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。  
  
-   最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。  
  
 此属性获取 16 位的第二个的集。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Diagnostics.FileVersionInfo.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the file that this instance of <see cref="T:System.Diagnostics.FileVersionInfo" /> describes.</summary>
        <value>
          <see cref="T:System.Diagnostics.FileVersionInfo" /> 的此实例所描述的文件的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.FileName%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">若要获取的文件的名称。 关联的枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FilePrivatePart">
      <MemberSignature Language="C#" Value="public int FilePrivatePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilePrivatePart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePrivatePart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FilePrivatePart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePrivatePart : int" Usage="System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the file private part number.</summary>
        <value>表示文件专用部件号的值，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，版本号被显示为"主要版本号.次部件号"。 文件版本号是一个 64 位数字，用于保存文件的版本号，如下所示：  
  
-   第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。  
  
-   下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。  
  
-   16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。  
  
-   最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。  
  
 此属性获取最后一组 16 位。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
      </Docs>
    </Member>
    <Member MemberName="FileVersion">
      <MemberSignature Language="C#" Value="public string FileVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileVersion" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileVersion : string" Usage="System.Diagnostics.FileVersionInfo.FileVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the file version number.</summary>
        <value>文件的版本号，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，版本号被显示为"主要版本号.次部件号"。 文件版本号是一个 64 位数字，用于保存文件的版本号，如下所示：  
  
-   第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。  
  
-   下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。  
  
-   16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。  
  
-   最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印在文本框中的说明和版本数。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[classic fileversioninfo example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[classic fileversioninfo example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[classic fileversioninfo example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionInfo">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.FileVersionInfo GetVersionInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.FileVersionInfo GetVersionInfo(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVersionInfo (fileName As String) As FileVersionInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::FileVersionInfo ^ GetVersionInfo(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member GetVersionInfo : string -&gt; System.Diagnostics.FileVersionInfo" Usage="System.Diagnostics.FileVersionInfo.GetVersionInfo fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.FileVersionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">The fully qualified path and name of the file to retrieve the version information for.</param>
        <summary>Returns a <see cref="T:System.Diagnostics.FileVersionInfo" /> representing the version information associated with the specified file.</summary>
        <returns>A <see cref="T:System.Diagnostics.FileVersionInfo" /> containing information about the file. If the file did not contain version information, the <see cref="T:System.Diagnostics.FileVersionInfo" /> contains only the name of the file requested.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本并显示文件说明和版本编号在控制台窗口中。  
  
 [!code-cpp[classic fileversioninfo example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[classic fileversioninfo example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[classic fileversioninfo example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">The file specified cannot be found.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">若要获取版本信息。 关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">对于直接调用方的完全信任。 部分受信任的代码不能使用此类。</permission>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.LegalTrademarks" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.LegalCopyright" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.InternalName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.CompanyName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.Comments" />
      </Docs>
    </Member>
    <Member MemberName="InternalName">
      <MemberSignature Language="C#" Value="public string InternalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.InternalName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InternalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InternalName : string" Usage="System.Diagnostics.FileVersionInfo.InternalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the internal name of the file, if one exists.</summary>
        <value>文件的内部名称。 如果不存在内部名称，则该属性将包含文件的原始名称（不带扩展名）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.InternalName%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDebug">
      <MemberSignature Language="C#" Value="public bool IsDebug { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebug" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsDebug" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDebug As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDebug { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDebug : bool" Usage="System.Diagnostics.FileVersionInfo.IsDebug" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies whether the file contains debugging information or is compiled with debugging features enabled.</summary>
        <value>如果文件包含调试信息或在调试功能启用的情况下进行编译，值为 <see langword="true" />；反之，值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.FileVersionInfo>属性基于内置到文件的版本资源信息。 版本资源通常内置二进制文件，如.exe 或.dll 文件;文本文件没有版本资源信息。  
  
 在 Win32 资源文件，或程序集特性通常指定版本资源。 <xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>属性反映`VS_FF_DEBUG`标记的文件中的值`VS_FIXEDFILEINFO`块中，它构建从`VERSIONINFO`Win32 资源文件中的资源。 有关 Win32 资源文件中指定版本资源的详细信息，请参阅平台 SDK`About Resource Files`主题和`VERSIONINFO Resource`主题的主题。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后，它显示的状态的布尔值<xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPatched">
      <MemberSignature Language="C#" Value="public bool IsPatched { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPatched" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPatched" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPatched As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPatched { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPatched : bool" Usage="System.Diagnostics.FileVersionInfo.IsPatched" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies whether the file has been modified and is not identical to the original shipping file of the same version number.</summary>
        <value>如果该文件修补过，值为 <see langword="true" />；反之，值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后，它显示的状态的布尔值<xref:System.Diagnostics.FileVersionInfo.IsPatched%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPreRelease">
      <MemberSignature Language="C#" Value="public bool IsPreRelease { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPreRelease" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPreRelease As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPreRelease { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPreRelease : bool" Usage="System.Diagnostics.FileVersionInfo.IsPreRelease" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies whether the file is a development version, rather than a commercially released product.</summary>
        <value>如果该文件是预发行版本，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后显示该版本是否在文本框中的预发布版本。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrivateBuild">
      <MemberSignature Language="C#" Value="public bool IsPrivateBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivateBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrivateBuild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrivateBuild { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrivateBuild : bool" Usage="System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies whether the file was built using standard release procedures.</summary>
        <value>如果文件为专用版本，值为 <see langword="true" />；如果文件是采用标准发行过程生成的或如果文件不包含版本信息，则值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果此值为`true`，<xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A>将介绍此版本的文件的标准版本的不同方式。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后，它在文本框中显示的专用生成信息。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
      </Docs>
    </Member>
    <Member MemberName="IsSpecialBuild">
      <MemberSignature Language="C#" Value="public bool IsSpecialBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialBuild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialBuild { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialBuild : bool" Usage="System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that specifies whether the file is a special build.</summary>
        <value>如果该文件为特殊内部版本，值为 <see langword="true" />；反之，值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 采用标准发行过程生成的文件的特殊内部版本，但文件不同于相同版本号的标准文件。 如果此值为`true`，则<xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>属性必须指定此文件的标准版本的不同方式。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后显示该版本是否为特殊内部版本中的文本框。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="System.Diagnostics.FileVersionInfo.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default language string for the version info block.</summary>
        <value>版本资源中 Microsoft 语言标识符的描述字符串，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalCopyright">
      <MemberSignature Language="C#" Value="public string LegalCopyright { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LegalCopyright" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.LegalCopyright" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LegalCopyright As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LegalCopyright { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalCopyright : string" Usage="System.Diagnostics.FileVersionInfo.LegalCopyright" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets all copyright notices that apply to the specified file.</summary>
        <value>适用于指定文件的版权声明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 这应包括所有通知、 合法符号、 版权日期等的完整文本或`null`如果文件不包含版本信息。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.LegalCopyright%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalTrademarks">
      <MemberSignature Language="C#" Value="public string LegalTrademarks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LegalTrademarks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.LegalTrademarks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LegalTrademarks As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LegalTrademarks { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalTrademarks : string" Usage="System.Diagnostics.FileVersionInfo.LegalTrademarks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the trademarks and registered trademarks that apply to the file.</summary>
        <value>应用到文件的商标和注册商标，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 法律商标包括所有的声明、 合法符号和商标号的完整文本。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.LegalTrademarks%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalFilename">
      <MemberSignature Language="C#" Value="public string OriginalFilename { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalFilename" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalFilename As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalFilename { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalFilename : string" Usage="System.Diagnostics.FileVersionInfo.OriginalFilename" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name the file was created with.</summary>
        <value>创建文件时使用的名称，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性使应用程序能够确定是否已重命名文件。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.OriginalFilename%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateBuild">
      <MemberSignature Language="C#" Value="public string PrivateBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateBuild As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateBuild { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrivateBuild : string" Usage="System.Diagnostics.FileVersionInfo.PrivateBuild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets information about a private version of the file.</summary>
        <value>文件私有版本的信息，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此信息时，存在<xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A>是`true`。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印在文本框中的专用生成信息。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
      </Docs>
    </Member>
    <Member MemberName="ProductBuildPart">
      <MemberSignature Language="C#" Value="public int ProductBuildPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductBuildPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductBuildPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductBuildPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductBuildPart : int" Usage="System.Diagnostics.FileVersionInfo.ProductBuildPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the build number of the product this file is associated with.</summary>
        <value>表示与此文件关联的产品的生成号的值，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，版本号被显示为"主要版本号.次部件号"。 产品版本编号是一个 64 位数字持有的版本号，如下所示：  
  
-   第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。  
  
-   下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。  
  
-   16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。  
  
-   最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。  
  
 此属性获取第三个组 16 位。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="ProductMajorPart">
      <MemberSignature Language="C#" Value="public int ProductMajorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductMajorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductMajorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductMajorPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductMajorPart : int" Usage="System.Diagnostics.FileVersionInfo.ProductMajorPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the major part of the version number for the product this file is associated with.</summary>
        <value>表示产品版本号主要部分的值，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，版本号被显示为"主要版本号.次部件号"。 产品版本编号是一个 64 位数字持有的版本号，如下所示：  
  
-   第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。  
  
-   下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。  
  
-   16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。  
  
-   最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。  
  
 此属性获取第一组 16 位。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductMinorPart">
      <MemberSignature Language="C#" Value="public int ProductMinorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductMinorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductMinorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductMinorPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductMinorPart : int" Usage="System.Diagnostics.FileVersionInfo.ProductMinorPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minor part of the version number for the product the file is associated with.</summary>
        <value>表示产品版本号次要部分的值，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，版本号被显示为"主要版本号.次部件号"。 产品版本编号是一个 64 位数字持有的版本号，如下所示：  
  
-   第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。  
  
-   下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。  
  
-   16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。  
  
-   最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。  
  
 此属性获取 16 位的第二个的集。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductName : string" Usage="System.Diagnostics.FileVersionInfo.ProductName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the product this file is distributed with.</summary>
        <value>与此文件一起发行的产品的名称，当文件不包含版本信息则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.ProductName%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductPrivatePart">
      <MemberSignature Language="C#" Value="public int ProductPrivatePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductPrivatePart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductPrivatePart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductPrivatePart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductPrivatePart : int" Usage="System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the private part number of the product this file is associated with.</summary>
        <value>表示生成文件时关联的专用部件号的值，或者如果文件不包含版本信息，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，版本号被显示为"主要版本号.次部件号"。 产品版本编号是一个 64 位数字持有的版本号，如下所示：  
  
-   第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。  
  
-   下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。  
  
-   16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。  
  
-   最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。  
  
 此属性获取最后一组 16 位。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductVersion">
      <MemberSignature Language="C#" Value="public string ProductVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductVersion" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductVersion : string" Usage="System.Diagnostics.FileVersionInfo.ProductVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the version of the product this file is distributed with.</summary>
        <value>与此文件一起发行的产品的版本，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常情况下，版本号被显示为"主要版本号.次部件号"。 产品版本编号是一个 64 位数字持有的版本号，如下所示：  
  
-   第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。  
  
-   下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。  
  
-   16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。  
  
-   最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印<xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A>在文本框中。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="SpecialBuild">
      <MemberSignature Language="C#" Value="public string SpecialBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SpecialBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpecialBuild As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SpecialBuild { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SpecialBuild : string" Usage="System.Diagnostics.FileVersionInfo.SpecialBuild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the special build information for the file.</summary>
        <value>文件的特殊内部版本信息，当文件不包含版本信息时则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A>是`true`，<xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>必须指定此文件如何不同于标准版本的文件。  
  
   
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后它将打印在文本框中的特殊内部版本信息。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.FileVersionInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fileVersionInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a partial list of properties in the <see cref="T:System.Diagnostics.FileVersionInfo" /> and their values.</summary>
        <returns>A list of the following properties in this class and their values:  <see cref="P:System.Diagnostics.FileVersionInfo.FileName" />, <see cref="P:System.Diagnostics.FileVersionInfo.InternalName" />, <see cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />, <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />, <see cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />, <see cref="P:System.Diagnostics.FileVersionInfo.ProductName" />, <see cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />,  <see cref="P:System.Diagnostics.FileVersionInfo.Language" />.  If the file did not contain version information, this list will contain only the name of the requested file. Boolean values will be <see langword="false" />, and all other entries will be <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。 然后，它调用<xref:System.Diagnostics.FileVersionInfo.ToString%2A>打印中的文本框中的文件版本信息的列表。 此代码假定`textBox1`已实例化。  
  
 [!code-cpp[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.InternalName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.Language" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      </Docs>
    </Member>
  </Members>
</Type>