<Type Name="FileVersionInfo" FullName="System.Diagnostics.FileVersionInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7189b83e18522a078a31d9af2ffed7db1329a6ea" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39776852" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileVersionInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileVersionInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.FileVersionInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileVersionInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileVersionInfo sealed" />
  <TypeSignature Language="F#" Value="type FileVersionInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0ffe3-101">为磁盘上的物理文件提供版本信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-101">Provides version information for a physical file on disk.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-102">通常情况下，版本号被显示为"主要版本号.次部件号"。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-102">Typically, a version number is displayed as "major number.minor number.build number.private part number".</span></span> <span data-ttu-id="0ffe3-103">文件版本号是一个 64 位数字，用于保存文件的版本号，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ffe3-103">A file version number is a 64-bit number that holds the version number for a file as follows:</span></span>  
  
-   <span data-ttu-id="0ffe3-104">第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-104">The first 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-105">下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-105">The next 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-106">16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-106">The third set of 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-107">最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-107">The last 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> number.</span></span>  
  
 <span data-ttu-id="0ffe3-108">使用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取此类方法<xref:System.Diagnostics.FileVersionInfo>包含文件有关的信息，然后查看有关文件的信息的属性。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-108">Use the <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> method of this class to get a <xref:System.Diagnostics.FileVersionInfo> containing information about a file, then look at the properties for information about the file.</span></span> <span data-ttu-id="0ffe3-109"><xref:System.Diagnostics.FileVersionInfo.FileVersion%2A>属性提供有关文件的版本信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-109">The <xref:System.Diagnostics.FileVersionInfo.FileVersion%2A> property provides version information about the file.</span></span> <span data-ttu-id="0ffe3-110"><xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>， <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>，和<xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A>属性提供了指定的文件的一部分的产品的版本信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-110">The <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>, <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>, <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>, <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>, and <xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A> properties provide version information for the product that the specified file is a part of.</span></span> <span data-ttu-id="0ffe3-111">调用<xref:System.Diagnostics.FileVersionInfo.ToString%2A>若要获取此文件的属性及其值的部分列表。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-111">Call <xref:System.Diagnostics.FileVersionInfo.ToString%2A> to get a partial list of properties and their values for this file.</span></span>  
  
 <span data-ttu-id="0ffe3-112"><xref:System.Diagnostics.FileVersionInfo>属性基于内置到文件的版本资源信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-112">The <xref:System.Diagnostics.FileVersionInfo> properties are based on version resource information built into the file.</span></span> <span data-ttu-id="0ffe3-113">版本资源通常内置二进制文件，如.exe 或.dll 文件;文本文件没有版本资源信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-113">Version resources are often built into binary files such as .exe or .dll files; text files do not have version resource information.</span></span>  
  
 <span data-ttu-id="0ffe3-114">在 Win32 资源文件，或程序集特性通常指定版本资源。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-114">Version resources are typically specified in a Win32 resource file, or in assembly attributes.</span></span> <span data-ttu-id="0ffe3-115">例如<xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>属性反映`VS_FF_DEBUG`标记的文件中的值`VS_FIXEDFILEINFO`块中，它构建从`VERSIONINFO`Win32 资源文件中的资源。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-115">For example the <xref:System.Diagnostics.FileVersionInfo.IsDebug%2A> property reflects the `VS_FF_DEBUG` flag value in the file's `VS_FIXEDFILEINFO` block, which is built from the `VERSIONINFO` resource in a Win32 resource file.</span></span>  <span data-ttu-id="0ffe3-116">有关 Win32 资源文件中指定版本资源的详细信息，请参阅"关于资源文件中"和"VERSIONINFO 资源"平台 SDK 中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-116">For more information about specifying version resources in a Win32 resource file, see "About Resource Files" and "VERSIONINFO Resource" in the Platform SDK.</span></span> <span data-ttu-id="0ffe3-117">有关.NET 模块中指定版本资源的详细信息，请参阅[设置程序集特性](~/docs/framework/app-domains/set-assembly-attributes.md)主题。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-117">For more information about specifying version resources in a .NET module, see the [Setting Assembly Attributes](~/docs/framework/app-domains/set-assembly-attributes.md) topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ffe3-118">此类，可以在类级别应用于所有成员的链接要求。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-118">This class makes a link demand at the class level that applies to all members.</span></span> <span data-ttu-id="0ffe3-119">一个<xref:System.Security.SecurityException>直接调用方没有完全信任权限时引发。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-119">A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full trust permission.</span></span> <span data-ttu-id="0ffe3-120">有关链接要求的详细信息，请参阅[链接要求](~/docs/framework/misc/link-demands.md)。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-120">For details about link demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-121">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-121">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-122">然后它将打印在文本框中的说明和版本数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-122">Then it prints the file description and version number in a text box.</span></span> <span data-ttu-id="0ffe3-123">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-123">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="0ffe3-124">对于直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-124">for full trust for the immediate caller.</span></span> <span data-ttu-id="0ffe3-125">部分受信任的代码不能使用此类。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-125">This class cannot be used by partially trusted code.</span></span></permission>
    <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
    <altmember cref="T:System.Version" />
  </Docs>
  <Members>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public string Comments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comments" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.Comments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comments { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comments : string" Usage="System.Diagnostics.FileVersionInfo.Comments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-126">获取与文件关联的注释。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-126">Gets the comments associated with the file.</span></span></summary>
        <value><span data-ttu-id="0ffe3-127">与文件关联的注释，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-127">The comments associated with the file or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-128">此属性包含可以显示用于诊断目的的其他信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-128">This property contains additional information that can be displayed for diagnostic purposes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-129">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-129">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-130">然后，它输出中的文本框中的注释。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-130">Then it prints the comments in a text box.</span></span> <span data-ttu-id="0ffe3-131">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-131">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.Comments Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/Classic FileVersionInfo.Comments Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompanyName : string" Usage="System.Diagnostics.FileVersionInfo.CompanyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-132">获取生成此文件的公司的名称。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-132">Gets the name of the company that produced the file.</span></span></summary>
        <value><span data-ttu-id="0ffe3-133">生成文件的公司的名称，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-133">The name of the company that produced the file or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ffe3-134">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-134">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-135">然后它将打印<xref:System.Diagnostics.FileVersionInfo.CompanyName%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-135">Then it prints the <xref:System.Diagnostics.FileVersionInfo.CompanyName%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-136">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-136">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.CompanyName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.CompanyName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileBuildPart">
      <MemberSignature Language="C#" Value="public int FileBuildPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileBuildPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileBuildPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileBuildPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FileBuildPart : int" Usage="System.Diagnostics.FileVersionInfo.FileBuildPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-137">获取文件的生成号。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-137">Gets the build number of the file.</span></span></summary>
        <value><span data-ttu-id="0ffe3-138">表示文件生成号的值，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-138">A value representing the build number of the file or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-139">通常情况下，版本号被显示为"主要版本号.次部件号"。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-139">Typically, a version number is displayed as "major number.minor number.build number.private part number".</span></span> <span data-ttu-id="0ffe3-140">文件版本号是一个 64 位数字，用于保存文件的版本号，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ffe3-140">A file version number is a 64-bit number that holds the version number for a file as follows:</span></span>  
  
-   <span data-ttu-id="0ffe3-141">第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-141">The first 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-142">下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-142">The next 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-143">16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-143">The third set of 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-144">最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-144">The last 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> number.</span></span>  
  
 <span data-ttu-id="0ffe3-145">此属性获取第三个组 16 位。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-145">This property gets the third set of 16 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-146">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-146">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-147">然后它将打印<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-147">Then it prints the <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-148">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-148">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileBuildPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileBuildPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="FileDescription">
      <MemberSignature Language="C#" Value="public string FileDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileDescription" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileDescription" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileDescription : string" Usage="System.Diagnostics.FileVersionInfo.FileDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-149">获取文件说明。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-149">Gets the description of the file.</span></span></summary>
        <value><span data-ttu-id="0ffe3-150">文件说明，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-150">The description of the file or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ffe3-151">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-151">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-152">然后它将打印<xref:System.Diagnostics.FileVersionInfo.FileDescription%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-152">Then it prints the <xref:System.Diagnostics.FileVersionInfo.FileDescription%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-153">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-153">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileDescription Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileDescription Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileMajorPart">
      <MemberSignature Language="C#" Value="public int FileMajorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileMajorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileMajorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileMajorPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FileMajorPart : int" Usage="System.Diagnostics.FileVersionInfo.FileMajorPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-154">获取版本号的主要版本号部分。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-154">Gets the major part of the version number.</span></span></summary>
        <value><span data-ttu-id="0ffe3-155">表示版本号主要部分的值，当文件不包含版本信息时则为 0（零）。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-155">A value representing the major part of the version number or 0 (zero) if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-156">通常情况下，版本号被显示为"主要版本号.次部件号"。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-156">Typically, a version number is displayed as "major number.minor number.build number.private part number".</span></span> <span data-ttu-id="0ffe3-157">文件版本号是一个 64 位数字，用于保存文件的版本号，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ffe3-157">A file version number is a 64-bit number that holds the version number for a file as follows:</span></span>  
  
-   <span data-ttu-id="0ffe3-158">第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-158">The first 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-159">下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-159">The next 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-160">16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-160">The third set of 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-161">最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-161">The last 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> number.</span></span>  
  
 <span data-ttu-id="0ffe3-162">此属性获取第一组 16 位。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-162">This property gets the first set of 16 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-163">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-163">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-164">然后它将打印<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-164">Then it prints the <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-165">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-165">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileMajorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMajorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="FileMinorPart">
      <MemberSignature Language="C#" Value="public int FileMinorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileMinorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileMinorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileMinorPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FileMinorPart : int" Usage="System.Diagnostics.FileVersionInfo.FileMinorPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-166">获取文件版本号的次要部分。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-166">Gets the minor part of the version number of the file.</span></span></summary>
        <value><span data-ttu-id="0ffe3-167">表示文件版本号次要部分的值，当文件不包含版本信息时则为 0（零）。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-167">A value representing the minor part of the version number of the file or 0 (zero) if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-168">通常情况下，版本号被显示为"主要版本号.次部件号"。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-168">Typically, a version number is displayed as "major number.minor number.build number.private part number".</span></span> <span data-ttu-id="0ffe3-169">文件版本号是一个 64 位数字，用于保存文件的版本号，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ffe3-169">A file version number is a 64-bit number that holds the version number for a file as follows:</span></span>  
  
-   <span data-ttu-id="0ffe3-170">第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-170">The first 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-171">下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-171">The next 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-172">16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-172">The third set of 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-173">最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-173">The last 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> number.</span></span>  
  
 <span data-ttu-id="0ffe3-174">此属性获取 16 位的第二个的集。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-174">This property gets the second set of 16 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-175">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-175">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-176">然后它将打印<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-176">Then it prints the <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-177">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-177">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileMinorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileMinorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Diagnostics.FileVersionInfo.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-178">获取 <see cref="T:System.Diagnostics.FileVersionInfo" /> 的此实例所描述的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-178">Gets the name of the file that this instance of <see cref="T:System.Diagnostics.FileVersionInfo" /> describes.</span></span></summary>
        <value><span data-ttu-id="0ffe3-179"><see cref="T:System.Diagnostics.FileVersionInfo" /> 的此实例所描述的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-179">The name of the file described by this instance of <see cref="T:System.Diagnostics.FileVersionInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ffe3-180">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-180">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-181">然后它将打印<xref:System.Diagnostics.FileVersionInfo.FileName%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-181">Then it prints the <xref:System.Diagnostics.FileVersionInfo.FileName%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-182">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-182">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FileName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FileName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="0ffe3-183">若要获取的文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-183">to get the file name.</span></span> <span data-ttu-id="0ffe3-184">关联的枚举： <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span><span class="sxs-lookup"><span data-stu-id="0ffe3-184">Associated enumeration: <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FilePrivatePart">
      <MemberSignature Language="C#" Value="public int FilePrivatePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilePrivatePart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePrivatePart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FilePrivatePart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePrivatePart : int" Usage="System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-185">获取文件专用部件号。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-185">Gets the file private part number.</span></span></summary>
        <value><span data-ttu-id="0ffe3-186">表示文件专用部件号的值，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-186">A value representing the file private part number or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-187">通常情况下，版本号被显示为"主要版本号.次部件号"。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-187">Typically, a version number is displayed as "major number.minor number.build number.private part number".</span></span> <span data-ttu-id="0ffe3-188">文件版本号是一个 64 位数字，用于保存文件的版本号，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ffe3-188">A file version number is a 64-bit number that holds the version number for a file as follows:</span></span>  
  
-   <span data-ttu-id="0ffe3-189">第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-189">The first 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-190">下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-190">The next 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-191">16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-191">The third set of 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-192">最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-192">The last 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> number.</span></span>  
  
 <span data-ttu-id="0ffe3-193">此属性获取最后一组 16 位。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-193">This property gets the last set of 16 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-194">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-194">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-195">然后它将打印<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-195">Then it prints the <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-196">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-196">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.FilePrivatePart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.FilePrivatePart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
      </Docs>
    </Member>
    <Member MemberName="FileVersion">
      <MemberSignature Language="C#" Value="public string FileVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileVersion" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.FileVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileVersion : string" Usage="System.Diagnostics.FileVersionInfo.FileVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-197">获取文件版本号。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-197">Gets the file version number.</span></span></summary>
        <value><span data-ttu-id="0ffe3-198">文件的版本号，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-198">The version number of the file or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-199">通常情况下，版本号被显示为"主要版本号.次部件号"。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-199">Typically, a version number is displayed as "major number.minor number.build number.private part number".</span></span> <span data-ttu-id="0ffe3-200">文件版本号是一个 64 位数字，用于保存文件的版本号，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ffe3-200">A file version number is a 64-bit number that holds the version number for a file as follows:</span></span>  
  
-   <span data-ttu-id="0ffe3-201">第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-201">The first 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileMajorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-202">下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-202">The next 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileMinorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-203">16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-203">The third set of 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FileBuildPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-204">最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-204">The last 16 bits are the <xref:System.Diagnostics.FileVersionInfo.FilePrivatePart%2A> number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-205">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-205">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-206">然后它将打印在文本框中的说明和版本数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-206">Then it prints the file description and version number in a text box.</span></span> <span data-ttu-id="0ffe3-207">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-207">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[classic fileversioninfo example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[classic fileversioninfo example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[classic fileversioninfo example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionInfo">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.FileVersionInfo GetVersionInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.FileVersionInfo GetVersionInfo(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVersionInfo (fileName As String) As FileVersionInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::FileVersionInfo ^ GetVersionInfo(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member GetVersionInfo : string -&gt; System.Diagnostics.FileVersionInfo" Usage="System.Diagnostics.FileVersionInfo.GetVersionInfo fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.FileVersionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="0ffe3-208">要检索其版本信息的文件的完全限定路径和名称。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-208">The fully qualified path and name of the file to retrieve the version information for.</span></span></param>
        <summary><span data-ttu-id="0ffe3-209">返回表示与指定文件关联的版本信息的 <see cref="T:System.Diagnostics.FileVersionInfo" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-209">Returns a <see cref="T:System.Diagnostics.FileVersionInfo" /> representing the version information associated with the specified file.</span></span></summary>
        <returns><span data-ttu-id="0ffe3-210">包含文件信息的 <see cref="T:System.Diagnostics.FileVersionInfo" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-210">A <see cref="T:System.Diagnostics.FileVersionInfo" /> containing information about the file.</span></span> <span data-ttu-id="0ffe3-211">如果文件不包含版本信息，则 <see cref="T:System.Diagnostics.FileVersionInfo" /> 仅包含所请求文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-211">If the file did not contain version information, the <see cref="T:System.Diagnostics.FileVersionInfo" /> contains only the name of the file requested.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ffe3-212">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本并显示文件说明和版本编号在控制台窗口中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-212">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for Notepad and  displays the file description and version number in the console window.</span></span>  
  
 [!code-cpp[classic fileversioninfo example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CPP/source.cpp#1)]
 [!code-csharp[classic fileversioninfo example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/CS/source.cs#1)]
 [!code-vb[classic fileversioninfo example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="0ffe3-213">找不到指定的文件。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-213">The file specified cannot be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="0ffe3-214">若要获取版本信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-214">to get the version information.</span></span> <span data-ttu-id="0ffe3-215">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="0ffe3-215">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="0ffe3-216">对于直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-216">for full trust for the immediate caller.</span></span> <span data-ttu-id="0ffe3-217">部分受信任的代码不能使用此类。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-217">This class cannot be used by partially trusted code.</span></span></permission>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.LegalTrademarks" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.LegalCopyright" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.InternalName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.CompanyName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.Comments" />
      </Docs>
    </Member>
    <Member MemberName="InternalName">
      <MemberSignature Language="C#" Value="public string InternalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.InternalName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InternalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InternalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InternalName : string" Usage="System.Diagnostics.FileVersionInfo.InternalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-218">获取文件的内部名称（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-218">Gets the internal name of the file, if one exists.</span></span></summary>
        <value><span data-ttu-id="0ffe3-219">文件的内部名称。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-219">The internal name of the file.</span></span> <span data-ttu-id="0ffe3-220">如果不存在内部名称，则该属性将包含文件的原始名称（不带扩展名）。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-220">If none exists, this property will contain the original name of the file without the extension.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ffe3-221">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-221">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-222">然后它将打印<xref:System.Diagnostics.FileVersionInfo.InternalName%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-222">Then it prints the <xref:System.Diagnostics.FileVersionInfo.InternalName%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-223">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-223">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.InternalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.InternalName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDebug">
      <MemberSignature Language="C#" Value="public bool IsDebug { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebug" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsDebug" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDebug As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDebug { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDebug : bool" Usage="System.Diagnostics.FileVersionInfo.IsDebug" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-224">获取一个值，该值指定文件是否包含调试信息或在调试功能启用的情况下进行编译。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-224">Gets a value that specifies whether the file contains debugging information or is compiled with debugging features enabled.</span></span></summary>
        <value><span data-ttu-id="0ffe3-225">如果文件包含调试信息或在调试功能启用的情况下进行编译，值为 <see langword="true" />；反之，值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-225"><see langword="true" /> if the file contains debugging information or is compiled with debugging features enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-226"><xref:System.Diagnostics.FileVersionInfo>属性基于内置到文件的版本资源信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-226">The <xref:System.Diagnostics.FileVersionInfo> properties are based on version resource information built into the file.</span></span> <span data-ttu-id="0ffe3-227">版本资源通常内置二进制文件，如.exe 或.dll 文件;文本文件没有版本资源信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-227">Version resources are often built into binary files such as .exe or .dll files; text files do not have version resource information.</span></span>  
  
 <span data-ttu-id="0ffe3-228">在 Win32 资源文件，或程序集特性通常指定版本资源。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-228">Version resources are typically specified in a Win32 resource file, or in assembly attributes.</span></span> <span data-ttu-id="0ffe3-229"><xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>属性反映`VS_FF_DEBUG`标记的文件中的值`VS_FIXEDFILEINFO`块中，它构建从`VERSIONINFO`Win32 资源文件中的资源。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-229">The <xref:System.Diagnostics.FileVersionInfo.IsDebug%2A> property reflects the `VS_FF_DEBUG` flag value in the file's `VS_FIXEDFILEINFO` block, which is built from the `VERSIONINFO` resource in a Win32 resource file.</span></span> <span data-ttu-id="0ffe3-230">有关 Win32 资源文件中指定版本资源的详细信息，请参阅平台 SDK`About Resource Files`主题和`VERSIONINFO Resource`主题的主题。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-230">For more information about specifying version resources in a Win32 resource file, see the Platform SDK `About Resource Files` topic and `VERSIONINFO Resource` topic topics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-231">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-231">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-232">然后，它显示的状态的布尔值<xref:System.Diagnostics.FileVersionInfo.IsDebug%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-232">Then it displays the state of the Boolean <xref:System.Diagnostics.FileVersionInfo.IsDebug%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-233">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-233">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsDebug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsDebug Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPatched">
      <MemberSignature Language="C#" Value="public bool IsPatched { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPatched" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPatched" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPatched As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPatched { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPatched : bool" Usage="System.Diagnostics.FileVersionInfo.IsPatched" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-234">获取一个值，该值指定该文件是否已修改，且不同于相同版本号的原始发行文件。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-234">Gets a value that specifies whether the file has been modified and is not identical to the original shipping file of the same version number.</span></span></summary>
        <value><span data-ttu-id="0ffe3-235">如果该文件修补过，值为 <see langword="true" />；反之，值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-235"><see langword="true" /> if the file is patched; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ffe3-236">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-236">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-237">然后，它显示的状态的布尔值<xref:System.Diagnostics.FileVersionInfo.IsPatched%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-237">Then it displays the state of the Boolean <xref:System.Diagnostics.FileVersionInfo.IsPatched%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-238">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-238">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPatched Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPatched Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPreRelease">
      <MemberSignature Language="C#" Value="public bool IsPreRelease { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPreRelease" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPreRelease As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPreRelease { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPreRelease : bool" Usage="System.Diagnostics.FileVersionInfo.IsPreRelease" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-239">获取一个值，该值指定该文件是否为开发版本，而不是用于商业目的的发行版。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-239">Gets a value that specifies whether the file is a development version, rather than a commercially released product.</span></span></summary>
        <value><span data-ttu-id="0ffe3-240">如果该文件是预发行版本，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-240"><see langword="true" /> if the file is prerelease; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ffe3-241">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-241">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-242">然后显示该版本是否在文本框中的预发布版本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-242">Then it displays whether this version is a prerelease version in a text box.</span></span> <span data-ttu-id="0ffe3-243">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-243">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPreRelease Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPreRelease Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrivateBuild">
      <MemberSignature Language="C#" Value="public bool IsPrivateBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivateBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrivateBuild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrivateBuild { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrivateBuild : bool" Usage="System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-244">获取一个值，该值指定文件是否采用标准的发行过程生成。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-244">Gets a value that specifies whether the file was built using standard release procedures.</span></span></summary>
        <value><span data-ttu-id="0ffe3-245">如果文件为专用版本，值为 <see langword="true" />；如果文件是采用标准发行过程生成的或如果文件不包含版本信息，则值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-245"><see langword="true" /> if the file is a private build; <see langword="false" /> if the file was built using standard release procedures or if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-246">如果此值为`true`，<xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A>将介绍此版本的文件的标准版本的不同方式。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-246">If this value is `true`, <xref:System.Diagnostics.FileVersionInfo.PrivateBuild%2A> will describe how this version of the file differs from the standard version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-247">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-247">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-248">然后，它在文本框中显示的专用生成信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-248">Then it displays the private build information in a text box.</span></span> <span data-ttu-id="0ffe3-249">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-249">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsPrivateBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsPrivateBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
      </Docs>
    </Member>
    <Member MemberName="IsSpecialBuild">
      <MemberSignature Language="C#" Value="public bool IsSpecialBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialBuild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialBuild { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialBuild : bool" Usage="System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-250">获取一个值，该值指定该文件是否为特殊内部版本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-250">Gets a value that specifies whether the file is a special build.</span></span></summary>
        <value><span data-ttu-id="0ffe3-251">如果该文件为特殊内部版本，值为 <see langword="true" />；反之，值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-251"><see langword="true" /> if the file is a special build; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-252">采用标准发行过程生成的文件的特殊内部版本，但文件不同于相同版本号的标准文件。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-252">A file that is a special build was built using standard release procedures, but the file differs from a standard file of the same version number.</span></span> <span data-ttu-id="0ffe3-253">如果此值为`true`，则<xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>属性必须指定此文件的标准版本的不同方式。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-253">If this value is `true`, the <xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A> property must specify how this file differs from the standard version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-254">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-254">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-255">然后显示该版本是否为特殊内部版本中的文本框。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-255">Then it displays whether this version is a special build version in a text box.</span></span> <span data-ttu-id="0ffe3-256">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-256">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.IsSpecialBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.IsSpecialBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="System.Diagnostics.FileVersionInfo.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-257">获取版本信息区的默认语言字符串。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-257">Gets the default language string for the version info block.</span></span></summary>
        <value><span data-ttu-id="0ffe3-258">版本资源中 Microsoft 语言标识符的描述字符串，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-258">The description string for the Microsoft Language Identifier in the version resource or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalCopyright">
      <MemberSignature Language="C#" Value="public string LegalCopyright { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LegalCopyright" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.LegalCopyright" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LegalCopyright As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LegalCopyright { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalCopyright : string" Usage="System.Diagnostics.FileVersionInfo.LegalCopyright" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-259">获取所有适用于指定文件的版权声明。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-259">Gets all copyright notices that apply to the specified file.</span></span></summary>
        <value><span data-ttu-id="0ffe3-260">适用于指定文件的版权声明。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-260">The copyright notices that apply to the specified file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-261">这应包括所有通知、 合法符号、 版权日期等的完整文本或`null`如果文件不包含版本信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-261">This should include the full text of all notices, legal symbols, copyright dates, and so on or `null` if the file did not contain version information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-262">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-262">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-263">然后它将打印<xref:System.Diagnostics.FileVersionInfo.LegalCopyright%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-263">Then it prints the <xref:System.Diagnostics.FileVersionInfo.LegalCopyright%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-264">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-264">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.LegalCopyright Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalCopyright Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalTrademarks">
      <MemberSignature Language="C#" Value="public string LegalTrademarks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LegalTrademarks" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.LegalTrademarks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LegalTrademarks As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LegalTrademarks { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LegalTrademarks : string" Usage="System.Diagnostics.FileVersionInfo.LegalTrademarks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-265">获取应用到文件的商标和注册商标。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-265">Gets the trademarks and registered trademarks that apply to the file.</span></span></summary>
        <value><span data-ttu-id="0ffe3-266">应用到文件的商标和注册商标，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-266">The trademarks and registered trademarks that apply to the file or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-267">法律商标包括所有的声明、 合法符号和商标号的完整文本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-267">The legal trademarks include the full text of all notices, legal symbols, and trademark numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-268">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-268">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-269">然后它将打印<xref:System.Diagnostics.FileVersionInfo.LegalTrademarks%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-269">Then it prints the <xref:System.Diagnostics.FileVersionInfo.LegalTrademarks%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-270">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-270">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.LegalTrademarks Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.LegalTrademarks Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalFilename">
      <MemberSignature Language="C#" Value="public string OriginalFilename { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalFilename" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalFilename As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OriginalFilename { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalFilename : string" Usage="System.Diagnostics.FileVersionInfo.OriginalFilename" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-271">获取创建文件时所使用的名称。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-271">Gets the name the file was created with.</span></span></summary>
        <value><span data-ttu-id="0ffe3-272">创建文件时使用的名称，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-272">The name the file was created with or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-273">此属性使应用程序能够确定是否已重命名文件。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-273">This property enables an application to determine whether a file has been renamed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-274">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-274">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-275">然后它将打印<xref:System.Diagnostics.FileVersionInfo.OriginalFilename%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-275">Then it prints the <xref:System.Diagnostics.FileVersionInfo.OriginalFilename%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-276">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-276">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.OriginalFilename Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.OriginalFilename Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateBuild">
      <MemberSignature Language="C#" Value="public string PrivateBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateBuild As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateBuild { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrivateBuild : string" Usage="System.Diagnostics.FileVersionInfo.PrivateBuild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-277">获取文件私有版本的信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-277">Gets information about a private version of the file.</span></span></summary>
        <value><span data-ttu-id="0ffe3-278">文件私有版本的信息，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-278">Information about a private version of the file or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-279">此信息时，存在<xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-279">This information is present when <xref:System.Diagnostics.FileVersionInfo.IsPrivateBuild%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-280">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-280">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-281">然后它将打印在文本框中的专用生成信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-281">Then it prints the private build information in a text box.</span></span> <span data-ttu-id="0ffe3-282">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-282">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.PrivateBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.PrivateBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
      </Docs>
    </Member>
    <Member MemberName="ProductBuildPart">
      <MemberSignature Language="C#" Value="public int ProductBuildPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductBuildPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductBuildPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductBuildPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductBuildPart : int" Usage="System.Diagnostics.FileVersionInfo.ProductBuildPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-283">获取该文件关联产品的生成号。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-283">Gets the build number of the product this file is associated with.</span></span></summary>
        <value><span data-ttu-id="0ffe3-284">表示与此文件关联的产品的生成号的值，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-284">A value representing the build number of the product this file is associated with or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-285">通常情况下，版本号被显示为"主要版本号.次部件号"。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-285">Typically, a version number is displayed as "major number.minor number.build number.private part number".</span></span> <span data-ttu-id="0ffe3-286">产品版本编号是一个 64 位数字持有的版本号，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ffe3-286">A product version number is a 64-bit number that holds the version number as follows:</span></span>  
  
-   <span data-ttu-id="0ffe3-287">第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-287">The first 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-288">下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-288">The next 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-289">16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-289">The third set of 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-290">最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-290">The last 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> number.</span></span>  
  
 <span data-ttu-id="0ffe3-291">此属性获取第三个组 16 位。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-291">This property gets the third set of 16 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-292">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-292">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-293">然后它将打印<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-293">Then it prints the <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-294">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-294">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductBuildPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductBuildPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="ProductMajorPart">
      <MemberSignature Language="C#" Value="public int ProductMajorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductMajorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductMajorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductMajorPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductMajorPart : int" Usage="System.Diagnostics.FileVersionInfo.ProductMajorPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-295">获取与此文件关联的产品版本号的主要部分。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-295">Gets the major part of the version number for the product this file is associated with.</span></span></summary>
        <value><span data-ttu-id="0ffe3-296">表示产品版本号主要部分的值，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-296">A value representing the major part of the product version number or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-297">通常情况下，版本号被显示为"主要版本号.次部件号"。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-297">Typically, a version number is displayed as "major number.minor number.build number.private part number".</span></span> <span data-ttu-id="0ffe3-298">产品版本编号是一个 64 位数字持有的版本号，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ffe3-298">A product version number is a 64-bit number that holds the version number as follows:</span></span>  
  
-   <span data-ttu-id="0ffe3-299">第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-299">The first 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-300">下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-300">The next 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-301">16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-301">The third set of 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-302">最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-302">The last 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> number.</span></span>  
  
 <span data-ttu-id="0ffe3-303">此属性获取第一组 16 位。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-303">This property gets the first set of 16 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-304">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-304">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-305">然后它将打印<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-305">Then it prints the <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-306">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-306">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductMajorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMajorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductMinorPart">
      <MemberSignature Language="C#" Value="public int ProductMinorPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductMinorPart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductMinorPart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductMinorPart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductMinorPart : int" Usage="System.Diagnostics.FileVersionInfo.ProductMinorPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-307">获取文件关联产品版本号的次要部分。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-307">Gets the minor part of the version number for the product the file is associated with.</span></span></summary>
        <value><span data-ttu-id="0ffe3-308">表示产品版本号次要部分的值，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-308">A value representing the minor part of the product version number or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-309">通常情况下，版本号被显示为"主要版本号.次部件号"。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-309">Typically, a version number is displayed as "major number.minor number.build number.private part number".</span></span> <span data-ttu-id="0ffe3-310">产品版本编号是一个 64 位数字持有的版本号，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ffe3-310">A product version number is a 64-bit number that holds the version number as follows:</span></span>  
  
-   <span data-ttu-id="0ffe3-311">第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-311">The first 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-312">下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-312">The next 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-313">16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-313">The third set of 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-314">最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-314">The last 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> number.</span></span>  
  
 <span data-ttu-id="0ffe3-315">此属性获取 16 位的第二个的集。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-315">This property gets the second set of 16 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-316">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-316">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-317">然后它将打印<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-317">Then it prints the <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-318">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-318">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductMinorPart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductMinorPart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductName : string" Usage="System.Diagnostics.FileVersionInfo.ProductName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-319">获取与此文件一起发行的产品的名称。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-319">Gets the name of the product this file is distributed with.</span></span></summary>
        <value><span data-ttu-id="0ffe3-320">与此文件一起发行的产品的名称，当文件不包含版本信息则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-320">The name of the product this file is distributed with or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ffe3-321">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-321">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-322">然后它将打印<xref:System.Diagnostics.FileVersionInfo.ProductName%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-322">Then it prints the <xref:System.Diagnostics.FileVersionInfo.ProductName%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-323">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-323">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductName Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProductPrivatePart">
      <MemberSignature Language="C#" Value="public int ProductPrivatePart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProductPrivatePart" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductPrivatePart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProductPrivatePart { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductPrivatePart : int" Usage="System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-324">获取此文件关联产品的专用部件号。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-324">Gets the private part number of the product this file is associated with.</span></span></summary>
        <value><span data-ttu-id="0ffe3-325">表示生成文件时关联的专用部件号的值，或者如果文件不包含版本信息，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-325">A value representing the private part number of the product this file is associated with or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-326">通常情况下，版本号被显示为"主要版本号.次部件号"。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-326">Typically, a version number is displayed as "major number.minor number.build number.private part number".</span></span> <span data-ttu-id="0ffe3-327">产品版本编号是一个 64 位数字持有的版本号，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ffe3-327">A product version number is a 64-bit number that holds the version number as follows:</span></span>  
  
-   <span data-ttu-id="0ffe3-328">第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-328">The first 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-329">下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-329">The next 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-330">16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-330">The third set of 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-331">最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-331">The last 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> number.</span></span>  
  
 <span data-ttu-id="0ffe3-332">此属性获取最后一组 16 位。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-332">This property gets the last set of 16 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-333">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-333">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-334">然后它将打印<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-334">Then it prints the <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-335">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-335">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductPrivatePart Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductPrivatePart Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      </Docs>
    </Member>
    <Member MemberName="ProductVersion">
      <MemberSignature Language="C#" Value="public string ProductVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductVersion" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductVersion : string" Usage="System.Diagnostics.FileVersionInfo.ProductVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-336">获取与此文件一起发行的产品的版本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-336">Gets the version of the product this file is distributed with.</span></span></summary>
        <value><span data-ttu-id="0ffe3-337">与此文件一起发行的产品的版本，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-337">The version of the product this file is distributed with or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-338">通常情况下，版本号被显示为"主要版本号.次部件号"。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-338">Typically, a version number is displayed as "major number.minor number.build number.private part number".</span></span> <span data-ttu-id="0ffe3-339">产品版本编号是一个 64 位数字持有的版本号，如下所示：</span><span class="sxs-lookup"><span data-stu-id="0ffe3-339">A product version number is a 64-bit number that holds the version number as follows:</span></span>  
  
-   <span data-ttu-id="0ffe3-340">第一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-340">The first 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductMajorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-341">下一步的 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-341">The next 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductMinorPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-342">16 位的第三个组是<xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-342">The third set of 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductBuildPart%2A> number.</span></span>  
  
-   <span data-ttu-id="0ffe3-343">最后一个 16 位均为<xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A>数。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-343">The last 16 bits are the <xref:System.Diagnostics.FileVersionInfo.ProductPrivatePart%2A> number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-344">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-344">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-345">然后它将打印<xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A>在文本框中。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-345">Then it prints the <xref:System.Diagnostics.FileVersionInfo.ProductVersion%2A> in a text box.</span></span> <span data-ttu-id="0ffe3-346">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-346">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ProductVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ProductVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
      </Docs>
    </Member>
    <Member MemberName="SpecialBuild">
      <MemberSignature Language="C#" Value="public string SpecialBuild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SpecialBuild" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpecialBuild As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SpecialBuild { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SpecialBuild : string" Usage="System.Diagnostics.FileVersionInfo.SpecialBuild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ffe3-347">获取文件的特殊内部版本信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-347">Gets the special build information for the file.</span></span></summary>
        <value><span data-ttu-id="0ffe3-348">文件的特殊内部版本信息，当文件不包含版本信息时则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-348">The special build information for the file or <see langword="null" /> if the file did not contain version information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ffe3-349">如果<xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A>是`true`，<xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A>必须指定此文件如何不同于标准版本的文件。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-349">If <xref:System.Diagnostics.FileVersionInfo.IsSpecialBuild%2A> is `true`, <xref:System.Diagnostics.FileVersionInfo.SpecialBuild%2A> must specify how this file differs from the standard version of the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ffe3-350">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-350">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-351">然后它将打印在文本框中的特殊内部版本信息。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-351">Then it prints the special build information in a text box.</span></span> <span data-ttu-id="0ffe3-352">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-352">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.SpecialBuild Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.SpecialBuild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.FileVersionInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fileVersionInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.FileVersionInfo</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ffe3-353">返回 <see cref="T:System.Diagnostics.FileVersionInfo" /> 中属性及相应值的部分列表。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-353">Returns a partial list of properties in the <see cref="T:System.Diagnostics.FileVersionInfo" /> and their values.</span></span></summary>
        <returns><span data-ttu-id="0ffe3-354">该类中下列属性及相应值的列表：</span><span class="sxs-lookup"><span data-stu-id="0ffe3-354">A list of the following properties in this class and their values:</span></span> 
 <span data-ttu-id="0ffe3-355"><see cref="P:System.Diagnostics.FileVersionInfo.FileName" />、<see cref="P:System.Diagnostics.FileVersionInfo.InternalName" />、<see cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />、<see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />、<see cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />、<see cref="P:System.Diagnostics.FileVersionInfo.ProductName" />、<see cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />、<see cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />、<see cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />、<see cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />、<see cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />、<see cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />、</span><span class="sxs-lookup"><span data-stu-id="0ffe3-355"><see cref="P:System.Diagnostics.FileVersionInfo.FileName" />, <see cref="P:System.Diagnostics.FileVersionInfo.InternalName" />, <see cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />, <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />, <see cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />, <see cref="P:System.Diagnostics.FileVersionInfo.ProductName" />, <see cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />, <see cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />,</span></span> 
 <span data-ttu-id="0ffe3-356"><see cref="P:System.Diagnostics.FileVersionInfo.Language" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-356"><see cref="P:System.Diagnostics.FileVersionInfo.Language" />.</span></span>  
  
<span data-ttu-id="0ffe3-357">如果文件不包含版本信息，则此列表将只包含所请求文件的名称。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-357">If the file did not contain version information, this list will contain only the name of the requested file.</span></span> <span data-ttu-id="0ffe3-358">布尔值将为 <see langword="false" />，其他所有项将为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-358">Boolean values will be <see langword="false" />, and all other entries will be <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0ffe3-359">下面的示例调用<xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A>若要获取<xref:System.Diagnostics.FileVersionInfo>记事本。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-359">The following example calls <xref:System.Diagnostics.FileVersionInfo.GetVersionInfo%2A> to get the <xref:System.Diagnostics.FileVersionInfo> for the Notepad.</span></span> <span data-ttu-id="0ffe3-360">然后，它调用<xref:System.Diagnostics.FileVersionInfo.ToString%2A>打印中的文本框中的文件版本信息的列表。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-360">Then it calls <xref:System.Diagnostics.FileVersionInfo.ToString%2A> to print a list of the file version information in a text box.</span></span> <span data-ttu-id="0ffe3-361">此代码假定`textBox1`已实例化。</span><span class="sxs-lookup"><span data-stu-id="0ffe3-361">This code assumes `textBox1` has been instantiated.</span></span>  
  
 [!code-cpp[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic FileVersionInfo.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileVersionInfo.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.InternalName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.FileDescription" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.Language" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductName" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsDebug" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPatched" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
      </Docs>
    </Member>
  </Members>
</Type>