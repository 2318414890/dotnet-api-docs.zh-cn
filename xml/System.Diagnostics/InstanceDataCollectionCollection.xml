<Type Name="InstanceDataCollectionCollection" FullName="System.Diagnostics.InstanceDataCollectionCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="949841245506c81bea8181c418fddb0377ac2833" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56760982" /></Metadata><TypeSignature Language="C#" Value="public class InstanceDataCollectionCollection : System.Collections.DictionaryBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstanceDataCollectionCollection extends System.Collections.DictionaryBase" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.InstanceDataCollectionCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class InstanceDataCollectionCollection&#xA;Inherits DictionaryBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceDataCollectionCollection : System::Collections::DictionaryBase" />
  <TypeSignature Language="F#" Value="type InstanceDataCollectionCollection = class&#xA;    inherit DictionaryBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.DictionaryBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 对象的强类型集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.InstanceDataCollectionCollection>类表示从返回的集合<xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A>方法。 此集合包含所有计数器和实例数据。 该集合包含<xref:System.Diagnostics.InstanceDataCollection>对象的每个计数器。 每个<xref:System.Diagnostics.InstanceDataCollection>对象包含为该实例的所有计数器的性能数据。 因此，数据编制索引的计数器名称，然后按实例名称。  
  
   
  
## Examples  
 下面的代码示例显示特定的实例数据<xref:System.Diagnostics.PerformanceCounterCategory>本地计算机上。 它首先显示的编号的列表<xref:System.Diagnostics.PerformanceCounterCategory>名称。 用户输入的一个类别数后，此示例将获取<xref:System.Diagnostics.InstanceDataCollectionCollection>为此， <xref:System.Diagnostics.PerformanceCounterCategory>。 然后将转换返回的集合<xref:System.Diagnostics.InstanceDataCollectionCollection.Values%2A>属性设置为一个数组<xref:System.Diagnostics.InstanceDataCollection>对象。 该示例显示与每个关联的实例数据<xref:System.Diagnostics.InstanceData>每个<xref:System.Diagnostics.InstanceDataCollection>。  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#1)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.InstanceDataCollection" />
    <altmember cref="T:System.Diagnostics.InstanceData" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstanceDataCollectionCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollectionCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstanceDataCollectionCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use PerformanceCounterCategory.ReadCategory()")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2;netcore-3.0">
          <AttributeName>System.Obsolete("This constructor has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.ReadCategory() to get an instance of this collection instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("This constructor has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.ReadCategory() to get an instance of this collection instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollectionCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (counterName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="instanceDataCollectionCollection.Contains counterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">性能计数器的名称。</param>
        <summary>确定集合中是否存在指定计数器的实例数据集合（由索引 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 对象之一来标识）。</summary>
        <returns>如果集合中存在包含指定计数器的实例数据集合，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `counterName`参数不区分大小写。  
  
 每个<xref:System.Diagnostics.InstanceDataCollection>对象集合中的包含的实例的所有计数器的性能数据。 依次按计数器名称和实例名称，则数据编制索引。 <xref:System.Diagnostics.InstanceDataCollectionCollection.Contains%2A> 返回`true`是否存在<xref:System.Diagnostics.InstanceDataCollection>对象，其关联的计数器都有名称指定的`counterName`参数。  
  
   
  
## Examples  
 下面的代码示例接受<xref:System.Diagnostics.PerformanceCounter>类别名称和命令行中的计数器名称。 它获取<xref:System.Diagnostics.InstanceDataCollectionCollection>有关<xref:System.Diagnostics.PerformanceCounterCategory>，然后使用<xref:System.Diagnostics.InstanceDataCollectionCollection.Contains%2A>方法，以确定是否存在指定的计数器。 如果存在该计数器，此示例获取关联<xref:System.Diagnostics.InstanceDataCollection>并显示来自集合的实例名称。  
  
 [!code-csharp[System.Diagnostics.InstanceDataCollectionCollection.ItemContains#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollectionCollection.ItemContains/CS/instdatacolcolitermcontains.cs#2)]
 [!code-vb[System.Diagnostics.InstanceDataCollectionCollection.ItemContains#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollectionCollection.ItemContains/VB/instdatacolcolitemcontains.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="counterName" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Diagnostics.InstanceDataCollection[] counters, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Diagnostics.InstanceDataCollection[] counters, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollectionCollection.CopyTo(System.Diagnostics.InstanceDataCollection[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (counters As InstanceDataCollection(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Diagnostics::InstanceDataCollection ^&gt; ^ counters, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Diagnostics.InstanceDataCollection[] * int -&gt; unit" Usage="instanceDataCollectionCollection.CopyTo (counters, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counters" Type="System.Diagnostics.InstanceDataCollection[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="counters">要添加到集合中的 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 实例的数组（由它们包含的计数器来标识）。</param>
        <param name="index">要添加新实例的位置。</param>
        <summary>将 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 实例的数组复制到集合的指定索引处。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:System.Diagnostics.InstanceDataCollectionCollection.CopyTo%2A>方法将转换<xref:System.Diagnostics.InstanceDataCollectionCollection>成一个数组<xref:System.Diagnostics.InstanceDataCollection>对象。 每个元素<xref:System.Diagnostics.InstanceDataCollection>数组传递到函数进行进一步处理。  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#5)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceDataCollection this[string counterName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.InstanceDataCollection Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollectionCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(counterName As String) As InstanceDataCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::InstanceDataCollection ^ default[System::String ^] { System::Diagnostics::InstanceDataCollection ^ get(System::String ^ counterName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Diagnostics.InstanceDataCollection" Usage="System.Diagnostics.InstanceDataCollectionCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceDataCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">性能计数器的名称。</param>
        <summary>获取指定计数器的实例数据。</summary>
        <value>一个 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 项，将根据它对 <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> 对象进行索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `counterName`参数不区分大小写。  
  
 每个<xref:System.Diagnostics.InstanceDataCollection>对象集合中的包含的实例的所有计数器的性能数据。 依次按计数器名称和实例名称，则数据编制索引。 索引器使用`counterName`参数来单步执行与此集合的实例数据关联的计数器。  
  
   
  
## Examples  
 下面的代码示例接受<xref:System.Diagnostics.PerformanceCounter>类别名称和命令行中的计数器名称。 它获取<xref:System.Diagnostics.InstanceDataCollectionCollection>为<xref:System.Diagnostics.PerformanceCounterCategory>。 然后，如果<xref:System.Diagnostics.PerformanceCounter>存在，此示例将使用<xref:System.Diagnostics.InstanceDataCollectionCollection.Item%2A>属性 （作为索引器引用） 若要获取关联<xref:System.Diagnostics.InstanceDataCollection>并显示来自集合的实例名称。  
  
 [!code-csharp[System.Diagnostics.InstanceDataCollectionCollection.ItemContains#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollectionCollection.ItemContains/CS/instdatacolcolitermcontains.cs#2)]
 [!code-vb[System.Diagnostics.InstanceDataCollectionCollection.ItemContains#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollectionCollection.ItemContains/VB/instdatacolcolitemcontains.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="counterName" /> 参数为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollectionCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Diagnostics.InstanceDataCollectionCollection.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对象和与该实例数据集合关联的对象的计数器注册表项。</summary>
        <value>表示一组对象特定的注册表项的 <see cref="T:System.Collections.ICollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 安装和执行时将计数器数据时，每个软件组件创建其对象和计数器的密钥。 可访问任何其他注册表数据时，可以访问此数据。 但是，尽管使用注册表收集性能数据，但注册表数据库中不存储数据。 相反，系统从相应的系统对象管理器收集的数据。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Diagnostics.InstanceDataCollectionCollection.Keys%2A>的属性<xref:System.Diagnostics.InstanceDataCollectionCollection>返回的计数器名称，它将转换为数组集合<xref:System.String>。 生成的数组<xref:System.Diagnostics.InstanceDataCollection>对象使用<xref:System.Diagnostics.InstanceDataCollectionCollection.Values%2A>属性。 每个元素中的计数器名称的数组，它显示名称，并调用一个函数来处理关联<xref:System.Diagnostics.InstanceDataCollection>。  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#4)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollectionCollection.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Diagnostics.InstanceDataCollectionCollection.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取组成计数器实例集合的实例数据值。</summary>
        <value>一个 <see cref="T:System.Collections.ICollection" />，它表示计数器的实例和它们的关联数据值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例使用<xref:System.Diagnostics.InstanceDataCollectionCollection.Values%2A>的属性<xref:System.Diagnostics.InstanceDataCollectionCollection>返回的集合<xref:System.Diagnostics.InstanceDataCollection>对象，它将转换为数组。 它将生成一个使用的计数器名称数组<xref:System.Diagnostics.InstanceDataCollectionCollection.Keys%2A>属性。 数组中每个元素<xref:System.Diagnostics.InstanceDataCollection>对象，它显示关联的计数器名称，并调用一个函数来处理<xref:System.Diagnostics.InstanceDataCollection>。  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#4)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>