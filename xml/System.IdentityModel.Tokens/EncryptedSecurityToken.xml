<Type Name="EncryptedSecurityToken" FullName="System.IdentityModel.Tokens.EncryptedSecurityToken">
  <TypeSignature Language="C#" Value="public class EncryptedSecurityToken : System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedSecurityToken extends System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedSecurityToken&#xA;Inherits SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedSecurityToken : System::IdentityModel::Tokens::SecurityToken" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityToken</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fcc0f-101">处理标志的加密在本质上不支持它的包装象征。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-101">A wrapping-token that handles encryption for a token that does not natively support it.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcc0f-102">例如，<xref:System.IdentityModel.Tokens.SamlSecurityToken>无法加密本身，才能发出加密的 SAML11 断言，将包装<xref:System.IdentityModel.Tokens.SamlSecurityToken>与<xref:System.IdentityModel.Tokens.EncryptedSecurityToken>并提供相应<xref:System.IdentityModel.Tokens.EncryptingCredentials>。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-102">For example, a <xref:System.IdentityModel.Tokens.SamlSecurityToken> cannot encrypt itself, so to issue an encrypted SAML11 assertion, wrap a <xref:System.IdentityModel.Tokens.SamlSecurityToken> with an <xref:System.IdentityModel.Tokens.EncryptedSecurityToken> and provide appropriate <xref:System.IdentityModel.Tokens.EncryptingCredentials>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedSecurityToken (System.IdentityModel.Tokens.SecurityToken token, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityToken token, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedSecurityToken(System::IdentityModel::Tokens::SecurityToken ^ token, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="fcc0f-103">要加密的标记。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-103">The token to encrypt.</span></span></param>
        <param name="encryptingCredentials"><span data-ttu-id="fcc0f-104">要用于加密标记的凭据。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-104">The credentials to use to encrypt the token.</span></span></param>
        <summary><span data-ttu-id="fcc0f-105">用指定的加密凭据，为指定的加密凭据初始化 <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-105">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedSecurityToken" /> class for the specified token by using the specified encrypting credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcc0f-106">从 <xref:System.IdentityModel.Tokens.SecurityToken> 继承。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-106">Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override bool CanCreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanCreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanCreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause override bool CanCreateKeyIdentifierClause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="fcc0f-107">密钥标识符子句的类型。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-107">The type of the key identifier clause.</span></span></typeparam>
        <summary><span data-ttu-id="fcc0f-108">获取一个值，该值指示令牌是否可以创建指定类型的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-108">Gets a value that indicates whether the token can create a key identifier clause of the specified type.</span></span></summary>
        <returns>
          <span data-ttu-id="fcc0f-109">如果该令牌可以创建指定类型的密钥标识符子句类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-109"><see langword="true" /> if the token can create a key identifier clause of the specified type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcc0f-110">从 <xref:System.IdentityModel.Tokens.SecurityToken> 继承。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-110">Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="CreateKeyIdentifierClause&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T CreateKeyIdentifierClause&lt;T&gt; () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T CreateKeyIdentifierClause&lt;(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause``1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateKeyIdentifierClause(Of T As SecurityKeyIdentifierClause) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::IdentityModel::Tokens::SecurityKeyIdentifierClause override T CreateKeyIdentifierClause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.IdentityModel.Tokens.SecurityKeyIdentifierClause</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="fcc0f-111">要创建的密钥标识符子句的类型。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-111">The type of the key identifier clause to create.</span></span></typeparam>
        <summary><span data-ttu-id="fcc0f-112">为这个令牌创建指定类型的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-112">Creates a key identifier clause of the specified type for the token.</span></span></summary>
        <returns><span data-ttu-id="fcc0f-113">指定类型的密钥标识符字句。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-113">A key identifier clause of the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="EncryptingCredentials">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::EncryptingCredentials ^ EncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcc0f-114">获取用于加密的凭据。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-114">Gets the credentials to use for encryption.</span></span></summary>
        <value><span data-ttu-id="fcc0f-115">要用于加密的凭据。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-115">The credentials to use for encryption.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcc0f-116">获取安全令牌的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-116">Gets the unique identifier of the security token.</span></span></summary>
        <value><span data-ttu-id="fcc0f-117">安全令牌的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-117">The unique identifier of the security token.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="MatchesKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MatchesKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MatchesKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MatchesKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="fcc0f-118">要与此实例进行比较的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-118">A key identifier clause to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="fcc0f-119">返回一个值，该值指示此实例的密钥标识符能否解析为指定的密钥标识符。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-119">Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.</span></span></summary>
        <returns>
          <span data-ttu-id="fcc0f-120">如果指定的密匙标识符子句可由该事例解析，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-120"><see langword="true" /> if the specified key identifier clause can be resolved by this instance; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcc0f-121">从 <xref:System.IdentityModel.Tokens.SecurityToken> 继承。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-121">Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="ResolveKeyIdentifierClause">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveKeyIdentifierClause (keyIdentifierClause As SecurityKeyIdentifierClause) As SecurityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Tokens::SecurityKey ^ ResolveKeyIdentifierClause(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause"><span data-ttu-id="fcc0f-122">获取其键的密钥标识符子句。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-122">The key identifier clause to get the key for.</span></span></param>
        <summary><span data-ttu-id="fcc0f-123">为指定的密钥标识符子句获取密钥。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-123">Gets the key for the specified key identifier clause.</span></span></summary>
        <returns><span data-ttu-id="fcc0f-124">键。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-124">The key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcc0f-125">从 <xref:System.IdentityModel.Tokens.SecurityToken> 继承。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-125">Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcc0f-126">获取与安全令牌相关联的加密密钥。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-126">Gets the cryptographic keys associated with the security token.</span></span></summary>
        <value><span data-ttu-id="fcc0f-127">与安全令牌相关联的一组键。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-127">The set of keys associated with the security token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcc0f-128">从 <xref:System.IdentityModel.Tokens.SecurityToken> 继承。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-128">Inherited from <xref:System.IdentityModel.Tokens.SecurityToken>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityToken Token" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityToken ^ Token { System::IdentityModel::Tokens::SecurityToken ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcc0f-129">获取加密标记。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-129">Gets the encrypted token.</span></span></summary>
        <value><span data-ttu-id="fcc0f-130">加密令牌。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-130">The encrypted token.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public override DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidFrom { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcc0f-131">获取安全令牌有效的最初时刻。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-131">Gets the first instant in time at which the security token is valid.</span></span></summary>
        <value><span data-ttu-id="fcc0f-132">此安全令牌有效的某一时刻。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-132">The instant in time at which the security token is valid.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public override DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidTo { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcc0f-133">获取安全令牌有效的最后时刻。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-133">Gets the last instant in time at which the security token is valid.</span></span></summary>
        <value><span data-ttu-id="fcc0f-134">安全标记有效的最后时刻。</span><span class="sxs-lookup"><span data-stu-id="fcc0f-134">The last instant in time at which the security token is valid.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SecurityToken" />
      </Docs>
    </Member>
  </Members>
</Type>