<Type Name="ConfigurationBasedIssuerNameRegistry" FullName="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1018d8ad9aa3fc69b5fdddf6250cd51a5dd2239" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51915899" /></Metadata><TypeSignature Language="C#" Value="public class ConfigurationBasedIssuerNameRegistry : System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConfigurationBasedIssuerNameRegistry extends System.IdentityModel.Tokens.IssuerNameRegistry" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
  <TypeSignature Language="VB.NET" Value="Public Class ConfigurationBasedIssuerNameRegistry&#xA;Inherits IssuerNameRegistry" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConfigurationBasedIssuerNameRegistry : System::IdentityModel::Tokens::IssuerNameRegistry" />
  <TypeSignature Language="F#" Value="type ConfigurationBasedIssuerNameRegistry = class&#xA;    inherit IssuerNameRegistry" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.IssuerNameRegistry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示颁发者名称注册想，其维护一系列可信颁发者，它们加载子应用程序配置文件中的元素，该文件将每个颁发者名称与 X.509 证书关联，该证书为验证颁发者生成的签名所需。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>类维护的受信任颁发者的字典，通过将每个受信任的颁发者的证书映射到引用该颁发者的名称。 使用 ASN.1 编码指纹的形式指定证书。 颁发者名称可以是任意字符串，只要它是唯一的应用程序的作用域内。 可以通过访问此字典<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A>属性。 类只能解析 X.509 证书。  
  
 将条目下的添加配置文件中指定的受信任颁发者映射[ &lt;trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md)元素。 `<trustedIssuers>`元素是子元素的[ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)并且它是有效时<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>中指定类`type`该元素的属性。 有关详细信息，请参阅中的这些元素的每个文档[WIF 配置架构](https://msdn.microsoft.com/library/4d4f6d76-49a5-4bad-b345-097b2e2844e9)。 有关颁发者名称注册表的详细信息，请参阅<xref:System.IdentityModel.Tokens.IssuerNameRegistry>类。  
  
 可以从派生<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>来实现你自己配置根据颁发者名称注册表。 重写的方法将取决于您的实现。 例如，您可以重写<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A>方法从自定义配置架构加载配置。  
  
   
  
## Examples  
 以下 XML 显示了配置<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>添加集合的安全令牌处理程序。 `<trustedIssuers>`元素的行为类似于传统的.NET 配置集合，从而允许`<add>`，`<delete>`和`<clear>`元素作为子元素。  
  
```  
<system.identityModel>  
  <identityConfiguration>  
    <securityTokenHandlersCollection>  
      <securityTokenHandlerConfiguration>  
        <issuerNameRegistry type="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel">  
          <trustedIssuers>  
             <add thumbprint="97249e … 158de" name="contoso.com" />  
         </trustedIssuers>  
        </issuerNameRegistry>  
      </securityTokenHandlerConfiguration>  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConfigurationBasedIssuerNameRegistry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConfigurationBasedIssuerNameRegistry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTrustedIssuer">
      <MemberSignature Language="C#" Value="public void AddTrustedIssuer (string certificateThumbprint, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTrustedIssuer(string certificateThumbprint, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddTrustedIssuer (certificateThumbprint As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTrustedIssuer(System::String ^ certificateThumbprint, System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.AddTrustedIssuer : string * string -&gt; unit" Usage="configurationBasedIssuerNameRegistry.AddTrustedIssuer (certificateThumbprint, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificateThumbprint" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="certificateThumbprint">发行人的证书指纹的 ASN.1 已编码形式。</param>
        <param name="name">颁发者的名称。</param>
        <summary>添加一个颁发者到信任发行人字典。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以调用此方法可添加到颁发者<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A>字典。 在派生类中，可以调用此方法从<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A>方法将颁发者添加到字典。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="certificateThumbprint" /> 为 <see langword="null" /> 或空。  
  
或 
 <paramref name="name" /> 为 <see langword="null" /> 或空。</exception>
        <exception cref="T:System.InvalidOperationException">已经配置了由 <paramref name="certificateThumbprint" /> 指定的颁布者。 （发布者已存在于<see cref="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" /> 字典中。）</exception>
      </Docs>
    </Member>
    <Member MemberName="ConfiguredTrustedIssuers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; ConfiguredTrustedIssuers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; ConfiguredTrustedIssuers" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConfiguredTrustedIssuers As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ ConfiguredTrustedIssuers { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConfiguredTrustedIssuers : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取为当前实例配置的可信颁发者的字典。</summary>
        <value>包含信任发行人的字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字典的关键是指纹的证书的 ASN.1 编码形式的受信任颁发者，值为颁发者名称。 字典包含已在配置中指定的颁发者和已添加了任何其他颁发者<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="public override string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetIssuerName(class System.IdentityModel.Tokens.SecurityToken securityToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetIssuerName(System::IdentityModel::Tokens::SecurityToken ^ securityToken);" />
      <MemberSignature Language="F#" Value="override this.GetIssuerName : System.IdentityModel.Tokens.SecurityToken -&gt; string" Usage="configurationBasedIssuerNameRegistry.GetIssuerName securityToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityToken" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="securityToken">颁布者姓名被请求的安全令牌。 应可分配为 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />。</param>
        <summary>返回与指定的 <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> 相关的发行人名称，通过映射证书指纹到已信任的发行人字典中的名称。</summary>
        <returns>如果在 <see cref="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" /> 目录中存在令牌的证书指纹的入口为颁布者名称；否则为  <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认实现搜索<xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A>字典中指定的 X.509 证书的指纹`securityToken`。 如果找到的项，则返回的颁发者名称否则为`null`返回。 如果`securityToken`不能从<xref:System.IdentityModel.Tokens.X509SecurityToken>，`null`返回。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="securityToken" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadCustomConfiguration">
      <MemberSignature Language="C#" Value="public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadCustomConfiguration(class System.Xml.XmlNodeList customConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadCustomConfiguration (customConfiguration As XmlNodeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadCustomConfiguration(System::Xml::XmlNodeList ^ customConfiguration);" />
      <MemberSignature Language="F#" Value="override this.LoadCustomConfiguration : System.Xml.XmlNodeList -&gt; unit" Usage="configurationBasedIssuerNameRegistry.LoadCustomConfiguration customConfiguration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customConfiguration" Type="System.Xml.XmlNodeList" />
      </Parameters>
      <Docs>
        <param name="customConfiguration">XML 表示信任发行人的映射将在指定的配置文件中。</param>
        <summary>加载配置的可信颁发者。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A>配置基础结构调用方法。 调用此方法时，`nodelist`将包含的顶级子元素[ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)配置文件中的元素。 其中每项功能可能反过来，还包含属性或子元素，具体取决于为您派生的类定义的配置架构。  
  
 由配置基础结构调用此方法。 默认实现将从配置加载[ &lt;trustedIssuers&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md)元素 (下配置[ &lt;issuerNameRegistry&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)元素)。 您可以重写此方法在派生类中你自己自定义配置元素提供支持。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="customConfiguration" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">配置包含未识别的一个或多个元素。</exception>
      </Docs>
    </Member>
  </Members>
</Type>