<Type Name="SessionSecurityToken" FullName="System.IdentityModel.Tokens.SessionSecurityToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e9c5b77cd63bb0df70f95e816d4cc6f85767a2ad" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52377565" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionSecurityToken : System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SessionSecurityToken extends System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SessionSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityToken&#xA;Inherits SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityToken : System::IdentityModel::Tokens::SecurityToken" />
  <TypeSignature Language="F#" Value="type SessionSecurityToken = class&#xA;    inherit SecurityToken" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityToken</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4482e-101">定义包含数据与会话相关的安全标记。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4482e-101">Defines a security token that contains data associated with a session.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-102">会话令牌存储<xref:System.Security.Claims.ClaimsPrincipal>例如会话的用户与会话，以及定义会话; 其他参数相关联的开始和结束时间。</span><span class="sxs-lookup"><span data-stu-id="4482e-102">A session token stores the <xref:System.Security.Claims.ClaimsPrincipal> of the user that is associated with a session as well as other parameters that define the session; for example the session start and end times.</span></span>  
  
 <span data-ttu-id="4482e-103">在被动方案中，<xref:System.IdentityModel.Services.WSFederationAuthenticationModule>调入<xref:System.IdentityModel.Services.SessionAuthenticationModule>(SAM) 中创建的会话令牌的身份验证管道<xref:System.Security.Claims.ClaimsPrincipal>表示已经过身份验证的用户。</span><span class="sxs-lookup"><span data-stu-id="4482e-103">In passive scenarios, the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> calls into the <xref:System.IdentityModel.Services.SessionAuthenticationModule> (SAM) from the authentication pipeline to create a session token from the <xref:System.Security.Claims.ClaimsPrincipal> that represents the authenticated user.</span></span> <span data-ttu-id="4482e-104">SAM 使用其配置<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>创建令牌和其序列化到 cookie （以及要反序列化中的后续请求的 cookie 令牌）。</span><span class="sxs-lookup"><span data-stu-id="4482e-104">The SAM uses its configured <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> to create the token and to serialize it into a cookie (and to deserialize the token from a cookie on subsequent requests).</span></span> <span data-ttu-id="4482e-105">SAM 使用其已配置的实例<xref:System.IdentityModel.Services.CookieHandler>类将写回到 HTTP 响应的 cookie。</span><span class="sxs-lookup"><span data-stu-id="4482e-105">The SAM uses an instance of its configured <xref:System.IdentityModel.Services.CookieHandler> class to write the cookie back to the HTTP Response.</span></span> <span data-ttu-id="4482e-106">保存的 cookie，然后返回到客户端和客户端可以在后续请求提供 cookie，而不是无需进行一次往返过程返回到要重新获取安全令牌的标识提供程序。</span><span class="sxs-lookup"><span data-stu-id="4482e-106">This cookie is then returned to the client and on subsequent requests the client can present the cookie rather than making a round trip back to the identity provider to re-obtain a security token.</span></span> <span data-ttu-id="4482e-107">有关会话如何运行使用 WIF 的详细信息，请参阅[WIF 会话管理](~/docs/framework/security/wif-session-management.md)。</span><span class="sxs-lookup"><span data-stu-id="4482e-107">For more information about how sessions operate with WIF, see [WIF Session Management](~/docs/framework/security/wif-session-management.md).</span></span> <span data-ttu-id="4482e-108">在 Web 场方案中使用会话的信息，请参阅[WIF 和 Web 场](~/docs/framework/security/wif-and-web-farms.md)。</span><span class="sxs-lookup"><span data-stu-id="4482e-108">For information about using sessions in Web farm scenarios, see [WIF and Web Farms](~/docs/framework/security/wif-and-web-farms.md).</span></span>  
  
 <span data-ttu-id="4482e-109">会话令牌可以在任何一种引用模式运行，或不。</span><span class="sxs-lookup"><span data-stu-id="4482e-109">A session token can operate in either reference mode or not.</span></span> <span data-ttu-id="4482e-110">如果会话令牌不在引用模式下操作时，将整个标记是序列化到客户端存储的会话 cookie。</span><span class="sxs-lookup"><span data-stu-id="4482e-110">If the session token is not operating in reference mode, the entire token is serialized into the session cookie that is stored on the client.</span></span> <span data-ttu-id="4482e-111">序列化的会话令牌可能会很大，因此存储在客户端上的 cookie 也可以是相当相当大。</span><span class="sxs-lookup"><span data-stu-id="4482e-111">The serialized session token can be quite large and thus the cookie stored on the client can also be quite sizeable.</span></span> <span data-ttu-id="4482e-112">在引用模式下，而不是序列化整个会话为 cookie 令牌，令牌存储在会话安全标记缓存并仅用于生成密钥从缓存中检索令牌所需的信息存储在 cookie 中。</span><span class="sxs-lookup"><span data-stu-id="4482e-112">In reference mode, rather than serializing the entire session token into the cookie, the token is stored in a session security token cache and only the information used to generate the key necessary to retrieve the token from the cache is stored in the cookie.</span></span> <span data-ttu-id="4482e-113">这可以大大降低的 cookie 的大小。</span><span class="sxs-lookup"><span data-stu-id="4482e-113">This can greatly reduce the size of the cookie.</span></span> <span data-ttu-id="4482e-114">由派生类实现令牌缓存的会话<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>，由实现缓存键<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>类。</span><span class="sxs-lookup"><span data-stu-id="4482e-114">The session token cache is implemented by a class derived from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache> and the cache key is implemented by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class.</span></span> <span data-ttu-id="4482e-115"><xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>并<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>将使用属性<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>类生成的缓存键。</span><span class="sxs-lookup"><span data-stu-id="4482e-115">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> and <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> properties are used in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class to generate the cache key.</span></span>  
  
 <span data-ttu-id="4482e-116"><xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>属性确定会话令牌是否在引用模式下。</span><span class="sxs-lookup"><span data-stu-id="4482e-116">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> property determines whether the session token is in reference mode or not.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4482e-117">若要在引用模式下操作提供的处理程序的 Microsoft 建议<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType>中的 global.asax.cs 文件和设置事件<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>令牌上的属性中传递<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-117">To operate in reference mode, Microsoft recommends providing a handler for the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> event in the global.asax.cs file and setting the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> property on the token passed in the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="4482e-118">这将确保会话令牌引用的每个请求的模式下运行，并且更倾向于只设置<xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType>会话身份验证模块上的属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-118">This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> property on the Session Authentication Module.</span></span>  
  
 <span data-ttu-id="4482e-119"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>提供使用 WIF 类序列化作为 Ws-secure Conversation 会话令牌`<wsc:SecurityContextToken>`元素。</span><span class="sxs-lookup"><span data-stu-id="4482e-119">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class provided with WIF serializes the session token as a WS-Secure Conversation `<wsc:SecurityContextToken>` element.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
    <altmember cref="T:System.IdentityModel.Services.SessionAuthenticationModule" />
    <related type="Article" href="https://msdn.microsoft.com/library/98bce126-18a9-401b-b20d-67ee462a5f8a">
      <span data-ttu-id="4482e-120">WIF 会话管理</span>
      <span class="sxs-lookup">
        <span data-stu-id="4482e-120">WIF Session Management</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc3cd7fa-2b45-4614-a44f-8fa9b9d15284">
      <span data-ttu-id="4482e-121">WIF 和 Web 场</span>
      <span class="sxs-lookup">
        <span data-stu-id="4482e-121">WIF and Web Farms</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-122">初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-122">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken claimsPrincipal" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">
          <span data-ttu-id="4482e-123">初始化标记的声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-123">The claims principal from which to initialize the token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4482e-124">从指定的主体初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-124">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class from the specified principal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-125">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="4482e-125">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="4482e-126">Property</span><span class="sxs-lookup"><span data-stu-id="4482e-126">Property</span></span>|<span data-ttu-id="4482e-127">初始值</span><span class="sxs-lookup"><span data-stu-id="4482e-127">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|<span data-ttu-id="4482e-128">设置为生成的唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-128">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="4482e-129">设置为生成的唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-129">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="4482e-130"><xref:System.DateTime.UtcNow%2A> 再加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-130"><xref:System.DateTime.UtcNow%2A> plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="4482e-131">包含生成的 128 位的对称密钥。</span><span class="sxs-lookup"><span data-stu-id="4482e-131">Contains a generated 128 bit symmetric key.</span></span> <span data-ttu-id="4482e-132">**注意：** 的默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-132">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="4482e-133">签名和加密密钥由应用的 cookie 转换<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>处理该令牌。</span><span class="sxs-lookup"><span data-stu-id="4482e-133">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="4482e-134"><xref:System.DateTime.UtcNow%2A> 再加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-134"><xref:System.DateTime.UtcNow%2A> plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4482e-135">
            <paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-135">
              <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-136">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-136">-or-</span>
          </span>
          <span data-ttu-id="4482e-137">
            <paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-137">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionSecurityToken (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionSecurityToken(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="4482e-138">序列化的对象数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-138">The serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4482e-139">有关源的上下文信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-139">Contextual information about the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4482e-140">用序列化数据初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-140">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">
          <span data-ttu-id="4482e-141">从引导标记生成的声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-141">The claims principal that was generated from the bootstrap token.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4482e-142">一个应用程序特定的可选上下文字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-142">An optional, application-specific context string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4482e-143">用指定的主体和启动令牌初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-143">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class from the specified principal and bootstrap token.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-144">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="4482e-144">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="4482e-145">Property</span><span class="sxs-lookup"><span data-stu-id="4482e-145">Property</span></span>|<span data-ttu-id="4482e-146">初始值</span><span class="sxs-lookup"><span data-stu-id="4482e-146">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|<span data-ttu-id="4482e-147">设置为生成的唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-147">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="4482e-148">设置为生成的唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-148">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="4482e-149"><xref:System.DateTime.UtcNow%2A> 再加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-149"><xref:System.DateTime.UtcNow%2A> plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="4482e-150">包含生成的 128 位的对称密钥。</span><span class="sxs-lookup"><span data-stu-id="4482e-150">Contains a generated 128 bit symmetric key.</span></span> <span data-ttu-id="4482e-151">**注意：** 的默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-151">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="4482e-152">签名和加密密钥由应用的 cookie 转换<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>处理该令牌。</span><span class="sxs-lookup"><span data-stu-id="4482e-152">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="4482e-153"><xref:System.DateTime.UtcNow%2A> 再加上<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-153"><xref:System.DateTime.UtcNow%2A> plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4482e-154">
            <paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-154">
              <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-155">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-155">-or-</span>
          </span>
          <span data-ttu-id="4482e-156">
            <paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-156">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, TimeSpan lifetime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, valuetype System.TimeSpan lifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, TimeSpan lifetime);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * TimeSpan -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, lifetime)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">
          <span data-ttu-id="4482e-157">初始化标记的声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-157">The claims principal from which to initialize the token.</span>
          </span>
        </param>
        <param name="lifetime">
          <span data-ttu-id="4482e-158">当令牌有效期间从当前时间开始的期间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-158">The period from the current time during which the token is valid.</span>
          </span>
          <span data-ttu-id="4482e-159">
            <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 属性将设置为 <see cref="P:System.DateTime.UtcNow" /> ，并且 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> 属性将设置为 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 加上该参数指定的时期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-159">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> property will be set to <see cref="P:System.DateTime.UtcNow" /> and the <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> property will be set to <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> plus the period specified by this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4482e-160">从指定的主体初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-160">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class from the specified principal.</span>
          </span>
          <span data-ttu-id="4482e-161">在指定生命期间从 <see cref="P:System.DateTime.UtcNow" /> 开始是合法的新的标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-161">The new token is valid from <see cref="P:System.DateTime.UtcNow" /> through the specified lifetime.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-162">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="4482e-162">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="4482e-163">Property</span><span class="sxs-lookup"><span data-stu-id="4482e-163">Property</span></span>|<span data-ttu-id="4482e-164">初始值</span><span class="sxs-lookup"><span data-stu-id="4482e-164">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|<span data-ttu-id="4482e-165">设置为生成的唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-165">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="4482e-166">设置为生成的唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-166">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="4482e-167"><xref:System.DateTime.UtcNow%2A> 加上`lifetime`。</span><span class="sxs-lookup"><span data-stu-id="4482e-167"><xref:System.DateTime.UtcNow%2A> plus `lifetime`.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="4482e-168">包含生成的 128 位的对称密钥。</span><span class="sxs-lookup"><span data-stu-id="4482e-168">Contains a generated 128 bit symmetric key.</span></span> <span data-ttu-id="4482e-169">**注意：** 的默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-169">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="4482e-170">签名和加密密钥由应用的 cookie 转换<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>处理该令牌。</span><span class="sxs-lookup"><span data-stu-id="4482e-170">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="4482e-171"><xref:System.DateTime.UtcNow%2A> 加上`lifetime`。</span><span class="sxs-lookup"><span data-stu-id="4482e-171"><xref:System.DateTime.UtcNow%2A> plus `lifetime`.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4482e-172">
            <paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-172">
              <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-173">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-173">-or-</span>
          </span>
          <span data-ttu-id="4482e-174">
            <paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-174">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4482e-175">
            <paramref name="lifetime" /> 小于或等于 <see cref="F:System.TimeSpan.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-175">
              <paramref name="lifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context, validFrom, validTo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">
          <span data-ttu-id="4482e-176">从引导标记生成的声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-176">The claims principal that was generated from the bootstrap token.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4482e-177">一个应用程序特定的可选上下文字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-177">An optional, application-specific context string.</span>
          </span>
        </param>
        <param name="validFrom">
          <span data-ttu-id="4482e-178">标记变为有效的时间时刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-178">The time instant at which the token becomes valid.</span>
          </span>
          <span data-ttu-id="4482e-179">如果为 <see langword="null" />，则指定 <see cref="P:System.DateTime.UtcNow" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-179">
              <see langword="null" /> to specify <see cref="P:System.DateTime.UtcNow" /></span>
          </span>
        </param>
        <param name="validTo">
          <span data-ttu-id="4482e-180">其后时间不再有效的时间时刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-180">The time instant after which the token is no longer valid.</span>
          </span>
          <span data-ttu-id="4482e-181">如果为 <see langword="null" />，则指定应通过将 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> 属性的值添加到 <paramref name="validFrom" /> 参数指定的时间来确定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-181">
              <see langword="null" /> to specify that the value should be determined by adding the value of the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> property to the time specified by the <paramref name="validFrom" /> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4482e-182">用指定的主体和启动令牌，并结合指定的开始时间和过期时间来初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-182">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class from the specified principal and bootstrap token; and with the specified start time and expiration time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-183">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="4482e-183">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="4482e-184">Property</span><span class="sxs-lookup"><span data-stu-id="4482e-184">Property</span></span>|<span data-ttu-id="4482e-185">初始值</span><span class="sxs-lookup"><span data-stu-id="4482e-185">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|<span data-ttu-id="4482e-186">设置为生成的唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-186">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="4482e-187">设置为生成的唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-187">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<span data-ttu-id="4482e-188">设置为值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>属性由`ValidFrom`参数。</span><span class="sxs-lookup"><span data-stu-id="4482e-188">Set to the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> property as determined by the `ValidFrom` parameter.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="4482e-189">值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>属性由`ValidTo`参数。</span><span class="sxs-lookup"><span data-stu-id="4482e-189">The value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> property as determined by the `ValidTo` parameter.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="4482e-190">包含生成的 128 位的对称密钥。</span><span class="sxs-lookup"><span data-stu-id="4482e-190">Contains a generated 128 bit symmetric key.</span></span> <span data-ttu-id="4482e-191">**注意：** 的默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-191">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="4482e-192">签名和加密密钥由应用的 cookie 转换<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>处理该令牌。</span><span class="sxs-lookup"><span data-stu-id="4482e-192">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<span data-ttu-id="4482e-193">值`validFrom`参数，或者，如果`validFrom`是`null`， <xref:System.DateTime.UtcNow%2A>。</span><span class="sxs-lookup"><span data-stu-id="4482e-193">The value of the `validFrom` parameter, or, if `validFrom` is `null`, <xref:System.DateTime.UtcNow%2A>.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="4482e-194">`validFrom` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="4482e-194">The value of the `validFrom` parameter.</span></span> <span data-ttu-id="4482e-195">如果`validFrom`是`null`的值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>属性 (由`validFrom`参数) 以及<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-195">If `validFrom` is `null`, the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> property (as determined by the `validFrom` parameter) plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4482e-196">
            <paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-196">
              <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-197">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-197">-or-</span>
          </span>
          <span data-ttu-id="4482e-198">
            <paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-198">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4482e-199">无法验证 <paramref name="validFrom" /> 和 <paramref name="validTo" /> 参数；例如，<paramref name="validTo" /> 指定早于 <paramref name="validFrom" /> 发生的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-199">The <paramref name="validFrom" /> and <paramref name="validTo" /> parameters cannot be validated; for example, <paramref name="validTo" /> specifies a time that occurs earlier than <paramref name="validFrom" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, string endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, string endpointId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::String ^ context, System::String ^ endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * string * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, context, endpointId, validFrom, validTo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">
          <span data-ttu-id="4482e-200">从引导标记生成的声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-200">The claims principal that was generated from the bootstrap token.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4482e-201">一个应用程序特定的可选上下文字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-201">An optional, application-specific context string.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="4482e-202">此标记所绑定的终点结。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-202">The endpoint to which this token is bound.</span>
          </span>
          <span data-ttu-id="4482e-203">空字符串将创建未区分范围的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-203">An empty string creates an unscoped token.</span>
          </span>
        </param>
        <param name="validFrom">
          <span data-ttu-id="4482e-204">标记变为有效的时间时刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-204">The time instant at which the token becomes valid.</span>
          </span>
          <span data-ttu-id="4482e-205">如果为 <see langword="null" />，则指定 <see cref="P:System.DateTime.UtcNow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-205">
              <see langword="null" /> to specify <see cref="P:System.DateTime.UtcNow" />.</span>
          </span>
        </param>
        <param name="validTo">
          <span data-ttu-id="4482e-206">其后时间不再有效的时间时刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-206">The time instant after which the token is no longer valid.</span>
          </span>
          <span data-ttu-id="4482e-207">如果为 <see langword="null" />，则指定应通过将 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> 属性的值添加到 <paramref name="validFrom" /> 参数指定的时间来确定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-207">
              <see langword="null" /> to specify that the value should be determined by adding the value of the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> property to the time specified by the  <paramref name="validFrom" /> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4482e-208">用指定的主体和启动令牌，并结合指定的开始时间和过期时间来初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-208">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class from the specified principal and bootstrap token; and with the specified start time and expiration time.</span>
          </span>
          <span data-ttu-id="4482e-209">限定范围为指定的终点的新的标识。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-209">The new token is scoped to the specified endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-210">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="4482e-210">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="4482e-211">Property</span><span class="sxs-lookup"><span data-stu-id="4482e-211">Property</span></span>|<span data-ttu-id="4482e-212">初始值</span><span class="sxs-lookup"><span data-stu-id="4482e-212">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|<span data-ttu-id="4482e-213">设置为生成的唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-213">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="4482e-214">设置为生成的唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-214">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<span data-ttu-id="4482e-215">设置为值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>属性由`ValidFrom`参数。</span><span class="sxs-lookup"><span data-stu-id="4482e-215">Set to the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> property as determined by the `ValidFrom` parameter.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="4482e-216">值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>属性由`ValidTo`参数。</span><span class="sxs-lookup"><span data-stu-id="4482e-216">The value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> property as determined by the `ValidTo` parameter.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="4482e-217">包含生成的 128 位的对称密钥。</span><span class="sxs-lookup"><span data-stu-id="4482e-217">Contains a generated 128 bit symmetric key.</span></span> <span data-ttu-id="4482e-218">**注意：** 的默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-218">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="4482e-219">签名和加密密钥由应用的 cookie 转换<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>处理该令牌。</span><span class="sxs-lookup"><span data-stu-id="4482e-219">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<span data-ttu-id="4482e-220">值`validFrom`参数，或者，如果`validFrom`是`null`， <xref:System.DateTime.UtcNow%2A>。</span><span class="sxs-lookup"><span data-stu-id="4482e-220">The value of the `validFrom` parameter, or, if `validFrom` is `null`, <xref:System.DateTime.UtcNow%2A>.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="4482e-221">`validFrom` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="4482e-221">The value of the `validFrom` parameter.</span></span> <span data-ttu-id="4482e-222">如果`validFrom`是`null`的值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>属性 (由`validFrom`参数) 以及<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-222">If `validFrom` is `null`, the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> property (as determined by the `validFrom` parameter) plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4482e-223">
            <paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-223">
              <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-224">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-224">-or-</span>
          </span>
          <span data-ttu-id="4482e-225">
            <paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-225">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-226">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-226">-or-</span>
          </span>
          <span data-ttu-id="4482e-227">
            <paramref name="endpointId" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-227">
              <paramref name="endpointId" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4482e-228">无法验证 <paramref name="validFrom" /> 和 <paramref name="validTo" /> 参数；例如，<paramref name="validTo" /> 指定早于 <paramref name="validFrom" /> 发生的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-228">The <paramref name="validFrom" /> and <paramref name="validTo" /> parameters cannot be validated; for example, <paramref name="validTo" /> specifies a time that occurs earlier than <paramref name="validFrom" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.TimeSpan lifetime, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, TimeSpan lifetime, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * TimeSpan * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, lifetime, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">
          <span data-ttu-id="4482e-229">与此会话关联的声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-229">The claims principal that is associated with this session.</span>
          </span>
        </param>
        <param name="contextId">
          <span data-ttu-id="4482e-230">与此标志关联的一个上下文标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-230">The context identifier associated with this token.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4482e-231">一个应用程序特定的可选上下文字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-231">An optional, application-specific context string.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="4482e-232">此标记所绑定的终点结。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-232">The endpoint to which this token is bound.</span>
          </span>
          <span data-ttu-id="4482e-233">空字符串将创建未区分范围的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-233">An empty string creates an unscoped token.</span>
          </span>
        </param>
        <param name="lifetime">
          <span data-ttu-id="4482e-234">会话令牌的生存期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-234">The lifetime of the session token.</span>
          </span>
          <span data-ttu-id="4482e-235">
            <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 属性将设置为 <see cref="P:System.DateTime.UtcNow" /> ，并且 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> 属性将设置为 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 加上该参数指定的时期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-235">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> property will be set to <see cref="P:System.DateTime.UtcNow" /> and the <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> property will be set to <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> plus the period specified by this parameter.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="4482e-236">一个可选的对称会话密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-236">An optional symmetric session key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4482e-237">使用指定的主体、上下文 ID、上下文、终结点、生存期和密钥初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-237">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class by using the specified principal, context ID, context, endpoint, lifetime, and key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-238">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="4482e-238">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="4482e-239">Property</span><span class="sxs-lookup"><span data-stu-id="4482e-239">Property</span></span>|<span data-ttu-id="4482e-240">初始值</span><span class="sxs-lookup"><span data-stu-id="4482e-240">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="4482e-241">设置为生成的唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-241">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="4482e-242"><xref:System.DateTime.UtcNow%2A> Plus `lifetime`</span><span class="sxs-lookup"><span data-stu-id="4482e-242"><xref:System.DateTime.UtcNow%2A> plus `lifetime`</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="4482e-243">包含单个元素，则`key`; 如果`key`是`null`，生成的 128 位的对称密钥。</span><span class="sxs-lookup"><span data-stu-id="4482e-243">Contains single element that is either `key` or, if `key` is `null`, a generated 128 bit symmetric key.</span></span> <span data-ttu-id="4482e-244">**注意：** 的默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-244">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="4482e-245">签名和加密密钥由应用的 cookie 转换<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>处理该令牌。</span><span class="sxs-lookup"><span data-stu-id="4482e-245">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="4482e-246"><xref:System.DateTime.UtcNow%2A> Plus `lifetime`</span><span class="sxs-lookup"><span data-stu-id="4482e-246"><xref:System.DateTime.UtcNow%2A> plus `lifetime`</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4482e-247">
            <paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-247">
              <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-248">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-248">-or-</span>
          </span>
          <span data-ttu-id="4482e-249">
            <paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-249">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-250">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-250">-or-</span>
          </span>
          <span data-ttu-id="4482e-251">
            <paramref name="contextId" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-251">
              <paramref name="contextId" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-252">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-252">-or-</span>
          </span>
          <span data-ttu-id="4482e-253">
            <paramref name="endpointId" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-253">
              <paramref name="endpointId" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4482e-254">
            <paramref name="lifetime" /> 小于或等于 <see cref="F:System.TimeSpan.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-254">
              <paramref name="lifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, DateTime validFrom, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.DateTime validFrom, valuetype System.TimeSpan lifetime, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, DateTime validFrom, TimeSpan lifetime, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * DateTime * TimeSpan * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, validFrom, lifetime, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.DateTime" />
        <Parameter Name="lifetime" Type="System.TimeSpan" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">
          <span data-ttu-id="4482e-255">与此会话关联的声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-255">The claims principal that is associated with this session.</span>
          </span>
        </param>
        <param name="contextId">
          <span data-ttu-id="4482e-256">与此标志关联的一个上下文标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-256">The context identifier associated with this token.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4482e-257">一个应用程序特定的可选上下文字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-257">An optional, application-specific context string.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="4482e-258">此标记所绑定的终点结。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-258">The endpoint to which this token is bound.</span>
          </span>
          <span data-ttu-id="4482e-259">空字符串将创建未区分范围的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-259">An empty string creates an unscoped token.</span>
          </span>
        </param>
        <param name="validFrom">
          <span data-ttu-id="4482e-260">标记变为有效的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-260">The time at which the token becomes valid.</span>
          </span>
        </param>
        <param name="lifetime">
          <span data-ttu-id="4482e-261">会话令牌的生存期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-261">The lifetime of the session token.</span>
          </span>
          <span data-ttu-id="4482e-262">
            <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> 属性将设置为 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> 加上该参数指定的时期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-262">The <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" /> property will be set to <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" /> plus the period specified by this parameter.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="4482e-263">一个可选的对称会话密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-263">An optional symmetric session key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4482e-264">使用指定的主体、上下文 ID、上下文、终结点、有效时间戳、生存期和密钥初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-264">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class by using the specified principal, context ID, context, endpoint, valid timestamp, lifetime, and key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-265">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="4482e-265">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="4482e-266">Property</span><span class="sxs-lookup"><span data-stu-id="4482e-266">Property</span></span>|<span data-ttu-id="4482e-267">初始值</span><span class="sxs-lookup"><span data-stu-id="4482e-267">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|<span data-ttu-id="4482e-268">`contextId` 或者，如果`contextId`是`null`，生成唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-268">`contextId` or, if `contextId` is `null`, a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="4482e-269">设置为生成的唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-269">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|`validFrom`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="4482e-270">`validFrom` 加上`lifetime`。</span><span class="sxs-lookup"><span data-stu-id="4482e-270">`validFrom` plus `lifetime`.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="4482e-271">包含单个元素，则`key`; 如果`key`是`null`，生成的 128 位的对称密钥。</span><span class="sxs-lookup"><span data-stu-id="4482e-271">Contains single element that is either `key` or, if `key` is `null`, a generated 128 bit symmetric key.</span></span> <span data-ttu-id="4482e-272">**注意：** 的默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-272">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="4482e-273">签名和加密密钥由应用的 cookie 转换<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>处理该令牌。</span><span class="sxs-lookup"><span data-stu-id="4482e-273">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|`validFrom`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="4482e-274">`validFrom` 加上`lifetime`。</span><span class="sxs-lookup"><span data-stu-id="4482e-274">`validFrom` plus `lifetime`.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4482e-275">
            <paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-275">
              <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-276">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-276">-or-</span>
          </span>
          <span data-ttu-id="4482e-277">
            <paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-277">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-278">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-278">-or-</span>
          </span>
          <span data-ttu-id="4482e-279">
            <paramref name="contextId" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-279">
              <paramref name="contextId" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-280">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-280">-or-</span>
          </span>
          <span data-ttu-id="4482e-281">
            <paramref name="endpointId" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-281">
              <paramref name="endpointId" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="4482e-282">
            <paramref name="lifetime" /> 小于或等于 <see cref="F:System.TimeSpan.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-282">
              <paramref name="lifetime" /> is less than or equal to <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo, System.IdentityModel.Tokens.SymmetricSecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal claimsPrincipal, class System.Xml.UniqueId contextId, string context, string endpointId, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validFrom, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; validTo, class System.IdentityModel.Tokens.SymmetricSecurityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityToken(System::Security::Claims::ClaimsPrincipal ^ claimsPrincipal, System::Xml::UniqueId ^ contextId, System::String ^ context, System::String ^ endpointId, Nullable&lt;DateTime&gt; validFrom, Nullable&lt;DateTime&gt; validTo, System::IdentityModel::Tokens::SymmetricSecurityKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Tokens.SessionSecurityToken : System.Security.Claims.ClaimsPrincipal * System.Xml.UniqueId * string * string * Nullable&lt;DateTime&gt; * Nullable&lt;DateTime&gt; * System.IdentityModel.Tokens.SymmetricSecurityKey -&gt; System.IdentityModel.Tokens.SessionSecurityToken" Usage="new System.IdentityModel.Tokens.SessionSecurityToken (claimsPrincipal, contextId, context, endpointId, validFrom, validTo, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimsPrincipal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="endpointId" Type="System.String" />
        <Parameter Name="validFrom" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="validTo" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </Parameters>
      <Docs>
        <param name="claimsPrincipal">
          <span data-ttu-id="4482e-283">与此会话关联的声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-283">The claims principal that is associated with this session.</span>
          </span>
        </param>
        <param name="contextId">
          <span data-ttu-id="4482e-284">与此标志关联的一个上下文标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-284">The context identifier associated with this token.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4482e-285">一个应用程序特定的可选上下文字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-285">An optional, application-specific context string.</span>
          </span>
        </param>
        <param name="endpointId">
          <span data-ttu-id="4482e-286">此标记所绑定的终点结。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-286">The endpoint to which this token is bound.</span>
          </span>
          <span data-ttu-id="4482e-287">空字符串将创建未区分范围的标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-287">An empty string creates an unscoped token.</span>
          </span>
        </param>
        <param name="validFrom">
          <span data-ttu-id="4482e-288">标记变为有效的时间时刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-288">The time instant at which the token becomes valid.</span>
          </span>
          <span data-ttu-id="4482e-289">如果为 <see langword="null" />，则指定 <see cref="P:System.DateTime.UtcNow" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-289">
              <see langword="null" /> to specify <see cref="P:System.DateTime.UtcNow" /></span>
          </span>
        </param>
        <param name="validTo">
          <span data-ttu-id="4482e-290">其后时间不再有效的时间时刻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-290">The time instant after which the token is no longer valid.</span>
          </span>
          <span data-ttu-id="4482e-291">如果为 <see langword="null" />，则指定应通过将 <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> 属性的值添加到 <paramref name="validFrom" /> 参数指定的时间来确定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-291">
              <see langword="null" /> to specify that the value should be determined by adding the value of the <see cref="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" /> property to the time specified by the <paramref name="validFrom" /> parameter.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="4482e-292">一个可选的对称会话密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-292">An optional symmetric session key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4482e-293">使用指定的主体、上下文 ID、上下文、终结点、开始时间、过期时间和密钥初始化 <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-293">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SessionSecurityToken" /> class by using the specified principal, context ID, context, endpoint, start time, expiration time, and key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-294">下表显示了 <xref:System.IdentityModel.Tokens.SessionSecurityToken> 类的某个实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="4482e-294">The following table shows initial property values for an instance of the <xref:System.IdentityModel.Tokens.SessionSecurityToken> class.</span></span>  
  
|<span data-ttu-id="4482e-295">Property</span><span class="sxs-lookup"><span data-stu-id="4482e-295">Property</span></span>|<span data-ttu-id="4482e-296">初始值</span><span class="sxs-lookup"><span data-stu-id="4482e-296">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|<span data-ttu-id="4482e-297">设置为生成的唯一 id。</span><span class="sxs-lookup"><span data-stu-id="4482e-297">Set to a generated unique ID.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<span data-ttu-id="4482e-298">设置为值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>属性由`ValidFrom`参数。</span><span class="sxs-lookup"><span data-stu-id="4482e-298">Set to the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> property as determined by the `ValidFrom` parameter.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<span data-ttu-id="4482e-299">值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>属性由`ValidTo`参数。</span><span class="sxs-lookup"><span data-stu-id="4482e-299">The value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> property as determined by the `ValidTo` parameter.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|<span data-ttu-id="4482e-300">包含单个元素，则`key`; 如果`key`是`null`，生成的 128 位的对称密钥。</span><span class="sxs-lookup"><span data-stu-id="4482e-300">Contains single element that is either `key` or, if `key` is `null`, a generated 128 bit symmetric key.</span></span> <span data-ttu-id="4482e-301">**注意：** 的默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-301">**Note:**  The default implementation does not use this property.</span></span> <span data-ttu-id="4482e-302">签名和加密密钥由应用的 cookie 转换<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>处理该令牌。</span><span class="sxs-lookup"><span data-stu-id="4482e-302">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<span data-ttu-id="4482e-303">值`validFrom`参数，或者，如果`validFrom`是`null`， <xref:System.DateTime.UtcNow%2A>。</span><span class="sxs-lookup"><span data-stu-id="4482e-303">The value of the `validFrom` parameter, or, if `validFrom` is `null`, <xref:System.DateTime.UtcNow%2A>.</span></span>|  
|<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<span data-ttu-id="4482e-304">`validFrom` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="4482e-304">The value of the `validFrom` parameter.</span></span> <span data-ttu-id="4482e-305">如果`validFrom`是`null`的值<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>属性 (由`validFrom`参数) 以及<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-305">If `validFrom` is `null`, the value of the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> property (as determined by the `validFrom` parameter) plus the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=nameWithType> property.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4482e-306">
            <paramref name="claimsPrincipal" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-306">
              <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-307">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-307">-or-</span>
          </span>
          <span data-ttu-id="4482e-308">
            <paramref name="claimsPrincipal" /> 的 <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> 属性为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-308">The <see cref="P:System.Security.Claims.ClaimsPrincipal.Identities" /> property of <paramref name="claimsPrincipal" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4482e-309">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-309">-or-</span>
          </span>
          <span data-ttu-id="4482e-310">
            <paramref name="contextId" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-310">
              <paramref name="contextId" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4482e-311">
            <paramref name="validFrom" /> 大于或等于 <paramref name="validTo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-311">
              <paramref name="validFrom" /> is greater than or equal to <paramref name="validTo" />.</span>
          </span>
          <span data-ttu-id="4482e-312">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-312">-or-</span>
          </span>
          <span data-ttu-id="4482e-313">当前时间小于 <paramref name="validTo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-313">
              <paramref name="validTo" /> is less than the current time.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal ClaimsPrincipal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClaimsPrincipal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ ClaimsPrincipal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClaimsPrincipal : System.Security.Claims.ClaimsPrincipal" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-314">获取与此会话关联的声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-314">Gets the claims principal associated with the session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-315">声明主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-315">The claims principal.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public string Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Context" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Context { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-316">获取用户指定上下文的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-316">Gets a user specified context value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-317">用户指定上下文的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-317">The user specified context value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-318">此属性可用于存储特定于应用程序的上下文。</span><span class="sxs-lookup"><span data-stu-id="4482e-318">You can use this property to store application-specific context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId ContextId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextId As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ ContextId { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextId : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ContextId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-319">获取会话上下文标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-319">Gets the session context identifier</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-320">会话上下文标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-320">The session context identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-321">跨所有会话令牌是唯一的上下文标识符。</span><span class="sxs-lookup"><span data-stu-id="4482e-321">The context identifier is unique across all session tokens.</span></span>  
  
 <span data-ttu-id="4482e-322"><xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>类使用的上下文 ID 和密钥生成来生成中的令牌的密钥<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>。</span><span class="sxs-lookup"><span data-stu-id="4482e-322">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class uses both the context ID and the key generation to generate a key for the token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span>  
  
 <span data-ttu-id="4482e-323"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>类将为此属性序列化为`<Identifier>`的子元素`<wsc:SecurityContextToken>`元素。</span><span class="sxs-lookup"><span data-stu-id="4482e-323">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes this property as the `<Identifier>` child element of the `<wsc:SecurityContextToken>` element.</span></span> <span data-ttu-id="4482e-324">有关详细信息，请参阅的文档<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4482e-324">For more information, see the documentation for the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Docs>
    </Member>
    <Member MemberName="EndpointId">
      <MemberSignature Language="C#" Value="public string EndpointId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EndpointId" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EndpointId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndpointId : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-325">获取限定此标识范围的终点 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-325">Gets the ID of the endpoint to which this token is scoped.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-326">终点的 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-326">The ID of the endpoint.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4482e-327">如果<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>属性是`null`，全局划分作用域由该会话令牌被视为<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>类。</span><span class="sxs-lookup"><span data-stu-id="4482e-327">If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> property is `null`, the session token is treated as globally scoped by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class.</span></span> <span data-ttu-id="4482e-328">这可能会造成潜在的安全风险。</span><span class="sxs-lookup"><span data-stu-id="4482e-328">This can present a potential security risk.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="sessionSecurityToken.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="4482e-329">序列化的对象数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-329">The serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4482e-330">关于来源和目标的上下文信息</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-330">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4482e-331">设置需要序列化会话安全标记的信息 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-331">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information necessary to serialize the session security token.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.IdentityModel.Tokens.SessionSecurityToken.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-332">获取此标记的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-332">Gets the unique identifier of this token.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-333">令牌 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-333">The token ID.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-334"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>类将为此属性序列化为`Id`属性的`<wsc:SecurityContextToken>`元素。</span><span class="sxs-lookup"><span data-stu-id="4482e-334">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes this property as the `Id` attribute of the `<wsc:SecurityContextToken>` element.</span></span> <span data-ttu-id="4482e-335">有关详细信息，请参阅的文档<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4482e-335">For more information, see the documentation for the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPersistent">
      <MemberSignature Language="C#" Value="public bool IsPersistent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPersistent" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPersistent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPersistent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPersistent : bool with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-336">获取或设置指示是否保留此标记表示的 Cookie 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-336">Gets or sets a value that indicates whether the cookie represented by this token is persistent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-337">如果 cookie 为持久的，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-337">
              <see langword="true" /> if the cookie is persistent; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-338">如果<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>属性是`true`，cookie 编写为持久性 cookie。</span><span class="sxs-lookup"><span data-stu-id="4482e-338">If the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> property is `true`, the cookie is written as a persistent cookie.</span></span> <span data-ttu-id="4482e-339">在到期之前关闭浏览器后，持久性 cookie 保持有效。</span><span class="sxs-lookup"><span data-stu-id="4482e-339">Persistent cookies remain valid after the browser is closed until they expire.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReferenceMode">
      <MemberSignature Language="C#" Value="public bool IsReferenceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceMode" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReferenceMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceMode : bool with get, set" Usage="System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-340">获取或设置指示引用安全令牌是否在会话模式下运行的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-340">Gets or sets a value that indicates whether the session security token is operating in reference mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-341">如果标记在会话模式操作，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-341">
              <see langword="true" /> if the token is operating in session mode; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-342">在引用模式下，在序列化期间生成一个简单的项目和与令牌处理程序相关联的令牌缓存中存储的令牌的材料。</span><span class="sxs-lookup"><span data-stu-id="4482e-342">In reference mode, a simple artifact is produced during serialization and the token material is stored in the token cache that is associated with the token handler.</span></span> <span data-ttu-id="4482e-343">令牌缓存是派生的类的实例<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>。</span><span class="sxs-lookup"><span data-stu-id="4482e-343">The token cache is an instance of a class that derives from <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span> <span data-ttu-id="4482e-344">对于 Web 场方案中，令牌缓存必须运行跨服务器场中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="4482e-344">For Web Farm scenarios, the token cache must operate across all nodes in the farm.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4482e-345">若要在引用模式下操作提供的处理程序的 Microsoft 建议<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType>中的 global.asax.cs 文件和设置事件<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>令牌上的属性中传递<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-345">To operate in reference mode, Microsoft recommends providing a handler for the <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> event in the global.asax.cs file and setting the <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> property on the token passed in the <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="4482e-346">这将确保会话令牌引用的每个请求的模式下运行，并且更倾向于只设置<xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType>会话身份验证模块上的属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-346">This will ensure that the session token operates in reference mode for every request and is favored over merely setting the <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> property on the Session Authentication Module.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
        <altmember cref="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode" />
      </Docs>
    </Member>
    <Member MemberName="KeyEffectiveTime">
      <MemberSignature Language="C#" Value="public DateTime KeyEffectiveTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime KeyEffectiveTime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyEffectiveTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime KeyEffectiveTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyEffectiveTime : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-347">获取此安全令牌有效的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-347">Gets the time instant from which the key in this token is valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-348">密钥生效的有效时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-348">The time instant from which the key is effective.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExpirationTime">
      <MemberSignature Language="C#" Value="public DateTime KeyExpirationTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime KeyExpirationTime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyExpirationTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime KeyExpirationTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExpirationTime : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-349">获取此安全令牌失效之后的有效的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-349">Gets the time instant after which the key in this token is no longer valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-350">密钥到期的有效时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-350">The time instant at which the key expires.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyGeneration">
      <MemberSignature Language="C#" Value="public System.Xml.UniqueId KeyGeneration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.UniqueId KeyGeneration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyGeneration As UniqueId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::UniqueId ^ KeyGeneration { System::Xml::UniqueId ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyGeneration : System.Xml.UniqueId" Usage="System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-351">获取该标记中用于密钥生成的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-351">Gets the identifier for the key generation in this token</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-352">标记中生成密钥的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-352">The unique identifier for the key generation in this token.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-353"><xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>属性中是唯一的会话令牌。</span><span class="sxs-lookup"><span data-stu-id="4482e-353">The <xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> property is unique within a session token.</span></span> <span data-ttu-id="4482e-354">当会话令牌颁发时具有仅限上下文 ID，这是可通过访问<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-354">When a session token is issued it has only a context ID, which is accessible through the <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> property.</span></span> <span data-ttu-id="4482e-355">续订的会话令牌时，将添加密钥生成。</span><span class="sxs-lookup"><span data-stu-id="4482e-355">When the session token is renewed, the key generation is added.</span></span>  
  
 <span data-ttu-id="4482e-356"><xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>类使用的上下文 ID 和密钥生成来生成中的令牌的密钥<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>。</span><span class="sxs-lookup"><span data-stu-id="4482e-356">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey> class uses both the context ID and the key generation to generate a key for the token in the <xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>.</span></span>  
  
 <span data-ttu-id="4482e-357"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>类将为此属性序列化为`<Instance>`的子元素`<wsc:SecurityContextToken>`元素。</span><span class="sxs-lookup"><span data-stu-id="4482e-357">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class serializes this property as the `<Instance>` child element of the `<wsc:SecurityContextToken>` element.</span></span> <span data-ttu-id="4482e-358">有关详细信息，请参阅的文档<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="4482e-358">For more information, see the documentation for the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </Docs>
    </Member>
    <Member MemberName="SecureConversationVersion">
      <MemberSignature Language="C#" Value="public Uri SecureConversationVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SecureConversationVersion" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecureConversationVersion As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SecureConversationVersion { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecureConversationVersion : Uri" Usage="System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-359">获取一个 URI，标识用于序列化此会话安全令牌的 WS 安全会话的版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-359">Gets a URI that identifies the version of WS-Secure Conversation that is used to serialize this session security token.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-360">一个 URI，标识用于序列化此令牌的 WS 安全会话的版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-360">The URI that identifies the version of WS-Secure Conversation that is used to serialize this token.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4482e-361"><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>基类支持 WS 安全会话 Feb2005 和 Ws-secure Conversation 1.3。</span><span class="sxs-lookup"><span data-stu-id="4482e-361">The <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> base class supports WS-Secure Conversation Feb2005 and WS-Secure Conversation 1.3.</span></span> <span data-ttu-id="4482e-362">对于这些版本的 Ws-secure Conversation Uri 是"http://schemas.xmlsoap.org/ws/2005/02/sc"和"http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512"分别。</span><span class="sxs-lookup"><span data-stu-id="4482e-362">The URIs for these versions of WS-Secure Conversation are "http://schemas.xmlsoap.org/ws/2005/02/sc" and "http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512" respectively.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;" Usage="System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-363">获取与此会话关联的键 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-363">Gets the keys associated with this session.</span>
          </span>
          <span data-ttu-id="4482e-364">这通常是一个唯一密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-364">This is usually a single key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-365">与会话关联的密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-365">The keys associated with the session.</span>
          </span>
          <span data-ttu-id="4482e-366">这通常是一个唯一密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-366">There is usually a single key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="4482e-367">默认实现不使用此属性。</span><span class="sxs-lookup"><span data-stu-id="4482e-367">The default implementation does not use this property.</span></span> <span data-ttu-id="4482e-368">签名和加密密钥由应用的 cookie 转换<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>处理该令牌。</span><span class="sxs-lookup"><span data-stu-id="4482e-368">Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public override DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidFrom { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidFrom : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-369">获取此标记有效的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-369">Gets the time instant from which the token is valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-370">从标记变为有效的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-370">The time from which the token is valid.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public override DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidTo { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidTo : DateTime" Usage="System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4482e-371">获取时间不再有效之后的有效的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-371">Gets the time instant after which the token is no longer valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4482e-372">标记之后的时间不再有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4482e-372">The time after which the token is no longer valid.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>