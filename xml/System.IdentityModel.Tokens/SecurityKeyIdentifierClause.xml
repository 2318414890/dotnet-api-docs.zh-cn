<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecurityKeyIdentifierClause.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae058455203f52741ce0bd8a26fb2577bb71adb30800e3ebe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03f52741ce0bd8a26fb2577bb71adb30800e3ebe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
          <source>Represents an abstract base class for a key identifier clause.</source>
          <target state="translated">表示密钥标识符子句的抽象基类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
          <source>Typically, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph> does not need to be used, other than when a custom security token service is created.</source>
          <target state="translated">除非创建自定义安全令牌服务，否则，通常不需要使用 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
          <target state="translated">当安全令牌服务返回安全令牌时，已颁发的安全令牌包含对附加的和未附加的安全令牌的引用。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message.</source>
          <target state="translated">附加引用所引用的是包含在 SOAP 消息的安全标头中的安全令牌，而未附加引用则引用未包含在 SOAP 消息的安全标头中的安全令牌。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
          <source>These references typically affirm the authenticity of the issued security token.</source>
          <target state="translated">这些引用通常确认已颁发的安全令牌的真实性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)">
          <source>The key identifier clause type.</source>
          <target state="translated">密钥标识符子句类型。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> property.</source>
          <target state="translated">设置 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> 属性的值。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> class using the specified key identifier clause type.</source>
          <target state="translated">使用指定的密钥标识符子句类型初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)">
          <source>When this security key identifier is serialized into XML, the <ph id="ph1">`clauseType`</ph> parameter is serialized as the <ph id="ph2">`ValueType`</ph> attribute of the <ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph> element.</source>
          <target state="translated">在此安全密钥标识符序列化为 XML 时，<ph id="ph1">`clauseType`</ph> 参数将序列化为 <ph id="ph2">`ValueType`</ph> 元素的 <ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph> 属性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The key identifier clause type.</source>
          <target state="translated">密钥标识符子句类型。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
          <source>Sets the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> property.</source>
          <target state="translated">设置 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" /&gt;</ph> 属性的值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> class using the specified key identifier clause type, nonce, and the derived key length.</source>
          <target state="translated">使用指定的密钥标识符子句类型、Nonce 和派生密钥长度来初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
          <source><ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> does not support the creation of implied derived key identifiers.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> 不支持创建隐含的派生密钥标识符。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
          <source>However, <ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> processes incoming SOAP messages that contain implied key identifier.</source>
          <target state="translated">但 <ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> 会处理包含隐含密钥标识符的传入 SOAP 消息。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
          <source>Gets a value that indicates whether a key can be created.</source>
          <target state="translated">获取一个值，该值指示是否可以创建密钥。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a key can be created; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果可以创建密钥，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
          <source>When a key can be created using the parameters passed into a constructor, override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A&gt;</ph> method to return <ph id="ph2">`true`</ph> and implement the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A&gt;</ph> method.</source>
          <target state="translated">当可以使用传入构造函数的参数创建密钥时，应重写 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A&gt;</ph> 方法以返回 <ph id="ph2">`true`</ph> 并实现 <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType">
          <source>Gets the key identifier clause type.</source>
          <target state="translated">获取密钥标识符子句类型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType">
          <source>The key identifier clause type.</source>
          <target state="translated">密钥标识符子句类型。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
          <source>Creates a key based on the parameters passed into the constructor.</source>
          <target state="translated">基于传入构造函数的参数创建密钥。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
          <source>A <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKey" /&gt;</ph> that contains the created key.</source>
          <target state="translated">一个包含已创建的密钥的 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.SecurityKey" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
          <source>When a key can be created using the parameters passed into a constructor, override the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A&gt;</ph> method to return <ph id="ph2">`true`</ph> and implement the <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A&gt;</ph> method.</source>
          <target state="translated">当可以使用传入构造函数的参数创建密钥时，应重写 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A&gt;</ph> 方法以返回 <ph id="ph2">`true`</ph> 并实现 <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength">
          <source>Gets the size of the derived key.</source>
          <target state="translated">获取派生密钥的大小。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength">
          <source>The size of the derived key.</source>
          <target state="translated">派生密钥的大小。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength">
          <source><ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> does not support the creation of implied derived key identifiers.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> 不支持创建隐含的派生密钥标识符。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength">
          <source>However, <ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> processes incoming SOAP messages that contain implied key identifier.</source>
          <target state="translated">但 <ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> 会处理包含隐含密钥标识符的传入 SOAP 消息。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce">
          <source>Gets the nonce that was used to generate the derived key.</source>
          <target state="translated">获取用于生成派生密钥的 Nonce。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the nonce that was used to generate the derived key.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 数组，包含用于生成派生密钥的 Nonce。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce">
          <source><ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> does not support the creation of implied derived key identifiers.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> 不支持创建隐含的派生密钥标识符。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce">
          <source>However, <ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> processes incoming SOAP messages that contain implied key identifier.</source>
          <target state="translated">但 <ph id="ph1">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> 会处理包含隐含密钥标识符的传入 SOAP 消息。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id">
          <source>Gets or sets the key identifier clause ID.</source>
          <target state="translated">获取或设置密钥标识符子句 ID。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id">
          <source>The key identifier clause ID.</source>
          <target state="translated">密钥标识符子句 ID。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id">
          <source>When this security key identifier is serialized into XML, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id%2A&gt;</ph> property is serialized as the <ph id="ph2">`Id`</ph> attribute of the <ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph> element.</source>
          <target state="translated">当此安全密钥标识符序列化为 XML，<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id%2A&gt;</ph>属性序列化为<ph id="ph2">`Id`</ph>属性<ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph>元素。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id">
          <source>If the property is <ph id="ph1">`null`</ph>, an <ph id="ph2">`Id`</ph> attribute is not included in the <ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph> element.</source>
          <target state="translated">如果属性是<ph id="ph1">`null`</ph>、<ph id="ph2">`Id`</ph>属性不包含在<ph id="ph3">`&lt;SecurityTokenReference&gt;`</ph>元素。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</source>
          <target state="translated">返回一个值，该值指示此实例的密钥标识符是否等效于指定的密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="keyIdentifierClause" /&gt;</ph> is the same instance as the current instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="keyIdentifierClause" /&gt;</ph> 是与当前实例相同的实例，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="keyIdentifierClause" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keyIdentifierClause" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>