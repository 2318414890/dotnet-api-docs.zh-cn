<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="X509AsymmetricSecurityKey.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b95330e164f87ecbdbada249242c9c239c157364.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b95330e164f87ecbdbada249242c9c239c157364</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
          <source>Represents an asymmetric key for X.509 certificates.</source>
          <target state="translated">表示 X.509 证书的非对称密钥。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph> that represents the X.509 certificate.</source>
          <target state="translated">表示 X.509 证书的 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" /&gt;</ph> class using the specified X.509 certificate.</source>
          <target state="translated">使用指定的 X.509 证书初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <source><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="certificate" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>The cryptographic algorithm to decrypt the key.</source>
          <target state="translated">用于解密密钥的加密算法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the encrypted key.</source>
          <target state="translated">包含加密密钥的 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 数组。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>Decrypts the specified encrypted key using the specified cryptographic algorithm.</source>
          <target state="translated">使用指定的加密算法解密指定的加密密钥。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the decrypted key.</source>
          <target state="translated">包含解密密钥的 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 数组。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;</ph> fields to specify the algorithm.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;</ph> 或 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;</ph> 字段指定算法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>The X.509 certificate specified in the constructor does not have a private key.</source>
          <target state="translated">构造函数中指定的 X.509 证书不具有私钥。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>The X.509 certificate has a private key, but it was not generated using the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm.</source>
          <target state="translated">X.509 证书具有私钥，但它不是使用 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 算法生成的。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>The X.509 certificate has a private key, it was generated using the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm, but the <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" /&gt;</ph> property is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">X.509 证书具有私钥，并且是使用 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 算法生成的，但是 <ph id="ph2">&lt;see cref="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" /&gt;</ph> 属性为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> parameter is not supported.</source>
          <target state="translated">不支持 <ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> 参数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
          <source>The supported algorithms are <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" /&gt;</ph>.</source>
          <target state="translated">支持的算法为 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>The cryptographic algorithm to encrypt the key.</source>
          <target state="translated">用于加密密钥的加密算法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the key to encrypt.</source>
          <target state="translated">包含要加密的密钥的 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 数组。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>Encrypts the specified encrypted key using the specified cryptographic algorithm.</source>
          <target state="translated">使用指定的加密算法加密指定的加密密钥。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the encrypted key.</source>
          <target state="translated">包含加密密钥的 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 数组。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;</ph> fields to specify the algorithm.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;</ph> 或 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;</ph> 字段指定算法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>The X.509 certificate specified in the constructor has a public key that was not generated using the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> algorithm.</source>
          <target state="translated">构造函数中指定的 X.509 证书所具有的公钥不是使用 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph> 算法生成的。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> parameter is not supported.</source>
          <target state="translated">不支持 <ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> 参数。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
          <source>The supported algorithms are <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" /&gt;</ph>.</source>
          <target state="translated">支持的算法为 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <source>The asymmetric algorithm to create.</source>
          <target state="translated">要创建的非对称算法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when a private key is required to create the algorithm; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果需要使用私钥来创建算法，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <source>Gets the specified asymmetric cryptographic algorithm.</source>
          <target state="translated">获取指定的非对称加密算法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph> that represents the specified asymmetric cryptographic algorithm.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /&gt;</ph>，表示指定的非对称加密算法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> or <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> fields to specify the <ph id="ph6">`algorithm`</ph> parameter.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph>、<ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;</ph>、<ph id="ph3">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;</ph>、<ph id="ph4">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> 或 <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> 字段指定 <ph id="ph6">`algorithm`</ph> 参数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="privateKey" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the X.509 certificate specified in the constructor does not have a private key.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="privateKey" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，并且构造函数中指定的 X.509 证书不具有私钥。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph> and the public or private key for the X.509 certificate specified in the constructor is not of type <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph>，并且构造函数中指定的 X.509 证书的公钥或私钥类型不是 <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph> or <ph id="ph5">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph> and the public or private key for the X.509 certificate specified in the constructor is not of type <ph id="ph6">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" /&gt;</ph>、<ph id="ph4">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph> 或 <ph id="ph5">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>，并且构造函数中指定的 X.509 证书的公钥或私钥类型不是 <ph id="ph6">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is not supported.</source>
          <target state="translated">不支持 <ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <source>The supported algorithms are <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph>, and <ph id="ph5">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>.</source>
          <target state="translated">支持的算法为 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph>、<ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" /&gt;</ph>、<ph id="ph4">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph> 和 <ph id="ph5">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
          <source>The hash algorithm.</source>
          <target state="translated">哈希算法。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
          <source>Gets a cryptographic algorithm that generates a hash for a digital signature.</source>
          <target state="translated">获取用于生成数字签名的哈希值的加密算法。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph> that generates hashes for digital signatures.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HashAlgorithm" /&gt;</ph>，它生成数字签名的哈希值。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> or <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> fields to specify the <ph id="ph4">`algorithm`</ph> parameter.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph>、<ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> 或 <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> 字段指定 <ph id="ph4">`algorithm`</ph> 参数。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is not supported.</source>
          <target state="translated">不支持 <ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
          <source>The supported algorithms are <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph>, <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph>, and <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>.</source>
          <target state="translated">支持的算法为 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph>、<ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <source>The de-formatter algorithm for the digital signature to get an instance of.</source>
          <target state="translated">要获取其实例的数字签名的反格式化程序算法。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <source>Gets the de-formatter algorithm for the digital signature.</source>
          <target state="translated">获取数字签名的反格式化程序算法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /&gt;</ph> that represents the de-formatter algorithm for the digital signature.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /&gt;</ph>，它表示数字签名的反格式化程序算法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> or <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> fields to specify the <ph id="ph4">`algorithm`</ph> parameter.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph>、<ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> 或 <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> 字段指定 <ph id="ph4">`algorithm`</ph> 参数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph> and the public key for the X.509 certificate specified in the constructor is not of type <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph>，并且构造函数中指定的 X.509 证书的公钥类型不是 <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph> and the public key for the X.509 certificate specified in the constructor is not of type <ph id="ph4">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>，并且构造函数中指定的 X.509 证书的公钥类型不是 <ph id="ph4">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is not supported.</source>
          <target state="translated">不支持 <ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <source>The supported algorithms are <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph>,</source>
          <target state="translated">支持的算法为 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph>、</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <source><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph>, and <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <source>The formatter algorithm for the digital signature to get an instance of.</source>
          <target state="translated">要获取其实例的数字签名的格式化程序算法。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <source>Gets the formatter algorithm for the digital signature.</source>
          <target state="translated">获取数字签名的格式化程序算法。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /&gt;</ph> that represents the formatter algorithm for the digital signature.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" /&gt;</ph>，它表示数字签名的格式化程序算法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> or <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> fields to specify the <ph id="ph4">`algorithm`</ph> parameter.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph>、<ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> 或 <ph id="ph3">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> 字段指定 <ph id="ph4">`algorithm`</ph> 参数。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <source>The X.509 certificate specified in the constructor does not have a private key.</source>
          <target state="translated">构造函数中指定的 X.509 证书不具有私钥。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph> and the private key for the X.509 certificate specified in the constructor is not of type <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph>，并且构造函数中指定的 X.509 证书的私钥类型不是 <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.DSA" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph> and the private key for the X.509 certificate specified in the constructor is not of type <ph id="ph4">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> 为 <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>，并且构造函数中指定的 X.509 证书的私钥类型不是 <ph id="ph4">&lt;see cref="T:System.Security.Cryptography.RSA" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <source><ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph> is not supported.</source>
          <target state="translated">不支持 <ph id="ph1">&lt;paramref name="algorithm" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <source>The supported algorithms are <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph>,</source>
          <target state="translated">支持的算法为 <ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph>、</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <source><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph>, and <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey">
          <source>Gets a value that indicates whether the private key is a available.</source>
          <target state="translated">获取一个值，该值指示该私钥是否可用。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when the private key is available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果私钥可用，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
          <source>The cryptographic algorithm.</source>
          <target state="translated">加密算法。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
          <source>Gets a value that indicates whether the specified algorithm uses asymmetric keys.</source>
          <target state="translated">获取一个值，该值指示指定的算法是否使用非对称密钥。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when the specified algorithm is <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" /&gt;</ph>, or <ph id="ph6">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" /&gt;</ph>; otherwise, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的算法为 <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" /&gt;</ph>、<ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>、<ph id="ph5">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" /&gt;</ph> 或 <ph id="ph6">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph7">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
          <source>The cryptographic algorithm.</source>
          <target state="translated">加密算法。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
          <source>Gets a value that indicates whether the specified algorithm is supported by this class.</source>
          <target state="translated">获取一个值，该值指示此类是否支持指定的算法。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when the specified algorithm is <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph>, or <ph id="ph6">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph> and the public key is of the right type; otherwise, <ph id="ph7">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的算法为 <ph id="ph2">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url" /&gt;</ph>、<ph id="ph4">&lt;see cref="F:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl" /&gt;</ph>、<ph id="ph5">&lt;see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url" /&gt;</ph> 或 <ph id="ph6">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" /&gt;</ph>，并且公钥的类型是正确的，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph7">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> when one of the following is true:</source>
          <target state="translated">当下列条件之一为 true 时 <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm%2A&gt;</ph> 方法返回 <ph id="ph2">`true`</ph>：</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
          <source>The <ph id="ph1">`algorithm`</ph> parameter is <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph> and the public key for the X.509 certificate specified in the constructor is of type <ph id="ph3">&lt;xref:System.Security.Cryptography.DSA&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph> 参数为 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl&gt;</ph>，并且构造函数中指定的 X.509 证书的公钥类型为 <ph id="ph3">&lt;xref:System.Security.Cryptography.DSA&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
          <source>The <ph id="ph1">`algorithm`</ph> parameter is <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;</ph>, <ph id="ph4">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> or <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph> and the public key for the X.509 certificate specified in the constructor is of type <ph id="ph6">&lt;xref:System.Security.Cryptography.RSA&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`algorithm`</ph> 参数为 <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url&gt;</ph>、<ph id="ph3">&lt;xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl&gt;</ph>、<ph id="ph4">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url&gt;</ph> 或 <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature&gt;</ph>，并且构造函数中指定的 X.509 证书的公钥类型为 <ph id="ph6">&lt;xref:System.Security.Cryptography.RSA&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
          <source>The cryptographic algorithm.</source>
          <target state="translated">加密算法。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
          <source>Gets a value that indicates whether the specified algorithm uses symmetric keys.</source>
          <target state="translated">获取一个值，该值指示指定的算法是否使用对称密钥。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> when the specified algorithm is <ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /&gt;</ph>, <ph id="ph5">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" /&gt;</ph>, <ph id="ph6">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" /&gt;</ph>, <ph id="ph7">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" /&gt;</ph>, <ph id="ph8">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /&gt;</ph>, <ph id="ph9">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /&gt;</ph>, <ph id="ph10">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" /&gt;</ph>, or <ph id="ph11">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" /&gt;</ph>; otherwise, <ph id="ph12">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的算法为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>、<ph id="ph2">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" /&gt;</ph>、<ph id="ph4">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" /&gt;</ph>、<ph id="ph5">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" /&gt;</ph>、<ph id="ph6">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" /&gt;</ph>、<ph id="ph7">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" /&gt;</ph>、<ph id="ph8">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" /&gt;</ph>、<ph id="ph9">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" /&gt;</ph> 或 <ph id="ph10">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" /&gt;</ph>，则为 <ph id="ph11">&lt;see cref="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" /&gt;</ph>；否则为 <ph id="ph12">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize">
          <source>Gets the size, in bits, of the public key associated with the X.509 certificate.</source>
          <target state="translated">获取与 X.509 证书关联的公钥的大小（以位为单位）。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize">
          <source>The size, in bits, of the public key associated with the X.509 certificate.</source>
          <target state="translated">与 X.509 证书关联的公钥的大小（以位为单位）。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>