<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="X509SecurityTokenHandler.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51cca0fd931695323471e78da987e8220c7f747a3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1cca0fd931695323471e78da987e8220c7f747a3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.X509SecurityTokenHandler">
          <source>Represents a security token handler that processes tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated">表示安全标记处理程序，请处理 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> 类型的标记。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.X509SecurityTokenHandler">
          <source>By default, the handler will perform chain-trust validation of the X.509 certificate.</source>
          <target state="translated">默认情况下，该处理程序将执行 X.509 证书的链信任验证。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.Tokens.X509SecurityTokenHandler">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> class with default values.</source>
          <target state="translated">使用默认值初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph> and the <ph id="ph3">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A&gt;</ph> validator is used as the default certificate validator.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A&gt;</ph>属性设置为<ph id="ph2">`false`</ph>和<ph id="ph3">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A&gt;</ph>验证程序用作默认证书验证程序。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the certificate should be mapped to a Windows account; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果证书应映射到 Windows 帐户，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /&gt;</ph> property.</source>
          <target state="translated">设置 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> class by using a value that indicates whether the certificate should be mapped to a Windows account.</source>
          <target state="translated">使用指定的证书验证方法初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> 类的新实例，并指示是否将证书标识映射到 Windows 账户。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A&gt;</ph> validator is used as the default certificate validator.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A&gt;</ph>验证程序用作默认证书验证程序。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>The certificate validator to use.</source>
          <target state="translated">要使用的证书验证程序。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /&gt;</ph> property.</source>
          <target state="translated">设置 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> class by using the specified certificate validator.</source>
          <target state="translated">使用指定的证书验证程序初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A&gt;</ph> 属性设置为 <ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the certificate should be mapped to a Windows account; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果证书应映射到 Windows 帐户，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /&gt;</ph> property.</source>
          <target state="translated">设置 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>The certificate validator to use.</source>
          <target state="translated">要使用的证书验证程序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /&gt;</ph> property.</source>
          <target state="translated">设置 <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> class by using a value that indicates whether the certificate should be mapped to a Windows account and the specified certificate validator.</source>
          <target state="translated">使用指定的证书验证方法初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" /&gt;</ph> 类的新实例，并指示是否将证书标识映射到 Windows 账户和指定的证书验证程序。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>An XML reader positioned at the start element of the key identifier clause.</source>
          <target state="translated">放置在密匙标识符子句的开始元素的位置的一个 XML 读取器。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>Returns a value that indicates whether the specified reader is referring to an <ph id="ph1">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">返回一个值，该值指示指定读取器是否引用 <ph id="ph1">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph> 元素。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is referring to an <ph id="ph2">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph> element; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果在一 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 元素中引用了该读取器，则为 <ph id="ph2">&lt;see langword="&amp;lt;ds:X509Data&amp;gt;" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>A reader pointing to the token XML.</source>
          <target state="translated">指向标记 XML 的读者。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source>Returns a value that indicates whether the reader points to an X.509 security token as defined in the WS-Security specification.</source>
          <target state="translated">返回指示该读者是否指向在 ws-security 规范定义的 X.509 安全标记的值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is pointing to an X.509 security token; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果读取器正指向 X.509 安全标记，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken">
          <source>Gets a value that indicates whether this handler supports validation of tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated">获取一个值，该值指示此处理程序是否支持对 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> 类型的标记进行验证。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler supports validation of tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果该处理器支持类型 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> 标记的验证，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">总是为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The key identifier clause to be serialized.</source>
          <target state="translated">要序列化的密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.</source>
          <target state="translated">返回指示指定的密钥标识符子句是否可以由此处理程序序列化的值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> is supported and if the <ph id="ph3">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /&gt;</ph> property is set to <ph id="ph4">&lt;see langword="true" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果支持 <ph id="ph2">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> 且如果将 <ph id="ph3">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /&gt;</ph> 属性设置为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则为 <ph id="ph4">&lt;see langword="true" /&gt;</ph>，否则为 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The supported key identifier clause types are:</source>
          <target state="translated">支持的密钥标识符子句类型包括：</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken">
          <source>Gets a value that indicates whether this handler can write tokens of type <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated">获取指示此处理程序能否写入 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> 类型的标记的值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the handler can write tokens of type <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果处理程序现在可以写入类型 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> 的标记，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">总是为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> that is used by the current instance.</source>
          <target state="translated">获取或设置当前实例所使用的 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> 。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator">
          <source>The X.509 certificate validator that is used by the current instance.</source>
          <target state="translated">当前实例使用的 X.509 证书验证程序。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>Gets the X.509 security token type defined in the WS-Security X.509 Token Profile.</source>
          <target state="translated">获取 WS-Security X.509 标记配置文件中定义的 X.509 安全标记类型。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>The X.509 token type URI.</source>
          <target state="translated">X.509 令牌类型 URI。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers">
          <source>By default, the value of the <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" /&gt;</ph> property.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" /&gt;</ph> 属性的值。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The XML elements that contain the custom configuration.</source>
          <target state="translated">包含自定义配置的 XML 元素。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>Loads custom configuration from XML.</source>
          <target state="translated">从 XML 加载自定义的配置。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="customConfigElements" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <source>The custom configuration specified is not valid.</source>
          <target state="translated">指定自定义配置无效。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows">
          <source>Gets or sets a value that indicates whether the validating token should be mapped to a Windows account.</source>
          <target state="translated">获取或设置指示验证令牌是否应映射到 Windows 帐户的值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the validating token should be mapped to a Windows account; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果验证标记应映射到 Windows 帐户，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>The XML reader referencing the key identifier clause.</source>
          <target state="translated">XML 读取器引用的密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>Deserializes a key identifier clause referenced by the specified XML reader.</source>
          <target state="translated">指定 XML 读取器所引用的反序列化密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source>The key identifier clause that was deserialized from the XML.</source>
          <target state="translated">从 XML 反序列化的密钥标识符子句。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>An XML reader that is pointing to an X.509 security token.</source>
          <target state="translated">一个 XML 读取器指向 X.509 安全标记。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Deserializes the X.509 security token referenced by the specified XML reader.</source>
          <target state="translated">反序列化指定 XML 读取器所引用的 X.509 安全标记。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>The security token deserialized from the XML.</source>
          <target state="translated">从 XML 反序列化的安全标记。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> 的一个实例。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is not pointing to a valid X.509 security token as defined in the WS-Security X.509 Token Profile.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> 不指向一个合法的 X.509 安全标记（如 ws-security X.509 标记配置文件定义）。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <source>Or the encodingType specified is other than Base64 or HexBinary.</source>
          <target state="translated">或则除了指定的 encodingType 是 Base64 or HexBinary 之外。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the tokens that this handler processes.</source>
          <target state="translated">获取此处理程序处理的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 的标记。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType">
          <source>By default, the type of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> class.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> 类的类型。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The token to be validated.</source>
          <target state="translated">要验证的令牌。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>Validates the specified X.509 security token.</source>
          <target state="translated">验证指定的 X.509 安全标记。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The identities contained in the token.</source>
          <target state="translated">标记中包含的值标识。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> 无法从 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> 赋值。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> 属性为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>There is no issuer name registry (<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /&gt;</ph>) configured.</source>
          <target state="translated">没有 (<ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /&gt;</ph>) 的颁发者名称注册表配置。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>(The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /&gt;</ph> property of the <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /&gt;</ph> referenced by the <ph id="ph3">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> property is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.)</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" /&gt;</ph> 属性所引用的 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" /&gt;</ph> 的 <ph id="ph3">&lt;see cref="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" /&gt;</ph> 属性为 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。       </target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> was unable to validate the certificate in the token.</source>
          <target state="translated">当前 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /&gt;</ph> 无法验证标记中的证书。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /&gt;</ph> returned <ph id="ph2">&lt;see langword="null" /&gt;</ph> when trying to resolve the issuer of the certificate in the token.</source>
          <target state="translated">在尝试解析标记中的证书颁发者时，当前 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.IssuerNameRegistry" /&gt;</ph> 返回 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The XML writer to which the key identifier clause should be serialized.</source>
          <target state="translated">应位于序列化密钥标识符子句的 XML 编写器。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The key identifier clause to serialize.</source>
          <target state="translated">要序列化的密钥标识符子句 。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>Serializes the specified key identifier clause to the XML writer.</source>
          <target state="translated">序列化指定密钥标识符子句到 XML 编写器。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityKeyIdentifierClause" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <source>The <ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /&gt;</ph> property is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" /&gt;</ph> 属性为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The XML writer to which the token should be serialized.</source>
          <target state="translated">应将令牌序列化为的 XML 编写器 。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>The X.509 security token to serialize.</source>
          <target state="translated">X.509 安全令牌将进行序列化。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> 的一个实例。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>Serializes the specified X.509 security token to the specified XML writer.</source>
          <target state="translated">将指定的 X.509 安全标记序列化到指定的 XML 编写器。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <source><ph id="ph1">&lt;paramref name="token" /&gt;</ph> is not assignable from <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="token" /&gt;</ph> 无法从 <ph id="ph2">&lt;see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /&gt;</ph> 赋值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes">
          <source>Gets or Sets the value that specifies whether XmlDsig-defined clause types are preferred.</source>
          <target state="translated">获取或设置指定 XmlDsig-defined 子句类型是否是首选项的值。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if XmlDsig-defined clause types are preferred; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果优先 XmlDsig 定义的项类型，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes">
          <source>Supported XmlDSig-defined <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph> types are:</source>
          <target state="translated">支持 XmlDSig 定义<ph id="ph1">&lt;xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause&gt;</ph>类型包括：</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes">
          <source>X509IssuerSerial</source>
          <target state="translated">X509IssuerSerial</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes">
          <source>X509SKI</source>
          <target state="translated">X509SKI</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes">
          <source>X509Certificate</source>
          <target state="translated">X509Certificate</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" /&gt;</ph> that is used by the current instance during certificate validation when the incoming X.509 certificate is mapped to a Windows account.</source>
          <target state="translated">获取或设置当传入 X.509 证书映射至 windows 帐户时，证书验证过程中当前实例使用的 <ph id="ph1">&lt;see cref="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator">
          <source>An X.509 certificate validator that will validate a specified X.509 certificate and verify whether the certificate can be mapped to a Windows account and whether the certificate chain is trusted.</source>
          <target state="translated">X.509 证书验证程序，其将验证指定的 X.509 证书并验证证书是否可映射至 Windows 帐户以及证书链是否可信。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>