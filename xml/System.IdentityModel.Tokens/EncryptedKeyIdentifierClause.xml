<Type Name="EncryptedKeyIdentifierClause" FullName="System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e9a74bce3657cf4cd0a2d309e32dd874918a99ed" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EncryptedKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EncryptedKeyIdentifierClause extends System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EncryptedKeyIdentifierClause&#xA;Inherits BinaryKeyIdentifierClause" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedKeyIdentifierClause sealed : System::IdentityModel::Tokens::BinaryKeyIdentifierClause" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.BinaryKeyIdentifierClause</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="59b5f-101">表示标识加密密钥的密钥标识符子句。</span>
      <span class="sxs-lookup">
        <span data-stu-id="59b5f-101">Represents a key identifier clause that identifies an encrypted key.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59b5f-102">除非创建自定义安全令牌服务，否则，通常不需要使用 <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause>。</span><span class="sxs-lookup"><span data-stu-id="59b5f-102">Typically, the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> does not need to be used, other than when a custom security token service is created.</span></span> <span data-ttu-id="59b5f-103">当安全令牌服务返回安全令牌时，已颁发的安全令牌包含对附加的和未附加的安全令牌的引用。</span><span class="sxs-lookup"><span data-stu-id="59b5f-103">When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</span></span> <span data-ttu-id="59b5f-104">附加引用是指包含在 SOAP 消息的安全标头中的安全令牌，而未附加引用则是未包含在 SOAP 消息的安全标头中的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="59b5f-104">Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of a SOAP message.</span></span> <span data-ttu-id="59b5f-105">这些引用通常确认已颁发的安全令牌的真实性。</span><span class="sxs-lookup"><span data-stu-id="59b5f-105">These references typically affirm the authenticity of the issued security token.</span></span> <span data-ttu-id="59b5f-106">使用 <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> 类可引用加密密钥。</span><span class="sxs-lookup"><span data-stu-id="59b5f-106">Use the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause> class to reference an encrypted key.</span></span> <span data-ttu-id="59b5f-107"><xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> 方法返回加密密钥。</span><span class="sxs-lookup"><span data-stu-id="59b5f-107">The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method returns the encrypted key.</span></span>  
  
 [!INCLUDE[indigo2](~/includes/indigo2-md.md)]<span data-ttu-id="59b5f-108"> 接受格式正确的已包装的密钥（针对连网格式）。</span><span class="sxs-lookup"><span data-stu-id="59b5f-108"> accepts wrapped keys that are well formed with respect to the wire format.</span></span> <span data-ttu-id="59b5f-109">接受并使用在网络上指定的密钥换行算法。</span><span class="sxs-lookup"><span data-stu-id="59b5f-109">The key wrap algorithm specified on the wire is accepted and used.</span></span> <span data-ttu-id="59b5f-110">未验证该算法与终结点指定的 <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> 的兼容性。</span><span class="sxs-lookup"><span data-stu-id="59b5f-110">It is not verified to be compatible with the <xref:System.ServiceModel.Security.SecurityAlgorithmSuite> specified by the endpoint.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59b5f-111">初始化 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-111">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="encryptionMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="59b5f-112">包含加密密钥的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-112">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
          <span data-ttu-id="59b5f-113">设置 <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> 方法所返回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-113">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="59b5f-114">用于加密密钥的加密算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-114">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
          <span data-ttu-id="59b5f-115">设置 <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-115">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59b5f-116">使用指定的加密密钥和用于加密密钥的加密算法初始化 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-116">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted and the cryptographic algorithm used to encrypt the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59b5f-117">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 中的静态常数字符串指定 `encryptionMethod` 参数的加密算法。</span><span class="sxs-lookup"><span data-stu-id="59b5f-117">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="59b5f-118">
            <paramref name="encryptionMethod" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-118">
              <paramref name="encryptionMethod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="59b5f-119">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-119">-or-</span>
          </span>
          <span data-ttu-id="59b5f-120">
            <paramref name="encryptedKey" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-120">
              <paramref name="encryptedKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="59b5f-121">
            <paramref name="encryptedKey" /> 的长度为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-121">
              <paramref name="encryptedKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="59b5f-122">包含加密密钥的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-122">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
          <span data-ttu-id="59b5f-123">设置 <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> 方法所返回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-123">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="59b5f-124">用于加密密钥的加密算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-124">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
          <span data-ttu-id="59b5f-125">设置 <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-125">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span>
          </span>
        </param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <summary>
          <span data-ttu-id="59b5f-126">使用指定的加密密钥、用于加密密钥的加密算法和加密密钥的密钥标识符初始化 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-126">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, and a key identifier for the encrypting key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59b5f-127">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 中的静态常数字符串指定 `encryptionMethod` 参数的加密算法。</span><span class="sxs-lookup"><span data-stu-id="59b5f-127">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="59b5f-128">
            <paramref name="encryptionMethod" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-128">
              <paramref name="encryptionMethod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="59b5f-129">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-129">-or-</span>
          </span>
          <span data-ttu-id="59b5f-130">
            <paramref name="encryptedKey" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-130">
              <paramref name="encryptedKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="59b5f-131">
            <paramref name="encryptedKey" /> 的长度为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-131">
              <paramref name="encryptedKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier, carriedKeyName As String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier, System::String ^ carriedKeyName);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier, carriedKeyName As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier, System::String ^ carriedKeyName);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="carriedKeyName" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="59b5f-132">包含加密密钥的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-132">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
          <span data-ttu-id="59b5f-133">设置 <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> 方法所返回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-133">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="59b5f-134">用于加密密钥的加密算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-134">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
          <span data-ttu-id="59b5f-135">设置 <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-135">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span>
          </span>
        </param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="carriedKeyName">
          <span data-ttu-id="59b5f-136">与 <c>encryptedKey</c> 参数中指定的密钥相关联的用户可读名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-136">A user-readable name that is associated with the key specified in the <c>encryptedKey</c> parameter.</span>
          </span>
          <span data-ttu-id="59b5f-137">设置 <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-137">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59b5f-138">使用指定的加密密钥、用于加密密钥的加密算法、加密密钥的密钥标识符和用户可读名称初始化 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-138">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the encrypting key and a user-readable name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59b5f-139">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 中的静态常数字符串指定 `encryptionMethod` 参数的加密算法。</span><span class="sxs-lookup"><span data-stu-id="59b5f-139">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="59b5f-140">
            <paramref name="encryptionMethod" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-140">
              <paramref name="encryptionMethod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="59b5f-141">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-141">-or-</span>
          </span>
          <span data-ttu-id="59b5f-142">
            <paramref name="encryptedKey" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-142">
              <paramref name="encryptedKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="59b5f-143">
            <paramref name="encryptedKey" /> 的长度为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-143">
              <paramref name="encryptedKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier encryptingKeyIdentifier, string carriedKeyName, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, encryptingKeyIdentifier As SecurityKeyIdentifier, carriedKeyName As String, derivationNonce As Byte(), derivationLength As Integer)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ encryptingKeyIdentifier, System::String ^ carriedKeyName, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public EncryptedKeyIdentifierClause (byte[] encryptedKey, string encryptionMethod, System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName, byte[] derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] encryptedKey, string encryptionMethod, class System.IdentityModel.Tokens.SecurityKeyIdentifier identifier, string carriedKeyName, unsigned int8[] derivationNonce, int32 derivationLength) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (encryptedKey As Byte(), encryptionMethod As String, identifier As SecurityKeyIdentifier, carriedKeyName As String, derivationNonce As Byte(), derivationLength As Integer)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EncryptedKeyIdentifierClause(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::IdentityModel::Tokens::SecurityKeyIdentifier ^ identifier, System::String ^ carriedKeyName, cli::array &lt;System::Byte&gt; ^ derivationNonce, int derivationLength);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" Index="0" />
        <Parameter Name="encryptionMethod" Type="System.String" Index="1" />
        <Parameter Name="encryptingKeyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="identifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="carriedKeyName" Type="System.String" Index="3" />
        <Parameter Name="derivationNonce" Type="System.Byte[]" Index="4" />
        <Parameter Name="derivationLength" Type="System.Int32" Index="5" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="59b5f-144">包含加密密钥的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-144">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
          <span data-ttu-id="59b5f-145">设置 <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> 方法所返回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-145">Sets the value that is returned from the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="59b5f-146">用于加密密钥的加密算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-146">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
          <span data-ttu-id="59b5f-147">设置 <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-147">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> property.</span>
          </span>
        </param>
        <param name="encryptingKeyIdentifier">To be added.</param>
        <param name="identifier">To be added.</param>
        <param name="carriedKeyName">
          <span data-ttu-id="59b5f-148">与 <c>encryptedKey</c> 参数中指定的密钥相关联的用户可读名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-148">A user-readable name that is associated with the key specified in the <c>encryptedKey</c> parameter.</span>
          </span>
          <span data-ttu-id="59b5f-149">设置 <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-149">Sets the value of the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> property.</span>
          </span>
        </param>
        <param name="derivationNonce">
          <span data-ttu-id="59b5f-150">一个 <see cref="T:System.Byte" /> 数组，包含用于创建派生密钥的 Nonce。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-150">An array of <see cref="T:System.Byte" /> that contains the nonce that was used to create a derived key.</span>
          </span>
          <span data-ttu-id="59b5f-151">设置 <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> 方法所返回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-151">Sets the value that is returned by the <see cref="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" /> method.</span>
          </span>
        </param>
        <param name="derivationLength">
          <span data-ttu-id="59b5f-152">派生密钥的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-152">The size of the derived key.</span>
          </span>
          <span data-ttu-id="59b5f-153">设置 <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-153">Sets the value of the <see cref="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59b5f-154">使用指定的加密密钥、用于加密密钥的加密算法、密钥的密钥标识符和用户可读名称初始化 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-154">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> class using the specified key that is encrypted, the cryptographic algorithm used to encrypt the key, a key identifier for the key and a user-readable name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59b5f-155">如果指定 `derivationNonce` 和 `derivationLength` 参数，则会使用隐含的派生密钥，而不是令牌的直接安全密钥。</span><span class="sxs-lookup"><span data-stu-id="59b5f-155">When the `derivationNonce` and `derivationLength` parameters are specified the implied derived key is used instead of the direct security key of the token.</span></span>  
  
 <span data-ttu-id="59b5f-156">使用 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 中的静态常数字符串指定 `encryptionMethod` 参数的加密算法。</span><span class="sxs-lookup"><span data-stu-id="59b5f-156">Use the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> to specify the cryptographic algorithm for the `encryptionMethod` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="59b5f-157">
            <paramref name="encryptionMethod" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-157">
              <paramref name="encryptionMethod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="59b5f-158">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-158">-or-</span>
          </span>
          <span data-ttu-id="59b5f-159">
            <paramref name="encryptedKey" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-159">
              <paramref name="encryptedKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="59b5f-160">
            <paramref name="encryptedKey" /> 的长度为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-160">
              <paramref name="encryptedKey" /> is zero length.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CarriedKeyName">
      <MemberSignature Language="C#" Value="public string CarriedKeyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CarriedKeyName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CarriedKeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CarriedKeyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59b5f-161">获取与加密密钥相关联的用户可读名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-161">Gets a user-readable name that is associated with the encrypted key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59b5f-162">与加密密钥相关联的用户可读名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-162">A user-readable name that is associated with the encrypted key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59b5f-163">当<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A>属性序列化为 XML，将它置于 <`CarriedKeyName`> 元素。</span><span class="sxs-lookup"><span data-stu-id="59b5f-163">When the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName%2A> property is serialized into XML, it is placed in the <`CarriedKeyName`> element.</span></span> <span data-ttu-id="59b5f-164">有关加密密钥，<`CarriedKeyName`> 元素是可选元素，它将与键值关联的用户可读名称。</span><span class="sxs-lookup"><span data-stu-id="59b5f-164">For encrypted keys, the <`CarriedKeyName`> element is an optional element that associates a user-readable name with a key value.</span></span> <span data-ttu-id="59b5f-165">然后可以使用此名称来引用密钥使用 <`KeyName`> 中的元素 <`KeyInfo`> 元素。</span><span class="sxs-lookup"><span data-stu-id="59b5f-165">This name can then be used to reference the key using the <`KeyName`> element within the <`KeyInfo`> element.</span></span> <span data-ttu-id="59b5f-166">相同 <`CarriedKeyName`> 元素的值，与不同的 ID 值，可以在单个文档中出现多次。</span><span class="sxs-lookup"><span data-stu-id="59b5f-166">The same <`CarriedKeyName`> element value, unlike an ID value, can occur multiple times within a single document.</span></span> <span data-ttu-id="59b5f-167">键的值必须在所有相同 <`EncryptedKey`> 具有相同标识的元素 <`CarriedKeyName`> XML 文档中的名称。</span><span class="sxs-lookup"><span data-stu-id="59b5f-167">The value of the key must be the same in all <`EncryptedKey`> elements identified with the same <`CarriedKeyName`> name within an XML document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier EncryptingKeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptingKeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ EncryptingKeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59b5f-168">获取加密密钥的密钥标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-168">Gets a key identifier for the encrypting key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59b5f-169">一个 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />，表示加密密钥的密钥标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-169">A <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> that represents the key identifier for the encrypting key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionMethod">
      <MemberSignature Language="C#" Value="public string EncryptionMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EncryptionMethod" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncryptionMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EncryptionMethod { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="59b5f-170">获取用于加密密钥的加密算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-170">Gets the cryptographic algorithm that is used to encrypt the key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="59b5f-171">用于加密密钥的加密算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-171">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59b5f-172">通常，<xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> 属性的值是 <xref:System.IdentityModel.Tokens.SecurityAlgorithms> 类中的静态常数字符串之一。</span><span class="sxs-lookup"><span data-stu-id="59b5f-172">Typically, the value of the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod%2A> property is one of the static constant strings in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptedKey">
      <MemberSignature Language="C#" Value="public byte[] GetEncryptedKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetEncryptedKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEncryptedKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetEncryptedKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59b5f-173">获取加密密钥。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-173">Gets the encrypted key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59b5f-174">包含加密密钥的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-174">An array of <see cref="T:System.Byte" /> that contains the encrypted key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59b5f-175"><xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> 方法返回的数组是加密密钥的克隆。</span><span class="sxs-lookup"><span data-stu-id="59b5f-175">The array that is returned by the <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey%2A> method is a clone of the encrypted key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="59b5f-176">返回一个值，该值指示此实例的密钥标识符是否等效于指定的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-176">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (keyIdentifierClause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="C#" Value="public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Matches (clause As SecurityKeyIdentifierClause) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ clause);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1" />
        <Parameter Name="clause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="clause">To be added.</param>
        <summary>
          <span data-ttu-id="59b5f-177">返回一个值，该值指示此实例的密钥标识符是否等效于指定的密钥标识符子句。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-177">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59b5f-178">如果 <see langword="true" /> 的类型为 <paramref name="clause" />，并且具有与当前实例相同的加密密钥、加密方法和用户可读名称，则为 <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-178">
              <see langword="true" /> if <paramref name="clause" /> is of type <see cref="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" /> and has the same encrypted key, encryption method and user-readable name as the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="59b5f-179">
            <paramref name="clause" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-179">
              <paramref name="clause" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
        <altmember cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
        <altmember cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (byte[] encryptedKey, string encryptionMethod, string carriedKeyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(unsigned int8[] encryptedKey, string encryptionMethod, string carriedKeyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (encryptedKey As Byte(), encryptionMethod As String, carriedKeyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;System::Byte&gt; ^ encryptedKey, System::String ^ encryptionMethod, System::String ^ carriedKeyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedKey" Type="System.Byte[]" />
        <Parameter Name="encryptionMethod" Type="System.String" />
        <Parameter Name="carriedKeyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedKey">
          <span data-ttu-id="59b5f-180">包含加密密钥的 <see cref="T:System.Byte" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-180">An array of <see cref="T:System.Byte" /> that contains a key that is encrypted.</span>
          </span>
        </param>
        <param name="encryptionMethod">
          <span data-ttu-id="59b5f-181">用于加密密钥的加密算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-181">The cryptographic algorithm that is used to encrypt the key.</span>
          </span>
        </param>
        <param name="carriedKeyName">
          <span data-ttu-id="59b5f-182">与加密密钥相关联的用户可读名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-182">A user-readable name that is associated with the encrypted key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="59b5f-183">返回一个值，该值指示此实例的密钥标识符是否与指定的加密密钥、加密方法和用户可读名称相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-183">Returns a value that indicates whether the key identifier for this instance is equivalent to the specified encrypted key, encryption method and user-readable name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59b5f-184">如果 <paramref name="encryptedKey" />、<paramref name="encryptionMethod" /> 和 <paramref name="carriedKeyName" /> 参数分别具有 <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> 方法以及 <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> 和 <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> 属性所返回的值，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-184">
              <see langword="true" /> if the <paramref name="encryptedKey" />, <paramref name="encryptionMethod" /> and <paramref name="carriedKeyName" /> parameters have the same values returned by the <see cref="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" /> method and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" /> and the <see cref="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" /> properties, respectively; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="59b5f-185">返回表示当前对象的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-185">Returns a string that represents the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="59b5f-186">当前对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="59b5f-186">The current object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59b5f-187"><xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> 方法返回一个字符串，其中包含加密密钥和用于加密密钥的加密算法。</span><span class="sxs-lookup"><span data-stu-id="59b5f-187">The <xref:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString%2A> method returns a string that contains the encrypted key and the cryptographic algorithm that is used to encrypt the key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>