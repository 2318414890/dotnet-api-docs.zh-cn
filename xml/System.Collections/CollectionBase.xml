<Type Name="CollectionBase" FullName="System.Collections.CollectionBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ca8abe6fab9c1aadfe4c4a9f807db3e9e80b3fe" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36713036" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CollectionBase : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit CollectionBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.CollectionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CollectionBase&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionBase abstract : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type CollectionBase = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f653b-101">Provides the <see langword="abstract" /> base class for a strongly typed collection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f653b-101">Provides the <see langword="abstract" /> base class for a strongly typed collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-102">A<xref:System.Collections.CollectionBase>实例始终是可修改。</span><span class="sxs-lookup"><span data-stu-id="f653b-102">A <xref:System.Collections.CollectionBase> instance is always modifiable.</span></span> <span data-ttu-id="f653b-103">请参阅<xref:System.Collections.ReadOnlyCollectionBase>为此类的一个只读版本。</span><span class="sxs-lookup"><span data-stu-id="f653b-103">See <xref:System.Collections.ReadOnlyCollectionBase> for a read-only version of this class.</span></span>  
  
 <span data-ttu-id="f653b-104">容量<xref:System.Collections.CollectionBase>是元素的数目<xref:System.Collections.CollectionBase>可以保存。</span><span class="sxs-lookup"><span data-stu-id="f653b-104">The capacity of a <xref:System.Collections.CollectionBase> is the number of elements the <xref:System.Collections.CollectionBase> can hold.</span></span> <span data-ttu-id="f653b-105">如元素添加到<xref:System.Collections.CollectionBase>，自动增加容量通过重新分配所需的方式。</span><span class="sxs-lookup"><span data-stu-id="f653b-105">As elements are added to a <xref:System.Collections.CollectionBase>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="f653b-106">可以通过设置减少容量<xref:System.Collections.CollectionBase.Capacity%2A>属性显式。</span><span class="sxs-lookup"><span data-stu-id="f653b-106">The capacity can be decreased by setting the <xref:System.Collections.CollectionBase.Capacity%2A> property explicitly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f653b-107">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-107">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="f653b-108">公共静态 (<see langword="Shared" />在 Visual Basic 中) 的此类型的成员都是线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f653b-108">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="f653b-109">但不保证所有实例成员都是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f653b-109">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="f653b-110">此实现不提供同步 （线程安全） 包装器<see cref="T:System.Collections.CollectionBase" />，但是，派生的类可以创建他们自己的同步的版本<see cref="T:System.Collections.CollectionBase" />使用<see cref="P:System.Collections.ICollection.SyncRoot" />属性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f653b-110">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.CollectionBase" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.CollectionBase" /> using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span>
      </span>
      <span data-ttu-id="f653b-111">枚举整个集合本质上不是线程安全的过程。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f653b-111">Enumerating through a collection is intrinsically not a thread safe procedure.</span>
      </span>
      <span data-ttu-id="f653b-112">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f653b-112">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="f653b-113">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f653b-113">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <span data-ttu-id="f653b-114">
        <para>此基类用于轻松实现器来创建强类型的自定义集合。建议来扩展此基类的类，而不是创建其自己的实施者。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="f653b-114">
          <para>This base class is provided to make it easier for implementers to create a strongly typed custom collection. Implementers are encouraged to extend this base class instead of creating their own.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.ReadOnlyCollectionBase" />
    <altmember cref="N:System.Collections.Generic" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f653b-115">Initializes a new instance of the <see cref="T:System.Collections.CollectionBase" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-115">Initializes a new instance of the <see cref="T:System.Collections.CollectionBase" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CollectionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CollectionBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f653b-116">Initializes a new instance of the <see cref="T:System.Collections.CollectionBase" /> class with the default initial capacity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-116">Initializes a new instance of the <see cref="T:System.Collections.CollectionBase" /> class with the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-117">容量<xref:System.Collections.CollectionBase>是元素的数目，<xref:System.Collections.CollectionBase>可以保存。</span><span class="sxs-lookup"><span data-stu-id="f653b-117">The capacity of a <xref:System.Collections.CollectionBase> is the number of elements that the <xref:System.Collections.CollectionBase> can hold.</span></span> <span data-ttu-id="f653b-118">如元素添加到<xref:System.Collections.CollectionBase>，自动增加容量通过重新分配在内部数组所需的方式。</span><span class="sxs-lookup"><span data-stu-id="f653b-118">As elements are added to a <xref:System.Collections.CollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="f653b-119">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<xref:System.Collections.CollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="f653b-119">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="f653b-120">此构造函数是 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="f653b-120">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.CollectionBase.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CollectionBase (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CollectionBase(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.CollectionBase : int -&gt; System.Collections.CollectionBase" Usage="new System.Collections.CollectionBase capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="f653b-121">The number of elements that the new list can initially store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-121">The number of elements that the new list can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-122">Initializes a new instance of the <see cref="T:System.Collections.CollectionBase" /> class with the specified capacity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-122">Initializes a new instance of the <see cref="T:System.Collections.CollectionBase" /> class with the specified capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-123">容量<xref:System.Collections.CollectionBase>是元素的数目，<xref:System.Collections.CollectionBase>可以保存。</span><span class="sxs-lookup"><span data-stu-id="f653b-123">The capacity of a <xref:System.Collections.CollectionBase> is the number of elements that the <xref:System.Collections.CollectionBase> can hold.</span></span> <span data-ttu-id="f653b-124">如元素添加到<xref:System.Collections.CollectionBase>，自动增加容量通过重新分配在内部数组所需的方式。</span><span class="sxs-lookup"><span data-stu-id="f653b-124">As elements are added to a <xref:System.Collections.CollectionBase>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="f653b-125">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<xref:System.Collections.CollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="f653b-125">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="f653b-126">此构造函数是 O (`n`) 操作，其中`n`是`capacity`。</span><span class="sxs-lookup"><span data-stu-id="f653b-126">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.CollectionBase.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.CollectionBase.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f653b-127">Gets or sets the number of elements that the <see cref="T:System.Collections.CollectionBase" /> can contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-127">Gets or sets the number of elements that the <see cref="T:System.Collections.CollectionBase" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f653b-128">
            <see cref="T:System.Collections.CollectionBase" /> 可包含的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-128">The number of elements that the <see cref="T:System.Collections.CollectionBase" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-129"><xref:System.Collections.CollectionBase.Capacity%2A> 是的元素数的<xref:System.Collections.CollectionBase>可以存储。</span><span class="sxs-lookup"><span data-stu-id="f653b-129"><xref:System.Collections.CollectionBase.Capacity%2A> is the number of elements that the <xref:System.Collections.CollectionBase> can store.</span></span> <span data-ttu-id="f653b-130"><xref:System.Collections.CollectionBase.Count%2A> 是中的实际的元素数目<xref:System.Collections.CollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="f653b-130"><xref:System.Collections.CollectionBase.Count%2A> is the number of elements that are actually in the <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="f653b-131"><xref:System.Collections.CollectionBase.Capacity%2A> 大于或等于始终是<xref:System.Collections.CollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="f653b-131"><xref:System.Collections.CollectionBase.Capacity%2A> is always greater than or equal to <xref:System.Collections.CollectionBase.Count%2A>.</span></span> <span data-ttu-id="f653b-132">如果<xref:System.Collections.CollectionBase.Count%2A>超过<xref:System.Collections.CollectionBase.Capacity%2A>时添加元素，则自动通过增大容量在复制旧元素和添加新的元素之前重新分配在内部数组。</span><span class="sxs-lookup"><span data-stu-id="f653b-132">If <xref:System.Collections.CollectionBase.Count%2A> exceeds <xref:System.Collections.CollectionBase.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="f653b-133">可以通过设置减少容量<xref:System.Collections.CollectionBase.Capacity%2A>属性显式。</span><span class="sxs-lookup"><span data-stu-id="f653b-133">The capacity can be decreased by setting the <xref:System.Collections.CollectionBase.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="f653b-134">时的值<xref:System.Collections.CollectionBase.Capacity%2A>设置了显式，在内部数组还重新分配以适应指定的容量。</span><span class="sxs-lookup"><span data-stu-id="f653b-134">When the value of <xref:System.Collections.CollectionBase.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="f653b-135">检索此属性的值的运算 o （1）;将属性设置为 O (`n`) 操作，其中`n`新容量。</span><span class="sxs-lookup"><span data-stu-id="f653b-135">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f653b-136">
            <see cref="P:System.Collections.CollectionBase.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-136">
              <see cref="P:System.Collections.CollectionBase.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="f653b-137">There is not enough memory available on the system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-137">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.CollectionBase.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="collectionBase.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f653b-138">Removes all objects from the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-138">Removes all objects from the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="f653b-139">This method cannot be overridden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-139">This method cannot be overridden.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-140"><xref:System.Collections.CollectionBase.Count%2A> 设置为零。</span><span class="sxs-lookup"><span data-stu-id="f653b-140"><xref:System.Collections.CollectionBase.Count%2A> is set to zero.</span></span>  
  
 <span data-ttu-id="f653b-141">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.CollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="f653b-141">This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 <span data-ttu-id="f653b-142">若要执行自定义操作之前或之后清除的集合，重写受保护<xref:System.Collections.CollectionBase.OnClear%2A>或<xref:System.Collections.CollectionBase.OnClearComplete%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f653b-142">To perform custom actions before or after the collection is cleared, override the protected <xref:System.Collections.CollectionBase.OnClear%2A> or <xref:System.Collections.CollectionBase.OnClearComplete%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.CollectionBase.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f653b-143">Gets the number of elements contained in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-143">Gets the number of elements contained in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="f653b-144">This property cannot be overridden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-144">This property cannot be overridden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f653b-145">中包含的元素数<see cref="T:System.Collections.CollectionBase" />实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-145">The number of elements contained in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="f653b-146">检索此属性的值的运算复杂度为 O(1)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-146">Retrieving the value of this property is an O(1) operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f653b-147">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-147">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="collectionBase.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f653b-148">Returns an enumerator that iterates through the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-148">Returns an enumerator that iterates through the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f653b-149">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-149">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-150">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="f653b-150">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="f653b-151">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="f653b-151">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="f653b-152">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="f653b-152">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f653b-153">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="f653b-153">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f653b-154">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="f653b-154">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f653b-155"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="f653b-155"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="f653b-156">在此位置，调用<xref:System.Collections.IEnumerator.Current%2A>引发异常。</span><span class="sxs-lookup"><span data-stu-id="f653b-156">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="f653b-157">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="f653b-157">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="f653b-158">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-158"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="f653b-159"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="f653b-159"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f653b-160">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="f653b-160">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f653b-161">当枚举器位于此位置上，后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="f653b-161">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f653b-162">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，则调用<xref:System.Collections.IEnumerator.Current%2A>引发异常。</span><span class="sxs-lookup"><span data-stu-id="f653b-162">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="f653b-163">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="f653b-163">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="f653b-164">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="f653b-164">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f653b-165">如果对集合进行更改，例如添加、 修改或删除元素，则枚举数将失效且不可恢复失效，并且下次调用<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="f653b-165">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="f653b-166">如果之间修改集合<xref:System.Collections.IEnumerator.MoveNext%2A>和<xref:System.Collections.IEnumerator.Current%2A>，<xref:System.Collections.IEnumerator.Current%2A>返回到，设置的元素，即使枚举数已经无效。</span><span class="sxs-lookup"><span data-stu-id="f653b-166">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="f653b-167">该枚举数不具有独占访问集合的权限；因此，枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="f653b-167">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="f653b-168">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="f653b-168">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="f653b-169">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="f653b-169">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="f653b-170">虽然<xref:System.Collections.CollectionBase.GetEnumerator%2A>方法不是对默认情况下，COM 客户端可见继承<xref:System.Collections.CollectionBase>类可以公开它，并且可以在 COM 客户端导致意外行为。</span><span class="sxs-lookup"><span data-stu-id="f653b-170">While the <xref:System.Collections.CollectionBase.GetEnumerator%2A> method is not visible to COM clients by default, inheriting the <xref:System.Collections.CollectionBase> class can expose it and can cause undesirable behavior in COM clients.</span></span>  
  
 <span data-ttu-id="f653b-171">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="f653b-171">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f653b-172">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-172">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="InnerList">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList InnerList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList InnerList" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.InnerList" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerList As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ InnerList { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerList : System.Collections.ArrayList" Usage="System.Collections.CollectionBase.InnerList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f653b-173">Gets an <see cref="T:System.Collections.ArrayList" /> containing the list of elements in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-173">Gets an <see cref="T:System.Collections.ArrayList" /> containing the list of elements in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f653b-174">
            <see cref="T:System.Collections.ArrayList" />表示<see cref="T:System.Collections.CollectionBase" />实例本身。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-174">An <see cref="T:System.Collections.ArrayList" /> representing the <see cref="T:System.Collections.CollectionBase" /> instance itself.</span>
          </span>
          <span data-ttu-id="f653b-175">检索此属性的值的运算复杂度为 O(1)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-175">Retrieving the value of this property is an O(1) operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-176">仅在返回的实例上调用 On \* 方法<xref:System.Collections.CollectionBase.List%2A>属性，但不是能在返回的实例<xref:System.Collections.CollectionBase.InnerList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f653b-176">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.List" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.IList" Usage="System.Collections.CollectionBase.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f653b-177">Gets an <see cref="T:System.Collections.IList" /> containing the list of elements in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-177">Gets an <see cref="T:System.Collections.IList" /> containing the list of elements in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f653b-178">
            <see cref="T:System.Collections.IList" />表示<see cref="T:System.Collections.CollectionBase" />实例本身。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-178">An <see cref="T:System.Collections.IList" /> representing the <see cref="T:System.Collections.CollectionBase" /> instance itself.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-179">仅在返回的实例上调用 On \* 方法<xref:System.Collections.CollectionBase.List%2A>属性，但不是能在返回的实例<xref:System.Collections.CollectionBase.InnerList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f653b-179">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="f653b-180">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="f653b-180">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f653b-181">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-181">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected virtual void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnClear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClear();" />
      <MemberSignature Language="F#" Value="abstract member OnClear : unit -&gt; unit&#xA;override this.OnClear : unit -&gt; unit" Usage="collectionBase.OnClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f653b-182">Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-182">Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-183">此方法的默认实现需要通过执行一些操作之前清除集合的派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="f653b-183">The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.</span></span>  
  
 <span data-ttu-id="f653b-184">仅在返回的实例上调用 On \* 方法<xref:System.Collections.CollectionBase.List%2A>属性，但不是能在返回的实例<xref:System.Collections.CollectionBase.InnerList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f653b-184">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="f653b-185">如果进程失败，集合将恢复到以前的状态。</span><span class="sxs-lookup"><span data-stu-id="f653b-185">If the process fails, the collection reverts back to its previous state.</span></span>  
  
 <span data-ttu-id="f653b-186">此方法的默认实现是一个 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="f653b-186">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-187">
            <para>此方法允许实施者能定义从基础中删除所有元素之前必须执行的过程<see cref="T:System.Collections.ArrayList" />。通过定义此方法，实施者可以对继承的方法添加功能，而无需重写所有其他方法。 <see cref="M:System.Collections.CollectionBase.OnClear" />而标准的清除行为之前调用<see cref="M:System.Collections.CollectionBase.OnClearComplete" />标准清除行为之后调用。例如，实施者可以免除中删除全局清除的某些元素。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-187">
              <para>This method allows implementers to define processes that must be performed before deleting all the elements from the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> is invoked after the standard Clear behavior.  For example, implementers can exempt certain elements from deletion by a global Clear.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnClearComplete" />
        <altmember cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnClearComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnClearComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClearComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnClearComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClearComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClearComplete();" />
      <MemberSignature Language="F#" Value="abstract member OnClearComplete : unit -&gt; unit&#xA;override this.OnClearComplete : unit -&gt; unit" Usage="collectionBase.OnClearComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f653b-188">Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-188">Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-189">此方法的默认实现需要通过执行一些操作之后清除集合的派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="f653b-189">The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.</span></span>  
  
 <span data-ttu-id="f653b-190">仅在返回的实例上调用 On \* 方法<xref:System.Collections.CollectionBase.List%2A>属性，但不是能在返回的实例<xref:System.Collections.CollectionBase.InnerList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f653b-190">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="f653b-191">此方法的默认实现是一个 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="f653b-191">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-192">
            <para>此方法允许实施者能定义必须从基础删除所有元素后执行的过程<see cref="T:System.Collections.ArrayList" />。通过定义此方法，实施者可以对继承的方法添加功能，而无需重写所有其他方法。 <see cref="M:System.Collections.CollectionBase.OnClear" />而标准的清除行为之前调用<see cref="M:System.Collections.CollectionBase.OnClearComplete" />标准清除行为之后调用。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-192">
              <para>This method allows implementers to define processes that must be performed after deleting all the elements from the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.CollectionBase.OnClearComplete" /> is invoked after the standard Clear behavior.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnClear" />
        <altmember cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected virtual void OnInsert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnInsert : int * obj -&gt; unit&#xA;override this.OnInsert : int * obj -&gt; unit" Usage="collectionBase.OnInsert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f653b-193">The zero-based index at which to insert <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-193">The zero-based index at which to insert <c>value</c>.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f653b-194">The new value of the element at <c>index</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-194">The new value of the element at <c>index</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-195">Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-195">Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-196">此方法的默认实现需要通过执行一些操作，才能插入指定的元素的派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="f653b-196">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.</span></span>  
  
 <span data-ttu-id="f653b-197">仅在返回的实例上调用 On \* 方法<xref:System.Collections.CollectionBase.List%2A>属性，但不是能在返回的实例<xref:System.Collections.CollectionBase.InnerList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f653b-197">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="f653b-198">如果进程失败，集合将恢复到以前的状态。</span><span class="sxs-lookup"><span data-stu-id="f653b-198">If the process fails, the collection reverts back to its previous state.</span></span>  
  
 <span data-ttu-id="f653b-199">此方法的默认实现是一个 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="f653b-199">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f653b-200">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-200">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-201">
            <para>此方法允许实施者能定义将元素插入到基础之前必须执行的过程<see cref="T:System.Collections.ArrayList" />。通过定义此方法，实施者可以对继承的方法添加功能，而无需重写所有其他方法。 <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />而标准的插入行为之前, 调用<see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />标准插入行为之后调用。例如，实施者可以限制哪些类型的对象可以插入到<see cref="T:System.Collections.ArrayList" />。 <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />在此方法之前调用。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-201">
              <para>This method allows implementers to define processes that must be performed before inserting the element into the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /> is invoked after the standard Insert behavior.  For example, implementers can restrict which types of objects can be inserted into the <see cref="T:System.Collections.ArrayList" />.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> is called prior to this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsertComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnInsertComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsertComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsertComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsertComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnInsertComplete : int * obj -&gt; unit&#xA;override this.OnInsertComplete : int * obj -&gt; unit" Usage="collectionBase.OnInsertComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f653b-202">The zero-based index at which to insert <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-202">The zero-based index at which to insert <c>value</c>.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f653b-203">The new value of the element at <c>index</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-203">The new value of the element at <c>index</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-204">Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-204">Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-205">此方法的默认实现需要通过之后插入指定的元素执行某些操作在派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="f653b-205">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.</span></span>  
  
 <span data-ttu-id="f653b-206">仅在返回的实例上调用 On \* 方法<xref:System.Collections.CollectionBase.List%2A>属性，但不是能在返回的实例<xref:System.Collections.CollectionBase.InnerList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f653b-206">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="f653b-207">如果发生以下其中一项，则集合将恢复到以前的状态：</span><span class="sxs-lookup"><span data-stu-id="f653b-207">The collection reverts back to its previous state if one of the following occurs:</span></span>  
  
-   <span data-ttu-id="f653b-208">过程将失败。</span><span class="sxs-lookup"><span data-stu-id="f653b-208">The process fails.</span></span>  
  
-   <span data-ttu-id="f653b-209">重写此方法以引发异常。</span><span class="sxs-lookup"><span data-stu-id="f653b-209">This method is overridden to throw an exception.</span></span>  
  
 <span data-ttu-id="f653b-210">此方法的默认实现是一个 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="f653b-210">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-211">
            <para>此方法允许实施者能定义将元素插入到基础之后必须执行的过程<see cref="T:System.Collections.ArrayList" />。通过定义此方法，实施者可以对继承的方法添加功能，而无需重写所有其他方法。 <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />而标准的插入行为之前, 调用<see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />标准插入行为之后调用。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-211">
              <para>This method allows implementers to define processes that must be performed after inserting the element into the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" /> is invoked after the standard Insert behavior.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnRemove">
      <MemberSignature Language="C#" Value="protected virtual void OnRemove (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemove(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemove (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemove(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRemove : int * obj -&gt; unit&#xA;override this.OnRemove : int * obj -&gt; unit" Usage="collectionBase.OnRemove (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f653b-212">The zero-based index at which <c>value</c> can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-212">The zero-based index at which <c>value</c> can be found.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f653b-213">The value of the element to remove from <c>index</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-213">The value of the element to remove from <c>index</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-214">Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-214">Performs additional custom processes when removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-215">此方法的默认实现需要由派生类中移除指定的元素之前执行一些操作中重写。</span><span class="sxs-lookup"><span data-stu-id="f653b-215">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.</span></span>  
  
 <span data-ttu-id="f653b-216">仅在返回的实例上调用 On \* 方法<xref:System.Collections.CollectionBase.List%2A>属性，但不是能在返回的实例<xref:System.Collections.CollectionBase.InnerList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f653b-216">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="f653b-217">如果进程失败，集合将恢复到以前的状态。</span><span class="sxs-lookup"><span data-stu-id="f653b-217">If the process fails, the collection reverts back to its previous state.</span></span>  
  
 <span data-ttu-id="f653b-218">此方法的默认实现是一个 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="f653b-218">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f653b-219">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-219">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-220">
            <para>此方法允许实施者能定义从基础删除元素之前必须执行的过程<see cref="T:System.Collections.ArrayList" />。通过定义此方法，实施者可以对继承的方法添加功能，而无需重写所有其他方法。 <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />而标准的移除行为之前, 调用<see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />标准删除行为之后调用。例如，实施者可以阻止移除元素，通过始终引发异常<see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />。 <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />在此方法之前调用。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-220">
              <para>This method allows implementers to define processes that must be performed before removing the element from the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> is invoked after the standard Remove behavior.  For example, implementers can prevent removal of elements by always throwing an exception in <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> is called prior to this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnClear" />
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRemoveComplete : int * obj -&gt; unit&#xA;override this.OnRemoveComplete : int * obj -&gt; unit" Usage="collectionBase.OnRemoveComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f653b-221">The zero-based index at which <c>value</c> can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-221">The zero-based index at which <c>value</c> can be found.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f653b-222">The value of the element to remove from <c>index</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-222">The value of the element to remove from <c>index</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-223">Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-223">Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-224">此方法的默认实现需要通过执行一些操作删除指定的元素之后的派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="f653b-224">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.</span></span>  
  
 <span data-ttu-id="f653b-225">仅在返回的实例上调用 On \* 方法<xref:System.Collections.CollectionBase.List%2A>属性，但不是能在返回的实例<xref:System.Collections.CollectionBase.InnerList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f653b-225">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="f653b-226">如果发生以下其中一项，则集合将恢复到以前的状态：</span><span class="sxs-lookup"><span data-stu-id="f653b-226">The collection reverts back to its previous state if one of the following occurs:</span></span>  
  
-   <span data-ttu-id="f653b-227">过程将失败。</span><span class="sxs-lookup"><span data-stu-id="f653b-227">The process fails.</span></span>  
  
-   <span data-ttu-id="f653b-228">重写此方法以引发异常。</span><span class="sxs-lookup"><span data-stu-id="f653b-228">This method is overridden to throw an exception.</span></span>  
  
 <span data-ttu-id="f653b-229">此方法的默认实现是一个 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="f653b-229">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-230">
            <para>此方法允许实施者能定义从基础删除元素后，必须执行的过程<see cref="T:System.Collections.ArrayList" />。通过定义此方法，实施者可以对继承的方法添加功能，而无需重写所有其他方法。 <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />而标准的移除行为之前, 调用<see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />标准删除行为之后调用。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-230">
              <para>This method allows implementers to define processes that must be performed after removing the element from the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" /> is invoked after the standard Remove behavior.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnClearComplete" />
      </Docs>
    </Member>
    <Member MemberName="OnSet">
      <MemberSignature Language="C#" Value="protected virtual void OnSet (int index, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSet(int32 index, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSet (index As Integer, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSet(int index, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnSet : int * obj * obj -&gt; unit&#xA;override this.OnSet : int * obj * obj -&gt; unit" Usage="collectionBase.OnSet (index, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f653b-231">The zero-based index at which <c>oldValue</c> can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-231">The zero-based index at which <c>oldValue</c> can be found.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="f653b-232">The value to replace with <c>newValue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-232">The value to replace with <c>newValue</c>.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="f653b-233">The new value of the element at <c>index</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-233">The new value of the element at <c>index</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-234">Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-234">Performs additional custom processes before setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-235">此方法的默认实现需要的设置指定的元素之前执行一些操作派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="f653b-235">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.</span></span>  
  
 <span data-ttu-id="f653b-236">仅在返回的实例上调用 On \* 方法<xref:System.Collections.CollectionBase.List%2A>属性，但不是能在返回的实例<xref:System.Collections.CollectionBase.InnerList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f653b-236">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="f653b-237">如果进程失败，集合将恢复到以前的状态。</span><span class="sxs-lookup"><span data-stu-id="f653b-237">If the process fails, the collection reverts back to its previous state.</span></span>  
  
 <span data-ttu-id="f653b-238">此方法的默认实现是一个 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="f653b-238">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f653b-239">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-239">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-240">
            <para>此方法允许实施者能定义必须在基础中设置指定的元素之前执行的过程<see cref="T:System.Collections.ArrayList" />。通过定义此方法，实施者可以对继承的方法添加功能，而无需重写所有其他方法。 <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />而标准的设置行为之前调用<see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />标准集行为之后调用。例如，实施者可以限制哪些值可以通过执行检查内部覆盖<see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />。 <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />在此方法之前调用。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-240">
              <para>This method allows implementers to define processes that must be performed before setting the specified element in the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> is invoked after the standard Set behavior.  For example, implementers can restrict which values can be overwritten by performing a check inside <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> is called prior to this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnSetComplete (int index, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetComplete(int32 index, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetComplete (index As Integer, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetComplete(int index, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnSetComplete : int * obj * obj -&gt; unit&#xA;override this.OnSetComplete : int * obj * obj -&gt; unit" Usage="collectionBase.OnSetComplete (index, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f653b-241">The zero-based index at which <c>oldValue</c> can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-241">The zero-based index at which <c>oldValue</c> can be found.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="f653b-242">The value to replace with <c>newValue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-242">The value to replace with <c>newValue</c>.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="f653b-243">The new value of the element at <c>index</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-243">The new value of the element at <c>index</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-244">Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-244">Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-245">此方法的默认实现需要的设置指定的元素后执行一些操作派生类中重写。</span><span class="sxs-lookup"><span data-stu-id="f653b-245">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.</span></span>  
  
 <span data-ttu-id="f653b-246">仅在返回的实例上调用 On \* 方法<xref:System.Collections.CollectionBase.List%2A>属性，但不是能在返回的实例<xref:System.Collections.CollectionBase.InnerList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f653b-246">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="f653b-247">如果发生以下其中一项，则集合将恢复到以前的状态：</span><span class="sxs-lookup"><span data-stu-id="f653b-247">The collection reverts back to its previous state if one of the following occurs:</span></span>  
  
-   <span data-ttu-id="f653b-248">过程将失败。</span><span class="sxs-lookup"><span data-stu-id="f653b-248">The process fails.</span></span>  
  
-   <span data-ttu-id="f653b-249">重写此方法以引发异常。</span><span class="sxs-lookup"><span data-stu-id="f653b-249">This method is overridden to throw an exception.</span></span>  
  
 <span data-ttu-id="f653b-250">此方法的默认实现是一个 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="f653b-250">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-251">
            <para>此方法允许实施者能定义必须在基础中设置指定的元素之后执行的过程<see cref="T:System.Collections.ArrayList" />。通过定义此方法，实施者可以对继承的方法添加功能，而无需重写所有其他方法。 <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />而标准的设置行为之前调用<see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />标准集行为之后调用。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-251">
              <para>This method allows implementers to define processes that must be performed after setting the specified element in the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> is invoked after the standard Set behavior.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected virtual void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnValidate : obj -&gt; unit&#xA;override this.OnValidate : obj -&gt; unit" Usage="collectionBase.OnValidate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f653b-252">The object to validate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-252">The object to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-253">Performs additional custom processes when validating a value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-253">Performs additional custom processes when validating a value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-254">此方法的默认实现确定是否`value`是`null`，并且，如果是这样，将引发<xref:System.ArgumentNullException>。</span><span class="sxs-lookup"><span data-stu-id="f653b-254">The default implementation of this method determines whether `value` is `null`, and, if so, throws <xref:System.ArgumentNullException>.</span></span> <span data-ttu-id="f653b-255">它旨在由派生类时验证指定的元素执行其他操作中被重写。</span><span class="sxs-lookup"><span data-stu-id="f653b-255">It is intended to be overridden by a derived class to perform additional action when the specified element is validated.</span></span>  
  
 <span data-ttu-id="f653b-256">仅在返回的实例上调用 On \* 方法<xref:System.Collections.CollectionBase.List%2A>属性，但不是能在返回的实例<xref:System.Collections.CollectionBase.InnerList%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f653b-256">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.CollectionBase.List%2A> property, but not on the instance returned by the <xref:System.Collections.CollectionBase.InnerList%2A> property.</span></span>  
  
 <span data-ttu-id="f653b-257">此方法的默认实现是一个 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="f653b-257">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f653b-258">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-258">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f653b-259">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-259">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-260">
            <para>此方法允许实施者能定义执行的基础的标准行为时必须执行的过程<see cref="T:System.Collections.ArrayList" />。通过定义此方法，实施者可以对继承的方法添加功能，而无需重写所有其他方法。 <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />可以用于对加以限制的对象集合中可接受的类型。默认实现可防止发生<see langword="null" />中添加或删除从基础<see cref="T:System.Collections.ArrayList" />。 <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />之前调用<see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />， <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />，和<see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-260">
              <para>This method allows implementers to define processes that must be performed when executing the standard behavior of the underlying <see cref="T:System.Collections.ArrayList" />. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> can be used to impose restrictions on the type of objects that are accepted into the collection. The default implementation prevents <see langword="null" /> from being added to or removed from the underlying <see cref="T:System.Collections.ArrayList" />.  <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" /> is called prior to <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="collectionBase.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f653b-261">The zero-based index of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-261">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-262">Removes the element at the specified index of the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-262">Removes the element at the specified index of the <see cref="T:System.Collections.CollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="f653b-263">This method is not overridable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-263">This method is not overridable.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-264">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="f653b-264">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="f653b-265">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="f653b-265">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="f653b-266">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="f653b-266">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="f653b-267">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.CollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="f653b-267">This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f653b-268">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-268">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f653b-269">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-269">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-270">
            <para>此方法调用<see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />， <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />，和<see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-270">
              <para>This method calls <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="f653b-271">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-271">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
          <span data-ttu-id="f653b-272">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-272">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="f653b-273">The zero-based index in <c>array</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-273">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-274">Copies the entire <see cref="T:System.Collections.CollectionBase" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-274">Copies the entire <see cref="T:System.Collections.CollectionBase" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-275">指定的数组必须具有兼容类型。</span><span class="sxs-lookup"><span data-stu-id="f653b-275">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="f653b-276">此方法使用<xref:System.Array.Copy%2A?displayProperty=nameWithType>要复制的元素。</span><span class="sxs-lookup"><span data-stu-id="f653b-276">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="f653b-277">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.CollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="f653b-277">This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f653b-278">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-278">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f653b-279">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-279">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f653b-280">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-280">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="f653b-281">-or-  The number of elements in the source <see cref="T:System.Collections.CollectionBase" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-281">-or-  The number of elements in the source <see cref="T:System.Collections.CollectionBase" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="f653b-282">The type of the source <see cref="T:System.Collections.CollectionBase" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-282">The type of the source <see cref="T:System.Collections.CollectionBase" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.CollectionBase.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f653b-283">Gets a value indicating whether access to the <see cref="T:System.Collections.CollectionBase" /> is synchronized (thread safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-283">Gets a value indicating whether access to the <see cref="T:System.Collections.CollectionBase" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f653b-284">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.CollectionBase" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-284">
              <see langword="true" /> if access to the <see cref="T:System.Collections.CollectionBase" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f653b-285">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-285">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-286">A<xref:System.Collections.CollectionBase>实例不同步。</span><span class="sxs-lookup"><span data-stu-id="f653b-286">A <xref:System.Collections.CollectionBase> instance is not synchronized.</span></span> <span data-ttu-id="f653b-287">派生的类可以提供的同步的版本<xref:System.Collections.CollectionBase>使用<xref:System.Collections.ICollection.SyncRoot%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f653b-287">Derived classes can provide a synchronized version of the <xref:System.Collections.CollectionBase> using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="f653b-288">枚举整个集合本质上不是线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="f653b-288">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="f653b-289">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="f653b-289">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="f653b-290">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="f653b-290">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="f653b-291">下面的代码示例演示如何锁定集合使用<xref:System.Collections.ICollection.SyncRoot%2A>在整个枚举期间：</span><span class="sxs-lookup"><span data-stu-id="f653b-291">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.CollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/remarks.cs#2)]
 [!code-vb[System.Collections.CollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/remarks.vb#2)]  
  
 <span data-ttu-id="f653b-292">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="f653b-292">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.CollectionBase.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f653b-293">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-293">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f653b-294">可用于同步对 <see cref="T:System.Collections.CollectionBase" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-294">An object that can be used to synchronize access to the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-295">派生的类可以提供自己的同步的版本<xref:System.Collections.CollectionBase>使用<xref:System.Collections.ICollection.SyncRoot%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f653b-295">Derived classes can provide their own synchronized version of the <xref:System.Collections.CollectionBase> using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="f653b-296">同步代码必须在执行操作<xref:System.Collections.ICollection.SyncRoot%2A>的<xref:System.Collections.CollectionBase>，而不是直接在<xref:System.Collections.CollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="f653b-296">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the <xref:System.Collections.CollectionBase>, not directly on the <xref:System.Collections.CollectionBase>.</span></span> <span data-ttu-id="f653b-297">这样可确保对从其他对象派生的集合正确地执行操作。</span><span class="sxs-lookup"><span data-stu-id="f653b-297">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="f653b-298">具体地说，这样可保持正确的同步，与可能同时对修改其他线程<xref:System.Collections.CollectionBase>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-298">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.CollectionBase> object.</span></span>  
  
 <span data-ttu-id="f653b-299">枚举整个集合本质上不是线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="f653b-299">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="f653b-300">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="f653b-300">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="f653b-301">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="f653b-301">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="f653b-302">下面的代码示例演示如何锁定集合使用<xref:System.Collections.ICollection.SyncRoot%2A>在整个枚举期间：</span><span class="sxs-lookup"><span data-stu-id="f653b-302">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/remarks.cpp#2)]
 [!code-csharp[System.Collections.CollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/remarks.cs#2)]
 [!code-vb[System.Collections.CollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/remarks.vb#2)]  
  
 <span data-ttu-id="f653b-303">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="f653b-303">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f653b-304">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-304">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-305">Adds an object to the end of the <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-305">Adds an object to the end of the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f653b-306">The <see cref="T:System.Collections.CollectionBase" /> index at which the <paramref name="value" /> has been added.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-306">The <see cref="T:System.Collections.CollectionBase" /> index at which the <paramref name="value" /> has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-307">如果<xref:System.Collections.CollectionBase.Count%2A>已等于容量、 通过自动重新分配在内部数组并将现有的元素复制到新数组，然后才能添加新元素列表的容量加倍。</span><span class="sxs-lookup"><span data-stu-id="f653b-307">If <xref:System.Collections.CollectionBase.Count%2A> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array and copying the existing elements to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="f653b-308">如果<xref:System.Collections.CollectionBase.Count%2A>小于容量，此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="f653b-308">If <xref:System.Collections.CollectionBase.Count%2A> is less than the capacity, this method is an O(1) operation.</span></span> <span data-ttu-id="f653b-309">如果容量需要增加以容纳新元素，此方法会成为 O (`n`) 操作，其中`n`是<xref:System.Collections.CollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="f653b-309">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f653b-310">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-310">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f653b-311">The <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-311">The <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="f653b-312">-or-  The <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-312">-or-  The <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-313">
            <para>此方法调用<see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />， <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />，和<see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-313">
              <para>This method calls <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Collections.CollectionBase.Count" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f653b-314">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-314">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-315">Determines whether the <see cref="T:System.Collections.CollectionBase" /> contains a specific element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-315">Determines whether the <see cref="T:System.Collections.CollectionBase" /> contains a specific element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f653b-316">
            <see langword="true" /> if the <see cref="T:System.Collections.CollectionBase" /> contains the specified <paramref name="value" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-316">
              <see langword="true" /> if the <see cref="T:System.Collections.CollectionBase" /> contains the specified <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-317">此方法执行的线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.CollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="f653b-317">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 <span data-ttu-id="f653b-318">此方法通过调用可确定相等性<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f653b-318">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f653b-319">从.NET Framework 2.0 开始，此方法使用集合的对象<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`以确定是否`item`存在。</span><span class="sxs-lookup"><span data-stu-id="f653b-319">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists.</span></span> <span data-ttu-id="f653b-320">在.NET Framework 的早期版本，通过进行此决定<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`参数的集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-320">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f653b-321">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-321">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f653b-322">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-322">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-323">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-323">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f653b-324">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.CollectionBase" />, if found; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-324">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.CollectionBase" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-325">此方法执行的线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.CollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="f653b-325">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 <span data-ttu-id="f653b-326">此方法通过调用可确定相等性<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f653b-326">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f653b-327">从.NET Framework 2.0 开始，此方法使用集合的对象<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`以确定是否`item`存在。</span><span class="sxs-lookup"><span data-stu-id="f653b-327">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists.</span></span> <span data-ttu-id="f653b-328">在.NET Framework 的早期版本，通过进行此决定<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`参数的集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-328">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f653b-329">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-329">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f653b-330">The zero-based index at which <c>value</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-330">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f653b-331">The <see cref="T:System.Object" /> to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-331">The <see cref="T:System.Object" /> to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-332">Inserts an element into the <see cref="T:System.Collections.CollectionBase" /> at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-332">Inserts an element into the <see cref="T:System.Collections.CollectionBase" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-333">如果<xref:System.Collections.CollectionBase.Count%2A>已经等于容量、 列表的容量翻倍通过自动重新分配在内部数组，才能插入新元素。</span><span class="sxs-lookup"><span data-stu-id="f653b-333">If <xref:System.Collections.CollectionBase.Count%2A> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array before the new element is inserted.</span></span>  
  
 <span data-ttu-id="f653b-334">如果`index`等同于<xref:System.Collections.CollectionBase.Count%2A>，`value`添加到末尾<xref:System.Collections.CollectionBase>。</span><span class="sxs-lookup"><span data-stu-id="f653b-334">If `index` is equal to <xref:System.Collections.CollectionBase.Count%2A>, `value` is added to the end of <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="f653b-335">在由连续的元素组成的集合（如列表）中，插入点下面的元素将下移以容纳新的元素。</span><span class="sxs-lookup"><span data-stu-id="f653b-335">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="f653b-336">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="f653b-336">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="f653b-337">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="f653b-337">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="f653b-338">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.CollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="f653b-338">This method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f653b-339">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-339">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f653b-340">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-340">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f653b-341">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-341">-or-  <paramref name="index" /> is greater than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f653b-342">The <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-342">The <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="f653b-343">-or-  The <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-343">-or-  The <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-344">
            <para>此方法调用<see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />， <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />，和<see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-344">
              <para>This method calls <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.CollectionBase.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f653b-345">Gets a value indicating whether the <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-345">Gets a value indicating whether the <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f653b-346">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Collections.CollectionBase" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-346">
              <see langword="true" /> if the <see cref="T:System.Collections.CollectionBase" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f653b-347">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-347">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-348">具有固定大小的集合在创建之后不能再添加或移除元素，但是允许修改现有元素。</span><span class="sxs-lookup"><span data-stu-id="f653b-348">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="f653b-349">具有固定大小的集合是只是一个集合的包装器防止添加和移除元素;因此，如果对基础集合，包括添加或移除元素，进行更改的固定大小的集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="f653b-349">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f653b-350">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="f653b-350">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.CollectionBase.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f653b-351">Gets a value indicating whether the <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-351">Gets a value indicating whether the <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f653b-352">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Collections.CollectionBase" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-352">
              <see langword="true" /> if the <see cref="T:System.Collections.CollectionBase" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f653b-353">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-353">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-354">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="f653b-354">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="f653b-355">集合是只读的是只是一个集合与防止集合; 进行修改的包装因此，如果对基础集合进行更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="f653b-355">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f653b-356">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="f653b-356">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.CollectionBase.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f653b-357">The zero-based index of the element to get or set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-357">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-358">Gets or sets the element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-358">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f653b-359">指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-359">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-360">可以使用下面的语法通过此属性访问集合中的特定元素：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="f653b-360">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="f653b-361">检索此属性的值的运算 o （1）;设置属性也是 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="f653b-361">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f653b-362">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-362">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f653b-363">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-363">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="f653b-364">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-364">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.CollectionBase.Count" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-365">
            <para>当设置此属性，方法<see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />， <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />，和<see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />调用。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-365">
              <para>When this property is set, the methods <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" /> are called.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Collections.CollectionBase.Count" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="f653b-366">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-366">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f653b-367">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.CollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-367">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.CollectionBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f653b-368">如果<xref:System.Collections.CollectionBase>不包含指定的对象，<xref:System.Collections.CollectionBase>保持不变。</span><span class="sxs-lookup"><span data-stu-id="f653b-368">If the <xref:System.Collections.CollectionBase> does not contain the specified object, the <xref:System.Collections.CollectionBase> remains unchanged.</span></span> <span data-ttu-id="f653b-369">不引发异常。</span><span class="sxs-lookup"><span data-stu-id="f653b-369">No exception is thrown.</span></span>  
  
 <span data-ttu-id="f653b-370">此方法执行的线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.CollectionBase.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="f653b-370">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.CollectionBase.Count%2A>.</span></span>  
  
 <span data-ttu-id="f653b-371">此方法通过调用可确定相等性<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f653b-371">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f653b-372">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="f653b-372">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="f653b-373">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="f653b-373">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="f653b-374">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="f653b-374">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f653b-375">下面的代码示例实现<xref:System.Collections.CollectionBase>类，并使用该实现创建的集合<xref:System.Int16>对象。</span><span class="sxs-lookup"><span data-stu-id="f653b-375">The following code example implements the <xref:System.Collections.CollectionBase> class and uses that implementation to create a collection of <xref:System.Int16> objects.</span></span>  
  
 [!code-cpp[System.Collections.CollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CPP/collectionbase.cpp#1)]
 [!code-csharp[System.Collections.CollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CollectionBase/CS/collectionbase.cs#1)]
 [!code-vb[System.Collections.CollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CollectionBase/VB/collectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f653b-376">The <paramref name="value" /> parameter was not found in the <see cref="T:System.Collections.CollectionBase" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-376">The <paramref name="value" /> parameter was not found in the <see cref="T:System.Collections.CollectionBase" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f653b-377">The <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-377">The <see cref="T:System.Collections.CollectionBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="f653b-378">-or-  The <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-378">-or-  The <see cref="T:System.Collections.CollectionBase" /> has a fixed size.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="f653b-379">
            <para>此方法调用<see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />， <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />，和<see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f653b-379">
              <para>This method calls <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)" />, <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />, and <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.IList.Add(System.Object)" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>