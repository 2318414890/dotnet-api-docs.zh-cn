<Type Name="CaseInsensitiveComparer" FullName="System.Collections.CaseInsensitiveComparer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="adbc375538a3188cb6891fe900adbcf9a9bd8438" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48684243" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CaseInsensitiveComparer : System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CaseInsensitiveComparer extends System.Object implements class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.CaseInsensitiveComparer" />
  <TypeSignature Language="VB.NET" Value="Public Class CaseInsensitiveComparer&#xA;Implements IComparer" />
  <TypeSignature Language="C++ CLI" Value="public ref class CaseInsensitiveComparer : System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type CaseInsensitiveComparer = class&#xA;    interface IComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="68c01-101">比较两个对象是否相等，比较时忽略字符串的大小写。</span>
      <span class="sxs-lookup">
        <span data-stu-id="68c01-101">Compares two objects for equivalence, ignoring the case of strings.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c01-102"><xref:System.Collections.CaseInsensitiveComparer> 实现<xref:System.Collections.IComparer>接口支持对字符串，不区分大小写比较，就像<xref:System.Collections.CaseInsensitiveHashCodeProvider>实现<xref:System.Collections.IHashCodeProvider>接口支持对字符串不区分大小写的比较。</span><span class="sxs-lookup"><span data-stu-id="68c01-102"><xref:System.Collections.CaseInsensitiveComparer> implements the <xref:System.Collections.IComparer> interface supporting case-insensitive comparisons on strings, just as <xref:System.Collections.CaseInsensitiveHashCodeProvider> implements the <xref:System.Collections.IHashCodeProvider> interface supporting case-insensitive comparisons on strings.</span></span>  
  
 <span data-ttu-id="68c01-103"><xref:System.Collections.Comparer>类是默认实现<xref:System.Collections.IComparer>接口，并执行区分大小写的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="68c01-103">The <xref:System.Collections.Comparer> class is the default implementation of the <xref:System.Collections.IComparer> interface and performs case-sensitive string comparisons.</span></span>  
  
 <span data-ttu-id="68c01-104">作为键，即可通过使用的对象<xref:System.Collections.Hashtable>需重写<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>方法 (或<xref:System.Collections.IHashCodeProvider>接口) 和<xref:System.Object.Equals%2A?displayProperty=nameWithType>方法 (或<xref:System.Collections.IComparer>接口)。</span><span class="sxs-lookup"><span data-stu-id="68c01-104">The objects used as keys by a <xref:System.Collections.Hashtable> are required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IHashCodeProvider> interface) and the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IComparer> interface).</span></span> <span data-ttu-id="68c01-105">方法或接口的实现必须处理区分大小写相同的方式;否则为<xref:System.Collections.Hashtable>行为可能不正确。</span><span class="sxs-lookup"><span data-stu-id="68c01-105">The implementation of both methods or interfaces must handle case sensitivity the same way; otherwise, the <xref:System.Collections.Hashtable> might behave incorrectly.</span></span> <span data-ttu-id="68c01-106">例如，在创建<xref:System.Collections.Hashtable>，你必须使用与此类<xref:System.Collections.CaseInsensitiveHashCodeProvider>类或任何不区分大小写<xref:System.Collections.IHashCodeProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="68c01-106">For example, when creating a <xref:System.Collections.Hashtable>, you must use this class with the <xref:System.Collections.CaseInsensitiveHashCodeProvider> class or any case-insensitive <xref:System.Collections.IHashCodeProvider> implementation.</span></span>  
  
 <span data-ttu-id="68c01-107">字符串比较可能会有不同的结果，具体取决于区域性。</span><span class="sxs-lookup"><span data-stu-id="68c01-107">String comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="68c01-108">有关特定于区域性的比较的详细信息，请参阅<xref:System.Globalization>命名空间和[全球化和本地化](~/docs/standard/globalization-localization/index.md)。</span><span class="sxs-lookup"><span data-stu-id="68c01-108">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c01-109">下面的代码示例创建一个区分大小写的哈希表和不区分大小写的哈希表，并演示其行为的区别，即使它们都包含相同的元素。</span><span class="sxs-lookup"><span data-stu-id="68c01-109">The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</span></span>  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.Comparer" />
    <altmember cref="T:System.Globalization.CompareInfo" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
      <span data-ttu-id="68c01-110">在集合中执行不区分区域性的字符串操作</span>
      <span class="sxs-lookup">
        <span data-stu-id="68c01-110">Performing Culture-Insensitive String Operations in Collections</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="68c01-111">初始化 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-111">Initializes a new instance of the <see cref="T:System.Collections.CaseInsensitiveComparer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="68c01-112">使用当前线程的 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 初始化 <see cref="P:System.Threading.Thread.CurrentCulture" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-112">Initializes a new instance of the <see cref="T:System.Collections.CaseInsensitiveComparer" /> class using the <see cref="P:System.Threading.Thread.CurrentCulture" /> of the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c01-113">当<xref:System.Collections.CaseInsensitiveComparer>使用此构造函数，创建实例<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>保存当前线程。</span><span class="sxs-lookup"><span data-stu-id="68c01-113">When the <xref:System.Collections.CaseInsensitiveComparer> instance is created using this constructor, the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> of the current thread is saved.</span></span> <span data-ttu-id="68c01-114">比较过程使用已保存的区域性来确定排序顺序和大小写规则;因此，字符串比较可能会有不同的结果，具体取决于区域性。</span><span class="sxs-lookup"><span data-stu-id="68c01-114">Comparison procedures use the saved culture to determine the sort order and casing rules; therefore, string comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="68c01-115">有关特定于区域性的比较的详细信息，请参阅<xref:System.Globalization>命名空间和[全球化和本地化](~/docs/standard/globalization-localization/index.md)。</span><span class="sxs-lookup"><span data-stu-id="68c01-115">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c01-116">下面的代码示例创建一个区分大小写的哈希表和不区分大小写的哈希表，并演示其行为的区别，即使它们都包含相同的元素。</span><span class="sxs-lookup"><span data-stu-id="68c01-116">The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</span></span>  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="68c01-117">在集合中执行不区分区域性的字符串操作</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-117">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveComparer (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveComparer(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.Collections.CaseInsensitiveComparer : System.Globalization.CultureInfo -&gt; System.Collections.CaseInsensitiveComparer" Usage="new System.Collections.CaseInsensitiveComparer culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="68c01-118">要用于新 <see cref="T:System.Globalization.CultureInfo" /> 的 <see cref="T:System.Collections.CaseInsensitiveComparer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-118">The <see cref="T:System.Globalization.CultureInfo" /> to use for the new <see cref="T:System.Collections.CaseInsensitiveComparer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68c01-119">使用指定的 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 初始化 <see cref="T:System.Globalization.CultureInfo" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-119">Initializes a new instance of the <see cref="T:System.Collections.CaseInsensitiveComparer" /> class using the specified <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c01-120">使用指定的比较过程<xref:System.Globalization.CultureInfo?displayProperty=nameWithType>来确定排序顺序和大小写规则。</span><span class="sxs-lookup"><span data-stu-id="68c01-120">Comparison procedures use the specified <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> to determine the sort order and casing rules.</span></span> <span data-ttu-id="68c01-121">字符串比较可能会有不同的结果，具体取决于区域性。</span><span class="sxs-lookup"><span data-stu-id="68c01-121">String comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="68c01-122">有关特定于区域性的比较的详细信息，请参阅<xref:System.Globalization>命名空间和[全球化和本地化](~/docs/standard/globalization-localization/index.md)。</span><span class="sxs-lookup"><span data-stu-id="68c01-122">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c01-123">下面的代码示例创建一个区分大小写的哈希表和不区分大小写的哈希表，并演示其行为的区别，即使它们都包含相同的元素。</span><span class="sxs-lookup"><span data-stu-id="68c01-123">The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</span></span>  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68c01-124">
            <paramref name="culture" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-124">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="68c01-125">在集合中执行不区分区域性的字符串操作</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-125">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (a As Object, b As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ a, System::Object ^ b);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="caseInsensitiveComparer.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="68c01-126">要比较的第一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-126">The first object to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="68c01-127">要比较的第二个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-127">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="68c01-128">对同一类型的两个对象执行不区分大小写的比较，并返回一个值，指示其中一个对象是小于、等于还是大于另一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-128">Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="68c01-129">一个有符号整数，指示 <paramref name="a" /> 和 <paramref name="b" /> 的相对值，如下表所示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-129">A signed integer that indicates the relative values of <paramref name="a" /> and <paramref name="b" />, as shown in the following table.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="68c01-130">“值”</span>
                <span class="sxs-lookup">
                  <span data-stu-id="68c01-130">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="68c01-131">含义</span>
                <span class="sxs-lookup">
                  <span data-stu-id="68c01-131">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="68c01-132">小于零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="68c01-132">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="68c01-133">在忽略大小写的情况下，<paramref name="a" /> 小于 <paramref name="b" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="68c01-133">
                    <paramref name="a" /> is less than <paramref name="b" />, with casing ignored.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="68c01-134">零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="68c01-134">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="68c01-135">在忽略大小写的情况下，<paramref name="a" /> 等于 <paramref name="b" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="68c01-135">
                    <paramref name="a" /> equals <paramref name="b" />, with casing ignored.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="68c01-136">大于零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="68c01-136">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="68c01-137">在忽略大小写的情况下，<paramref name="a" /> 大于 <paramref name="b" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="68c01-137">
                    <paramref name="a" /> is greater than <paramref name="b" />, with casing ignored.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c01-138">如果`a`并`b`是两个字符串，此方法使用<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>忽略它们进行比较的字符串大小写; 否则，它使用<xref:System.IComparable>任一对象的实现。</span><span class="sxs-lookup"><span data-stu-id="68c01-138">If `a` and `b` are both strings, this method uses <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> to compare the strings with the casing ignored; otherwise, it uses the <xref:System.IComparable> implementation of either object.</span></span> <span data-ttu-id="68c01-139">也就是说，如果`a`实现<xref:System.IComparable>，则此方法返回的结果`a`。</span><span class="sxs-lookup"><span data-stu-id="68c01-139">That is, if `a` implements <xref:System.IComparable>, then this method returns the result of `a`.</span></span> <span data-ttu-id="68c01-140">`CompareTo` (`b`); 否则为如果`b`实现<xref:System.IComparable>，则会返回求反后的结果`b`。</span><span class="sxs-lookup"><span data-stu-id="68c01-140">`CompareTo` (`b`); otherwise, if `b` implements <xref:System.IComparable>, then it returns the negated result of `b`.</span></span> <span data-ttu-id="68c01-141">`CompareTo` (`a`).</span><span class="sxs-lookup"><span data-stu-id="68c01-141">`CompareTo` (`a`).</span></span>  
  
 <span data-ttu-id="68c01-142">比较`null`允许使用任何类型和使用时不会生成异常<xref:System.IComparable>。</span><span class="sxs-lookup"><span data-stu-id="68c01-142">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="68c01-143">排序时，`null`被视为小于任何其他对象。</span><span class="sxs-lookup"><span data-stu-id="68c01-143">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="68c01-144">字符串比较可能会有不同的结果，具体取决于区域性。</span><span class="sxs-lookup"><span data-stu-id="68c01-144">String comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="68c01-145">有关特定于区域性的比较的详细信息，请参阅<xref:System.Globalization>命名空间和[全球化和本地化](~/docs/standard/globalization-localization/index.md)。</span><span class="sxs-lookup"><span data-stu-id="68c01-145">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="68c01-146">
            <paramref name="a" /> 和 <paramref name="b" /> 都不实现 <see cref="T:System.IComparable" /> 接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-146">Neither <paramref name="a" /> nor <paramref name="b" /> implements the <see cref="T:System.IComparable" /> interface.</span>
          </span>
          <span data-ttu-id="68c01-147">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-147">-or-</span>
          </span>
          <span data-ttu-id="68c01-148">
            <paramref name="a" /> 和 <paramref name="b" /> 的类型不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-148">
              <paramref name="a" /> and <paramref name="b" /> are of different types.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="68c01-149">在集合中执行不区分区域性的字符串操作</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-149">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveComparer Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveComparer Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveComparer.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As CaseInsensitiveComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveComparer ^ Default { System::Collections::CaseInsensitiveComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.CaseInsensitiveComparer" Usage="System.Collections.CaseInsensitiveComparer.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68c01-150">获取 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的一个实例，该实例与当前线程的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 关联并且始终可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-150">Gets an instance of <see cref="T:System.Collections.CaseInsensitiveComparer" /> that is associated with the <see cref="P:System.Threading.Thread.CurrentCulture" /> of the current thread and that is always available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68c01-151">
            <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的实例，它与当前线程的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-151">An instance of <see cref="T:System.Collections.CaseInsensitiveComparer" /> that is associated with the <see cref="P:System.Threading.Thread.CurrentCulture" /> of the current thread.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c01-152">当<xref:System.Collections.CaseInsensitiveComparer>使用无参数构造函数中，创建实例<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>保存当前线程。</span><span class="sxs-lookup"><span data-stu-id="68c01-152">When the <xref:System.Collections.CaseInsensitiveComparer> instance is created using the parameterless constructor, the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> of the current thread is saved.</span></span> <span data-ttu-id="68c01-153">比较过程使用已保存的区域性来确定排序顺序和大小写规则;因此，字符串比较可能会有不同的结果，具体取决于区域性。</span><span class="sxs-lookup"><span data-stu-id="68c01-153">Comparison procedures use the saved culture to determine the sort order and casing rules; therefore, string comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="68c01-154">有关特定于区域性的比较的详细信息，请参阅<xref:System.Globalization>命名空间和[全球化和本地化](~/docs/standard/globalization-localization/index.md)。</span><span class="sxs-lookup"><span data-stu-id="68c01-154">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="68c01-155">在集合中执行不区分区域性的字符串操作</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-155">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DefaultInvariant">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveComparer DefaultInvariant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveComparer DefaultInvariant" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultInvariant As CaseInsensitiveComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveComparer ^ DefaultInvariant { System::Collections::CaseInsensitiveComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultInvariant : System.Collections.CaseInsensitiveComparer" Usage="System.Collections.CaseInsensitiveComparer.DefaultInvariant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="68c01-156">获取 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的一个实例，该实例与 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 关联并且始终可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-156">Gets an instance of <see cref="T:System.Collections.CaseInsensitiveComparer" /> that is associated with <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> and that is always available.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="68c01-157">
            <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的实例，它与 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-157">An instance of <see cref="T:System.Collections.CaseInsensitiveComparer" /> that is associated with <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c01-158">比较过程使用<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>来确定排序顺序和大小写规则。</span><span class="sxs-lookup"><span data-stu-id="68c01-158">Comparison procedures use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> to determine the sort order and casing rules.</span></span> <span data-ttu-id="68c01-159">字符串比较可能会有不同的结果，具体取决于区域性。</span><span class="sxs-lookup"><span data-stu-id="68c01-159">String comparisons might have different results depending on the culture.</span></span> <span data-ttu-id="68c01-160">有关特定于区域性的比较的详细信息，请参阅<xref:System.Globalization>命名空间和[全球化和本地化](~/docs/standard/globalization-localization/index.md)。</span><span class="sxs-lookup"><span data-stu-id="68c01-160">For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68c01-161">下面的代码示例创建一个区分大小写的哈希表和不区分大小写的哈希表，并演示其行为的区别，即使它们都包含相同的元素。</span><span class="sxs-lookup"><span data-stu-id="68c01-161">The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.</span></span>  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">
          <span data-ttu-id="68c01-162">在集合中执行不区分区域性的字符串操作</span>
          <span class="sxs-lookup">
            <span data-stu-id="68c01-162">Performing Culture-Insensitive String Operations in Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>