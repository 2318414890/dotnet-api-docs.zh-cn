<Type Name="ArrayList" FullName="System.Collections.ArrayList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a105732aa94698f5ea781b6eed29feca20656b5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ArrayList : ICloneable, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArrayList extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ArrayList" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrayList&#xA;Implements ICloneable, IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrayList : ICloneable, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.ArrayList/ArrayListDebugView))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a90e7-101">使用大小会根据需要动态增加的数组来实现 <see cref="T:System.Collections.IList" /> 接口。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a90e7-101">Implements the <see cref="T:System.Collections.IList" /> interface using an array whose size is dynamically increased as required.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-102"><xref:System.Collections.ArrayList>类旨在保存异类对象的集合。</span><span class="sxs-lookup"><span data-stu-id="a90e7-102">The <xref:System.Collections.ArrayList> class is designed to hold heterogeneous collections of objects.</span></span> <span data-ttu-id="a90e7-103">但是，它不始终提供最佳性能。</span><span class="sxs-lookup"><span data-stu-id="a90e7-103">However, it does not always offer the best performance.</span></span> <span data-ttu-id="a90e7-104">相反，我们的建议如下：</span><span class="sxs-lookup"><span data-stu-id="a90e7-104">Instead, we recommend the following:</span></span>  
  
-   <span data-ttu-id="a90e7-105">对于异类对象的集合，使用`List<Object>`（在 C# 中) 或`List(Of Object)`（在 Visual Basic 中) 中，键入。</span><span class="sxs-lookup"><span data-stu-id="a90e7-105">For a heterogeneous collection of objects, use the `List<Object>` (in C#) or `List(Of Object)` (in Visual Basic) type.</span></span>  
  
-   <span data-ttu-id="a90e7-106">对于同类对象的集合，使用<xref:System.Collections.Generic.List%601>类。</span><span class="sxs-lookup"><span data-stu-id="a90e7-106">For a homogeneous collection of objects, use the <xref:System.Collections.Generic.List%601> class.</span></span>  
  
 <span data-ttu-id="a90e7-107">请参阅中的"性能注意事项"部分<xref:System.Collections.Generic.List%601>这些类的相对性能的讨论的参考主题。</span><span class="sxs-lookup"><span data-stu-id="a90e7-107">See the "Performance Considerations" section in the <xref:System.Collections.Generic.List%601> reference topic for a discussion of the relative performance of these classes.</span></span>  
  
 <span data-ttu-id="a90e7-108"><xref:System.Collections.ArrayList>不一定进行排序。</span><span class="sxs-lookup"><span data-stu-id="a90e7-108">The <xref:System.Collections.ArrayList> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="a90e7-109">您必须对进行排序<xref:System.Collections.ArrayList>通过调用其<xref:System.Collections.ArrayList.Sort%2A>在执行操作之前的方法 (如<xref:System.Collections.ArrayList.BinarySearch%2A>) 需要<xref:System.Collections.ArrayList>来进行排序。</span><span class="sxs-lookup"><span data-stu-id="a90e7-109">You must sort the <xref:System.Collections.ArrayList> by calling its <xref:System.Collections.ArrayList.Sort%2A> method prior to performing operations (such as <xref:System.Collections.ArrayList.BinarySearch%2A>) that require the <xref:System.Collections.ArrayList> to be sorted.</span></span> <span data-ttu-id="a90e7-110">若要维护添加新元素时会自动进行排序的集合，可以使用<xref:System.Collections.Generic.SortedSet%601>类。</span><span class="sxs-lookup"><span data-stu-id="a90e7-110">To maintain a collection that is automatically sorted as new elements are added, you can use the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 <span data-ttu-id="a90e7-111">容量<xref:System.Collections.ArrayList>是元素的数目<xref:System.Collections.ArrayList>可以保存。</span><span class="sxs-lookup"><span data-stu-id="a90e7-111">The capacity of an <xref:System.Collections.ArrayList> is the number of elements the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="a90e7-112">如元素添加到<xref:System.Collections.ArrayList>，自动增加容量通过重新分配所需的方式。</span><span class="sxs-lookup"><span data-stu-id="a90e7-112">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="a90e7-113">可以通过调用减少容量<xref:System.Collections.ArrayList.TrimToSize%2A>或通过设置<xref:System.Collections.ArrayList.Capacity%2A>属性显式。</span><span class="sxs-lookup"><span data-stu-id="a90e7-113">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="a90e7-114">对于非常大<xref:System.Collections.ArrayList>对象，你可以通过设置增加到 20 亿元素在 64 位系统上的最大容量`enabled`到的配置元素的属性`true`在运行时环境中。</span><span class="sxs-lookup"><span data-stu-id="a90e7-114">For very large <xref:System.Collections.ArrayList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="a90e7-115">可以使用整数索引访问此集合中的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-115">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="a90e7-116">在此集合中的索引是从零开始。</span><span class="sxs-lookup"><span data-stu-id="a90e7-116">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="a90e7-117"><xref:System.Collections.ArrayList>集合接受`null`作为有效的值。</span><span class="sxs-lookup"><span data-stu-id="a90e7-117">The <xref:System.Collections.ArrayList> collection accepts `null` as a valid value.</span></span> <span data-ttu-id="a90e7-118">它还允许重名的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-118">It also allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a90e7-119">使用多维数组中的元素作为<xref:System.Collections.ArrayList>不支持的集合。</span><span class="sxs-lookup"><span data-stu-id="a90e7-119">Using multidimensional arrays as elements in an <xref:System.Collections.ArrayList> collection is not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-120">下面的代码示例演示如何创建和初始化<xref:System.Collections.ArrayList>以及如何显示其值。</span><span class="sxs-lookup"><span data-stu-id="a90e7-120">The following code example shows how to create and initialize an <xref:System.Collections.ArrayList> and how to display its values.</span></span>  
  
 [!code-cpp[Classic ArrayList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="a90e7-121">公共静态 (<see langword="Shared" />在 Visual Basic 中) 的此类型的成员都是线程安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a90e7-121">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="a90e7-122">但不保证所有实例成员都是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a90e7-122">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="a90e7-123">
        <see cref="T:System.Collections.ArrayList" />同时，可以支持多个读取器，只要不修改该集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a90e7-123">An <see cref="T:System.Collections.ArrayList" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="a90e7-124">若要确保的线程安全性<see cref="T:System.Collections.ArrayList" />，所有操作必须通过返回的包装器来都完成<see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a90e7-124">To guarantee the thread safety of the <see cref="T:System.Collections.ArrayList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> method.</span>
      </span>
      <span data-ttu-id="a90e7-125">枚举整个集合本质上不是一个线程安全的过程。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a90e7-125">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="a90e7-126">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a90e7-126">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="a90e7-127">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a90e7-127">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Generic.List`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-128">初始化 <see cref="T:System.Collections.ArrayList" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-128">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-129">初始化 <see cref="T:System.Collections.ArrayList" /> 类的新实例，该实例为空并且具有默认初始容量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-129">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-130">容量<xref:System.Collections.ArrayList>是元素的数目，<xref:System.Collections.ArrayList>可以保存。</span><span class="sxs-lookup"><span data-stu-id="a90e7-130">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="a90e7-131">如元素添加到<xref:System.Collections.ArrayList>，自动增加容量通过重新分配在内部数组所需的方式。</span><span class="sxs-lookup"><span data-stu-id="a90e7-131">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="a90e7-132">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-132">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-133">此构造函数是 o （1） 操作。</span><span class="sxs-lookup"><span data-stu-id="a90e7-133">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(System::Collections::ICollection ^ c);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="a90e7-134">其元素已复制到新列表的 <see cref="T:System.Collections.ICollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-134">The <see cref="T:System.Collections.ICollection" /> whose elements are copied to the new list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-135">初始化 <see cref="T:System.Collections.ArrayList" /> 类的新实例，该类包含从指定集合复制的元素，并具有与复制的元素数相同的初始容量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-135">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-136">容量<xref:System.Collections.ArrayList>是元素的数目，<xref:System.Collections.ArrayList>可以保存。</span><span class="sxs-lookup"><span data-stu-id="a90e7-136">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="a90e7-137">如元素添加到<xref:System.Collections.ArrayList>，自动增加容量通过重新分配在内部数组所需的方式。</span><span class="sxs-lookup"><span data-stu-id="a90e7-137">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="a90e7-138">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-138">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-139">将元素复制到<xref:System.Collections.ArrayList>以相同的顺序由读取<xref:System.Collections.IEnumerator>的<xref:System.Collections.ICollection>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-139">The elements are copied onto the <xref:System.Collections.ArrayList> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="a90e7-140">此构造函数是 O (`n`) 操作，其中`n`是中的元素数`c`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-140">This constructor is an O(`n`) operation, where `n` is the number of elements in `c`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-141">
            <paramref name="c" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-141">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="a90e7-142">新列表最初可以存储的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-142">The number of elements that the new list can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-143">初始化 <see cref="T:System.Collections.ArrayList" /> 类的新实例，该实例为空并且具有指定的初始容量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-143">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-144">容量<xref:System.Collections.ArrayList>是元素的数目，<xref:System.Collections.ArrayList>可以保存。</span><span class="sxs-lookup"><span data-stu-id="a90e7-144">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="a90e7-145">如元素添加到<xref:System.Collections.ArrayList>，自动增加容量通过重新分配在内部数组所需的方式。</span><span class="sxs-lookup"><span data-stu-id="a90e7-145">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="a90e7-146">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-146">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-147">此构造函数是 O (`n`) 操作，其中`n`是`capacity`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-147">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-148">
            <paramref name="capacity" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-148">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Adapter (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Adapter(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Adapter(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Adapter (list As IList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Adapter(System::Collections::IList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="a90e7-149">要包装的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-149">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-150">为特定 <see cref="T:System.Collections.IList" /> 创建 <see cref="T:System.Collections.ArrayList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-150">Creates an <see cref="T:System.Collections.ArrayList" /> wrapper for a specific <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-151">
            <see cref="T:System.Collections.IList" /> 的 <see cref="T:System.Collections.ArrayList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-151">The <see cref="T:System.Collections.ArrayList" /> wrapper around the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-152"><xref:System.Collections.ArrayList.Adapter%2A> 不会复制的内容<xref:System.Collections.IList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-152"><xref:System.Collections.ArrayList.Adapter%2A> does not copy the contents of <xref:System.Collections.IList>.</span></span> <span data-ttu-id="a90e7-153">相反，而只会创建<xref:System.Collections.ArrayList>周围包装<xref:System.Collections.IList>; 因此，更改为<xref:System.Collections.IList>也会影响<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-153">Instead, it only creates an <xref:System.Collections.ArrayList> wrapper around <xref:System.Collections.IList>; therefore, changes to the <xref:System.Collections.IList> also affect the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-154"><xref:System.Collections.ArrayList>类提供了泛型<xref:System.Collections.ArrayList.Reverse%2A>，<xref:System.Collections.ArrayList.BinarySearch%2A>和<xref:System.Collections.ArrayList.Sort%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a90e7-154">The <xref:System.Collections.ArrayList> class provides generic <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> and <xref:System.Collections.ArrayList.Sort%2A> methods.</span></span> <span data-ttu-id="a90e7-155">此包装可以是一种方法上使用的那些方法<xref:System.Collections.IList>; 但是，执行通过包装这些泛型操作可能比直接在上应用的操作的效率较低<xref:System.Collections.IList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-155">This wrapper can be a means to use those methods on <xref:System.Collections.IList>; however, performing these generic operations through the wrapper might be less efficient than operations applied directly on the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="a90e7-156">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="a90e7-156">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="a90e7-157">版本兼容性</span><span class="sxs-lookup"><span data-stu-id="a90e7-157">Version Compatibility</span></span>  
 <span data-ttu-id="a90e7-158">.NET framework 版本 1.0 和 1.1 中，调用<xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29>上的方法重载<xref:System.Collections.ArrayList>包装返回的枚举数上限，而不是计数处理第二个参数。</span><span class="sxs-lookup"><span data-stu-id="a90e7-158">In the .NET Framework version 1.0 and 1.1, calling the <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> method overload on the <xref:System.Collections.ArrayList> wrapper returned an enumerator that treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="a90e7-159">在[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]第二个参数正确视为计数。</span><span class="sxs-lookup"><span data-stu-id="a90e7-159">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-160">
            <paramref name="list" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-160">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
        <altmember cref="M:System.Collections.ArrayList.Reverse" />
        <altmember cref="M:System.Collections.ArrayList.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a90e7-161">要添加到 <see cref="T:System.Object" /> 的结尾处的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-161">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-162">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-162">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-163">将对象添加到 <see cref="T:System.Collections.ArrayList" /> 的结尾处。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-163">Adds an object to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-164">
            <see cref="T:System.Collections.ArrayList" /> 索引，已在此处添加了 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-164">The <see cref="T:System.Collections.ArrayList" /> index at which the <paramref name="value" /> has been added.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-165"><xref:System.Collections.ArrayList> 接受`null`作为有效的值，并允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-165"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a90e7-166">如果<xref:System.Collections.ArrayList.Count%2A>已经等于<xref:System.Collections.ArrayList.Capacity%2A>、 容量的<xref:System.Collections.ArrayList>增加通过自动重新分配在内部数组和现有元素被复制到新数组中，在添加新的元素之前。</span><span class="sxs-lookup"><span data-stu-id="a90e7-166">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="a90e7-167">如果<xref:System.Collections.ArrayList.Count%2A>是小于<xref:System.Collections.ArrayList.Capacity%2A>，此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="a90e7-167">If <xref:System.Collections.ArrayList.Count%2A> is less than <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="a90e7-168">如果容量需要增加以容纳新元素，此方法会成为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-168">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-169">下面的代码示例演示如何将元素添加到<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-169">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-170">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-170">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="a90e7-171">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-171">-or-</span>
          </span>
          <span data-ttu-id="a90e7-172">
            <see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-172">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(System::Collections::ICollection ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="a90e7-173">
            <see cref="T:System.Collections.ICollection" />，其元素应被添加到 <see cref="T:System.Collections.ArrayList" /> 的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-173">The <see cref="T:System.Collections.ICollection" /> whose elements should be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-174">集合本身不能为 <see langword="null" />，但它可以包含为 <see langword="null" /> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-174">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-175">将 <see cref="T:System.Collections.ICollection" /> 的元素添加到 <see cref="T:System.Collections.ArrayList" /> 的末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-175">Adds the elements of an <see cref="T:System.Collections.ICollection" /> to the end of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-176"><xref:System.Collections.ArrayList> 接受`null`作为有效的值，并允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-176"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a90e7-177">中的元素的顺序<xref:System.Collections.ICollection>在过程中保留<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-177">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-178">如果新<xref:System.Collections.ArrayList.Count%2A>(当前<xref:System.Collections.ArrayList.Count%2A>plus 集合的大小) 将大于<xref:System.Collections.ArrayList.Capacity%2A>、 容量的<xref:System.Collections.ArrayList>增加通过自动重新分配以容纳新元素，在内部数组和在添加新的元素之前，现有元素被复制到新数组。</span><span class="sxs-lookup"><span data-stu-id="a90e7-178">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="a90e7-179">如果<xref:System.Collections.ArrayList>可以容纳新元素，而无需增加<xref:System.Collections.ArrayList.Capacity%2A>，此方法为 O (`n`) 操作，其中`n`是要添加的元素数。</span><span class="sxs-lookup"><span data-stu-id="a90e7-179">If the <xref:System.Collections.ArrayList> can accommodate the new elements without increasing the <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(`n`) operation, where `n` is the number of elements to be added.</span></span> <span data-ttu-id="a90e7-180">如果增加以容纳新元素所需的容量，此方法会成为 O (`n` + `m`) 操作，其中`n`是要添加的元素的数目和`m`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-180">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-181">下面的代码示例演示如何将元素添加到<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-181">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-182">
            <paramref name="c" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-182">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-183">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-183">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="a90e7-184">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-184">-or-</span>
          </span>
          <span data-ttu-id="a90e7-185">
            <see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-185">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-186">使用对分检索算法在已排序的 <see cref="T:System.Collections.ArrayList" /> 或它的一部分中查找特定元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-186">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a90e7-187">要查找的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-187">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="a90e7-188">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-188">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-189">使用默认的比较器在整个已排序的 <see cref="T:System.Collections.ArrayList" /> 中搜索元素，并返回该元素从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-189">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the default comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-190">如果找到 <paramref name="value" />，则为排序的 <see cref="T:System.Collections.ArrayList" /> 中从零开始的 <paramref name="value" /> 索引；否则为一个负数，它是大于 <paramref name="value" /> 的下一个元素索引的按位求补，或者，如果没有更大的元素，则为 <see cref="P:System.Collections.ArrayList.Count" /> 的按位求补。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-190">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-191">`value`参数和的每个元素<xref:System.Collections.ArrayList>必须实现<xref:System.IComparable>接口，用于比较。</span><span class="sxs-lookup"><span data-stu-id="a90e7-191">The `value` parameter and each element of the <xref:System.Collections.ArrayList> must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="a90e7-192">元素<xref:System.Collections.ArrayList>必须已在增加根据定义的排序顺序的值进行排序<xref:System.IComparable>实现; 否则，结果可能不正确。</span><span class="sxs-lookup"><span data-stu-id="a90e7-192">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="a90e7-193">比较`null`允许与任何类型和使用时不会生成异常<xref:System.IComparable>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-193">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="a90e7-194">在排序时，`null`被视为小于任何其他对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-194">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="a90e7-195">如果<xref:System.Collections.ArrayList>多个元素具有相同的值，该方法返回仅包含一个匹配项，并且可能会返回任何一个匹配项，不一定是第一个。</span><span class="sxs-lookup"><span data-stu-id="a90e7-195">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="a90e7-196">如果<xref:System.Collections.ArrayList>不包含指定的值，该方法返回负整数。</span><span class="sxs-lookup"><span data-stu-id="a90e7-196">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="a90e7-197">你可以应用于此负的整数，以获取大于搜索值的第一个元素的索引的按位求补运算 （~）。</span><span class="sxs-lookup"><span data-stu-id="a90e7-197">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="a90e7-198">插入到的值时<xref:System.Collections.ArrayList>，此索引应使用的插入点，若要维护的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="a90e7-198">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="a90e7-199">此方法为 O (日志`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-199">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-200">下面的代码示例演示如何使用<xref:System.Collections.ArrayList.BinarySearch%2A>查找中的特定对象<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-200">The following code example shows how to use <xref:System.Collections.ArrayList.BinarySearch%2A> to locate a specific object in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a90e7-201">
            <paramref name="value" /> 和 <see cref="T:System.Collections.ArrayList" /> 的元素均未实现 <see cref="T:System.IComparable" /> 接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-201">Neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a90e7-202">
            <paramref name="value" /> 和 <see cref="T:System.Collections.ArrayList" /> 的元素不是同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-202">
              <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a90e7-203">要查找的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-203">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="a90e7-204">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-204">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="a90e7-205">比较元素时要使用的 <see cref="T:System.Collections.IComparer" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-205">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="a90e7-206">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-206">-or-</span>
          </span>
          <span data-ttu-id="a90e7-207">如果为 <see langword="null" />，则使用默认比较器，即每个元素的 <see cref="T:System.IComparable" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-207">
              <see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-208">使用指定的比较器在整个已排序的 <see cref="T:System.Collections.ArrayList" /> 中搜索元素，并返回该元素从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-208">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-209">如果找到 <paramref name="value" />，则为排序的 <see cref="T:System.Collections.ArrayList" /> 中从零开始的 <paramref name="value" /> 索引；否则为一个负数，它是大于 <paramref name="value" /> 的下一个元素索引的按位求补，或者，如果没有更大的元素，则为 <see cref="P:System.Collections.ArrayList.Count" /> 的按位求补。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-209">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-210">比较器自定义如何比较元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-210">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="a90e7-211">例如，你可以使用<xref:System.Collections.CaseInsensitiveComparer>实例作为要执行不区分大小写的字符串搜索的比较器。</span><span class="sxs-lookup"><span data-stu-id="a90e7-211">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="a90e7-212">如果`comparer`提供的元素<xref:System.Collections.ArrayList>与使用指定的指定值进行比较<xref:System.Collections.IComparer>实现。</span><span class="sxs-lookup"><span data-stu-id="a90e7-212">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="a90e7-213">元素<xref:System.Collections.ArrayList>必须已在增加根据定义的排序顺序的值进行排序`comparer`; 否则为结果可能不正确。</span><span class="sxs-lookup"><span data-stu-id="a90e7-213">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="a90e7-214">如果`comparer`是`null`，完成比较使用<xref:System.IComparable>通过自身的元素或指定的值提供的实现。</span><span class="sxs-lookup"><span data-stu-id="a90e7-214">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="a90e7-215">元素<xref:System.Collections.ArrayList>必须已在增加根据定义的排序顺序的值进行排序<xref:System.IComparable>实现; 否则，结果可能不正确。</span><span class="sxs-lookup"><span data-stu-id="a90e7-215">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="a90e7-216">比较`null`允许与任何类型和使用时不会生成异常<xref:System.IComparable>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-216">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="a90e7-217">在排序时，`null`被视为小于任何其他对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-217">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="a90e7-218">如果<xref:System.Collections.ArrayList>多个元素具有相同的值，该方法返回仅包含一个匹配项，并且可能会返回任何一个匹配项，不一定是第一个。</span><span class="sxs-lookup"><span data-stu-id="a90e7-218">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="a90e7-219">如果<xref:System.Collections.ArrayList>不包含指定的值，该方法返回负整数。</span><span class="sxs-lookup"><span data-stu-id="a90e7-219">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="a90e7-220">你可以应用于此负的整数，以获取大于搜索值的第一个元素的索引的按位求补运算 （~）。</span><span class="sxs-lookup"><span data-stu-id="a90e7-220">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="a90e7-221">插入到的值时<xref:System.Collections.ArrayList>，此索引应使用的插入点，若要维护的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="a90e7-221">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="a90e7-222">此方法为 O (日志`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-222">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-223">下面的示例创建<xref:System.Collections.ArrayList>彩色动画。</span><span class="sxs-lookup"><span data-stu-id="a90e7-223">The following example creates an <xref:System.Collections.ArrayList> of colored animals.</span></span> <span data-ttu-id="a90e7-224">提供<xref:System.Collections.IComparer>执行二进制搜索的字符串比较。</span><span class="sxs-lookup"><span data-stu-id="a90e7-224">The provided <xref:System.Collections.IComparer> performs the string comparison for the binary search.</span></span> <span data-ttu-id="a90e7-225">显示一个迭代搜索和二进制搜索的结果。</span><span class="sxs-lookup"><span data-stu-id="a90e7-225">The results of both an iterative search and a binary search are displayed.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a90e7-226">
            <paramref name="comparer" /> 为 <see langword="null" />，并且 <paramref name="value" /> 和 <see cref="T:System.Collections.ArrayList" /> 的元素均不实现 <see cref="T:System.IComparable" /> 接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-226">
              <paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a90e7-227">
            <paramref name="comparer" /> 为 <see langword="null" />，并且 <paramref name="value" /> 和 <see cref="T:System.Collections.ArrayList" /> 的元素不属于同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-227">
              <paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (int index, int count, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(int32 index, int32 count, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (index As Integer, count As Integer, value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(int index, int count, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a90e7-228">要搜索范围的从零开始的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-228">The zero-based starting index of the range to search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a90e7-229">要搜索的范围的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-229">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a90e7-230">要查找的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-230">The <see cref="T:System.Object" /> to locate.</span>
          </span>
          <span data-ttu-id="a90e7-231">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-231">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="a90e7-232">比较元素时要使用的 <see cref="T:System.Collections.IComparer" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-232">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="a90e7-233">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-233">-or-</span>
          </span>
          <span data-ttu-id="a90e7-234">如果为 <see langword="null" />，则使用默认比较器，即每个元素的 <see cref="T:System.IComparable" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-234">
              <see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-235">使用指定的比较器在已排序 <see cref="T:System.Collections.ArrayList" /> 的某个元素范围中搜索元素，并返回该元素从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-235">Searches a range of elements in the sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-236">如果找到 <paramref name="value" />，则为排序的 <see cref="T:System.Collections.ArrayList" /> 中从零开始的 <paramref name="value" /> 索引；否则为一个负数，它是大于 <paramref name="value" /> 的下一个元素索引的按位求补，或者，如果没有更大的元素，则为 <see cref="P:System.Collections.ArrayList.Count" /> 的按位求补。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-236">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-237">比较器自定义如何比较元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-237">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="a90e7-238">例如，你可以使用<xref:System.Collections.CaseInsensitiveComparer>实例作为要执行不区分大小写的字符串搜索的比较器。</span><span class="sxs-lookup"><span data-stu-id="a90e7-238">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="a90e7-239">如果`comparer`提供的元素<xref:System.Collections.ArrayList>与使用指定的指定值进行比较<xref:System.Collections.IComparer>实现。</span><span class="sxs-lookup"><span data-stu-id="a90e7-239">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="a90e7-240">元素<xref:System.Collections.ArrayList>必须已在增加根据定义的排序顺序的值进行排序`comparer`; 否则为结果可能不正确。</span><span class="sxs-lookup"><span data-stu-id="a90e7-240">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="a90e7-241">如果`comparer`是`null`，完成比较使用<xref:System.IComparable>通过自身的元素或指定的值提供的实现。</span><span class="sxs-lookup"><span data-stu-id="a90e7-241">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="a90e7-242">元素<xref:System.Collections.ArrayList>必须已在增加根据定义的排序顺序的值进行排序<xref:System.IComparable>实现; 否则，结果可能不正确。</span><span class="sxs-lookup"><span data-stu-id="a90e7-242">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="a90e7-243">比较`null`允许与任何类型和使用时不会生成异常<xref:System.IComparable>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-243">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="a90e7-244">在排序时，`null`被视为小于任何其他对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-244">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="a90e7-245">如果<xref:System.Collections.ArrayList>多个元素具有相同的值，该方法返回仅包含一个匹配项，并且可能会返回任何一个匹配项，不一定是第一个。</span><span class="sxs-lookup"><span data-stu-id="a90e7-245">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="a90e7-246">如果<xref:System.Collections.ArrayList>不包含指定的值，该方法返回负整数。</span><span class="sxs-lookup"><span data-stu-id="a90e7-246">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="a90e7-247">你可以应用于此负的整数，以获取大于搜索值的第一个元素的索引的按位求补运算 （~）。</span><span class="sxs-lookup"><span data-stu-id="a90e7-247">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="a90e7-248">插入到的值时<xref:System.Collections.ArrayList>，此索引应使用的插入点，若要维护的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="a90e7-248">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="a90e7-249">此方法为 O (日志`n`) 操作，其中`n`是`count`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-249">This method is an O(log `n`) operation, where `n` is `count`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a90e7-250">
            <paramref name="index" /> 和 <paramref name="count" /> 不表示 <see cref="T:System.Collections.ArrayList" /> 中的有效范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-250">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-251">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-251">-or-</span>
          </span>
          <span data-ttu-id="a90e7-252">
            <paramref name="comparer" /> 为 <see langword="null" />，并且 <paramref name="value" /> 和 <see cref="T:System.Collections.ArrayList" /> 的元素均不实现 <see cref="T:System.IComparable" /> 接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-252">
              <paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a90e7-253">
            <paramref name="comparer" /> 为 <see langword="null" />，并且 <paramref name="value" /> 和 <see cref="T:System.Collections.ArrayList" /> 的元素不属于同一类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-253">
              <paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-254">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-254">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-255">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-255">-or-</span>
          </span>
          <span data-ttu-id="a90e7-256">
            <paramref name="count" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-256">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-257">获取或设置 <see cref="T:System.Collections.ArrayList" /> 可包含的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-257">Gets or sets the number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a90e7-258">
            <see cref="T:System.Collections.ArrayList" /> 可包含的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-258">The number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-259"><xref:System.Collections.ArrayList.Capacity%2A> 是的元素数的<xref:System.Collections.ArrayList>可以存储。</span><span class="sxs-lookup"><span data-stu-id="a90e7-259"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="a90e7-260"><xref:System.Collections.ArrayList.Count%2A> 是中的实际的元素数目<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-260"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-261"><xref:System.Collections.ArrayList.Capacity%2A> 大于或等于始终是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-261"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="a90e7-262">如果<xref:System.Collections.ArrayList.Count%2A>超过<xref:System.Collections.ArrayList.Capacity%2A>时添加元素，则自动通过增大容量在复制旧元素和添加新的元素之前重新分配在内部数组。</span><span class="sxs-lookup"><span data-stu-id="a90e7-262">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="a90e7-263">可以通过调用减少容量<xref:System.Collections.ArrayList.TrimToSize%2A>或通过设置<xref:System.Collections.ArrayList.Capacity%2A>属性显式。</span><span class="sxs-lookup"><span data-stu-id="a90e7-263">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="a90e7-264">时的值<xref:System.Collections.ArrayList.Capacity%2A>设置了显式，在内部数组还重新分配以适应指定的容量。</span><span class="sxs-lookup"><span data-stu-id="a90e7-264">When the value of <xref:System.Collections.ArrayList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="a90e7-265">检索此属性的值的运算 o （1）;将属性设置为 O (`n`) 操作，其中`n`新容量。</span><span class="sxs-lookup"><span data-stu-id="a90e7-265">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-266">
            <see cref="P:System.Collections.ArrayList.Capacity" /> 已设置为一个小于 <see cref="P:System.Collections.ArrayList.Count" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-266">
              <see cref="P:System.Collections.ArrayList.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="a90e7-267">系统上没有足够的可用内存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-267">There is not enough memory available on the system.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-268">从 <see cref="T:System.Collections.ArrayList" /> 中移除所有元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-268">Removes all elements from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-269"><xref:System.Collections.ArrayList.Count%2A> 是设置为零，并且集合的元素对其他对象的引用也被释放。</span><span class="sxs-lookup"><span data-stu-id="a90e7-269"><xref:System.Collections.ArrayList.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="a90e7-270"><xref:System.Collections.ArrayList.Capacity%2A> 保持不变。</span><span class="sxs-lookup"><span data-stu-id="a90e7-270"><xref:System.Collections.ArrayList.Capacity%2A> remains unchanged.</span></span>  <span data-ttu-id="a90e7-271">若要重置的容量<xref:System.Collections.ArrayList>，调用<xref:System.Collections.ArrayList.TrimToSize%2A>或设置<xref:System.Collections.ArrayList.Capacity%2A>直接属性。</span><span class="sxs-lookup"><span data-stu-id="a90e7-271">To reset the capacity of the <xref:System.Collections.ArrayList>, call <xref:System.Collections.ArrayList.TrimToSize%2A> or set the <xref:System.Collections.ArrayList.Capacity%2A> property directly.</span></span> <span data-ttu-id="a90e7-272">截去空<xref:System.Collections.ArrayList>的容量设置<xref:System.Collections.ArrayList>到默认的容量。</span><span class="sxs-lookup"><span data-stu-id="a90e7-272">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="a90e7-273">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-273">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-274">下面的代码示例演示如何修整的未使用的部分<xref:System.Collections.ArrayList>以及如何清除的值<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-274">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-275">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-275">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="a90e7-276">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-276">-or-</span>
          </span>
          <span data-ttu-id="a90e7-277">
            <see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-277">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.TrimToSize" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-278">创建 <see cref="T:System.Collections.ArrayList" /> 的浅表副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-278">Creates a shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-279">
            <see cref="T:System.Collections.ArrayList" /> 的浅表副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-279">A shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-280">集合的浅表副本复制仅的元素集合，不论它们是引用类型还是值类型，但它不会复制引用所引用的对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-280">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="a90e7-281">新集合中的引用都指向原始集合中的引用指向同一对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-281">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="a90e7-282">与此相反，集合的深层副本复制这些元素，以及由这些元素直接或间接引用的所有内容。</span><span class="sxs-lookup"><span data-stu-id="a90e7-282">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="a90e7-283">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-283">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="a90e7-284">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-284">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-285">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-285">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-286">确定某元素是否在 <see cref="T:System.Collections.ArrayList" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-286">Determines whether an element is in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-287">如果在 <see langword="true" /> 中找到 <paramref name="item" />，则为 <see cref="T:System.Collections.ArrayList" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-287">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ArrayList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-288">此方法执行的线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-288">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="a90e7-289">此方法通过调用可确定相等性<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-289">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a90e7-290">从.NET Framework 2.0 开始，此方法使用集合的对象<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`以确定是否存在项。</span><span class="sxs-lookup"><span data-stu-id="a90e7-290">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a90e7-291">在.NET Framework 的早期版本，通过进行此决定<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`参数的集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-291">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-292">将 <see cref="T:System.Collections.ArrayList" /> 或它的一部分复制到一维数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-292">Copies the <see cref="T:System.Collections.ArrayList" /> or a portion of it to a one-dimensional array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="a90e7-293">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ArrayList" /> 复制的元素的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-293">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-294">
            <see cref="T:System.Array" /> 必须具有从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-294">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-295">从目标数组的开头开始，将整个 <see cref="T:System.Collections.ArrayList" /> 复制到兼容的一维 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-295">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the beginning of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-296">指定的数组必须具有兼容类型。</span><span class="sxs-lookup"><span data-stu-id="a90e7-296">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="a90e7-297">此方法使用<xref:System.Array.Copy%2A?displayProperty=nameWithType>要复制的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-297">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="a90e7-298">元素被复制到<xref:System.Array>枚举数循环访问的相同顺序<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-298">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-299">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-299">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-300">下面的代码示例演示如何复制<xref:System.Collections.ArrayList>到一维<xref:System.Array?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-300">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-301">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-301">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a90e7-302">
            <paramref name="array" /> 是多维的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-302">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="a90e7-303">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-303">-or-</span>
          </span>
          <span data-ttu-id="a90e7-304">源 <see cref="T:System.Collections.ArrayList" /> 中的元素个数大于目标 <paramref name="array" /> 可以包含的元素个数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-304">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a90e7-305">无法自动将源 <see cref="T:System.Collections.ArrayList" /> 的类型转换为目标 <paramref name="array" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-305">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="a90e7-306">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ArrayList" /> 复制的元素的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-306">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-307">
            <see cref="T:System.Array" /> 必须具有从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-307">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="a90e7-308">
            <c>array</c> 中从零开始的索引，在此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-308">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-309">从目标数组的指定索引处开始将整个 <see cref="T:System.Collections.ArrayList" /> 复制到兼容的一维 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-309">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-310">指定的数组必须具有兼容类型。</span><span class="sxs-lookup"><span data-stu-id="a90e7-310">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="a90e7-311">此方法使用<xref:System.Array.Copy%2A?displayProperty=nameWithType>要复制的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-311">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="a90e7-312">元素被复制到<xref:System.Array>枚举数循环访问的相同顺序<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-312">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-313">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-313">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-314">下面的代码示例演示如何复制<xref:System.Collections.ArrayList>到一维<xref:System.Array?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-314">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-315">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-315">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-316">
            <paramref name="arrayIndex" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-316">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a90e7-317">
            <paramref name="array" /> 是多维的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-317">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="a90e7-318">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-318">-or-</span>
          </span>
          <span data-ttu-id="a90e7-319">源 <see cref="T:System.Collections.ArrayList" /> 中的元素个数大于从 <paramref name="arrayIndex" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-319">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a90e7-320">无法自动将源 <see cref="T:System.Collections.ArrayList" /> 的类型转换为目标 <paramref name="array" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-320">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (int index, Array array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32 index, class System.Array array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(int index, Array ^ array, int arrayIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a90e7-321">复制即从源 <see cref="T:System.Collections.ArrayList" /> 中从零开始的索引开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-321">The zero-based index in the source <see cref="T:System.Collections.ArrayList" /> at which copying begins.</span>
          </span>
        </param>
        <param name="array">
          <span data-ttu-id="a90e7-322">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ArrayList" /> 复制的元素的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-322">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-323">
            <see cref="T:System.Array" /> 必须具有从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-323">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="a90e7-324">
            <c>array</c> 中从零开始的索引，在此处开始复制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-324">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a90e7-325">要复制的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-325">The number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-326">从目标数组的指定索引处开始，将一定范围的元素从 <see cref="T:System.Collections.ArrayList" /> 复制到兼容的一维 <see cref="T:System.Array" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-326">Copies a range of elements from the <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-327">指定的数组必须具有兼容类型。</span><span class="sxs-lookup"><span data-stu-id="a90e7-327">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="a90e7-328">此方法使用<xref:System.Array.Copy%2A?displayProperty=nameWithType>要复制的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-328">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="a90e7-329">元素被复制到<xref:System.Array>枚举数循环访问的相同顺序<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-329">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-330">此方法为 O (`n`) 操作，其中`n`是`count`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-330">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-331">下面的代码示例演示如何复制<xref:System.Collections.ArrayList>到一维<xref:System.Array?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-331">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-332">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-332">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-333">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-333">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-334">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-334">-or-</span>
          </span>
          <span data-ttu-id="a90e7-335">
            <paramref name="arrayIndex" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-335">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-336">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-336">-or-</span>
          </span>
          <span data-ttu-id="a90e7-337">
            <paramref name="count" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-337">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a90e7-338">
            <paramref name="array" /> 是多维的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-338">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="a90e7-339">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-339">-or-</span>
          </span>
          <span data-ttu-id="a90e7-340">
            <paramref name="index" /> 等于或大于源 <see cref="P:System.Collections.ArrayList.Count" /> 的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-340">
              <paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.ArrayList.Count" /> of the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-341">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-341">-or-</span>
          </span>
          <span data-ttu-id="a90e7-342">从 <paramref name="index" /> 到源 <see cref="T:System.Collections.ArrayList" /> 的末尾的元素数大于从 <paramref name="arrayIndex" /> 到目标 <paramref name="array" /> 的末尾的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-342">The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a90e7-343">无法自动将源 <see cref="T:System.Collections.ArrayList" /> 的类型转换为目标 <paramref name="array" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-343">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-344">获取 <see cref="T:System.Collections.ArrayList" /> 中实际包含的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-344">Gets the number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a90e7-345">
            <see cref="T:System.Collections.ArrayList" /> 中实际包含的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-345">The number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-346"><xref:System.Collections.ArrayList.Capacity%2A> 是的元素数的<xref:System.Collections.ArrayList>可以存储。</span><span class="sxs-lookup"><span data-stu-id="a90e7-346"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="a90e7-347"><xref:System.Collections.ArrayList.Count%2A> 是中的实际的元素数目<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-347"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-348"><xref:System.Collections.ArrayList.Capacity%2A> 大于或等于始终是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-348"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="a90e7-349">如果<xref:System.Collections.ArrayList.Count%2A>超过<xref:System.Collections.ArrayList.Capacity%2A>时添加元素，则自动通过增大容量在复制旧元素和添加新的元素之前重新分配在内部数组。</span><span class="sxs-lookup"><span data-stu-id="a90e7-349">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="a90e7-350">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="a90e7-350">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FixedSize">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-351">返回具有固定大小的列表包装，其中的元素允许修改，但不允许添加或移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-351">Returns a list wrapper with a fixed size, where elements are allowed to be modified, but not added or removed.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList FixedSize (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList FixedSize(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ FixedSize(System::Collections::ArrayList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="a90e7-352">要包装的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-352">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-353">返回具有固定大小的 <see cref="T:System.Collections.ArrayList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-353">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-354">具有固定大小的 <see cref="T:System.Collections.ArrayList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-354">An <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-355">可以使用此包装来防止原始<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-355">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="a90e7-356">元素仍可以修改或替换。</span><span class="sxs-lookup"><span data-stu-id="a90e7-356">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="a90e7-357">具有固定大小的集合是只是一个集合的包装器防止添加和移除元素;因此，如果对基础集合，包括添加或移除元素，进行更改的固定大小的集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="a90e7-357">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a90e7-358">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="a90e7-358">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-359">下面的代码示例演示如何创建的固定大小包装<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-359">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-360">
            <paramref name="list" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-360">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.IList FixedSize (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList FixedSize(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ FixedSize(System::Collections::IList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="a90e7-361">要包装的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-361">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-362">返回具有固定大小的 <see cref="T:System.Collections.IList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-362">Returns an <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-363">具有固定大小的 <see cref="T:System.Collections.IList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-363">An <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-364">可以使用此包装来防止原始<xref:System.Collections.IList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-364">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.IList>.</span></span> <span data-ttu-id="a90e7-365">元素仍可以修改或替换。</span><span class="sxs-lookup"><span data-stu-id="a90e7-365">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="a90e7-366">具有固定大小的集合是只是一个集合的包装器防止添加和移除元素;因此，如果对基础集合，包括添加或移除元素，进行更改的固定大小的集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="a90e7-366">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a90e7-367">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="a90e7-367">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-368">
            <paramref name="list" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-368">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-369">返回循环访问 <see cref="T:System.Collections.ArrayList" /> 的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-369">Returns an enumerator that iterates through the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-370">返回整个 <see cref="T:System.Collections.ArrayList" /> 的一个枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-370">Returns an enumerator for the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-371">用于整个 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-371">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-372">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="a90e7-372">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="a90e7-373">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="a90e7-373">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="a90e7-374">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="a90e7-374">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="a90e7-375">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="a90e7-375">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="a90e7-376"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="a90e7-376"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="a90e7-377">在此位置上，未定义 <xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-377">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="a90e7-378">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-378">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="a90e7-379">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-379"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="a90e7-380"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-380"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="a90e7-381">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-381">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="a90e7-382">当枚举器位于此位置上，后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-382">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="a90e7-383">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，<xref:System.Collections.IEnumerator.Current%2A>是不确定的。</span><span class="sxs-lookup"><span data-stu-id="a90e7-383">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="a90e7-384">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-384">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="a90e7-385">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="a90e7-385">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="a90e7-386">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="a90e7-386">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="a90e7-387">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="a90e7-387">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="a90e7-388">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="a90e7-388">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="a90e7-389">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="a90e7-389">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="a90e7-390">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="a90e7-390">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-391">下面的示例获取的枚举数<xref:System.Collections.ArrayList>，和中的元素范围的枚举数<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-391">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator (index As Integer, count As Integer) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a90e7-392">枚举器应引用的 <see cref="T:System.Collections.ArrayList" /> 部分从零开始的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-392">The zero-based starting index of the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a90e7-393">枚举器应引用的 <see cref="T:System.Collections.ArrayList" /> 部分中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-393">The number of elements in the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-394">返回 <see cref="T:System.Collections.ArrayList" /> 中某个范围内的元素的枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-394">Returns an enumerator for a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-395">
            <see cref="T:System.Collections.IEnumerator" /> 中指定范围内的元素的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-395">An <see cref="T:System.Collections.IEnumerator" /> for the specified range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-396">`foreach` C# 语言的语句 (`for each` Visual c + + 中`For Each`Visual Basic) 隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="a90e7-396">The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="a90e7-397">因此，建议使用 `foreach`，而不是直接操作枚举数。</span><span class="sxs-lookup"><span data-stu-id="a90e7-397">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="a90e7-398">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="a90e7-398">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="a90e7-399">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="a90e7-399">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="a90e7-400"><xref:System.Collections.IEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="a90e7-400"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="a90e7-401">在此位置上，未定义 <xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-401">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="a90e7-402">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必须调用 <xref:System.Collections.IEnumerator.Current%2A> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-402">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="a90e7-403">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-403"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="a90e7-404"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-404"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="a90e7-405">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-405">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="a90e7-406">当枚举器位于此位置上，后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-406">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="a90e7-407">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，<xref:System.Collections.IEnumerator.Current%2A>是不确定的。</span><span class="sxs-lookup"><span data-stu-id="a90e7-407">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="a90e7-408">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-408">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="a90e7-409">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="a90e7-409">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="a90e7-410">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</span><span class="sxs-lookup"><span data-stu-id="a90e7-410">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="a90e7-411">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="a90e7-411">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="a90e7-412">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</span><span class="sxs-lookup"><span data-stu-id="a90e7-412">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="a90e7-413">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</span><span class="sxs-lookup"><span data-stu-id="a90e7-413">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="a90e7-414">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="a90e7-414">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="a90e7-415">版本兼容性</span><span class="sxs-lookup"><span data-stu-id="a90e7-415">Version Compatibility</span></span>  
 <span data-ttu-id="a90e7-416">中的.NET Framework 版本 1.0 和 1.1 中，枚举数<xref:System.Collections.ArrayList>包装返回<xref:System.Collections.ArrayList.Adapter%2A>方法被视为第二个参数，上限为而不是做一个计数。</span><span class="sxs-lookup"><span data-stu-id="a90e7-416">In the .NET Framework versions 1.0 and 1.1, the enumerator for an <xref:System.Collections.ArrayList> wrapper returned by the <xref:System.Collections.ArrayList.Adapter%2A> method treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="a90e7-417">在[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]第二个参数正确视为计数。</span><span class="sxs-lookup"><span data-stu-id="a90e7-417">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-418">下面的示例获取的枚举数<xref:System.Collections.ArrayList>，和中的元素范围的枚举数<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-418">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-419">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-419">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-420">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-420">-or-</span>
          </span>
          <span data-ttu-id="a90e7-421">
            <paramref name="count" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-421">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a90e7-422">
            <paramref name="index" /> 和 <paramref name="count" /> 未在 <see cref="T:System.Collections.ArrayList" /> 中指定有效范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-422">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ArrayList GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ArrayList GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRange (index As Integer, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ArrayList ^ GetRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a90e7-423">范围开始处的从零开始的 <see cref="T:System.Collections.ArrayList" /> 索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-423">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which the range starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a90e7-424">范围中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-424">The number of elements in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-425">返回 <see cref="T:System.Collections.ArrayList" />，它表示源 <see cref="T:System.Collections.ArrayList" /> 中元素的子集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-425">Returns an <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-426">
            <see cref="T:System.Collections.ArrayList" />，它表示源 <see cref="T:System.Collections.ArrayList" /> 中元素的子集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-426">An <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-427">此方法不创建的元素的副本。</span><span class="sxs-lookup"><span data-stu-id="a90e7-427">This method does not create copies of the elements.</span></span> <span data-ttu-id="a90e7-428">新<xref:System.Collections.ArrayList>是仅入到源视图窗口<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-428">The new <xref:System.Collections.ArrayList> is only a view window into the source <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="a90e7-429">但是，对源的所有后续更改<xref:System.Collections.ArrayList>必须通过此视图窗口<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-429">However, all subsequent changes to the source <xref:System.Collections.ArrayList> must be done through this view window <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="a90e7-430">如果直接对源进行更改<xref:System.Collections.ArrayList>，视图窗口<xref:System.Collections.ArrayList>失效并对它的任何操作将返回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-430">If changes are made directly to the source <xref:System.Collections.ArrayList>, the view window <xref:System.Collections.ArrayList> is invalidated and any operations on it will return an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="a90e7-431">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="a90e7-431">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-432">下面的代码示例演示如何设置和获取的元素范围<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-432">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-433">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-433">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-434">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-434">-or-</span>
          </span>
          <span data-ttu-id="a90e7-435">
            <paramref name="count" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-435">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a90e7-436">
            <paramref name="index" /> 和 <paramref name="count" /> 不表示 <see cref="T:System.Collections.ArrayList" /> 中元素的有效范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-436">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-437">返回 <see cref="T:System.Collections.ArrayList" /> 或它的一部分中某个值的第一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-437">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a90e7-438">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-438">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-439">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-439">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-440">搜索指定的 <see cref="T:System.Object" />，并返回整个 <see cref="T:System.Collections.ArrayList" /> 中第一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-440">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-441">如果找到，则为整个 <paramref name="value" /> 中 <see cref="T:System.Collections.ArrayList" /> 第一个匹配项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-441">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-442"><xref:System.Collections.ArrayList>搜索向前从第一个元素开始和结束时间的最后一个元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-442">The <xref:System.Collections.ArrayList> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="a90e7-443">此方法执行的线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-443">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="a90e7-444">此方法通过调用可确定相等性<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-444">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a90e7-445">从.NET Framework 2.0 开始，此方法使用集合的对象<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`以确定是否存在项。</span><span class="sxs-lookup"><span data-stu-id="a90e7-445">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a90e7-446">在.NET Framework 的早期版本，通过进行此决定<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`参数的集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-446">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-447">下面的代码示例演示如何确定指定的元素的第一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="a90e7-447">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a90e7-448">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-448">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-449">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-449">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="a90e7-450">从零开始的搜索的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-450">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="a90e7-451">空列表中 0（零）为有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-451">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-452">搜索指定的 <see cref="T:System.Object" />，并返回 <see cref="T:System.Collections.ArrayList" /> 中从指定索引到最后一个元素的元素范围内第一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-452">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-453">如果在 <see cref="T:System.Collections.ArrayList" /> 中从 <paramref name="startIndex" /> 到最后一个元素的元素范围内找到 <paramref name="value" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-453">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-454"><xref:System.Collections.ArrayList>处开始向前搜索`startIndex`和结束时间的最后一个元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-454">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="a90e7-455">此方法执行的线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是中的元素数`startIndex`到末尾<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-455">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-456">此方法通过调用可确定相等性<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-456">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a90e7-457">从.NET Framework 2.0 开始，此方法使用集合的对象<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`以确定是否存在项。</span><span class="sxs-lookup"><span data-stu-id="a90e7-457">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a90e7-458">在.NET Framework 的早期版本，通过进行此决定<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`参数的集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-458">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-459">下面的代码示例演示如何确定指定的元素的第一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="a90e7-459">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-460">
            <paramref name="startIndex" /> 超出了 <see cref="T:System.Collections.ArrayList" /> 的有效索引范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-460">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a90e7-461">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-461">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-462">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-462">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="a90e7-463">从零开始的搜索的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-463">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="a90e7-464">空列表中 0（零）为有效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-464">0 (zero) is valid in an empty list.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a90e7-465">要搜索的部分中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-465">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-466">搜索指定的 <see cref="T:System.Object" />，并返回 <see cref="T:System.Collections.ArrayList" /> 中从指定的索引开始并包含指定的元素数的元素范围内第一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-466">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-467">如果在 <see cref="T:System.Collections.ArrayList" /> 中从 <paramref name="startIndex" /> 开始并包含 <paramref name="count" /> 个元素的元素范围内找到 <paramref name="value" /> 的第一个匹配项，则为该项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-467">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at <paramref name="startIndex" /> and contains <paramref name="count" /> number of elements, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-468"><xref:System.Collections.ArrayList>处开始向前搜索`startIndex`结束`startIndex`加上`count`减 1，如果`count`大于 0。</span><span class="sxs-lookup"><span data-stu-id="a90e7-468">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="a90e7-469">此方法执行的线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是`count`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-469">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="a90e7-470">此方法通过调用可确定相等性<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-470">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a90e7-471">从.NET Framework 2.0 开始，此方法使用集合的对象<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`以确定是否存在项。</span><span class="sxs-lookup"><span data-stu-id="a90e7-471">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a90e7-472">在.NET Framework 的早期版本，通过进行此决定<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`参数的集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-472">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-473">下面的代码示例演示如何确定指定的元素的第一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="a90e7-473">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-474">
            <paramref name="startIndex" /> 超出了 <see cref="T:System.Collections.ArrayList" /> 的有效索引范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-474">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-475">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-475">-or-</span>
          </span>
          <span data-ttu-id="a90e7-476">
            <paramref name="count" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-476">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-477">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-477">-or-</span>
          </span>
          <span data-ttu-id="a90e7-478">
            <paramref name="startIndex" /> 和 <paramref name="count" /> 未指定 <see cref="T:System.Collections.ArrayList" /> 中的有效部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-478">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a90e7-479">从零开始的索引，应在该位置插入 <c>value</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-479">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a90e7-480">要插入的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-480">The <see cref="T:System.Object" /> to insert.</span>
          </span>
          <span data-ttu-id="a90e7-481">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-481">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-482">将元素插入 <see cref="T:System.Collections.ArrayList" /> 的指定索引处。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-482">Inserts an element into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-483"><xref:System.Collections.ArrayList> 接受`null`作为有效的值，并允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-483"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a90e7-484">如果<xref:System.Collections.ArrayList.Count%2A>已经等于<xref:System.Collections.ArrayList.Capacity%2A>、 容量的<xref:System.Collections.ArrayList>增加通过自动重新分配在内部数组和现有元素被复制到新数组中，在添加新的元素之前。</span><span class="sxs-lookup"><span data-stu-id="a90e7-484">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="a90e7-485">如果`index`等同于<xref:System.Collections.ArrayList.Count%2A>，`value`添加到末尾<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-485">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, `value` is added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-486">在由连续的元素组成的集合（如列表）中，插入点下面的元素将下移以容纳新的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-486">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="a90e7-487">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="a90e7-487">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="a90e7-488">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="a90e7-488">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="a90e7-489">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-489">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-490">下面的代码示例演示如何插入元素到<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-490">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-491">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-491">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-492">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-492">-or-</span>
          </span>
          <span data-ttu-id="a90e7-493">
            <paramref name="index" /> 大于 <see cref="P:System.Collections.ArrayList.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-493">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-494">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-494">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="a90e7-495">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-495">-or-</span>
          </span>
          <span data-ttu-id="a90e7-496">
            <see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-496">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public virtual void InsertRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertRange(int index, System::Collections::ICollection ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a90e7-497">应在此处插入新元素的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-497">The zero-based index at which the new elements should be inserted.</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="a90e7-498">
            <see cref="T:System.Collections.ICollection" />，应将其元素插入到 <see cref="T:System.Collections.ArrayList" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-498">The <see cref="T:System.Collections.ICollection" /> whose elements should be inserted into the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-499">集合本身不能为 <see langword="null" />，但它可以包含为 <see langword="null" /> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-499">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-500">将集合中的元素插入 <see cref="T:System.Collections.ArrayList" /> 的指定索引处。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-500">Inserts the elements of a collection into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-501"><xref:System.Collections.ArrayList> 接受`null`作为有效的值，并允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-501"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a90e7-502">如果新<xref:System.Collections.ArrayList.Count%2A>(当前<xref:System.Collections.ArrayList.Count%2A>plus 集合的大小) 将大于<xref:System.Collections.ArrayList.Capacity%2A>、 容量的<xref:System.Collections.ArrayList>增加通过自动重新分配以容纳新元素，在内部数组和在添加新的元素之前，现有元素被复制到新数组。</span><span class="sxs-lookup"><span data-stu-id="a90e7-502">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="a90e7-503">如果`index`等同于<xref:System.Collections.ArrayList.Count%2A>，元素添加到末尾<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-503">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, the elements are added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-504">中的元素的顺序<xref:System.Collections.ICollection>在过程中保留<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-504">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-505">在由连续的元素组成的集合（如列表）中，插入点下面的元素将下移以容纳新的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-505">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="a90e7-506">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="a90e7-506">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="a90e7-507">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="a90e7-507">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="a90e7-508">此方法为 O (`n` + `m`) 操作，其中`n`是要添加的元素的数目和`m`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-508">This method is an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-509">下面的代码示例演示如何插入元素到<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-509">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-510">
            <paramref name="c" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-510">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-511">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-511">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-512">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-512">-or-</span>
          </span>
          <span data-ttu-id="a90e7-513">
            <paramref name="index" /> 大于 <see cref="P:System.Collections.ArrayList.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-513">
              <paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-514">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-514">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="a90e7-515">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-515">-or-</span>
          </span>
          <span data-ttu-id="a90e7-516">
            <see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-516">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-517">获取一个值，该值指示 <see cref="T:System.Collections.ArrayList" /> 是否具有固定大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-517">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a90e7-518">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Collections.ArrayList" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-518">
              <see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a90e7-519">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-519">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-520">具有固定大小的集合在创建之后不能再添加或移除元素，但是允许修改现有元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-520">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="a90e7-521">具有固定大小的集合是只是一个集合的包装器防止添加和移除元素;因此，如果对基础集合，包括添加或移除元素，进行更改的固定大小的集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="a90e7-521">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a90e7-522">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="a90e7-522">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-523">下面的代码示例演示如何创建的固定大小包装<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-523">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-524">获取一个值，该值指示 <see cref="T:System.Collections.ArrayList" /> 是否为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-524">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a90e7-525">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Collections.ArrayList" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-525">
              <see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a90e7-526">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-526">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-527">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-527">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="a90e7-528">集合是只读的是只是一个集合与防止集合; 进行修改的包装因此，如果对基础集合进行更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="a90e7-528">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a90e7-529">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="a90e7-529">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-530">下面的代码示例演示如何创建周围的只读包装<xref:System.Collections.ArrayList>以及如何确定如果<xref:System.Collections.ArrayList>是只读的。</span><span class="sxs-lookup"><span data-stu-id="a90e7-530">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-531">获取一个值，该值指示是否同步对 <see cref="T:System.Collections.ArrayList" /> 的访问（线程安全）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-531">Gets a value indicating whether access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a90e7-532">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.ArrayList" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-532">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a90e7-533">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-533">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-534">若要确保的线程安全性<xref:System.Collections.ArrayList>，所有操作必须通过返回的包装器来都完成<xref:System.Collections.ArrayList.Synchronized%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a90e7-534">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through the wrapper returned by the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="a90e7-535">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="a90e7-535">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="a90e7-536">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="a90e7-536">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a90e7-537">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="a90e7-537">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-538">下面的代码示例演示如何锁定集合使用<xref:System.Collections.ArrayList.SyncRoot%2A>在整个枚举期间。</span><span class="sxs-lookup"><span data-stu-id="a90e7-538">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="a90e7-539">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="a90e7-539">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="a90e7-540">下面的代码示例演示如何同步<xref:System.Collections.ArrayList>，确定如果<xref:System.Collections.ArrayList>同步以及如何使用同步<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-540">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a90e7-541">要获取或设置的元素的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-541">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-542">获取或设置指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-542">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a90e7-543">指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-543">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-544"><xref:System.Collections.ArrayList.Item%2A> 返回 <xref:System.Object>，因此，您可能需要将返回的值强制转换为原始类型以便对其进行操作。</span><span class="sxs-lookup"><span data-stu-id="a90e7-544">The <xref:System.Collections.ArrayList.Item%2A> returns an <xref:System.Object>, so you may need to cast the returned value to the original type in order to manipulate it.</span></span> <span data-ttu-id="a90e7-545">请务必注意，<xref:System.Collections.ArrayList> 不是个强类型集合。</span><span class="sxs-lookup"><span data-stu-id="a90e7-545">It is important to note that <xref:System.Collections.ArrayList> is not a strongly-typed collection.</span></span> <span data-ttu-id="a90e7-546">有关强类型替代项，请参见 <xref:System.Collections.Generic.List%601>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-546">For a strongly-typed alternative, see <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="a90e7-547"><xref:System.Collections.ArrayList> 接受`null`作为有效的值，并允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-547"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a90e7-548">可以使用下面的语法通过此属性访问集合中的特定元素：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-548">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="a90e7-549">C# 语言使用关键字进行定义而不是实现索引器<xref:System.Collections.ArrayList.Item%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a90e7-549">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ArrayList.Item%2A> property.</span></span> <span data-ttu-id="a90e7-550">Visual Basic 将 <xref:System.Collections.ArrayList.Item%2A> 实现为默认属性，该属性提供相同的索引功能。</span><span class="sxs-lookup"><span data-stu-id="a90e7-550">Visual Basic implements <xref:System.Collections.ArrayList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="a90e7-551">检索此属性的值的运算 o （1）;设置属性也是 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="a90e7-551">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-552">下面的代码示例创建<xref:System.Collections.ArrayList>并添加多个项。</span><span class="sxs-lookup"><span data-stu-id="a90e7-552">The following code example creates an <xref:System.Collections.ArrayList> and adds several items.</span></span> <span data-ttu-id="a90e7-553">此示例演示具有访问元素<xref:System.Collections.ArrayList.Item%2A>属性 （索引器在 C# 中），并通过将新值赋给分配更改元素<xref:System.Collections.ArrayList.Item%2A>的指定索引的属性。</span><span class="sxs-lookup"><span data-stu-id="a90e7-553">The example demonstrates accessing elements with the <xref:System.Collections.ArrayList.Item%2A> property (the indexer in C#), and changing an element by assigning a new value to the <xref:System.Collections.ArrayList.Item%2A> property for a specified index.</span></span> <span data-ttu-id="a90e7-554">该示例还演示<xref:System.Collections.ArrayList.Item%2A>属性不能用于访问或添加外部列表的当前大小的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-554">The example also shows that the <xref:System.Collections.ArrayList.Item%2A> property cannot be used to access or add elements outside the current size of the list.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Item#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source.cs#1)]
 [!code-vb[System.Collections.ArrayList.Item#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source.vb#1)]  
  
 <span data-ttu-id="a90e7-555">下面的示例使用<xref:System.Collections.ArrayList.Item%2A>属性显式将值分配给列表中的项。</span><span class="sxs-lookup"><span data-stu-id="a90e7-555">The following example uses the <xref:System.Collections.ArrayList.Item%2A> property explicitly to assign values to items in the list.</span></span> <span data-ttu-id="a90e7-556">该示例定义继承的类<xref:System.Collections.ArrayList>并添加一个方法进行编码列表项。</span><span class="sxs-lookup"><span data-stu-id="a90e7-556">The example defines a class that inherits an <xref:System.Collections.ArrayList> and adds a method to scramble the list items.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source2.cpp#2)]
 [!code-csharp[System.Collections.ArrayList.Item#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source2.cs#2)]
 [!code-vb[System.Collections.ArrayList.Item#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-557">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-557">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-558">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-558">-or-</span>
          </span>
          <span data-ttu-id="a90e7-559">
            <paramref name="index" /> 等于或大于 <see cref="P:System.Collections.ArrayList.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-559">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-560">返回 <see cref="T:System.Collections.ArrayList" /> 或它的一部分中某个值的最后一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-560">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a90e7-561">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-561">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-562">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-562">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-563">搜索指定的 <see cref="T:System.Object" />，并返回整个 <see cref="T:System.Collections.ArrayList" /> 中最后一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-563">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-564">如果在整个 <see cref="T:System.Collections.ArrayList" /> 中找到 <paramref name="value" /> 的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-564">The zero-based index of the last occurrence of <paramref name="value" /> within the entire the <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-565"><xref:System.Collections.ArrayList>向后搜索的最后一个元素开始，在第一个元素结束。</span><span class="sxs-lookup"><span data-stu-id="a90e7-565">The <xref:System.Collections.ArrayList> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="a90e7-566">此方法执行的线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-566">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="a90e7-567">从.NET Framework 2.0 开始，此方法使用集合的对象<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`以确定是否存在项。</span><span class="sxs-lookup"><span data-stu-id="a90e7-567">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a90e7-568">在.NET Framework 的早期版本，通过进行此决定<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`参数的集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-568">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-569">下面的代码示例演示如何确定指定的元素的最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="a90e7-569">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a90e7-570">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-570">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-571">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-571">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="a90e7-572">向后搜索的从零开始的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-572">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-573">搜索指定的 <see cref="T:System.Object" />，并返回 <see cref="T:System.Collections.ArrayList" /> 中从第一个元素到指定索引的元素范围内最后一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-573">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-574">如果找到，则返回在 <see cref="T:System.Collections.ArrayList" /> 中从第一个元素到 <paramref name="startIndex" /> 的元素范围内找到 <paramref name="value" /> 的最后一个匹配项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-574">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-575"><xref:System.Collections.ArrayList>是搜索向后开始`startIndex`和结束的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-575">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="a90e7-576">此方法执行的线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是从开始处的元素数目<xref:System.Collections.ArrayList>到`startIndex`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-576">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from the beginning of the <xref:System.Collections.ArrayList> to `startIndex`.</span></span>  
  
 <span data-ttu-id="a90e7-577">此方法通过调用可确定相等性<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-577">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a90e7-578">从.NET Framework 2.0 开始，此方法使用集合的对象<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`以确定是否存在项。</span><span class="sxs-lookup"><span data-stu-id="a90e7-578">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a90e7-579">在.NET Framework 的早期版本，通过进行此决定<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`参数的集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-579">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-580">下面的代码示例演示如何确定指定的元素的最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="a90e7-580">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-581">
            <paramref name="startIndex" /> 超出了 <see cref="T:System.Collections.ArrayList" /> 的有效索引范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-581">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a90e7-582">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-582">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-583">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-583">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="a90e7-584">向后搜索的从零开始的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-584">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a90e7-585">要搜索的部分中的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-585">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-586">搜索指定的 <see cref="T:System.Object" />，并返回 <see cref="T:System.Collections.ArrayList" /> 中包含指定的元素数并在指定索引处结束的元素范围内最后一个匹配项的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-586">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-587">如果在 <see cref="T:System.Collections.ArrayList" /> 中到 <paramref name="startIndex" /> 为止包含 <paramref name="count" /> 个元素的这部分元素中找到 <paramref name="value" /> 的最后一个匹配项，则为该项的从零开始的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-587">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="startIndex" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-588"><xref:System.Collections.ArrayList>是搜索向后开始`startIndex`结束`startIndex`减`count`加上 1，如果`count`大于 0。</span><span class="sxs-lookup"><span data-stu-id="a90e7-588">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="a90e7-589">此方法执行的线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是`count`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-589">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="a90e7-590">此方法通过调用可确定相等性<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-590">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a90e7-591">从.NET Framework 2.0 开始，此方法使用集合的对象<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`以确定是否存在项。</span><span class="sxs-lookup"><span data-stu-id="a90e7-591">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a90e7-592">在.NET Framework 的早期版本，通过进行此决定<xref:System.Object.Equals%2A>和<xref:System.IComparable.CompareTo%2A>方法`item`参数的集合中的对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-592">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-593">下面的代码示例演示如何确定指定的元素的最后一个匹配项的索引。</span><span class="sxs-lookup"><span data-stu-id="a90e7-593">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span> <span data-ttu-id="a90e7-594">请注意，`LastIndexOf`是向后搜索; 因此，`count`必须小于或等于`startIndex`+ 1。</span><span class="sxs-lookup"><span data-stu-id="a90e7-594">Note that `LastIndexOf` is a backward search; therefore, `count` must be less than or equal to `startIndex` + 1.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-595">
            <paramref name="startIndex" /> 超出了 <see cref="T:System.Collections.ArrayList" /> 的有效索引范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-595">
              <paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-596">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-596">-or-</span>
          </span>
          <span data-ttu-id="a90e7-597">
            <paramref name="count" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-597">
              <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-598">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-598">-or-</span>
          </span>
          <span data-ttu-id="a90e7-599">
            <paramref name="startIndex" /> 和 <paramref name="count" /> 未指定 <see cref="T:System.Collections.ArrayList" /> 中的有效部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-599">
              <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadOnly">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-600">返回只读的列表包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-600">Returns a list wrapper that is read-only.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList ReadOnly (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList ReadOnly(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ ReadOnly(System::Collections::ArrayList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="a90e7-601">要包装的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-601">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-602">返回只读的 <see cref="T:System.Collections.ArrayList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-602">Returns a read-only <see cref="T:System.Collections.ArrayList" /> wrapper.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-603">
            <paramref name="list" /> 周围的只读 <see cref="T:System.Collections.ArrayList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-603">A read-only <see cref="T:System.Collections.ArrayList" /> wrapper around <paramref name="list" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-604">若要防止对`list`，公开`list`只通过此包装器。</span><span class="sxs-lookup"><span data-stu-id="a90e7-604">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="a90e7-605">是只读的集合是只需使用的包装器可防止修改集合的集合。</span><span class="sxs-lookup"><span data-stu-id="a90e7-605">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="a90e7-606">如果对基础集合进行更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="a90e7-606">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a90e7-607">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="a90e7-607">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-608">下面的代码示例演示如何创建周围的只读包装<xref:System.Collections.ArrayList>以及如何确定如果<xref:System.Collections.ArrayList>是只读的。</span><span class="sxs-lookup"><span data-stu-id="a90e7-608">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-609">
            <paramref name="list" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-609">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.IList ReadOnly (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList ReadOnly(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ ReadOnly(System::Collections::IList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="a90e7-610">要包装的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-610">The <see cref="T:System.Collections.IList" /> to wrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-611">返回只读的 <see cref="T:System.Collections.IList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-611">Returns a read-only <see cref="T:System.Collections.IList" /> wrapper.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-612">
            <paramref name="list" /> 周围的只读 <see cref="T:System.Collections.IList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-612">A read-only <see cref="T:System.Collections.IList" /> wrapper around <paramref name="list" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-613">若要防止对`list`，公开`list`只通过此包装器。</span><span class="sxs-lookup"><span data-stu-id="a90e7-613">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="a90e7-614">是只读的集合是只需使用的包装器可防止修改集合的集合。</span><span class="sxs-lookup"><span data-stu-id="a90e7-614">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="a90e7-615">如果对基础集合进行更改，只读集合将反映这些更改。</span><span class="sxs-lookup"><span data-stu-id="a90e7-615">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a90e7-616">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="a90e7-616">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-617">
            <paramref name="list" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-617">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="a90e7-618">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-618">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-619">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-619">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-620">从 <see cref="T:System.Collections.ArrayList" /> 中移除特定对象的第一个匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-620">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-621">如果<xref:System.Collections.ArrayList>不包含指定的对象，<xref:System.Collections.ArrayList>保持不变。</span><span class="sxs-lookup"><span data-stu-id="a90e7-621">If the <xref:System.Collections.ArrayList> does not contain the specified object, the <xref:System.Collections.ArrayList> remains unchanged.</span></span> <span data-ttu-id="a90e7-622">不引发异常。</span><span class="sxs-lookup"><span data-stu-id="a90e7-622">No exception is thrown.</span></span>  
  
 <span data-ttu-id="a90e7-623">此方法执行的线性搜索;因此，此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-623">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="a90e7-624">此方法通过调用可确定相等性<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-624">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a90e7-625">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="a90e7-625">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="a90e7-626">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="a90e7-626">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="a90e7-627">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="a90e7-627">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-628">下面的代码示例演示如何从中移除元素<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-628">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-629">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-629">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="a90e7-630">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-630">-or-</span>
          </span>
          <span data-ttu-id="a90e7-631">
            <see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-631">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a90e7-632">要移除的元素的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-632">The zero-based index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-633">移除 <see cref="T:System.Collections.ArrayList" /> 的指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-633">Removes the element at the specified index of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-634">移除元素后，调整集合的大小和的值<xref:System.Collections.ArrayList.Count%2A>属性减少 1。</span><span class="sxs-lookup"><span data-stu-id="a90e7-634">After the element is removed, the size of the collection is adjusted and the value of the <xref:System.Collections.ArrayList.Count%2A> property is decreased by one.</span></span>  
  
 <span data-ttu-id="a90e7-635">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="a90e7-635">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="a90e7-636">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="a90e7-636">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="a90e7-637">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="a90e7-637">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="a90e7-638">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-638">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-639">下面的代码示例演示如何从中移除元素<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-639">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-640">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-640">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-641">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-641">-or-</span>
          </span>
          <span data-ttu-id="a90e7-642">
            <paramref name="index" /> 等于或大于 <see cref="P:System.Collections.ArrayList.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-642">
              <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-643">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-643">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="a90e7-644">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-644">-or-</span>
          </span>
          <span data-ttu-id="a90e7-645">
            <see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-645">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public virtual void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a90e7-646">要移除的元素范围的从零开始的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-646">The zero-based starting index of the range of elements to remove.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a90e7-647">要移除的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-647">The number of elements to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-648">从 <see cref="T:System.Collections.ArrayList" /> 中移除一定范围的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-648">Removes a range of elements from the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-649">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="a90e7-649">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="a90e7-650">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="a90e7-650">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="a90e7-651">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</span><span class="sxs-lookup"><span data-stu-id="a90e7-651">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="a90e7-652">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-652">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-653">下面的代码示例演示如何从中移除元素<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-653">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-654">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-654">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-655">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-655">-or-</span>
          </span>
          <span data-ttu-id="a90e7-656">
            <paramref name="count" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-656">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a90e7-657">
            <paramref name="index" /> 和 <paramref name="count" /> 不表示 <see cref="T:System.Collections.ArrayList" /> 中元素的有效范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-657">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-658">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-658">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="a90e7-659">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-659">-or-</span>
          </span>
          <span data-ttu-id="a90e7-660">
            <see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-660">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Repeat (object value, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Repeat(object value, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Repeat (value As Object, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Repeat(System::Object ^ value, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a90e7-661">要在新 <see cref="T:System.Object" /> 中对其进行多次复制的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-661">The <see cref="T:System.Object" /> to copy multiple times in the new <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-662">该值可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-662">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a90e7-663">
            <c>value</c> 应复制的次数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-663">The number of times <c>value</c> should be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-664">返回 <see cref="T:System.Collections.ArrayList" />，它的元素是指定值的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-664">Returns an <see cref="T:System.Collections.ArrayList" /> whose elements are copies of the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-665">具有 <paramref name="count" /> 所指定的元素数的 <see cref="T:System.Collections.ArrayList" />，其中的所有元素都是 <paramref name="value" /> 的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-665">An <see cref="T:System.Collections.ArrayList" /> with <paramref name="count" /> number of elements, all of which are copies of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-666"><xref:System.Collections.ArrayList> 接受`null`作为有效的值，并允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-666"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a90e7-667">此方法为 O (`n`) 操作，其中`n`是`count`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-667">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-668">下面的代码示例演示如何创建和初始化一个新<xref:System.Collections.ArrayList>具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="a90e7-668">The following code example shows how to create and initialize a new <xref:System.Collections.ArrayList> with the same value.</span></span>  
  
 [!code-cpp[Classic ArrayList.Repeat Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Repeat Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Repeat Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-669">
            <paramref name="count" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-669">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-670">将 <see cref="T:System.Collections.ArrayList" /> 或它的一部分中元素的顺序反转。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-670">Reverses the order of the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-671">将整个 <see cref="T:System.Collections.ArrayList" /> 中元素的顺序反转。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-671">Reverses the order of the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-672">此方法使用<xref:System.Array.Reverse%2A?displayProperty=nameWithType>若要反转的元素的顺序以便处的元素<xref:System.Collections.ArrayList>[i] 其中 i 表示的范围内的任何索引移动到<xref:System.Collections.ArrayList>[j] 其中 j 等于`index`  +  `index`  +  `count` -i-1。</span><span class="sxs-lookup"><span data-stu-id="a90e7-672">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="a90e7-673">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-673">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-674">下面的代码示例演示如何反转排序顺序中的值<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-674">The following code example shows how to reverse the sort order of the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-675">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-675">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a90e7-676">要反转的范围的从零开始的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-676">The zero-based starting index of the range to reverse.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a90e7-677">要反转的范围内的元素数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-677">The number of elements in the range to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-678">将指定范围中元素的顺序反转。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-678">Reverses the order of the elements in the specified range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-679">此方法使用<xref:System.Array.Reverse%2A?displayProperty=nameWithType>若要反转的元素的顺序以便处的元素<xref:System.Collections.ArrayList>[i] 其中 i 表示的范围内的任何索引移动到<xref:System.Collections.ArrayList>[j] 其中 j 等于`index`  +  `index`  +  `count` -i-1。</span><span class="sxs-lookup"><span data-stu-id="a90e7-679">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="a90e7-680">此方法为 O (`n`) 操作，其中`n`是`count`。</span><span class="sxs-lookup"><span data-stu-id="a90e7-680">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-681">下面的代码示例演示如何反转排序顺序中的一系列元素中的值<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-681">The following code example shows how to reverse the sort order of the values in a range of elements in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-682">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-682">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-683">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-683">-or-</span>
          </span>
          <span data-ttu-id="a90e7-684">
            <paramref name="count" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-684">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a90e7-685">
            <paramref name="index" /> 和 <paramref name="count" /> 不表示 <see cref="T:System.Collections.ArrayList" /> 中元素的有效范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-685">
              <paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-686">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-686">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public virtual void SetRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRange(int index, System::Collections::ICollection ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a90e7-687">从零开始的 <see cref="T:System.Collections.ArrayList" /> 索引，从此开始复制 <c>c</c> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-687">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which to start copying the elements of <c>c</c>.</span>
          </span>
        </param>
        <param name="c">
          <span data-ttu-id="a90e7-688">
            <see cref="T:System.Collections.ICollection" />，要将其元素复制到 <see cref="T:System.Collections.ArrayList" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-688">The <see cref="T:System.Collections.ICollection" /> whose elements to copy to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
          <span data-ttu-id="a90e7-689">集合本身不能为 <see langword="null" />，但它可以包含为 <see langword="null" /> 的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-689">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-690">将集合中的元素复制到 <see cref="T:System.Collections.ArrayList" /> 中一定范围的元素上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-690">Copies the elements of a collection over a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-691"><xref:System.Collections.ArrayList> 接受`null`作为有效的值，并允许重复的元素。</span><span class="sxs-lookup"><span data-stu-id="a90e7-691"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a90e7-692">中的元素的顺序<xref:System.Collections.ICollection>在过程中保留<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-692">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a90e7-693">此方法为 O (`n` + 1) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-693">This method is an O(`n` + 1) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-694">下面的代码示例演示如何设置和获取的元素范围<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-694">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-695">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-695">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-696">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-696">-or-</span>
          </span>
          <span data-ttu-id="a90e7-697">
            <paramref name="index" /> 加上 <paramref name="c" /> 中的元素数大于 <see cref="P:System.Collections.ArrayList.Count" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-697">
              <paramref name="index" /> plus the number of elements in <paramref name="c" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-698">
            <paramref name="c" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-698">
              <paramref name="c" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-699">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-699">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-700">对 <see cref="T:System.Collections.ArrayList" /> 或它的一部分中的元素进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-700">Sorts the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-701">对整个 <see cref="T:System.Collections.ArrayList" /> 中的元素进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-701">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-702">此方法使用<xref:System.Array.Sort%2A?displayProperty=nameWithType>，它使用快速排序算法。</span><span class="sxs-lookup"><span data-stu-id="a90e7-702">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which uses the QuickSort algorithm.</span></span> <span data-ttu-id="a90e7-703">快速排序算法是比较 （也称为不稳定排序），这意味着"小于或等于"的排序比较操作将确定这两个元素应首先出现在最后一个已排序的列表。</span><span class="sxs-lookup"><span data-stu-id="a90e7-703">The QuickSort algorithm is a comparison sort (also called an unstable sort), which means that a "less than or equal to" comparison operation determines which of two elements should occur first in the final sorted list.</span></span> <span data-ttu-id="a90e7-704">但是，如果两个元素相等，则可能不会保留其原始顺序。</span><span class="sxs-lookup"><span data-stu-id="a90e7-704">However, if two elements are equal, their original order might not be preserved.</span></span> <span data-ttu-id="a90e7-705">与此相反，一个稳定排序保留相等的元素的顺序。</span><span class="sxs-lookup"><span data-stu-id="a90e7-705">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="a90e7-706">若要执行一个稳定排序，则必须实现一个自定义<xref:System.Collections.IComparer>接口若要使用此方法的其他重载。</span><span class="sxs-lookup"><span data-stu-id="a90e7-706">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface to use with the other overloads of this method.</span></span>  
  
 <span data-ttu-id="a90e7-707">一般情况下，此方法为 O (`n`日志`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>; 在最坏情况下它复杂度为 O (`n`^2) 操作。</span><span class="sxs-lookup"><span data-stu-id="a90e7-707">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-708">下面的代码示例演示如何进行排序中的值<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-708">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Sort Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Sort Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Sort Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-709">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-709">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="a90e7-710">比较元素时要使用的 <see cref="T:System.Collections.IComparer" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-710">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="a90e7-711">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-711">-or-</span>
          </span>
          <span data-ttu-id="a90e7-712">null 引用（Visual Basic 中为 <see langword="Nothing" />）将使用每个元数的 <see cref="T:System.IComparable" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-712">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-713">使用指定的比较器对整个 <see cref="T:System.Collections.ArrayList" /> 中的元素进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-713">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-714">使用 <xref:System.Collections.ArrayList.Sort%2A> 方法通过实现 <xref:System.Collections.IComparer> 接口的自定义比较器对对象的列表进行排序。</span><span class="sxs-lookup"><span data-stu-id="a90e7-714">Use the <xref:System.Collections.ArrayList.Sort%2A> method to  sort a list of objects with a custom comparer that implements the <xref:System.Collections.IComparer> interface.</span></span> <span data-ttu-id="a90e7-715">如果为 `null` 传递 `comparer`，则此方法将使用每个元素的 <xref:System.IComparable> 实现。</span><span class="sxs-lookup"><span data-stu-id="a90e7-715">If you pass `null` for `comparer`, this method uses the <xref:System.IComparable> implementation of each element.</span></span> <span data-ttu-id="a90e7-716">在此情况下，您必须确保列表中包含的对象实现 <xref:System.Collections.IComparer> 接口，否则将发生异常。</span><span class="sxs-lookup"><span data-stu-id="a90e7-716">In this case, you must make sure that the objects contained in the list implement the <xref:System.Collections.IComparer> interface or an exception will occur.</span></span>  
  
 <span data-ttu-id="a90e7-717">此外，使用 <xref:System.IComparable> 实现意味着此列表将执行比较排序（也称为“不稳定排序”）；也就是说，如果两个元素相等，则可能不会保留其顺序。</span><span class="sxs-lookup"><span data-stu-id="a90e7-717">In addition, using the <xref:System.IComparable> implementation means the list performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="a90e7-718">与此相反，一个稳定排序保留相等的元素的顺序。</span><span class="sxs-lookup"><span data-stu-id="a90e7-718">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="a90e7-719">若要执行一个稳定排序，则必须实现一个自定义<xref:System.Collections.IComparer>接口。</span><span class="sxs-lookup"><span data-stu-id="a90e7-719">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="a90e7-720">一般情况下，此方法为 O (`n`日志`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>; 在最坏情况下它复杂度为 O (`n`^2) 操作。</span><span class="sxs-lookup"><span data-stu-id="a90e7-720">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-721">下面的代码示例演示如何进行排序中的值<xref:System.Collections.ArrayList>使用默认比较器和将反转排序顺序的自定义比较器。</span><span class="sxs-lookup"><span data-stu-id="a90e7-721">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CPP/arraylist_sort2.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CS/arraylist_sort2.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/VB/arraylist_sort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-722">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-722">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a90e7-723">比较两个元素时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-723">An error occurred while comparing two elements.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a90e7-724">将为 <paramref name="comparer" /> 传递 <see langword="null" />，并且列表中的元素不会实现 <see cref="T:System.IComparable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-724">
              <see langword="null" /> is passed for <paramref name="comparer" />, and the elements in the list do not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (int index, int count, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(int32 index, int32 count, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (index As Integer, count As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(int index, int count, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a90e7-725">要排序范围的从零开始的起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-725">The zero-based starting index of the range to sort.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a90e7-726">要排序的范围的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-726">The length of the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="a90e7-727">比较元素时要使用的 <see cref="T:System.Collections.IComparer" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-727">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="a90e7-728">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-728">-or-</span>
          </span>
          <span data-ttu-id="a90e7-729">null 引用（Visual Basic 中为 <see langword="Nothing" />）将使用每个元数的 <see cref="T:System.IComparable" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-729">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-730">使用指定的比较器对 <see cref="T:System.Collections.ArrayList" /> 中某个范围内的元素进行排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-730">Sorts the elements in a range of elements in <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-731">如果`comparer`设置为`null`，此方法将执行比较排序 （也称为不稳定排序）; 即，如果两个元素相等，其顺序可能不会保留。</span><span class="sxs-lookup"><span data-stu-id="a90e7-731">If `comparer` is set to `null`, this method performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="a90e7-732">与此相反，一个稳定排序保留相等的元素的顺序。</span><span class="sxs-lookup"><span data-stu-id="a90e7-732">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="a90e7-733">若要执行一个稳定排序，则必须实现一个自定义<xref:System.Collections.IComparer>接口。</span><span class="sxs-lookup"><span data-stu-id="a90e7-733">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="a90e7-734">一般情况下，此方法为 O (`n`日志`n`) 操作，其中`n`是`count`; 在最坏情况下此操作是 O(n^2) 操作。</span><span class="sxs-lookup"><span data-stu-id="a90e7-734">On average, this method is an O(`n` log `n`) operation, where `n` is `count`; in the worst case it is an O(n^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-735">下面的代码示例演示如何进行排序的元素范围中的值<xref:System.Collections.ArrayList>使用默认比较器和将反转排序顺序的自定义比较器。</span><span class="sxs-lookup"><span data-stu-id="a90e7-735">The following code example shows how to sort the values in a range of elements in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CPP/arraylist_sort3.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CS/arraylist_sort3.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/VB/arraylist_sort3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a90e7-736">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-736">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="a90e7-737">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-737">-or-</span>
          </span>
          <span data-ttu-id="a90e7-738">
            <paramref name="count" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-738">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a90e7-739">
            <paramref name="index" /> 和 <paramref name="count" /> 未在 <see cref="T:System.Collections.ArrayList" /> 中指定有效范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-739">
              <paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-740">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-740">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a90e7-741">比较两个元素时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-741">An error occurred while comparing two elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Synchronized">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-742">返回同步的（线程安全）列表包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-742">Returns a list wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Synchronized (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Synchronized(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Synchronized(System::Collections::ArrayList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="a90e7-743">要同步的 <see cref="T:System.Collections.ArrayList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-743">The <see cref="T:System.Collections.ArrayList" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-744">返回同步的（线程安全）<see cref="T:System.Collections.ArrayList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-744">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-745">同步的（线程安全）<see cref="T:System.Collections.ArrayList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-745">An <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-746">若要确保的线程安全性<xref:System.Collections.ArrayList>，必须通过此包装器完成所有操作。</span><span class="sxs-lookup"><span data-stu-id="a90e7-746">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="a90e7-747">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="a90e7-747">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="a90e7-748">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="a90e7-748">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a90e7-749">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="a90e7-749">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-750">下面的代码示例演示如何锁定集合使用<xref:System.Collections.ArrayList.SyncRoot%2A>在整个枚举期间。</span><span class="sxs-lookup"><span data-stu-id="a90e7-750">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="a90e7-751">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="a90e7-751">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="a90e7-752">下面的代码示例演示如何同步<xref:System.Collections.ArrayList>，确定如果<xref:System.Collections.ArrayList>同步以及如何使用同步<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-752">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-753">
            <paramref name="list" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-753">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.IList Synchronized (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList Synchronized(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ Synchronized(System::Collections::IList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="a90e7-754">要同步的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-754">The <see cref="T:System.Collections.IList" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-755">返回同步的（线程安全）<see cref="T:System.Collections.IList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-755">Returns an <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-756">同步的（线程安全）<see cref="T:System.Collections.IList" /> 包装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-756">An <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-757">若要确保的线程安全性<xref:System.Collections.ArrayList>，必须通过此包装器完成所有操作。</span><span class="sxs-lookup"><span data-stu-id="a90e7-757">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="a90e7-758">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="a90e7-758">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="a90e7-759">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="a90e7-759">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a90e7-760">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="a90e7-760">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-761">下面的代码示例演示如何锁定集合使用<xref:System.Collections.ArrayList.SyncRoot%2A>在整个枚举期间。</span><span class="sxs-lookup"><span data-stu-id="a90e7-761">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="a90e7-762">此方法为 o （1） 运算。</span><span class="sxs-lookup"><span data-stu-id="a90e7-762">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-763">
            <paramref name="list" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-763">
              <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-764">获取可用于同步对 <see cref="T:System.Collections.ArrayList" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-764">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a90e7-765">可用于同步对 <see cref="T:System.Collections.ArrayList" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-765">An object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-766">若要创建的同步的版本<xref:System.Collections.ArrayList>，使用<xref:System.Collections.ArrayList.Synchronized%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a90e7-766">To create a synchronized version of the <xref:System.Collections.ArrayList>, use the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span> <span data-ttu-id="a90e7-767">但是，派生的类可以提供自己的同步的版本<xref:System.Collections.ArrayList>使用<xref:System.Collections.ArrayList.SyncRoot%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a90e7-767">However, derived classes can provide their own synchronized version of the <xref:System.Collections.ArrayList> using the <xref:System.Collections.ArrayList.SyncRoot%2A> property.</span></span> <span data-ttu-id="a90e7-768">同步代码必须在执行操作<xref:System.Collections.ArrayList.SyncRoot%2A>的<xref:System.Collections.ArrayList>，而不是直接在<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-768">The synchronizing code must perform operations on the <xref:System.Collections.ArrayList.SyncRoot%2A> of the <xref:System.Collections.ArrayList>, not directly on the <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="a90e7-769">这样可确保对从其他对象派生的集合正确地执行操作。</span><span class="sxs-lookup"><span data-stu-id="a90e7-769">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="a90e7-770">具体地说，这样可保持正确的同步，与可能同时对修改其他线程<xref:System.Collections.ArrayList>对象。</span><span class="sxs-lookup"><span data-stu-id="a90e7-770">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.ArrayList> object.</span></span>  
  
 <span data-ttu-id="a90e7-771">枚举整个集合本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="a90e7-771">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="a90e7-772">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="a90e7-772">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a90e7-773">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="a90e7-773">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-774">下面的代码示例演示如何锁定集合使用<xref:System.Collections.ArrayList.SyncRoot%2A>在整个枚举期间。</span><span class="sxs-lookup"><span data-stu-id="a90e7-774">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="a90e7-775">检索此属性的值的运算复杂度为 O(1)。</span><span class="sxs-lookup"><span data-stu-id="a90e7-775">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToArray">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-776">将 <see cref="T:System.Collections.ArrayList" /> 的元素复制到新数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-776">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-777">将 <see cref="T:System.Collections.ArrayList" /> 的元素复制到新 <see cref="T:System.Object" /> 数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-777">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new <see cref="T:System.Object" /> array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-778">
            <see cref="T:System.Object" /> 数组，它包含 <see cref="T:System.Collections.ArrayList" /> 中元素的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-778">An <see cref="T:System.Object" /> array containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-779">使用复制元素<xref:System.Array.Copy%2A?displayProperty=nameWithType>，这是 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-779">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual Array ToArray (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Array ToArray(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Array ^ ToArray(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a90e7-780">要创建并向其复制元素的目标数组的元素 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-780">The element <see cref="T:System.Type" /> of the destination array to create and copy elements to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a90e7-781">将 <see cref="T:System.Collections.ArrayList" /> 的元素复制到指定元素类型的新数组中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-781">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array of the specified element type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a90e7-782">指定元素类型的数组，它包含 <see cref="T:System.Collections.ArrayList" /> 中元素的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-782">An array of the specified element type containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-783">中的对象的所有<xref:System.Collections.ArrayList>对象强制转换为<xref:System.Type>中指定`type`参数。</span><span class="sxs-lookup"><span data-stu-id="a90e7-783">All of the objects in the <xref:System.Collections.ArrayList> object will be cast to the <xref:System.Type> specified in the `type` parameter.</span></span>  
  
 <span data-ttu-id="a90e7-784">使用复制元素<xref:System.Array.Copy%2A?displayProperty=nameWithType>，这是 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-784">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-785">下面的复制示例演示如何将复制的元素<xref:System.Collections.ArrayList>到字符串数组。</span><span class="sxs-lookup"><span data-stu-id="a90e7-785">The following copy example shows how to copy the elements of an <xref:System.Collections.ArrayList> to a string array.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CPP/arraylist_toarray.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CS/arraylist_toarray.cs#1)]
 [!code-vb[System.Collections.ArrayList.ToArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/VB/arraylist_toarray.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a90e7-786">
            <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-786">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a90e7-787">源 <see cref="T:System.Collections.ArrayList" /> 的类型不能自动转换为指定类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-787">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the specified type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a90e7-788">将容量设置为 <see cref="T:System.Collections.ArrayList" /> 中元素的实际数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-788">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a90e7-789">此方法可以用于降低集合的内存开销，如果没有新的元素将添加到集合。</span><span class="sxs-lookup"><span data-stu-id="a90e7-789">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="a90e7-790">若要重置<xref:System.Collections.ArrayList>为其初始状态，请在调用<xref:System.Collections.ArrayList.Clear%2A>方法之前调用<xref:System.Collections.ArrayList.TrimToSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-790">To reset a <xref:System.Collections.ArrayList> to its initial state, call the <xref:System.Collections.ArrayList.Clear%2A> method before calling <xref:System.Collections.ArrayList.TrimToSize%2A>.</span></span> <span data-ttu-id="a90e7-791">截去空<xref:System.Collections.ArrayList>的容量设置<xref:System.Collections.ArrayList>到默认的容量。</span><span class="sxs-lookup"><span data-stu-id="a90e7-791">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="a90e7-792">此方法为 O (`n`) 操作，其中`n`是<xref:System.Collections.ArrayList.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-792">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a90e7-793">下面的代码示例演示如何修整的未使用的部分<xref:System.Collections.ArrayList>以及如何清除的值<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="a90e7-793">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a90e7-794">
            <see cref="T:System.Collections.ArrayList" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-794">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span>
          </span>
          <span data-ttu-id="a90e7-795">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-795">-or-</span>
          </span>
          <span data-ttu-id="a90e7-796">
            <see cref="T:System.Collections.ArrayList" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a90e7-796">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.ArrayList.Clear" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
  </Members>
</Type>