<Type Name="IDictionaryEnumerator" FullName="System.Collections.IDictionaryEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9f1a83d4b4c03762dcf4cd073f7d40b8bcbee60e" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48684217" /></Metadata><TypeSignature Language="C#" Value="public interface IDictionaryEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDictionaryEnumerator implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IDictionaryEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDictionaryEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDictionaryEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type IDictionaryEnumerator = interface&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="efe4b-101">枚举非泛型字典中的元素。</span><span class="sxs-lookup"><span data-stu-id="efe4b-101">Enumerates the elements of a nongeneric dictionary.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe4b-102">C# 语言的 `foreach` 语句（在 Visual Basic 中为 `for each`）隐藏了枚举数的复杂性。</span><span class="sxs-lookup"><span data-stu-id="efe4b-102">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="efe4b-103">因此，使用`foreach`建议而不是直接操作枚举器。</span><span class="sxs-lookup"><span data-stu-id="efe4b-103">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="efe4b-104">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="efe4b-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="efe4b-105">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="efe4b-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="efe4b-106"><xref:System.Collections.IEnumerator.Reset%2A>方法也会枚举数放回此位置。</span><span class="sxs-lookup"><span data-stu-id="efe4b-106">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="efe4b-107">在此位置上，未定义 <xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="efe4b-107">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="efe4b-108">因此，您必须调用<xref:System.Collections.IEnumerator.MoveNext%2A>方法将枚举数前移到集合，然后再读取的值的第一个元素<xref:System.Collections.IEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="efe4b-108">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="efe4b-109">在调用 <xref:System.Collections.IEnumerator.Current%2A> 或 <xref:System.Collections.IEnumerator.MoveNext%2A> 之前，<xref:System.Collections.IEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="efe4b-109"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="efe4b-110"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IEnumerator.Current%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="efe4b-110"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="efe4b-111">如果<xref:System.Collections.IEnumerator.MoveNext%2A>越过集合，枚举器的末尾放置在集合中的最后一个元素的后面和<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="efe4b-111">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="efe4b-112">当枚举数位于此位置上，对后续调用<xref:System.Collections.IEnumerator.MoveNext%2A>还返回`false`。</span><span class="sxs-lookup"><span data-stu-id="efe4b-112">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="efe4b-113">如果最后一次调用到<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，<xref:System.Collections.IEnumerator.Current%2A>是不确定的。</span><span class="sxs-lookup"><span data-stu-id="efe4b-113">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="efe4b-114">若要再次将 <xref:System.Collections.IEnumerator.Current%2A> 设置为集合的第一个元素，可以调用 <xref:System.Collections.IEnumerator.Reset%2A> 并接着调用 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="efe4b-114">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="efe4b-115">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="efe4b-115">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="efe4b-116">如果进行了更改到集合中，例如添加、 修改或删除元素，该枚举数将失效且不可恢复，并且下次调用<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="efe4b-116">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>
  
 <span data-ttu-id="efe4b-117">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="efe4b-117">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="efe4b-118">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</span><span class="sxs-lookup"><span data-stu-id="efe4b-118">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="efe4b-119">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="efe4b-119">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="efe4b-120">此代码示例演示如何定义实现的字典枚举器<xref:System.Collections.IDictionaryEnumerator>接口。</span><span class="sxs-lookup"><span data-stu-id="efe4b-120">This code example shows how to define a dictionary enumerator that implements the <xref:System.Collections.IDictionaryEnumerator> interface.</span></span>  
  
 [!code-cpp[Dictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#1)]
 [!code-csharp[Dictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#1)]
 [!code-vb[Dictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="efe4b-121"><see cref="P:System.Collections.IEnumerator.Current" />属性，继承自<see cref="T:System.Collections.IEnumerator" />返回<see cref="T:System.Object" />，它是一个装箱<see cref="T:System.Collections.DictionaryEntry" />，类似于的返回值<see cref="P:System.Collections.IDictionaryEnumerator.Entry" />属性。</span><span class="sxs-lookup"><span data-stu-id="efe4b-121">The <see cref="P:System.Collections.IEnumerator.Current" /> property that is inherited from <see cref="T:System.Collections.IEnumerator" /> returns an <see cref="T:System.Object" /> that is a boxed <see cref="T:System.Collections.DictionaryEntry" />, similar to the return value of the <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> property.</span></span></para></block>
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.IEnumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Entry">
      <MemberSignature Language="C#" Value="public System.Collections.DictionaryEntry Entry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.DictionaryEntry Entry" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Entry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entry As DictionaryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::DictionaryEntry Entry { System::Collections::DictionaryEntry get(); };" />
      <MemberSignature Language="F#" Value="member this.Entry : System.Collections.DictionaryEntry" Usage="System.Collections.IDictionaryEnumerator.Entry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.DictionaryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efe4b-122">同时获取当前字典项的键和值。</span><span class="sxs-lookup"><span data-stu-id="efe4b-122">Gets both the key and the value of the current dictionary entry.</span></span></summary>
        <value><span data-ttu-id="efe4b-123">同时包含当前字典项的键和值的 <see cref="T:System.Collections.DictionaryEntry" />。</span><span class="sxs-lookup"><span data-stu-id="efe4b-123">A <see cref="T:System.Collections.DictionaryEntry" /> containing both the key and the value of the current dictionary entry.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="efe4b-124"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> 未定义任何以下情况下：</span><span class="sxs-lookup"><span data-stu-id="efe4b-124"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="efe4b-125">创建枚举器后立即，枚举器定位在集合中的第一个元素之前。</span><span class="sxs-lookup"><span data-stu-id="efe4b-125">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span> <span data-ttu-id="efe4b-126"><xref:System.Collections.IEnumerator.MoveNext%2A> 必须调用以枚举器前进到集合，然后再读取的值的第一个元素<xref:System.Collections.IDictionaryEnumerator.Entry%2A>。</span><span class="sxs-lookup"><span data-stu-id="efe4b-126"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span></span>  
  
-   <span data-ttu-id="efe4b-127">上次调用<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，指示集合的末尾。</span><span class="sxs-lookup"><span data-stu-id="efe4b-127">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="efe4b-128">枚举器无效，由于在集合中，如添加、 修改或删除元素所做的更改。</span><span class="sxs-lookup"><span data-stu-id="efe4b-128">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="efe4b-129">在调用 <xref:System.Collections.IDictionaryEnumerator.Entry%2A> 之前，<xref:System.Collections.IEnumerator.MoveNext%2A> 返回相同的对象。</span><span class="sxs-lookup"><span data-stu-id="efe4b-129"><xref:System.Collections.IDictionaryEnumerator.Entry%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="efe4b-130"><xref:System.Collections.IEnumerator.MoveNext%2A> 将 <xref:System.Collections.IDictionaryEnumerator.Entry%2A> 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="efe4b-130"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="efe4b-131"><see cref="P:System.Collections.IEnumerator.Current" />属性，继承自<see cref="T:System.Collections.IEnumerator" />返回<see cref="T:System.Object" />，它是一个装箱<see cref="T:System.Collections.DictionaryEntry" />，类似于的返回值<see cref="P:System.Collections.IDictionaryEnumerator.Entry" />属性。</span><span class="sxs-lookup"><span data-stu-id="efe4b-131">The <see cref="P:System.Collections.IEnumerator.Current" /> property that is inherited from <see cref="T:System.Collections.IEnumerator" /> returns an <see cref="T:System.Object" /> that is a boxed <see cref="T:System.Collections.DictionaryEntry" />, similar to the return value of the <see cref="P:System.Collections.IDictionaryEnumerator.Entry" /> property.</span></span></para></block>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Key" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Value" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public object Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Key" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Key { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : obj" Usage="System.Collections.IDictionaryEnumerator.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efe4b-132">获取当前字典项的键。</span><span class="sxs-lookup"><span data-stu-id="efe4b-132">Gets the key of the current dictionary entry.</span></span></summary>
        <value><span data-ttu-id="efe4b-133">当前枚举元素的键。</span><span class="sxs-lookup"><span data-stu-id="efe4b-133">The key of the current element of the enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
 <span data-ttu-id="efe4b-134"><xref:System.Collections.IDictionaryEnumerator.Key%2A> 未定义任何以下情况下：</span><span class="sxs-lookup"><span data-stu-id="efe4b-134"><xref:System.Collections.IDictionaryEnumerator.Key%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="efe4b-135">创建枚举器后立即，枚举器定位在集合中的第一个元素之前。</span><span class="sxs-lookup"><span data-stu-id="efe4b-135">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span> <span data-ttu-id="efe4b-136"><xref:System.Collections.IEnumerator.MoveNext%2A> 必须调用以枚举器前进到集合，然后再读取的值的第一个元素<xref:System.Collections.IDictionaryEnumerator.Key%2A>。</span><span class="sxs-lookup"><span data-stu-id="efe4b-136"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Key%2A>.</span></span>  
  
-   <span data-ttu-id="efe4b-137">上次调用<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，指示集合的末尾。</span><span class="sxs-lookup"><span data-stu-id="efe4b-137">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="efe4b-138">枚举器无效，由于在集合中，如添加、 修改或删除元素所做的更改。</span><span class="sxs-lookup"><span data-stu-id="efe4b-138">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="efe4b-139">在调用 <xref:System.Collections.IDictionaryEnumerator.Key%2A> 之前，<xref:System.Collections.IEnumerator.MoveNext%2A> 返回相同的对象。</span><span class="sxs-lookup"><span data-stu-id="efe4b-139"><xref:System.Collections.IDictionaryEnumerator.Key%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="efe4b-140"><xref:System.Collections.IEnumerator.MoveNext%2A> 设置<xref:System.Collections.IDictionaryEnumerator.Key%2A>枚举中的下一个元素的键。</span><span class="sxs-lookup"><span data-stu-id="efe4b-140"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Key%2A> to the key of the next element in enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Value" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Entry" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionaryEnumerator.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Collections.IDictionaryEnumerator.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="efe4b-141">获取当前字典项的值。</span><span class="sxs-lookup"><span data-stu-id="efe4b-141">Gets the value of the current dictionary entry.</span></span></summary>
        <value><span data-ttu-id="efe4b-142">当前枚举元素的值。</span><span class="sxs-lookup"><span data-stu-id="efe4b-142">The value of the current element of the enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efe4b-143"><xref:System.Collections.IDictionaryEnumerator.Value%2A> 未定义任何以下情况下：</span><span class="sxs-lookup"><span data-stu-id="efe4b-143"><xref:System.Collections.IDictionaryEnumerator.Value%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="efe4b-144">创建枚举器后立即，枚举器定位在集合中的第一个元素之前。</span><span class="sxs-lookup"><span data-stu-id="efe4b-144">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span> <span data-ttu-id="efe4b-145"><xref:System.Collections.IEnumerator.MoveNext%2A> 必须调用以枚举器前进到集合，然后再读取的值的第一个元素<xref:System.Collections.IDictionaryEnumerator.Value%2A>。</span><span class="sxs-lookup"><span data-stu-id="efe4b-145"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Value%2A>.</span></span>  
  
-   <span data-ttu-id="efe4b-146">上次调用<xref:System.Collections.IEnumerator.MoveNext%2A>返回`false`，指示集合的末尾。</span><span class="sxs-lookup"><span data-stu-id="efe4b-146">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="efe4b-147">枚举器无效，由于在集合中，如添加、 修改或删除元素所做的更改。</span><span class="sxs-lookup"><span data-stu-id="efe4b-147">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="efe4b-148">在调用 <xref:System.Collections.IDictionaryEnumerator.Value%2A> 之前，<xref:System.Collections.IEnumerator.MoveNext%2A> 返回相同的对象。</span><span class="sxs-lookup"><span data-stu-id="efe4b-148"><xref:System.Collections.IDictionaryEnumerator.Value%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="efe4b-149"><xref:System.Collections.IEnumerator.MoveNext%2A> 设置<xref:System.Collections.IDictionaryEnumerator.Value%2A>枚举中的下一个元素的值。</span><span class="sxs-lookup"><span data-stu-id="efe4b-149"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Value%2A> to the value of the next element in enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Key" />
        <altmember cref="P:System.Collections.IDictionaryEnumerator.Entry" />
      </Docs>
    </Member>
  </Members>
</Type>