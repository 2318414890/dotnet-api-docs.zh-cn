<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e79517aa8dab302204c461cf349e6d34f100645e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a9e64-101">定义用于支持比较对象是否在结构上相等的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9e64-101">Defines methods to support the comparison of objects for structural equality.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9e64-102">结构化相等性是指两个对象相等，因为它们具有相等的值。</span><span class="sxs-lookup"><span data-stu-id="a9e64-102">Structural equality means that two objects are equal because they have equal values.</span></span> <span data-ttu-id="a9e64-103">它不同于引用相等性，该值指示两个对象引用相等，因为它们引用同一个物理对象。</span><span class="sxs-lookup"><span data-stu-id="a9e64-103">It differs from reference equality, which indicates that two object references are equal because they reference the same physical object.</span></span> <span data-ttu-id="a9e64-104"><xref:System.Collections.IStructuralEquatable>接口可以实现自定义的比较，以检查集合对象的结构相等。</span><span class="sxs-lookup"><span data-stu-id="a9e64-104">The <xref:System.Collections.IStructuralEquatable> interface enables you to implement customized comparisons to check for the structural equality of collection objects.</span></span> <span data-ttu-id="a9e64-105">也就是说，可以创建结构上相等的定义，并指定与接受的集合类型会使用此定义<xref:System.Collections.IStructuralEquatable>接口。</span><span class="sxs-lookup"><span data-stu-id="a9e64-105">That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="a9e64-106">此接口具有两个成员： <xref:System.Collections.IStructuralEquatable.Equals%2A>，使用指定的相等性测试<xref:System.Collections.IEqualityComparer>实现中，和<xref:System.Collections.IStructuralEquatable.GetHashCode%2A>，它返回的对象是否相等的相同的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="a9e64-106">The interface has two members: <xref:System.Collections.IStructuralEquatable.Equals%2A>, which tests for equality by using a specified <xref:System.Collections.IEqualityComparer> implementation, and <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, which returns identical hash codes for objects that are equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9e64-107"><xref:System.Collections.IStructuralEquatable>接口仅支持自定义比较的结构是否相等。</span><span class="sxs-lookup"><span data-stu-id="a9e64-107">The <xref:System.Collections.IStructuralEquatable> interface supports only custom comparisons for structural equality.</span></span> <span data-ttu-id="a9e64-108"><xref:System.Collections.IStructuralComparable>接口支持自定义的结构化比较的排序和顺序。</span><span class="sxs-lookup"><span data-stu-id="a9e64-108">The <xref:System.Collections.IStructuralComparable> interface supports custom structural comparisons for sorting and ordering.</span></span>  
  
 <span data-ttu-id="a9e64-109">.NET Framework 通过返回的相等比较器还会提供默认<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>和<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="a9e64-109">The .NET Framework also provides default equality comparers, which are returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> and <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="a9e64-110">有关详细信息，请参阅示例。</span><span class="sxs-lookup"><span data-stu-id="a9e64-110">For more information, see the example.</span></span>  
  
 <span data-ttu-id="a9e64-111">泛型的元组类 (<xref:System.Tuple%601>， <xref:System.Tuple%602>， <xref:System.Tuple%603>，依次类推) 和<xref:System.Array>类提供的显式实现<xref:System.Collections.IStructuralEquatable>接口。</span><span class="sxs-lookup"><span data-stu-id="a9e64-111">The generic tuple classes (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, and so on) and the <xref:System.Array> class provide explicit implementations of the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="a9e64-112">通过强制转换 （在 C# 中) 或当前实例的数组或到的元组的转换 （在 Visual Basic)<xref:System.Collections.IStructuralEquatable>接口值并提供你<xref:System.Collections.IEqualityComparer>实现的自变量作为<xref:System.Collections.IStructuralEquatable.Equals%2A>方法，你可以定义自定义的相等性对数组或集合的比较。</span><span class="sxs-lookup"><span data-stu-id="a9e64-112">By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <xref:System.Collections.IStructuralEquatable> interface value and providing your <xref:System.Collections.IEqualityComparer> implementation as an argument to the <xref:System.Collections.IStructuralEquatable.Equals%2A> method, you can define a custom equality comparison for the array or collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9e64-113">默认的相等比较， `EqualityComparer<Object>.Default.Equals`，考虑两个`NaN`值相等。</span><span class="sxs-lookup"><span data-stu-id="a9e64-113">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="a9e64-114">但是，在某些情况下，可能希望的比较`NaN`值的相等性返回`false`，指示这些值不能进行比较。</span><span class="sxs-lookup"><span data-stu-id="a9e64-114">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="a9e64-115">下面的示例定义一个实现 `NanComparer` 接口的 <xref:System.Collections.IStructuralEquatable> 类。</span><span class="sxs-lookup"><span data-stu-id="a9e64-115">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="a9e64-116">它比较两个<xref:System.Double>或两个<xref:System.Single>使用相等运算符的值。</span><span class="sxs-lookup"><span data-stu-id="a9e64-116">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="a9e64-117">它将任何其他类型的值传递给默认相等比较器。</span><span class="sxs-lookup"><span data-stu-id="a9e64-117">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="a9e64-118">下面的示例创建两个相同的 3 元组对象的组件中包含的三个<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="a9e64-118">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="a9e64-119">第二个分量的值是<xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a9e64-119">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a9e64-120">该示例然后调用<xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType>方法，并调用<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>方法三次。</span><span class="sxs-lookup"><span data-stu-id="a9e64-120">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="a9e64-121">第一次，它将返回的默认相等比较器传递<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="a9e64-121">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a9e64-122">第二次，它将返回的默认相等比较器传递<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="a9e64-122">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a9e64-123">第三次，它将传递自定义`NanComparer`对象。</span><span class="sxs-lookup"><span data-stu-id="a9e64-123">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="a9e64-124">如示例输出所示前, 三个方法调用返回`true`，而第四个调用将返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a9e64-124">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="a9e64-125">要与当前实例进行比较的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9e64-125">The object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="a9e64-126">一个可确定当前实例与 <c>other</c> 是否相等的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9e64-126">An object that determines whether the current instance and <c>other</c> are equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9e64-127">确定某个对象与当前实例在结构上是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9e64-127">Determines whether an object is structurally equal to the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9e64-128">如果两个对象相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9e64-128">
              <see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9e64-129"><xref:System.Collections.IStructuralEquatable.Equals%2A>方法支持自定义的结构化比较的数组和元组对象。</span><span class="sxs-lookup"><span data-stu-id="a9e64-129">The <xref:System.Collections.IStructuralEquatable.Equals%2A> method supports custom structural comparison of array and tuple objects.</span></span> <span data-ttu-id="a9e64-130">此方法反过来调用`comparer`对象的<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>方法来比较各个数组元素或元组组件，从第一个元素或组件开始。</span><span class="sxs-lookup"><span data-stu-id="a9e64-130">This method in turn calls the `comparer` object's <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> method to compare individual array elements or tuple components, starting with the first element or component.</span></span> <span data-ttu-id="a9e64-131">单个调用<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>结束和<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>方法返回一个值或者方法调用返回时`false`或之后的所有数组元素或已经比较了元组组件。</span><span class="sxs-lookup"><span data-stu-id="a9e64-131">The individual calls to <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> end and the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method returns a value either when a method call returns `false` or after all array elements or tuple components have been compared.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9e64-132">默认的相等比较， `EqualityComparer<Object>.Default.Equals`，考虑两个`NaN`值相等。</span><span class="sxs-lookup"><span data-stu-id="a9e64-132">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="a9e64-133">但是，在某些情况下，可能希望的比较`NaN`值的相等性返回`false`，指示这些值不能进行比较。</span><span class="sxs-lookup"><span data-stu-id="a9e64-133">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="a9e64-134">下面的示例定义一个实现 `NanComparer` 接口的 <xref:System.Collections.IStructuralEquatable> 类。</span><span class="sxs-lookup"><span data-stu-id="a9e64-134">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="a9e64-135">它比较两个<xref:System.Double>或两个<xref:System.Single>使用相等运算符的值。</span><span class="sxs-lookup"><span data-stu-id="a9e64-135">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="a9e64-136">它将任何其他类型的值传递给默认相等比较器。</span><span class="sxs-lookup"><span data-stu-id="a9e64-136">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="a9e64-137">下面的示例创建两个相同的 3 元组对象的组件中包含的三个<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="a9e64-137">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="a9e64-138">第二个分量的值是<xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a9e64-138">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a9e64-139">该示例然后调用<xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType>方法，并调用<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType>方法三次。</span><span class="sxs-lookup"><span data-stu-id="a9e64-139">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="a9e64-140">第一次，它将返回的默认相等比较器传递<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="a9e64-140">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a9e64-141">第二次，它将返回的默认相等比较器传递<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="a9e64-141">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a9e64-142">第三次，它将传递自定义`NanComparer`对象。</span><span class="sxs-lookup"><span data-stu-id="a9e64-142">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="a9e64-143">如示例输出所示前, 三个方法调用返回`true`，而第四个调用将返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a9e64-143">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="a9e64-144">一个计算当前对象的哈希代码的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9e64-144">An object that computes the hash code of the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9e64-145">返回当前实例的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9e64-145">Returns a hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9e64-146">当前实例的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9e64-146">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9e64-147">实现此方法以返回相对应的集合对象的自定义的哈希代码与提供的结构相等性的自定义比较<xref:System.Collections.IStructuralEquatable.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a9e64-147">Implement this method to return customized hash codes for collection objects that correspond to the customized comparison for structural equality provided by the <xref:System.Collections.IStructuralEquatable.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a9e64-148">如果<see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />方法返回<see langword="true" />对于两个对象，返回的值<see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />必须相等的两个对象的方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="a9e64-148">If the <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> method returns <see langword="true" /> for two objects, the values returned by the <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> method for the two objects must also be equal.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>