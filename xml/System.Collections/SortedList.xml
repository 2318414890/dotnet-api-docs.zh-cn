<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SortedList.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d3124b7bda8739a20a75d51b771ab675fd3a27c3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3124b7bda8739a20a75d51b771ab675fd3a27c3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.SortedList">
          <source>Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</source>
          <target state="translated">表示键/值对的集合，这些键值对按键排序并可按照键和索引访问。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>For the generic version of this collection, see <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此集合的泛型版本，请参阅<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> element can be accessed by its key, like an element in any <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementation, or by its index, like an element in any <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> implementation.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>元素可以通过其密钥，像在任何元素访问<ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph>实现，或通过其索引，像在任何元素<ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象在内部维护存储的列表; 即的键的一个数组元素的两个数组和关联的值的另一个数组。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Each element is a key/value pair that can be accessed as a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> object.</source>
          <target state="translated">每个元素都是可作为访问键/值对<ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">密钥不能为<ph id="ph1">`null`</ph>，但可以是一个值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象是元素的数目<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>，自动增加容量通过重新分配所需的方式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">可以通过调用减少容量<ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph>或通过设置<ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>属性显式。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>For very large <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the <ph id="ph2">`enabled`</ph> attribute of the  configuration element to <ph id="ph3">`true`</ph> in the run-time environment.</source>
          <target state="translated">对于非常大<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象，你可以通过设置增加到 20 亿元素在 64 位系统上的最大容量<ph id="ph2">`enabled`</ph>到的配置元素的属性<ph id="ph3">`true`</ph>在运行时环境中。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象进行排序的键是根据特定<ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph>实现时指定<ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>创建或按照<ph id="ph4">&lt;xref:System.IComparable&gt;</ph>键本身提供的实现。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>In either case, a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> does not allow duplicate keys.</source>
          <target state="translated">在任一情况下，<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>不允许重复键。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">当添加的元素时，它将插入到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>中正确的排序顺序和索引进行相应调整。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">因此，可能会更改特定键/值对的索引，添加或移除元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Operations on a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object tend to be slower than operations on a <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph> object because of the sorting.</source>
          <target state="translated">对操作<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象往往速度要慢于对操作<ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>由于排序的对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>However, the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</source>
          <target state="translated">但是，<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>通过允许对值的访问，可以通过在相关的键或索引提供更大的灵活性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Elements in this collection can be accessed using an integer index.</source>
          <target state="translated">可以使用整数索引访问此集合中的元素。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Indexes in this collection are zero-based.</source>
          <target state="translated">在此集合中的索引是从零开始。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 语言的语句 (<ph id="ph2">`for each`</ph>在 Visual Basic 中) 返回集合中的元素的类型的对象。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Since each element of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">由于每个元素的<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象是一个键/值对，元素类型不是键的类型或值的类型。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Rather, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>.</source>
          <target state="translated">相反，元素类型是<ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>For example:</source>
          <target state="translated">例如:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph>语句是枚举器，允许从，不写入集合只能读取允许周围的包装器。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>The following code example shows how to create and initialize a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object and how to print out its keys and values.</source>
          <target state="translated">下面的代码示例演示如何创建和初始化<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象以及如何进行打印出其键和值。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">公共静态 (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph>在 Visual Basic 中) 的此类型的成员都是线程安全。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">但不保证所有实例成员都是线程安全的。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can support multiple readers concurrently, as long as the collection is not modified.</source>
          <target state="translated">A<ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>对象都可以支持多个读取器并发，只要不修改该集合。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /&gt;</ph> method.</source>
          <target state="translated">若要确保的线程安全性<ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>，所有操作必须通过返回的包装器来都完成<ph id="ph2">&lt;see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.SortedList">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Collections.SortedList">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the default initial capacity, and is sorted according to the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface implemented by each key added to the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 类的新实例，该实例为空、具有默认初始容量并根据 <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> 接口（此接口由添加到 <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中的每个键实现）进行排序。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>Each key must implement the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">每个键必须实现<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>接口，才能与中的其他所有键的比较<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>The elements are sorted according to the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation of each key added to the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">对元素进行排序根据<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>实现添加到每个键<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象是元素的数目，<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">下面的代码示例创建使用的集合不同<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>构造函数，并说明的集合的行为差异。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">在对键进行比较时使用的 <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>，使用每一个键的 <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the default initial capacity, and is sorted according to the specified <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interface.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 类的新实例，该实例为空、具有默认初始容量并根据指定的 <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> 接口进行排序。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The elements are sorted according to the specified <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">对元素进行排序按照指定<ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation of each key is used; therefore, each key must implement the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>参数是<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>使用的每个键的实现; 因此，必须实现每个键<ph id="ph4">&lt;xref:System.IComparable&gt;</ph>接口，才能与中的其他所有键的比较<ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象是元素的数目，<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">此构造函数是 o （1） 操作。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">下面的代码示例创建使用的集合不同<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>构造函数，并说明的集合的行为差异。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> implementation to copy to a new <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">要复制到新 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface implemented by each key.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 类的新实例，该实例包含从指定字典复制的元素、具有与所复制的元素数相同的初始容量并根据由每个键实现的 <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> 接口排序。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>Each key must implement the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">每个键必须实现<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>接口，才能与中的其他所有键的比较<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The elements are sorted according to the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation of each key added to the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">对元素进行排序根据<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>实现添加到每个键<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> object is an example of an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementation that can be passed to this constructor.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>对象是一种<ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph>可以传递给此构造函数的实现。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The new <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a copy of the keys and values stored in the <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</source>
          <target state="translated">新<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象包含的键和值存储在一份<ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象是元素的数目，<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`d`</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">下面的代码示例创建使用的集合不同<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>构造函数，并说明的集合的行为差异。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
          <source>One or more elements in <ph id="ph1">&lt;paramref name="d" /&gt;</ph> do not implement the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> 中的一个或多个元素未实现 <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象可包含的初始元素数。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the specified initial capacity, and is sorted according to the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface implemented by each key added to the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 类的新实例，该实例为空、具有指定的初始容量并且根据 <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> 接口（此接口由添加到 <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的每个键实现）进行排序。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>Each key must implement the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">每个键必须实现<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>接口，才能与中的其他所有键的比较<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The elements are sorted according to the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> implementation of each key added to the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">对元素进行排序根据<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>实现添加到每个键<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象是元素的数目，<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`initialCapacity`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`initialCapacity`</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">下面的代码示例创建使用的集合不同<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>构造函数，并说明的集合的行为差异。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="initialCapacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="initialCapacity" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Int32)">
          <source>There is not enough available memory to create a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object with the specified <ph id="ph2">&lt;paramref name="initialCapacity" /&gt;</ph>.</source>
          <target state="translated">没有足够的可用内存来创建具有指定 <ph id="ph2">&lt;paramref name="initialCapacity" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">在对键进行比较时使用的 <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>，使用每一个键的 <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象可包含的初始元素数。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that is empty, has the specified initial capacity, and is sorted according to the specified <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interface.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 类的新实例，该实例为空、具有指定的初始容量并根据指定的 <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> 接口排序。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The elements are sorted according to the specified <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">对元素进行排序按照指定<ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation of each key is used; therefore, each key must implement the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>参数是<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>使用的每个键的实现; 因此，必须实现每个键<ph id="ph4">&lt;xref:System.IComparable&gt;</ph>接口，才能与中的其他所有键的比较<ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象是元素的数目，<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`capacity`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">`capacity`</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">下面的代码示例创建使用的集合不同<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>构造函数，并说明的集合的行为差异。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="capacity" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
          <source>There is not enough available memory to create a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object with the specified <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph>.</source>
          <target state="translated">没有足够的可用内存来创建具有指定 <ph id="ph2">&lt;paramref name="capacity" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> implementation to copy to a new <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">要复制到新 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> implementation to use when comparing keys.</source>
          <target state="translated">在对键进行比较时使用的 <ph id="ph1">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> implementation of each key.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph>，使用每一个键的 <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> interface.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 类的新实例，该实例包含从指定字典复制的元素、具有与所复制的元素数相同的初始容量并根据指定的 <ph id="ph2">&lt;see cref="T:System.Collections.IComparer" /&gt;</ph> 接口排序。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The elements are sorted according to the specified <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementation.</source>
          <target state="translated">对元素进行排序按照指定<ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>If the <ph id="ph1">`comparer`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> implementation of each key is used; therefore, each key must implement the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> interface to be capable of comparisons with every other key in the <ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">如果<ph id="ph1">`comparer`</ph>参数是<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>使用的每个键的实现; 因此，必须实现每个键<ph id="ph4">&lt;xref:System.IComparable&gt;</ph>接口，才能与中的其他所有键的比较<ph id="ph5">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>A <ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph> object is an example of an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> implementation that can be passed to this constructor.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Collections.Hashtable&gt;</ph>对象是一种<ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph>可以传递给此构造函数的实现。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The new <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a copy of the keys and values stored in the <ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>.</source>
          <target state="translated">新<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象包含的键和值存储在一份<ph id="ph2">&lt;xref:System.Collections.Hashtable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> can hold.</source>
          <target state="translated">容量<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象是元素的数目，<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>可以保存。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">如元素添加到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>，自动增加容量通过重新分配在内部数组所需的方式。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">如果可以估计集合的大小，指定的初始容量，则无需执行大量的大小将元素添加到时调整操作<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`d`</ph>.</source>
          <target state="translated">此构造函数是 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是中的元素数<ph id="ph3">`d`</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source>The following code example creates collections using different <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> constructors and demonstrates the differences in the behavior of the collections.</source>
          <target state="translated">下面的代码示例创建使用的集合不同<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>构造函数，并说明的集合的行为差异。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="d" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="d" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
          <source><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and one or more elements in <ph id="ph3">&lt;paramref name="d" /&gt;</ph> do not implement the <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="comparer" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，<ph id="ph3">&lt;paramref name="d" /&gt;</ph> 中的一个或多个元素不实现 <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The key of the element to add.</source>
          <target state="translated">要添加的元素的键。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The value of the element to add.</source>
          <target state="translated">要添加的元素的值。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>Adds an element with the specified key and value to a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">将带有指定键和值的元素添加到 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The insertion point is determined based on the comparer selected, either explicitly or by default, when the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object was created.</source>
          <target state="translated">插入点根据显式或默认情况下，选择的比较器确定当<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>创建对象。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> already equals <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>已经等于<ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>、 容量的<ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>对象提高自动重新分配内部数组，并添加新的元素之前，现有的元素被复制到新数组。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object (for example, <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">你还可以使用<ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph>中不存在要添加新元素的键的值设置属性<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>对象 (例如， <ph id="ph3">`myCollection["myNonexistentKey"] = myValue`</ph>)。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">但是，如果指定的键已存在于<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>，则设置<ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph>属性将会覆盖旧值。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">与此相反，<ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph>方法不会修改现有元素。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象进行排序的键是根据特定<ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph>实现时指定<ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>创建或按照<ph id="ph4">&lt;xref:System.IComparable&gt;</ph>键本身提供的实现。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">密钥不能为<ph id="ph1">`null`</ph>，但可以是一个值。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作未排序的数据，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>It is an O(log <ph id="ph1">`n`</ph>) operation if the new element is added at the end of the list.</source>
          <target state="translated">它是 O (日志<ph id="ph1">`n`</ph>) 如果在列表的末尾添加了新元素的操作。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">如果插入导致大小调整，运算复杂度为 O (<ph id="ph1">`n`</ph>)。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The following code example shows how to add elements to a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何将元素添加到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>An element with the specified <ph id="ph1">&lt;paramref name="key" /&gt;</ph> already exists in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">带有指定 <ph id="ph1">&lt;paramref name="key" /&gt;</ph> 的元素已经存在于 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> is set to use the <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> interface, and <ph id="ph3">&lt;paramref name="key" /&gt;</ph> does not implement the <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 设置为使用 <ph id="ph2">&lt;see cref="T:System.IComparable" /&gt;</ph> 接口，并且 <ph id="ph3">&lt;paramref name="key" /&gt;</ph> 不实现 <ph id="ph4">&lt;see cref="T:System.IComparable" /&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 为只读。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 具有固定的大小。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>There is not enough available memory to add the element to the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">没有足够的可用内存来将元素添加到 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Add(System.Object,System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">比较器引发异常。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Capacity">
          <source>Gets or sets the capacity of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的容量。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>The number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object can contain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象可包含的元素数。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> 是的元素数的<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>对象可以存储。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> 是中的实际的元素数目<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> 大于或等于始终是<ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>If <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>超过<ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>时添加元素，则自动通过增大容量在复制旧元素和添加新的元素之前重新分配在内部数组。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>The capacity can be decreased by calling <ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> or by setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> property explicitly.</source>
          <target state="translated">可以通过调用减少容量<ph id="ph1">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph>或通过设置<ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>属性显式。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>When the value of <ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</source>
          <target state="translated">时的值<ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>设置了显式，在内部数组还重新分配以适应指定的容量。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Capacity">
          <source>Retrieving the value of this property is an O(1) operation; setting the property is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the new capacity.</source>
          <target state="translated">检索此属性的值的运算 o （1）;将属性设置为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>新容量。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Capacity">
          <source>The value assigned is less than the current number of elements in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">分配的值小于 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中的当前元素数。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Capacity">
          <source>There is not enough memory available on the system.</source>
          <target state="translated">系统上没有足够的可用内存。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>Removes all elements from a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中移除所有元素。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> is set to zero and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> 设置为零并且对其他对象的集合的元素引用也被释放。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> remains unchanged.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> 保持不变。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, call <ph id="ph2">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph> or set the <ph id="ph3">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> property directly.</source>
          <target state="translated">若要重置的容量<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象，请调用<ph id="ph2">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph>或设置<ph id="ph3">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>直接属性。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> to the default capacity.</source>
          <target state="translated">截去空<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>的容量设置<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>到默认的容量。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clear">
          <source>The following code example shows how to trim the unused portions of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object and how to clear the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何修整的未使用的部分<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象以及如何清除的值<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象是只读的。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 具有固定的大小。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clone">
          <source>Creates a shallow copy of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">创建 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的浅表副本。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Clone">
          <source>A shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的浅表副本。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</source>
          <target state="translated">集合的浅表副本仅集合的元素复制，无论它们是引用类型还是值类型，但不会复制引用所引用的对象。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">新集合中的引用都指向原始集合中的引用指向同一对象。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">与此相反，集合的深层副本复制这些元素，以及由这些元素直接或间接引用的所有内容。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Clone">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中查找的键。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains a specific key.</source>
          <target state="translated">确定 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象是否包含特定键。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains an element with the specified <ph id="ph3">&lt;paramref name="key" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象包含带有指定 <ph id="ph3">&lt;paramref name="key" /&gt;</ph> 的元素，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象进行排序的键是根据特定<ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph>实现时指定<ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>创建或按照<ph id="ph4">&lt;xref:System.IComparable&gt;</ph>键本身提供的实现。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> implements <ph id="ph2">&lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> 可实现 <ph id="ph2">&lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>It behaves exactly as <ph id="ph1">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph>.</source>
          <target state="translated">它的行为完全相同<ph id="ph1">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法使用二进制搜索算法;因此，此方法为 O (日志<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`item`</ph>以确定是否存在项。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`item`</ph>参数的集合中的对象。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The following code example shows how to determine whether a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a specific element.</source>
          <target state="translated">下面的代码示例演示如何确定是否<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象包含的特定元素。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Contains(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">比较器引发异常。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中查找的键。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains a specific key.</source>
          <target state="translated">确定 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象是否包含特定键。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains an element with the specified <ph id="ph3">&lt;paramref name="key" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象包含带有指定 <ph id="ph3">&lt;paramref name="key" /&gt;</ph> 的元素，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象进行排序的键是根据特定<ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph>实现时指定<ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>创建或按照<ph id="ph4">&lt;xref:System.IComparable&gt;</ph>键本身提供的实现。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>This method behaves exactly as the <ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> method.</source>
          <target state="translated">此方法的行为完全相同<ph id="ph1">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法使用二进制搜索算法;因此，此方法为 O (日志<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`item`</ph>以确定是否存在项。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`item`</ph>参数的集合中的对象。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The following code example shows how to determine whether a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a specific element.</source>
          <target state="translated">下面的代码示例演示如何确定是否<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象包含的特定元素。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsKey(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">比较器引发异常。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中定位的值。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>Determines whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains a specific value.</source>
          <target state="translated">确定 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象是否包含特定值。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object contains an element with the specified <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象包含带有指定 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 的元素，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The values of the elements of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are compared to the specified value using the <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> method.</source>
          <target state="translated">元素的值<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>相比对象指定的值使用<ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法执行的线性搜索;因此，平均执行时间成正比<ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">也就是说，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`item`</ph>以确定是否存在项。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`item`</ph>参数的集合中的对象。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.ContainsValue(System.Object)">
          <source>The following code example shows how to determine whether a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object contains a specific element.</source>
          <target state="translated">下面的代码示例演示如何确定是否<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象包含的特定元素。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> object that is the destination of the <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> objects copied from <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">一维 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 对象，它是从 <ph id="ph2">&lt;see cref="T:System.Collections.DictionaryEntry" /&gt;</ph> 复制的 <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的目标位置。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必须具有从零开始的索引。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中从零开始的索引，在此处开始复制。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>Copies <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> elements to a one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> object, starting at the specified index in the array.</source>
          <target state="translated">从指定数组索引开始将 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 元素复制到一维 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> 对象中。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The key/value pairs are copied to the <ph id="ph1">&lt;xref:System.Array&gt;</ph> object in the same order in which the enumerator iterates through the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">键/值对复制到<ph id="ph1">&lt;xref:System.Array&gt;</ph>枚举数循环访问的相同顺序中对象<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>To copy only the keys in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, use <ph id="ph2">`SortedList.Keys.CopyTo`</ph>.</source>
          <target state="translated">若要复制仅在密钥<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>，使用<ph id="ph2">`SortedList.Keys.CopyTo`</ph>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>To copy only the values in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, use <ph id="ph2">`SortedList.Values.CopyTo`</ph>.</source>
          <target state="translated">若要仅中的值复制<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>，使用<ph id="ph2">`SortedList.Values.CopyTo`</ph>。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The following code example shows how to copy the values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object into a one-dimensional <ph id="ph2">&lt;xref:System.Array&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何复制中的值<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>到一维对象<ph id="ph2">&lt;xref:System.Array&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayIndex" /&gt;</ph> 小于零。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多维的。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is greater than the available space from <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">源 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中的元素数目大于从 <ph id="ph2">&lt;paramref name="arrayIndex" /&gt;</ph> 到目标 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 末尾之间的可用空间。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">无法自动将源 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 的类型转换为目标 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的类型。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Count">
          <source>Gets the number of elements contained in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中包含的元素数。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中包含的元素数。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>Each element is a key/value pair that can be accessed as a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> object.</source>
          <target state="translated">每个元素都是可作为访问键/值对<ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object can store.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> 是的元素数的<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>对象可以存储。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> 是中的实际的元素数目<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> 大于或等于始终是<ph id="ph2">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>超过<ph id="ph2">&lt;xref:System.Collections.SortedList.Capacity%2A&gt;</ph>时添加元素，则自动通过增大容量在复制旧元素和添加新的元素之前重新分配在内部数组。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算复杂度为 O(1)。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The zero-based index of the value to get.</source>
          <target state="translated">要获取的值的从零开始索引。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>Gets the value at the specified index of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的指定索引处的值。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The value at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">位于 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的指定索引处的值。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">当添加的元素时，它将插入到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>中正确的排序顺序和索引进行相应调整。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">因此，可能会更改特定键/值对的索引，添加或移除元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何获取一个或所有的键或值中<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetByIndex(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 不在 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的有效索引范围内。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> object that iterates through a <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">返回一个循环访问 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> object for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 语言的 <ph id="ph1">`foreach`</ph> 语句（在 Visual Basic 中为 <ph id="ph2">`for each`</ph>）隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建议使用 <ph id="ph1">`foreach`</ph>，而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中第一个元素的前面。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也会将枚举器放回此位置。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">在此位置上，未定义 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在读取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必须调用 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 将枚举器向前移动到集合的第一个元素。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">在调用 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 或 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 之前，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 返回同一对象。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 将 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 设置为下一个元素。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>还返回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最后一次调用到<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>是不确定的。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次将 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 设置为集合的第一个元素，可以调用 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 并接着调用 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果对集合进行更改（如添加、修改或删除元素），则枚举数将失效且不可恢复，而且其行为是不确定的。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举过程中锁定集合。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要允许多个线程访问集合以进行读写操作，则必须实现自己的同步。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The zero-based index of the key to get.</source>
          <target state="translated">要获取的键的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>Gets the key at the specified index of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的指定索引处的键。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The key at the specified index of the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的指定索引处的键。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">当添加的元素时，它将插入到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>中正确的排序顺序和索引进行相应调整。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">因此，可能会更改特定键/值对的索引，添加或移除元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何获取一个或所有的键或值中<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKey(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 不在 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的有效索引范围内。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKeyList">
          <source>Gets the keys in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中的键。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetKeyList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> object containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 对象中的键的 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> object is a read-only view of the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>对象是只读的视图的键的<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</source>
          <target state="translated">对基础做的修改<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>中将立即反映<ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>The elements of the returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> are sorted in the same order as the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">返回的元素<ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>按的键相同的顺序进行排序<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> property, but returns an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> object.</source>
          <target state="translated">此方法类似于是<ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph>属性，但返回<ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>对象而不是<ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetKeyList">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何获取一个或所有的键或值中<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetValueList">
          <source>Gets the values in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中的值。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.GetValueList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 对象，它包含 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中的值。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> object is a read-only view of the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>对象是只读的值的视图<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</source>
          <target state="translated">对基础做的修改<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>中将立即反映<ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>The elements of the returned <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> are sorted in the same order as the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">返回的元素<ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>用作的值相同的顺序排序<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.Values%2A&gt;</ph> property, but returns an <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph> object.</source>
          <target state="translated">此方法类似于是<ph id="ph1">&lt;xref:System.Collections.SortedList.Values%2A&gt;</ph>属性，但返回<ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>对象而不是<ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.GetValueList">
          <source>The following code example shows how to get one or all the keys or values in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何获取一个或所有的键或值中<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中查找的键。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>Returns the zero-based index of the specified key in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中指定键的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The zero-based index of the <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parameter, if <ph id="ph2">&lt;paramref name="key" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object; otherwise, -1.</source>
          <target state="translated">如果在 <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中找到 <ph id="ph1">&lt;paramref name="key" /&gt;</ph>，则为 <ph id="ph2">&lt;paramref name="key" /&gt;</ph> 参数的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created, or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象进行排序的键是根据特定<ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph>实现时指定<ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>创建，或按照<ph id="ph4">&lt;xref:System.IComparable&gt;</ph>键本身提供的实现。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">当添加的元素时，它将插入到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>中正确的排序顺序和索引进行相应调整。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">因此，可能会更改特定键/值对的索引，添加或移除元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>This method uses a binary search algorithm; therefore, this method is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法使用二进制搜索算法;因此，此方法为 O (日志<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`item`</ph>以确定是否存在项。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`item`</ph>参数的集合中的对象。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The following code example shows how to determine the index of a key or a value in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何确定某个键或中的值的索引<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfKey(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">比较器引发异常。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The value to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中定位的值。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>Returns the zero-based index of the first occurrence of the specified value in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">返回指定的值在 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中第一个匹配项的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The zero-based index of the first occurrence of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter, if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object; otherwise, -1.</source>
          <target state="translated">如果在 <ph id="ph3">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中找到 <ph id="ph1">&lt;paramref name="value" /&gt;</ph>，则为 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 参数的第一个匹配项的从零开始的索引；否则为 -1。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">当添加的元素时，它将插入到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>中正确的排序顺序和索引进行相应调整。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">因此，可能会更改特定键/值对的索引，添加或移除元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The values of the elements of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are compared to the specified value using the <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> method.</source>
          <target state="translated">元素的值<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>相比于指定的值使用<ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>This method uses a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法使用的线性搜索;因此，此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods on <ph id="ph3">`item`</ph> to determine whether item exists.</source>
          <target state="translated">从.NET Framework 2.0 开始，此方法使用集合的对象<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`item`</ph>以确定是否存在项。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph> methods of the <ph id="ph3">`item`</ph> parameter on the objects in the collection.</source>
          <target state="translated">在.NET Framework 的早期版本，通过进行此决定<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A&gt;</ph>方法<ph id="ph3">`item`</ph>参数的集合中的对象。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.IndexOfValue(System.Object)">
          <source>The following code example shows how to determine the index of a key or a value in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何确定某个键或中的值的索引<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>Gets a value indicating whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object has a fixed size.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象是否具有固定大小。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象具有固定大小，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">具有固定大小的集合不允许添加或移除元素后集合创建后，但允许修改现有元素。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">具有固定大小的集合是只是一个集合的包装器防止添加和移除元素;因此，如果对基础集合，包括添加或移除元素，进行更改的固定大小的集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsFixedSize">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算复杂度为 O(1)。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>Gets a value indicating whether a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">获取一个值，该值指示 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象是否为只读。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象为只读，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">在创建只读集合后，该集合不允许添加、移除或修改元素。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
          <target state="translated">集合是只读的是只是一个集合与防止集合; 进行修改的包装因此，如果对基础集合进行更改，只读集合将反映这些更改。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsReadOnly">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算复杂度为 O(1)。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Gets a value indicating whether access to a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is synchronized (thread safe).</source>
          <target state="translated">获取一个值，该值指示对 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的访问是否同步（线程安全）。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果对 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的访问是同步的（线程安全），则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>To guarantee the thread safety of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">若要确保的线程安全性<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象，所有操作必须通过返回的包装器来都完成<ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>The following code example shows how to lock a collection using the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">下面的代码示例演示如何锁定集合使用<ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph>属性在整个枚举期间。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算复杂度为 O(1)。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.IsSynchronized">
          <source>The following code example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, determine whether a <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何同步<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象，确定是否<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>已同步，以及如何使用同步<ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The key associated with the value to get or set.</source>
          <target state="translated">与要获取或设置的值相关联的键。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Gets and sets the value associated with a specific key in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">获取并设置与 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中的特定键相关联的值。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The value associated with the <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parameter in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object, if <ph id="ph3">&lt;paramref name="key" /&gt;</ph> is found; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找到 <ph id="ph1">&lt;paramref name="key" /&gt;</ph>，则为与 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中的 <ph id="ph3">&lt;paramref name="key" /&gt;</ph> 参数相关联的值；否则为 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property to access a specific element in a collection by specifying the following syntax: <ph id="ph2">`myCollection[key]`</ph>.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph>属性访问集合中的特定元素通过指定以下语法： <ph id="ph2">`myCollection[key]`</ph>。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>You can also use this property to add new elements by setting the value of a key that does not exist in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object (for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue)`</ph>.</source>
          <target state="translated">你还可以使用此属性来添加新元素中不存在的键的值设置<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象 (例如， <ph id="ph2">`myCollection["myNonexistentKey"] = myValue)`</ph>。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>However, if the specified key already exists in the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">但是，如果指定的键已存在于<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>，则设置<ph id="ph2">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph>属性将会覆盖旧值。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">与此相反，<ph id="ph1">&lt;xref:System.Collections.SortedList.Add%2A&gt;</ph>方法不会修改现有元素。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>A key cannot be <ph id="ph1">`null`</ph>, but a value can be.</source>
          <target state="translated">密钥不能为<ph id="ph1">`null`</ph>，但可以是一个值。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>To distinguish between <ph id="ph1">`null`</ph> that is returned because the specified key is not found and <ph id="ph2">`null`</ph> that is returned because the value of the specified key is <ph id="ph3">`null`</ph>, use the <ph id="ph4">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph> method or the <ph id="ph5">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph> method to determine if the key exists in the list.</source>
          <target state="translated">来区分<ph id="ph1">`null`</ph>返回因为找不到指定的键和<ph id="ph2">`null`</ph>返回指定键的值是因为<ph id="ph3">`null`</ph>，使用<ph id="ph4">&lt;xref:System.Collections.SortedList.Contains%2A&gt;</ph>方法或<ph id="ph5">&lt;xref:System.Collections.SortedList.ContainsKey%2A&gt;</ph>方法可确定列表中存在的键。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The elements of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are sorted by the keys either according to a specific <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation specified when the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph> is created or according to the <ph id="ph4">&lt;xref:System.IComparable&gt;</ph> implementation provided by the keys themselves.</source>
          <target state="translated">元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>按键排序是根据特定<ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph>实现时指定<ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>创建或按照<ph id="ph4">&lt;xref:System.IComparable&gt;</ph>键本身提供的实现。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph> property.</source>
          <target state="translated">C# 语言使用关键字进行定义而不是实现索引器<ph id="ph1">&lt;xref:System.Collections.SortedList.Keys%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 将 <ph id="ph1">&lt;xref:System.Collections.SortedList.Item%2A&gt;</ph> 实现为默认属性，该属性提供相同的索引功能。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Retrieving the value of this property is an O(log <ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">检索此属性的值是 O (日志<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>Setting the property is an O(log <ph id="ph1">`n`</ph>) operation if the key is already in the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">将属性设置为 O (日志<ph id="ph1">`n`</ph>) 操作，如果密钥已处于<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>If the key is not in the list, setting the property is an O(<ph id="ph1">`n`</ph>) operation for unsorted data, or O(log <ph id="ph2">`n`</ph>) if the new element is added at the end of the list.</source>
          <target state="translated">如果该键不在列表中，将属性设置为 O (<ph id="ph1">`n`</ph>) 未排序的数据或 O 操作 (日志<ph id="ph2">`n`</ph>) 如果在列表的末尾添加了新元素。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>If insertion causes a resize, the operation is O(<ph id="ph1">`n`</ph>).</source>
          <target state="translated">如果插入导致大小调整，运算复杂度为 O (<ph id="ph1">`n`</ph>)。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated">设置该属性，而且 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象为只读。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The property is set, <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection, and the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">设置该属性，集合中不存在 <ph id="ph1">&lt;paramref name="key" /&gt;</ph>，而且 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 具有固定大小。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>There is not enough available memory to add the element to the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">没有足够的可用内存来将元素添加到 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Item(System.Object)">
          <source>The comparer throws an exception.</source>
          <target state="translated">比较器引发异常。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Keys">
          <source>Gets the keys in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中的键。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 对象中的键的 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is a read-only view of the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>对象是只读的视图的键的<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">对基础做的修改<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>中将立即反映<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>The elements of the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> are sorted in the same order as the keys of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">元素<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>按的键相同的顺序进行排序<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>This property is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.GetKeyList%2A&gt;</ph> method, but returns an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> object.</source>
          <target state="translated">此属性是类似于<ph id="ph1">&lt;xref:System.Collections.SortedList.GetKeyList%2A&gt;</ph>方法，但返回<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>对象而不是<ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Keys">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">要移除的元素的键。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>Removes the element with the specified key from a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中移除带有指定键的元素。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object does not contain an element with the specified key, the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> remains unchanged.</source>
          <target state="translated">如果 <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> 对象不包含具有指定键的元素，则 <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> 保持不变。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>No exception is thrown.</source>
          <target state="translated">不引发异常。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The following code example shows how to remove elements from a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何从中移除元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象是只读的。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 具有固定的大小。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">要移除的元素的从零开始的索引。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index of a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">移除 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的指定索引处的元素。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">当添加的元素时，它将插入到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>中正确的排序顺序和索引进行相应调整。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">因此，可能会更改特定键/值对的索引，添加或移除元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，则移动的元素的索引也将更新。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</source>
          <target state="translated">此行为不适用于元素按概念划分为不同存储桶的集合，如哈希表。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The following code example shows how to remove elements from a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何从中移除元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 不在 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的有效索引范围内。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 为只读。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 具有固定的大小。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The zero-based index at which to save <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">从零开始的索引，在该位置保存 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to save into the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">要保存到 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 对象中的 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">该值可以为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>Replaces the value at a specific index in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">替换 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中指定索引处的值。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The index sequence is based on the sort sequence.</source>
          <target state="translated">索引序列基于排序顺序。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>When an element is added, it is inserted into <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> in the correct sort order, and the indexing adjusts accordingly.</source>
          <target state="translated">当添加的元素时，它将插入到<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>中正确的排序顺序和索引进行相应调整。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>When an element is removed, the indexing also adjusts accordingly.</source>
          <target state="translated">在删除某个元素后，索引也相应地调整。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>Therefore, the index of a specific key/value pair might change as elements are added or removed from the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">因此，可能会更改特定键/值对的索引，添加或移除元素<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source>The following code example shows how to replace the value of an existing element in a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何替换中的现有元素的值<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is outside the range of valid indexes for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 不在 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的有效索引范围内。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object to synchronize.</source>
          <target state="translated">要同步的 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>Returns a synchronized (thread-safe) wrapper for a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的同步（线程安全）包装。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>A synchronized (thread-safe) wrapper for the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的同步（线程安全）包装。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>To guarantee the thread safety of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, all operations must be done through this wrapper only.</source>
          <target state="translated">若要确保的线程安全性<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象，必须通过此包装器仅执行所有操作。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">下面的代码示例演示如何锁定集合使用<ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph>属性在整个枚举期间。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source>The following code example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, determine whether a <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何同步<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象，确定是否<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>已同步，以及如何使用同步<ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
          <source><ph id="ph1">&lt;paramref name="list" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="list" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Gets an object that can be used to synchronize access to a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">获取一个对象，该对象可用于同步对 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的访问。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">一个对象，该对象可用于同步对 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象的访问。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>To create a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">若要创建的同步的版本<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象，请使用<ph id="ph2">&lt;xref:System.Collections.SortedList.Synchronized%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">但是，派生的类可以提供自己的同步的版本<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>使用<ph id="ph2">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">同步代码必须在执行操作<ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>，而不是直接在<ph id="ph3">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">这样可确保对从其他对象派生的集合正确地执行操作。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated">具体地说，这样可保持正确的同步，与可能同时对修改其他线程<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举整个集合本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph> property during the entire enumeration.</source>
          <target state="translated">下面的代码示例演示如何锁定集合使用<ph id="ph1">&lt;xref:System.Collections.SortedList.SyncRoot%2A&gt;</ph>属性在整个枚举期间。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">检索此属性的值的运算复杂度为 O(1)。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated">返回循环访问 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 语言的 <ph id="ph1">`foreach`</ph> 语句（在 Visual Basic 中为 <ph id="ph2">`for each`</ph>）隐藏了枚举数的复杂性。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，建议使用 <ph id="ph1">`foreach`</ph>，而不是直接操作枚举数。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">枚举器可用于读取集合中的数据，但不能用于修改基础集合。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">最初，枚举数定位在集合中第一个元素的前面。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也会将枚举器放回此位置。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">在此位置，调用<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>引发异常。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在读取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必须调用 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 将枚举器向前移动到集合的第一个元素。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">在调用 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 或 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 之前，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 返回同一对象。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 将 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 设置为下一个元素。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>越过的末尾的集合，枚举数定位在集合中的最后一个元素的后面和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">当枚举器位于此位置上，后续调用<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>还返回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
          <target state="translated">如果最后一次调用到<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>返回<ph id="ph2">`false`</ph>，则调用<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>引发异常。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次将 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 设置为集合的第一个元素，可以调用 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 并接着调用 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合保持不变，枚举数就保持有效。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果对集合进行更改，例如添加、 修改或删除元素，则枚举数将失效且不可恢复失效，并且下次调用<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>引发<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之间修改集合<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>返回到，设置的元素，即使枚举数已经无效。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使某个集合已同步，其他线程仍可以修改该集合，这会导致枚举数引发异常。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>Sets the capacity to the actual number of elements in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">将容量设置为 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中元素的实际数目。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</source>
          <target state="translated">此方法可以用于降低集合的内存开销，如果没有新的元素将添加到集合。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>To reset a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object to its initial state, call the <ph id="ph2">&lt;xref:System.Collections.SortedList.Clear%2A&gt;</ph> method before calling <ph id="ph3">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph>.</source>
          <target state="translated">若要重置<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象为其初始状态，调用<ph id="ph2">&lt;xref:System.Collections.SortedList.Clear%2A&gt;</ph>方法之前调用<ph id="ph3">&lt;xref:System.Collections.SortedList.TrimToSize%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>Trimming an empty <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> sets the capacity of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> to the default capacity.</source>
          <target state="translated">截去空<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>的容量设置<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>到默认的容量。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>.</source>
          <target state="translated">此方法为 O (<ph id="ph1">`n`</ph>) 操作，其中<ph id="ph2">`n`</ph>是<ph id="ph3">&lt;xref:System.Collections.SortedList.Count%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.SortedList.TrimToSize">
          <source>The following code example shows how to trim the unused portions of a <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> object and how to clear its values.</source>
          <target state="translated">下面的代码示例演示如何修整的未使用的部分<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>对象以及如何清除它的值。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象是只读的。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Collections.SortedList.TrimToSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 具有固定的大小。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="P:System.Collections.SortedList.Values">
          <source>Gets the values in a <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中的值。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the values in the <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 对象，它包含 <ph id="ph2">&lt;see cref="T:System.Collections.SortedList" /&gt;</ph> 对象中的值。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is a read-only view of the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>对象是只读的值的视图<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>Modifications made to the underlying <ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph> are immediately reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">对基础做的修改<ph id="ph1">&lt;xref:System.Collections.SortedList&gt;</ph>中将立即反映<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>The elements of the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> are sorted in the same order as the values of the <ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>.</source>
          <target state="translated">元素<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>用作的值相同的顺序排序<ph id="ph2">&lt;xref:System.Collections.SortedList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>This property is similar to the <ph id="ph1">&lt;xref:System.Collections.SortedList.GetValueList%2A&gt;</ph> method, but returns an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> object instead of an <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph> object.</source>
          <target state="translated">此属性是类似于<ph id="ph1">&lt;xref:System.Collections.SortedList.GetValueList%2A&gt;</ph>方法，但返回<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>对象而不是<ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.SortedList.Values">
          <source>This method is an O(1) operation.</source>
          <target state="translated">此方法为 o （1） 运算。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>