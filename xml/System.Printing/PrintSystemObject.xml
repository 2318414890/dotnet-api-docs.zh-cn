<Type Name="PrintSystemObject" FullName="System.Printing.PrintSystemObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="51b35a7dda6fd535113870889c578063a0d45951" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PrintSystemObject : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract PrintSystemObject extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Printing.PrintSystemObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PrintSystemObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrintSystemObject abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1464d-101">定义打印系统对象所共有的基本属性和方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1464d-101">Defines basic properties and methods that are common to the objects of the printing system.</span>
      </span>
      <span data-ttu-id="1464d-102">从此类派生的类表示诸如打印队列、打印服务器和打印作业之类的对象。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1464d-102">Classes that derive from this class represent such objects as print queues, print servers, and print jobs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1464d-103">除了打印系统对象的基类外，此类可用于你的应用程序不知道或不关心哪些特定类型的正在使用的打印系统对象时调用方法。</span><span class="sxs-lookup"><span data-stu-id="1464d-103">In addition to being the base class for print system objects, this class can be useful for calling methods when your application does not know or does not care what particular type of print system object it is using.</span></span> <span data-ttu-id="1464d-104">例如，你可以通过枚举<xref:System.Printing.PrintSystemObjects>的不同对象类型、 调用集合<xref:System.Printing.PrintSystemObject.Commit%2A>对从而其中每个方法。</span><span class="sxs-lookup"><span data-stu-id="1464d-104">For example, you could enumerate through a <xref:System.Printing.PrintSystemObjects> collection of different object types, calling the <xref:System.Printing.PrintSystemObject.Commit%2A> method on each of them in turn.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1464d-105">类中<xref:System.Printing>命名空间不支持的 Windows 服务或 ASP.NET 应用程序或服务中的使用。</span><span class="sxs-lookup"><span data-stu-id="1464d-105">Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service.</span></span> <span data-ttu-id="1464d-106">尝试使用这些应用程序类型之一中的这些类可能会产生意外的问题，如降低服务性能和运行时异常。</span><span class="sxs-lookup"><span data-stu-id="1464d-106">Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.</span></span>  
  
 <span data-ttu-id="1464d-107">如果你想要从 Windows 窗体应用程序打印，请参阅<xref:System.Drawing.Printing>命名空间。</span><span class="sxs-lookup"><span data-stu-id="1464d-107">If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="1464d-108">如果派生的类从<see cref="T:System.Printing.PrintSystemObject" />，你可能想要派生的从该类的对象的集合<see cref="T:System.Printing.PrintSystemObjects" />。</span>
        <span class="sxs-lookup">
          <span data-stu-id="1464d-108">If you derive a class from <see cref="T:System.Printing.PrintSystemObject" />, you may want to derive a collection of objects of that class from <see cref="T:System.Printing.PrintSystemObjects" />.</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1464d-109">初始化 <see cref="T:System.Printing.PrintSystemObject" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-109">Initializes a new instance of the <see cref="T:System.Printing.PrintSystemObject" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PrintSystemObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PrintSystemObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1464d-110">初始化 <see cref="T:System.Printing.PrintSystemObject" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-110">Initializes a new instance of the <see cref="T:System.Printing.PrintSystemObject" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PrintSystemObject (System.Printing.PrintSystemObjectLoadMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Printing.PrintSystemObjectLoadMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemObject.#ctor(System.Printing.PrintSystemObjectLoadMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (mode As PrintSystemObjectLoadMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PrintSystemObject(System::Printing::PrintSystemObjectLoadMode mode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Printing.PrintSystemObjectLoadMode" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="1464d-111">一个用于指定在装载对象时是否应该初始化该对象属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-111">A value that specifies whether the properties of the object should be initialized when the object is loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1464d-112">使用指定的 <see cref="T:System.Printing.PrintSystemObject" /> 初始化 <see cref="T:System.Printing.PrintSystemObjectLoadMode" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-112">Initializes a new instance of the <see cref="T:System.Printing.PrintSystemObject" /> class by using the specified <see cref="T:System.Printing.PrintSystemObjectLoadMode" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAttributeNames">
      <MemberSignature Language="C#" Value="protected static string[] BaseAttributeNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string[] BaseAttributeNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemObject.BaseAttributeNames" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function BaseAttributeNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;System::String ^&gt; ^ BaseAttributeNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1464d-113">获取派生类特性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-113">Gets the names of the attributes of the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1464d-114">
            <see cref="T:System.String" /> 值的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-114">An array of <see cref="T:System.String" /> values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public abstract void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemObject.Commit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Commit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1464d-115">在派生类中重写时，会将程序对对象属性所做的所有更改写入该对象表示的实际软件或硬件组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-115">When overridden in a derived class, writes any changes that your program has made to the object's properties to the actual software or hardware component that the object represents.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1464d-116">例如，由重写时<xref:System.Printing.PrintServer>类，<xref:System.Printing.PrintServer.Commit%2A>写入对所做的更改，将<xref:System.Printing.PrintServer>到该对象表示的实际计算机对象的属性。</span><span class="sxs-lookup"><span data-stu-id="1464d-116">For example, when overridden by the <xref:System.Printing.PrintServer> class, <xref:System.Printing.PrintServer.Commit%2A> will write changes that are made to the <xref:System.Printing.PrintServer> object's properties to the actual computer that the object represents.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1464d-117">下面的示例演示如何使用此方法 (在调用<xref:System.Printing.PrintQueue>对象，这会重写方法中的，从<xref:System.Printing.PrintSystemObject>) 作为合并打印票证过程的一部分。</span><span class="sxs-lookup"><span data-stu-id="1464d-117">The following example shows how to use this method (called on a <xref:System.Printing.PrintQueue> object, which overrides the method from <xref:System.Printing.PrintSystemObject>) as part of the process of merging print tickets.</span></span>  
  
 [!code-csharp[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintTicketManagment/CSharp/printticket.cs#usingmergeandvalidate)]
 [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintTicketManagment/visualbasic/printticket.vb#usingmergeandvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintServer.Refresh" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1464d-118">释放由 <see cref="T:System.Printing.PrintSystemObject" /> 占用的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-118">Releases the resources used by the <see cref="T:System.Printing.PrintSystemObject" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemObject.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1464d-119">释放由 <see cref="T:System.Printing.PrintSystemObject" /> 使用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-119">Releases all resources used by the <see cref="T:System.Printing.PrintSystemObject" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1464d-120">在完成使用 <xref:System.Printing.PrintSystemObject.Dispose> 后，应调用 <xref:System.Printing.PrintSystemObject>。</span><span class="sxs-lookup"><span data-stu-id="1464d-120">Call <xref:System.Printing.PrintSystemObject.Dispose> when you are finished using the <xref:System.Printing.PrintSystemObject>.</span></span> <span data-ttu-id="1464d-121"><xref:System.Printing.PrintSystemObject.Dispose> 方法使 <xref:System.Printing.PrintSystemObject> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="1464d-121">The <xref:System.Printing.PrintSystemObject.Dispose> method leaves the <xref:System.Printing.PrintSystemObject> in an unusable state.</span></span> <span data-ttu-id="1464d-122">在调用<xref:System.Printing.PrintSystemObject.Dispose>，必须释放对所有引用<xref:System.Printing.PrintSystemObject>以便垃圾回收器才能回收的内存，<xref:System.Printing.PrintSystemObject>占用。</span><span class="sxs-lookup"><span data-stu-id="1464d-122">After calling <xref:System.Printing.PrintSystemObject.Dispose>, you must release all references to the <xref:System.Printing.PrintSystemObject> so the garbage collector can reclaim the memory that the <xref:System.Printing.PrintSystemObject> was occupying.</span></span> <span data-ttu-id="1464d-123">有关详细信息，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="1464d-123">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1464d-124">每次释放对 <xref:System.Printing.PrintSystemObject.Dispose> 的最后一个引用前，均应调用 <xref:System.Printing.PrintSystemObject>。</span><span class="sxs-lookup"><span data-stu-id="1464d-124">Always call <xref:System.Printing.PrintSystemObject.Dispose> before you release your last reference to the <xref:System.Printing.PrintSystemObject>.</span></span> <span data-ttu-id="1464d-125">否则，在垃圾回收器调用 <xref:System.Printing.PrintSystemObject> 对象的 <xref:System.Object.Finalize%2A> 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="1464d-125">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Printing.PrintSystemObject> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemObject.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0">To be added.</param>
        <summary>
          <span data-ttu-id="1464d-126">释放由 <see cref="T:System.Printing.PrintSystemObject" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-126">Releases the unmanaged resources used by the <see cref="T:System.Printing.PrintSystemObject" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1464d-127">此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1464d-127">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="1464d-128">`Dispose()` 调用受保护`Dispose(Boolean)`方法未命名的布尔参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="1464d-128">`Dispose()` invokes the protected `Dispose(Boolean)` method with the unnamed Boolean parameter set to `true`.</span></span> <span data-ttu-id="1464d-129"><xref:System.Object.Finalize%2A> 调用`Dispose`参数设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="1464d-129"><xref:System.Object.Finalize%2A> invokes `Dispose` with the parameter set to `false`.</span></span>  
  
 <span data-ttu-id="1464d-130">布尔参数时`true`，此方法释放由任何托管对象持有的全部资源此<xref:System.Printing.PrintSystemObject>引用。</span><span class="sxs-lookup"><span data-stu-id="1464d-130">When the Boolean parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Printing.PrintSystemObject> references.</span></span> <span data-ttu-id="1464d-131">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="1464d-131">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1464d-132">
              <see langword="Dispose" /> 可以由其他对象多次调用。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1464d-132">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="1464d-133">重写 <see langword="Dispose(Boolean)" /> 时，请注意不要引用在以前调用 <see langword="Dispose" /> 时已释放的对象。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1464d-133">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="1464d-134">有关如何实现详细信息<see langword="Dispose(Boolean)" />，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1464d-134">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="1464d-135">有关详细信息<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="1464d-135">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~PrintSystemObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemObject.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!PrintSystemObject ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1464d-136">释放正在由 <see cref="T:System.Printing.PrintSystemObject" /> 使用的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-136">Releases the resources that are being used by the <see cref="T:System.Printing.PrintSystemObject" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1464d-137"><xref:System.Printing.PrintSystemObject.Finalize%2A>方法充当一种安全措施来清理资源的事件中<xref:System.Printing.PrintSystemObject.Dispose%2A>不调用方法。</span><span class="sxs-lookup"><span data-stu-id="1464d-137">The <xref:System.Printing.PrintSystemObject.Finalize%2A> method acts as a safeguard to clean up resources in the event that the <xref:System.Printing.PrintSystemObject.Dispose%2A> method is not called.</span></span> <span data-ttu-id="1464d-138">应实现<xref:System.Printing.PrintSystemObject.Finalize%2A>方法以清理仅非托管资源。</span><span class="sxs-lookup"><span data-stu-id="1464d-138">You should implement the <xref:System.Printing.PrintSystemObject.Finalize%2A> method to clean up only unmanaged resources.</span></span> <span data-ttu-id="1464d-139">您不应实现托管对象，此的方法，因为垃圾回收器会自动清理托管资源。</span><span class="sxs-lookup"><span data-stu-id="1464d-139">You should not implement this method for managed objects, because the garbage collector cleans up managed resources automatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemObject.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1464d-140">初始化 <see cref="T:System.Printing.PrintSystemObject" /> 的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-140">Initializes the properties of the <see cref="T:System.Printing.PrintSystemObject" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InternalDispose">
      <MemberSignature Language="C#" Value="protected virtual void InternalDispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InternalDispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemObject.InternalDispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InternalDispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InternalDispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1464d-141">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-141">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1464d-142">在派生类中重写时，请释放正在由 <see cref="T:System.Printing.PrintSystemObject" /> 使用的非托管资源，也可以选择性地释放正在使用的托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-142">When overridden in a derived class, releases the unmanaged resources that are being used by the <see cref="T:System.Printing.PrintSystemObject" />, and optionally releases the managed resources that are being used.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemObject.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1464d-143">获取或设置一个值，该值指示该对象是否已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-143">Gets or sets a value that indicates whether the object has been disposed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1464d-144">如果该对象已被释放，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-144">
              <see langword="true" /> if the object has been disposed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1464d-145">获取对象的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-145">Gets the name of the object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1464d-146">表示对象名称的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-146">A <see cref="T:System.String" /> that represents the name of the object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Printing.PrintSystemObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintSystemObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As PrintSystemObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Printing::PrintSystemObject ^ Parent { System::Printing::PrintSystemObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintSystemObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1464d-147">获取对象的父级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-147">Gets the parent of the object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1464d-148">另一个 <see cref="T:System.Printing.PrintSystemObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-148">Another <see cref="T:System.Printing.PrintSystemObject" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1464d-149">例如，打印队列的父级是承载队列的打印服务器。</span><span class="sxs-lookup"><span data-stu-id="1464d-149">For example, the parent of a print queue is the print server that hosts the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertiesCollection">
      <MemberSignature Language="C#" Value="public System.Printing.IndexedProperties.PrintPropertyDictionary PropertiesCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.IndexedProperties.PrintPropertyDictionary PropertiesCollection" />
      <MemberSignature Language="DocId" Value="P:System.Printing.PrintSystemObject.PropertiesCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertiesCollection As PrintPropertyDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::IndexedProperties::PrintPropertyDictionary ^ PropertiesCollection { System::Printing::IndexedProperties::PrintPropertyDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.IndexedProperties.PrintPropertyDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1464d-150">获取特性和值对的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-150">Gets a collection of attribute and value pairs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1464d-151">包含特性和值对的 <see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-151">A <see cref="T:System.Printing.IndexedProperties.PrintPropertyDictionary" /> that contains attribute and value pairs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1464d-152">下面的示例演示如何使用此属性在运行时发现类型的打印系统对象，这些属性，而无需使用反射。</span><span class="sxs-lookup"><span data-stu-id="1464d-152">The following example shows how to use this property to discover at run time the properties, and the types of those properties, of a print system object, without using reflection.</span></span>  
  
 [!code-csharp[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/csharp/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/CSharp/Program.cs#showpropertytypeswithoutreflection)]
 [!code-vb[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/visualbasic/program.vb#showpropertytypeswithoutreflection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public abstract void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.PrintSystemObject.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1464d-153">在派生类中重写时，会将更新派生类对象的属性，以使其值与该对象表示的实际软件或硬件组件的值相匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1464d-153">When overridden in a derived class, updates the properties of an object of the derived class so that its values match the values of the actual software or hardware component that the object represents.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1464d-154">对派生类的对象的属性所做的任何更改可能会丢失时<xref:System.Printing.PrintSystemObject.Refresh%2A>的派生类执行。</span><span class="sxs-lookup"><span data-stu-id="1464d-154">Any changes that you have made to the properties of an object of the derived class may be lost when the <xref:System.Printing.PrintSystemObject.Refresh%2A> of the derived class executes.</span></span> <span data-ttu-id="1464d-155">如果所做的更改尚未尚未写入到实际的软件或硬件组件，通过使用派生的类的实现，则会发生丢失<xref:System.Printing.PrintSystemObject.Commit%2A>。</span><span class="sxs-lookup"><span data-stu-id="1464d-155">The loss will occur if the changes have not yet been written to the actual software or hardware component, by using the derived class' implementation of <xref:System.Printing.PrintSystemObject.Commit%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Printing.PrintSystemObject.Commit" />
      </Docs>
    </Member>
  </Members>
</Type>