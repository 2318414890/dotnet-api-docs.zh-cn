<Type Name="LocalPrintServer" FullName="System.Printing.LocalPrintServer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8aea9aa45981577ef18b4bb91709289b870d3ce7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30469701" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LocalPrintServer : System.Printing.PrintServer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LocalPrintServer extends System.Printing.PrintServer" />
  <TypeSignature Language="DocId" Value="T:System.Printing.LocalPrintServer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalPrintServer&#xA;Inherits PrintServer" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalPrintServer sealed : System::Printing::PrintServer" />
  <AssemblyInfo>
    <AssemblyName>System.Printing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Printing.PrintServer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示本地打印服务器（应用程序正在其上运行的计算机）和启用其打印队列的管理。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当你的应用程序将值写入的属性<xref:System.Printing.LocalPrintServer>对象时，更改具有不起作用之前的值传递给由计算机,<xref:System.Printing.LocalPrintServer>对象。 若要确保值更改生效，请使用<xref:System.Printing.LocalPrintServer.Commit%2A>方法。  
  
 此外，其他应用程序也可能更改的计算机的打印服务属性。 若要确保<xref:System.Printing.LocalPrintServer>应用程序使用的对象具有的最新的实际值，请使用<xref:System.Printing.LocalPrintServer.Refresh%2A>方法。  
  
> [!CAUTION]
>  类中<xref:System.Printing>命名空间不支持的 Windows 服务或 ASP.NET 应用程序或服务中的使用。 尝试使用这些应用程序类型之一中的这些类可能会产生意外的问题，如降低服务性能和运行时异常。  
  
 如果你想要从 Windows 窗体应用程序打印，请参阅<xref:System.Drawing.Printing>命名空间。  
  
   
  
## Examples  
 下面的示例演示如何创建 <xref:System.Printing.LocalPrintServer> 类的实例。  
  
 [!code-csharp[XpsPrint#PrintQueueSnip](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsPrint/CSharp/XpsPrintHelper.cs#printqueuesnip)]
 [!code-vb[XpsPrint#PrintQueueSnip](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsPrint/visualbasic/xpsprinthelper.vb#printqueuesnip)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Printing.PrintServer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Printing.LocalPrintServer" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalPrintServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.LocalPrintServer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalPrintServer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Printing.LocalPrintServer" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何测试打印机的功能并配置打印作业来利用这些代码中使用此构造函数。  
  
 [!code-cpp[XpsCreate#PrinterCapabilities](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#printercapabilities)]
 [!code-csharp[XpsCreate#PrinterCapabilities](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#printercapabilities)]
 [!code-vb[XpsCreate#PrinterCapabilities](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#printercapabilities)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalPrintServer (System.Printing.LocalPrintServerIndexedProperty[] propertiesFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Printing.LocalPrintServerIndexedProperty[] propertiesFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.LocalPrintServer.#ctor(System.Printing.LocalPrintServerIndexedProperty[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertiesFilter As LocalPrintServerIndexedProperty())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalPrintServer(cli::array &lt;System::Printing::LocalPrintServerIndexedProperty&gt; ^ propertiesFilter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertiesFilter" Type="System.Printing.LocalPrintServerIndexedProperty[]" />
      </Parameters>
      <Docs>
        <param name="propertiesFilter">构造函数初始化的属性数组。</param>
        <summary>初始化具有指定 <see cref="T:System.Printing.LocalPrintServer" /> 数组的 <see cref="T:System.Printing.LocalPrintServerIndexedProperty" /> 类的一个新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalPrintServer (System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.LocalPrintServer.#ctor(System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (desiredAccess As PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalPrintServer(System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="desiredAccess">一个值，指定应用程序需要对打印服务器所具有的访问类型。</param>
        <summary>初始化具有指定 <see cref="T:System.Printing.LocalPrintServer" /> 的 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例演示如何将其与现有打印机仅在位置、 端口和共享的状态中的属性中安装第二个打印机不同的代码中使用此构造函数。  
  
 [!code-csharp[ClonePrinter#ClonePrinter](~/samples/snippets/csharp/VS_Snippets_Wpf/ClonePrinter/CSharp/Program.cs#cloneprinter)]
 [!code-vb[ClonePrinter#ClonePrinter](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClonePrinter/visualbasic/program.vb#cloneprinter)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintServerException">
          <paramref name="desiredAccess" /> 是只能用于 <see cref="T:System.Printing.PrintQueue" /> 对象，而不能用于 <see cref="T:System.Printing.LocalPrintServer" /> 对象的值。 例如 <see cref="F:System.Printing.PrintSystemDesiredAccess.UsePrinter" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalPrintServer (string[] propertiesFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] propertiesFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.LocalPrintServer.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertiesFilter As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalPrintServer(cli::array &lt;System::String ^&gt; ^ propertiesFilter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertiesFilter" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="propertiesFilter">构造函数初始化的属性名称数组。</param>
        <summary>初始化具有指定属性的 <see cref="T:System.Printing.LocalPrintServer" /> 类的一个新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalPrintServer (System.Printing.LocalPrintServerIndexedProperty[] propertiesFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Printing.LocalPrintServerIndexedProperty[] propertiesFilter, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.LocalPrintServer.#ctor(System.Printing.LocalPrintServerIndexedProperty[],System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertiesFilter As LocalPrintServerIndexedProperty(), desiredAccess As PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalPrintServer(cli::array &lt;System::Printing::LocalPrintServerIndexedProperty&gt; ^ propertiesFilter, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertiesFilter" Type="System.Printing.LocalPrintServerIndexedProperty[]" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="propertiesFilter">构造函数初始化的属性数组。</param>
        <param name="desiredAccess">一个值，指定程序需要对打印服务器所具有的访问类型。</param>
        <summary>初始化具有指定 <see cref="T:System.Printing.LocalPrintServer" /> 数组和指定 <see cref="T:System.Printing.LocalPrintServerIndexedProperty" /> 的 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 类的一个新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintServerException">
          <paramref name="desiredAccess" /> 是只能用于 <see cref="T:System.Printing.PrintQueue" /> 对象，而不能用于 <see cref="T:System.Printing.LocalPrintServer" /> 对象的值。 例如 <see cref="F:System.Printing.PrintSystemDesiredAccess.UsePrinter" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalPrintServer (string[] propertiesFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] propertiesFilter, valuetype System.Printing.PrintSystemDesiredAccess desiredAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.LocalPrintServer.#ctor(System.String[],System.Printing.PrintSystemDesiredAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertiesFilter As String(), desiredAccess As PrintSystemDesiredAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalPrintServer(cli::array &lt;System::String ^&gt; ^ propertiesFilter, System::Printing::PrintSystemDesiredAccess desiredAccess);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertiesFilter" Type="System.String[]" />
        <Parameter Name="desiredAccess" Type="System.Printing.PrintSystemDesiredAccess" />
      </Parameters>
      <Docs>
        <param name="propertiesFilter">构造函数初始化的属性名称数组。</param>
        <param name="desiredAccess">一个值，指定应用程序需要对打印服务器所具有的访问类型。</param>
        <summary>初始化具有指定属性和 <see cref="T:System.Printing.LocalPrintServer" /> 的 <see cref="T:System.Printing.PrintSystemDesiredAccess" /> 类的一个新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintServerException">
          <paramref name="desiredAccess" /> 是只能用于 <see cref="T:System.Printing.PrintQueue" /> 对象，而不能用于 <see cref="T:System.Printing.LocalPrintServer" /> 对象的值。 例如 <see cref="F:System.Printing.PrintSystemDesiredAccess.UsePrinter" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override sealed void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.LocalPrintServer.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>将应用程序对 <see cref="T:System.Printing.LocalPrintServer" /> 的属性所做的所有更改写入对象表示的实际打印服务器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法要求<xref:System.Printing.LocalPrintServer>对象创建与<xref:System.Printing.PrintSystemDesiredAccess.AdministrateServer>权限。  
  
   
  
## Examples  
 下面的示例演示如何将其与现有打印机仅在位置、 端口和共享的状态中的属性中安装第二个打印机不同的代码中使用此方法。  
  
 [!code-csharp[ClonePrinter#ClonePrinter](~/samples/snippets/csharp/VS_Snippets_Wpf/ClonePrinter/CSharp/Program.cs#cloneprinter)]
 [!code-vb[ClonePrinter#ClonePrinter](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClonePrinter/visualbasic/program.vb#cloneprinter)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintServerException">某些属性尚未提交。</exception>
        <exception cref="T:System.Printing.PrintCommitAttributesException">某些属性未能提交。  
  
 \- 或 -  
  
 没有足够的权限创建 <see cref="T:System.Printing.LocalPrintServer" /> 对象。</exception>
        <altmember cref="M:System.Printing.LocalPrintServer.Refresh" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectToPrintQueue">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>连接打印队列和本地打印服务器。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectToPrintQueue">
      <MemberSignature Language="C#" Value="public bool ConnectToPrintQueue (System.Printing.PrintQueue printer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ConnectToPrintQueue(class System.Printing.PrintQueue printer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.LocalPrintServer.ConnectToPrintQueue(System.Printing.PrintQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectToPrintQueue (printer As PrintQueue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ConnectToPrintQueue(System::Printing::PrintQueue ^ printer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printer" Type="System.Printing.PrintQueue" />
      </Parameters>
      <Docs>
        <param name="printer">要连接的打印队列。</param>
        <summary>连接本地打印服务器和指定的 <see cref="T:System.Printing.PrintQueue" />。</summary>
        <returns>
          如果已建立连接，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintServerException">未发现与 <paramref name="printer" /> 的 <see cref="P:System.Printing.PrintQueue.FullName" /> 属性匹配的打印队列。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectToPrintQueue">
      <MemberSignature Language="C#" Value="public bool ConnectToPrintQueue (string printQueuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ConnectToPrintQueue(string printQueuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.LocalPrintServer.ConnectToPrintQueue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectToPrintQueue (printQueuePath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ConnectToPrintQueue(System::String ^ printQueuePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printQueuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="printQueuePath">正在连接的打印队列的完整路径。</param>
        <summary>连接使用 <see cref="T:System.String" /> 指定的打印队列。</summary>
        <returns>
          如果已建立连接，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintServerException">未发现具有指定路径的打印队列。</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultPrintQueue">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueue DefaultPrintQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintQueue DefaultPrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Printing.LocalPrintServer.DefaultPrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPrintQueue As PrintQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Printing::PrintQueue ^ DefaultPrintQueue { System::Printing::PrintQueue ^ get(); void set(System::Printing::PrintQueue ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置默认打印队列。</summary>
        <value>被指定为本地计算机默认队列的 <see cref="T:System.Printing.PrintQueue" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你的应用程序将只具有<xref:System.Printing.PrintSystemDesiredAccess.UsePrinter>默认的队列，即使你具有访问<xref:System.Printing.PrintSystemDesiredAccess.AdministrateServer>到打印服务器的权限。 若要以更高版本的访问权限打开队列，使用之一<xref:System.Printing.PrintQueue.%23ctor%2A>构造函数，可用于指定所需的访问级别。  
  
   
  
## Examples  
 下面的示例演示如何将其与现有打印机仅在位置、 端口和共享的状态中的属性中安装第二个打印机不同的代码中使用此属性。  
  
 [!code-csharp[ClonePrinter#ClonePrinter](~/samples/snippets/csharp/VS_Snippets_Wpf/ClonePrinter/CSharp/Program.cs#cloneprinter)]
 [!code-vb[ClonePrinter#ClonePrinter](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClonePrinter/visualbasic/program.vb#cloneprinter)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DisconnectFromPrintQueue">
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>断开打印队列与本地打印服务器的连接。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DisconnectFromPrintQueue">
      <MemberSignature Language="C#" Value="public bool DisconnectFromPrintQueue (System.Printing.PrintQueue printer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DisconnectFromPrintQueue(class System.Printing.PrintQueue printer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.LocalPrintServer.DisconnectFromPrintQueue(System.Printing.PrintQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisconnectFromPrintQueue (printer As PrintQueue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DisconnectFromPrintQueue(System::Printing::PrintQueue ^ printer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printer" Type="System.Printing.PrintQueue" />
      </Parameters>
      <Docs>
        <param name="printer">正在断开连接的打印队列。</param>
        <summary>断开本地打印服务器与指定 <see cref="T:System.Printing.PrintQueue" /> 的连接。</summary>
        <returns>
          如果成功断开连接，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintServerException">未发现与 <paramref name="printer" /> 的 <see cref="P:System.Printing.PrintQueue.FullName" /> 属性匹配的打印队列。</exception>
      </Docs>
    </Member>
    <Member MemberName="DisconnectFromPrintQueue">
      <MemberSignature Language="C#" Value="public bool DisconnectFromPrintQueue (string printQueuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DisconnectFromPrintQueue(string printQueuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.LocalPrintServer.DisconnectFromPrintQueue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisconnectFromPrintQueue (printQueuePath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DisconnectFromPrintQueue(System::String ^ printQueuePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printQueuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="printQueuePath">已断开连接的打印队列的完整路径。</param>
        <summary>断开与 <see cref="T:System.String" /> 中指定打印队列的连接。</summary>
        <returns>
          如果成功断开连接，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Printing.PrintServerException">未发现具有指定路径的打印队列。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultPrintQueue">
      <MemberSignature Language="C#" Value="public static System.Printing.PrintQueue GetDefaultPrintQueue ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Printing.PrintQueue GetDefaultPrintQueue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.LocalPrintServer.GetDefaultPrintQueue" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultPrintQueue () As PrintQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Printing::PrintQueue ^ GetDefaultPrintQueue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueue</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回对 <see cref="T:System.Printing.LocalPrintServer" /> 的默认打印队列的引用。</summary>
        <returns>默认的 <see cref="T:System.Printing.PrintQueue" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你的应用程序将只具有<xref:System.Printing.PrintSystemDesiredAccess.UsePrinter>默认的队列，即使你具有访问<xref:System.Printing.PrintSystemDesiredAccess.AdministrateServer>到打印服务器的权限。 若要以更高版本的访问权限打开队列，使用之一<xref:System.Printing.PrintQueue.%23ctor%2A>构造函数，可用于指定所需的访问级别。  
  
   
  
## Examples  
 下面的示例演示如何使用此方法在运行时发现类型的打印队列，这些属性，而无需使用反射。  
  
 [!code-csharp[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/csharp/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/CSharp/Program.cs#showpropertytypeswithoutreflection)]
 [!code-vb[GetPrintObjectPropertyTypesWithoutReflection#ShowPropertyTypesWithoutReflection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GetPrintObjectPropertyTypesWithoutReflection/visualbasic/program.vb#showpropertytypeswithoutreflection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override sealed void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Printing.LocalPrintServer.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Printing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>更新 <see cref="T:System.Printing.LocalPrintServer" /> 对象的属性，以便它们的值与对象表示的打印服务器的值匹配。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对所做的任何更改<xref:System.Printing.LocalPrintServer>不会写入到打印服务器使用的属性<xref:System.Printing.LocalPrintServer.Commit%2A>方法将会丢失时<xref:System.Printing.LocalPrintServer.Refresh%2A>运行。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Printing.PrintServerException">某些属性不会更新。</exception>
        <altmember cref="M:System.Printing.LocalPrintServer.Commit" />
      </Docs>
    </Member>
  </Members>
</Type>