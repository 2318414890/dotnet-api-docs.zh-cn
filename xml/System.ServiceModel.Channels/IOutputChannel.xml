<Type Name="IOutputChannel" FullName="System.ServiceModel.Channels.IOutputChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1dc3d4b649505a29efdfae0198b5dead131d630" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30506191" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IOutputChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOutputChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IOutputChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOutputChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOutputChannel : System::ServiceModel::Channels::IChannel" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="bcdb6-101">定义通道为发送消息而必须实现的接口。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bcdb6-101">Defines the interface that a channel must implement to send a message.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdb6-102"><xref:System.ServiceModel.Channels.IOutputChannel> 接口定义 <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IOutputChannel%23Send%2A> 操作的同步变量和异步变量。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-102">The <xref:System.ServiceModel.Channels.IOutputChannel> interface defines synchronous and asynchronous variants of the <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IOutputChannel%23Send%2A> operation.</span></span> <span data-ttu-id="bcdb6-103">该接口为通道上发送出去的消息的目标提供 <xref:System.ServiceModel.Channels.IOutputChannel.RemoteAddress%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-103">It provides a <xref:System.ServiceModel.Channels.IOutputChannel.RemoteAddress%2A> for the destination of the messages sent out on the channel.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bcdb6-104">开始一个发送消息的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-104">Begins an asynchronous operation to send a message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginSend(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="bcdb6-105">将在输出通道上发送的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-105">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="bcdb6-106">
            <see cref="T:System.AsyncCallback" /> 委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-106">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="bcdb6-107">一个由应用程序指定的对象，包含与异步发送操作相关联的状态信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-107">An object, specified by the application, that contains state information associated with the asynchronous send operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdb6-108">开始一个异步操作，向输出通道的目标传输一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-108">Begins an asynchronous operation to transmit a message to the destination of the output channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdb6-109">引用异步消息传输的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-109">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdb6-110">输出通道上发出的消息的目标是在通道创建时指定的。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-110">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="bcdb6-111"><xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> 方法不对到远程终结点的消息传递进行保证。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-111">The <xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="bcdb6-112">如果需要传递保证，则使用 <xref:System.ServiceModel.Channels.IOutputSessionChannel>。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-112">If delivery guarantees are required, use the <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="bcdb6-113">如果发送的消息大于使用的绑定所允许的最大消息大小，则将引发 <xref:System.ServiceModel.QuotaExceededException>。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-113">If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="bcdb6-114">最大消息大小由 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 属性设置。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-114">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="bcdb6-115">默认值为 65536 个字节。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-115">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdb6-116">下面的代码演示如何实现此方法：</span><span class="sxs-lookup"><span data-stu-id="bcdb6-116">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginSend(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="bcdb6-117">将在输出通道上发送的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-117">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="bcdb6-118">
            <see cref="T:System.TimeSpan" />，指定在超时前必须完成发送操作的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-118">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="bcdb6-119">
            <see cref="T:System.AsyncCallback" /> 委托，接收异步操作完成发送的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-119">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation send completion.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="bcdb6-120">一个由应用程序指定的对象，包含与异步发送操作相关联的状态信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-120">An object, specified by the application, that contains state information associated with the asynchronous send operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdb6-121">开始一个异步操作，在指定时间间隔内向输出通道的目标传输消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-121">Begins an asynchronous operation to transmit a message to the destination of the output channel within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bcdb6-122">引用异步发送操作的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-122">The <see cref="T:System.IAsyncResult" /> that references the asynchronous send operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdb6-123">输出通道上发出的消息的目标是在通道创建时指定的。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-123">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="bcdb6-124"><xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> 方法不对到远程终结点的消息传递进行保证。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-124">The <xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="bcdb6-125">如果需要传递保证，则使用 <xref:System.ServiceModel.Channels.IOutputSessionChannel>。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-125">If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="bcdb6-126">如果发送的消息大于使用的绑定所允许的最大消息大小，则将引发 <xref:System.ServiceModel.QuotaExceededException>。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-126">If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="bcdb6-127">最大消息大小由 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 属性设置。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-127">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="bcdb6-128">默认值为 65536 个字节。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-128">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdb6-129">下面的代码演示如何实现此方法：</span><span class="sxs-lookup"><span data-stu-id="bcdb6-129">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdb6-130">如果超出指定的 <see cref="T:System.TimeoutException" />，则操作应引发 <paramref name="timeout" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdb6-130">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public void EndSend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSend (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSend(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="bcdb6-131">通过调用 <see cref="T:System.IAsyncResult" /> 方法返回的 <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-131">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdb6-132">完成一个异步操作，向输出通道的目标传输消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-132">Completes an asynchronous operation to transmit a message to the destination of the output channel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdb6-133">如果发送的消息大于使用的绑定所允许的最大消息大小，则将引发 <xref:System.ServiceModel.QuotaExceededException>。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-133">If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="bcdb6-134">最大消息大小由 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 属性设置。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-134">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="bcdb6-135">默认值为 65536 个字节。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-135">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdb6-136">下面的代码演示如何实现此方法：</span><span class="sxs-lookup"><span data-stu-id="bcdb6-136">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ RemoteAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcdb6-137">获取在输出通道上发出的消息将要到达的服务的目标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-137">Gets the destination of the service to which messages are sent out on the output channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcdb6-138">输出通道发送的消息将要到达的服务的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-138">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the service to which the output channel sends messages.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdb6-139">如果未指定 <xref:System.ServiceModel.EndpointAddress>，<xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> 将用作最终目标和物理地址。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-139">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="bcdb6-140">如果已指定 <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A>，则此地址为消息将要发送至的实际物理地址，且消息必须通过此地址到达目标。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-140">If the <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdb6-141">下面的代码演示如何实现此属性：</span><span class="sxs-lookup"><span data-stu-id="bcdb6-141">The following code illustrates how to implement this property:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bcdb6-142">在当前输出通道上发送一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-142">Sends a message on the current output channel.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="bcdb6-143">将在输出通道上发送的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-143">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdb6-144">向输出通道的目标传输一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-144">Transmits a message to the destination of the output channel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdb6-145">输出通道上发出的消息的目标是在通道创建时指定的。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-145">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="bcdb6-146"><xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> 方法不对到远程终结点的消息传递进行保证。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-146">The <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="bcdb6-147">出于各种原因，<xref:System.ServiceModel.Channels.IOutputChannel> 的实现可能在不提示的情况下丢弃消息。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-147">An implementation of <xref:System.ServiceModel.Channels.IOutputChannel> can silently drop messages for a variety of reasons.</span></span> <span data-ttu-id="bcdb6-148">例如，没有更多的缓冲区空间。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-148">There may be no more buffer room, for example.</span></span> <span data-ttu-id="bcdb6-149">如果需要传递保证，则使用 <xref:System.ServiceModel.Channels.IOutputSessionChannel>。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-149">If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="bcdb6-150">将消息传递到输出通道中会导致消息被使用。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-150">Passing the message into the output channel causes the message to be consumed.</span></span> <span data-ttu-id="bcdb6-151">在调用 <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> 后，就再也不能检查消息或对消息调用 <xref:System.ServiceModel.Channels.Message.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-151">After you call <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdb6-152">下面的代码演示如何实现此方法：</span><span class="sxs-lookup"><span data-stu-id="bcdb6-152">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="bcdb6-153">将在输出通道上发送的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-153">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="bcdb6-154">
            <see cref="T:System.TimeSpan" />，指定在超时前必须完成发送操作的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-154">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bcdb6-155">在指定时间间隔内在当前输出通道上发送一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-155">Sends a message on the current output channel within a specified interval of time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdb6-156">输出通道上发出的消息的目标是在通道创建时指定的。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-156">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="bcdb6-157"><xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> 方法不对到远程终结点的消息传递进行保证。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-157">The <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="bcdb6-158">出于各种原因，<xref:System.ServiceModel.Channels.IOutputChannel> 的实现可能在不提示的情况下丢弃消息。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-158">An implementation of <xref:System.ServiceModel.Channels.IOutputChannel> can silently drop messages for a variety of reasons.</span></span> <span data-ttu-id="bcdb6-159">例如，没有更多的缓冲区空间。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-159">There may be no more buffer room, for example.</span></span> <span data-ttu-id="bcdb6-160">如果需要传递保证，则使用 <xref:System.ServiceModel.Channels.IOutputSessionChannel>。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-160">If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="bcdb6-161">将消息传递到输出通道中会导致消息被使用。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-161">Passing the message into the output channel causes the message to be consumed.</span></span> <span data-ttu-id="bcdb6-162">在调用 <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> 后，就再也不能检查消息或对消息调用 <xref:System.ServiceModel.Channels.Message.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-162">After you call <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdb6-163">下面的代码演示如何实现此方法：</span><span class="sxs-lookup"><span data-stu-id="bcdb6-163">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="bcdb6-164">如果超出指定的 <see cref="T:System.TimeoutException" />，则操作应引发 <paramref name="timeout" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="bcdb6-164">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IOutputChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bcdb6-165">获取 URI，该 URI 包含输出通道发送消息的目标传输地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-165">Gets the URI that contains the transport address to which messages are sent on the output channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bcdb6-166">
            <see cref="T:System.Uri" />，包含输出通道发送消息的目标传输地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bcdb6-166">The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdb6-167">如果未指定 <xref:System.ServiceModel.EndpointAddress>，<xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> 将用作最终目标和物理地址。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-167">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="bcdb6-168">如果已指定 <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A>，则此地址为消息将要发送至的实际物理地址，且消息必须通过此地址到达目标。</span><span class="sxs-lookup"><span data-stu-id="bcdb6-168">If the <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bcdb6-169">下面的代码演示如何实现此属性：</span><span class="sxs-lookup"><span data-stu-id="bcdb6-169">The following code illustrates how to implement this property:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>