<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OneWayBindingElement.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72af12cdc6a6c4d69bba0e38e9a8b1c40fa43c2fab.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af12cdc6a6c4d69bba0e38e9a8b1c40fa43c2fab</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.OneWayBindingElement">
          <source>Enables packet routing and the use of one-way methods.</source>
          <target state="translated">启用数据包路由和单向方法的使用。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.OneWayBindingElement">
          <source>To enable packet routing a <bpt id="p1">*</bpt>one-way conversion<ept id="p1">*</ept> layer is required, which this class provides.</source>
          <target state="translated">若要启用数据包路由<bpt id="p1">*</bpt>单向转换<ept id="p1">*</ept>层是必需的此类提供。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.OneWayBindingElement">
          <source>This class is a binding in the stack of bindings that performs a message-level shape change called <ph id="ph1">`OneWayBindingElement`</ph>.</source>
          <target state="translated">此类是绑定堆栈中的一个绑定，该绑定执行称为 <ph id="ph1">`OneWayBindingElement`</ph> 的消息级形状更改。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.OneWayBindingElement">
          <source>This shape change can take a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> or a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> and expose it as a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>, or conversely it can take a <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> or a <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> and expose it as a <ph id="ph6">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>.</source>
          <target state="translated">此形状更改可采用 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> 或 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph>，将它作为 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> 公开，或者与此相反，采用 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> 或 <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph>，将它作为 <ph id="ph6">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> 公开。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.OneWayBindingElement">
          <source>A user can create a custom binding that layers this binding over a session-aware or request-reply transport to make it packet routable.</source>
          <target state="translated">用户可以创建一个自定义绑定，将此绑定置于具有会话功能或请求/答复传输的上层，使之可进行数据包路由。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.OneWayBindingElement">
          <source>This class is also useful when you want to expose one-way methods in a more native fashion.</source>
          <target state="translated">如果希望以更自然的方式公开单向方法，此类也十分有用。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.OneWayBindingElement">
          <source>More transformations can be applied over this layer, such as Composite Duplex and Reliable Messaging.</source>
          <target state="translated">在这一层上可应用更多的转换，如复合双工和可靠消息。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.OneWayBindingElement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.OneWayBindingElement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel that the factory builds.</source>
          <target state="translated">工厂生成的通道的类型。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated">为绑定元素提供上下文的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Initializes a channel factory for producing one-way channels from the binding context.</source>
          <target state="translated">初始化通道工厂，用于生成绑定上下文中的单向通道。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> initialized from the <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> 类型的 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>（从 <ph id="ph3">&lt;paramref name="context" /&gt;</ph> 中初始化）。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>This method creates a channel factory, which is used to create a channel that processes outgoing messages for this binding.</source>
          <target state="translated">此方法可创建通道工厂，该通道工厂用于创建将为此绑定处理传出消息的通道。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> is not <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IOutputChannel" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 类型不是 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IOutputChannel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The inner binding element does not support <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IRequestChannel" /&gt;</ph>.</source>
          <target state="translated">内部绑定元素不支持 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IRequestChannel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel that the listener is built to accept.</source>
          <target state="translated">生成侦听器以接受的通道类型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated">为绑定元素提供上下文的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Initializes a channel listener for accepting one-way channels.</source>
          <target state="translated">初始化通道侦听器，用于接受单向通道。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> initialized from the <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> 类型的 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>（从 <ph id="ph3">&lt;paramref name="context" /&gt;</ph> 中初始化）。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>This method creates a channel listener, which is used to create a channel that processes incoming messages for this binding.</source>
          <target state="translated">此方法可创建通道侦听器，该侦听器用于创建将为此绑定处理传入消息的通道。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> is not <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IInputChannel" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 类型不是 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IInputChannel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The inner binding element does not support <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IRequestChannel" /&gt;</ph>.</source>
          <target state="translated">内部绑定元素不支持 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IRequestChannel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel factory to build.</source>
          <target state="translated">要生成的通道工厂的类型。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated">为绑定元素提供上下文的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Gets a value that indicates whether a channel factory of the specified type can be built.</source>
          <target state="translated">获取一个值，该值指示是否可以生成指定类型的通道工厂。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a channel factory of the specified type can be built; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果可以生成指定类型的通道工厂，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>You should call this method before trying to create a channel factory.</source>
          <target state="translated">在尝试创建通道工厂之前应调用此方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>This method returns <ph id="ph1">`true`</ph> when <ph id="ph2">`TChannel`</ph> is an <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>, and the binding below the present one in the binding stack is an <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> or <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> 是 <ph id="ph2">`TChannel`</ph>，并且绑定堆栈中当前绑定的下一个绑定是 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> 或 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> 时，此方法将返回 <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel listener to build.</source>
          <target state="translated">要生成的通道侦听器的类型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated">为绑定元素提供上下文的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Gets a value that indicates whether a channel listener of the specified type can be built.</source>
          <target state="translated">获取一个值，该值指示是否可以生成指定类型的通道侦听器。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a channel listener of the specified type can be built; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果可以生成指定类型的通道侦听器，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>You should call this method before trying to create a channel listener.</source>
          <target state="translated">在尝试创建通道侦听器之前应调用此方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>This method returns <ph id="ph1">`true`</ph> when <ph id="ph2">`TChannel`</ph> is an <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>, and the binding below the present one in the binding stack is an <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> or <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> 是 <ph id="ph2">`TChannel`</ph>，并且绑定堆栈中当前绑定的下一个绑定是 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> 或 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> 时，此方法将返回 <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings">
          <source>Gets the channel pool settings.</source>
          <target state="translated">获取通道池设置。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.OneWayBindingElement.ChannelPoolSettings">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.ChannelPoolSettings" /&gt;</ph> object that contains properties of the channel pool associated with this binding element.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.ChannelPoolSettings" /&gt;</ph> 对象，包含与此绑定元素关联的通道池的属性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.Clone">
          <source>Clones an instance of this class.</source>
          <target state="translated">克隆此类的实例。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.Clone">
          <source>A cloned copy of this instance of this class.</source>
          <target state="translated">此类的实例的一个克隆副本。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Type of the property.</source>
          <target state="translated">属性的类型。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated">为绑定元素提供上下文的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Gets properties from the binding stack, if present.</source>
          <target state="translated">从绑定堆栈中获取属性（如果存在）。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>A <ph id="ph1">&lt;paramref name="T" /&gt;</ph> object from the binding stack, if present.</source>
          <target state="translated">绑定堆栈中的一个 <ph id="ph1">&lt;paramref name="T" /&gt;</ph> 对象（如果存在）。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>This method receives a binding context as an input parameter, which represents the stack of binding elements.</source>
          <target state="translated">此方法接收绑定上下文作为输入参数，该参数表示绑定元素的堆栈。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Each binding element in the stack can handle the inquiry itself or delegate the inquiry, or a combination of the two.</source>
          <target state="translated">堆栈中的每个绑定元素都可以独立处理查询或委托查询，或两种功能都具备。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Each binding element can modify the context if it delegates the inquiry.</source>
          <target state="translated">如果委托查询，每个绑定元素都可以修改上下文。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>However, a transport binding element handles the inquiry itself.</source>
          <target state="translated">但是，传输绑定元素独立处理查询。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>This method is implemented by binding elements as well as by the runtime objects, such as <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IChannel&gt;</ph>.</source>
          <target state="translated">此方法由绑定元素以及运行时对象（例如 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph>、<ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IChannel&gt;</ph>）实现。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels">
          <source>Gets or sets the maximum number of channels that can be accepted.</source>
          <target state="translated">获取或设置可以接受的最大通道数。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels">
          <source>The maximum number of channels that can be accepted.</source>
          <target state="translated">可以接受的最大通道数。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.OneWayBindingElement.MaxAcceptedChannels">
          <source>The default value is 10.</source>
          <target state="translated">默认值为 10。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable">
          <source>Gets or sets a value that indicates whether packet routing is enabled.</source>
          <target state="translated">获取或设置一个值，该值指示是否启用数据包路由。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if packet routing is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果启用数据包路由，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable">
          <source>This class can optionally use a message-level protocol that transforms a <ph id="ph1">`DuplexSessionChannel`</ph><ph id="ph2">/</ph><ph id="ph3">`RequestChannel`</ph><ph id="ph4">/</ph><ph id="ph5">`ReplyChannel`</ph> to a one-way channel and allows the messages from the transformed channel to be routed.</source>
          <target state="translated">此类可以选择使用转换的消息级协议<ph id="ph1">`DuplexSessionChannel`</ph> <ph id="ph2">/</ph> <ph id="ph3">`RequestChannel`</ph> <ph id="ph4">/</ph> <ph id="ph5">`ReplyChannel`</ph>成单向通道，并允许对已转换通道的消息进行路由。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable">
          <source>Usage of this protocol is controlled by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable%2A&gt;</ph> 属性会控制此协议的使用。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable">
          <source>When this property is <ph id="ph1">`true`</ph>, upon <ph id="ph2">`DuplexSessionChannel`</ph> initiation (for example, Buffered TCP and Named Pipes), this class adds a message header (MustUnderstand = <ph id="ph3">`false`</ph>, signed if security is enabled) that semantically means "you can packet-route this channel".</source>
          <target state="translated">当此属性是<ph id="ph1">`true`</ph>后,<ph id="ph2">`DuplexSessionChannel`</ph>启动 （例如缓冲 TCP 和命名管道），此类添加的消息标头 (MustUnderstand = <ph id="ph3">`false`</ph>，签名启用了安全设置)，在语义上意味着"可以数据包路由此通道"。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable">
          <source>On the acceptor side, when this property is <ph id="ph1">`true`</ph>, this class looks for this header in the first message received on the channel.</source>
          <target state="translated">对于接受程序端，此属性为 <ph id="ph1">`true`</ph> 时，此类将在通道上接受的第一个消息中查找该标头。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable">
          <source>If this header does not exist, WCF faults the channel.</source>
          <target state="translated">如果此标头不存在，WCF 会使通道出错。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable">
          <source>If the header exists, then WCF funnels the new channel into a shared input channel.</source>
          <target state="translated">如果标头存在，然后 WCF 都新通道到共享的输入通道。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable">
          <source>To transform a Request-Reply channel (for example, TCP Streaming or HTTP) when this property is <ph id="ph1">`true`</ph>, this header is added to every request to signal that the request can be packet routed.</source>
          <target state="translated">要转换的请求-答复通道 （例如，TCP 流式处理或 HTTP） 当此属性是<ph id="ph1">`true`</ph>，此标头添加到每个请求，以指示请求可以路由数据包。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.OneWayBindingElement.PacketRoutable">
          <source>WCF also verifies that <ph id="ph1">`SendRequest`</ph> returns <ph id="ph2">`null`</ph> and replies with <ph id="ph3">`null`</ph> on the server.</source>
          <target state="translated">WCF 还验证<ph id="ph1">`SendRequest`</ph>返回<ph id="ph2">`null`</ph>和使用回复<ph id="ph3">`null`</ph>服务器上。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings">
          <source>Returns whether the properties of the channel pool that are associated with this binding element should be serialized.</source>
          <target state="translated">返回与此绑定元素关联的通道池的属性是否应进行序列化。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.ShouldSerializeChannelPoolSettings">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the channel pool settings should be serialized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果应序列化通道池设置，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph> that you can use to modify the exporting process.</source>
          <target state="translated">可以用来修改导出过程的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph> that you can use to insert your custom policy assertion.</source>
          <target state="translated">可以用来插入您的自定义策略断言的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Exports a custom policy assertion that represents the one-way binding element.</source>
          <target state="translated">导出表示单向绑定元素的自定义策略断言。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by WCF to communicate to clients the existence of this custom binding element in the binding stack.</source>
          <target state="translated">此方法与绑定相关的语句写入特定协定公开的 WSDL 信息，WCF 用于向客户端通信的绑定堆栈中此自定义绑定元素存在。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>This method takes two parameters: the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> objects.</source>
          <target state="translated">此方法接受两个参数：<ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods to obtain collections of policy assertions that have already been exported at various scopes.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> 方法以获取从不同范围导出的策略断言的集合。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Then use this method to add your own policy assertions to the appropriate collection.</source>
          <target state="translated">然后，使用此方法将您自己的策略断言添加到适当的集合中。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;</ph> property exposes the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> for the endpoint that is being exported.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;</ph> 属性可公开正在导出的终结点的 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>This enables this method to correctly scope their exported policy assertions.</source>
          <target state="translated">这样，此方法就可正确限定它们的导出策略断言的范围。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>For example, security attributes in code can add behaviors to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> that indicate where security policy assertions should be added.</source>
          <target state="translated">例如，代码中的安全属性可以将行为添加到指示安全策略断言应该添加到的位置的 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing an <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> interface.</source>
          <target state="translated">一旦将自定义策略断言附加到 WSDL 信息，客户端就可以通过实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> 接口来检测和导入自定义绑定断言。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.OneWayBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>