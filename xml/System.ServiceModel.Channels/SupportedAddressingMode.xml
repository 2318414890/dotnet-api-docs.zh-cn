<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SupportedAddressingMode.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72a18a078577587298a9da09b4f796a07bdfc4b5d8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a18a078577587298a9da09b4f796a07bdfc4b5d8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</source>
          <target state="translated">指定服务是否支持仅向匿名地址或仅向非匿名地址发送响应，或二者都支持。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>This enumeration is used to specify the capability of a server, which, in turn, imposes a requirement on its clients.</source>
          <target state="translated">此枚举用于指定服务器的功能，而服务器会对其客户端有一定要求。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> has a variety of addressing controls for specifying where messages should be sent.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 有多种寻址控制，用于指定消息应发送到的位置。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>For example, there is the logical <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph> address for the message destination, the physical ("Via") address, used by the transport, at which a service listens, and the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A&gt;</ph> address of the endpoint that provides the address of the client endpoint.</source>
          <target state="translated">例如，消息目标的逻辑 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph> 地址、传输使用的物理（“Via”）地址（服务侦听地址），以及提供客户端终结点地址的终结点 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A&gt;</ph> 地址。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>In the most basic case, when two parties exchange messages between themselves only, it is not necessary to specify these addresses separately.</source>
          <target state="translated">大多数基本情况下，如果双方仅在相互之间交换消息，则不必单独指定这些地址。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>But because exchanges can involve other message destinations, you must be able to specify when addresses must be explicitly provided.</source>
          <target state="translated">但是交换过程可能涉及其他消息目标，因此您必须能够在需要明确提供地址时指定这些地址。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Even between just two parties this ability is sometimes required, as with dual HTTP where the server must create its own HTTP request.</source>
          <target state="translated">即使仅在双方之间，有时也需要此功能，正如在使用双向 HTTP 的情况中，服务器必须创建自己的 HTTP 请求。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>The following kinds of relationships are defined by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SupportedAddressingMode&gt;</ph> enumeration to capture these messaging patterns:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.SupportedAddressingMode&gt;</ph> 枚举定义了下列关系种类，用以捕获这些消息模式：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Anonymous addresses are the most basic form of addressing.</source>
          <target state="translated">匿名地址是寻址的最基本形式。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Anonymous addressing is used when there is a default path for a response.</source>
          <target state="translated">如果响应有默认路径，则会使用匿名寻址。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>TCP is a bi-directional communication transport and the response to a TCP message can be sent back to the other side of the socket that sent the original message.</source>
          <target state="translated">TCP 是双向通信传输协议，且 TCP 消息的响应可发送回发送原始消息的套接字的另一端。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Similarly, the request-reply model of HTTP sends responses through the HTTP reply channel.</source>
          <target state="translated">同样，HTTP 的请求-答复模式会通过 HTTP 回复通道发送响应。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Neither of these responses requires specifying where the response messages are going.</source>
          <target state="translated">这些响应都不要求指定响应消息的去向。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>When a server requires anonymous responses from the client, it uses the Anonymous value of the enumeration.</source>
          <target state="translated">如果服务器要求来自客户端匿名响应，它会使用匿名枚举的值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>The WCF system-provided <ph id="ph1">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph> bindings always use Anonymous addresses.</source>
          <target state="translated">WCF 系统提供<ph id="ph1">&lt;xref:System.ServiceModel.NetTcpBinding&gt;</ph>，<ph id="ph2">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>和<ph id="ph3">&lt;xref:System.ServiceModel.WSHttpBinding&gt;</ph>绑定一律使用匿名地址。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>NonAnonymous addresses are used when sending the response requires creating a new channel for communication.</source>
          <target state="translated">非匿名地址发送响应要求创建新的通信通道时使用。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>The WCF system-provided <ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph> binding uses a NonAnonymous address.</source>
          <target state="translated">WCF 系统提供<ph id="ph1">&lt;xref:System.ServiceModel.WSDualHttpBinding&gt;</ph>绑定使用的非匿名地址。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>With dual HTTP, the client creates an HTTP request to send a message and then the server must create its own HTTP request to send a response.</source>
          <target state="translated">使用双向 HTTP 时，客户端会创建 HTTP 请求来发送消息，服务器随后必须创建自己的 HTTP 请求来发送响应。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Because the server is initiating the send, it must have a specific endpoint to establish the connection.</source>
          <target state="translated">由于服务器要启动发送，所以它必须有一个特定的终结点才能建立连接。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>You must provide the server the address of an endpoint for its response.</source>
          <target state="translated">您必须为服务器提供用于响应的终结点地址。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Similarly, if a service must respond to a one-way message that it received, it also requires a NonAnonymous address because there is no back channel available for communication.</source>
          <target state="translated">同样，如果服务必须响应它接收的单向消息，则还需要非匿名地址，因为不没有可用于通信的任何反向通道。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>If the server sends a message back, a completely separate operation from that used to send the first message is required.</source>
          <target state="translated">如果服务器要发回消息，则需要一个完全不同于用来发送第一个消息的单独操作。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>Mixed is a third form of addressing which combines Anonymous and NonAnonymous addresses depending on the message that is being sent.</source>
          <target state="translated">混合是一种寻址它可以合并根据正在发送的消息的匿名和非匿名地址的第三个形式。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>A typical example of mixed-mode addressing is the use of a dedicated machine for processing fault or acknowledgment messages.</source>
          <target state="translated">混合模式寻址的典型示例是使用专用计算机来处理错误或确认消息。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>If the standard exchange sequence for replies is HTTP or TCP, the responses use Anonymous addressing but the faults use non-anonymous addressing.</source>
          <target state="translated">如果回复的标准交换序列是 HTTP 或 TCP，则响应会使用匿名寻址，但出错时使用非匿名寻址。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>While WCF does not provide Mixed addressing functionality in one of its standard bindings, it is possible to write a channel that allows the service to send responses directly on the back-channel (when the response address is Anonymous) or on a separate channel (when the response address is NonAnonymous).</source>
          <target state="translated">虽然 WCF 不提供混合寻址在某个标准绑定的功能，就可以编写一个通道，使服务可以直接在反向通道 （当响应地址为匿名） 上或独立通道上发送响应 （当响应地址为非匿名）。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.SupportedAddressingMode">
          <source>In such a case, the binding element of the channel is used to set <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SupportedAddressingMode&gt;</ph> to Mixed.</source>
          <target state="translated">在这种情况下，通道的绑定元素用于设置<ph id="ph1">&lt;xref:System.ServiceModel.Channels.SupportedAddressingMode&gt;</ph>到混合。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous">
          <source>The server only supports anonymous addresses and clients must provide an anonymous response address.</source>
          <target state="translated">服务器仅支持匿名地址，客户端必须提供匿名响应地址。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed">
          <source>The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</source>
          <target state="translated">服务器同时支持匿名地址和非匿名地址，客户端可以选择使用其中一个或者全部。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous">
          <source>The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</source>
          <target state="translated">服务器仅支持非匿名地址，客户端必须提供非匿名响应地址。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>