<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TransportSecurityBindingElement.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5592249896269cc09b133eee81cb13ae71f92cce2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">592249896269cc09b133eee81cb13ae71f92cce2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Represents a custom binding element that supports mixed-mode security (such as, optimized message security over a secure transport).</source>
          <target state="translated">表示一个自定义绑定元素，它支持混合模式安全（如安全传输中优化的消息安全）。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>A custom binding contains a collection of binding elements arranged in a specific order: the element that represents the top of the binding stack is added first, the next element down in the binding stack is added second, and so forth.</source>
          <target state="translated">一个自定义绑定包含一个以特定顺序排列的绑定元素集合：首先添加表示绑定堆栈顶部的元素，其次是绑定堆栈下的第二个元素，依此类推。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>To add this class to a binding</source>
          <target state="translated">将此类添加到绑定中</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Create a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph>.</source>
          <target state="translated">创建 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Create custom binding elements that will be above this binding element in the binding stack, such as the optional <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransactionFlowBindingElement&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement&gt;</ph>.</source>
          <target state="translated">在绑定堆栈中创建将位于此绑定元素之上的自定义绑定元素，比如可选的 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransactionFlowBindingElement&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Add these elements in the previously mentioned order to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph> using the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%2A&gt;</ph> method.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph> 方法，按先前提到的顺序将这些元素添加到 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Create an instance of <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportSecurityBindingElement&gt;</ph> and add it to the collection.</source>
          <target state="translated">创建 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportSecurityBindingElement&gt;</ph> 的实例，并将其添加到集合。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Add any additional custom binding elements to the collection, such as <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TcpTransportBindingElement&gt;</ph>.</source>
          <target state="translated">将任何其他自定义绑定元素添加到集合，比如 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TcpTransportBindingElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> Once an instance of this object is created, you should treat the properties of its base class, <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph>, as immutable.</source>
          <target state="translated"><bpt id="p1">**</bpt>请注意<ept id="p1">**</ept>其基本类的属性创建此对象的实例后，应视为<ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph>不可变。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Calling <ph id="ph1">`set`</ph> on some properties may have unpredictable effects: the binding may behave as if the property retained its old value, with a run-time failure being the only indication of an issue.</source>
          <target state="translated">对某些属性调用 <ph id="ph1">`set`</ph> 可能会产生不可预知的后果：绑定的行为可能就好像属性保留了其旧值一样，并出现运行时错误，该错误是问题的唯一迹象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>Two properties known to behave this way are <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A&gt;</ph>.</source>
          <target state="translated">已知具有此行为的两个属性为 <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransportSecurityBindingElement">
          <source>There may be other properties for which this is true.</source>
          <target state="translated">其他某些属性可能也是如此。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.#ctor">
          <source>Creates an instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /&gt;</ph> class.</source>
          <target state="translated">创建 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.TransportSecurityBindingElement" /&gt;</ph> 类的实例。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> object initialized from the current class.</source>
          <target state="translated">创建一个从当前类初始化的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> 新对象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> object with property values equal to those of the current instance.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> 对象，其属性值等于当前实例的属性值。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>This creates a complete copy of the current binding element object tree, also called a deep clone.</source>
          <target state="translated">这将创建当前绑定元素对象树的完整副本，也称为深层克隆。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
          <target state="translated">对象的深层克隆创建对象的副本以及该对象直接或间接引用的所有内容的副本。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>(This can also be described as copying the entire object graph.) Returning a deep clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</source>
          <target state="translated">这也被描述为复制整个对象图。通过返回深层克隆，运行时将能够支持多个自定义绑定共用一个自定义绑定元素的情况。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>If a deep clone is not returned, the run-time behavior is undefined.</source>
          <target state="translated">如果未返回深层克隆，则运行时行为将不可确定。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>A shallow clone of an object, by contrast, is a copy of the object only.</source>
          <target state="translated">相比之下，对象的浅表克隆只是对象本身的副本。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.Clone">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</source>
          <target state="translated">如果对象包含对其他对象的引用，则浅表复制不创建所引用对象的副本，而是仅复制对原始对象的引用。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The property to get.</source>
          <target state="translated">要获取的属性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Gets a property from the specified <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>.</source>
          <target state="translated">从指定的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> 获取属性。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The property from the specified <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the object is not found.</source>
          <target state="translated">指定的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> 中的属性，如果找不到对象，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>This method gets the specified object from the base class or from one of that class's ancestors.</source>
          <target state="translated">此方法从基类或该类的一个上级中获取指定对象。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The object returned is usually a collection of properties, for example an object that implements <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ISecurityCapabilities&gt;</ph>.</source>
          <target state="translated">返回的对象通常是一个属性集合，例如实现 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ISecurityCapabilities&gt;</ph> 的对象。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph> that you can use to modify the exporting process.</source>
          <target state="translated">可以用来修改导出过程的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph> that you can use to insert your custom policy assertion.</source>
          <target state="translated">可以用来插入您的自定义策略断言的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Exports a custom policy assertion about bindings.</source>
          <target state="translated">导出有关绑定的自定义策略断言。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> to communicate to clients the existence of this custom binding element in the binding stack.</source>
          <target state="translated">此方法将与绑定相关的语句写入特定协定公开的 WSDL 信息，<ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 使用此方法通知客户端绑定堆栈中是否存在此自定义绑定元素。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>This method takes two parameters: the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> objects.</source>
          <target state="translated">此方法接受两个参数：<ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> 和 <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods to obtain collections of policy assertions that have already been exported at various scopes.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> 方法以获取从不同范围导出的策略断言的集合。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Then use this method to add your own policy assertions to the appropriate collection.</source>
          <target state="translated">然后，使用此方法将您自己的策略断言添加到适当的集合中。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;</ph> property exposes the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> for the endpoint that is being exported.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;</ph> 属性可公开正在导出的终结点的 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>This allows this method to correctly scope their exported policy assertions.</source>
          <target state="translated">这样，此方法就可正确限定它们的导出策略断言的范围。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>For example, security attributes in code may add behaviors to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> that indicate where security policy assertions should be added.</source>
          <target state="translated">例如，代码中的安全属性可以将行为添加到指示安全策略断言应该添加到的位置的 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransportSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> interface.</source>
          <target state="translated">一旦将自定义策略断言附加到 WSDL 信息，客户端就可以通过实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> 接口来检测和导入自定义绑定断言。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>