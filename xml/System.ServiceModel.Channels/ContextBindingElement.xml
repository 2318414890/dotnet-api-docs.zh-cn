<Type Name="ContextBindingElement" FullName="System.ServiceModel.Channels.ContextBindingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10f36e9e657b0cacd1c847bb927637cc0c5d9214" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30506511" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContextBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Channels.IContextBindingElement, System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextBindingElement extends System.ServiceModel.Channels.BindingElement implements class System.ServiceModel.Channels.IContextBindingElement, class System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.ContextBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextBindingElement&#xA;Inherits BindingElement&#xA;Implements IContextBindingElement, IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextBindingElement : System::ServiceModel::Channels::BindingElement, System::ServiceModel::Channels::IContextBindingElement, System::ServiceModel::Description::IPolicyExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IContextBindingElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.WorkflowServices, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4c010-101">提供作为绑定元素上下文一部分的保护级别和交换机制以及用于生成通道侦听器和工厂的功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c010-101">Provides a protection level and an exchange mechanism as part of the context of a binding element and the functionality to build the channel listeners and factories.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c010-102"><xref:System.ServiceModel.Channels.ContextBindingElement> 允许用户向服务的绑定中添加元素以管理其上下文交换协议。</span><span class="sxs-lookup"><span data-stu-id="4c010-102">The <xref:System.ServiceModel.Channels.ContextBindingElement> allows the user to add an element to the binding of a service for managing its context exchange protocol.</span></span> <span data-ttu-id="4c010-103"><xref:System.ServiceModel.Channels.ContextBindingElement> 通常堆叠在可靠性、安全性和传输绑定元素上。</span><span class="sxs-lookup"><span data-stu-id="4c010-103">The <xref:System.ServiceModel.Channels.ContextBindingElement> is typically stacked on top of reliability, security, and transport binding elements.</span></span> <span data-ttu-id="4c010-104"><xref:System.ServiceModel.Channels.ContextBindingElement> 不需要任何配置选项并且可以为 <xref:System.ServiceModel.Channels.IRequestChannel>、<xref:System.ServiceModel.Channels.IRequestSessionChannel> 和 <xref:System.ServiceModel.Channels.IDuplexSessionChannel> 创建通道工厂。</span><span class="sxs-lookup"><span data-stu-id="4c010-104">A <xref:System.ServiceModel.Channels.ContextBindingElement> does not require any configuration options and can create channel factories for <xref:System.ServiceModel.Channels.IRequestChannel>, <xref:System.ServiceModel.Channels.IRequestSessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>.</span></span> <span data-ttu-id="4c010-105">它还可以为 <xref:System.ServiceModel.Channels.IReplyChannel>、<xref:System.ServiceModel.Channels.IReplySessionChannel> 和 <xref:System.ServiceModel.Channels.IDuplexSessionChannel> 创建通道侦听器。</span><span class="sxs-lookup"><span data-stu-id="4c010-105">It can also create channel listeners for <xref:System.ServiceModel.Channels.IReplyChannel>, <xref:System.ServiceModel.Channels.IReplySessionChannel>, and <xref:System.ServiceModel.Channels.IDuplexSessionChannel>.</span></span> <span data-ttu-id="4c010-106">上下文通道不更改通道接口，基础通道堆栈必须支持请求的通道形状和会话功能。</span><span class="sxs-lookup"><span data-stu-id="4c010-106">A context channel does not change the channel interface – the underlying channel stack must support the requested channel shape and session capability.</span></span>  
  
 <span data-ttu-id="4c010-107">使用通道侦听器和工厂可以构造用于处理传入和传出消息的通道堆栈部分。</span><span class="sxs-lookup"><span data-stu-id="4c010-107">The channel listeners and factories are used to construct the part of the channel stacks used to process incoming and outgoing messages.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4c010-108">如果使用基于会话的绑定创建了<xref:System.ServiceModel.Channels.ContextBindingElement>和指定的协定一起使用<xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A>  =  <xref:System.ServiceModel.SessionMode.NotAllowed>、<xref:System.InvalidOperationException>包含以下文本创建通道时会引发:"通道上下文管理无法启用或禁用后打开通道。"</span><span class="sxs-lookup"><span data-stu-id="4c010-108">If a session-based binding is created with a <xref:System.ServiceModel.Channels.ContextBindingElement> and used with a contract that specifies <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> = <xref:System.ServiceModel.SessionMode.NotAllowed>, an <xref:System.InvalidOperationException> is thrown when the channel is created with the following text: "Channel context management cannot be enabled or disabled after the channel is opened."</span></span> <span data-ttu-id="4c010-109">必须将 <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> 设置为 <xref:System.ServiceModel.SessionMode.Allowed> 或 <xref:System.ServiceModel.SessionMode.Required>，或不使用基于会话的通道。</span><span class="sxs-lookup"><span data-stu-id="4c010-109">You must set <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> to <xref:System.ServiceModel.SessionMode.Allowed> or <xref:System.ServiceModel.SessionMode.Required> or not use a session-based channel.</span></span>  
  
 <span data-ttu-id="4c010-110">在创建自定义绑定时，建议您在添加任何可靠性和安全性绑定元素（如果有）之前，将 <xref:System.ServiceModel.Channels.ContextBindingElement> 添加到自定义绑定的 <xref:System.ServiceModel.Channels.BindingElementCollection>。</span><span class="sxs-lookup"><span data-stu-id="4c010-110">When creating a custom binding, it is recommended that you add the <xref:System.ServiceModel.Channels.ContextBindingElement> to the <xref:System.ServiceModel.Channels.BindingElementCollection> of the custom binding before adding any reliability and security binding elements, if present.</span></span> <span data-ttu-id="4c010-111">否则，服务可能会引发 <xref:System.ServiceModel.ProtocolException> 并显示以下消息：</span><span class="sxs-lookup"><span data-stu-id="4c010-111">If you do not, your service may throw a <xref:System.ServiceModel.ProtocolException> with the following message:</span></span>  
  
 <span data-ttu-id="4c010-112">“上下文通道收到一个消息，该消息包含的上下文与缓存在此通道的当前上下文不匹配。</span><span class="sxs-lookup"><span data-stu-id="4c010-112">"Context channel received a message with context which does not match the current context cached at the channel.</span></span> <span data-ttu-id="4c010-113">请确保在对上下文进行了初始设置或者通过将通道属性‘IContextManager.Enabled’设置为 false 禁用了其上下文管理之后，服务没有更改此上下文。”</span><span class="sxs-lookup"><span data-stu-id="4c010-113">Ensure service does not change context after it was originally set or disable context management by setting channel property 'IContextManager.Enabled' to false."</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4c010-114">初始化 <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-114">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c010-115">初始化 <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c010-116">为 <xref:System.Net.Security.ProtectionLevel.Sign> 的 <xref:System.Net.Security.ProtectionLevel> 和 <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> 的 <xref:System.ServiceModel.Channels.ContextExchangeMechanism> 设置默认值。</span><span class="sxs-lookup"><span data-stu-id="4c010-116">Sets the default values of <xref:System.Net.Security.ProtectionLevel.Sign> for <xref:System.Net.Security.ProtectionLevel> and <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> for <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Security.ProtectionLevel protectionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement(System::Net::Security::ProtectionLevel protectionLevel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectionLevel" Type="System.Net.Security.ProtectionLevel" />
      </Parameters>
      <Docs>
        <param name="protectionLevel">
          <span data-ttu-id="4c010-117">绑定元素的 <see cref="T:System.Net.Security.ProtectionLevel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-117">The <see cref="T:System.Net.Security.ProtectionLevel" /> for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c010-118">使用指定的保护级别初始化 <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> class with a specified level of protection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c010-119">为 <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> 的 <xref:System.ServiceModel.Channels.ContextExchangeMechanism> 设置默认值。</span><span class="sxs-lookup"><span data-stu-id="4c010-119">Sets the default value of <xref:System.ServiceModel.Channels.ContextExchangeMechanism.ContextSoapHeader> for <xref:System.ServiceModel.Channels.ContextExchangeMechanism>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4c010-120">
            <paramref name="protectionLevel" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-120">The <paramref name="protectionLevel" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Security.ProtectionLevel protectionLevel, valuetype System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement(System::Net::Security::ProtectionLevel protectionLevel, System::ServiceModel::Channels::ContextExchangeMechanism contextExchangeMechanism);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="contextExchangeMechanism" Type="System.ServiceModel.Channels.ContextExchangeMechanism" />
      </Parameters>
      <Docs>
        <param name="protectionLevel">
          <span data-ttu-id="4c010-121">绑定元素的 <see cref="T:System.Net.Security.ProtectionLevel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-121">The <see cref="T:System.Net.Security.ProtectionLevel" /> for the binding element.</span>
          </span>
        </param>
        <param name="contextExchangeMechanism">
          <span data-ttu-id="4c010-122">指定用于交换绑定元素上下文的机制的 <see cref="T:System.ServiceModel.Channels.ContextExchangeMechanism" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-122">The <see cref="T:System.ServiceModel.Channels.ContextExchangeMechanism" /> that specifies the mechanism used to exchange context for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c010-123">使用指定的保护级别和交换机制初始化 <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-123">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> class with a specified level of protection and exchange mechanism.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4c010-124">
            <paramref name="protectionLevel" /> 或 <paramref name="contextExchangeMechanism" /> 无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-124">
              <paramref name="protectionLevel" /> or <paramref name="contextExchangeMechanism" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, Uri clientCallbackAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Security.ProtectionLevel protectionLevel, valuetype System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, class System.Uri clientCallbackAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement(System::Net::Security::ProtectionLevel protectionLevel, System::ServiceModel::Channels::ContextExchangeMechanism contextExchangeMechanism, Uri ^ clientCallbackAddress);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="contextExchangeMechanism" Type="System.ServiceModel.Channels.ContextExchangeMechanism" />
        <Parameter Name="clientCallbackAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="protectionLevel">
          <span data-ttu-id="4c010-125">绑定元素的保护级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-125">The protection level form the binding element.</span>
          </span>
        </param>
        <param name="contextExchangeMechanism">
          <span data-ttu-id="4c010-126">用于交换绑定元素上下文的机制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-126">The mechanism used to exchange context for the binding element.</span>
          </span>
        </param>
        <param name="clientCallbackAddress">
          <span data-ttu-id="4c010-127">客户端回调地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-127">The client callback address.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c010-128">使用指定的保护级别、上下文交换机制和客户端回调地址初始化 <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-128">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> class with the specified protection level, context exchange mechanism, and client callback address.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextBindingElement (System.Net.Security.ProtectionLevel protectionLevel, System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, Uri clientCallbackAddress, bool contextManagementEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Security.ProtectionLevel protectionLevel, valuetype System.ServiceModel.Channels.ContextExchangeMechanism contextExchangeMechanism, class System.Uri clientCallbackAddress, bool contextManagementEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.#ctor(System.Net.Security.ProtectionLevel,System.ServiceModel.Channels.ContextExchangeMechanism,System.Uri,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextBindingElement(System::Net::Security::ProtectionLevel protectionLevel, System::ServiceModel::Channels::ContextExchangeMechanism contextExchangeMechanism, Uri ^ clientCallbackAddress, bool contextManagementEnabled);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectionLevel" Type="System.Net.Security.ProtectionLevel" />
        <Parameter Name="contextExchangeMechanism" Type="System.ServiceModel.Channels.ContextExchangeMechanism" />
        <Parameter Name="clientCallbackAddress" Type="System.Uri" />
        <Parameter Name="contextManagementEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="protectionLevel">
          <span data-ttu-id="4c010-129">绑定元素的保护级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-129">The protection level for the binding element.</span>
          </span>
        </param>
        <param name="contextExchangeMechanism">
          <span data-ttu-id="4c010-130">用于交换绑定元素上下文的机制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-130">The mechanism used to exchange context for the binding element.</span>
          </span>
        </param>
        <param name="clientCallbackAddress">
          <span data-ttu-id="4c010-131">客户端回调地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-131">The client callback address.</span>
          </span>
        </param>
        <param name="contextManagementEnabled">
          <span data-ttu-id="4c010-132">如果启用上下文管理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-132">
              <see langword="true" /> if the context management is enabled; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c010-133">使用指定的保护级别、上下文交换机制、客户端回调地址和一个用于指定是否启用上下文管理的值，初始化 <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-133">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> class with the specified protection level, context exchange mechanism, client callback address, and a value that specifies whether context management is enabled.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="4c010-134">通道工厂生成的通道类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-134">The type of channel the channel factory produces.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="4c010-135">通道的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-135">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c010-136">在客户端上生成通道工厂堆栈，该通道工厂堆栈可为指定上下文创建指定类型的通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-136">Builds the channel factory stack on the client that creates a specified type of channel for a specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c010-137">指定上下文的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> 类型的 <paramref name="TChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-137">An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> for the specified context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c010-138">
            <paramref name="context" /> 设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-138">
              <paramref name="context" /> set is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="4c010-139">通道侦听器接受的通道类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-139">The type of channel the channel listener accepts.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="4c010-140">侦听器的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-140">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c010-141">在客户端生成通道侦听器堆栈，该通道侦听器堆栈接受针对指定上下文的具有指定类型的通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-141">Builds the channel listener stack on the client that accepts a specified type of channel for a specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c010-142">指定上下文的 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 类型的 <paramref name="TChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-142">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> for the specified context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c010-143">
            <paramref name="context" /> 设置为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-143">
              <paramref name="context" /> set is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="4c010-144">通道工厂生成的通道类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-144">The type of channel the channel factory produces.</span>
          </span>
          <span data-ttu-id="4c010-145">默认情况下仅允许 <see cref="T:System.ServiceModel.Channels.IRequestChannel" />、<see cref="T:System.ServiceModel.Channels.IRequestSessionChannel" /> 和 <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-145">Only <see cref="T:System.ServiceModel.Channels.IRequestChannel" />, <see cref="T:System.ServiceModel.Channels.IRequestSessionChannel" />, and <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> are allowed by default.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="4c010-146">工厂的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-146">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the factory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c010-147">返回一个值，该值指示当前绑定元素是否可以为指定的通道类型和上下文生成工厂。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-147">Returns a value that indicates whether the current binding element can build a factory for a specified type of channel and context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c010-148">如果可以在客户端上生成指定的通道工厂堆栈，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-148">
              <see langword="true" /> if the specified channel factory stack can be built on the client; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="4c010-149">通道侦听器接受的通道类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-149">The type of channel the channel listener accepts.</span>
          </span>
          <span data-ttu-id="4c010-150">默认情况下仅允许 <see cref="T:System.ServiceModel.Channels.IReplyChannel" />、<see cref="T:System.ServiceModel.Channels.IReplySessionChannel" /> 和 <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-150">Only <see cref="T:System.ServiceModel.Channels.IReplyChannel" />, <see cref="T:System.ServiceModel.Channels.IReplySessionChannel" />, and <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> are allowed by default.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="4c010-151">侦听器的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-151">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c010-152">返回一个值，该值指示当前绑定是否可以为指定的通道类型和上下文生成侦听器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-152">Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c010-153">如果可以在服务上生成指定的通道侦听器堆栈，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-153">
              <see langword="true" /> if the specified channel listener stack can be built on the service; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCallbackAddress">
      <MemberSignature Language="C#" Value="public Uri ClientCallbackAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientCallbackAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ContextBindingElement.ClientCallbackAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCallbackAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientCallbackAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c010-154">获取或设置绑定元素的客户端回调地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-154">Gets or sets the client callback address for the binding element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c010-155">客户端回调地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-155">The client callback address.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4c010-156">创建一个从当前对象初始化的新 <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-156">Creates a new <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> object initialized from the current one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c010-157">从当前对象初始化的 <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-157">A <see cref="T:System.ServiceModel.Channels.ContextBindingElement" /> object initialized from the current one.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c010-158">克隆的 <xref:System.ServiceModel.Channels.ContextBindingElement> 对象具有与当前 <xref:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel%2A> 对象相同的 <xref:System.ServiceModel.Channels.ContextExchangeMechanism> 和 <xref:System.ServiceModel.Channels.ContextBindingElement> 值。</span><span class="sxs-lookup"><span data-stu-id="4c010-158">The cloned <xref:System.ServiceModel.Channels.ContextBindingElement> object has the same <xref:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel%2A> and <xref:System.ServiceModel.Channels.ContextExchangeMechanism> values of the current <xref:System.ServiceModel.Channels.ContextBindingElement> object.</span></span>  
  
 <span data-ttu-id="4c010-159">这将创建当前绑定元素对象树的完整副本，也称为深层克隆。</span><span class="sxs-lookup"><span data-stu-id="4c010-159">This creates a complete copy of the current binding element object tree, also called a deep clone.</span></span> <span data-ttu-id="4c010-160">对象的深层克隆创建对象的副本以及该对象直接或间接引用的所有内容的副本。</span><span class="sxs-lookup"><span data-stu-id="4c010-160">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="4c010-161">这称为复制整个对象图。</span><span class="sxs-lookup"><span data-stu-id="4c010-161">This is called copying the entire object graph.</span></span> <span data-ttu-id="4c010-162">通过返回深层克隆，运行时将能够支持多个自定义绑定共用一个自定义绑定元素的情况。</span><span class="sxs-lookup"><span data-stu-id="4c010-162">Returning a deep clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="4c010-163">如果未返回深层克隆，则运行时行为将不可确定。</span><span class="sxs-lookup"><span data-stu-id="4c010-163">If a deep clone is not returned, the run-time behavior is undefined.</span></span> <span data-ttu-id="4c010-164">对象的浅表克隆只是对象本身的副本。</span><span class="sxs-lookup"><span data-stu-id="4c010-164">A shallow clone of an object is a copy of the object only.</span></span> <span data-ttu-id="4c010-165">如果对象包含对其他对象的引用，则浅表复制不创建所引用对象的副本，而是仅复制对原始对象的引用。</span><span class="sxs-lookup"><span data-stu-id="4c010-165">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextExchangeMechanism">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.ContextExchangeMechanism ContextExchangeMechanism { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Channels.ContextExchangeMechanism ContextExchangeMechanism" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ContextBindingElement.ContextExchangeMechanism" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextExchangeMechanism As ContextExchangeMechanism" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::ContextExchangeMechanism ContextExchangeMechanism { System::ServiceModel::Channels::ContextExchangeMechanism get(); void set(System::ServiceModel::Channels::ContextExchangeMechanism value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.ContextExchangeMechanism</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c010-166">获取或设置用于传递绑定元素上下文的交换机制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-166">Gets or sets the exchange mechanism used to communicate context for the binding element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c010-167">指定用于交换绑定元素上下文的机制的 <see cref="T:System.ServiceModel.Channels.ContextExchangeMechanism" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-167">The <see cref="T:System.ServiceModel.Channels.ContextExchangeMechanism" /> that specifies the mechanism used to exchange context for the binding element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4c010-168">设置值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-168">The value set is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContextManagementEnabled">
      <MemberSignature Language="C#" Value="public bool ContextManagementEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContextManagementEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ContextBindingElement.ContextManagementEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextManagementEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContextManagementEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c010-169">获取或设置一个指定是否已启用上下文管理的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-169">Gets or sets a value that specifies whether context management is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c010-170">如果启用上下文管理，则为 <see langword="true" />；否则，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-170">
              <see langword="true" /> if context management is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportPolicy">
      <MemberSignature Language="C#" Value="public virtual void ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <span data-ttu-id="4c010-171">可导出元数据信息的 <see cref="T:System.ServiceModel.Description.MetadataExporter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-171">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that exports the metadata information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4c010-172">一个 <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> 对象，该对象提供从导出的 WSDL 元素到协定说明的映射。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-172">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c010-173">将自定义策略断言写入到绑定元素的上下文中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-173">Writes custom policy assertions into the context of the binding element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c010-174">
            <paramref name="context" /> 为 <see langword="null" /> 或绑定中的策略断言为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-174">
              <paramref name="context" /> is <see langword="null" /> or the policy assertion in the binding is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ContextBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="4c010-175">方法正在查询的类型化对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-175">The typed object for which the method is querying.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="4c010-176">指定的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-176">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c010-177">从通道堆栈的适当层返回具有指定上下文的类型化对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-177">Returns the typed object with the specified context from the appropriate layer in the channel stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c010-178">所请求的类型化对象 <paramref name="T" />（如果存在）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-178">The typed object <paramref name="T" /> requested if it is present.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4c010-179">
            <paramref name="context" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-179">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.ContextBindingElement.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4c010-180">获取或设置上下文中绑定元素的安全级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-180">Gets or sets the level of protection for the binding element from the context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4c010-181">绑定元素的 <see cref="T:System.Net.Security.ProtectionLevel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-181">The <see cref="T:System.Net.Security.ProtectionLevel" /> for the binding element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4c010-182">设置值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c010-182">The value set is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>