<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageEncodingBindingElement.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b7269ba5650f678a5cf2ea5bbd471d4e002328b646c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69ba5650f678a5cf2ea5bbd471d4e002328b646c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>The binding element that specifies the message version used to encode messages.</source>
          <target state="translated">用于指定对消息进行编码时所用消息版本的绑定元素。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Encoding is the process of transforming a message into a sequence of bytes.</source>
          <target state="translated">编码是将消息转换为一个字节序列的过程。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Decoding is the reverse process.</source>
          <target state="translated">解码是反向过程。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> includes three types of encoding for SOAP messages: Text, Binary and Message Transmission Optimization Mechanism (MTOM).</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 包含三种类型的 SOAP 消息编码：文本、二进制和消息传输优化机制 (MTOM)。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Use this class if you want to implement a custom message encoder.</source>
          <target state="translated">如果希望实现自定义消息编码器，请使用此类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>To implement your own custom message encoder, you must provide custom implementations of the following three abstract base classes:</source>
          <target state="translated">若要实现自己的自定义消息编码器，必须提供以下三个抽象基类的自定义实现：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Override the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A&gt;</ph> to return an instance of your custom <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph>.</source>
          <target state="translated">重写 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A&gt;</ph> 以返回自定义 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph> 的实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Override the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A&gt;</ph> method to return an instance of this factory.</source>
          <target state="translated">重写 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A&gt;</ph> 方法以返回此工厂的实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Any type that derives from <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement&gt;</ph> is responsible for updating the version of the SOAP binding in the WSDL document generated for the service.</source>
          <target state="translated">从 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement&gt;</ph> 派生的任何类型负责更新为服务生成的 WSDL 文档中 SOAP 绑定的版本。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>This is done by implementing the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%28System.ServiceModel.Description.WsdlExporter%2CSystem.ServiceModel.Description.WsdlEndpointConversionContext%29&gt;</ph> method to modify the generated WSDL.</source>
          <target state="translated">实现 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%28System.ServiceModel.Description.WsdlExporter%2CSystem.ServiceModel.Description.WsdlEndpointConversionContext%29&gt;</ph> 方法以修改生成的 WSDL，即可完成此操作。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> provides three types of binding elements derived from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement&gt;</ph> class that can provide for text, binary and Message Transmission Optimization Mechanism (MTOM) encoding.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 提供三种类型的绑定元素，这些元素派生自可提供文本、二进制和消息传输优化机制 (MTOM) 编码的 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement&gt;</ph> 类。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement&gt;</ph>: the most interoperable, but the least efficient encoder for XML messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement&gt;</ph>：互操作性最高但效率最低的 XML 消息编码器。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>A Web service or Web service client can generally understand textual XML.</source>
          <target state="translated">Web 服务或 Web 服务客户端通常都能理解文本 XML。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>However, transmitting large blocks of binary data as text is not efficient.</source>
          <target state="translated">但是，将大型二进制数据块作为文本传输不是有效的传输方式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement&gt;</ph>: represents the binding element that specifies the character encoding and message versioning used for binary-based XML messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement&gt;</ph>：表示绑定元素，该绑定元素指定用于二进制 XML 消息的字符编码和消息版本管理。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>This is most efficient but least interoperable of the encoding options.</source>
          <target state="translated">这是效率最高但互操作性最低的编码选项。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement&gt;</ph>: represents the binding element that specifies the character encoding and message versioning used for a message using a Message Transmission Optimization Mechanism (MTOM) encoding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MtomMessageEncodingBindingElement&gt;</ph>：表示绑定元素，该绑定元素指定用于消息传输优化机制 (MTOM) 编码形式消息的字符编码和消息版本管理。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>MTOM is an efficient technology for transmitting binary data in WCF messages.</source>
          <target state="translated">MTOM 是一种用于在 WCF 消息中传输二进制数据的有效技术。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>The MTOM encoder attempts to balance efficiency and interoperability.</source>
          <target state="translated">MTOM 编码器力图在效率和互操作性之间取得平衡。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>The MTOM encoding transmits most XML in textual form, but optimizes large blocks of binary data by transmitting them as-is, without conversion to text.</source>
          <target state="translated">MTOM 编码以文本形式传输大多数 XML，但是会通过按原样（即不转换为文本）的方式传输来优化大型二进制数据块。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>The following code example shows how to implement a class derived from <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement&gt;</ph>:</source>
          <target state="translated">下面的代码示例演示如何实现派生自 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement&gt;</ph> 的类。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.MessageEncodingBindingElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> to be cloned.</source>
          <target state="translated">要克隆的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> class initialized from an existing element.</source>
          <target state="translated">初始化从现有元素初始化的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncodingBindingElement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.#ctor(System.ServiceModel.Channels.MessageEncodingBindingElement)">
          <source>The following code illustrates how to implement this constructor:</source>
          <target state="translated">下面的代码演示如何实现此构造函数：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
          <source>When overridden in a derived class, creates a factory for producing message encoders.</source>
          <target state="translated">在派生类中重写时，创建工厂以生成消息编码器。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /&gt;</ph> used to produce message encoders.</source>
          <target state="translated">用于生成消息编码器的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory">
          <source>The following code illustrates how to implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A&gt;</ph>:</source>
          <target state="translated">下面的代码演示如何实现 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A&gt;</ph>：</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object for which the method is querying.</source>
          <target state="translated">方法正在查询的类型化对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> for the current binding element.</source>
          <target state="translated">当前绑定元素的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns the typed object requested, if present, from the appropriate layer in the channel stack.</source>
          <target state="translated">从通道堆栈的适当层，返回所请求的类型化对象（如果存在）。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is present or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not.</source>
          <target state="translated">如果存在，则为所请求的类型化对象 <ph id="ph1">&lt;paramref name="T" /&gt;</ph>，如果不存在，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this to request a typed object such as an interface for retrieving properties or getting status from the appropriate layer in the channel stack.</source>
          <target state="translated">使用此方法可请求从通道堆栈的适当层返回一个类型化对象，如用于检索属性或获取状态的接口。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If a layer supports returning the requested object, it returns it.</source>
          <target state="translated">如果某个层支持返回所请求的对象，则该层会返回对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If not, it delegates the call down to the next layer in the stack.</source>
          <target state="translated">如果不支持，则该层会将调用委托给堆栈中的下一层。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果到达堆栈底部仍然没有通道层支持所请求的对象，则该方法返回 <ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The following code illustrates how to implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph> method:</source>
          <target state="translated">下面的代码演示如何实现 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph> 方法：</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
          <source>When overridden in a derived class, gets or sets the message version that can be handled by the message encoders produced by the message encoder factory.</source>
          <target state="translated">在派生类中重写时，获取或设置可由消息编码器工厂所生成消息编码器处理的消息版本。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageVersion" /&gt;</ph> used by the encoders produced by the message encoder factory.</source>
          <target state="translated">由消息编码器工厂所生成编码器使用的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageVersion" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
          <source>When binding elements are asked to process a message that has a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageVersion&gt;</ph> not returned by this property, it should throw an exception.</source>
          <target state="translated">如果要求绑定因素处理 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageVersion&gt;</ph> 未由此属性返回的消息，则会引发异常。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion">
          <source>The following code illustrates how to implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A&gt;</ph> property:</source>
          <target state="translated">下面的代码演示如何实现 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A&gt;</ph> 属性：</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>