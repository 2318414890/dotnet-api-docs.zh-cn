<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IChannel.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cf048a83a83d9d4dbb1dd852b5ce9805de7794ba.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf048a83a83d9d4dbb1dd852b5ce9805de7794ba</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IChannel">
          <source>Defines the basic interface that all channel objects must implement.</source>
          <target state="translated">定义所有通道对象都必须实现的基本接口。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IChannel">
          <source>It requires that they implement the state machine interface shared by all communication objects and that they implement a method to retrieve objects from the channel stack.</source>
          <target state="translated">它要求通道对象实现由所有通信对象共享的状态机接口，还要求通道对象实现从通道堆栈中检索对象的方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source>Channels must satisfy the contract of a state machine as defined by the <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> interface.</source>
          <target state="translated">通道必须满足 <ph id="ph1">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> 接口所定义的状态机协定。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannel&gt;</ph> interface adds the</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannel&gt;</ph> 接口将</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannel.GetProperty%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannel.GetProperty%2A&gt;</ph> 方法添加到 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> 接口。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source>This method provides a mechanism for retrieving properties from the channel stack regardless of where in the stack those properties live.</source>
          <target state="translated">此方法提供了从通道堆栈中检索属性的机制，无论这些属性存在于堆栈的任何位置，该机制都适用。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source>The term "property" in the method name refers to a piece of information that belongs to one of the channels in the stack.</source>
          <target state="translated">方法名称中的术语“属性”是指属于堆栈中某个通道的信息片段。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source>The CLR type for that property is determined by <ph id="ph1">`T`</ph>.</source>
          <target state="translated">该属性的 CLR 类型由 <ph id="ph1">`T`</ph> 确定。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source>This method of retrieval is also used on channel factories and channel listeners.</source>
          <target state="translated">此检索方法还用在通道工厂和通道侦听器中。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">`IChannel`</ph> is inherited by each of the channel interfaces associated with the basic message-exchange patterns:</source>
          <target state="translated"><ph id="ph1">`IChannel`</ph> 由基本消息交换模式的每个关联通道接口继承：</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> for receiving messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> 用于接收消息。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> for sending messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> 用于发送消息。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> for sending a request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IRequestChannel&gt;</ph> 用于发送请求。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph> for sending a reply.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph> 用于发送回复。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IChannel">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexChannel&gt;</ph> for bi-directional messaging.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexChannel&gt;</ph> 用于双向消息传递。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>The typed object for which the method is querying.</source>
          <target state="translated">方法正在查询的类型化对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</source>
          <target state="translated">从通道堆栈的适当层返回所请求的类型化对象（如果存在）。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is present or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not.</source>
          <target state="translated">如果存在，则为所请求的类型化对象 <ph id="ph1">&lt;paramref name="T" /&gt;</ph>，如果不存在，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.</source>
          <target state="translated">使用此方法可请求从通道堆栈的适当层返回一个类型化对象，如用于设置属性或获取状态的接口。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>If a layer supports returning the requested object, it returns it.</source>
          <target state="translated">如果某个层支持返回所请求的对象，则该层会返回对象。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>If not, it delegates the call down to the next layer in the stack.</source>
          <target state="translated">如果不支持，则该层会将调用委托给堆栈中的下一层。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果到达堆栈底部仍然没有通道层支持所请求的对象，则该方法返回 <ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IChannel.GetProperty``1">
          <source>The following sample shows how this property can be implemented by a channel that delegates the call down the stack using an<ph id="ph1">`InnerChannel`</ph> property that retrieves the inner channel for this channel.</source>
          <target state="translated">下面的示例演示如何通过故障时，堆栈使用将调用委托的通道实现此属性<ph id="ph1">`InnerChannel`</ph>检索此通道的内部通道的属性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>