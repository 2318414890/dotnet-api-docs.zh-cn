<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CompositeDuplexBindingElement.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e88f8b0e475131ee9d2ad9c054af95bf6acfeaa8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e88f8b0e475131ee9d2ad9c054af95bf6acfeaa8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.</source>
          <target state="translated">表示一个绑定元素，客户端在必须公开一个终结点以使服务可以将消息发送回客户端时使用。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>This is commonly used with transports, such as HTTP, that do not allow duplex communications natively.</source>
          <target state="translated">它通常与本身不允许进行双工通信的传输（例如，HTTP）一起使用。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.</source>
          <target state="translated">与此相反，TCP 本身允许进行双工通信，因此不要求服务在将消息发送回客户端时使用此绑定元素。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>The client must expose an address at which the service can contact it to establish a connection from the service to the client.</source>
          <target state="translated">客户端必须公开一个地址，使服务能以该地址与其进行联系，并在服务与客户端之间建立连接。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>This client address is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> property.</source>
          <target state="translated">此客户端地址由 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> 属性提供。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>Note that <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> auto-generates a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> if one is not explicitly set by the user.</source>
          <target state="translated">请注意，如果用户尚未显式设置地址，<ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 会自动生成一个 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the factory produces.</source>
          <target state="translated">工厂生成的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel factory.</source>
          <target state="translated">用于提供生成通道工厂所需上下文的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a channel factory that can create a composite duplex channel.</source>
          <target state="translated">返回一个通道工厂，该通道工厂可以创建一个复合双工通道。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> that creates a composite duplex channel of type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph>，可以创建 <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> 类型的复合双工通道。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The build context requires an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> for the <ph id="ph2">`TChannel`</ph>.</source>
          <target state="translated">生成上下文需要 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> 的 <ph id="ph2">`TChannel`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> is not of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IOutputChannel" /&gt;</ph> and is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 的类型不为 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IOutputChannel" /&gt;</ph>，不受支持。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the listener accepts.</source>
          <target state="translated">侦听器接受的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel listener.</source>
          <target state="translated">用于提供生成通道侦听器所需上下文的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a channel listener that can accept a composite duplex channel.</source>
          <target state="translated">返回一个通道侦听器，该通道侦听器可以接受复合双工通道。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> that accepts a composite duplex channel of type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph>，可以接受 <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> 类型的复合双工通道。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The build context requires an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> for the <ph id="ph2">`TChannel`</ph>.</source>
          <target state="translated">生成上下文需要 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> 的 <ph id="ph2">`TChannel`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> is not of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IInputChannel" /&gt;</ph> and is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 的类型不为 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IInputChannel" /&gt;</ph>，不受支持。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the channel factory produces.</source>
          <target state="translated">通道工厂生成的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel listener.</source>
          <target state="translated">用于提供生成通道侦听器所需上下文的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding can build the channel factory that produces a specific type of channel that satisfies the context requirements.</source>
          <target state="translated">返回一个值，该值指示绑定是否可以创建能够生成符合上下文需求的特定类型通道的通道工厂。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binding can build the channel factory; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果绑定可以生成通道工厂，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">`TChannel`</ph><ph id="ph3"> == </ph><ph id="ph4">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> and the inner binding can also build <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>; otherwise, <ph id="ph6">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> 如果<ph id="ph2">`TChannel`</ph> <ph id="ph3"> == </ph> <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>和内部绑定也可以生成<ph id="ph5">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>; 否则为<ph id="ph6">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the listener accepts.</source>
          <target state="translated">侦听器接受的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel listener.</source>
          <target state="translated">用于提供生成通道侦听器所需上下文的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding can build the channel listener that accepts a specific type of channel that satisfies the context requirements.</source>
          <target state="translated">返回一个值，该值指示绑定是否可以生成通道侦听器，且该通道侦听器能够接受符合上下文需要的特定类型的通道。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the channel listener can be built for the build required to accept the specified type of channel; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果可以生成接受特定类型通道所需的通道侦听器，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">`TChannel`</ph><ph id="ph3"> == </ph><ph id="ph4">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> and the inner binding can also build <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>; otherwise, <ph id="ph6">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> 如果<ph id="ph2">`TChannel`</ph> <ph id="ph3"> == </ph> <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>和内部绑定也可以生成<ph id="ph5">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>; 否则为<ph id="ph6">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>Gets or sets the base address for the client.</source>
          <target state="translated">获取或设置客户端的基址。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base address for the client.</source>
          <target state="translated">一个包含客户端基址的 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>This property provides an address at which the service can contact the client.</source>
          <target state="translated">该属性提供一个地址，服务可以通过这个地址与客户端取得联系。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>A <ph id="ph1">`null`</ph> value causes the system to automatically generate a client base address.</source>
          <target state="translated"><ph id="ph1">`null`</ph> 值导致系统自动生成一个客户端基址。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>This is a base address, not an absolute address.</source>
          <target state="translated">这是一个基址，并不是绝对地址。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>A GUID is appended to the base address when generating client endpoints from this binding.</source>
          <target state="translated">从该绑定生成客户端终结点时，GUID 会追加到基址。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>Returns a deep clone of the current binding element.</source>
          <target state="translated">返回当前绑定元素的深层克隆。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph> that is a deep clone of the current binding element.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph>，它是当前绑定元素的深层克隆。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</source>
          <target state="translated">通过返回克隆，运行时将能够支持多个自定义绑定共用一个自定义绑定元素的情况。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>If a clone is not returned, the run-time behavior is undefined.</source>
          <target state="translated">如果未返回克隆，则运行时行为将不可确定。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
          <target state="translated">对象的深层克隆创建对象的副本以及该对象直接或间接引用的所有内容的副本。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</source>
          <target state="translated">（这也称为复制整个对象图。）相比之下，对象的浅表克隆只是对象本身的副本。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</source>
          <target state="translated">如果对象包含对其他对象的引用，则浅表复制不创建所引用对象的副本，而是仅复制对原始对象的引用。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>In particular, a deep copy of <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt;</ph> copies over the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> value.</source>
          <target state="translated">尤其是，<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt;</ph> 的深层副本会复制完 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object whose support is being tested.</source>
          <target state="translated">正在测试其支持性的类型化对象。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel.</source>
          <target state="translated">用于提供生成通道所需上下文的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a typed object requested from the appropriate layer in one of the channel stacks.</source>
          <target state="translated">返回其中一个通道堆栈的适当层所请求的类型化对象。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is supported; or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not.</source>
          <target state="translated">如果受支持，则为所请求的类型化对象 <ph id="ph1">&lt;paramref name="T" /&gt;</ph>；否则，为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this to request a typed object, such as an interface for setting properties or getting status, from the appropriate layer in the stacked binding.</source>
          <target state="translated">使用此方法可从堆栈绑定的适当层请求一个类型化对象，如用于设置属性或获取状态的接口。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If a layer supports returning the requested object, it returns it.</source>
          <target state="translated">如果某个层支持返回所请求的对象，则该层会返回对象。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If not, it delegates the call down to the next layer in the stack.</source>
          <target state="translated">如果不支持，则该层会将调用委托给堆栈中的下一层。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If it gets to the bottom of the stack and no layer supports getting the requested object then the caller is returned a <ph id="ph1">`null`</ph> value.</source>
          <target state="translated">如果到达堆栈底部仍然没有层支持所请求的对象，则向调用方返回 <ph id="ph1">`null`</ph> 值。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph> that you can use to modify the exporting process.</source>
          <target state="translated">可以用来修改导出过程的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph> that you can use to insert your custom policy assertion.</source>
          <target state="translated">可以用来插入您的自定义策略断言的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.</source>
          <target state="translated">导出关于绑定的自定义策略断言，该自定义断言表示在绑定中出现复合双工。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>