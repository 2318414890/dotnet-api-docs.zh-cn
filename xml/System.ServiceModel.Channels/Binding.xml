<Type Name="Binding" FullName="System.ServiceModel.Channels.Binding">
  <TypeSignature Language="C#" Value="public abstract class Binding : System.ServiceModel.IDefaultCommunicationTimeouts" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Binding extends System.Object implements class System.ServiceModel.IDefaultCommunicationTimeouts" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.Binding" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Binding&#xA;Implements IDefaultCommunicationTimeouts" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding abstract : System::ServiceModel::IDefaultCommunicationTimeouts" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IDefaultCommunicationTimeouts</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a02b2-101">包含绑定元素，这些元素指定客户端和服务之间的通信所用的协议、传输和消息编码器。</span><span class="sxs-lookup"><span data-stu-id="a02b2-101">Contains the binding elements that specify the protocols, transports, and message encoders used for communication between clients and services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-102">表示一个绑定元素集合，其中每一个元素都描述一个终结点与其他终结点的通信方式的一个方面，这些元素一致地内置到客户端上的通道工厂和服务上的通道侦听器中。</span><span class="sxs-lookup"><span data-stu-id="a02b2-102">Represents a collection of binding elements, each of which describes an aspect of how an endpoint communicates with other endpoints and that are built, consistently, into a channel factory on the client and into a channel listener on the service.</span></span> <span data-ttu-id="a02b2-103">绑定包含绑定元素集合，这些元素与协议通道、传输通道和消息编码器相对应。</span><span class="sxs-lookup"><span data-stu-id="a02b2-103">A binding contains a collection of binding elements that correspond to protocol channels, transport channels, and message encoders.</span></span> <span data-ttu-id="a02b2-104">协议通道可以有任意数目的绑定元素，但是每个传输通道和消息编码器都有且只有一个绑定元素。</span><span class="sxs-lookup"><span data-stu-id="a02b2-104">There can be any number of binding elements for protocol channels but one and only one binding element for each the transport and message encoder.</span></span> <span data-ttu-id="a02b2-105">一个绑定中通常有六层绑定元素。</span><span class="sxs-lookup"><span data-stu-id="a02b2-105">There are commonly six layers of binding elements in a binding.</span></span> <span data-ttu-id="a02b2-106">只有堆栈底部的传输和编码绑定元素是必需的。</span><span class="sxs-lookup"><span data-stu-id="a02b2-106">Only the transport and encoding binding elements at the bottom of the stack are required.</span></span> <span data-ttu-id="a02b2-107">由于每个绑定都需要一个编码，因此，如果未指定编码，则 [!INCLUDE[indigo1](~/includes/indigo1-md.md)] 会添加一个默认编码。</span><span class="sxs-lookup"><span data-stu-id="a02b2-107">Because an encoding is required for each binding, if an encoding is not specified, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] adds a default encoding for you.</span></span> <span data-ttu-id="a02b2-108">对于 HTTP 和 HTTPS 传输，默认编码是 Text/XML，对于其他传输，默认编码为二进制编码。</span><span class="sxs-lookup"><span data-stu-id="a02b2-108">The default is Text/XML for the HTTP and HTTPS transports, and Binary for other transports.</span></span>  
  
 <span data-ttu-id="a02b2-109">下表总结了每层的选项。</span><span class="sxs-lookup"><span data-stu-id="a02b2-109">The following table summarizes the options for each layer.</span></span>  
  
|<span data-ttu-id="a02b2-110">层</span><span class="sxs-lookup"><span data-stu-id="a02b2-110">Layer</span></span>|<span data-ttu-id="a02b2-111">选项</span><span class="sxs-lookup"><span data-stu-id="a02b2-111">Options</span></span>|<span data-ttu-id="a02b2-112">必需</span><span class="sxs-lookup"><span data-stu-id="a02b2-112">Required</span></span>|  
|-----------|-------------|--------------|  
|<span data-ttu-id="a02b2-113">事务流</span><span class="sxs-lookup"><span data-stu-id="a02b2-113">Transaction Flow</span></span>|<xref:System.ServiceModel.Channels.TransactionFlowBindingElement>|<span data-ttu-id="a02b2-114">否</span><span class="sxs-lookup"><span data-stu-id="a02b2-114">No</span></span>|  
|<span data-ttu-id="a02b2-115">可靠性</span><span class="sxs-lookup"><span data-stu-id="a02b2-115">Reliability</span></span>|<xref:System.ServiceModel.Channels.ReliableSessionBindingElement>|<span data-ttu-id="a02b2-116">否</span><span class="sxs-lookup"><span data-stu-id="a02b2-116">No</span></span>|  
|<span data-ttu-id="a02b2-117">安全性</span><span class="sxs-lookup"><span data-stu-id="a02b2-117">Security</span></span>|<span data-ttu-id="a02b2-118">对称、非对称、传输级</span><span class="sxs-lookup"><span data-stu-id="a02b2-118">Symmetric, Asymmetric, Transport-Level</span></span>|<span data-ttu-id="a02b2-119">否</span><span class="sxs-lookup"><span data-stu-id="a02b2-119">No</span></span>|  
|<span data-ttu-id="a02b2-120">形状更改</span><span class="sxs-lookup"><span data-stu-id="a02b2-120">Shape Change</span></span>|<xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>|<span data-ttu-id="a02b2-121">否</span><span class="sxs-lookup"><span data-stu-id="a02b2-121">No</span></span>|  
|<span data-ttu-id="a02b2-122">传输升级</span><span class="sxs-lookup"><span data-stu-id="a02b2-122">Transport Upgrades</span></span>|<span data-ttu-id="a02b2-123">SSL 流、Windows 流、对等解析程序</span><span class="sxs-lookup"><span data-stu-id="a02b2-123">SSL stream, Windows stream, Peer Resolver</span></span>|<span data-ttu-id="a02b2-124">否</span><span class="sxs-lookup"><span data-stu-id="a02b2-124">No</span></span>|  
|<span data-ttu-id="a02b2-125">编码</span><span class="sxs-lookup"><span data-stu-id="a02b2-125">Encoding</span></span>|<span data-ttu-id="a02b2-126">文本、二进制、MTOM、自定义</span><span class="sxs-lookup"><span data-stu-id="a02b2-126">Text, Binary, MTOM, Custom</span></span>|<span data-ttu-id="a02b2-127">是</span><span class="sxs-lookup"><span data-stu-id="a02b2-127">Yes</span></span>|  
|<span data-ttu-id="a02b2-128">传输</span><span class="sxs-lookup"><span data-stu-id="a02b2-128">Transport</span></span>|<span data-ttu-id="a02b2-129">TCP、命名管道、HTTP、HTTPS、MSMQ、自定义</span><span class="sxs-lookup"><span data-stu-id="a02b2-129">TCP, Named Pipes, HTTP, HTTPS, MSMQ, Custom</span></span>|<span data-ttu-id="a02b2-130">是</span><span class="sxs-lookup"><span data-stu-id="a02b2-130">Yes</span></span>|  
  
 <span data-ttu-id="a02b2-131">每个绑定元素都提供在客户端上生成通道工厂和在服务上生成通道侦听器的规范。</span><span class="sxs-lookup"><span data-stu-id="a02b2-131">Each binding element provides the specification for building a channel factory on the client and a channel listener on the service.</span></span> <span data-ttu-id="a02b2-132">例如，在构建通道工厂堆栈时，对于绑定中的每个绑定元素，堆栈中都有一个通道工厂。</span><span class="sxs-lookup"><span data-stu-id="a02b2-132">When the channel factory stack is constructed, for example, there is one channel factory in the stack for each binding element in the binding.</span></span> <span data-ttu-id="a02b2-133">在服务上，堆栈中的通道侦听器也具有同样的对应关系。</span><span class="sxs-lookup"><span data-stu-id="a02b2-133">The same sort of mapping applies to the channel listeners in the stack on the service.</span></span> <span data-ttu-id="a02b2-134">客户端和服务上的一致性对于在这些终结点之间建立基于通道的连接非常重要。</span><span class="sxs-lookup"><span data-stu-id="a02b2-134">Consistency on the client and service is critical for establishing the channel-based connection between these endpoints.</span></span> <span data-ttu-id="a02b2-135">这样，每个工厂和侦听器才能处理通道堆栈中与之连接的相应通道的发送和接收操作，然后，这些通道才能发送和接收用于通信的消息。</span><span class="sxs-lookup"><span data-stu-id="a02b2-135">Each factory and listener, in turn, processes the sending and accepting of the corresponding channels in the channel stack that connects them, and these channels can then send and receive the messages used to communicate.</span></span>  
  
 <span data-ttu-id="a02b2-136">每个 <xref:System.ServiceModel.Channels.Binding> 实例都具有 <xref:System.ServiceModel.Channels.Binding.Name%2A> 和 <xref:System.ServiceModel.Channels.Binding.Namespace%2A>，它们结合起来在服务的元数据中唯一标识每个实例。</span><span class="sxs-lookup"><span data-stu-id="a02b2-136">Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify it in the metadata of the service.</span></span> <span data-ttu-id="a02b2-137">如果不指定任何名称或命名空间，则 WCF 为您添加默认值。</span><span class="sxs-lookup"><span data-stu-id="a02b2-137">If no name or namespace is specified, WCF adds a default values for you.</span></span> <span data-ttu-id="a02b2-138">默认名称是`null`的默认命名空间和http://tempuri.org/。</span><span class="sxs-lookup"><span data-stu-id="a02b2-138">The default name is `null` and the default namespace is http://tempuri.org/.</span></span> <span data-ttu-id="a02b2-139">绑定的这一用户名不同于协议名称的规范，后者由 <xref:System.ServiceModel.Channels.Binding.Scheme%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="a02b2-139">This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property.</span></span> <span data-ttu-id="a02b2-140">例如，如果要添加更多 HTTP 绑定，可以将它们命名为任何名称，并可将其所有架构都设置为“http”。</span><span class="sxs-lookup"><span data-stu-id="a02b2-140">If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to "http".</span></span> <span data-ttu-id="a02b2-141">不存在基于 <xref:System.ServiceModel.Channels.Binding.Scheme%2A> 的固有应用程序或计算机调度。</span><span class="sxs-lookup"><span data-stu-id="a02b2-141">There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>.</span></span> <span data-ttu-id="a02b2-142">这样，就避免了一个常见问题，即无法为已知协议注册附加处理程序。</span><span class="sxs-lookup"><span data-stu-id="a02b2-142">So you avoid the common problem of being unable to register additional handlers for well-known protocols.</span></span> <span data-ttu-id="a02b2-143">通过给每个版本提供不同的名称，还可以轻松地并行使用一个绑定的多个版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-143">You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.</span></span>  
  
 <span data-ttu-id="a02b2-144"><xref:System.ServiceModel.Channels.Binding> 类实现 <xref:System.ServiceModel.IDefaultCommunicationTimeouts> 接口，从而减少通过长时间占用资源来实施的拒绝服务 (DOS) 攻击。</span><span class="sxs-lookup"><span data-stu-id="a02b2-144">The <xref:System.ServiceModel.Channels.Binding> class implements the <xref:System.ServiceModel.IDefaultCommunicationTimeouts> interface to mitigate Denial of Service (DOS) attacks that rely on tying up resources for extended intervals of time.</span></span> <span data-ttu-id="a02b2-145">该实现指定打开和关闭连接的通信超时值，以及与接收和发送消息相关联的读写操作的通信超时值。</span><span class="sxs-lookup"><span data-stu-id="a02b2-145">The implementation specifies the communication timeouts values for opening and closing connections and for the reading and writing operations associated with receiving and sending messages.</span></span> <span data-ttu-id="a02b2-146">用于获取和设置这些超时值的属性及其默认值操作总结在下表中。</span><span class="sxs-lookup"><span data-stu-id="a02b2-146">The properties used to get and set these timeouts and their default values operations are summarized in the following table.</span></span>  
  
|<span data-ttu-id="a02b2-147">超时属性</span><span class="sxs-lookup"><span data-stu-id="a02b2-147">Timeout Property</span></span>|<span data-ttu-id="a02b2-148">默认值</span><span class="sxs-lookup"><span data-stu-id="a02b2-148">Default Value</span></span>|  
|----------------------|-------------------|  
|<xref:System.ServiceModel.Channels.Binding.OpenTimeout%2A>|<span data-ttu-id="a02b2-149">1 分钟</span><span class="sxs-lookup"><span data-stu-id="a02b2-149">1 minute</span></span>|  
|<xref:System.ServiceModel.Channels.Binding.CloseTimeout%2A>|<span data-ttu-id="a02b2-150">1 分钟</span><span class="sxs-lookup"><span data-stu-id="a02b2-150">1 minute</span></span>|  
|<xref:System.ServiceModel.Channels.Binding.SendTimeout%2A>|<span data-ttu-id="a02b2-151">1 分钟</span><span class="sxs-lookup"><span data-stu-id="a02b2-151">1 minute</span></span>|  
|<xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>|<span data-ttu-id="a02b2-152">10 分钟</span><span class="sxs-lookup"><span data-stu-id="a02b2-152">10 minutes</span></span>|  
  
 <span data-ttu-id="a02b2-153">通过继承 <xref:System.ServiceModel.Channels.Binding> 创建绑定时，必须重写 <xref:System.ServiceModel.Channels.Binding.CreateBindingElements%2A>。</span><span class="sxs-lookup"><span data-stu-id="a02b2-153">When you create a binding by inheriting from <xref:System.ServiceModel.Channels.Binding>, you must override <xref:System.ServiceModel.Channels.Binding.CreateBindingElements%2A>.</span></span>  
  
 <span data-ttu-id="a02b2-154">此外，还可以定义自己的绑定元素，并将它们插入到前面表中定义的任何层之间。</span><span class="sxs-lookup"><span data-stu-id="a02b2-154">In addition, you can define your own binding elements and insert them between any of the defined layers in the preceding table.</span></span> <span data-ttu-id="a02b2-155">有关更多信息，请参见 <xref:System.ServiceModel.Channels.CustomBinding> 类。</span><span class="sxs-lookup"><span data-stu-id="a02b2-155">For more information, see the <xref:System.ServiceModel.Channels.CustomBinding> class.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEBinding#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebinding/cs/service.cs#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a02b2-156">初始化 <see cref="T:System.ServiceModel.Channels.Binding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a02b2-156">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Binding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Binding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Binding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a02b2-157">使用默认的名称和命名空间初始化 <see cref="T:System.ServiceModel.Channels.Binding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a02b2-157">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Binding" /> class with a default name and namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-158">默认名称是`null`的默认命名空间和http://tempuri.org/。</span><span class="sxs-lookup"><span data-stu-id="a02b2-158">The default name is `null` and the default namespace is http://tempuri.org/.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEBinding#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebinding/cs/service.cs#2)]
 [!code-vb[S_UEBinding#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebinding/vb/service.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Binding (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Binding(System::String ^ name, System::String ^ ns);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a02b2-159">绑定的 <see cref="P:System.ServiceModel.Channels.Binding.Name" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-159">The <see cref="P:System.ServiceModel.Channels.Binding.Name" /> of the binding.</span></span></param>
        <param name="ns"><span data-ttu-id="a02b2-160">绑定的 <see cref="P:System.ServiceModel.Channels.Binding.Namespace" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-160">The <see cref="P:System.ServiceModel.Channels.Binding.Namespace" /> of the binding.</span></span></param>
        <summary><span data-ttu-id="a02b2-161">使用指定的服务绑定初始化 <see cref="T:System.ServiceModel.Channels.Binding" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a02b2-161">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Binding" /> class from a specified binding of the service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-162"><xref:System.ServiceModel.Channels.Binding.Name%2A> 和 <xref:System.ServiceModel.Channels.Binding.Namespace%2A> 结合起来在服务的元数据中唯一标识 <xref:System.ServiceModel.Channels.Binding> 的实例。</span><span class="sxs-lookup"><span data-stu-id="a02b2-162">The <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> together uniquely identify an instance of a <xref:System.ServiceModel.Channels.Binding> in the metadata of the service.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a02b2-163"><paramref name="name" /> 为 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="a02b2-163"><paramref name="name" /> is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a02b2-164"><paramref name="ns" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-164"><paramref name="ns" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a02b2-165">在绑定指定的客户端上生成通道工厂堆栈。</span><span class="sxs-lookup"><span data-stu-id="a02b2-165">Builds the channel factory stack on the client specified by the binding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildChannelFactory(Of TChannel) (ParamArray parameters As Object()) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-166">通道工厂生成的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-166">The type of channel the channel factory produces.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="a02b2-167">为生成的通道工厂指定需求的对象数组。</span><span class="sxs-lookup"><span data-stu-id="a02b2-167">The object array that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="a02b2-168">在客户端上生成通道工厂堆栈，该通道工厂堆栈创建具有指定类型的通道并满足对象数组所指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-168">Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by an object array.</span></span></summary>
        <returns><span data-ttu-id="a02b2-169">一个类型为 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> 的 <paramref name="TChannel" />，它满足集合所指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-169">An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a02b2-170">缺少传输元素或其顺序紊乱，或架构无效，或未指定消息版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-170">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelFactory(Of TChannel) (parameters As BindingParameterCollection) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-171">通道工厂生成的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-171">The type of channel the channel factory produces.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="a02b2-172"><see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />，为生成的通道工厂指定要求。</span><span class="sxs-lookup"><span data-stu-id="a02b2-172">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel factory built.</span></span></param>
        <summary><span data-ttu-id="a02b2-173">在客户端上生成通道工厂堆栈，此通道工厂堆栈创建具有指定类型的通道并满足绑定参数集合所指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-173">Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</span></span></summary>
        <returns><span data-ttu-id="a02b2-174">一个类型为 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> 的 <paramref name="TChannel" />，它满足集合所指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-174">An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a02b2-175">缺少传输元素或其顺序紊乱，或架构无效，或未指定消息版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-175">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BuildChannelListener&lt;TChannel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a02b2-176">在服务上生成通道侦听器，该通道侦听器接受具有指定类型的通道并满足所指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-176">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (params object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (ParamArray parameters As Object()) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-177">通道侦听器接受的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-177">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="a02b2-178">为生成的通道工厂指定需求的对象数组。</span><span class="sxs-lookup"><span data-stu-id="a02b2-178">The object array that specifies requirements for the channel factory built.</span></span></param>
        <summary><span data-ttu-id="a02b2-179">在服务上生成通道侦听器，该通道侦听器接受具有指定类型的通道并满足所指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-179">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="a02b2-180">一个类型为 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 的 <paramref name="TChannel" />，它满足指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-180">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a02b2-181">缺少传输元素或其顺序紊乱，或架构无效，或未指定消息版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-181">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (parameters As BindingParameterCollection) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-182">通道侦听器接受的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-182">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="a02b2-183">为生成的通道侦听器指定要求的 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-183">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</span></span></param>
        <summary><span data-ttu-id="a02b2-184">在服务上生成通道侦听器，该通道侦听器接受具有指定类型的通道并满足绑定参数集合所指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-184">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified by a collection of binding parameters.</span></span></summary>
        <returns><span data-ttu-id="a02b2-185">一个类型为 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 的 <paramref name="TChannel" />，它满足指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-185">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a02b2-186">缺少传输元素或其顺序紊乱，或架构无效，或未指定消息版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-186">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUriBaseAddress, string listenUriRelativeAddress, params object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUriBaseAddress, string listenUriRelativeAddress, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (listenUriBaseAddress As Uri, listenUriRelativeAddress As String, ParamArray parameters As Object()) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUriBaseAddress, System::String ^ listenUriRelativeAddress, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenUriBaseAddress" Type="System.Uri" />
        <Parameter Name="listenUriRelativeAddress" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-187">通道侦听器接受的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-187">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="listenUriBaseAddress"><span data-ttu-id="a02b2-188">提供服务侦听基址的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-188">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</span></span></param>
        <param name="listenUriRelativeAddress"><span data-ttu-id="a02b2-189">相对于服务侦听基址的地址。</span><span class="sxs-lookup"><span data-stu-id="a02b2-189">The address, relative to the base address, on which the service listens.</span></span></param>
        <param name="parameters"><span data-ttu-id="a02b2-190">为生成的通道工厂指定需求的对象数组。</span><span class="sxs-lookup"><span data-stu-id="a02b2-190">The object array that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="a02b2-191">在服务上生成通道侦听器，该通道侦听器接受具有指定类型的通道并满足所指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-191">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="a02b2-192">一个类型为 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 的 <paramref name="TChannel" />，它满足指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-192">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a02b2-193">缺少传输元素或其顺序紊乱，或架构无效，或未指定消息版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-193">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUriBaseAddress, string listenUriRelativeAddress, System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUriBaseAddress, string listenUriRelativeAddress, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (listenUriBaseAddress As Uri, listenUriRelativeAddress As String, parameters As BindingParameterCollection) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUriBaseAddress, System::String ^ listenUriRelativeAddress, System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenUriBaseAddress" Type="System.Uri" />
        <Parameter Name="listenUriRelativeAddress" Type="System.String" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-194">通道侦听器接受的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-194">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="listenUriBaseAddress"><span data-ttu-id="a02b2-195">提供服务侦听基址的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-195">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</span></span></param>
        <param name="listenUriRelativeAddress"><span data-ttu-id="a02b2-196">相对于服务侦听基址的地址。</span><span class="sxs-lookup"><span data-stu-id="a02b2-196">The address, relative to the base address, on which the service listens.</span></span></param>
        <param name="parameters"><span data-ttu-id="a02b2-197">为生成的通道侦听器指定要求的 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-197">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</span></span></param>
        <summary><span data-ttu-id="a02b2-198">在服务上生成通道侦听器，该通道侦听器接受具有指定类型的通道并满足所指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-198">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="a02b2-199">一个类型为 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 的 <paramref name="TChannel" />，它满足指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-199">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a02b2-200">缺少传输元素或其顺序紊乱，或架构无效，或未指定消息版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-200">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUriBaseAddress, params object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUriBaseAddress, object[] parameters) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (listenUriBaseAddress As Uri, ParamArray parameters As Object()) As IChannelListener(Of TChannel)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUriBaseAddress, ... cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUri, params object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUri, object[] parameters) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (listenUri As Uri, ParamArray parameters As Object()) As IChannelListener(Of TChannel)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUri, ... cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenUriBaseAddress" Type="System.Uri" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2" />
        <Parameter Name="listenUri" Type="System.Uri" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Object[]" Index="1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-201">通道侦听器接受的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-201">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="listenUriBaseAddress">To be added.</param>
        <param name="listenUri">To be added.</param>
        <param name="parameters"><span data-ttu-id="a02b2-202">为生成的通道工厂指定需求的对象数组。</span><span class="sxs-lookup"><span data-stu-id="a02b2-202">The object array that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="a02b2-203">在服务上生成通道侦听器，该通道侦听器接受具有指定类型的通道并满足所指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-203">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="a02b2-204">一个类型为 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 的 <paramref name="TChannel" />，它满足指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-204">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a02b2-205">缺少传输元素或其顺序紊乱，或架构无效，或未指定消息版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-205">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUriBaseAddress, System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUriBaseAddress, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (listenUriBaseAddress As Uri, parameters As BindingParameterCollection) As IChannelListener(Of TChannel)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUriBaseAddress, System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUri, System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUri, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (listenUri As Uri, parameters As BindingParameterCollection) As IChannelListener(Of TChannel)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUri, System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenUriBaseAddress" Type="System.Uri" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2" />
        <Parameter Name="listenUri" Type="System.Uri" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" Index="1" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-206">通道侦听器接受的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-206">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="listenUriBaseAddress">To be added.</param>
        <param name="listenUri">To be added.</param>
        <param name="parameters"><span data-ttu-id="a02b2-207">为生成的通道侦听器指定要求的 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-207">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</span></span></param>
        <summary><span data-ttu-id="a02b2-208">在服务上生成通道侦听器，该通道侦听器接受具有指定类型的通道并满足所指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-208">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="a02b2-209">一个类型为 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 的 <paramref name="TChannel" />，它满足指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-209">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a02b2-210">缺少传输元素或其顺序紊乱，或架构无效，或未指定消息版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-210">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUriBaseAddress, string listenUriRelativeAddress, System.ServiceModel.Description.ListenUriMode listenUriMode, params object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUriBaseAddress, string listenUriRelativeAddress, valuetype System.ServiceModel.Description.ListenUriMode listenUriMode, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUriBaseAddress, System::String ^ listenUriRelativeAddress, System::ServiceModel::Description::ListenUriMode listenUriMode, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenUriBaseAddress" Type="System.Uri" />
        <Parameter Name="listenUriRelativeAddress" Type="System.String" />
        <Parameter Name="listenUriMode" Type="System.ServiceModel.Description.ListenUriMode" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-211">通道侦听器接受的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-211">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="listenUriBaseAddress"><span data-ttu-id="a02b2-212">提供服务侦听基址的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-212">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</span></span></param>
        <param name="listenUriRelativeAddress"><span data-ttu-id="a02b2-213">相对于服务侦听基址的地址。</span><span class="sxs-lookup"><span data-stu-id="a02b2-213">The address, relative to the base address, on which the service listens.</span></span></param>
        <param name="listenUriMode"><span data-ttu-id="a02b2-214"><see cref="T:System.ServiceModel.Description.ListenUriMode" /> 的一个值，指示传输是必须确保提供给服务侦听的 URI 唯一，还是严格按照所提供的内容使用。</span><span class="sxs-lookup"><span data-stu-id="a02b2-214">A value of the <see cref="T:System.ServiceModel.Description.ListenUriMode" /> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.</span></span></param>
        <param name="parameters"><span data-ttu-id="a02b2-215">为生成的通道工厂指定需求的对象数组。</span><span class="sxs-lookup"><span data-stu-id="a02b2-215">The object array that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="a02b2-216">在服务上生成通道侦听器，该通道侦听器接受具有指定类型的通道并满足所指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-216">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="a02b2-217">一个类型为 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 的 <paramref name="TChannel" />，它满足指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-217">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a02b2-218">缺少传输元素或其顺序紊乱，或架构无效，或未指定消息版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-218">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (Uri listenUriBaseAddress, string listenUriRelativeAddress, System.ServiceModel.Description.ListenUriMode listenUriMode, System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.Uri listenUriBaseAddress, string listenUriRelativeAddress, valuetype System.ServiceModel.Description.ListenUriMode listenUriMode, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(Uri ^ listenUriBaseAddress, System::String ^ listenUriRelativeAddress, System::ServiceModel::Description::ListenUriMode listenUriMode, System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="listenUriBaseAddress" Type="System.Uri" />
        <Parameter Name="listenUriRelativeAddress" Type="System.String" />
        <Parameter Name="listenUriMode" Type="System.ServiceModel.Description.ListenUriMode" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-219">通道侦听器接受的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-219">The type of channel the channel listener accepts.</span></span></typeparam>
        <param name="listenUriBaseAddress"><span data-ttu-id="a02b2-220">提供服务侦听基址的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-220">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</span></span></param>
        <param name="listenUriRelativeAddress"><span data-ttu-id="a02b2-221">相对于服务侦听基址的地址。</span><span class="sxs-lookup"><span data-stu-id="a02b2-221">The address, relative to the base address, on which the service listens.</span></span></param>
        <param name="listenUriMode"><span data-ttu-id="a02b2-222"><see cref="T:System.ServiceModel.Description.ListenUriMode" /> 的一个值，指示传输是必须确保提供给服务侦听的 URI 唯一，还是严格按照所提供的内容使用。</span><span class="sxs-lookup"><span data-stu-id="a02b2-222">A value of the <see cref="T:System.ServiceModel.Description.ListenUriMode" /> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.</span></span></param>
        <param name="parameters"><span data-ttu-id="a02b2-223">为生成的通道侦听器指定要求的 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-223">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</span></span></param>
        <summary><span data-ttu-id="a02b2-224">在服务上生成通道侦听器，该通道侦听器接受具有指定类型的通道并满足所指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-224">Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</span></span></summary>
        <returns><span data-ttu-id="a02b2-225">一个类型为 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 的 <paramref name="TChannel" />，它满足指定的功能。</span><span class="sxs-lookup"><span data-stu-id="a02b2-225">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a02b2-226">缺少传输元素或其顺序紊乱，或架构无效，或未指定消息版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-226">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a02b2-227">返回一个值，该值指示当前绑定是否可以在客户端上生成满足某些特定条件的通道工厂堆栈。</span><span class="sxs-lookup"><span data-stu-id="a02b2-227">Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies some specific criteria.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-228">如果要在实际生成工厂之前检查是否可以为提供的 `TChannel` 生成 `context` 类型通道的通道工厂，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a02b2-228">Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to actually build the factory.</span></span> <span data-ttu-id="a02b2-229">或者，通过调用 <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> 来生成通道工厂，并捕捉无法生成时所生成的异常。</span><span class="sxs-lookup"><span data-stu-id="a02b2-229">Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public bool CanBuildChannelFactory&lt;TChannel&gt; (params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanBuildChannelFactory&lt;TChannel&gt;(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CanBuildChannelFactory(Of TChannel) (ParamArray parameters As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; bool CanBuildChannelFactory(... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-230">要为其进行工厂测试的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-230">The type of channel for which the factory is being tested.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="a02b2-231">为生成的通道工厂指定需求的对象数组。</span><span class="sxs-lookup"><span data-stu-id="a02b2-231">The object array that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="a02b2-232">返回一个值，该值指示当前绑定是否可以在客户端上生成满足对象数组所指定的需求的通道工厂堆栈。</span><span class="sxs-lookup"><span data-stu-id="a02b2-232">Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the requirements specified by an object array.</span></span></summary>
        <returns>
          <span data-ttu-id="a02b2-233">如果可以在客户端上生成指定的通道工厂堆栈，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-233"><see langword="true" /> if the specified channel factory stack can be build on the client; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-234">如果要在实际生成工厂之前检查是否可以为提供的 `TChannel` 生成 `parameters` 类型通道的通道工厂，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a02b2-234">Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the factory.</span></span> <span data-ttu-id="a02b2-235">或者，通过调用 <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.Object%5B%5D%29> 来生成通道工厂，并捕捉无法生成时所生成的异常。</span><span class="sxs-lookup"><span data-stu-id="a02b2-235">Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.Object%5B%5D%29> and catch the exception generated if it cannot be built.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelFactory(Of TChannel) (parameters As BindingParameterCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-236">要为其进行工厂测试的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-236">The type of channel for which the factory is being tested.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="a02b2-237">为生成的通道工厂指定要求的 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-237">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="a02b2-238">返回一个值，该值指示当前绑定是否可以在客户端上生成满足指定绑定参数集合的通道工厂堆栈。</span><span class="sxs-lookup"><span data-stu-id="a02b2-238">Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the collection of binding parameters specified.</span></span></summary>
        <returns>
          <span data-ttu-id="a02b2-239">如果可以在客户端上生成指定的通道工厂堆栈，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-239"><see langword="true" /> if the specified channel factory stack can be build on the client; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-240">如果要在实际生成工厂之前检查是否可以为提供的 `TChannel` 生成 `parameters` 类型通道的通道工厂，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a02b2-240">Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the factory.</span></span> <span data-ttu-id="a02b2-241">或者，通过调用 <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> 来生成通道工厂，并捕捉无法生成时所生成的异常。</span><span class="sxs-lookup"><span data-stu-id="a02b2-241">Alternatively, try to build the channel factory by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelFactory%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> and catch the exception generated if it cannot be built.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a02b2-242">返回一个值，该值指示当前绑定是否可以在服务上生成满足某些指定条件的通道侦听器堆栈。</span><span class="sxs-lookup"><span data-stu-id="a02b2-242">Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies some specified criteria.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public bool CanBuildChannelListener&lt;TChannel&gt; (params object[] parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (ParamArray parameters As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel bool CanBuildChannelListener(... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-243">要为其进行侦听器测试的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-243">The type of channel for which the listener is being tested.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="a02b2-244">为生成的通道工厂指定需求的对象数组。</span><span class="sxs-lookup"><span data-stu-id="a02b2-244">The object array that specifies requirements for the channel factory that is built.</span></span></param>
        <summary><span data-ttu-id="a02b2-245">返回一个值，该值指示当前绑定是否可以在服务上生成满足对象数组所指定的条件的通道侦听器堆栈。</span><span class="sxs-lookup"><span data-stu-id="a02b2-245">Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the criteria specified in an array of objects.</span></span></summary>
        <returns>
          <span data-ttu-id="a02b2-246">如果可以在服务上生成指定的通道侦听器堆栈，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-246"><see langword="true" /> if the specified channel listener stack can be build on the service; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-247">如果要在实际生成侦听器之前检查是否可以为提供的 `TChannel` 生成 `parameters` 类型通道的通道侦听器，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a02b2-247">Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the listener.</span></span> <span data-ttu-id="a02b2-248">或者，通过调用 <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.Object%5B%5D%29> 来生成通道侦听器，并捕捉无法生成时所生成的异常。</span><span class="sxs-lookup"><span data-stu-id="a02b2-248">Alternatively, try to build the channel listener by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.Object%5B%5D%29> and catch the exception generated if it cannot be built.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (parameters As BindingParameterCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual bool CanBuildChannelListener(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a02b2-249">要为其进行侦听器测试的通道类型。</span><span class="sxs-lookup"><span data-stu-id="a02b2-249">The type of channel for which the listener is being tested.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="a02b2-250">为生成的通道侦听器指定要求的 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-250">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</span></span></param>
        <summary><span data-ttu-id="a02b2-251">返回一个值，该值指示当前绑定是否可以在服务上生成满足指定绑定参数集合的通道侦听器堆栈。</span><span class="sxs-lookup"><span data-stu-id="a02b2-251">Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the collection of binding parameters specified.</span></span></summary>
        <returns>
          <span data-ttu-id="a02b2-252">如果可以在服务上生成指定的通道侦听器堆栈，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-252"><see langword="true" /> if the specified channel listener stack can be build on the service; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-253">如果要在实际生成侦听器之前检查是否可以为提供的 `TChannel` 生成 `parameters` 类型通道的通道侦听器，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a02b2-253">Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the binding `parameters` specified before attempting to actually build the listener.</span></span> <span data-ttu-id="a02b2-254">或者，通过调用 <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> 来生成通道侦听器，并捕捉无法生成时所生成的异常。</span><span class="sxs-lookup"><span data-stu-id="a02b2-254">Alternatively, try to build the channel listener by calling <xref:System.ServiceModel.Channels.Binding.BuildChannelListener%60%601%28System.ServiceModel.Channels.BindingParameterCollection%29> and catch the exception generated if it cannot be built.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan CloseTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.CloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CloseTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b2-255">获取或设置在传输引发异常之前可用于关闭连接的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="a02b2-255">Gets or sets the interval of time provided for a connection to close before the transport raises an exception.</span></span></summary>
        <value><span data-ttu-id="a02b2-256"><see cref="T:System.TimeSpan" />，指定在超时前必须完成关闭操作的时间。默认值为 1 分钟。</span><span class="sxs-lookup"><span data-stu-id="a02b2-256">The <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out. The default value is 1 minute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-257">此属性的值由绑定的工厂所生成的通道和侦听器使用。</span><span class="sxs-lookup"><span data-stu-id="a02b2-257">The value of this property is used by the channels and listeners produced by the factories of the binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a02b2-258">值小于零或太大。</span><span class="sxs-lookup"><span data-stu-id="a02b2-258">The value is less than zero or too large.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a02b2-259">在派生类中重写时，创建一个集合，该集合包含属于当前绑定的绑定元素。</span><span class="sxs-lookup"><span data-stu-id="a02b2-259">When overridden in a derived class, creates a collection that contains the binding elements that are part of the current binding.</span></span></summary>
        <returns><span data-ttu-id="a02b2-260">一个类型为 <see cref="T:System.Collections.Generic.ICollection`1" /> 的 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 对象，它以正确的顺序包含当前绑定对象的绑定元素。</span><span class="sxs-lookup"><span data-stu-id="a02b2-260">A <see cref="T:System.Collections.Generic.ICollection`1" /> object of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains the binding elements from the current binding object in the correct order.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-261">这些元素不应引用 <xref:System.ServiceModel.Channels.Binding> 对象所使用的任何内部元素。</span><span class="sxs-lookup"><span data-stu-id="a02b2-261">The elements should not reference any internal elements that the <xref:System.ServiceModel.Channels.Binding> object uses.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingParameterCollection parameters) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty(Of T As Class) (parameters As BindingParameterCollection) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetProperty(System::ServiceModel::Channels::BindingParameterCollection ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="a02b2-262">方法正在查询的类型化对象。</span><span class="sxs-lookup"><span data-stu-id="a02b2-262">The typed object for which the method is querying.</span></span></typeparam>
        <param name="parameters"><span data-ttu-id="a02b2-263">为生成的通道侦听器指定要求的 <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-263">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</span></span></param>
        <summary><span data-ttu-id="a02b2-264">从绑定堆栈的适当层返回所请求的类型化对象（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="a02b2-264">Returns a typed object requested, if present, from the appropriate layer in the binding stack.</span></span></summary>
        <returns><span data-ttu-id="a02b2-265">如果存在，则为所请求的类型化对象 <paramref name="T" />，如果不存在，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-265">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-266">如果某个层支持返回所请求的对象，则该层会返回对象。</span><span class="sxs-lookup"><span data-stu-id="a02b2-266">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="a02b2-267">如果不支持，则该层会将调用委托给堆栈中的下一层。</span><span class="sxs-lookup"><span data-stu-id="a02b2-267">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="a02b2-268">如果到达堆栈底部仍然没有层支持所请求的对象，则该方法返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="a02b2-268">If it gets to the bottom of the stack and no layer supported the requested object, then the method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageVersion MessageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b2-269">获取由绑定所配置的客户端和服务使用的消息版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-269">Gets the message version used by clients and services configured with the binding.</span></span></summary>
        <value><span data-ttu-id="a02b2-270">由绑定所配置的客户端和服务使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-270">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by clients and services configured with the binding.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b2-271">获取或设置绑定的名称。</span><span class="sxs-lookup"><span data-stu-id="a02b2-271">Gets or sets the name of the binding.</span></span></summary>
        <value><span data-ttu-id="a02b2-272">绑定的名称。</span><span class="sxs-lookup"><span data-stu-id="a02b2-272">The name of the binding.</span></span> <span data-ttu-id="a02b2-273">默认的名称为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-273">The default name is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-274">每个 <xref:System.ServiceModel.Channels.Binding> 实例都具有 <xref:System.ServiceModel.Channels.Binding.Name%2A> 和 <xref:System.ServiceModel.Channels.Binding.Namespace%2A>，它们结合起来在服务的元数据中唯一标识绑定的用户名。</span><span class="sxs-lookup"><span data-stu-id="a02b2-274">Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service.</span></span>  
  
 <span data-ttu-id="a02b2-275">绑定的这一用户名不同于协议名称的规范，后者由 <xref:System.ServiceModel.Channels.Binding.Scheme%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="a02b2-275">This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property.</span></span> <span data-ttu-id="a02b2-276">例如，如果要添加更多 HTTP 绑定，可以将它们命名为任何名称，并可将其所有架构都设置为“http”。</span><span class="sxs-lookup"><span data-stu-id="a02b2-276">If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to "http".</span></span> <span data-ttu-id="a02b2-277">不存在基于 <xref:System.ServiceModel.Channels.Binding.Scheme%2A> 的固有应用程序或计算机调度。</span><span class="sxs-lookup"><span data-stu-id="a02b2-277">There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>.</span></span> <span data-ttu-id="a02b2-278">这样，就避免了一个常见问题，即无法为已知协议注册附加处理程序。</span><span class="sxs-lookup"><span data-stu-id="a02b2-278">So you avoid the common problem of being unable to register additional handlers for well-known protocols.</span></span> <span data-ttu-id="a02b2-279">通过给每个版本提供不同的名称，还可以轻松地并行使用一个绑定的多个版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-279">You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a02b2-280">该值不能设置为 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="a02b2-280">The value set cannot be <see langword="null" /> or an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b2-281">获取或设置绑定的 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="a02b2-281">Gets or sets the XML namespace of the binding.</span></span></summary>
        <value><span data-ttu-id="a02b2-282">绑定的 XML 命名空间。</span><span class="sxs-lookup"><span data-stu-id="a02b2-282">The XML namespace of the binding.</span></span> <span data-ttu-id="a02b2-283">默认值为“http://tempuri.org/”。</span><span class="sxs-lookup"><span data-stu-id="a02b2-283">The default value is "http://tempuri.org/".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-284">每个 <xref:System.ServiceModel.Channels.Binding> 实例都具有 <xref:System.ServiceModel.Channels.Binding.Name%2A> 和 <xref:System.ServiceModel.Channels.Binding.Namespace%2A>，它们结合起来在服务的元数据中唯一标识绑定的用户名。</span><span class="sxs-lookup"><span data-stu-id="a02b2-284">Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service.</span></span>  
  
 <span data-ttu-id="a02b2-285">绑定的这一用户名不同于协议名称的规范，后者由 <xref:System.ServiceModel.Channels.Binding.Scheme%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="a02b2-285">This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property.</span></span> <span data-ttu-id="a02b2-286">例如，如果要添加更多 HTTP 绑定，可以将它们命名为任何名称，并可将其所有架构都设置为“http”。</span><span class="sxs-lookup"><span data-stu-id="a02b2-286">If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to "http".</span></span> <span data-ttu-id="a02b2-287">不存在基于 <xref:System.ServiceModel.Channels.Binding.Scheme%2A> 的固有应用程序或计算机调度。</span><span class="sxs-lookup"><span data-stu-id="a02b2-287">There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>.</span></span> <span data-ttu-id="a02b2-288">这样，就避免了一个常见问题，即无法为已知协议注册附加处理程序。</span><span class="sxs-lookup"><span data-stu-id="a02b2-288">So you avoid the common problem of being unable to register additional handlers for well-known protocols.</span></span> <span data-ttu-id="a02b2-289">通过给每个版本提供不同的名称，还可以轻松地并行使用一个绑定的多个版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-289">You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a02b2-290">该值不能设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-290">The value set cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OpenTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan OpenTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan OpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.OpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property OpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan OpenTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b2-291">获取或设置在传输引发异常之前可用于打开连接的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="a02b2-291">Gets or sets the interval of time provided for a connection to open before the transport raises an exception.</span></span></summary>
        <value><span data-ttu-id="a02b2-292"><see cref="T:System.TimeSpan" />，指定在超时前必须完成打开操作的时间。默认值为 1 分钟。</span><span class="sxs-lookup"><span data-stu-id="a02b2-292">The <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out. The default value is 1 minute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-293">此属性的值由绑定的工厂所生成的通道和侦听器使用。</span><span class="sxs-lookup"><span data-stu-id="a02b2-293">The value of this property is used by the channels and listeners produced by the factories of the binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a02b2-294">值小于零或太大。</span><span class="sxs-lookup"><span data-stu-id="a02b2-294">The value is less than zero or too large.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ReceiveTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b2-295">获取或设置连接在撤消之前保持非活动状态的最大时间间隔，在此时间间隔内未接收任何应用程序消息。</span><span class="sxs-lookup"><span data-stu-id="a02b2-295">Gets or sets the interval of time that a connection can remain inactive, during which no application messages are received, before it is dropped.</span></span></summary>
        <value><span data-ttu-id="a02b2-296">一个 <see cref="T:System.TimeSpan" />，指定在超时前应用程序接收消息的时间。默认值为 10 分钟。</span><span class="sxs-lookup"><span data-stu-id="a02b2-296">The <see cref="T:System.TimeSpan" /> that specifies how long the application has to receive a message before timing out. The default value is 10 minute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-297">使用可靠会话时，必须同时满足两个不同的非活动计时器，才能使连接处于活动状态。</span><span class="sxs-lookup"><span data-stu-id="a02b2-297">When using a reliable session, there are two different inactivity timers that must be satisfied to keep the connection alive.</span></span> <span data-ttu-id="a02b2-298">如果任一非活动计时器结束计时，则将断开连接。</span><span class="sxs-lookup"><span data-stu-id="a02b2-298">If either of these inactivity timers goes off, then the connection is dropped.</span></span>  
  
-   <span data-ttu-id="a02b2-299">第一个非活动计时器为可靠会话计时器，称为 <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>。</span><span class="sxs-lookup"><span data-stu-id="a02b2-299">The first inactivity timer is on the reliable session and is called the <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>.</span></span> <span data-ttu-id="a02b2-300">如果在超时期限内没有收到任何应用程序消息或基础结构消息，此非活动计时器将激发。</span><span class="sxs-lookup"><span data-stu-id="a02b2-300">This inactivity timer fires if no messages, either application or infrastructure, are received within the timeout period.</span></span> <span data-ttu-id="a02b2-301">基础结构消息是指为了通道堆栈中的协议之一（例如，保持活动状态或确认，而并非包含应用程序数据）而生成的消息。</span><span class="sxs-lookup"><span data-stu-id="a02b2-301">An infrastructure message is a message that is generated for the purpose of one of the protocols in the channel stack, such as a keep alive or an acknowledgment, rather than containing application data.</span></span>  
  
-   <span data-ttu-id="a02b2-302">第二个非活动计时器为服务计时器，它使用绑定的 <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> 设置。</span><span class="sxs-lookup"><span data-stu-id="a02b2-302">The second inactivity timer is on the service and uses the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> setting of the binding.</span></span> <span data-ttu-id="a02b2-303">如果在超时期限内没有收到任何应用程序消息，此非活动计时器将激发。</span><span class="sxs-lookup"><span data-stu-id="a02b2-303">This inactivity timer fires if no application messages are received within the timeout period.</span></span> <span data-ttu-id="a02b2-304">例如，它可以指定服务器关闭会话所用的通道前，客户端向服务器发送至少一个消息所需的最长时间。</span><span class="sxs-lookup"><span data-stu-id="a02b2-304">This specifies, for example, the maximum time a client may take to send at least one message to the server before the server will close the channel used by a session.</span></span> <span data-ttu-id="a02b2-305">此行为确保了客户端不能无限期地占用服务器资源。</span><span class="sxs-lookup"><span data-stu-id="a02b2-305">This behavior ensures that clients cannot hold on to server resources for arbitrary long periods.</span></span>  
  
 <span data-ttu-id="a02b2-306">由于任一非活动计时器激发都会断开连接，因此单纯增大 <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>（当其大于 <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> 时）不起任何作用。</span><span class="sxs-lookup"><span data-stu-id="a02b2-306">Since the connection is dropped if either inactivity timer fires, increasing <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> once it is greater than <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> has no effect.</span></span> <span data-ttu-id="a02b2-307">这两个超时时间的默认值均为 10 分钟，因此在使用可靠会话时，必须同时增大这两个超时时间才会起作用。</span><span class="sxs-lookup"><span data-stu-id="a02b2-307">The default for both of these timeouts is 10 minutes, so you always have to increase both of them to make a difference when using a reliable session.</span></span>  
  
 <span data-ttu-id="a02b2-308">如果对绑定或通道启用了事务流，执行操作所需的时间可能会比指定的超时时间长。</span><span class="sxs-lookup"><span data-stu-id="a02b2-308">If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout.</span></span> <span data-ttu-id="a02b2-309">在这些情况下，将会因为超时过期而导致操作失败，事务也将随之中止。</span><span class="sxs-lookup"><span data-stu-id="a02b2-309">In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.</span></span>  
  
 <span data-ttu-id="a02b2-310">当将用于安全会话，<xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A>的绑定上设置的值还用作会话超时。</span><span class="sxs-lookup"><span data-stu-id="a02b2-310">When security is used with sessions, the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> value set on the binding is also used as the session timeout.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a02b2-311">值小于零或太大。</span><span class="sxs-lookup"><span data-stu-id="a02b2-311">The value is less than zero or too large.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public abstract string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b2-312">在派生类中实现时，设置 URI 架构，此架构指定由绑定生成的通道和侦听器工厂所使用的传输。</span><span class="sxs-lookup"><span data-stu-id="a02b2-312">When implemented in a derived class, sets the URI scheme that specifies the transport used by the channel and listener factories that are built by the bindings.</span></span></summary>
        <value><span data-ttu-id="a02b2-313">由当前绑定生成的工厂所创建的通道或侦听器所使用的 URI 架构。</span><span class="sxs-lookup"><span data-stu-id="a02b2-313">The URI scheme that is used by the channels or listeners that are created by the factories built by the current binding.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-314">绑定的这一用户名不同于协议名称的规范，后者由 <xref:System.ServiceModel.Channels.Binding.Scheme%2A> 属性指定。</span><span class="sxs-lookup"><span data-stu-id="a02b2-314">This user name for the binding is distinct from the specification of the protocol name, which is specified by the <xref:System.ServiceModel.Channels.Binding.Scheme%2A> property.</span></span> <span data-ttu-id="a02b2-315">每个 <xref:System.ServiceModel.Channels.Binding> 实例都具有 <xref:System.ServiceModel.Channels.Binding.Name%2A> 和 <xref:System.ServiceModel.Channels.Binding.Namespace%2A>，它们结合起来在服务的元数据中唯一标识绑定的用户名。</span><span class="sxs-lookup"><span data-stu-id="a02b2-315">Each instance of a <xref:System.ServiceModel.Channels.Binding> has a <xref:System.ServiceModel.Channels.Binding.Name%2A> and <xref:System.ServiceModel.Channels.Binding.Namespace%2A> that together uniquely identify the user name for the binding in the metadata of the service.</span></span> <span data-ttu-id="a02b2-316">例如，如果要添加更多 HTTP 绑定，可以将它们命名为任何名称，并可将其所有架构都设置为“http”。</span><span class="sxs-lookup"><span data-stu-id="a02b2-316">If you want to add more HTTP bindings, for example, you can name them whatever you want and set all of their schemes to "http".</span></span> <span data-ttu-id="a02b2-317">不存在基于 <xref:System.ServiceModel.Channels.Binding.Scheme%2A> 的固有应用程序或计算机调度。</span><span class="sxs-lookup"><span data-stu-id="a02b2-317">There is no inherent application or machine dispatch based on the <xref:System.ServiceModel.Channels.Binding.Scheme%2A>.</span></span> <span data-ttu-id="a02b2-318">这样，就避免了一个常见问题，即无法为已知协议注册附加处理程序。</span><span class="sxs-lookup"><span data-stu-id="a02b2-318">So you avoid the common problem of being unable to register additional handlers for well-known protocols.</span></span> <span data-ttu-id="a02b2-319">通过给每个版本提供不同的名称，还可以轻松地并行使用一个绑定的多个版本。</span><span class="sxs-lookup"><span data-stu-id="a02b2-319">You can also easily work with multiple versions of a binding side-by-side by giving each version a different name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Binding.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SendTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a02b2-320">获取或设置在传输引发异常之前可用于完成写入操作的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="a02b2-320">Gets or sets the interval of time provided for a write operation to complete before the transport raises an exception.</span></span></summary>
        <value><span data-ttu-id="a02b2-321"><see cref="T:System.TimeSpan" />，指定在超时前必须完成写入操作的时间。默认值为 1 分钟。</span><span class="sxs-lookup"><span data-stu-id="a02b2-321">The <see cref="T:System.TimeSpan" /> that specifies how long the write operation has to complete before timing out. The default value is 1 minute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a02b2-322">如果对绑定或通道启用了事务流，执行操作所需的时间可能会比指定的超时时间长。</span><span class="sxs-lookup"><span data-stu-id="a02b2-322">If transaction flow is enabled on the binding or the channel, the operation may take longer to execute than the specified timeout.</span></span> <span data-ttu-id="a02b2-323">在这些情况下，将会因为超时过期而导致操作失败，事务也将随之中止。</span><span class="sxs-lookup"><span data-stu-id="a02b2-323">In these circumstances the operation fails due to the expired timeout and the transaction aborts appropriately.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a02b2-324">值小于零或太大。</span><span class="sxs-lookup"><span data-stu-id="a02b2-324">The value is less than zero or too large.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeName">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.ShouldSerializeName" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeName () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a02b2-325">返回是否应序列化绑定名称。</span><span class="sxs-lookup"><span data-stu-id="a02b2-325">Returns whether the name of the binding should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="a02b2-326">如果应序列化绑定名称，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-326"><see langword="true" /> if the binding name should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeNamespace">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeNamespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeNamespace();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a02b2-327">返回是否应序列化绑定命名空间。</span><span class="sxs-lookup"><span data-stu-id="a02b2-327">Returns whether the namespace of the binding should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="a02b2-328">如果应序列化绑定命名空间，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a02b2-328"><see langword="true" /> if the binding namespace should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>