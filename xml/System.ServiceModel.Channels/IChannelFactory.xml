<Type Name="IChannelFactory" FullName="System.ServiceModel.Channels.IChannelFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8da4edafe35103a0f5bb6a6fce208dcbc5cbd565" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannelFactory : System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelFactory implements class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelFactory&#xA;Implements ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannelFactory : System::ServiceModel::ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2c8a0-101">定义必须由通道工厂实现来生成通道的接口。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c8a0-101">Defines the interface that must be implemented by a channel factory to produce channels.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c8a0-102"><xref:System.ServiceModel.Channels.IChannelFactory> 接口表示通道工厂的基接口。</span><span class="sxs-lookup"><span data-stu-id="2c8a0-102">The <xref:System.ServiceModel.Channels.IChannelFactory> interface represents the base interface for channel factories.</span></span>  
  
 <span data-ttu-id="2c8a0-103">通道工厂及其关联通道通常由启动通信的服务的客户端使用。</span><span class="sxs-lookup"><span data-stu-id="2c8a0-103">Channel factories and their associated channels are generally used by the clients of a service that initiate communication.</span></span> <span data-ttu-id="2c8a0-104">与此相反，实现 <xref:System.ServiceModel.Channels.IChannelListener> 接口的侦听器工厂及其关联侦听器则提供一些机制用于接受通道，与服务的通信是通过这些通道启动的。</span><span class="sxs-lookup"><span data-stu-id="2c8a0-104">Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> interface and their associated listeners, by contrast, provide the mechanisms used to accept the channels through which communications with a service is initiated.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelFactory.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetProperty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="2c8a0-105">方法正在查询的类型化对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c8a0-105">The typed object for which the method is querying.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="2c8a0-106">从通道堆栈的适当层返回所请求的类型化对象（如果存在）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c8a0-106">Returns a typed object requested, if present, from the appropriate layer in the channel stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c8a0-107">如果存在，则返回所请求的类型化对象 <paramref name="T" />，如果不存在，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c8a0-107">The typed object <paramref name="T" /> requested, if it is present, or <see langword="null" /> if it is not.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c8a0-108">使用此方法可请求从通道堆栈的适当层返回一个类型化对象，如用于设置属性或获取状态的接口。</span><span class="sxs-lookup"><span data-stu-id="2c8a0-108">Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.</span></span> <span data-ttu-id="2c8a0-109">如果某个层支持返回所请求的对象，则该层会返回对象。</span><span class="sxs-lookup"><span data-stu-id="2c8a0-109">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="2c8a0-110">如果不支持，则该层会将调用委托给堆栈中的下一层。</span><span class="sxs-lookup"><span data-stu-id="2c8a0-110">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="2c8a0-111">如果到达堆栈底部仍然没有通道层支持所请求的对象，则该方法返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="2c8a0-111">If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.</span></span>  
  
 <span data-ttu-id="2c8a0-112">任何时候要实现通道工厂，都必须实现 <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A>。</span><span class="sxs-lookup"><span data-stu-id="2c8a0-112">You must implement <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> whenever you implement a channel factory.</span></span> <span data-ttu-id="2c8a0-113">要沿通道工厂堆栈进行通信，<xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> 是一种极好的方式，它无需知道下面有哪些通道工厂，也无需知道上面有哪些通道工厂希望执行查询。</span><span class="sxs-lookup"><span data-stu-id="2c8a0-113"><xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> is an excellent way to communicate information along the channel factory stack without having to know what channel factories are below you, or what channel factories above you are interested in performing queries.</span></span> <span data-ttu-id="2c8a0-114">定义一些接口，供人们查询您所拥有任何相关信息。</span><span class="sxs-lookup"><span data-stu-id="2c8a0-114">Define interfaces for people to query on for any interesting information you have.</span></span> <span data-ttu-id="2c8a0-115">如果不能识别 <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> 的类型参数，则委托给堆栈中的下一个通道工厂，如果要在堆栈底部创建一个新传输通道，则返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="2c8a0-115">Whenever you do not recognize the type argument for <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A>, delegate down to the next channel factory in the stack or return `null` if you are creating a new transport channel at the bottom of the stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>