<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageBuffer.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55c2648b3026de7d8e6a3d49e85245f5145edbdd3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c2648b3026de7d8e6a3d49e85245f5145edbdd3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Represents a memory buffer that stores an entire message for future consumption.</source>
          <target state="translated">表示一个内存缓冲区，该内存缓冲区存储了未来要使用的整个消息。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>The body of a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance can only be consumed or written once.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 实例的正文只可使用或写入一次。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>If you wish to consume a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance more than once, you should use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> class to completely store an entire <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance into memory.</source>
          <target state="translated">如果希望不止一次使用 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 实例，则应该使用 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 类将整个 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 实例全部存储到内存。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance is constructed by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> of a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 实例是通过调用 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> 实例的 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 构造的。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>A new <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> is then created and returned, which assumes ownership of the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> and reads the entire content into memory.</source>
          <target state="translated">然后会创建并返回一个新的 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>，它将获得对 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 的所有权，并将整个内容读取到内存。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>In order to retrieve a copy of a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>, you must call the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>.</source>
          <target state="translated">为了从 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 检索 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 的副本，必须调用 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A&gt;</ph> 的 <ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>This returns an identical copy of the original <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance you provided.</source>
          <target state="translated">这会返回您所提供的原始 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 实例的相同副本。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>You can control the maximum size of the buffer by setting <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A&gt;</ph> to the maximum number of bytes desired.</source>
          <target state="translated">可以通过将 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A&gt;</ph> 设置为所需的最大字节数来控制缓冲区的最大大小。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>This number does not necessarily cover any transient allocations related to building the buffer, or properties attached to the message.</source>
          <target state="translated">这个最大数无需包含任何与生成缓冲区相关的瞬态分配或附加到消息的属性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>You should always close a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.Close%2A&gt;</ph> when finished working with it.</source>
          <target state="translated">每次使用完 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 实例后，您都应该调用 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.Close%2A&gt;</ph> 以关闭该实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>This allows system resources to potentially be freed sooner.</source>
          <target state="translated">这可能会允许更快地释放系统资源。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Special note for Managed C++ users deriving from this class:</source>
          <target state="translated">针对从此类派生的托管 C++ 用户的特别说明：</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
          <target state="translated">将清理代码放入 (On)(Begin)Close（和/或 OnAbort）中，而不是放入析构函数中。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Avoid destructors: they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph></source>
          <target state="translated">避免使用析构函数：它们会导致编译器自动生成 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Avoid non-reference members: they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph></source>
          <target state="translated">避免使用非引用成员：它们可能会导致编译器自动生成 <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Avoid finalizers; but if you include one, you should suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) in order to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
          <target state="translated">避免使用终结器；但如果包含一个终结器，则应该禁止显示生成警告并从 (On)(Begin)Close（和/或 OnAbort）调用 <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> 和终结器本身，以便模拟自动生成的 <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> 行为。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
          <source>Gets the approximate number of bytes consumed by this <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph>.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph> 使用的近似字节数。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
          <source>The approximate number of bytes consumed by this <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph>.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph> 使用的近似字节数。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
          <source>You can control the maximum size of the buffer by setting <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A&gt;</ph> to the maximum number of bytes desired.</source>
          <target state="translated">可以通过将 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A&gt;</ph> 设置为所需的最大字节数来控制缓冲区的最大大小。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
          <source>This number does not necessarily cover any transient allocations related to building the buffer, or properties attached to the message.</source>
          <target state="translated">这个最大数无需包含任何与生成缓冲区相关的瞬态分配或附加到消息的属性。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageBuffer.BufferSize">
          <source>It is not related to the actual size of the message when serialized.</source>
          <target state="translated">进行序列化时，它与消息的实际大小无关。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>Finishes working with the buffer.</source>
          <target state="translated">缓冲区使用完毕。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>You should always close a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.Close%2A&gt;</ph> when finished working with it.</source>
          <target state="translated">每次使用完 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 实例后，您都应该调用 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.Close%2A&gt;</ph> 以关闭该实例。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>This allows system resources to potentially be freed sooner.</source>
          <target state="translated">这可能会允许更快地释放系统资源。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>If you have called <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> to create a message buffer of a message, and inspected the message using <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A&gt;</ph>, you will get a <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> when you attempt to close the buffer using this method.</source>
          <target state="translated">当尝试用此方法关闭缓冲区时，如果已调用 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> 创建了消息的消息缓冲区，并使用 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A&gt;</ph> 检查了消息，则会收到 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>To avoid this problem, you need to recreate the message from the buffer before closing.</source>
          <target state="translated">要避免出现此问题，需要在关闭缓冲区前从缓冲区重新创建消息。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>See the code sample in the Example section for a demonstration of the previous scenario and a way to resolve this problem.</source>
          <target state="translated">有关以前出现的这种情况以及其解决方法的演示，请参见“示例”部分。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>The following example demonstrates how to properly close a message buffer.</source>
          <target state="translated">下面的示例演示如何正确关闭消息缓冲区。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.Close">
          <source>}</source>
          <target state="translated">}</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
          <source>Returns a copy of the original message.</source>
          <target state="translated">返回原始消息的副本。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
          <source>An identical copy of the original <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance you previously provided to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /&gt;</ph> method of a <ph id="ph3">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> instance.</source>
          <target state="translated">一个原始 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> 实例的相同副本，您先前将此实例提供给 <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" /&gt;</ph> 实例的 <ph id="ph3">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
          <source>Calling this method creates an identical copy of the original <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance you previously provided to the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance.</source>
          <target state="translated">调用此方法将创建一个原始 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 实例的相同副本，您先前将此实例提供给 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> 实例的 <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateMessage">
          <source>You can then save the message to a durable storage.</source>
          <target state="translated">然后可以将消息保存到持久存储区中。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object.</source>
          <target state="translated">创建一个用于定位此对象的新 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageBuffer">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
          <target state="translated">如果只想操作消息副本的一部分，请使用此方法。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object.</source>
          <target state="translated">创建一个用于定位此对象的新 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator">
          <source>This method cannot be inherited.</source>
          <target state="translated">不能继承此方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object.</source>
          <target state="translated">用于定位此对象的 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
          <target state="translated">如果只想操作消息副本的一部分，请使用此方法。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32)">
          <source>The location you want the navigator to be positioned on initially.</source>
          <target state="translated">希望导航器最初定位的位置。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object, with the navigator positioned on the node specified.</source>
          <target state="translated">使用位于指定节点上的导航器，创建一个用于定位此对象的新 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object.</source>
          <target state="translated">用于定位此对象的 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32)">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
          <target state="translated">如果只想操作消息副本的一部分，请使用此方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Xml.XmlSpace)">
          <source>A valid <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> space.</source>
          <target state="translated">一个有效的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> 空间。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Xml.XmlSpace)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object, with the specified <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">在指定的 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 范围，创建一个用于定位此对象的新 <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Xml.XmlSpace)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object.</source>
          <target state="translated">用于定位此对象的 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Xml.XmlSpace)">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
          <target state="translated">如果只想操作消息副本的一部分，请使用此方法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)">
          <source>The location you want the navigator to be positioned on initially.</source>
          <target state="translated">希望导航器最初定位的位置。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)">
          <source>A valid <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> space.</source>
          <target state="translated">一个有效的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> 空间。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object, with the navigator positioned on the specified node and <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">使用位于指定节点和 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 范围的导航器，创建一个用于定位此对象的新 <ph id="ph2">&lt;see langword="xml:space" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this object.</source>
          <target state="translated">用于定位此对象的 <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.CreateNavigator(System.Int32,System.Xml.XmlSpace)">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
          <target state="translated">如果只想操作消息副本的一部分，请使用此方法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
          <source>Gets the type of message content stored in this buffer.</source>
          <target state="translated">获取存储在此缓冲区中消息内容的类型。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageBuffer.MessageContentType">
          <source>The type of message content stored in this buffer.</source>
          <target state="translated">存储在此缓冲区中消息内容的类型。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageBuffer" /&gt;</ph> 占用的非托管资源，还可以另外再释放托管资源。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>This method cannot be inherited.</source>
          <target state="translated">不能继承此方法。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>Call this method when you are finished using the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>.</source>
          <target state="translated">使用完 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 后调用此方法。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>This method leaves the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> in an unusable state.</source>
          <target state="translated">此方法使 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>After calling this method, you must release all references to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> was occupying.</source>
          <target state="translated">调用完此方法后，必须释放对 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 的所有引用，这样垃圾回收器才能收回 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 占用的内存。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>Always call this method before you release your last reference to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 的最后一个引用之前，均应调用此方法。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.System#IDisposable#Dispose">
          <source>Otherwise, the resources it is using are not freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否则，在垃圾回收器调用 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 对象的 <ph id="ph2">`Finalize`</ph> 方法之前，不会释放正在使用的资源。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
          <source>An IO stream that the entire content of this buffer is written to.</source>
          <target state="translated">一个 IO 流，此缓冲区中的整个内容都会写入此 IO 流。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
          <source>Writes the entire content of this buffer to the specified IO stream.</source>
          <target state="translated">将此缓冲区中的整个内容写入指定的 IO 流。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
          <source>This function uses a binary encoder instead of a UTF-8 encoder.</source>
          <target state="translated">此功能使用的是二进制编码器，而不是 UTF-8 编码器。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
          <source>Therefore, you cannot directly convert from a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> to a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>.</source>
          <target state="translated">因此，无法直接从 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> 转换到 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageBuffer.WriteMessage(System.IO.Stream)">
          <source>The code in the example section shows how to work around this problem.</source>
          <target state="translated">示例部分的代码演示如何解决这个问题。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>