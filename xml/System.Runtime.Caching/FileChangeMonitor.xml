<Type Name="FileChangeMonitor" FullName="System.Runtime.Caching.FileChangeMonitor">
  <TypeSignature Language="C#" Value="public abstract class FileChangeMonitor : System.Runtime.Caching.ChangeMonitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileChangeMonitor extends System.Runtime.Caching.ChangeMonitor" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileChangeMonitor&#xA;Inherits ChangeMonitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileChangeMonitor abstract : System::Runtime::Caching::ChangeMonitor" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Caching.ChangeMonitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b9a3f-101">表示用于监视对文件的更改的对象。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-101">Represents an object that monitors changes to files.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a3f-102"><xref:System.Runtime.Caching.FileChangeMonitor>类为基准<xref:System.Runtime.Caching.ChangeMonitor>监视对文件的更改的类类型。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-102">The <xref:System.Runtime.Caching.FileChangeMonitor> class is a base <xref:System.Runtime.Caching.ChangeMonitor> type for classes that monitor changes to files.</span></span> <span data-ttu-id="b9a3f-103">若要在文件系统中创建监视的更改，你可以从此类继承。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-103">To create a monitor for changes in the file system, you can inherit from this class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9a3f-104">下面的示例演示如何创建一个使用的缓存项<xref:System.Runtime.Caching.HostFileChangeMonitor>对象来监视文件系统上的源数据 （文件） 的状态。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-104">The following example shows how to create a cache item that uses a <xref:System.Runtime.Caching.HostFileChangeMonitor> object to monitor the state of the source data (a file) on the file system.</span></span> <span data-ttu-id="b9a3f-105"><xref:System.Runtime.Caching.HostFileChangeMonitor> 类从 <xref:System.Runtime.Caching.FileChangeMonitor> 类继承。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-105">The <xref:System.Runtime.Caching.HostFileChangeMonitor> class inherits from the <xref:System.Runtime.Caching.FileChangeMonitor> class.</span></span> <span data-ttu-id="b9a3f-106">使用定义的缓存项<xref:System.Runtime.Caching.CacheItemPolicy>提供的缓存项的逐出和有效期的详细信息的对象。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-106">The cache entry is defined using a <xref:System.Runtime.Caching.CacheItemPolicy> object that provides eviction and expiration details for the cache entry.</span></span>  
  
 [!code-csharp[CachingASPNetApplications#1](~/samples/snippets/csharp/VS_Snippets_WebNet/cachingaspnetapplications/cs/default.aspx.cs#1)]
 [!code-vb[CachingASPNetApplications#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/cachingaspnetapplications/vb/default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="b9a3f-107">有关必须遵循的继承协定的信息，请参阅中的继承者部分的说明<see cref="T:System.Runtime.Caching.ChangeMonitor" />类概述。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-107">For information about the inheritance contract that must be followed, see the Notes for Inheritors section in the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class overview.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileChangeMonitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.FileChangeMonitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FileChangeMonitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9a3f-108">初始化 <see cref="T:System.Runtime.Caching.FileChangeMonitor" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-108">Initializes a new instance of the <see cref="T:System.Runtime.Caching.FileChangeMonitor" /> class.</span></span> <span data-ttu-id="b9a3f-109">从派生类中的构造函数调用此构造函数以初始化基类。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-109">This constructor is called from constructors in derived classes in order to initialize the base class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePaths">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FilePaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FilePaths" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.FileChangeMonitor.FilePaths" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FilePaths As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FilePaths { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a3f-110">获取一个集合，该集合包含要监视其是否发生更改的文件路径。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-110">Gets a collection that contains the paths of files that are monitored for changes.</span></span></summary>
        <value><span data-ttu-id="b9a3f-111">文件路径的集合。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-111">A collection of file paths.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a3f-112">通常，将集合设置派生的构造函数中<xref:System.Runtime.Caching.FileChangeMonitor>类型。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-112">The collection is typically set in the constructor of a derived <xref:System.Runtime.Caching.FileChangeMonitor> type.</span></span>  
  
 <span data-ttu-id="b9a3f-113">若要提供自定义的文件更改监视，必须重写此方法在派生类。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-113">To provide custom file-change monitoring, you must override this method in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public abstract DateTimeOffset LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastModified" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.FileChangeMonitor.LastModified" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LastModified As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property DateTimeOffset LastModified { DateTimeOffset get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a3f-114">获取一个值，该值指示所监视文件的上次更改时间。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-114">Gets a value that indicates the last time that a file that is being monitored was changed.</span></span></summary>
        <value><span data-ttu-id="b9a3f-115">如果监视多个文件，则为最近修改的文件的上次修改时间；否则为所监视文件的上次更改时间。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-115">If multiple files are monitored, the last modified time of the most recently modified file; otherwise, the last time that the file that is being monitored was changed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a3f-116">值<xref:System.Runtime.Caching.FileChangeMonitor.LastModified%2A>属性通常在派生类的初始化阶段计算。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-116">The value of the <xref:System.Runtime.Caching.FileChangeMonitor.LastModified%2A> property is typically calculated during the initialization phase of a derived class.</span></span>  
  
 <span data-ttu-id="b9a3f-117">若要提供自定义的文件更改监视，必须重写此方法在派生类。</span><span class="sxs-lookup"><span data-stu-id="b9a3f-117">To provide custom file change monitoring, you must override this method in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>