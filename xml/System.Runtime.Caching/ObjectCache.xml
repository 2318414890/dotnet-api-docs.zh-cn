<Type Name="ObjectCache" FullName="System.Runtime.Caching.ObjectCache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cfc19cad0461ef3bb8f5c5134f66d1ecd2591f42" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39892861" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ObjectCache : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectCache extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ObjectCache" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectCache&#xA;Implements IEnumerable(Of KeyValuePair(Of String, Object))" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectCache abstract : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;" />
  <TypeSignature Language="F#" Value="type ObjectCache = class&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="94754-101">表示一个对象缓存并提供用于访问该对象缓存的基方法和属性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="94754-101">Represents an object cache and provides the base methods and properties for accessing the object cache.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-102"><xref:System.Runtime.Caching.ObjectCache>类型是内存中对象缓存的主类型。</span><span class="sxs-lookup"><span data-stu-id="94754-102">The <xref:System.Runtime.Caching.ObjectCache> type is the primary type for the in-memory object cache.</span></span> <span data-ttu-id="94754-103">若要开发自定义缓存实现，派生从<xref:System.Runtime.Caching.ObjectCache>类。</span><span class="sxs-lookup"><span data-stu-id="94754-103">To develop a custom cache implementation, you derive from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94754-104"><xref:System.Runtime.Caching.ObjectCache>类是在新[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="94754-104">The <xref:System.Runtime.Caching.ObjectCache> class is new as of the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span>  
  
 <span data-ttu-id="94754-105">内置<xref:System.Runtime.Caching.MemoryCache>类派生自<xref:System.Runtime.Caching.ObjectCache>类。</span><span class="sxs-lookup"><span data-stu-id="94754-105">The built-in <xref:System.Runtime.Caching.MemoryCache> class derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span> <span data-ttu-id="94754-106"><xref:System.Runtime.Caching.MemoryCache>类是中的唯一具体对象缓存实现[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]派生<xref:System.Runtime.Caching.ObjectCache>类。</span><span class="sxs-lookup"><span data-stu-id="94754-106">The <xref:System.Runtime.Caching.MemoryCache> class is the only concrete object cache implementation in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] that derives from the <xref:System.Runtime.Caching.ObjectCache> class.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="94754-107">此类型是线程安全的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="94754-107">This type is thread safe.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <span data-ttu-id="94754-108">
        <para>因为<see cref="T:System.Runtime.Caching.ObjectCache" />类型表示仅常见的缓存功能，了解如何无<see cref="T:System.Runtime.Caching.ObjectCache" />必须实例化并获取实例。此外，还有的具体实现不要求<see cref="T:System.Runtime.Caching.ObjectCache" />类必须是单一实例。 <block subset="none" type="note"><para><see cref="T:System.Runtime.Caching.MemoryCache" />不是单一实例，但您应创建仅几个或者可能仅一个<see cref="T:System.Runtime.Caching.MemoryCache" />实例和缓存项的代码应使用这些实例。</para></block>  继承自<see cref="T:System.Runtime.Caching.ObjectCache" />类，必须重写其方法。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="94754-108">
          <para>Because the <see cref="T:System.Runtime.Caching.ObjectCache" /> type represents only common cache functions, there is no requirement for how an <see cref="T:System.Runtime.Caching.ObjectCache" /> instance must be instantiated and obtained. In addition, there is no requirement that concrete implementations of the <see cref="T:System.Runtime.Caching.ObjectCache" /> class must be singletons.  <block subset="none" type="note"><para><see cref="T:System.Runtime.Caching.MemoryCache" /> is not a singleton, but you should create only a few or potentially only one <see cref="T:System.Runtime.Caching.MemoryCache" /> instance and code that caches items should use those instances.  </para></block>  When you inherit from the <see cref="T:System.Runtime.Caching.ObjectCache" /> class, you must override its methods.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94754-109">从派生类中的构造函数进行调用以便初始化 <see cref="T:System.Runtime.Caching.ObjectCache" /> 类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-109">Called from constructors in derived classes in order to initialize the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="94754-110">在派生类中重写时，向缓存中插入缓存项，而无需返回具有匹配键的现有缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-110">When overridden in a derived class, inserts a cache entry into the cache, without requiring that an existing cache entry with a matching key be returned.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-111"><xref:System.Runtime.Caching.ObjectCache.Add%2A>方法重载尝试将某个缓存项插入缓存中，而无需覆盖或删除具有相同键的现有缓存项。</span><span class="sxs-lookup"><span data-stu-id="94754-111">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads try to insert a cache entry into the cache, without overwriting or removing an existing cache entry that has the same key.</span></span> <span data-ttu-id="94754-112">缓存项可以是类型化<xref:System.Runtime.Caching.CacheItem>对象或泛型对象。</span><span class="sxs-lookup"><span data-stu-id="94754-112">The cache entry can be a typed <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="94754-113"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>方法重载和<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法重载具有一个重要的差异。</span><span class="sxs-lookup"><span data-stu-id="94754-113">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads have one significant difference.</span></span> <span data-ttu-id="94754-114">这些方法插入缓存项时，如果在缓存中，找到一个匹配项，则当<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>方法重载将返回现有的缓存项，但<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法重载不这样做。</span><span class="sxs-lookup"><span data-stu-id="94754-114">When these methods insert a cache entry, if a matching entry is found in the cache, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads return the existing cache entry, but the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads do not.</span></span> <span data-ttu-id="94754-115">具有这些不同的方法重载使调用方能够优化其基于它们是否需要现有的缓存项的代码。</span><span class="sxs-lookup"><span data-stu-id="94754-115">Having these different method overloads enables callers to optimize their code based on whether they need the existing cache entry.</span></span> <span data-ttu-id="94754-116">在分布式缓存中，通过使用返回的现有值<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>方法可能比使用返回一个布尔值开销更大<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="94754-116">In distributed caches, returning an existing value by using the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method might be more expensive than returning a Boolean value by using <xref:System.Runtime.Caching.ObjectCache.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (item As CacheItem, policy As CacheItemPolicy) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Add(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool&#xA;override this.Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool" Usage="objectCache.Add (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="94754-117">要添加的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-117">The object to add.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="94754-118">一个包含该缓存项的逐出详细信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-118">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="94754-119">此对象提供比简单绝对过期更多的逐出选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-119">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-120">在派生类中重写时，尝试以 <see cref="T:System.Runtime.Caching.CacheItem" /> 实例的形式将缓存项插入缓存中，并添加有关应如何逐出该项的详细信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-120">When overridden in a derived class, tries to insert a cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, and adds details about how the entry should be evicted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-121">如果插入成功，则为 <see langword="true" />；如果缓存中已存在具有与 <paramref name="item" /> 相同的键的项，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-121">
              <see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="item" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-122"><xref:System.Runtime.Caching.ObjectCache.Add%2A>方法重载是虚拟 （不是抽象的） 上<xref:System.Runtime.Caching.ObjectCache>类，因为<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法在内部调用<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>。</span><span class="sxs-lookup"><span data-stu-id="94754-122">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="94754-123">这样可以减少缓存实施者必须提供的方法重载。</span><span class="sxs-lookup"><span data-stu-id="94754-123">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="94754-124">如果缓存实现不需要任何特殊行为<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法，它可实现<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="94754-124">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * DateTimeOffset * string -&gt; bool&#xA;override this.Add : string * obj * DateTimeOffset * string -&gt; bool" Usage="objectCache.Add (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="94754-125">该缓存项的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-125">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="94754-126">要插入的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-126">The object to insert.</span>
          </span>
        </param>
        <param name="absoluteExpiration">
          <span data-ttu-id="94754-127">缓存项的固定的过期日期和时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-127">The fixed date and time at which the cache entry will expire.</span>
          </span>
          <span data-ttu-id="94754-128">当调用 <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> 方法时，此参数是必需的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-128">This parameter is required when the <see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> method is called.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="94754-129">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-129">Optional.</span>
          </span>
          <span data-ttu-id="94754-130">缓存中的一个可用来添加缓存项的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-130">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-131">由于未在 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 中实现区域，因此默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-131">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default value is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-132">在派生类中重写时，向缓存中插入缓存项，而不会覆盖任何现有的缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-132">When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-133">如果插入成功，则为 <see langword="true" />；如果缓存中已存在具有与 <paramref name="key" /> 相同的键的项，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-133">
              <see langword="true" /> if insertion succeeded, or <see langword="false" /> if there is an already an entry in the cache that has the same key as <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-134"><xref:System.Runtime.Caching.ObjectCache.Add%2A>方法重载是虚拟 （不是抽象的） 上<xref:System.Runtime.Caching.ObjectCache>类，因为<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法在内部调用<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>。</span><span class="sxs-lookup"><span data-stu-id="94754-134">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="94754-135">这样可以减少缓存实施者必须提供的方法重载。</span><span class="sxs-lookup"><span data-stu-id="94754-135">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="94754-136">如果缓存实现不需要任何特殊行为<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法，它可实现<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="94754-136">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool&#xA;override this.Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool" Usage="objectCache.Add (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="94754-137">该缓存项的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-137">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="94754-138">要插入的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-138">The object to insert.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="94754-139">一个包含该缓存项的逐出详细信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-139">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="94754-140">此对象提供比简单绝对过期更多的逐出选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-140">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="94754-141">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-141">Optional.</span>
          </span>
          <span data-ttu-id="94754-142">缓存中的一个可用来添加缓存项的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-142">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-143">可选参数的默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-143">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-144">在派生类中重写时，向缓存中插入缓存项，同时指定有关如何逐出该项的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-144">When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-145">如果尝试插入成功，则为 <see langword="true" />；如果缓存中已存在具有与 <paramref name="key" /> 相同的键的项，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-145">
              <see langword="true" /> if the insertion try succeeds, or <see langword="false" /> if there is an already an entry in the cache with the same key as <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-146"><xref:System.Runtime.Caching.ObjectCache.Add%2A>方法重载是虚拟 （不是抽象的） 上<xref:System.Runtime.Caching.ObjectCache>类，因为<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法在内部调用<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>。</span><span class="sxs-lookup"><span data-stu-id="94754-146">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> method overloads are virtual (not abstract) on the <xref:System.Runtime.Caching.ObjectCache> class, because the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method internally calls <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</span></span> <span data-ttu-id="94754-147">这样可以减少缓存实施者必须提供的方法重载。</span><span class="sxs-lookup"><span data-stu-id="94754-147">This reduces the number of method overloads that a cache implementer has to provide.</span></span> <span data-ttu-id="94754-148">如果缓存实现不需要任何特殊行为<xref:System.Runtime.Caching.ObjectCache.Add%2A>方法，它可实现<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>方法重载。</span><span class="sxs-lookup"><span data-stu-id="94754-148">If a cache implementation does not require any special behavior for the <xref:System.Runtime.Caching.ObjectCache.Add%2A> method, it can just implement the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrGetExisting">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="94754-149">在派生类中重写时，尝试向缓存中插入缓存项，并返回具有匹配键的现有缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-149">When overridden in a derived class, tries to insert a cache entry into the cache, and returns an existing cache entry with a matching key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-150"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>方法重载将项插入到缓存。</span><span class="sxs-lookup"><span data-stu-id="94754-150">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> method overloads insert an entry into the cache.</span></span> <span data-ttu-id="94754-151">如果已存在具有匹配键的缓存项，它们将返回现有条目。</span><span class="sxs-lookup"><span data-stu-id="94754-151">If a cache entry with a matching key already exists, they return the existing entry.</span></span> <span data-ttu-id="94754-152">缓存项可以是<xref:System.Runtime.Caching.CacheItem>对象或泛型对象。</span><span class="sxs-lookup"><span data-stu-id="94754-152">The cache entry can be a <xref:System.Runtime.Caching.CacheItem> object or a generic object.</span></span>  
  
 <span data-ttu-id="94754-153">之间的一个区别<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>重载和<xref:System.Runtime.Caching.ObjectCache.Add%2A>重载。</span><span class="sxs-lookup"><span data-stu-id="94754-153">There is one difference between the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads and the <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads.</span></span> <span data-ttu-id="94754-154">这些重载的方法尝试插入缓存项时，如果找到一个现有项，具有匹配的现有密钥插入缓存项时<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>重载将返回现有的缓存项。</span><span class="sxs-lookup"><span data-stu-id="94754-154">When these overloaded methods try to insert a cache entry, if an existing entry is found that has a key that matches an existing inserted cache entry, the <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> overloads return the existing cache entry.</span></span> <span data-ttu-id="94754-155"><xref:System.Runtime.Caching.ObjectCache.Add%2A>重载不这样做。</span><span class="sxs-lookup"><span data-stu-id="94754-155">The <xref:System.Runtime.Caching.ObjectCache.Add%2A> overloads do not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem AddOrGetExisting(class System.Runtime.Caching.CacheItem value, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (value As CacheItem, policy As CacheItemPolicy) As CacheItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Runtime::Caching::CacheItem ^ AddOrGetExisting(System::Runtime::Caching::CacheItem ^ value, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.AddOrGetExisting (value, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="94754-156">要插入的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-156">The object to insert.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="94754-157">一个包含该缓存项的逐出详细信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-157">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="94754-158">此对象提供比简单绝对过期更多的逐出选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-158">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-159">在派生类中重写时，向缓存中插入指定的 <see cref="T:System.Runtime.Caching.CacheItem" /> 对象，同时指定有关如何逐出该项的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-159">When overridden in a derived class, inserts the specified <see cref="T:System.Runtime.Caching.CacheItem" /> object into the cache, specifying information about how the entry will be evicted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-160">如果存在具有相同键的缓存项，则为指定的缓存项；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-160">If a cache entry with the same key exists, the specified cache entry; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * DateTimeOffset * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="94754-161">该缓存项的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-161">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="94754-162">要插入的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-162">The object to insert.</span>
          </span>
        </param>
        <param name="absoluteExpiration">
          <span data-ttu-id="94754-163">缓存项的固定的过期日期和时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-163">The fixed date and time at which the cache entry will expire.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="94754-164">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-164">Optional.</span>
          </span>
          <span data-ttu-id="94754-165">缓存中的一个可用来添加缓存项的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-165">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-166">可选参数的默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-166">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-167">在派生类中重写时，通过使用键、表示缓存项的对象、绝对过期值和要添加缓存的可选区域，向缓存中插入缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-167">When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-168">如果存在具有相同键的缓存项，则为指定缓存项的值；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-168">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-169">这<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29>方法重载方法返回一个对象值，不<xref:System.Runtime.Caching.CacheItem>对象。</span><span class="sxs-lookup"><span data-stu-id="94754-169">This <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method overload returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="94754-170">该缓存项的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-170">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="94754-171">要插入的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-171">The object to insert.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="94754-172">一个包含该缓存项的逐出详细信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-172">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="94754-173">此对象提供比简单绝对过期更多的逐出选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-173">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="94754-174">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-174">Optional.</span>
          </span>
          <span data-ttu-id="94754-175">缓存中的一个可用来添加缓存项的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-175">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-176">可选参数的默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-176">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-177">在派生类中重写时，向缓存中插入缓存项，并指定该缓存项的键和值以及有关如何逐出该项的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-177">When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-178">如果存在具有相同键的缓存项，则为指定缓存项的值；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-178">If a cache entry with the same key exists, the specified cache entry's value; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-179"><xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29>方法返回一个对象值，而不<xref:System.Runtime.Caching.CacheItem>对象。</span><span class="sxs-lookup"><span data-stu-id="94754-179">The <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29> method returns an object value, not a <xref:System.Runtime.Caching.CacheItem> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (key As String, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : string * string -&gt; bool" Usage="objectCache.Contains (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="94754-180">该缓存项的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-180">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="94754-181">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-181">Optional.</span>
          </span>
          <span data-ttu-id="94754-182">缓存中包含该缓存项的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-182">A named region in the cache where the cache can be found, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-183">可选参数的默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-183">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-184">在派生类中重写时，检查缓存中是否已存在该缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-184">When overridden in a derived class, checks whether the cache entry already exists in the cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-185">如果缓存中包含具有与 <paramref name="key" /> 相同的键值的缓存项，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-185">
              <see langword="true" /> if the cache contains a cache entry with the same key value as <paramref name="key" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCacheEntryChangeMonitor">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCacheEntryChangeMonitor (keys As IEnumerable(Of String), Optional regionName As String = null) As CacheEntryChangeMonitor" />
      <MemberSignature Language="F#" Value="abstract member CreateCacheEntryChangeMonitor : seq&lt;string&gt; * string -&gt; System.Runtime.Caching.CacheEntryChangeMonitor" Usage="objectCache.CreateCacheEntryChangeMonitor (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryChangeMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="94754-186">要监视的缓存项的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-186">The unique identifiers for cache entries to monitor.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="94754-187">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-187">Optional.</span>
          </span>
          <span data-ttu-id="94754-188">缓存中包含 <c>key</c> 参数中的缓存键的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-188">A named region in the cache where the cache keys in the <c>keys</c> parameter exist, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-189">可选参数的默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-189">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-190">在派生类中重写时，创建一个 <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> 对象，该对象可触发事件以响应对指定缓存项的更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-190">When overridden in a derived class, creates a <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> object that can trigger events in response to changes to specified cache entries.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-191">用于监视缓存中的缓存项的更改监视器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-191">A change monitor that monitors cache entries in the cache.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-192">当派生<xref:System.Runtime.Caching.ObjectCache>类重写基<xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A>方法，必须创建的缓存实现<xref:System.Runtime.Caching.CacheEntryChangeMonitor>对象。</span><span class="sxs-lookup"><span data-stu-id="94754-192">When a derived <xref:System.Runtime.Caching.ObjectCache> class overrides the base <xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A> method, the cache implementation must create a <xref:System.Runtime.Caching.CacheEntryChangeMonitor> object.</span></span> <span data-ttu-id="94754-193">此专用的更改监视器中指定的缓存项的更改时通知调用方`keys`参数。</span><span class="sxs-lookup"><span data-stu-id="94754-193">This specialized change monitor notifies callers when there are changes to the cache entries that are specified in the `keys` parameter.</span></span> <span data-ttu-id="94754-194">例如，如果在受监视项目`keys`更新或从缓存中删除参数，则此方法创建的更改监视器触发事件。</span><span class="sxs-lookup"><span data-stu-id="94754-194">For example, if a monitored item in the `keys` parameter is updated or removed from the cache, the change monitor created by this method triggers an event.</span></span>  
  
 <span data-ttu-id="94754-195">如果缓存实现支持命名的缓存区域，可以将一个字符串值指定为`regionName`参数。</span><span class="sxs-lookup"><span data-stu-id="94754-195">If a cache implementation supports named cache regions, a string value can be specified as the `regionName` parameter.</span></span> <span data-ttu-id="94754-196">否则，该参数默认为`null`。</span><span class="sxs-lookup"><span data-stu-id="94754-196">Otherwise, the parameter defaults to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94754-197">并非所有的缓存实现都支持缓存项的更改监视器。</span><span class="sxs-lookup"><span data-stu-id="94754-197">Not all cache implementations support cache-entry change monitors.</span></span> <span data-ttu-id="94754-198">若要确定是否支持您的缓存实现<xref:System.Runtime.Caching.CacheEntryChangeMonitor>对象，请参阅特定缓存实现的文档。</span><span class="sxs-lookup"><span data-stu-id="94754-198">To determine whether your cache implementation supports <xref:System.Runtime.Caching.CacheEntryChangeMonitor> objects, see the documentation for the specific cache implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCacheCapabilities">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCacheCapabilities As DefaultCacheCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Runtime::Caching::DefaultCacheCapabilities DefaultCacheCapabilities { System::Runtime::Caching::DefaultCacheCapabilities get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCacheCapabilities : System.Runtime.Caching.DefaultCacheCapabilities" Usage="System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.DefaultCacheCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94754-199">在派生类中重写时，获取缓存实现所提供的功能的说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-199">When overridden in a derived class, gets a description of the features that a cache implementation provides.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94754-200">标志的按位组合，这些标志指示缓存实现的默认功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-200">A bitwise combination of flags that indicate the default capabilities of a cache implementation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract object Get (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string -&gt; obj" Usage="objectCache.Get (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="94754-201">要获取的缓存项的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-201">A unique identifier for the cache entry to get.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="94754-202">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-202">Optional.</span>
          </span>
          <span data-ttu-id="94754-203">缓存中添加了缓存项的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-203">A named region in the cache to which the cache entry was added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-204">可选参数的默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-204">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-205">在派生类中重写时，以对象的形式获取缓存中的指定缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-205">When overridden in a derived class, gets the specified cache entry from the cache as an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-206">由 <paramref name="key" /> 标识的缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-206">The cache entry that is identified by <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheItem">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem GetCacheItem(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCacheItem (key As String, Optional regionName As String = null) As CacheItem" />
      <MemberSignature Language="F#" Value="abstract member GetCacheItem : string * string -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.GetCacheItem (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="94754-207">要获取的缓存项的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-207">A unique identifier for the cache entry to get.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="94754-208">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-208">Optional.</span>
          </span>
          <span data-ttu-id="94754-209">缓存中添加了缓存项的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-209">A named region in the cache to which the cache was added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-210">由于未在 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 中实现区域，因此默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-210">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-211">在派生类中重写时，以 <see cref="T:System.Runtime.Caching.CacheItem" /> 实例的形式获取缓存中的指定缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-211">When overridden in a derived class, gets the specified cache entry from the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-212">由 <paramref name="key" /> 标识的缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-212">The cache entry that is identified by <paramref name="key" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-213">此方法重载存在是因为某些缓存实现可能会延长<xref:System.Runtime.Caching.CacheItem>类。</span><span class="sxs-lookup"><span data-stu-id="94754-213">This method overload exists because some cache implementations might extend the <xref:System.Runtime.Caching.CacheItem> class.</span></span> <span data-ttu-id="94754-214">在这种情况下，<xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>方法重载将不一定返回有关缓存的数据的所有信息。</span><span class="sxs-lookup"><span data-stu-id="94754-214">In that case, the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method overload will not necessarily return all the information about cached data.</span></span> <span data-ttu-id="94754-215">但是，<xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29>方法重载使自定义缓存以返回多个只是缓存值。</span><span class="sxs-lookup"><span data-stu-id="94754-215">However, the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method overload enables custom caches to return more than just the cache value.</span></span>  
  
 <span data-ttu-id="94754-216"><xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29>方法就像<xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>方法，不同之处在于<xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29>方法返回作为该缓存项返回<xref:System.Runtime.Caching.CacheItem>实例。</span><span class="sxs-lookup"><span data-stu-id="94754-216">The <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method is like the <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> method, except that the <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29> method returns return the cache entry as a <xref:System.Runtime.Caching.CacheItem> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public abstract long GetCount (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetCount(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCount (Optional regionName As String = null) As Long" />
      <MemberSignature Language="F#" Value="abstract member GetCount : string -&gt; int64" Usage="objectCache.GetCount regionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName">
          <span data-ttu-id="94754-217">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-217">Optional.</span>
          </span>
          <span data-ttu-id="94754-218">缓存中应计算其缓存项数的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-218">A named region in the cache for which the cache entry count should be computed, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-219">可选参数的默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-219">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-220">在派生类中重写时，获取缓存中的缓存项总数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-220">When overridden in a derived class, gets the total number of cache entries in the cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-221">缓存中的缓存项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-221">The number of cache entries in the cache.</span>
          </span>
          <span data-ttu-id="94754-222">如果 <paramref name="regionName" /> 不为 <see langword="null" />，则计数指示指定的缓存区域中的项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-222">If <paramref name="regionName" /> is not <see langword="null" />, the count indicates the number of entries that are in the specified cache region.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="objectCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94754-223">在派生类中重写时，创建可用于循环访问缓存项的集合的枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-223">When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-224">可提供对缓存中的缓存项的访问的枚举器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-224">The enumerator object that provides access to the cache entries in the cache.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-225">缓存实施者可以重写和扩展此方法以提供自定义方法来循环访问缓存项的集合。</span><span class="sxs-lookup"><span data-stu-id="94754-225">Cache implementers can override and extend this method to provide a custom means of iterating through a collection of cache entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94754-226">返回一个枚举器通常是比返回整个缓存条目的开销更大的操作。</span><span class="sxs-lookup"><span data-stu-id="94754-226">Returning an enumerator is typically a more expensive operation than returning the entire cache entry.</span></span>  
  
 <span data-ttu-id="94754-227">显式接口实现调用此方法的<xref:System.Runtime.Caching.ObjectCache>类具有用于<xref:System.Collections.IEnumerable.GetEnumerator%2A>和<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="94754-227">This method is called by the explicit interface implementations that the <xref:System.Runtime.Caching.ObjectCache> class has for the <xref:System.Collections.IEnumerable.GetEnumerator%2A> and <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="94754-228">获取一组缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-228">Gets a set of cache entries.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (keys As IEnumerable(Of String), Optional regionName As String = null) As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="abstract member GetValues : seq&lt;string&gt; * string -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="94754-229">要获取的缓存项的唯一标识符集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-229">A collection of unique identifiers for the cache entries to get.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="94754-230">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-230">Optional.</span>
          </span>
          <span data-ttu-id="94754-231">缓存中添加了一个或多个缓存项的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-231">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-232">可选参数的默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-232">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-233">在派生类中重写时，获取与指定键对应的一组缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-233">When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-234">一个表示缓存项的键/值对字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-234">A dictionary of key/value pairs that represent cache entries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-235"><xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>方法重载是一种性能优化的分布式缓存，支持在单个网络调用期间从缓存提取多个缓存项。</span><span class="sxs-lookup"><span data-stu-id="94754-235">The <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload is a performance optimization for distributed caches that support fetching multiple cache entries from the cache during a single network call.</span></span>  
  
 <span data-ttu-id="94754-236">尽管调用方可以将一个或多个密钥传递给方法，则所有键都表示缓存中的项无法保证。</span><span class="sxs-lookup"><span data-stu-id="94754-236">Although a caller can pass one or more keys to the method, there is no guarantee that all keys represent entries in the cache.</span></span> <span data-ttu-id="94754-237">因此，返回的字典可能包含比向方法传递的键的数目较少的项。</span><span class="sxs-lookup"><span data-stu-id="94754-237">Therefore, the returned dictionary might contain fewer items than the number of keys that were passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (string regionName, params string[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(string regionName, string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (regionName As String, ParamArray keys As String()) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetValues(System::String ^ regionName, ... cli::array &lt;System::String ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;&#xA;override this.GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (regionName, keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="regionName">
          <span data-ttu-id="94754-238">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-238">Optional.</span>
          </span>
          <span data-ttu-id="94754-239">缓存中添加了一个或多个缓存项的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-239">A named region in the cache to which the cache entry or entries were added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-240">由于未在 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 中实现区域，因此默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-240">Because regions are not implemented in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the default is <see langword="null" />.</span>
          </span>
        </param>
        <param name="keys">
          <span data-ttu-id="94754-241">要获取的缓存项的唯一标识符集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-241">A collection of unique identifiers for the cache entries to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-242">获取与指定的键对应的一组缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-242">Gets a set of cache entries that correspond to the specified keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-243">一个表示缓存项的键/值对字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-243">A dictionary of key/value pairs that represent cache entries.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-244"><xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType>方法重载就像<xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>方法重载，但允许使用可选参数语法支持的 C# 等托管语言传入命名的区域。</span><span class="sxs-lookup"><span data-stu-id="94754-244">The <xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType> method overload is like the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload, but lets you pass the named region by using optional parameter syntax that is supported by managed languages such as C#.</span></span>  
  
 <span data-ttu-id="94754-245">此方法是一个虚拟方法，因为<xref:System.Runtime.Caching.ObjectCache>类提供了一个默认实现，传递`params`数组到<xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>方法重载。</span><span class="sxs-lookup"><span data-stu-id="94754-245">This method is a virtual method because the <xref:System.Runtime.Caching.ObjectCache> class provides a default implementation that passes the `params` array to the <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public static IServiceProvider Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IServiceProvider Host" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Host" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Host As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property IServiceProvider ^ Host { IServiceProvider ^ get(); void set(IServiceProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : IServiceProvider with get, set" Usage="System.Runtime.Caching.ObjectCache.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94754-246">获取或设置对托管宿主环境的引用，该环境对 <see cref="T:System.Runtime.Caching.ObjectCache" /> 实现可用并且可以为 <see cref="T:System.Runtime.Caching.ObjectCache" /> 实现提供特定于宿主的服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-246">Gets or set a reference to a managed hosting environment that is available to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations and that can provide host-specific services to <see cref="T:System.Runtime.Caching.ObjectCache" /> implementations.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94754-247">对缓存识别托管宿主环境的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-247">A reference to a cache-aware managed hosting environment.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-248"><xref:System.Runtime.Caching.ObjectCache.Host%2A>属性应以供[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]托管环境并实现依赖于.NET Framework 的行为的缓存实现托管环境。</span><span class="sxs-lookup"><span data-stu-id="94754-248">The <xref:System.Runtime.Caching.ObjectCache.Host%2A> property is intended for use by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] host environments and by cache implementations that implement behavior that depends on the .NET Framework host environment.</span></span>  
  
 <span data-ttu-id="94754-249">下表列出了主机环境服务的可能是可从托管宿主环境，适用于套<xref:System.Runtime.Caching.ObjectCache>实现通过<xref:System.Runtime.Caching.ObjectCache.Host%2A>属性：</span><span class="sxs-lookup"><span data-stu-id="94754-249">The following table lists the set of host environment services that might be available from a managed hosting environment and that are available to <xref:System.Runtime.Caching.ObjectCache> implementations through the <xref:System.Runtime.Caching.ObjectCache.Host%2A> property:</span></span>  
  
|<span data-ttu-id="94754-250">服务</span><span class="sxs-lookup"><span data-stu-id="94754-250">Service</span></span>|<span data-ttu-id="94754-251">描述</span><span class="sxs-lookup"><span data-stu-id="94754-251">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|<span data-ttu-id="94754-252">允许宿主环境提供所需的功能，例如标识性能计数器的缓存实现的应用程序域标识符。</span><span class="sxs-lookup"><span data-stu-id="94754-252">Lets host environments provide application domain identifiers that might be needed by a cache implementation for features such as identifying performance counters.</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|<span data-ttu-id="94754-253">允许宿主环境提供的自定义的文件更改通知系统，而不是使用中提供[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="94754-253">Lets host environments provide a custom file-change notification system, instead of using the one provided in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>|  
|<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|<span data-ttu-id="94754-254">可让缓存实现将缓存内存消耗报告给主机环境。</span><span class="sxs-lookup"><span data-stu-id="94754-254">Lets cache implementations report cache memory consumption to the host environment.</span></span> <span data-ttu-id="94754-255">这使宿主环境可以跨多个缓存实现集中管理内存使用情况。</span><span class="sxs-lookup"><span data-stu-id="94754-255">This enables host environments to centrally manage memory consumption across multiple cache implementations.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="94754-256">此属性的值的调用方要求不受限制的代码访问安全性权限。</span><span class="sxs-lookup"><span data-stu-id="94754-256">Callers of this property value require unrestricted code access security permissions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="94754-257">为属性分配的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-257">The value being assigned to the property is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="94754-258">已尝试多次设置该属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-258">An attempt was made to set the property value more than one time.</span>
          </span>
        </exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">
          <span data-ttu-id="94754-259">为此属性的所有访问器的完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-259">for full trust for all accessors of this property.</span>
          </span>
          <span data-ttu-id="94754-260">不能由部分受信任的代码使用此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-260">This property cannot be used by partially trusted code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="InfiniteAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset InfiniteAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteAbsoluteExpiration As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteAbsoluteExpiration : DateTimeOffset" Usage="System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94754-261">获取一个值，该值指示某个缓存项没有绝对过期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-261">Gets a value that indicates that a cache entry has no absolute expiration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-262">插入到缓存与某个缓存项<xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration>字段值设置为永不过期的过期值应该基于绝对点中的时间。</span><span class="sxs-lookup"><span data-stu-id="94754-262">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> field value set as the expiration value should never expire based on an absolute point in time.</span></span> <span data-ttu-id="94754-263">但是，具有此设置的缓存项可以是从缓存中逐出的其他原因，由特定缓存实现，如内存压力导致更改监视器事件逐出。</span><span class="sxs-lookup"><span data-stu-id="94754-263">However, a cache entry with this setting can be evicted from the cache for other reasons that are determined by a particular cache implementation, such as a change-monitor event eviction caused by memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Runtime.Caching.ObjectCache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="94754-264">缓存中的缓存项的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-264">A unique identifier for a cache entry in the cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-265">获取或设置 <see cref="T:System.Runtime.Caching.ObjectCache" /> 类的默认索引器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-265">Gets or sets the default indexer for the <see cref="T:System.Runtime.Caching.ObjectCache" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94754-266">用作该缓存实例的索引器的键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-266">A key that serves as an indexer into the cache instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-267">此属性的 set 访问器的行为就像<xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="94754-267">The behavior of the set accessor of this property is like the <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> method.</span></span> <span data-ttu-id="94754-268">在内部，缓存实现可以设置到指定的值的绝对过期<xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration>方法。</span><span class="sxs-lookup"><span data-stu-id="94754-268">Internally, a cache implementation could set the absolute expiration of the specified value to the <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> method.</span></span> <span data-ttu-id="94754-269">但是此行为是最终取决于缓存实现。</span><span class="sxs-lookup"><span data-stu-id="94754-269">However this behavior is ultimately up to the cache implementation.</span></span>  
  
 <span data-ttu-id="94754-270">Get 访问器的行为就像调用<xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29>方法，并使用`null`区域名称。</span><span class="sxs-lookup"><span data-stu-id="94754-270">The behavior of get accessor is like calling the <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29> method and using `null` for the region name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.Caching.ObjectCache.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94754-271">获取某个特定 <see cref="T:System.Runtime.Caching.ObjectCache" /> 实例的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-271">Gets the name of a specific <see cref="T:System.Runtime.Caching.ObjectCache" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94754-272">某个特定缓存实例的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-272">The name of a specific cache instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-273">某些缓存实现可能支持在单个应用程序中运行的缓存的多个实例。</span><span class="sxs-lookup"><span data-stu-id="94754-273">Some cache implementations might support multiple instances of the cache that is running in a single application.</span></span> <span data-ttu-id="94754-274">此属性允许缓存实施者返回用于标识某个特定缓存实例的名称。</span><span class="sxs-lookup"><span data-stu-id="94754-274">This property lets cache implementers return a name that identifies a specific cache instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94754-275">指示某个缓存项没有可调过期时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-275">Indicates that a cache entry has no sliding expiration time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-276">基于持续时间或定义的时间窗口过期也被称为可调过期。</span><span class="sxs-lookup"><span data-stu-id="94754-276">Expiration that is based on duration or a defined window of time is also referred to as sliding expiration.</span></span> <span data-ttu-id="94754-277">通常情况下，逐出基于可调过期的项的缓存实现将删除在指定的时间段未被访问的项。</span><span class="sxs-lookup"><span data-stu-id="94754-277">Normally, a cache implementation that evicts items that are based on sliding expiration will remove an item that has not been accessed in the specified window of time.</span></span>  
  
 <span data-ttu-id="94754-278">插入到缓存与某个缓存项<xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration>字段值设置为过期值应该永远不会收回由于非活动的滑动时间窗口中。</span><span class="sxs-lookup"><span data-stu-id="94754-278">A cache entry that is inserted into the cache with the <xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration> field value set as the expiration value should never be evicted because of non-activity in a sliding time window.</span></span> <span data-ttu-id="94754-279">但是，如果具有绝对到期，或某些其他逐出事件发生时，此类更改监视器或内存压力，可以逐出缓存项。</span><span class="sxs-lookup"><span data-stu-id="94754-279">However, a cache item can be evicted if it has an absolute expiration, or if some other eviction event occurs, such a change monitor or memory pressure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract object Remove (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Remove(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Remove : string * string -&gt; obj" Usage="objectCache.Remove (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="94754-280">该缓存项的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-280">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="94754-281">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-281">Optional.</span>
          </span>
          <span data-ttu-id="94754-282">缓存中添加了缓存项的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-282">A named region in the cache to which the cache entry was added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-283">可选参数的默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-283">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-284">在派生类中重写时，从缓存中移除缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-284">When overridden in a derived class, removes the cache entry from the cache.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-285">一个对象，表示由该键指定的已移除缓存项的值；如果找不到指定的项，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-285">An object that represents the value of the removed cache entry that was specified by the key, or <see langword="null" /> if the specified entry was not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-286">如果您重写此方法在自定义缓存实现中，如果对应于在缓存中没有某个缓存项`key`，应返回已移除的项的值。</span><span class="sxs-lookup"><span data-stu-id="94754-286">If you override this method in a custom cache implementation, if there is a cache entry in the cache that corresponds to `key`, the value of the removed item should be returned.</span></span> <span data-ttu-id="94754-287">如果不从缓存中删除，该方法应返回`null`。</span><span class="sxs-lookup"><span data-stu-id="94754-287">If nothing was removed from the cache, the method should return `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94754-288">某些分布式的缓存实现可能不支持的功能，以返回已从缓存中删除的值。</span><span class="sxs-lookup"><span data-stu-id="94754-288">Some distributed cache implementations might not support the ability to return the value that was removed from the cache.</span></span> <span data-ttu-id="94754-289">这可能是因为缓存实现不支持返回已移除的缓存项的值。</span><span class="sxs-lookup"><span data-stu-id="94754-289">This might be because the cache implementation does not support returning the value of a removed cache item.</span></span> <span data-ttu-id="94754-290">它还可能是因为将对象封送，因为返回值是过于昂贵。</span><span class="sxs-lookup"><span data-stu-id="94754-290">It might also be because marshaling the object as a return value is too expensive.</span></span> <span data-ttu-id="94754-291">在这种情况下，缓存实现可以返回`null`。</span><span class="sxs-lookup"><span data-stu-id="94754-291">In such cases, cache implementations can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="94754-292">在派生类中重写时，向缓存中插入缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-292">When overridden in a derived class, inserts a cache entry into the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-293">典型行为<xref:System.Runtime.Caching.ObjectCache.Set%2A>重载的方法是插入或更新操作。</span><span class="sxs-lookup"><span data-stu-id="94754-293">The typical behavior of the <xref:System.Runtime.Caching.ObjectCache.Set%2A> overload methods is an insert-or-update operation.</span></span> <span data-ttu-id="94754-294">某个缓存项是可以为新项插入如果指定的项不存在，或用新值更新的缓存项，如果它已存在。</span><span class="sxs-lookup"><span data-stu-id="94754-294">A cache entry is either inserted as a new entry if the specified entry does not exist, or the cache entry is updated with a new value if it already exists.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (item As CacheItem, policy As CacheItemPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Set(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Set : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; unit" Usage="objectCache.Set (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="94754-295">要添加的缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-295">The cache item to add.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="94754-296">一个包含该缓存项的逐出详细信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-296">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="94754-297">此对象提供比简单绝对过期更多的逐出选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-297">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-298">在派生类中重写时，以 <see cref="T:System.Runtime.Caching.CacheItem" /> 实例的形式向缓存中插入缓存项，同时指定有关如何逐出该项的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-298">When overridden in a derived class, inserts the cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem" /> instance, specifying information about how the entry will be evicted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-299">如果为密钥`item`不存在，`item`作为新的缓存项插入。</span><span class="sxs-lookup"><span data-stu-id="94754-299">If the key for `item` does not exist, `item` is inserted as a new cache entry.</span></span> <span data-ttu-id="94754-300">如果具有匹配键的项`item`存在，将值从`item`用于更新或覆盖现有的缓存项的值。</span><span class="sxs-lookup"><span data-stu-id="94754-300">If an item with a key that matches `item` exists, the value from `item` is used to update or overwrite the value of the existing cache entry.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * DateTimeOffset * string -&gt; unit" Usage="objectCache.Set (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="94754-301">该缓存项的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-301">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="94754-302">要插入的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-302">The object to insert.</span>
          </span>
        </param>
        <param name="absoluteExpiration">
          <span data-ttu-id="94754-303">缓存项的固定的过期日期和时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-303">The fixed date and time at which the cache entry will expire.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="94754-304">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-304">Optional.</span>
          </span>
          <span data-ttu-id="94754-305">缓存中的一个可用来添加缓存项的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-305">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-306">可选参数的默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-306">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-307">在派生类中重写时，向缓存中插入缓存项，同时指定基于时间的过期详细信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-307">When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-308">如果匹配的项`key`不在缓存中，存在`value`和`key`用于为新的缓存项插入。</span><span class="sxs-lookup"><span data-stu-id="94754-308">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="94754-309">如果具有匹配键的项`item`存在，更新或使用覆盖缓存项`value`。</span><span class="sxs-lookup"><span data-stu-id="94754-309">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; unit" Usage="objectCache.Set (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="94754-310">该缓存项的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-310">A unique identifier for the cache entry.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="94754-311">要插入的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-311">The object to insert.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="94754-312">一个包含该缓存项的逐出详细信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-312">An object that contains eviction details for the cache entry.</span>
          </span>
          <span data-ttu-id="94754-313">此对象提供比简单绝对过期更多的逐出选项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-313">This object provides more options for eviction than a simple absolute expiration.</span>
          </span>
        </param>
        <param name="regionName">
          <span data-ttu-id="94754-314">可选。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-314">Optional.</span>
          </span>
          <span data-ttu-id="94754-315">缓存中的一个可用来添加缓存项的命名区域（如果实现了区域）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-315">A named region in the cache to which the cache entry can be added, if regions are implemented.</span>
          </span>
          <span data-ttu-id="94754-316">可选参数的默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-316">The default value for the optional parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94754-317">在派生类中重写时，向缓存中插入缓存项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-317">When overridden in a derived class, inserts a cache entry into the cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-318">此方法的重载，可提供比基于时间的绝对过期中提供的更多逐出或过期详细信息。</span><span class="sxs-lookup"><span data-stu-id="94754-318">This method overload lets you provide more eviction or expiration details than those that are available in time-based absolute expiration.</span></span>  
  
 <span data-ttu-id="94754-319">如果匹配的项`key`不在缓存中，存在`value`和`key`用于为新的缓存项插入。</span><span class="sxs-lookup"><span data-stu-id="94754-319">If an item that matches `key` does not exist in the cache, `value` and `key` are used to insert as a new cache entry.</span></span> <span data-ttu-id="94754-320">如果具有匹配键的项`item`存在，更新或使用覆盖缓存项`value`。</span><span class="sxs-lookup"><span data-stu-id="94754-320">If an item with a key that matches `item` exists, the cache entry is updated or overwritten by using `value`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94754-321">支持在泛型集合上进行迭代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-321">Supports iteration over a generic collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94754-322">可提供对缓存中的项的访问的枚举器对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94754-322">The enumerator object that provides access to the items in the cache.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94754-323">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="94754-323">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="94754-324">仅当派生时，可以使用它<xref:System.Runtime.Caching.ObjectCache>实例转换为<xref:System.Collections.IEnumerable>接口。</span><span class="sxs-lookup"><span data-stu-id="94754-324">It can be used only when a derived <xref:System.Runtime.Caching.ObjectCache> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="94754-325">开发人员可以使用此方法循环访问缓存项的泛型集合。</span><span class="sxs-lookup"><span data-stu-id="94754-325">Developers can use this method to iterate through a generic collection of cache entries.</span></span>  
  
 <span data-ttu-id="94754-326">这是默认值<xref:System.Collections.IEnumerable.GetEnumerator%2A>实现，它在内部调用<xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="94754-326">This is the default <xref:System.Collections.IEnumerable.GetEnumerator%2A> implementation that internally calls the <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>