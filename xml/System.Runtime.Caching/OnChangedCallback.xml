<Type Name="OnChangedCallback" FullName="System.Runtime.Caching.OnChangedCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ddadd8a029fc2be8f87d45d7329135045bc81461" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30475041" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void OnChangedCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OnChangedCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.OnChangedCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub OnChangedCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void OnChangedCallback(System::Object ^ state);" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">已更改的依赖对象的状态。</param>
    <summary>定义对某个方法的引用，该方法用于处理对被监视项的更改。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.OnChangedCallback>更改监视器使用委托来通知的缓存实现，其内容进行缓存的对象中发生了更改。 任何实现的任务<xref:System.Runtime.Caching.ChangeMonitor>类型是监视缓存的对象中的更改。 例如，如果文件的内容包含在某个缓存项，并且如果更新的文件，其相关的缓存条目必须还更改。 在典型的缓存实现中，派生<xref:System.Runtime.Caching.ChangeMonitor>实例使用<xref:System.Runtime.Caching.OnChangedCallback>委托以通知有关更改缓存。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Caching.ChangeMonitor" />
  </Docs>
</Type>