<Type Name="EventResetMode" FullName="System.Threading.EventResetMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1b085562e3d45bbd76813c905ee4f827bd26e57e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36606151" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum EventResetMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EventResetMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Threading.EventResetMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum EventResetMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class EventResetMode" />
  <TypeSignature Language="F#" Value="type EventResetMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="223d2-101">指示在接收信号后是自动重置 <see cref="T:System.Threading.EventWaitHandle" /> 还是手动重置。</span>
      <span class="sxs-lookup">
        <span data-stu-id="223d2-101">Indicates whether an <see cref="T:System.Threading.EventWaitHandle" /> is reset automatically or manually after receiving a signal.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="223d2-102">下面的代码示例使用<xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29>方法重载，以允许主线程发出信号被阻塞的线程并然后等待，直到线程完成任务。</span><span class="sxs-lookup"><span data-stu-id="223d2-102">The following code example uses the <xref:System.Threading.WaitHandle.SignalAndWait%28System.Threading.WaitHandle%2CSystem.Threading.WaitHandle%29> method overload to allow the main thread to signal a blocked thread and then wait until the thread finishes a task.</span></span>  
  
 <span data-ttu-id="223d2-103">此示例启动五个线程，并允许其上阻止<xref:System.Threading.EventWaitHandle>创建使用 AutoReset 标志，然后一个线程一次时释放用户按下 ENTER 键。</span><span class="sxs-lookup"><span data-stu-id="223d2-103">The example starts five threads and allows them to block on an <xref:System.Threading.EventWaitHandle> created with the AutoReset flag, then releases one thread each time the user presses the ENTER key.</span></span> <span data-ttu-id="223d2-104">该示例然后另外五个线程并释放所有使用<xref:System.Threading.EventWaitHandle>创建具有 ManualReset 标志。</span><span class="sxs-lookup"><span data-stu-id="223d2-104">The example then queues another five threads and releases them all using an <xref:System.Threading.EventWaitHandle> created with the ManualReset flag.</span></span>  
  
 [!code-cpp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/CS/source.cs#1)]
 [!code-vb[System.Threading.WaitHandle.SignalAndWait#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.WaitHandle.SignalAndWait/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoReset">
      <MemberSignature Language="C#" Value="AutoReset" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.EventResetMode AutoReset = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.EventResetMode.AutoReset" />
      <MemberSignature Language="VB.NET" Value="AutoReset" />
      <MemberSignature Language="C++ CLI" Value="AutoReset" />
      <MemberSignature Language="F#" Value="AutoReset = 0" Usage="System.Threading.EventResetMode.AutoReset" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.EventResetMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="223d2-105">当终止时，<see cref="T:System.Threading.EventWaitHandle" /> 在释放一个线程后自动重置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="223d2-105">When signaled, the <see cref="T:System.Threading.EventWaitHandle" /> resets automatically after releasing a single thread.</span>
          </span>
          <span data-ttu-id="223d2-106">如果没有等待的线程，<see cref="T:System.Threading.EventWaitHandle" /> 将保持终止状态直到一个线程阻止，并在释放此线程后重置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="223d2-106">If no threads are waiting, the <see cref="T:System.Threading.EventWaitHandle" /> remains signaled until a thread blocks, and resets after releasing the thread.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ManualReset">
      <MemberSignature Language="C#" Value="ManualReset" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.EventResetMode ManualReset = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.EventResetMode.ManualReset" />
      <MemberSignature Language="VB.NET" Value="ManualReset" />
      <MemberSignature Language="C++ CLI" Value="ManualReset" />
      <MemberSignature Language="F#" Value="ManualReset = 1" Usage="System.Threading.EventResetMode.ManualReset" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.EventResetMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="223d2-107">当终止时，<see cref="T:System.Threading.EventWaitHandle" /> 释放所有等待的线程，并在手动重置前保持终止状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="223d2-107">When signaled, the <see cref="T:System.Threading.EventWaitHandle" /> releases all waiting threads and remains signaled until it is manually reset.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>