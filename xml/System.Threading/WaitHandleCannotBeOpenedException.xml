<Type Name="WaitHandleCannotBeOpenedException" FullName="System.Threading.WaitHandleCannotBeOpenedException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e8d19d7cd4ecd19b2facb1716629caa8efe18c02" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37754301" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WaitHandleCannotBeOpenedException : ApplicationException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WaitHandleCannotBeOpenedException extends System.ApplicationException" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitHandleCannotBeOpenedException" />
  <TypeSignature Language="VB.NET" Value="Public Class WaitHandleCannotBeOpenedException&#xA;Inherits ApplicationException" />
  <TypeSignature Language="C++ CLI" Value="public ref class WaitHandleCannotBeOpenedException : ApplicationException" />
  <TypeSignature Language="F#" Value="type WaitHandleCannotBeOpenedException = class&#xA;    inherit ApplicationException" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ApplicationException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bca90-101">当尝试打开不存在的系统互斥体、信号量或事件等待句柄时引发的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bca90-101">The exception that is thrown when an attempt is made to open a system mutex, semaphore, or event wait handle that does not exist.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca90-102">实例<xref:System.Threading.Mutex>， <xref:System.Threading.Semaphore>，和<xref:System.Threading.EventWaitHandle>类可以表示已命名的系统同步对象。</span><span class="sxs-lookup"><span data-stu-id="bca90-102">Instances of the <xref:System.Threading.Mutex>, <xref:System.Threading.Semaphore>, and  <xref:System.Threading.EventWaitHandle> classes can represent named system synchronization objects.</span></span> <span data-ttu-id="bca90-103">当你使用<xref:System.Threading.Mutex.OpenExisting%2A?displayProperty=nameWithType>方法，<xref:System.Threading.Semaphore.OpenExisting%2A?displayProperty=nameWithType>方法，或<xref:System.Threading.EventWaitHandle.OpenExisting%2A?displayProperty=nameWithType>方法打开不存在的已命名的系统对象<xref:System.Threading.WaitHandleCannotBeOpenedException>引发异常。</span><span class="sxs-lookup"><span data-stu-id="bca90-103">When you use the <xref:System.Threading.Mutex.OpenExisting%2A?displayProperty=nameWithType> method, the <xref:System.Threading.Semaphore.OpenExisting%2A?displayProperty=nameWithType> method, or the  <xref:System.Threading.EventWaitHandle.OpenExisting%2A?displayProperty=nameWithType> method to open a named system object that does not exist, a <xref:System.Threading.WaitHandleCannotBeOpenedException> exception is thrown.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Threading.Mutex.OpenExisting(System.String)" />
    <altmember cref="M:System.Threading.Semaphore.OpenExisting(System.String)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="bca90-104">初始化 <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca90-104">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WaitHandleCannotBeOpenedException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WaitHandleCannotBeOpenedException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bca90-105">使用默认值初始化 <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca90-105">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class with default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca90-106">此构造函数初始化<xref:System.Exception.Message%2A>为系统提供的描述错误，例如"不存在句柄给定名称。"的消息的新实例的属性</span><span class="sxs-lookup"><span data-stu-id="bca90-106">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "No handle of the given name exists."</span></span> <span data-ttu-id="bca90-107">此消息将当前系统区域性考虑在内。</span><span class="sxs-lookup"><span data-stu-id="bca90-107">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="bca90-108">下表显示 <xref:System.Threading.WaitHandleCannotBeOpenedException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="bca90-108">The following table shows the initial property values for an instance of <xref:System.Threading.WaitHandleCannotBeOpenedException>.</span></span>  
  
|<span data-ttu-id="bca90-109">Property</span><span class="sxs-lookup"><span data-stu-id="bca90-109">Property</span></span>|<span data-ttu-id="bca90-110">“值”</span><span class="sxs-lookup"><span data-stu-id="bca90-110">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="bca90-111">`null`。</span><span class="sxs-lookup"><span data-stu-id="bca90-111">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="bca90-112">系统提供的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="bca90-112">The system-supplied error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WaitHandleCannotBeOpenedException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WaitHandleCannotBeOpenedException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Threading.WaitHandleCannotBeOpenedException : string -&gt; System.Threading.WaitHandleCannotBeOpenedException" Usage="new System.Threading.WaitHandleCannotBeOpenedException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="bca90-113">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca90-113">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bca90-114">用指定的错误消息初始化 <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca90-114">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca90-115">`message` 的内容被设计为人可理解的形式。</span><span class="sxs-lookup"><span data-stu-id="bca90-115">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="bca90-116">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="bca90-116">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="bca90-117">下表显示的实例的初始属性值<xref:System.Threading.WaitHandleCannotBeOpenedException>使用此构造函数进行初始化。</span><span class="sxs-lookup"><span data-stu-id="bca90-117">The following table shows the initial property values for an instance of <xref:System.Threading.WaitHandleCannotBeOpenedException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="bca90-118">Property</span><span class="sxs-lookup"><span data-stu-id="bca90-118">Property</span></span>|<span data-ttu-id="bca90-119">“值”</span><span class="sxs-lookup"><span data-stu-id="bca90-119">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="bca90-120">`null`。</span><span class="sxs-lookup"><span data-stu-id="bca90-120">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="bca90-121">`message`。</span><span class="sxs-lookup"><span data-stu-id="bca90-121">`message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WaitHandleCannotBeOpenedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WaitHandleCannotBeOpenedException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Threading.WaitHandleCannotBeOpenedException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Threading.WaitHandleCannotBeOpenedException" Usage="new System.Threading.WaitHandleCannotBeOpenedException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="bca90-122">存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca90-122">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="bca90-123">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，它包含有关源或目标的上下文信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca90-123">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bca90-124">用序列化数据初始化 <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca90-124">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca90-125">此构造函数在反序列化过程中调用，以便重建通过流传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="bca90-125">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="bca90-126">有关详细信息，请参阅[XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="bca90-126">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WaitHandleCannotBeOpenedException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WaitHandleCannotBeOpenedException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Threading.WaitHandleCannotBeOpenedException : string * Exception -&gt; System.Threading.WaitHandleCannotBeOpenedException" Usage="new System.Threading.WaitHandleCannotBeOpenedException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="bca90-127">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca90-127">The error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="bca90-128">导致当前异常的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca90-128">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="bca90-129">如果 <c>innerException</c> 参数不为 <see langword="null" />，则当前异常会在处理内部异常的 <see langword="catch" /> 块中引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca90-129">If the <c>innerException</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bca90-130">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bca90-130">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bca90-131">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="bca90-131">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="bca90-132"><xref:System.Exception.InnerException%2A> 属性返回的值与传递到构造函数中的值相同；或者，如果 `null` 属性没有向构造函数提供内部异常值，则为 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="bca90-132">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>