<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExecutionContext.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52d11eb2e08ac5047a81064d0fe34fde568252e1d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d11eb2e08ac5047a81064d0fe34fde568252e1d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.ExecutionContext">
          <source>Manages the execution context for the current thread.</source>
          <target state="translated">管理当前线程的执行上下文。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Threading.ExecutionContext">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>The <ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph> class provides a single container for all information relevant to a logical thread of execution.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph>类提供了单个容器的执行逻辑线程相关的所有信息。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>This includes security context, call context, and synchronization context.</source>
          <target state="translated">这包括安全上下文，调用上下文和同步上下文。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>The <ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph> class provides the functionality for user code to capture and transfer this context across user-defined asynchronous points.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph>类提供的用户代码可以捕获并在用户定义的异步点的传输此上下文的功能。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>The common language runtime ensures that the <ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph> is consistently transferred across runtime-defined asynchronous points within the managed process.</source>
          <target state="translated">公共语言运行时确保<ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph>托管进程内运行时定义异步点之间一致地会对其进行传输。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>An execution context is the managed equivalent of a COM apartment.</source>
          <target state="translated">执行上下文是一个 COM 单元内的托管等效项。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>Within an application domain, the entire execution context must be transferred whenever a thread is transferred.</source>
          <target state="translated">在应用程序域中，每当一个线程传输必须传输整个执行上下文。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>This situation occurs during transfers made by the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType&gt;</ph> method, most thread pool operations, and Windows Forms thread marshaling through the Windows message pump.</source>
          <target state="translated">这种情况发生在传输所做的过程<ph id="ph1">&lt;xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType&gt;</ph>方法、 大多数线程池操作和 Windows 窗体线程通过 Windows 消息泵封送处理。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>It does not occur in unsafe thread pool operations (such as the <ph id="ph1">&lt;xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A&gt;</ph> method), which do not transfer the compressed stack.</source>
          <target state="translated">它未发生在不安全的线程池操作 (如<ph id="ph1">&lt;xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A&gt;</ph>方法)，这不会传输压缩的堆栈。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>Wherever the compressed stack flows, the managed principal, synchronization, locale, and user context also flow.</source>
          <target state="translated">只要压缩的堆栈流动时，托管的主体、 同步、 区域设置，和用户上下文也随之流动。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>The <ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph> class provides the <ph id="ph2">&lt;xref:System.Threading.ExecutionContext.Capture%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Threading.ExecutionContext.CreateCopy%2A&gt;</ph> methods to get the execution context and the <ph id="ph4">&lt;xref:System.Threading.ExecutionContext.Run%2A&gt;</ph> method to set the execution context for the current thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph>类提供<ph id="ph2">&lt;xref:System.Threading.ExecutionContext.Capture%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Threading.ExecutionContext.CreateCopy%2A&gt;</ph>方法来获取的执行上下文和<ph id="ph4">&lt;xref:System.Threading.ExecutionContext.Run%2A&gt;</ph>方法以设置当前线程的执行上下文。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>An <ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph> that is associated with a thread cannot be set on another thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph>该键相关联的线程不能设置在另一个线程上。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>Attempting to do so will result in an exception being thrown.</source>
          <target state="translated">尝试这样做将导致引发异常。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>To propagate the <ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph> from one thread to another, make a copy of the <ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph>.</source>
          <target state="translated">若要传播<ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph>从到另一个线程，制作的副本<ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>Internally, the <ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph> stores all data that is associated with the <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.LogicalCallContext&gt;</ph>.</source>
          <target state="translated">在内部，<ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph>将与关联的所有数据都存储<ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.LogicalCallContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ExecutionContext">
          <source>This allows the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.LogicalCallContext&gt;</ph> data to be propagated when the <ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph> is copied and transferred.</source>
          <target state="translated">这允许<ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.LogicalCallContext&gt;</ph>数据时传播<ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph>复制和传输。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.Capture">
          <source>Captures the execution context from the current thread.</source>
          <target state="translated">从当前线程捕获执行上下文。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.Capture">
          <source>An <ph id="ph1">&lt;see cref="T:System.Threading.ExecutionContext" /&gt;</ph> object representing the execution context for the current thread.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Threading.ExecutionContext" /&gt;</ph> 对象，表示当前线程的执行上下文。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.Capture">
          <source>The captured execution context can be used as the <ph id="ph1">`executionContext`</ph> parameter for the <ph id="ph2">&lt;xref:System.Threading.ExecutionContext.Run%2A&gt;</ph> method.</source>
          <target state="translated">捕获的执行上下文可用作<ph id="ph1">`executionContext`</ph>参数<ph id="ph2">&lt;xref:System.Threading.ExecutionContext.Run%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.CreateCopy">
          <source>Creates a copy of the current execution context.</source>
          <target state="translated">创建当前执行上下文的副本。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.CreateCopy">
          <source>An <ph id="ph1">&lt;see cref="T:System.Threading.ExecutionContext" /&gt;</ph> object representing the current execution context.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Threading.ExecutionContext" /&gt;</ph> 对象，表示当前执行上下文。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.CreateCopy">
          <source>This method is useful for propagating an execution context from one thread to another.</source>
          <target state="translated">此方法可用于将传播到另一个线程从某个执行上下文。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.CreateCopy">
          <source>This context cannot be copied because it is used.</source>
          <target state="translated">此上下文正在使用，无法进行复制。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.CreateCopy">
          <source>Only newly captured contexts can be copied.</source>
          <target state="translated">只能复制新捕获的上下文。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Threading.ExecutionContext" /&gt;</ph> class.</source>
          <target state="translated">释放 <ph id="ph1">&lt;see cref="T:System.Threading.ExecutionContext" /&gt;</ph> 类的当前实例所使用的所有资源。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">`Dispose`</ph> 后，应调用 <ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 方法使 <ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Threading.ExecutionContext&gt;</ph> was occupying.</source>
          <target state="translated">在调用<ph id="ph1">`Dispose`</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph>以便垃圾回收器才能回收的内存，<ph id="ph3">&lt;xref:System.Threading.ExecutionContext&gt;</ph>占用。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">`Dispose`</ph> 的最后一个引用前，均应调用 <ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否则，在垃圾回收器调用 <ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph> 对象的 <ph id="ph2">`Finalize`</ph> 方法之前，该对象正在使用的资源不会被释放。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object to be populated with serialization information.</source>
          <target state="translated">要用序列化信息填充的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> structure representing the destination context of the serialization.</source>
          <target state="translated">表示序列化的目标上下文的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 结构。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Sets the specified <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the logical context information needed to recreate an instance of the current execution context.</source>
          <target state="translated">用重新创建当前执行上下文的实例所需的逻辑上下文信息设置指定的 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;xref:System.Threading.ExecutionContext.GetObjectData%2A&gt;</ph> sets a <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> with the logical call context information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.ExecutionContext.GetObjectData%2A&gt;</ph> 设置<ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>用逻辑调用上下文信息。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>During deserialization, the execution context object is reconstituted from the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> transmitted over the stream.</source>
          <target state="translated">在反序列化过程的执行上下文对象重建从<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>通过流传输。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;paramref name="info" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.IsFlowSuppressed">
          <source>Indicates whether the flow of the execution context is currently suppressed.</source>
          <target state="translated">指示当前是否取消了执行上下文的流动。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.IsFlowSuppressed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the flow is suppressed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果取消了流动，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.IsFlowSuppressed">
          <source>The <ph id="ph1">&lt;xref:System.Threading.ExecutionContext.IsFlowSuppressed%2A&gt;</ph> method is used by infrastructure components to determine whether to transfer the <ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph> during asynchronous operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.ExecutionContext.IsFlowSuppressed%2A&gt;</ph>方法由基础结构组件用来确定是否传输<ph id="ph2">&lt;xref:System.Threading.ExecutionContext&gt;</ph>在异步操作期间。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.RestoreFlow">
          <source>Restores the flow of the execution context across asynchronous threads.</source>
          <target state="translated">恢复执行上下文在异步线程之间的流动。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.RestoreFlow">
          <source><ph id="ph1">&lt;xref:System.Threading.ExecutionContext.RestoreFlow%2A&gt;</ph> reverses the effect of a prior <ph id="ph2">&lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A&gt;</ph> method call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.ExecutionContext.RestoreFlow%2A&gt;</ph> 反转之前的效果<ph id="ph2">&lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A&gt;</ph>方法调用。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.RestoreFlow">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph> structure returned by the <ph id="ph3">&lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A&gt;</ph> method.</source>
          <target state="translated">调用此方法<ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph>结构返回<ph id="ph3">&lt;xref:System.Threading.ExecutionContext.SuppressFlow%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.RestoreFlow">
          <source>You should use the <ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</ph> method to restore the flow of the execution context, not the <ph id="ph2">&lt;xref:System.Threading.ExecutionContext.RestoreFlow%2A&gt;</ph> method.</source>
          <target state="translated">应使用<ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</ph>方法，使未还原执行上下文的流<ph id="ph2">&lt;xref:System.Threading.ExecutionContext.RestoreFlow%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.RestoreFlow">
          <source>The context flow cannot be restored because it is not being suppressed.</source>
          <target state="translated">上下文流尚未取消，无法还原。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.ExecutionContext" /&gt;</ph> to set.</source>
          <target state="translated">要设置的 <ph id="ph1">&lt;see cref="T:System.Threading.ExecutionContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.ContextCallback" /&gt;</ph> delegate that represents the method to be run in the provided execution context.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Threading.ContextCallback" /&gt;</ph> 委托，表示要在提供的执行上下文中运行的方法。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
          <source>The object to pass to the callback method.</source>
          <target state="translated">要传递给回调方法的对象。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
          <source>Runs a method in a specified execution context on the current thread.</source>
          <target state="translated">在当前线程上的指定执行上下文中运行某个方法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
          <source>The execution context is returned to its previous state when the method completes.</source>
          <target state="translated">当方法完成的执行上下文返回到其以前的状态。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="executionContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="executionContext" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="executionContext" /&gt;</ph> was not acquired through a capture operation.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="executionContext" /&gt;</ph> 不是通过捕获操作获取的。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="executionContext" /&gt;</ph> has already been used as the argument to a <ph id="ph2">&lt;see cref="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" /&gt;</ph> call.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="executionContext" /&gt;</ph> 已用作 <ph id="ph2">&lt;see cref="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" /&gt;</ph> 调用的参数。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.SuppressFlow">
          <source>Suppresses the flow of the execution context across asynchronous threads.</source>
          <target state="translated">取消执行上下文在异步线程之间的流动。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.SuppressFlow">
          <source>An <ph id="ph1">&lt;see cref="T:System.Threading.AsyncFlowControl" /&gt;</ph> structure for restoring the flow.</source>
          <target state="translated">用于恢复流动的 <ph id="ph1">&lt;see cref="T:System.Threading.AsyncFlowControl" /&gt;</ph> 结构。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.SuppressFlow">
          <source>Use this method to suppress the flow of the <ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph> on the current thread.</source>
          <target state="translated">使用此方法来禁止显示的流<ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph>当前线程上。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.SuppressFlow">
          <source>You must use the <ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</ph> method on the returned <ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph> structure to restore the flow of the <ph id="ph3">&lt;xref:System.Threading.ExecutionContext&gt;</ph>.</source>
          <target state="translated">必须使用<ph id="ph1">&lt;xref:System.Threading.AsyncFlowControl.Undo%2A&gt;</ph>方法返回<ph id="ph2">&lt;xref:System.Threading.AsyncFlowControl&gt;</ph>结构要还原的流<ph id="ph3">&lt;xref:System.Threading.ExecutionContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.SuppressFlow">
          <source>This method is protected with a <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph> for <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType&gt;</ph> permission.</source>
          <target state="translated">此方法使用受保护<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType&gt;</ph>为<ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType&gt;</ph>权限。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.SuppressFlow">
          <source>A fully trusted component can call this method to suppress the flow of the <ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph> during asynchronous calls.</source>
          <target state="translated">完全受信任的组件可以调用此方法以禁止显示的流<ph id="ph1">&lt;xref:System.Threading.ExecutionContext&gt;</ph>异步调用期间。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.SuppressFlow">
          <source>While the flow is suppressed, the <ph id="ph1">&lt;xref:System.Security.SecurityContext.Capture%2A&gt;</ph> method returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">时取消流动，<ph id="ph1">&lt;xref:System.Security.SecurityContext.Capture%2A&gt;</ph>方法返回<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Threading.ExecutionContext.SuppressFlow">
          <source>The context flow is already suppressed.</source>
          <target state="translated">上下文流已取消。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.SuppressFlow">
          <source>Requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ExecutionContext.SuppressFlow">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>