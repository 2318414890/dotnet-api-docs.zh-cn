<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ApartmentState.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d1bb20b331a2cf192c829a9d88df113545519efc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1bb20b331a2cf192c829a9d88df113545519efc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.ApartmentState">
          <source>Specifies the apartment state of a <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph>.</source>
          <target state="translated">指定 <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> 的单元状态。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ApartmentState">
          <source>An apartment is a logical container within a process for objects sharing the same thread access requirements.</source>
          <target state="translated">单元是共享相同的线程访问要求的对象的进程中的逻辑容器。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ApartmentState">
          <source>All objects in the same apartment can receive calls from any thread in the apartment.</source>
          <target state="translated">相同单元中的所有对象可以都接收来自单元中的任何线程的调用。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ApartmentState">
          <source>The .NET Framework does not use apartments, and managed objects are responsible for using all shared resources in a thread-safe manner themselves.</source>
          <target state="translated">.NET Framework 不使用的单元，并且托管的对象负责本身以线程安全的方式使用共享的所有资源。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ApartmentState">
          <source>Because COM classes use apartments, the common language runtime needs to create and initialize an apartment when calling a COM object in a COM interop situation.</source>
          <target state="translated">由于 COM 类使用的单元，公共语言运行时将需要创建并初始化一个单元中的 COM 互操作的情况下调用 COM 对象时。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ApartmentState">
          <source>A managed thread can create and enter a single-threaded apartment (STA) that allows only one thread, or a multithreaded apartment (MTA) that contains one or more threads.</source>
          <target state="translated">托管的线程可以创建和输入仅允许一个线程，单线程单元 (STA) 或包含一个或多个线程的多线程的单元 (MTA)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ApartmentState">
          <source>You can control the type of apartment created by setting the <ph id="ph1">&lt;xref:System.Threading.Thread.ApartmentState%2A&gt;</ph> property of the thread to one of the values of the <ph id="ph2">&lt;xref:System.Threading.ApartmentState&gt;</ph> enumeration.</source>
          <target state="translated">你可以控制创建的设置的单元的类型<ph id="ph1">&lt;xref:System.Threading.Thread.ApartmentState%2A&gt;</ph>属性的值之一的线程<ph id="ph2">&lt;xref:System.Threading.ApartmentState&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ApartmentState">
          <source>Because a given thread can only initialize a COM apartment once, you cannot change the apartment type after the first call to the unmanaged code.</source>
          <target state="translated">给定的线程只能一次初始化 COM 单元，因为你在首次调用到非托管代码之后无法更改单元类型。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ApartmentState">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Threading.Thread&gt;</ph>, <bpt id="p1">[</bpt>Managed and Unmanaged Threading<ept id="p1">](http://msdn.microsoft.com/library/db425c20-4b2f-4433-bf96-76071c7881e5)</ept>, and <bpt id="p2">[</bpt>Advanced COM Interoperability<ept id="p2">](http://msdn.microsoft.com/library/3ada36e5-2390-4d70-b490-6ad8de92f2fb)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<ph id="ph1">&lt;xref:System.Threading.Thread&gt;</ph>，<bpt id="p1">[</bpt>托管和非托管线程处理<ept id="p1">](http://msdn.microsoft.com/library/db425c20-4b2f-4433-bf96-76071c7881e5)</ept>，和<bpt id="p2">[</bpt>高级 COM 互操作性<ept id="p2">](http://msdn.microsoft.com/library/3ada36e5-2390-4d70-b490-6ad8de92f2fb)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ApartmentState">
          <source>The following code example demonstrates how to set the apartment state of a thread.</source>
          <target state="translated">下面的代码示例演示如何设置线程的单元状态。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Threading.ApartmentState.MTA">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> will create and enter a multithreaded apartment.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> 将创建并进入一个多线程单元。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Threading.ApartmentState.STA">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> will create and enter a single-threaded apartment.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> 将创建并进入一个单线程单元。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Threading.ApartmentState.Unknown">
          <source>The <ph id="ph1">&lt;see cref="P:System.Threading.Thread.ApartmentState" /&gt;</ph> property has not been set.</source>
          <target state="translated">尚未设置 <ph id="ph1">&lt;see cref="P:System.Threading.Thread.ApartmentState" /&gt;</ph> 属性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>