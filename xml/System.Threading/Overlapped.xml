<Type Name="Overlapped" FullName="System.Threading.Overlapped">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80bd6535da52e3bb68b0053450d31fdd6a797482" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37754756" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Overlapped" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Overlapped extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Overlapped" />
  <TypeSignature Language="VB.NET" Value="Public Class Overlapped" />
  <TypeSignature Language="C++ CLI" Value="public ref class Overlapped" />
  <TypeSignature Language="F#" Value="type Overlapped = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Overlapped</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e3a73-101">提供 Win32 <c>OVERLAPPED</c> 结构的托管表现形式，包括从 <see cref="T:System.Threading.Overlapped" /> 实例向 <see cref="T:System.Threading.NativeOverlapped" /> 结构传输信息的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e3a73-101">Provides a managed representation of a Win32 <c>OVERLAPPED</c> structure, including methods to transfer information from an <see cref="T:System.Threading.Overlapped" /> instance to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3a73-102"><xref:System.Threading.Overlapped.Pack%2A>并<xref:System.Threading.Overlapped.UnsafePack%2A>方法将信息从传输<xref:System.Threading.Overlapped>对象传递给<xref:System.Threading.NativeOverlapped>结构，它可以传递给 Win32 API 函数以用于异步文件 I/O。</span><span class="sxs-lookup"><span data-stu-id="e3a73-102">The <xref:System.Threading.Overlapped.Pack%2A> and <xref:System.Threading.Overlapped.UnsafePack%2A> methods transfer information from an <xref:System.Threading.Overlapped> object to a <xref:System.Threading.NativeOverlapped> structure that can be passed to Win32 API functions for asynchronous file I/O.</span></span> <span data-ttu-id="e3a73-103"><xref:System.Threading.Overlapped.Unpack%2A>方法将信息从传输<xref:System.Threading.NativeOverlapped>结构的实例与<xref:System.Threading.Overlapped>类。</span><span class="sxs-lookup"><span data-stu-id="e3a73-103">The <xref:System.Threading.Overlapped.Unpack%2A> method transfers information from a <xref:System.Threading.NativeOverlapped> structure to an instance of the <xref:System.Threading.Overlapped> class.</span></span>  
  
 <span data-ttu-id="e3a73-104">对的属性的更改<xref:System.Threading.Overlapped>对象会影响其关联<xref:System.Threading.NativeOverlapped>结构，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="e3a73-104">Changes to the properties of an <xref:System.Threading.Overlapped> object affect its associated <xref:System.Threading.NativeOverlapped> structure, and vice versa.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3a73-105">初始化 <see cref="T:System.Threading.Overlapped" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-105">Initializes a new instance of the <see cref="T:System.Threading.Overlapped" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Overlapped ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Overlapped();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e3a73-106">初始化 <see cref="T:System.Threading.Overlapped" /> 类的新的空实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-106">Initializes a new, empty instance of the <see cref="T:System.Threading.Overlapped" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Overlapped (int offsetLo, int offsetHi, int hEvent, IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 offsetLo, int32 offsetHi, int32 hEvent, class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (offsetLo As Integer, offsetHi As Integer, hEvent As Integer, ar As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Overlapped(int offsetLo, int offsetHi, int hEvent, IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="new System.Threading.Overlapped : int * int * int * IAsyncResult -&gt; System.Threading.Overlapped" Usage="new System.Threading.Overlapped (offsetLo, offsetHi, hEvent, ar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Not 64bit compatible.  Please use the constructor that takes IntPtr for the event handle")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="offsetLo" Type="System.Int32" />
        <Parameter Name="offsetHi" Type="System.Int32" />
        <Parameter Name="hEvent" Type="System.Int32" />
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="offsetLo">
          <span data-ttu-id="e3a73-107">启动传输的文件位置的低位字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-107">The low word of the file position at which to start the transfer.</span>
          </span>
        </param>
        <param name="offsetHi">
          <span data-ttu-id="e3a73-108">启动传输的文件位置的高位字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-108">The high word of the file position at which to start the transfer.</span>
          </span>
        </param>
        <param name="hEvent">
          <span data-ttu-id="e3a73-109">当 I/O 操作完成时终止的事件的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-109">The handle to an event that is signaled when the I/O operation is complete.</span>
          </span>
        </param>
        <param name="ar">
          <span data-ttu-id="e3a73-110">一个实现 <see cref="T:System.IAsyncResult" /> 接口并提供 I/O 操作的状态信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-110">An object that implements the <see cref="T:System.IAsyncResult" /> interface and provides status information on the I/O operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3a73-111">用指定的文件位置、当 I/O 操作完成时终止的事件的 32 位整型句柄、以及一个用来返回操作结果的接口初始化 <see cref="T:System.Threading.Overlapped" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-111">Initializes a new instance of the <see cref="T:System.Threading.Overlapped" /> class with the specified file position, the 32-bit integer handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3a73-112">使用<xref:System.Threading.WaitHandle.Handle%2A?displayProperty=nameWithType>属性获取的派生的任何托管的同步事件句柄<xref:System.Threading.WaitHandle>类。</span><span class="sxs-lookup"><span data-stu-id="e3a73-112">Use the <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=nameWithType> property to get the handle of any managed synchronization event that derives from the <xref:System.Threading.WaitHandle> class.</span></span>  
  
 <span data-ttu-id="e3a73-113">实现<xref:System.IAsyncResult>提供 I/O 操作的状态信息。</span><span class="sxs-lookup"><span data-stu-id="e3a73-113">Your implementation of <xref:System.IAsyncResult> provides status information on the I/O operation.</span></span> <span data-ttu-id="e3a73-114">将其传递给构造函数中`ar`参数，并检索其更高版本与<xref:System.Threading.Overlapped.AsyncResult%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e3a73-114">Pass it to the constructor in the `ar` parameter, and retrieve it later with the <xref:System.Threading.Overlapped.AsyncResult%2A> property.</span></span> <span data-ttu-id="e3a73-115">如果为指定的回调方法<xref:System.Threading.Overlapped.Pack%2A>或<xref:System.Threading.Overlapped.UnsafePack%2A>方法，可以检索回调您<xref:System.IAsyncResult>通过解压缩<xref:System.Threading.NativeOverlapped>它收到的结构。</span><span class="sxs-lookup"><span data-stu-id="e3a73-115">If a callback method is specified for the <xref:System.Threading.Overlapped.Pack%2A> or <xref:System.Threading.Overlapped.UnsafePack%2A> method, the callback can retrieve your <xref:System.IAsyncResult> by unpacking the <xref:System.Threading.NativeOverlapped> structure it receives.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Overlapped (int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 offsetLo, int32 offsetHi, native int hEvent, class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (offsetLo As Integer, offsetHi As Integer, hEvent As IntPtr, ar As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Overlapped(int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="new System.Threading.Overlapped : int * int * nativeint * IAsyncResult -&gt; System.Threading.Overlapped" Usage="new System.Threading.Overlapped (offsetLo, offsetHi, hEvent, ar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="offsetLo" Type="System.Int32" />
        <Parameter Name="offsetHi" Type="System.Int32" />
        <Parameter Name="hEvent" Type="System.IntPtr" />
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="offsetLo">
          <span data-ttu-id="e3a73-116">启动传输的文件位置的低位字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-116">The low word of the file position at which to start the transfer.</span>
          </span>
        </param>
        <param name="offsetHi">
          <span data-ttu-id="e3a73-117">启动传输的文件位置的高位字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-117">The high word of the file position at which to start the transfer.</span>
          </span>
        </param>
        <param name="hEvent">
          <span data-ttu-id="e3a73-118">当 I/O 操作完成时终止的事件的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-118">The handle to an event that is signaled when the I/O operation is complete.</span>
          </span>
        </param>
        <param name="ar">
          <span data-ttu-id="e3a73-119">一个实现 <see cref="T:System.IAsyncResult" /> 接口并提供 I/O 操作的状态信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-119">An object that implements the <see cref="T:System.IAsyncResult" /> interface and provides status information on the I/O operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3a73-120">用指定的文件位置、当 I/O 操作完成时终止的事件的句柄、以及一个用来返回操作结果的接口初始化 <see cref="T:System.Threading.Overlapped" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-120">Initializes a new instance of the <see cref="T:System.Threading.Overlapped" /> class with the specified file position, the handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3a73-121">若要获取派生的托管的同步对象的句柄<xref:System.Threading.WaitHandle>类中，使用<xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType>属性来获取<xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>对象，，然后调用<xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3a73-121">To get the handle of a managed synchronization object that derives from the <xref:System.Threading.WaitHandle> class, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> property to get a <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> object, and then call the <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> method.</span></span>  
  
 <span data-ttu-id="e3a73-122">实现<xref:System.IAsyncResult>提供 I/O 操作的状态信息。</span><span class="sxs-lookup"><span data-stu-id="e3a73-122">Your implementation of <xref:System.IAsyncResult> provides status information on the I/O operation.</span></span> <span data-ttu-id="e3a73-123">将其传递给构造函数中`ar`参数，并检索其更高版本与<xref:System.Threading.Overlapped.AsyncResult%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="e3a73-123">Pass it to the constructor in the `ar` parameter, and retrieve it later with the <xref:System.Threading.Overlapped.AsyncResult%2A> property.</span></span> <span data-ttu-id="e3a73-124">如果为指定的回调方法<xref:System.Threading.Overlapped.Pack%2A>或<xref:System.Threading.Overlapped.UnsafePack%2A>方法，可以检索回调您<xref:System.IAsyncResult>通过解压缩<xref:System.Threading.NativeOverlapped>它收到的结构。</span><span class="sxs-lookup"><span data-stu-id="e3a73-124">If a callback method is specified for the <xref:System.Threading.Overlapped.Pack%2A> or <xref:System.Threading.Overlapped.UnsafePack%2A> method, the callback can retrieve your <xref:System.IAsyncResult> by unpacking the <xref:System.Threading.NativeOverlapped> structure it receives.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Threading.Overlapped.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3a73-125">获取或设置提供 I/O 操作的状态信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-125">Gets or sets the object that provides status information on the I/O operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3a73-126">一个实现 <see cref="T:System.IAsyncResult" /> 接口的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-126">An object that implements the <see cref="T:System.IAsyncResult" /> interface.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHandle">
      <MemberSignature Language="C#" Value="public int EventHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EventHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.EventHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property EventHandle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EventHandle { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EventHandle : int with get, set" Usage="System.Threading.Overlapped.EventHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Not 64bit compatible.  Use EventHandleIntPtr instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3a73-127">获取或设置当 I/O 操作完成时终止的同步事件的 32 位整型句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-127">Gets or sets the 32-bit integer handle to a synchronization event that is signaled when the I/O operation is complete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3a73-128">表示同步事件句柄的 <see cref="T:System.Int32" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-128">An <see cref="T:System.Int32" /> value representing the handle of the synchronization event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3a73-129">不能在 64 位平台上使用此属性。</span><span class="sxs-lookup"><span data-stu-id="e3a73-129">This property cannot be used on 64-bit platforms.</span></span> <span data-ttu-id="e3a73-130">改用 <xref:System.Threading.Overlapped.EventHandleIntPtr%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e3a73-130">Use the <xref:System.Threading.Overlapped.EventHandleIntPtr%2A> property instead.</span></span>  
  
 <span data-ttu-id="e3a73-131">使用<xref:System.Threading.WaitHandle.Handle%2A?displayProperty=nameWithType>属性获取的派生的任何托管的同步事件句柄<xref:System.Threading.WaitHandle>类。</span><span class="sxs-lookup"><span data-stu-id="e3a73-131">Use the <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=nameWithType> property to get the handle of any managed synchronization event that derives from the <xref:System.Threading.WaitHandle> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventHandleIntPtr">
      <MemberSignature Language="C#" Value="public IntPtr EventHandleIntPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int EventHandleIntPtr" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.EventHandleIntPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property EventHandleIntPtr As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr EventHandleIntPtr { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.EventHandleIntPtr : nativeint with get, set" Usage="System.Threading.Overlapped.EventHandleIntPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3a73-132">获取或设置当 I/O 操作完成时终止的同步事件的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-132">Gets or sets the handle to the synchronization event that is signaled when the I/O operation is complete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3a73-133">表示事件句柄的 <see cref="T:System.IntPtr" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-133">An <see cref="T:System.IntPtr" /> representing the handle of the event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3a73-134">若要获取派生的托管的同步对象的句柄<xref:System.Threading.WaitHandle>类中，使用<xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType>属性来获取<xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>对象，，然后调用<xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3a73-134">To get the handle of a managed synchronization object that derives from the <xref:System.Threading.WaitHandle> class, use the <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=nameWithType> property to get a <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> object, and then call the <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Free">
      <MemberSignature Language="C#" Value="public static void Free (System.Threading.NativeOverlapped* nativeOverlappedPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Free(valuetype System.Threading.NativeOverlapped* nativeOverlappedPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Free(System::Threading::NativeOverlapped* nativeOverlappedPtr);" />
      <MemberSignature Language="F#" Value="static member Free : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; unit" Usage="System.Threading.Overlapped.Free nativeOverlappedPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeOverlappedPtr" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="nativeOverlappedPtr">
          <span data-ttu-id="e3a73-135">指向要释放的 <see cref="T:System.Threading.NativeOverlapped" /> 结构的指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-135">A pointer to the <see cref="T:System.Threading.NativeOverlapped" /> structure to be freed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3a73-136">释放与 <see cref="Overload:System.Threading.Overlapped.Pack" /> 方法分配的本机重叠结构关联的非托管内存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-136">Frees the unmanaged memory associated with a native overlapped structure allocated by the <see cref="Overload:System.Threading.Overlapped.Pack" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3a73-137">必须调用<xref:System.Threading.Overlapped.Free%2A>上的方法一次每个<xref:System.Threading.NativeOverlapped>指针从接收<xref:System.Threading.Overlapped.Pack%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3a73-137">You must call the <xref:System.Threading.Overlapped.Free%2A> method exactly once on every <xref:System.Threading.NativeOverlapped> pointer you receive from the <xref:System.Threading.Overlapped.Pack%2A> method.</span></span> <span data-ttu-id="e3a73-138">如果不调用<xref:System.Threading.Overlapped.Free%2A>方法中，会发生内存泄漏。</span><span class="sxs-lookup"><span data-stu-id="e3a73-138">If you don't call the <xref:System.Threading.Overlapped.Free%2A> method, you will leak memory.</span></span> <span data-ttu-id="e3a73-139">如果调用<xref:System.Threading.Overlapped.Free%2A>方法不止一次，内存会被破坏。</span><span class="sxs-lookup"><span data-stu-id="e3a73-139">If you call the <xref:System.Threading.Overlapped.Free%2A> method more than once, memory will be corrupted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e3a73-140">
            <paramref name="nativeOverlappedPtr" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-140">
              <paramref name="nativeOverlappedPtr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e3a73-141">直接调用方需要完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-141">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="e3a73-142">不能由部分受信任的或透明的代码使用此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-142">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OffsetHigh">
      <MemberSignature Language="C#" Value="public int OffsetHigh { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OffsetHigh" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.OffsetHigh" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetHigh As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OffsetHigh { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetHigh : int with get, set" Usage="System.Threading.Overlapped.OffsetHigh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3a73-143">获取或设置启动传输的文件位置的高序位字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-143">Gets or sets the high-order word of the file position at which to start the transfer.</span>
          </span>
          <span data-ttu-id="e3a73-144">文件位置是距文件起始处的字节偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-144">The file position is a byte offset from the start of the file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3a73-145">表示文件位置高位字的 <see cref="T:System.Int32" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-145">An <see cref="T:System.Int32" /> value representing the high word of the file position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetLow">
      <MemberSignature Language="C#" Value="public int OffsetLow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OffsetLow" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Overlapped.OffsetLow" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetLow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OffsetLow { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetLow : int with get, set" Usage="System.Threading.Overlapped.OffsetLow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e3a73-146">获取或设置启动传输的文件位置的低序位字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-146">Gets or sets the low-order word of the file position at which to start the transfer.</span>
          </span>
          <span data-ttu-id="e3a73-147">文件位置是距文件起始处的字节偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-147">The file position is a byte offset from the start of the file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e3a73-148">表示文件位置低位字的 <see cref="T:System.Int32" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-148">An <see cref="T:System.Int32" /> value representing the low word of the file position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Pack">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3a73-149">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-149">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pack">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* Pack(class System.Threading.IOCompletionCallback iocb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* Pack(System::Threading::IOCompletionCallback ^ iocb);" />
      <MemberSignature Language="F#" Value="member this.Pack : System.Threading.IOCompletionCallback -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="overlapped.Pack iocb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use Pack(iocb, userData) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" />
      </Parameters>
      <Docs>
        <param name="iocb">
          <span data-ttu-id="e3a73-150">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-150">An <see cref="T:System.Threading.IOCompletionCallback" /> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3a73-151">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-151">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure, specifying the delegate to be invoked when the asynchronous I/O operation is complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3a73-152">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-152">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3a73-153">此方法返回的非托管的指针可以传递给重叠 I/O 操作中的操作系统。</span><span class="sxs-lookup"><span data-stu-id="e3a73-153">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="e3a73-154"><xref:System.Threading.NativeOverlapped>结构固定的物理内存中，直到<xref:System.Threading.Overlapped.Unpack%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="e3a73-154">The <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until <xref:System.Threading.Overlapped.Unpack%2A> is called.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e3a73-155">调用方负责固定缓冲区。</span><span class="sxs-lookup"><span data-stu-id="e3a73-155">The caller is responsible for pinning the buffer.</span></span> <span data-ttu-id="e3a73-156">如果应用程序域被卸载，但是，销毁的句柄的固定缓冲区，并释放缓冲区，使 I/O 操作要写入已释放的地址。</span><span class="sxs-lookup"><span data-stu-id="e3a73-156">If the application domain is unloaded, however, the handle to the pinned buffer is destroyed and the buffer is released, leaving the I/O operation to write to the freed address.</span></span> <span data-ttu-id="e3a73-157">出于此原因，最好使用<xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>方法重载中，在其中运行时固定缓冲区。</span><span class="sxs-lookup"><span data-stu-id="e3a73-157">For this reason, it is better to use the <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29> method overload, in which the runtime pins the buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e3a73-158">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-158">The current <see cref="T:System.Threading.Overlapped" /> has already been packed.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e3a73-159">直接调用方需要完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-159">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="e3a73-160">不能由部分受信任的或透明的代码使用此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-160">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Pack">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb, object userData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* Pack(class System.Threading.IOCompletionCallback iocb, object userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* Pack(System::Threading::IOCompletionCallback ^ iocb, System::Object ^ userData);" />
      <MemberSignature Language="F#" Value="member this.Pack : System.Threading.IOCompletionCallback * obj -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="overlapped.Pack (iocb, userData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" />
        <Parameter Name="userData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="iocb">
          <span data-ttu-id="e3a73-161">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-161">An <see cref="T:System.Threading.IOCompletionCallback" /> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</span>
          </span>
        </param>
        <param name="userData">
          <span data-ttu-id="e3a73-162">对象或对象的数组，表示用于操作的输入或输出缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-162">An object or array of objects representing the input or output buffer for the operation.</span>
          </span>
          <span data-ttu-id="e3a73-163">每个对象都表示一个缓冲区，例如字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-163">Each object represents a buffer, for example an array of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3a73-164">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托，以及作为缓冲区的托管对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-164">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete and a managed object that serves as a buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3a73-165">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-165">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3a73-166">此方法返回的非托管的指针可以传递给重叠 I/O 操作中的操作系统。</span><span class="sxs-lookup"><span data-stu-id="e3a73-166">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="e3a73-167"><xref:System.Threading.NativeOverlapped>结构固定的物理内存中，直到<xref:System.Threading.Overlapped.Unpack%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="e3a73-167">The <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until <xref:System.Threading.Overlapped.Unpack%2A> is called.</span></span>  
  
 <span data-ttu-id="e3a73-168">缓冲区或缓冲区中指定`userData`必须与传递给执行异步 I/O 的非托管的操作系统函数相同。</span><span class="sxs-lookup"><span data-stu-id="e3a73-168">The buffer or buffers specified in `userData` must be the same as those passed to the unmanaged operating system function that performs the asynchronous I/O.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e3a73-169">在运行时固定的缓冲区或缓冲区中指定`userData`I/O 操作的持续时间。</span><span class="sxs-lookup"><span data-stu-id="e3a73-169">The runtime pins the buffer or buffers specified in `userData` for the duration of the I/O operation.</span></span> <span data-ttu-id="e3a73-170">如果应用程序域卸载时，运行时保留内存以固定，直到 I/O 操作完成。</span><span class="sxs-lookup"><span data-stu-id="e3a73-170">If the application domain is unloaded, the runtime keeps the memory pinned until the I/O operation completes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e3a73-171">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-171">The current <see cref="T:System.Threading.Overlapped" /> has already been packed.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e3a73-172">直接调用方需要完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-172">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="e3a73-173">不能由部分受信任的或透明的代码使用此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-173">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Unpack">
      <MemberSignature Language="C#" Value="public static System.Threading.Overlapped Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Overlapped Unpack(valuetype System.Threading.NativeOverlapped* nativeOverlappedPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Overlapped ^ Unpack(System::Threading::NativeOverlapped* nativeOverlappedPtr);" />
      <MemberSignature Language="F#" Value="static member Unpack : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; System.Threading.Overlapped" Usage="System.Threading.Overlapped.Unpack nativeOverlappedPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Overlapped</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeOverlappedPtr" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="nativeOverlappedPtr">
          <span data-ttu-id="e3a73-174">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-174">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3a73-175">将指定的非托管 <see cref="T:System.Threading.NativeOverlapped" /> 结构解压缩为 <see cref="T:System.Threading.Overlapped" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-175">Unpacks the specified unmanaged <see cref="T:System.Threading.NativeOverlapped" /> structure into a managed <see cref="T:System.Threading.Overlapped" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3a73-176">一个 <see cref="T:System.Threading.Overlapped" /> 对象，包含从本机结构解压缩的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-176">An <see cref="T:System.Threading.Overlapped" /> object containing the information unpacked from the native structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3a73-177"><xref:System.Threading.NativeOverlapped>结构不释放从物理内存，直到你调用<xref:System.Threading.Overlapped.Free%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e3a73-177">The <xref:System.Threading.NativeOverlapped> structure is not freed from physical memory until you call the <xref:System.Threading.Overlapped.Free%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e3a73-178">
            <paramref name="nativeOverlappedPtr" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-178">
              <paramref name="nativeOverlappedPtr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e3a73-179">直接调用方需要完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-179">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="e3a73-180">不能由部分受信任的或透明的代码使用此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-180">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnsafePack">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e3a73-181">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-181">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span>
          </span>
          <span data-ttu-id="e3a73-182">不传播该调用堆栈。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-182">Does not propagate the calling stack.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnsafePack">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* UnsafePack(class System.Threading.IOCompletionCallback iocb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* UnsafePack(System::Threading::IOCompletionCallback ^ iocb);" />
      <MemberSignature Language="F#" Value="member this.UnsafePack : System.Threading.IOCompletionCallback -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="overlapped.UnsafePack iocb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("Use UnsafePack(iocb, userData) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" />
      </Parameters>
      <Docs>
        <param name="iocb">
          <span data-ttu-id="e3a73-183">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-183">An <see cref="T:System.Threading.IOCompletionCallback" /> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3a73-184">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-184">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure specifying the delegate to invoke when the asynchronous I/O operation is complete.</span>
          </span>
          <span data-ttu-id="e3a73-185">不传播该调用堆栈。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-185">Does not propagate the calling stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3a73-186">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-186">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3a73-187">此方法返回的非托管的指针可以传递给重叠 I/O 操作中的操作系统。</span><span class="sxs-lookup"><span data-stu-id="e3a73-187">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="e3a73-188"><xref:System.Threading.NativeOverlapped>结构固定的物理内存中，直到<xref:System.Threading.Overlapped.Unpack%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="e3a73-188">The <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until <xref:System.Threading.Overlapped.Unpack%2A> is called.</span></span>  
  
 <span data-ttu-id="e3a73-189">调用方负责固定缓冲区。</span><span class="sxs-lookup"><span data-stu-id="e3a73-189">The caller is responsible for pinning the buffer.</span></span> <span data-ttu-id="e3a73-190">如果应用程序域被卸载，但是，销毁的句柄的固定缓冲区，并释放缓冲区，使 I/O 操作要写入已释放的地址。</span><span class="sxs-lookup"><span data-stu-id="e3a73-190">If the application domain is unloaded, however, the handle to the pinned buffer is destroyed and the buffer is released, leaving the I/O operation to write to the freed address.</span></span> <span data-ttu-id="e3a73-191">出于此原因，最好使用<xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>方法重载中，在其中运行时固定缓冲区。</span><span class="sxs-lookup"><span data-stu-id="e3a73-191">For this reason, it is better to use the <xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29> method overload, in which the runtime pins the buffer.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e3a73-192">使用<xref:System.Threading.Overlapped.UnsafePack%2A>方法可能会无意中打开安全漏洞。</span><span class="sxs-lookup"><span data-stu-id="e3a73-192">Using the <xref:System.Threading.Overlapped.UnsafePack%2A> method could inadvertently open up a security hole.</span></span> <span data-ttu-id="e3a73-193">代码访问安全性基础在堆栈上的所有调用方的权限及其权限检查。</span><span class="sxs-lookup"><span data-stu-id="e3a73-193">Code access security bases its permission checks on the permissions of all the callers on the stack.</span></span> <span data-ttu-id="e3a73-194"><xref:System.Threading.Overlapped.UnsafePack%2A>方法不会传播到调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="e3a73-194">The <xref:System.Threading.Overlapped.UnsafePack%2A> method does not propagate the calling stack.</span></span> <span data-ttu-id="e3a73-195">恶意代码可能能够利用这一点以避免权限检查。</span><span class="sxs-lookup"><span data-stu-id="e3a73-195">Malicious code might be able to exploit this to avoid permission checks.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e3a73-196">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-196">The current <see cref="T:System.Threading.Overlapped" /> has already been packed.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e3a73-197">直接调用方需要完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-197">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="e3a73-198">不能由部分受信任的或透明的代码使用此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-198">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="UnsafePack">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* UnsafePack(class System.Threading.IOCompletionCallback iocb, object userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* UnsafePack(System::Threading::IOCompletionCallback ^ iocb, System::Object ^ userData);" />
      <MemberSignature Language="F#" Value="member this.UnsafePack : System.Threading.IOCompletionCallback * obj -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="overlapped.UnsafePack (iocb, userData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" />
        <Parameter Name="userData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="iocb">
          <span data-ttu-id="e3a73-199">一个 <see cref="T:System.Threading.IOCompletionCallback" /> 委托，表示在异步 I/O 操作完成时调用的回调方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-199">An <see cref="T:System.Threading.IOCompletionCallback" /> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</span>
          </span>
        </param>
        <param name="userData">
          <span data-ttu-id="e3a73-200">对象或对象的数组，表示用于操作的输入或输出缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-200">An object or array of objects representing the input or output buffer for the operation.</span>
          </span>
          <span data-ttu-id="e3a73-201">每个对象都表示一个缓冲区，例如字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-201">Each object represents a buffer, for example an array of bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e3a73-202">将当前实例打包为一个 <see cref="T:System.Threading.NativeOverlapped" /> 结构，并指定当异步 I/O 操作完成时调用的委托，以及作为缓冲区的托管对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-202">Packs the current instance into a <see cref="T:System.Threading.NativeOverlapped" /> structure, specifying the delegate to invoke when the asynchronous I/O operation is complete and the managed object that serves as a buffer.</span>
          </span>
          <span data-ttu-id="e3a73-203">不传播该调用堆栈。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-203">Does not propagate the calling stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e3a73-204">一个指向 <see cref="T:System.Threading.NativeOverlapped" /> 结构的非托管指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-204">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e3a73-205">此方法返回的非托管的指针可以传递给重叠 I/O 操作中的操作系统。</span><span class="sxs-lookup"><span data-stu-id="e3a73-205">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="e3a73-206"><xref:System.Threading.NativeOverlapped>结构固定的物理内存中，直到<xref:System.Threading.Overlapped.Unpack%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="e3a73-206">The <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until <xref:System.Threading.Overlapped.Unpack%2A> is called.</span></span>  
  
 <span data-ttu-id="e3a73-207">缓冲区或缓冲区中指定`userData`必须与传递给执行异步 I/O 的非托管的操作系统函数相同。</span><span class="sxs-lookup"><span data-stu-id="e3a73-207">The buffer or buffers specified in `userData` must be the same as those passed to the unmanaged operating system function that performs the asynchronous I/O.</span></span>  
  
 <span data-ttu-id="e3a73-208">在运行时固定的缓冲区或缓冲区中指定`userData`I/O 操作的持续时间。</span><span class="sxs-lookup"><span data-stu-id="e3a73-208">The runtime pins the buffer or buffers specified in`userData` for the duration of the I/O operation.</span></span> <span data-ttu-id="e3a73-209">如果应用程序域卸载时，运行时保留内存以固定，直到 I/O 操作完成。</span><span class="sxs-lookup"><span data-stu-id="e3a73-209">If the application domain is unloaded, the runtime keeps the memory pinned until the I/O operation completes.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e3a73-210">使用<xref:System.Threading.Overlapped.UnsafePack%2A>方法可能会无意中打开安全漏洞。</span><span class="sxs-lookup"><span data-stu-id="e3a73-210">Using the <xref:System.Threading.Overlapped.UnsafePack%2A> method could inadvertently open up a security hole.</span></span> <span data-ttu-id="e3a73-211">代码访问安全性基础在堆栈上的所有调用方的权限及其权限检查。</span><span class="sxs-lookup"><span data-stu-id="e3a73-211">Code access security bases its permission checks on the permissions of all the callers on the stack.</span></span> <span data-ttu-id="e3a73-212"><xref:System.Threading.Overlapped.UnsafePack%2A>方法不会传播到调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="e3a73-212">The <xref:System.Threading.Overlapped.UnsafePack%2A> method does not propagate the calling stack.</span></span> <span data-ttu-id="e3a73-213">恶意代码可能能够利用这一点以避免权限检查。</span><span class="sxs-lookup"><span data-stu-id="e3a73-213">Malicious code might be able to exploit this to avoid permission checks.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e3a73-214">调用方没有所要求的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-214">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e3a73-215">已对当前的 <see cref="T:System.Threading.Overlapped" /> 打包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-215">The current <see cref="T:System.Threading.Overlapped" /> is already packed.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e3a73-216">直接调用方需要完全信任。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-216">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="e3a73-217">不能由部分受信任的或透明的代码使用此成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e3a73-217">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>