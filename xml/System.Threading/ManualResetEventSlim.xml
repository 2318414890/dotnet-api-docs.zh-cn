<Type Name="ManualResetEventSlim" FullName="System.Threading.ManualResetEventSlim">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7525a47946f2ca16934b6f03acc5ce6bd78e6e66" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManualResetEventSlim : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManualResetEventSlim extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ManualResetEventSlim" />
  <TypeSignature Language="VB.NET" Value="Public Class ManualResetEventSlim&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManualResetEventSlim : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Set = {IsSet}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ca89f-101">提供 <see cref="T:System.Threading.ManualResetEvent" /> 的简化版本。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca89f-101">Provides a slimmed down version of <see cref="T:System.Threading.ManualResetEvent" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca89f-102">可将此类用于更好的性能比<xref:System.Threading.ManualResetEvent>和事件不能跨越进程边界时等待时间预计很短。</span><span class="sxs-lookup"><span data-stu-id="ca89f-102">You can use this class for better performance than <xref:System.Threading.ManualResetEvent> when wait times are expected to be very short, and when the event does not cross a process boundary.</span></span> <span data-ttu-id="ca89f-103">等待事件收到信号期间，<xref:System.Threading.ManualResetEventSlim> 会短暂使用忙碌旋转。</span><span class="sxs-lookup"><span data-stu-id="ca89f-103"><xref:System.Threading.ManualResetEventSlim> uses busy spinning for a short time while it waits for the event to become signaled.</span></span> <span data-ttu-id="ca89f-104">等待时间较短时，旋转的开销相对于使用等待句柄来进行等待的开销会少很多。</span><span class="sxs-lookup"><span data-stu-id="ca89f-104">When wait times are short, spinning can be much less expensive than waiting by using wait handles.</span></span> <span data-ttu-id="ca89f-105">不过，如果在特定时间段内事件没有收到信号，<xref:System.Threading.ManualResetEventSlim> 会求助于常规的事件句柄等待。</span><span class="sxs-lookup"><span data-stu-id="ca89f-105">However, if the event does not become signaled within a certain period of time, <xref:System.Threading.ManualResetEventSlim> resorts to a regular event handle wait.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca89f-106">下面的示例演示如何使用<xref:System.Threading.ManualResetEventSlim>。</span><span class="sxs-lookup"><span data-stu-id="ca89f-106">The following example shows how to use a <xref:System.Threading.ManualResetEventSlim>.</span></span> <span data-ttu-id="ca89f-107">有关使用有关的详细信息`SpinCount`和其他最佳实践，有关使用此类型，请参阅[ManualResetEvent 和 ManualResetEventSlim](~/docs/standard/threading/manualresetevent-and-manualreseteventslim.md)。</span><span class="sxs-lookup"><span data-stu-id="ca89f-107">For more information about the use of `SpinCount` and other best practices concerning the use of this type, see [ManualResetEvent and ManualResetEventSlim](~/docs/standard/threading/manualresetevent-and-manualreseteventslim.md).</span></span>  
  
 [!code-csharp[System.Threading.ManualResetEventSlim#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.manualreseteventslim/cs/mres.cs#01)]
 [!code-vb[System.Threading.ManualResetEventSlim#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.manualreseteventslim/vb/mres.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="ca89f-108">所有公共和受保护成员<see cref="T:System.Threading.ManualResetEventSlim" />是线程安全的可同时从多个线程，Dispose 除外，它必须仅使用时使用上的所有其他操作<see cref="T:System.Threading.ManualResetEventSlim" />已完成，并且将重置，这应只用于在没有其他线程访问事件时。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca89f-108">All public and protected members of <see cref="T:System.Threading.ManualResetEventSlim" /> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <see cref="T:System.Threading.ManualResetEventSlim" /> have completed, and Reset, which should only be used when no other threads are accessing the event.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca89f-109">初始化 <see cref="T:System.Threading.ManualResetEventSlim" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-109">Initializes a new instance of the <see cref="T:System.Threading.ManualResetEventSlim" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualResetEventSlim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManualResetEventSlim();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca89f-110">使用无信号初始状态初始化 <see cref="T:System.Threading.ManualResetEventSlim" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-110">Initializes a new instance of the <see cref="T:System.Threading.ManualResetEventSlim" /> class with an initial state of nonsignaled.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualResetEventSlim (bool initialState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManualResetEventSlim(bool initialState);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="initialState">
          <span data-ttu-id="ca89f-111">若要将初始状态设置为终止，则为 true；若要将初始状态设置为非终止，则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-111">true to set the initial state signaled; false to set the initial state to nonsignaled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca89f-112">使用一个指示是否将初始状态设置为有信号的布尔值初始化 <see cref="T:System.Threading.ManualResetEventSlim" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-112">Initializes a new instance of the <see cref="T:System.Threading.ManualResetEventSlim" /> class with a Boolean value indicating whether to set the intial state to signaled.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualResetEventSlim (bool initialState, int spinCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool initialState, int32 spinCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.#ctor(System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialState As Boolean, spinCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManualResetEventSlim(bool initialState, int spinCount);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialState" Type="System.Boolean" />
        <Parameter Name="spinCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialState">
          <span data-ttu-id="ca89f-113">若要将初始状态设置为终止，则为 true；若要将初始状态设置为非终止，则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-113">true to set the initial state to signaled; false to set the initial state to nonsignaled.</span>
          </span>
        </param>
        <param name="spinCount">
          <span data-ttu-id="ca89f-114">在回退到基于内核的等待操作之前发生的自旋等待数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-114">The number of spin waits that will occur before falling back to a kernel-based wait operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca89f-115">使用一个指示是否将初始状态设置为有信号和指定自旋计数的布尔值初始化 <see cref="T:System.Threading.ManualResetEventSlim" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-115">Initializes a new instance of the <see cref="T:System.Threading.ManualResetEventSlim" /> class with a Boolean value indicating whether to set the intial state to signaled and a specified spin count.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca89f-116">
            <paramref name="spinCount" /> 小于 0 或大于允许的最大值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-116">
              <paramref name="spinCount" /> is less than 0 or greater than the maximum allowed value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca89f-117">释放由 <see cref="T:System.Threading.ManualResetEventSlim" /> 类的当前实例使用的资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-117">Releases resources used by the current instance of the <see cref="T:System.Threading.ManualResetEventSlim" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca89f-118">释放 <see cref="T:System.Threading.ManualResetEventSlim" /> 类的当前实例所使用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-118">Releases all resources used by the current instance of the <see cref="T:System.Threading.ManualResetEventSlim" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca89f-119">在完成使用 `Dispose` 后，应调用 <xref:System.Threading.ManualResetEventSlim>。</span><span class="sxs-lookup"><span data-stu-id="ca89f-119">Call `Dispose` when you are finished using the <xref:System.Threading.ManualResetEventSlim>.</span></span> <span data-ttu-id="ca89f-120">`Dispose` 方法使 <xref:System.Threading.ManualResetEventSlim> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="ca89f-120">The `Dispose` method leaves the <xref:System.Threading.ManualResetEventSlim> in an unusable state.</span></span> <span data-ttu-id="ca89f-121">在调用`Dispose`，必须释放对所有引用<xref:System.Threading.ManualResetEventSlim>以便垃圾回收器才能回收的内存，<xref:System.Threading.ManualResetEventSlim>占用。</span><span class="sxs-lookup"><span data-stu-id="ca89f-121">After calling `Dispose`, you must release all references to the <xref:System.Threading.ManualResetEventSlim> so the garbage collector can reclaim the memory that the <xref:System.Threading.ManualResetEventSlim> was occupying.</span></span>  
  
 <span data-ttu-id="ca89f-122">有关详细信息，请参阅[清洗向上非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="ca89f-122">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca89f-123">每次释放对 `Dispose` 的最后一个引用前，均应调用 <xref:System.Threading.ManualResetEventSlim>。</span><span class="sxs-lookup"><span data-stu-id="ca89f-123">Always call `Dispose` before you release your last reference to the <xref:System.Threading.ManualResetEventSlim>.</span></span> <span data-ttu-id="ca89f-124">否则，在垃圾回收器调用 <xref:System.Threading.ManualResetEventSlim> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="ca89f-124">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ManualResetEventSlim> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ca89f-125">为 true 则释放托管资源和非托管资源；为 false 则仅释放非托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-125">true to release both managed and unmanaged resources; false to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca89f-126">释放由 <see cref="T:System.Threading.ManualResetEventSlim" /> 占用的非托管资源，还可以另外再释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-126">Releases the unmanaged resources used by the <see cref="T:System.Threading.ManualResetEventSlim" />, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca89f-127">与大多数的成员不同<xref:System.Threading.ManualResetEventSlim>，<xref:System.Threading.ManualResetEventSlim.Dispose%2A>不是线程安全的不能与此实例的其他成员同时使用。</span><span class="sxs-lookup"><span data-stu-id="ca89f-127">Unlike most of the members of <xref:System.Threading.ManualResetEventSlim>, <xref:System.Threading.ManualResetEventSlim.Dispose%2A> is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSet">
      <MemberSignature Language="C#" Value="public bool IsSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSet" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ManualResetEventSlim.IsSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSet { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca89f-128">获取是否已设置事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-128">Gets whether the event is set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca89f-129">如果设置了事件，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-129">true if the event has is set; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca89f-130">将事件状态设置为非终止，从而导致线程受阻。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-130">Sets the state of the event to nonsignaled, which causes threads to block.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca89f-131"><xref:System.Threading.ManualResetEventSlim.Reset%2A> 可以调用与除外的所有成员同时<xref:System.Threading.ManualResetEventSlim.WaitHandle%2A>。</span><span class="sxs-lookup"><span data-stu-id="ca89f-131"><xref:System.Threading.ManualResetEventSlim.Reset%2A> can be called concurrently with all members except <xref:System.Threading.ManualResetEventSlim.WaitHandle%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca89f-132">对象已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-132">The object has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Set" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca89f-133">将事件状态设置为有信号，从而允许一个或多个等待该事件的线程继续。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-133">Sets the state of the event to signaled, which allows one or more threads waiting on the event to proceed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpinCount">
      <MemberSignature Language="C#" Value="public int SpinCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SpinCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ManualResetEventSlim.SpinCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpinCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SpinCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca89f-134">获取在回退到基于内核的等待操作之前将发生的自旋等待数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-134">Gets the number of spin waits that will occur before falling back to a kernel-based wait operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca89f-135">返回在回退到基于内核的等待操作之前将发生的自旋等待数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-135">Returns the number of spin waits that will occur before falling back to a kernel-based wait operation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Wait">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ca89f-136">阻止当前线程，直到设置了当前 <see cref="T:System.Threading.ManualResetEventSlim" /> 为止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-136">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> is set.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Wait" />
      <MemberSignature Language="VB.NET" Value="Public Sub Wait ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ca89f-137">阻止当前线程，直到设置了当前 <see cref="T:System.Threading.ManualResetEventSlim" /> 为止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-137">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> is set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca89f-138">此方法将阻塞，直到当前实例无限期的调用方是设置。</span><span class="sxs-lookup"><span data-stu-id="ca89f-138">The caller of this method blocks indefinitely until the current instance is set.</span></span> <span data-ttu-id="ca89f-139">如果该事件处于当前设置状态，调用方将立即返回。</span><span class="sxs-lookup"><span data-stu-id="ca89f-139">The caller will return immediately if the event is currently in a set state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca89f-140">已超出最大等待者数</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-140">The maximum number of waiters has been exceeded.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca89f-141">对象已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-141">The object has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Wait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="ca89f-142">等待的毫秒数，或为 <see cref="F:System.Threading.Timeout.Infinite" /> (-1)，表示无限期等待。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-142">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca89f-143">阻止当前线程，直到设置了当前 <see cref="T:System.Threading.ManualResetEventSlim" /> 为止，同时使用 32 位带符号整数测量时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-143">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> is set, using a 32-bit signed integer to measure the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca89f-144">如果已设置 <see cref="T:System.Threading.ManualResetEventSlim" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-144">
              <see langword="true" /> if the <see cref="T:System.Threading.ManualResetEventSlim" /> was set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca89f-145">
            <paramref name="millisecondsTimeout" /> 是一个非 -1 的负数，而 -1 表示无限期超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-145">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca89f-146">已超出最大等待者数</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-146">The maximum number of waiters has been exceeded.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca89f-147">对象已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-147">The object has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="ca89f-148">要观察的 <see cref="T:System.Threading.CancellationToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-148">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca89f-149">阻止当前线程，直到当前 <see cref="T:System.Threading.ManualResetEventSlim" /> 收到信号为止，同时观察 <see cref="T:System.Threading.CancellationToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-149">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> receives a signal, while observing a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca89f-150">此方法将阻塞，直到当前实例无限期的调用方是设置。</span><span class="sxs-lookup"><span data-stu-id="ca89f-150">The caller of this method blocks indefinitely until the current instance is set.</span></span> <span data-ttu-id="ca89f-151">如果该事件处于当前设置状态，调用方将立即返回。</span><span class="sxs-lookup"><span data-stu-id="ca89f-151">The caller will return immediately if the event is currently in a set state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca89f-152">已超出最大等待者数</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-152">The maximum number of waiters has been exceeded.</span>
          </span>
        </exception>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="ca89f-153">
            <paramref name="cancellationToken" /> 已取消。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-153">
              <paramref name="cancellationToken" /> was canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca89f-154">该对象已被释放，或者创建了 <paramref name="cancellationToken" /> 的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-154">The object has already been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Wait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="ca89f-155">表示等待毫秒数的 <see cref="T:System.TimeSpan" />，或表示 -1 毫秒（无限期等待）的 <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-155">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca89f-156">阻止当前线程，直到设置了当前 <see cref="T:System.Threading.ManualResetEventSlim" /> 为止，同时使用 <see cref="T:System.TimeSpan" /> 测量时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-156">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> is set, using a <see cref="T:System.TimeSpan" /> to measure the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca89f-157">如果已设置 <see cref="T:System.Threading.ManualResetEventSlim" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-157">
              <see langword="true" /> if the <see cref="T:System.Threading.ManualResetEventSlim" /> was set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca89f-158">
            <paramref name="timeout" /> 为 -1 毫秒以外的负数，表示无限期超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-158">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="ca89f-159">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-159">-or-</span>
          </span>
          <span data-ttu-id="ca89f-160">
            <paramref name="timeout" /> 中的毫秒数大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-160">The number of milliseconds in <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca89f-161">已超出最大等待者数</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-161">The maximum number of waiters has been exceeded.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca89f-162">对象已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-162">The object has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Wait(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="ca89f-163">等待的毫秒数，或为 <see cref="F:System.Threading.Timeout.Infinite" /> (-1)，表示无限期等待。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-163">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca89f-164">要观察的 <see cref="T:System.Threading.CancellationToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-164">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca89f-165">阻止当前线程，直到设置了当前 <see cref="T:System.Threading.ManualResetEventSlim" /> 为止，并使用 32 位带符号整数测量时间间隔，同时观察 <see cref="T:System.Threading.CancellationToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-165">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> is set, using a 32-bit signed integer to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca89f-166">如果已设置 <see cref="T:System.Threading.ManualResetEventSlim" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-166">
              <see langword="true" /> if the <see cref="T:System.Threading.ManualResetEventSlim" /> was set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="ca89f-167">
            <paramref name="cancellationToken" /> 已取消。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-167">
              <paramref name="cancellationToken" /> was canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca89f-168">
            <paramref name="millisecondsTimeout" /> 是一个非 -1 的负数，而 -1 表示无限期超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-168">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca89f-169">已超出最大等待者数</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-169">The maximum number of waiters has been exceeded.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca89f-170">该对象已被释放，或者创建了 <paramref name="cancellationToken" /> 的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-170">The object has already been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ManualResetEventSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="ca89f-171">表示等待毫秒数的 <see cref="T:System.TimeSpan" />，或表示 -1 毫秒（无限期等待）的 <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-171">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="ca89f-172">要观察的 <see cref="T:System.Threading.CancellationToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-172">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca89f-173">阻止当前线程，直到设置了当前 <see cref="T:System.Threading.ManualResetEventSlim" /> 为止，并使用 <see cref="T:System.TimeSpan" /> 测量时间间隔，同时观察 <see cref="T:System.Threading.CancellationToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-173">Blocks the current thread until the current <see cref="T:System.Threading.ManualResetEventSlim" /> is set, using a <see cref="T:System.TimeSpan" /> to measure the time interval, while observing a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca89f-174">如果已设置 <see cref="T:System.Threading.ManualResetEventSlim" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-174">
              <see langword="true" /> if the <see cref="T:System.Threading.ManualResetEventSlim" /> was set; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="ca89f-175">
            <paramref name="cancellationToken" /> 已取消。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-175">
              <paramref name="cancellationToken" /> was canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ca89f-176">
            <paramref name="timeout" /> 为 -1 毫秒以外的负数，表示无限期超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-176">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
          <span data-ttu-id="ca89f-177">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-177">-or-</span>
          </span>
          <span data-ttu-id="ca89f-178">
            <paramref name="timeout" /> 中的毫秒数大于 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-178">The number of milliseconds in <paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ca89f-179">已超出最大等待者数</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-179">The maximum number of waiters has been exceeded.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ca89f-180">该对象已被释放，或者创建了 <paramref name="cancellationToken" /> 的 <see cref="T:System.Threading.CancellationTokenSource" /> 已被释放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-180">The object has already been disposed or the <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle WaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle WaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ManualResetEventSlim.WaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ WaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ca89f-181">获取此 <see cref="T:System.Threading.WaitHandle" /> 的基础 <see cref="T:System.Threading.ManualResetEventSlim" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-181">Gets the underlying <see cref="T:System.Threading.WaitHandle" /> object for this <see cref="T:System.Threading.ManualResetEventSlim" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ca89f-182">此 <see cref="T:System.Threading.WaitHandle" /> 的基础 <see cref="T:System.Threading.ManualResetEventSlim" /> 事件对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca89f-182">The underlying <see cref="T:System.Threading.WaitHandle" /> event object fore this <see cref="T:System.Threading.ManualResetEventSlim" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca89f-183">访问此属性强制初始化基础事件对象，如果尚未创建一个。</span><span class="sxs-lookup"><span data-stu-id="ca89f-183">Accessing this property forces initialization of an underlying event object if one hasn't already been created.</span></span> <span data-ttu-id="ca89f-184">只需等待此<xref:System.Threading.ManualResetEventSlim>，公共等待方法应为首选。</span><span class="sxs-lookup"><span data-stu-id="ca89f-184">To simply wait on this <xref:System.Threading.ManualResetEventSlim>, the public Wait methods should be preferred.</span></span> <span data-ttu-id="ca89f-185">建议释放<xref:System.Threading.ManualResetEventSlim>后访问此属性中，为了防止资源泄漏的实例。</span><span class="sxs-lookup"><span data-stu-id="ca89f-185">It is recommended to dispose the <xref:System.Threading.ManualResetEventSlim> instance after accessing this property, in order to prevent a resource leak.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>