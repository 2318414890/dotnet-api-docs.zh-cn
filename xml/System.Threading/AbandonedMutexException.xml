<Type Name="AbandonedMutexException" FullName="System.Threading.AbandonedMutexException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="43dff5f3163b3ef4f0f24bed5ab3a2c3ffbc546d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37754714" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AbandonedMutexException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AbandonedMutexException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Threading.AbandonedMutexException" />
  <TypeSignature Language="VB.NET" Value="Public Class AbandonedMutexException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class AbandonedMutexException : SystemException" />
  <TypeSignature Language="F#" Value="type AbandonedMutexException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="12f3f-101">当某个线程获取由另一个线程放弃（即在未释放的情况下退出）的 <see cref="T:System.Threading.Mutex" /> 对象时引发的异常。</span>
      <span class="sxs-lookup">
        <span data-stu-id="12f3f-101">The exception that is thrown when one thread acquires a <see cref="T:System.Threading.Mutex" /> object that another thread has abandoned by exiting without releasing it.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12f3f-102">当某个线程放弃的互斥体时，获得该互斥体的下一个线程中引发异常。</span><span class="sxs-lookup"><span data-stu-id="12f3f-102">When a thread abandons a mutex, the exception is thrown in the next thread that acquires the mutex.</span></span> <span data-ttu-id="12f3f-103">该线程可能会获取互斥体，因为它已等待互斥体，或者因为它在更高版本时将进入该互斥体。</span><span class="sxs-lookup"><span data-stu-id="12f3f-103">The thread might acquire the mutex because it was already waiting on the mutex or because it enters the mutex at a later time.</span></span>  
  
 <span data-ttu-id="12f3f-104">放弃的 mutex 指示严重的编程错误。</span><span class="sxs-lookup"><span data-stu-id="12f3f-104">An abandoned mutex indicates a serious programming error.</span></span> <span data-ttu-id="12f3f-105">线程退出时不释放互斥体，由 mutex 保护的数据结构不可能处于一致状态。</span><span class="sxs-lookup"><span data-stu-id="12f3f-105">When a thread exits without releasing the mutex, the data structures protected by the mutex might not be in a consistent state.</span></span> <span data-ttu-id="12f3f-106">在.NET Framework 2.0 版中之前, 此类问题是 mutex 的难以发现，因为未不引发任何异常，如果等待结束时放弃的结果。</span><span class="sxs-lookup"><span data-stu-id="12f3f-106">Prior to version 2.0 of the .NET Framework, such problems were hard to discover because no exception was thrown if a wait completed as the result of an abandoned mutex.</span></span> <span data-ttu-id="12f3f-107">有关更多信息，请参见 <xref:System.Threading.Mutex> 类。</span><span class="sxs-lookup"><span data-stu-id="12f3f-107">For more information, see the <xref:System.Threading.Mutex> class.</span></span>  
  
 <span data-ttu-id="12f3f-108">为请求 mutex 所有权的下一个线程可以处理此异常并继续操作，前提是可验证的数据结构的完整性。</span><span class="sxs-lookup"><span data-stu-id="12f3f-108">The next thread to request ownership of the mutex can handle this exception and proceed, provided that the integrity of the data structures can be verified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12f3f-109">下面的代码示例执行一个线程放弃五个互斥体，在演示它们的影响<xref:System.Threading.WaitHandle.WaitOne%2A>， <xref:System.Threading.WaitHandle.WaitAny%2A>，和<xref:System.Threading.WaitHandle.WaitAll%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="12f3f-109">The following code example executes a thread that abandons five mutexes, demonstrating their effects on the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, and <xref:System.Threading.WaitHandle.WaitAll%2A> methods.</span></span> <span data-ttu-id="12f3f-110">值<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>属性显示为<xref:System.Threading.WaitHandle.WaitAny%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="12f3f-110">The value of the <xref:System.Threading.AbandonedMutexException.MutexIndex%2A> property is displayed for the <xref:System.Threading.WaitHandle.WaitAny%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="12f3f-111">对调用<xref:System.Threading.WaitHandle.WaitAny%2A>方法某一已放弃的互斥体的中断。</span><span class="sxs-lookup"><span data-stu-id="12f3f-111">The call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method is interrupted by one of the abandoned mutexes.</span></span> <span data-ttu-id="12f3f-112">可能仍会导致其他放弃的互斥体<xref:System.Threading.AbandonedMutexException>后面的等待方法引发。</span><span class="sxs-lookup"><span data-stu-id="12f3f-112">The other abandoned mutex could still cause an <xref:System.Threading.AbandonedMutexException> to be thrown by subsequent wait methods.</span></span>  
  
 [!code-cpp[System.Threading.AbandonedMutexException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CPP/koax.cpp#1)]
 [!code-csharp[System.Threading.AbandonedMutexException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CS/koax.cs#1)]
 [!code-vb[System.Threading.AbandonedMutexException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/VB/koax.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Mutex" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12f3f-113">初始化 <see cref="T:System.Threading.AbandonedMutexException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-113">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="12f3f-114">使用默认值初始化 <see cref="T:System.Threading.AbandonedMutexException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-114">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12f3f-115">此构造函数初始化<xref:System.Exception.Message%2A>为系统提供的错误进行描述，如"等待完成，因为放弃的 mutex。"的消息的新实例的属性</span><span class="sxs-lookup"><span data-stu-id="12f3f-115">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "The wait completed due to an abandoned mutex."</span></span> <span data-ttu-id="12f3f-116">此消息将当前系统区域性考虑在内。</span><span class="sxs-lookup"><span data-stu-id="12f3f-116">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="12f3f-117">下表显示 <xref:System.Threading.AbandonedMutexException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="12f3f-117">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException>.</span></span>  
  
|<span data-ttu-id="12f3f-118">Property</span><span class="sxs-lookup"><span data-stu-id="12f3f-118">Property</span></span>|<span data-ttu-id="12f3f-119">“值”</span><span class="sxs-lookup"><span data-stu-id="12f3f-119">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="12f3f-120">`null`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-120">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="12f3f-121">系统提供的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="12f3f-121">The system-supplied error message string.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="12f3f-122">`null`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-122">`null`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="12f3f-123">（减一） – 1。</span><span class="sxs-lookup"><span data-stu-id="12f3f-123">–1 (minus one).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Threading.AbandonedMutexException : string -&gt; System.Threading.AbandonedMutexException" Usage="new System.Threading.AbandonedMutexException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="12f3f-124">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-124">An error message that explains the reason for the exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12f3f-125">用指定的错误消息初始化 <see cref="T:System.Threading.AbandonedMutexException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-125">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12f3f-126">`message` 的内容被设计为人可理解的形式。</span><span class="sxs-lookup"><span data-stu-id="12f3f-126">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="12f3f-127">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="12f3f-127">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="12f3f-128">下表显示的实例的初始属性值<xref:System.Threading.AbandonedMutexException>使用此构造函数进行初始化。</span><span class="sxs-lookup"><span data-stu-id="12f3f-128">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="12f3f-129">Property</span><span class="sxs-lookup"><span data-stu-id="12f3f-129">Property</span></span>|<span data-ttu-id="12f3f-130">“值”</span><span class="sxs-lookup"><span data-stu-id="12f3f-130">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="12f3f-131">`null`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-131">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="12f3f-132">`message`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-132">`message`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="12f3f-133">`null`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-133">`null`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="12f3f-134">（减一） – 1。</span><span class="sxs-lookup"><span data-stu-id="12f3f-134">–1 (minus one).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (int location, System.Threading.WaitHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 location, class System.Threading.WaitHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (location As Integer, handle As WaitHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(int location, System::Threading::WaitHandle ^ handle);" />
      <MemberSignature Language="F#" Value="new System.Threading.AbandonedMutexException : int * System.Threading.WaitHandle -&gt; System.Threading.AbandonedMutexException" Usage="new System.Threading.AbandonedMutexException (location, handle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="handle" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="12f3f-135">如果对 <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> 方法引发异常，则为等待句柄数组中被放弃的互斥体的索引，如果对 <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> 或 <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> 方法引发异常，则为 –1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-135">The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> method, or –1 if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> or <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> methods.</span>
          </span>
        </param>
        <param name="handle">
          <span data-ttu-id="12f3f-136">一个 <see cref="T:System.Threading.Mutex" /> 对象，表示被放弃的互斥体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-136">A <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12f3f-137">用被放弃的互斥体的指定索引（如果可用）和表示该互斥体的 <see cref="T:System.Threading.AbandonedMutexException" /> 对象初始化 <see cref="T:System.Threading.Mutex" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-137">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified index for the abandoned mutex, if applicable, and a <see cref="T:System.Threading.Mutex" /> object that represents the mutex.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12f3f-138">此构造函数初始化<xref:System.Exception.Message%2A>为系统提供的错误进行描述，如"等待完成，因为放弃的 mutex。"的消息的新实例的属性</span><span class="sxs-lookup"><span data-stu-id="12f3f-138">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "The wait completed due to an abandoned mutex."</span></span> <span data-ttu-id="12f3f-139">此消息将当前系统区域性考虑在内。</span><span class="sxs-lookup"><span data-stu-id="12f3f-139">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="12f3f-140">下表显示的实例的初始属性值<xref:System.Threading.AbandonedMutexException>使用此构造函数进行初始化。</span><span class="sxs-lookup"><span data-stu-id="12f3f-140">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="12f3f-141">Property</span><span class="sxs-lookup"><span data-stu-id="12f3f-141">Property</span></span>|<span data-ttu-id="12f3f-142">“值”</span><span class="sxs-lookup"><span data-stu-id="12f3f-142">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="12f3f-143">`null`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-143">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="12f3f-144">系统提供的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="12f3f-144">A system-supplied error message string.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="12f3f-145">`handle`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-145">`handle`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="12f3f-146">`location`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-146">`location`.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbandonedMutexException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AbandonedMutexException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Threading.AbandonedMutexException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Threading.AbandonedMutexException" Usage="new System.Threading.AbandonedMutexException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="12f3f-147">存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-147">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="12f3f-148">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，它包含有关源或目标的上下文信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-148">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12f3f-149">用序列化数据初始化 <see cref="T:System.Threading.AbandonedMutexException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-149">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12f3f-150">此构造函数在反序列化过程中调用，以便重建通过流传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="12f3f-150">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="12f3f-151">有关详细信息，请参阅[XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="12f3f-151">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.Threading.AbandonedMutexException : string * Exception -&gt; System.Threading.AbandonedMutexException" Usage="new System.Threading.AbandonedMutexException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="12f3f-152">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-152">An error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="12f3f-153">导致当前异常的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-153">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="12f3f-154">如果 <c>inner</c> 参数不为 <see langword="null" />，则当前异常会在处理内部异常的 <see langword="catch" /> 块中引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-154">If the <c>inner</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12f3f-155">用指定的错误信息和内部异常初始化 <see cref="T:System.Threading.AbandonedMutexException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-155">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified error message and inner exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12f3f-156">`message` 的内容被设计为人可理解的形式。</span><span class="sxs-lookup"><span data-stu-id="12f3f-156">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="12f3f-157">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="12f3f-157">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="12f3f-158">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="12f3f-158">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="12f3f-159"><xref:System.Exception.InnerException%2A> 属性返回的值与传递到构造函数中的值相同；或者，如果 `null` 属性没有向构造函数提供内部异常值，则为 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="12f3f-159">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="12f3f-160">下表显示的实例的初始属性值<xref:System.Threading.AbandonedMutexException>使用此构造函数进行初始化。</span><span class="sxs-lookup"><span data-stu-id="12f3f-160">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="12f3f-161">Property</span><span class="sxs-lookup"><span data-stu-id="12f3f-161">Property</span></span>|<span data-ttu-id="12f3f-162">“值”</span><span class="sxs-lookup"><span data-stu-id="12f3f-162">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="12f3f-163">`inner`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-163">`inner`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="12f3f-164">`message`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-164">`message`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="12f3f-165">`null`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-165">`null`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="12f3f-166">（减一） – 1。</span><span class="sxs-lookup"><span data-stu-id="12f3f-166">–1 (minus one).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (string message, int location, System.Threading.WaitHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 location, class System.Threading.WaitHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, location As Integer, handle As WaitHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(System::String ^ message, int location, System::Threading::WaitHandle ^ handle);" />
      <MemberSignature Language="F#" Value="new System.Threading.AbandonedMutexException : string * int * System.Threading.WaitHandle -&gt; System.Threading.AbandonedMutexException" Usage="new System.Threading.AbandonedMutexException (message, location, handle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="handle" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="12f3f-167">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-167">An error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="location">
          <span data-ttu-id="12f3f-168">如果对 <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> 方法引发异常，则为等待句柄数组中被放弃的互斥体的索引，如果对 <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> 或 <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> 方法引发异常，则为 –1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-168">The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> method, or –1 if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> or <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> methods.</span>
          </span>
        </param>
        <param name="handle">
          <span data-ttu-id="12f3f-169">一个 <see cref="T:System.Threading.Mutex" /> 对象，表示被放弃的互斥体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-169">A <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12f3f-170">用指定的错误信息、被放弃的互斥体的索引（如果可用）以及被放弃的互斥体初始化 <see cref="T:System.Threading.AbandonedMutexException" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-170">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified error message, the index of the abandoned mutex, if applicable, and the abandoned mutex.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12f3f-171">`message` 的内容被设计为人可理解的形式。</span><span class="sxs-lookup"><span data-stu-id="12f3f-171">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="12f3f-172">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="12f3f-172">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="12f3f-173">下表显示的实例的初始属性值<xref:System.Threading.AbandonedMutexException>使用此构造函数进行初始化。</span><span class="sxs-lookup"><span data-stu-id="12f3f-173">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="12f3f-174">Property</span><span class="sxs-lookup"><span data-stu-id="12f3f-174">Property</span></span>|<span data-ttu-id="12f3f-175">“值”</span><span class="sxs-lookup"><span data-stu-id="12f3f-175">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="12f3f-176">`null`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-176">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="12f3f-177">`message`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-177">`message`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="12f3f-178">`handle`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-178">`handle`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="12f3f-179">`location`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-179">`location`.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (string message, Exception inner, int location, System.Threading.WaitHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner, int32 location, class System.Threading.WaitHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception, location As Integer, handle As WaitHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(System::String ^ message, Exception ^ inner, int location, System::Threading::WaitHandle ^ handle);" />
      <MemberSignature Language="F#" Value="new System.Threading.AbandonedMutexException : string * Exception * int * System.Threading.WaitHandle -&gt; System.Threading.AbandonedMutexException" Usage="new System.Threading.AbandonedMutexException (message, inner, location, handle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="handle" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="12f3f-180">解释异常原因的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-180">An error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="inner">
          <span data-ttu-id="12f3f-181">导致当前异常的异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-181">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="12f3f-182">如果 <c>inner</c> 参数不为 <see langword="null" />，则当前异常会在处理内部异常的 <see langword="catch" /> 块中引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-182">If the <c>inner</c> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <param name="location">
          <span data-ttu-id="12f3f-183">如果对 <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> 方法引发异常，则为等待句柄数组中被放弃的互斥体的索引，如果对 <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> 或 <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> 方法引发异常，则为 –1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-183">The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> method, or –1 if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> or <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> methods.</span>
          </span>
        </param>
        <param name="handle">
          <span data-ttu-id="12f3f-184">一个 <see cref="T:System.Threading.Mutex" /> 对象，表示被放弃的互斥体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-184">A <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12f3f-185">用指定的错误信息、内部异常、被放弃的互斥体的索引（如果可用）以及表示该互斥体的 <see cref="T:System.Threading.AbandonedMutexException" /> 对象初始化 <see cref="T:System.Threading.Mutex" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-185">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified error message, the inner exception, the index for the abandoned mutex, if applicable, and a <see cref="T:System.Threading.Mutex" /> object that represents the mutex.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12f3f-186">内容`message`文本字符串，用于通知用户有关的异常。</span><span class="sxs-lookup"><span data-stu-id="12f3f-186">The content of `message` is a text string intended to inform the user about the exception.</span></span> <span data-ttu-id="12f3f-187">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="12f3f-187">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="12f3f-188">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="12f3f-188">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="12f3f-189"><xref:System.Exception.InnerException%2A> 属性返回的值与传递到构造函数中的值相同；或者，如果 `null` 属性没有向构造函数提供内部异常值，则为 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="12f3f-189">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="12f3f-190">下表显示的实例的初始属性值<xref:System.Threading.AbandonedMutexException>使用此构造函数进行初始化。</span><span class="sxs-lookup"><span data-stu-id="12f3f-190">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="12f3f-191">Property</span><span class="sxs-lookup"><span data-stu-id="12f3f-191">Property</span></span>|<span data-ttu-id="12f3f-192">“值”</span><span class="sxs-lookup"><span data-stu-id="12f3f-192">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="12f3f-193">`inner`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-193">`inner`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="12f3f-194">`message`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-194">`message`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="12f3f-195">`handle`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-195">`handle`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="12f3f-196">`location`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-196">`location`.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName="Mutex">
      <MemberSignature Language="C#" Value="public System.Threading.Mutex Mutex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Mutex Mutex" />
      <MemberSignature Language="DocId" Value="P:System.Threading.AbandonedMutexException.Mutex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mutex As Mutex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Mutex ^ Mutex { System::Threading::Mutex ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mutex : System.Threading.Mutex" Usage="System.Threading.AbandonedMutexException.Mutex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Mutex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12f3f-197">获取导致异常的被放弃的互斥体（如果已知的话）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-197">Gets the abandoned mutex that caused the exception, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12f3f-198">如果未能识别被放弃的互斥体，则为表示该被放弃的互斥体的 <see cref="T:System.Threading.Mutex" /> 对象或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-198">A <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex, or <see langword="null" /> if the abandoned mutex could not be identified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12f3f-199">如果在调用引发异常<xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType>方法，<xref:System.Threading.Mutex>返回为具有最小索引的数组中被放弃的 mutex<xref:System.Threading.WaitHandle>对象传递给<xref:System.Threading.WaitHandle.WaitAny%2A>，或`null`如果找不到已放弃的互斥体标识。</span><span class="sxs-lookup"><span data-stu-id="12f3f-199">If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> method, the <xref:System.Threading.Mutex> returned is the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or `null` if the abandoned mutex could not be identified.</span></span> <span data-ttu-id="12f3f-200">如果在调用引发异常<xref:System.Threading.WaitHandle.WaitOne%2A>或<xref:System.Threading.WaitHandle.WaitAll%2A>，此属性始终返回`null`。</span><span class="sxs-lookup"><span data-stu-id="12f3f-200">If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
    <Member MemberName="MutexIndex">
      <MemberSignature Language="C#" Value="public int MutexIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MutexIndex" />
      <MemberSignature Language="DocId" Value="P:System.Threading.AbandonedMutexException.MutexIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MutexIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MutexIndex : int" Usage="System.Threading.AbandonedMutexException.MutexIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12f3f-201">获取导致异常的被放弃的互斥体的索引（如果已知的话）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-201">Gets the index of the abandoned mutex that caused the exception, if known.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12f3f-202">如果未能确定被放弃的互斥体的索引，则为传递给 <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> 方法的等待句柄数组中的索引、表示该被放弃的互斥体的 <see cref="T:System.Threading.Mutex" /> 对象的索引或 –1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12f3f-202">The index, in the array of wait handles passed to the <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> method, of the <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex, or –1 if the index of the abandoned mutex could not be determined.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12f3f-203">如果在调用引发异常<xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType>方法，此属性将返回的数组中具有最小索引的已放弃的互斥体的索引<xref:System.Threading.WaitHandle>对象传递给<xref:System.Threading.WaitHandle.WaitAny%2A>，则为 – 1 如果未能识别被放弃的 mutex.</span><span class="sxs-lookup"><span data-stu-id="12f3f-203">If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> method, this property returns the index of the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or –1 if the abandoned mutex could not be identified.</span></span> <span data-ttu-id="12f3f-204">如果在调用引发异常<xref:System.Threading.WaitHandle.WaitOne%2A>或<xref:System.Threading.WaitHandle.WaitAll%2A>，此属性始终返回-1。</span><span class="sxs-lookup"><span data-stu-id="12f3f-204">If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns –1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12f3f-205">下面的代码示例执行一个线程放弃五个互斥体。</span><span class="sxs-lookup"><span data-stu-id="12f3f-205">The following code example executes a thread that abandons five mutexes.</span></span> <span data-ttu-id="12f3f-206">已放弃的互斥体用于演示效果上<xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>， <xref:System.Threading.WaitHandle.WaitAny%2A>，和<xref:System.Threading.WaitHandle.WaitAll%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="12f3f-206">The abandoned mutexes are used to demonstrate the effects on the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>, <xref:System.Threading.WaitHandle.WaitAny%2A>, and <xref:System.Threading.WaitHandle.WaitAll%2A> method calls.</span></span> <span data-ttu-id="12f3f-207">值<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>属性显示为<xref:System.Threading.WaitHandle.WaitAny%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="12f3f-207">The value of the <xref:System.Threading.AbandonedMutexException.MutexIndex%2A> property is displayed for the <xref:System.Threading.WaitHandle.WaitAny%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="12f3f-208">对调用<xref:System.Threading.WaitHandle.WaitAny%2A>被放弃的 mutex 的一个中断。</span><span class="sxs-lookup"><span data-stu-id="12f3f-208">The call to <xref:System.Threading.WaitHandle.WaitAny%2A> is interrupted by one of the abandoned mutexes.</span></span> <span data-ttu-id="12f3f-209">可能仍会导致其他放弃的互斥体<xref:System.Threading.AbandonedMutexException>后面的等待方法引发。</span><span class="sxs-lookup"><span data-stu-id="12f3f-209">The other abandoned mutex could still cause an <xref:System.Threading.AbandonedMutexException> to be thrown by subsequent wait methods.</span></span>  
  
 [!code-cpp[System.Threading.AbandonedMutexException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CPP/koax.cpp#1)]
 [!code-csharp[System.Threading.AbandonedMutexException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CS/koax.cs#1)]
 [!code-vb[System.Threading.AbandonedMutexException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/VB/koax.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
      </Docs>
    </Member>
  </Members>
</Type>