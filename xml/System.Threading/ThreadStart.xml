<Type Name="ThreadStart" FullName="System.Threading.ThreadStart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d671aaa6756a10f41a3c4cfe7a44482d79aa8f04" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58690606" /></Metadata><TypeSignature Language="C#" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ThreadStart()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="F#" Value="type ThreadStart = delegate of unit -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>表示在 <see cref="T:System.Threading.Thread" /> 上执行的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建托管的线程时，由表示的线程执行的方法<xref:System.Threading.ThreadStart>委托或<xref:System.Threading.ParameterizedThreadStart>传递给委托<xref:System.Threading.Thread.%23ctor%2A>构造函数。 在线程不会开始执行直至<xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType>调用方法。 在所表示的方法的第一行开始执行<xref:System.Threading.ThreadStart>或<xref:System.Threading.ParameterizedThreadStart>委托。  
  
> [!NOTE]
>  Visual Basic 和 C# 用户可以省略<xref:System.Threading.ThreadStart>或<xref:System.Threading.ParameterizedThreadStart>委托构造函数创建线程时。 在 Visual Basic 中，使用`AddressOf`运算符传递到您的方法时<xref:System.Threading.Thread.%23ctor%2A>构造函数; 例如， `Dim t As New Thread(AddressOf ThreadProc)`。 在 C# 中，只需指定线程过程的名称。 编译器选择正确的委托构造函数。  
>  
>  C + +，从.NET Framework 2.0 开始，创建<xref:System.Threading.ThreadStart>委托的静态方法只需要一个参数： 回调方法，由类名称限定的地址。 在早期版本中两个参数时，都需要创建静态方法的委托： 零 (null) 和方法地址。 对于实例方法，所有版本都需要两个参数： 实例变量和方法地址。  
  
   
  
## Examples  
 下面的代码示例显示了用于创建和使用语法<xref:System.Threading.ThreadStart>委托与实例方法和静态方法。  
  
 有关演示如何创建的另一个简单示例<xref:System.Threading.ThreadStart>委派，请参阅<xref:System.Threading.Thread.Start?displayProperty=nameWithType>方法重载。 有关创建线程的详细信息，请参阅[创建线程并传递数据的开始时间](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md)。  
  
 [!code-cpp[System.Threading.ThreadStart2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadStart2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadStart2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadStart2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ParameterizedThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
    <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md">启动时创建线程并传递数据</related>
  </Docs>
</Type>