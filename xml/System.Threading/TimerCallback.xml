<Type Name="TimerCallback" FullName="System.Threading.TimerCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="31c57b4c21d22a9059f7d87ff25810a151ee38b6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36605823" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.TimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub TimerCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void TimerCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type TimerCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">
      <span data-ttu-id="fe8ae-101">一个对象（包含与该委托所调用的方法相关的特定于应用程序的信息）或为 <see langword="null" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe8ae-101">An object containing application-specific information relevant to the method invoked by this delegate, or <see langword="null" />.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="fe8ae-102">表示处理来自 <see cref="T:System.Threading.Timer" /> 的调用的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe8ae-102">Represents the method that handles calls from a <see cref="T:System.Threading.Timer" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe8ae-103">使用`TimerCallback`指定由调用的方法的委托<xref:System.Threading.Timer>。</span><span class="sxs-lookup"><span data-stu-id="fe8ae-103">Use a `TimerCallback` delegate to specify the method that is called by a <xref:System.Threading.Timer>.</span></span> <span data-ttu-id="fe8ae-104">在创建计时器; 线程中，此方法不会执行。它由系统提供的单独的线程池线程中执行。</span><span class="sxs-lookup"><span data-stu-id="fe8ae-104">This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system.</span></span> <span data-ttu-id="fe8ae-105">`TimerCallback`委托在开始时间过后之后, 将调用一次的方法和每个之前的计时器间隔一次调用将继续<xref:System.Threading.Timer.Dispose%2A>调用方法时，或直到<xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType>间隔值调用方法时<xref:System.Threading.Timeout.Infinite>。</span><span class="sxs-lookup"><span data-stu-id="fe8ae-105">The `TimerCallback` delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <xref:System.Threading.Timer.Dispose%2A> method is called, or until the <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> method is called with the interval value <xref:System.Threading.Timeout.Infinite>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe8ae-106">回调可能发生后<xref:System.Threading.Timer.Dispose>已调用方法重载，因为计时器是按线程池线程来安排回调的执行。</span><span class="sxs-lookup"><span data-stu-id="fe8ae-106">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="fe8ae-107">你可以使用<xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29>方法重载来等待，直到完成所有的回调。</span><span class="sxs-lookup"><span data-stu-id="fe8ae-107">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="fe8ae-108">计时器构造的并且不能更改时，指定计时器委托。</span><span class="sxs-lookup"><span data-stu-id="fe8ae-108">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="fe8ae-109">开始时间`Timer`传入`dueTime`参数`Timer`传入构造函数和段`period`参数。</span><span class="sxs-lookup"><span data-stu-id="fe8ae-109">The start time for a `Timer` is passed in the `dueTime` parameter of the `Timer` constructors, and the period is passed in the `period` parameter.</span></span> <span data-ttu-id="fe8ae-110">有关示例，演示如何创建和使用`TimerCallback`委托，请参阅<xref:System.Threading.Timer?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fe8ae-110">For an example that demonstrates creating and using a `TimerCallback` delegate, see <xref:System.Threading.Timer?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe8ae-111">下面的代码示例演示如何创建与使用的委托`Timer`类。</span><span class="sxs-lookup"><span data-stu-id="fe8ae-111">The following code example shows how to create the delegate used with the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Timer" />
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>