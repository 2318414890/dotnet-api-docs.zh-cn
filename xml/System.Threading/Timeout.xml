<Type Name="Timeout" FullName="System.Threading.Timeout">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="feaace5e5cc0bdd5e69105b28556290bda766874" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39894415" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Timeout" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Timeout extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Timeout" />
  <TypeSignature Language="VB.NET" Value="Public Class Timeout" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timeout abstract sealed" />
  <TypeSignature Language="F#" Value="type Timeout = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>包含指定无限期超时间隔的常数。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类的成员用于指定无限超时间隔在线程处理操作。 <xref:System.Threading.Timeout.Infinite> 由方法接受一个整数`millisecondsTimeout`参数，如<xref:System.Threading.Thread.Sleep%28System.Int32%29?displayProperty=nameWithType>， <xref:System.Threading.Thread.Join%28System.Int32%29?displayProperty=nameWithType>，和<xref:System.Threading.ReaderWriterLock.AcquireReaderLock%28System.Int32%29?displayProperty=nameWithType>。 <xref:System.Threading.Timeout.InfiniteTimeSpan> 接受的方法使用`timeout`类型的参数<xref:System.TimeSpan>，如<xref:System.Threading.Thread.Sleep%28System.TimeSpan%29?displayProperty=nameWithType>， <xref:System.Threading.Thread.Join%28System.TimeSpan%29?displayProperty=nameWithType>，和<xref:System.Threading.ReaderWriterLock.AcquireReaderLock%28System.TimeSpan%29?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下面的示例演示线程进入睡眠状态无限次和随后被唤醒。  
  
 [!code-cpp[System.Threading.Thread.Interrupt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Interrupt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Interrupt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>此类型是线程安全的。</threadsafe>
    <altmember cref="T:System.Threading.Thread" />
  </Docs>
  <Members>
    <Member MemberName="Infinite">
      <MemberSignature Language="C#" Value="public const int Infinite = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Infinite = (-1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Timeout.Infinite" />
      <MemberSignature Language="VB.NET" Value="Public Const Infinite As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int Infinite = -1;" />
      <MemberSignature Language="F#" Value="val mutable Infinite : int" Usage="System.Threading.Timeout.Infinite" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>一个用于指定无限长等待时间的常数，适用于接受 <see cref="T:System.Int32" /> 参数的线程处理方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对线程处理方法接受`millisecondsTimeout`参数，如<xref:System.Threading.Thread.Sleep%28System.Int32%29?displayProperty=nameWithType>和<xref:System.Threading.Thread.Join%28System.Int32%29?displayProperty=nameWithType>，此值用于无限期地挂起线程。 但是，在大多数情况下，我们建议你使用其他<xref:System.Threading?displayProperty=nameWithType>类，如<xref:System.Threading.Mutex>， <xref:System.Threading.Monitor>， <xref:System.Threading.EventWaitHandle>，或<xref:System.Threading.Semaphore>改为同步线程或管理资源。  
  
 此字段的值为-1 (0xFFFFFFFF)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeSpan">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan InfiniteTimeSpan;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan InfiniteTimeSpan" />
      <MemberSignature Language="DocId" Value="F:System.Threading.Timeout.InfiniteTimeSpan" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteTimeSpan As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan InfiniteTimeSpan;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteTimeSpan : TimeSpan" Usage="System.Threading.Timeout.InfiniteTimeSpan" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>用于指定无限长等待时间的常数，接受 <see cref="T:System.TimeSpan" /> 参数的方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对线程处理方法接受`timeout`类型的参数<xref:System.TimeSpan>，如<xref:System.Threading.Thread.Sleep%28System.TimeSpan%29?displayProperty=nameWithType>和<xref:System.Threading.Thread.Join%28System.TimeSpan%29?displayProperty=nameWithType>，此值用于无限期地挂起线程。 但是，在大多数情况下，我们建议你使用其他<xref:System.Threading?displayProperty=nameWithType>类，如<xref:System.Threading.Mutex>， <xref:System.Threading.Monitor>， <xref:System.Threading.EventWaitHandle>，或<xref:System.Threading.Semaphore>改为同步线程或管理资源。  
  
 此字段的值为-00:00:00.0010000 或为-1 毫秒。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>