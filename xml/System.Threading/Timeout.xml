<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Timeout.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac500cb5d52215d6cd95036c64880a86cc9808ad0d0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00cb5d52215d6cd95036c64880a86cc9808ad0d0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.Timeout">
          <source>Contains constants that specify infinite time-out intervals.</source>
          <target state="translated">包含指定无限期超时间隔的常数。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Threading.Timeout">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Timeout">
          <source>The members of this class are used to specify infinite time-out intervals in threading operations.</source>
          <target state="translated">此类的成员用于在线程处理操作中指定无限超时间隔。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Timeout">
          <source><ph id="ph1">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> is used by methods that accept an integer <ph id="ph2">`millisecondsTimeout`</ph> parameter, such as <ph id="ph3">&lt;xref:System.Threading.Thread.Sleep%28System.Int32%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Threading.Thread.Join%28System.Int32%29?displayProperty=nameWithType&gt;</ph>, and <ph id="ph5">&lt;xref:System.Threading.ReaderWriterLock.AcquireReaderLock%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> 接受整数的方法所用<ph id="ph2">`millisecondsTimeout`</ph>参数，如<ph id="ph3">&lt;xref:System.Threading.Thread.Sleep%28System.Int32%29?displayProperty=nameWithType&gt;</ph>， <ph id="ph4">&lt;xref:System.Threading.Thread.Join%28System.Int32%29?displayProperty=nameWithType&gt;</ph>，和<ph id="ph5">&lt;xref:System.Threading.ReaderWriterLock.AcquireReaderLock%28System.Int32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Timeout">
          <source><ph id="ph1">&lt;xref:System.Threading.Timeout.InfiniteTimeSpan&gt;</ph> is used by methods that accept a <ph id="ph2">`timeout`</ph> parameter of type <ph id="ph3">&lt;xref:System.TimeSpan&gt;</ph>, such as <ph id="ph4">&lt;xref:System.Threading.Thread.Sleep%28System.TimeSpan%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Threading.Thread.Join%28System.TimeSpan%29?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.Threading.ReaderWriterLock.AcquireReaderLock%28System.TimeSpan%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.Timeout.InfiniteTimeSpan&gt;</ph> 接受的方法所用<ph id="ph2">`timeout`</ph>类型的参数<ph id="ph3">&lt;xref:System.TimeSpan&gt;</ph>，如<ph id="ph4">&lt;xref:System.Threading.Thread.Sleep%28System.TimeSpan%29?displayProperty=nameWithType&gt;</ph>， <ph id="ph5">&lt;xref:System.Threading.Thread.Join%28System.TimeSpan%29?displayProperty=nameWithType&gt;</ph>，和<ph id="ph6">&lt;xref:System.Threading.ReaderWriterLock.AcquireReaderLock%28System.TimeSpan%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Timeout">
          <source>The following example shows a thread going to sleep for an infinite time and subsequently being woken up.</source>
          <target state="translated">下面的示例显示线程进入睡眠状态的无限时间和随后被唤醒。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Timeout">
          <source>This type is thread safe.</source>
          <target state="translated">此类型是线程安全的。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Threading.Timeout.Infinite">
          <source>A constant used to specify an infinite waiting period, for threading methods that accept an <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> parameter.</source>
          <target state="translated">一个用于指定无限长等待时间的常数，适用于接受 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 参数的线程处理方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Threading.Timeout.Infinite">
          <source>For threading methods that accept a <ph id="ph1">`millisecondsTimeout`</ph> parameter, such as <ph id="ph2">&lt;xref:System.Threading.Thread.Sleep%28System.Int32%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Threading.Thread.Join%28System.Int32%29?displayProperty=nameWithType&gt;</ph>, this value is used to suspend the thread indefinitely.</source>
          <target state="translated">线程处理方法，其接受为<ph id="ph1">`millisecondsTimeout`</ph>参数，如<ph id="ph2">&lt;xref:System.Threading.Thread.Sleep%28System.Int32%29?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Threading.Thread.Join%28System.Int32%29?displayProperty=nameWithType&gt;</ph>，使用此值; 如果无限期挂起线程。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Threading.Timeout.Infinite">
          <source>However, in most cases, we recommend that you use other <ph id="ph1">&lt;xref:System.Threading?displayProperty=nameWithType&gt;</ph> classes such as <ph id="ph2">&lt;xref:System.Threading.Mutex&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.Monitor&gt;</ph>, <ph id="ph4">&lt;xref:System.Threading.EventWaitHandle&gt;</ph>, or <ph id="ph5">&lt;xref:System.Threading.Semaphore&gt;</ph> instead to sychronize threads or manage resources.</source>
          <target state="translated">但是，在大多数情况下，我们建议你使用其他<ph id="ph1">&lt;xref:System.Threading?displayProperty=nameWithType&gt;</ph>类，如<ph id="ph2">&lt;xref:System.Threading.Mutex&gt;</ph>， <ph id="ph3">&lt;xref:System.Threading.Monitor&gt;</ph>， <ph id="ph4">&lt;xref:System.Threading.EventWaitHandle&gt;</ph>，或<ph id="ph5">&lt;xref:System.Threading.Semaphore&gt;</ph>改为小心地同步线程或管理资源。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Threading.Timeout.Infinite">
          <source>The value of this field is -1 (0xFFFFFFFF).</source>
          <target state="translated">此字段的值为-1 (0xFFFFFFFF)。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Threading.Timeout.InfiniteTimeSpan">
          <source>A constant used to specify an infinite waiting period, for methods that accept a <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> parameter.</source>
          <target state="translated">用于指定无限长等待时间的常数，接受 <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> 参数的方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Threading.Timeout.InfiniteTimeSpan">
          <source>For threading methods that accept a <ph id="ph1">`timeout`</ph> parameter of type <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>, such as <ph id="ph3">&lt;xref:System.Threading.Thread.Sleep%28System.TimeSpan%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Threading.Thread.Join%28System.TimeSpan%29?displayProperty=nameWithType&gt;</ph>, this value is used to suspend the thread indefinitely.</source>
          <target state="translated">线程处理方法，其接受为<ph id="ph1">`timeout`</ph>类型的参数<ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph>，如<ph id="ph3">&lt;xref:System.Threading.Thread.Sleep%28System.TimeSpan%29?displayProperty=nameWithType&gt;</ph>和<ph id="ph4">&lt;xref:System.Threading.Thread.Join%28System.TimeSpan%29?displayProperty=nameWithType&gt;</ph>，使用此值; 如果无限期挂起线程。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Threading.Timeout.InfiniteTimeSpan">
          <source>However, in most cases, we recommend that you use other <ph id="ph1">&lt;xref:System.Threading?displayProperty=nameWithType&gt;</ph> classes such as <ph id="ph2">&lt;xref:System.Threading.Mutex&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.Monitor&gt;</ph>, <ph id="ph4">&lt;xref:System.Threading.EventWaitHandle&gt;</ph>, or <ph id="ph5">&lt;xref:System.Threading.Semaphore&gt;</ph> instead to sychronize threads or manage resources.</source>
          <target state="translated">但是，在大多数情况下，我们建议你使用其他<ph id="ph1">&lt;xref:System.Threading?displayProperty=nameWithType&gt;</ph>类，如<ph id="ph2">&lt;xref:System.Threading.Mutex&gt;</ph>， <ph id="ph3">&lt;xref:System.Threading.Monitor&gt;</ph>， <ph id="ph4">&lt;xref:System.Threading.EventWaitHandle&gt;</ph>，或<ph id="ph5">&lt;xref:System.Threading.Semaphore&gt;</ph>改为小心地同步线程或管理资源。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Threading.Timeout.InfiniteTimeSpan">
          <source>The value of this field is -00:00:00.0010000, or -1 millisecond.</source>
          <target state="translated">此字段的值是-00:00:00.0010000 或为-1 毫秒。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>