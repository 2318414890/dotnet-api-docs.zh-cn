<Type Name="HttpClientHandler" FullName="System.Net.Http.HttpClientHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0893caab56c01f7cf558887acb22bb532b286065" />
    <Meta Name="ms.sourcegitcommit" Value="254e16ae65e82f4aa59360cd8572b36b6b5b2f80" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/05/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpClientHandler : System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClientHandler extends System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpClientHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClientHandler&#xA;Inherits HttpMessageHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClientHandler : System::Net::Http::HttpMessageHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a5aba-101">
        <see cref="T:System.Net.Http.HttpClient" /> 使用的默认消息处理程序。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a5aba-101">The default message handler used by <see cref="T:System.Net.Http.HttpClient" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5aba-102"><xref:System.Net.Http.HttpClientHandler>类和从它派生的类，开发人员可以配置各种选项范围从代理到身份验证。</span><span class="sxs-lookup"><span data-stu-id="a5aba-102">The <xref:System.Net.Http.HttpClientHandler> class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Net.Http.HttpClientHandler#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclienthandler/cs/source.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClientHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClientHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-103">创建 <see cref="T:System.Net.Http.HttpClientHandler" /> 类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-103">Creates an instance of a <see cref="T:System.Net.Http.HttpClientHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public bool AllowAutoRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowAutoRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowAutoRedirect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-104">获取或设置一个值，该值指示处理程序是否应跟随重定向响应。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-104">Gets or sets a value that indicates whether the handler should follow redirection responses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-105">如果处理程序应跟随重定向响应，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-105">
              <see langword="true" /> if the if the handler should follow redirection responses; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a5aba-106">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-106">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5aba-107">设置<xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A>到`true`如果你想要自动遵循到新位置的资源的 HTTP 重定向标头的处理程序。</span><span class="sxs-lookup"><span data-stu-id="a5aba-107">Set <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource.</span></span> <span data-ttu-id="a5aba-108">通过设置最大数量的重定向按照<xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a5aba-108">The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property.</span></span>  
  
 <span data-ttu-id="a5aba-109">如果<xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A>设置为`false`，所有来自 HTTP 响应包含 HTTP 状态代码 300 到 399 返回到应用程序。</span><span class="sxs-lookup"><span data-stu-id="a5aba-109">If <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.</span></span>  
  
 <span data-ttu-id="a5aba-110">在自动重定向清除的 Authorization 标头，且该处理程序会自动尝试对重定向的位置重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="a5aba-110">The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location.</span></span> <span data-ttu-id="a5aba-111">在实践中，这意味着应用程序无法将自定义身份验证信息打包在 Authorization 标头，如果它是可能会遇到重定向。</span><span class="sxs-lookup"><span data-stu-id="a5aba-111">In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</span></span> <span data-ttu-id="a5aba-112">相反，应用程序必须实现并注册一个自定义身份验证模块。</span><span class="sxs-lookup"><span data-stu-id="a5aba-112">Instead, the application must implement and register a custom authentication module.</span></span>  

> [!NOTE]
>  <span data-ttu-id="a5aba-113">与<xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A>设置为`true`，.NET Framework 将遵循重定向，即使从 HTTPS URI 重定向到的 HTTP URI。</span><span class="sxs-lookup"><span data-stu-id="a5aba-113">With <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> set to `true`, the .NET Framework will follow redirections even when being redirected to an HTTP URI from an HTTPS URI.</span></span>
<span data-ttu-id="a5aba-114">.NET 核心版本 1.0、 1.1 和 2.0 将不遵循重定向从 HTTPS 到 HTTP 即使<xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A>设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="a5aba-114">.NET Core versions 1.0, 1.1 and 2.0 will not follow a redirection from HTTPS to HTTP even if <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `true`.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDecompression">
      <MemberSignature Language="C#" Value="public System.Net.DecompressionMethods AutomaticDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.DecompressionMethods AutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticDecompression As DecompressionMethods" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::DecompressionMethods AutomaticDecompression { System::Net::DecompressionMethods get(); void set(System::Net::DecompressionMethods value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DecompressionMethods</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-115">获取或设置处理程序用于自动解压缩 HTTP 内容响应的解压缩方法类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-115">Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-116">处理程序使用的自动解压缩方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-116">The automatic decompression method used by the handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
<span data-ttu-id="a5aba-117">.NET framework 4.x`System.Net.Http`二进制在全局程序集缓存 (GAC) 中，默认值是<xref:System.Net.DecompressionMethods.None>。</span><span class="sxs-lookup"><span data-stu-id="a5aba-117">For the .NET Framework 4.x `System.Net.Http` binary in the Global Assembly Cache (GAC), the default value is <xref:System.Net.DecompressionMethods.None>.</span></span>

<span data-ttu-id="a5aba-118">当[ `System.Net.Http` NuGet 包](https://www.nuget.org/packages/System.Net.Http/)使用到 v4.3.2 v4.1.0，则默认为<xref:System.Net.DecompressionMethods.GZip>和<xref:System.Net.DecompressionMethods.Deflate>。</span><span class="sxs-lookup"><span data-stu-id="a5aba-118">When the [`System.Net.Http` NuGet package](https://www.nuget.org/packages/System.Net.Http/) v4.1.0 to v4.3.2 is used, the default is <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.</span></span>

<span data-ttu-id="a5aba-119">NuGet 包 v4.3.2 的默认值后<xref:System.Net.DecompressionMethods.None>使用。</span><span class="sxs-lookup"><span data-stu-id="a5aba-119">After NuGet package v4.3.2, the default value of <xref:System.Net.DecompressionMethods.None> is used.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertificateRevocationList">
      <MemberSignature Language="C#" Value="public bool CheckCertificateRevocationList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertificateRevocationList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCertificateRevocationList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCertificateRevocationList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-120">获取或设置一个值，该值指示是否根据证书颁发机构吊销列表检查证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-120">Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-121">如果检查证书吊销列表，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-121">
              <see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="a5aba-122">仅.NET framework 4.7.1： 未实现此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-122">.NET Framework 4.7.1 only: This property is not implemented.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateOptions">
      <MemberSignature Language="C#" Value="public System.Net.Http.ClientCertificateOption ClientCertificateOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Http.ClientCertificateOption ClientCertificateOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificateOptions As ClientCertificateOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::ClientCertificateOption ClientCertificateOptions { System::Net::Http::ClientCertificateOption get(); void set(System::Net::Http::ClientCertificateOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.ClientCertificateOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-123">获取或设置一个值，该值指示是否从证书存储自动挑选证书，或者是否允许调用方通过特定的客户端证书。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-123">Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-124">与此处理程序关联的安全证书集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-124">The collection of security certificates associated with this handler.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-125">获取响应标头允许的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-125">Gets the maximum allowed length of the response headers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-126">响应标头的长度，以 KB（1024 字节）为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-126">The length, in kilobytes (1024 bytes), of the response headers.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer CookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieContainer As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ CookieContainer { System::Net::CookieContainer ^ get(); void set(System::Net::CookieContainer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-127">获取或设置用于通过处理程序存储服务器 Cookie 的 Cookie 容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-127">Gets or sets the cookie container used to store server cookies by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-128">用于通过处理程序存储服务器 Cookie 的 Cookie 容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-128">The cookie container used to store server cookies by the handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5aba-129"><xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>属性提供的实例<xref:System.Net.CookieContainer>类，其中包含与此处理程序关联的 cookie。</span><span class="sxs-lookup"><span data-stu-id="a5aba-129">The <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler.</span></span>  
  
 <span data-ttu-id="a5aba-130">如果<xref:System.Net.Http.HttpClientHandler.UseCookies%2A>属性是`true`、<xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>属性表示用来存储服务器 cookie 的 cookie 容器。</span><span class="sxs-lookup"><span data-stu-id="a5aba-130">If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property represents the cookie container used to store the server cookies.</span></span> <span data-ttu-id="a5aba-131">用户可以在发送请求使用此属性前设置自定义 cookie。</span><span class="sxs-lookup"><span data-stu-id="a5aba-131">The user can set custom cookies before sending requests using this property.</span></span> <span data-ttu-id="a5aba-132">如果<xref:System.Net.Http.HttpClientHandler.UseCookies%2A>属性为 false，并且用户将添加到 cookie <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>，cookie 会被忽略且不会发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="a5aba-132">If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, cookies are ignored and not sent to the server.</span></span> <span data-ttu-id="a5aba-133">设置<xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>到`null`将引发异常。</span><span class="sxs-lookup"><span data-stu-id="a5aba-133">Setting the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> to `null` will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-134">获取或设置此处理程序使用的身份验证信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-134">Gets or sets authentication information used by this handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-135">与该处理程序关联的身份验证凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-135">The authentication credentials associated with the handler.</span>
          </span>
          <span data-ttu-id="a5aba-136">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-136">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DangerousAcceptAnyServerCertificateValidator">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; DangerousAcceptAnyServerCertificateValidator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DangerousAcceptAnyServerCertificateValidator As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ DangerousAcceptAnyServerCertificateValidator { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProxyCredentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials DefaultProxyCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials DefaultProxyCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProxyCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ DefaultProxyCredentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-137">使用默认（系统）代理时，获取或设置要提交到默认代理服务器进行身份验证的凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-137">When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication.</span>
          </span>
          <span data-ttu-id="a5aba-138">只有在 <see cref="T:System.Net.Http.HttpClientHandler.UseProxy%2A" /> 设置为 <see langword="true" /> 且 <see cref="T:System.Net.Http.HttpClientHandler.Proxy%2A" /> 设置为 <see langword="null" /> 时才使用默认代理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-138">The default proxy is used only when <see cref="T:System.Net.Http.HttpClientHandler.UseProxy%2A" /> is set to <see langword="true" /> and <see cref="T:System.Net.Http.HttpClientHandler.Proxy%2A" /> is set to <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-139">所需的默认代理服务器对请求进行身份验证凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-139">The credentials needed to authenticate a request to the default proxy server.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="a5aba-140">如果释放托管资源和非托管资源，则为 <see langword="true" />；如果仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-140">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5aba-141">释放由 <see cref="T:System.Net.Http.HttpClientHandler" /> 使用的非托管资源，并可根据需要释放托管资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-141">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpClientHandler" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5aba-142">此方法称为由公共`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a5aba-142">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="a5aba-143">`Dispose()` 调用受保护`Dispose(Boolean)`方法替换`disposing`参数设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="a5aba-143">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="a5aba-144"><xref:System.Object.Finalize%2A> 调用`Dispose`与`disposing`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="a5aba-144"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="a5aba-145">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.Net.Http.HttpClientHandler> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="a5aba-145">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references.</span></span> <span data-ttu-id="a5aba-146">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="a5aba-146">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAutomaticRedirections">
      <MemberSignature Language="C#" Value="public int MaxAutomaticRedirections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAutomaticRedirections" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAutomaticRedirections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAutomaticRedirections { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-147">获取或设置处理程序遵循的重定向的最大数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-147">Gets or sets the maximum number of redirects that the handler follows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-148">处理程序遵循的重定向响应的最大数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-148">The maximum number of redirection responses that the handler follows.</span>
          </span>
          <span data-ttu-id="a5aba-149">默认值为 50。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-149">The default value is 50.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5aba-150"><xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A>属性设置的最大的请求时应遵循的重定向<xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="a5aba-150">The <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnectionsPerServer">
      <MemberSignature Language="C#" Value="public int MaxConnectionsPerServer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnectionsPerServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnectionsPerServer As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnectionsPerServer { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-151">获取或设置使用 <see cref="T:System.Net.Http.HttpClient" /> 对象发出请求时允许的最大并发连接数（每个服务器终结点）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-151">Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an <see cref="T:System.Net.Http.HttpClient" /> object.</span>
          </span>
          <span data-ttu-id="a5aba-152">请注意，该限制针对每个服务器终结点，例如，值为 256 表示允许 256 个到 http://www.adatum.com/ 的并发连接，以及另外 256 个到 http://www.adventure-works.com/ 的并发连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-152">Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-153">最大允许的 （每个服务器终结点） 的并发连接数<see cref="T:System.Net.Http.HttpClient" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-153">The maximum number of concurrent connections (per server endpoint) allowed by an <see cref="T:System.Net.Http.HttpClient" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestContentBufferSize">
      <MemberSignature Language="C#" Value="public long MaxRequestContentBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxRequestContentBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestContentBufferSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxRequestContentBufferSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-154">获取或设置处理程序使用的最大请求内容缓冲区大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-154">Gets or sets the maximum request content buffer size used by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-155">最大请求内容缓冲区大小（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-155">The maximum request content buffer size in bytes.</span>
          </span>
          <span data-ttu-id="a5aba-156">默认值为 2 GB。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-156">The default value is 2 gigabytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5aba-157">应用程序可以设置<xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A>属性设置为较低的值将请求缓冲区的大小限制。</span><span class="sxs-lookup"><span data-stu-id="a5aba-157">An app can set the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property to a lower value to limit the size of the request buffer.</span></span> <span data-ttu-id="a5aba-158">如果请求内容的大小大于<xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A>属性，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="a5aba-158">If the size of the request content is greater than the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaxResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResponseHeadersLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-159">获取或设置响应标头的最大长度，以千字节（1024 字节）为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-159">Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.</span>
          </span>
          <span data-ttu-id="a5aba-160">例如，如果该值为 64，那么允许的最大响应标头长度为 65536 字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-160">For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-161">最大长度，以千字节 （1024 字节为单位），响应标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-161">The maximum length, in kilobytes (1024 bytes), of the response headers.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-162">获取或设置一个值，该值指示处理程序是否随请求发送授权标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-162">Gets or sets a value that indicates whether the handler sends an Authorization header with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-163">
            <see langword="true" /> 表示处理程序在发生身份验证之后随请求一起发送 HTTP 授权标头；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-163">
              <see langword="true" /> for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a5aba-164">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-164">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5aba-165">对特定的客户端请求后<xref:System.Uri>成功通过身份验证，如果<xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A>属性是`true`和提供凭据，<xref:System.Net.Http.HttpClientHandler>根据凭据列表的匹配项中提供<xref:System.Net.Http.HttpClientHandler.Credentials%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a5aba-165">After a client request to a specific <xref:System.Uri> is successfully authenticated, if the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property.</span></span> <span data-ttu-id="a5aba-166">授权标头与每个请求发送到任何<xref:System.Uri>匹配特定<xref:System.Uri>直到最后一个正斜杠。</span><span class="sxs-lookup"><span data-stu-id="a5aba-166">The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.</span></span>  
  
 <span data-ttu-id="a5aba-167">如果客户端请求到特定<xref:System.Uri>是不成功通过身份验证，请求使用标准身份验证过程。</span><span class="sxs-lookup"><span data-stu-id="a5aba-167">If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.</span></span>  
  
 <span data-ttu-id="a5aba-168">第一个请求，除了<xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A>属性指示是否将发送到的后续请求的身份验证信息<xref:System.Uri>匹配特定<xref:System.Uri>而无需等待将在最后一个正斜杠由服务器面临的挑战。</span><span class="sxs-lookup"><span data-stu-id="a5aba-168">With the exception of the first request, the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-169">获取 <see cref="T:System.Net.Http.HttpClient" /> 的自定义属性的可写字典（即地图）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-169">Gets a writable dictionary (that is, a map) of custom properties for the <see cref="T:System.Net.Http.HttpClient" /> requests.</span>
          </span>
          <span data-ttu-id="a5aba-170">初始字典为空；可以为自定义处理程序和特殊处理插入和查询键值对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-170">The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-171">自定义属性可写字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-171">a writable dictionary of custom properties.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-172">获取或设置处理程序使用的代理信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-172">Gets or sets proxy information used by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-173">处理程序使用的代理信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-173">The proxy information used by the handler.</span>
          </span>
          <span data-ttu-id="a5aba-174">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-174">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5aba-175"><xref:System.Net.Http.HttpClientHandler.Proxy%2A>属性标识<xref:System.Net.WebProxy>要用来处理对 Internet 资源的请求对象。</span><span class="sxs-lookup"><span data-stu-id="a5aba-175">The <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources.</span></span> <span data-ttu-id="a5aba-176">若要指定应使用无代理，设置<xref:System.Net.Http.HttpClientHandler.Proxy%2A>属性返回的代理实例<xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a5aba-176">To specify that no proxy should be used, set the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.</span></span>  
  
 <span data-ttu-id="a5aba-177">使用默认代理，可以指定本地计算机或应用程序配置文件。</span><span class="sxs-lookup"><span data-stu-id="a5aba-177">The local computer or application config file may specify that a default proxy be used.</span></span> <span data-ttu-id="a5aba-178">如果<xref:System.Net.Http.HttpClientHandler.Proxy%2A>指定属性，然后从的代理设置<xref:System.Net.Http.HttpClientHandler.Proxy%2A>属性覆盖本地计算机或应用程序配置文件和处理程序将使用指定的代理设置。</span><span class="sxs-lookup"><span data-stu-id="a5aba-178">If the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property override the local computer or application config file and the handler will use the proxy settings specified.</span></span> <span data-ttu-id="a5aba-179">如果在配置文件中不指定任何代理和<xref:System.Net.Http.HttpClientHandler.Proxy%2A>属性为未指定，该处理程序使用从 Internet 资源管理器继承在本地计算机上的代理设置。</span><span class="sxs-lookup"><span data-stu-id="a5aba-179">If no proxy is specified in a config file and the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer.</span></span> <span data-ttu-id="a5aba-180">如果没有在 Internet Explorer 代理设置，请直接向服务器发送请求。</span><span class="sxs-lookup"><span data-stu-id="a5aba-180">If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</span></span>  
  
 <span data-ttu-id="a5aba-181"><xref:System.Net.Http.HttpClientHandler>类解析包含通配符字符的代理跳过列表继承从 Internet 资源管理器相同跳过列表分析直接通过 Internet Explorer。</span><span class="sxs-lookup"><span data-stu-id="a5aba-181">The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer.</span></span> <span data-ttu-id="a5aba-182">例如，<xref:System.Net.Http.HttpClientHandler>类将正则表达式的分析的"nt *"Internet Explorer 中的跳过列表"nt。\*"。</span><span class="sxs-lookup"><span data-stu-id="a5aba-182">For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of "nt*" from Internet Explorer as a regular expression of "nt.\*".</span></span> <span data-ttu-id="a5aba-183">因此的 URL" http://nt.com"将跳过代理使用<xref:System.Net.Http.HttpClientHandler>类并使用 Internet Explorer。</span><span class="sxs-lookup"><span data-stu-id="a5aba-183">So a URL of " http://nt.com" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.</span></span>  
  
 <span data-ttu-id="a5aba-184"><xref:System.Net.Http.HttpClientHandler>类支持本地代理绕过。</span><span class="sxs-lookup"><span data-stu-id="a5aba-184">The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass.</span></span> <span data-ttu-id="a5aba-185">类会将目标是本地如果满足以下任何条件视为：</span><span class="sxs-lookup"><span data-stu-id="a5aba-185">The class considers a destination to be local if any of the following conditions are met:</span></span>  
  
1.  <span data-ttu-id="a5aba-186">目标包含一个简单的名称 （在 URL 中没有句点）。</span><span class="sxs-lookup"><span data-stu-id="a5aba-186">The destination contains a flat name (no dots in the URL).</span></span>  
  
2.  <span data-ttu-id="a5aba-187">目标包含环回地址 (<xref:System.Net.IPAddress.Loopback>或<xref:System.Net.IPAddress.IPv6Loopback>) 或目标包含<xref:System.Net.IPAddress>分配给本地计算机。</span><span class="sxs-lookup"><span data-stu-id="a5aba-187">The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.</span></span>  
  
3.  <span data-ttu-id="a5aba-188">目标的域后缀匹配本地计算机的域后缀 (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>)。</span><span class="sxs-lookup"><span data-stu-id="a5aba-188">The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClientHandler/&lt;SendAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="a5aba-189">HTTP 请求消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-189">The HTTP request message.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="a5aba-190">用于取消操作的取消标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-190">A cancellation token to cancel the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a5aba-191">基于作为不会阻止的操作在 <see cref="T:System.Net.Http.HttpRequestMessage" /> 中提供的信息创建 <see cref="T:System.Net.Http.HttpResponseMessage" /> 的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-191">Creates an instance of  <see cref="T:System.Net.Http.HttpResponseMessage" /> based on the information provided in the <see cref="T:System.Net.Http.HttpRequestMessage" /> as an operation that will not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a5aba-192">表示异步操作的任务对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-192">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5aba-193">此操作是不会阻止。</span><span class="sxs-lookup"><span data-stu-id="a5aba-193">This operation is does not block.</span></span> <span data-ttu-id="a5aba-194">它返回的实例<xref:System.Threading.Tasks.Task%601>以表示异步操作。</span><span class="sxs-lookup"><span data-stu-id="a5aba-194">It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation.</span></span> <span data-ttu-id="a5aba-195">操作完成后，<xref:System.Threading.Tasks.Task%601.Result%2A>包含响应消息。</span><span class="sxs-lookup"><span data-stu-id="a5aba-195">When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a5aba-196">
            <paramref name="request" /> 是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-196">The <paramref name="request" /> was <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateCustomValidationCallback">
      <MemberSignature Language="C#" Value="public Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; ServerCertificateCustomValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCertificateCustomValidationCallback As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ ServerCertificateCustomValidationCallback { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); void set(Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-197">获取或设置用于验证服务器证书的回调方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-197">Gets or sets a callback method to validate the server certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-198">用于验证服务器证书的回调方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-198">A callback method to validate the server certificate.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocols">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.SslProtocols SslProtocols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SslProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Property SslProtocols As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::SslProtocols SslProtocols { System::Security::Authentication::SslProtocols get(); void set(System::Security::Authentication::SslProtocols value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-199">获取或设置 HttpClientHandler 对象管理的 <see cref="T:System.Net.Http.HttpClient" /> 对象所用的 TLS/SSL 协议。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-199">Gets or sets the TLS/SSL protocol used by the <see cref="T:System.Net.Http.HttpClient" /> objects managed by the HttpClientHandler object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-200">
            <see cref="T:System.Security.Authentication.SslProtocols" /> 枚举中定义的值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-200">One of the values defined in the <see cref="T:System.Security.Authentication.SslProtocols" /> enumeration.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="a5aba-201">仅.NET framework 4.7.1： 未实现此属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-201">.NET Framework 4.7.1 only: This property is not implemented.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsAutomaticDecompression">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAutomaticDecompression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAutomaticDecompression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAutomaticDecompression { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-202">获取一个值，该值指示处理程序是否支持自动响应内容解压缩。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-202">Gets a value that indicates whether the handler supports automatic response content decompression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-203">如果该处理程序支持自动响应内容解压缩，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-203">
              <see langword="true" /> if the if the handler supports automatic response content decompression; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a5aba-204">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-204">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsProxy">
      <MemberSignature Language="C#" Value="public virtual bool SupportsProxy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsProxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsProxy { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-205">获取一个值，该值指示处理程序是否支持代理设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-205">Gets a value that indicates whether the handler supports proxy settings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-206">如果处理程序支持代理设置，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-206">
              <see langword="true" /> if the if the handler supports proxy settings; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a5aba-207">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-207">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectConfiguration">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectConfiguration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectConfiguration { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-208">获取一个值，该值表示处理程序是否支持 <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> 和 <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> 属性的配置设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-208">Gets a value that indicates whether the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-209">如果处理程序支持 <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> 和 <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> 属性的配置设置，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-209">
              <see langword="true" /> if the if the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a5aba-210">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-210">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCookies">
      <MemberSignature Language="C#" Value="public bool UseCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCookies { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-211">获取或设置一个值，该值指示处理程序是否使用 <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> 属性来存储服务器 Cookie 并在发送请求时使用这些 Cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-211">Gets or sets a value that indicates whether the handler uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-212">如果处理程序支持使用 <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> 属性来存储服务器 Cookie 并在发送请求时使用这些 Cookie，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-212">
              <see langword="true" /> if the if the handler supports uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a5aba-213">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-213">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-214">获取或设置一个值，该值控制处理程序是否随请求一起发送默认凭据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-214">Gets or sets a value that controls whether default credentials are sent with requests by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-215">如果使用默认凭据，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-215">
              <see langword="true" /> if the default credentials are used; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a5aba-216">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-216">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5aba-217">将此属性设置为`true`时发出的请求<xref:System.Net.Http.HttpClientHandler>对象，如果请求服务器进行身份验证应使用当前登录用户的凭据。</span><span class="sxs-lookup"><span data-stu-id="a5aba-217">Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="a5aba-218">对于客户端应用程序，这是在大多数情况下所需的行为。</span><span class="sxs-lookup"><span data-stu-id="a5aba-218">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="a5aba-219">对于中间层应用程序，例如 ASP.NET 应用程序，而不是使用此属性，通常会设置<xref:System.Net.Http.HttpClientHandler.Credentials%2A>到客户端的名义发出的请求的凭据的属性。</span><span class="sxs-lookup"><span data-stu-id="a5aba-219">For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProxy">
      <MemberSignature Language="C#" Value="public bool UseProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseProxy { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a5aba-220">获取或设置一个值，该值表示处理程序是否对请求使用代理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-220">Gets or sets a value that indicates whether the handler uses a proxy for requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a5aba-221">如果处理程序应对请求使用代理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-221">
              <see langword="true" /> if the handler should use a proxy for requests; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a5aba-222">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a5aba-222">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>