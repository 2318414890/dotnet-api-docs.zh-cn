<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpClient.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac565f3ff05350afbb9dccda0dc1b2898fea192237e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65f3ff05350afbb9dccda0dc1b2898fea192237e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.</source>
          <target state="translated">提供基本类，用于发送 HTTP 请求和接收来自通过 URI 确认的资源的 HTTP 响应。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> class instance acts as a session to send HTTP requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>类实例充当要发送的 HTTP 请求的会话。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>An <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance is a collection of settings applied to all requests executed by that instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>实例是适用于该实例执行的所有请求的设置集合。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>In addition, every <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance uses its own connection pool, isolating its requests from requests executed by other <ph id="ph2">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instances.</source>
          <target state="translated">此外，每个<ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>实例使用其自己的连接池，隔离执行的其他请求来自其请求<ph id="ph2">&lt;xref:System.Net.Http.HttpClient&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> also acts as a base class for more specific HTTP clients.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>还可充当基类更具体的 HTTP 客户端。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>An example would be a FacebookHttpClient providing additional methods specific to a Facebook web service (a GetFriends method, for instance).</source>
          <target state="translated">示例将提供特定于 Facebook web 服务的其他方法 FacebookHttpClient (GetFriends 方法，例如)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Derived classes should not override the virtual methods on the class.</source>
          <target state="translated">派生的类不应重写类上的虚拟方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Instead, use a constructor overload that accepts <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> to configure any pre- or post-request processing instead.</source>
          <target state="translated">请改用接受的构造函数重载<ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph>配置任何售前或后请求处理相反。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>By default, <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> will be used to send requests to the server.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>将用于向服务器发送请求。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This behavior can be modified by specifying a different channel in one of the constructor overloads taking a <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> instance as parameter.</source>
          <target state="translated">此行为可以修改通过在构造函数重载采用之一中指定不同的通道<ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph>实例作为参数。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>If features like authentication or caching are required, <ph id="ph1">&lt;xref:System.Net.Http.WebRequestHandler&gt;</ph> can be used to configure settings and the instance can be passed to the constructor.</source>
          <target state="translated">如果身份验证或缓存等功能是必需的<ph id="ph1">&lt;xref:System.Net.Http.WebRequestHandler&gt;</ph>可以用于配置设置和实例可以传递给构造函数。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The returned handler can be passed to one of the constructor overloads taking a <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> parameter.</source>
          <target state="translated">返回的处理程序可传递到一个构造函数重载采用<ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph>参数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>If an app using <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> and related classes in the  <ph id="ph2">&lt;xref:System.Net.Http&gt;</ph> namespace intends to download large amounts of data (50 megabytes or more), then the app should stream those downloads and not use the default buffering.</source>
          <target state="translated">如果应用使用<ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>和中的相关类<ph id="ph2">&lt;xref:System.Net.Http&gt;</ph>命名空间打算下载大量数据 （50 兆字节或更多），则应用程序应流式传输的下载文件并不使用的默认缓冲。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>If the default buffering is used the client memory usage will get very large, potentially resulting in substantially reduced performance.</source>
          <target state="translated">如果使用的默认缓冲，则客户端内存使用情况将变得很大，可能会显著导致性能下降。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The following methods are thread safe:</source>
          <target state="translated">下面的方法是线程安全：</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> is intended to be instantiated once and re-used throughout the life of an application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 被用于一次实例化和重新使用应用程序的整个生存期。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</source>
          <target state="translated">实例化 HttpClient 类，为每个请求，则将耗尽重度负载下可用的插槽数。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This will result in SocketException errors.</source>
          <target state="translated">这将导致 SocketException 错误。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Below is an example using HttpClient correctly.</source>
          <target state="translated">下面是使用 HttpClient 正确示例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> is a high-level API that wraps the lower-level functionality available on each platform where it runs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>是一种高级的 API，包装在何处运行每个平台上可用的较低级别功能。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>On each platform, <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> tries to use the best available transport:</source>
          <target state="translated">每个平台上<ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>尝试使用最佳的可用传输：</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><bpt id="p1">**</bpt>Host/Runtime<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Host/Runtime<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><bpt id="p1">**</bpt>Backend<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>后端<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows/.NET Framework</source>
          <target state="translated">Windows/.NET Framework</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows/Mono</source>
          <target state="translated">Windows/Mono</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows/UWP</source>
          <target state="translated">Windows/UWP</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows native <ph id="ph1">&lt;xref:System.Net.Http.WinHttpHandler&gt;</ph> (HTTP 2.0 capable)</source>
          <target state="translated">Windows 本机<ph id="ph1">&lt;xref:System.Net.Http.WinHttpHandler&gt;</ph>(HTTP 2.0 支持)</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows/.NET Core</source>
          <target state="translated">Windows/.NET Core</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows native <ph id="ph1">&lt;xref:System.Net.Http.WinHttpHandler&gt;</ph> (HTTP 2.0 capable)</source>
          <target state="translated">Windows 本机<ph id="ph1">&lt;xref:System.Net.Http.WinHttpHandler&gt;</ph>(HTTP 2.0 支持)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Android/Xamarin</source>
          <target state="translated">Android/Xamarin</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Selected at build-time.</source>
          <target state="translated">选择在生成时。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Can either use <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> or be configured to use Android's native <bpt id="p1">[</bpt><ph id="ph2">`HttpURLConnection`</ph><ept id="p1">](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</ept></source>
          <target state="translated">可以使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>也配置为使用 Android 的本机 <bpt id="p1">[</bpt><ph id="ph2">`HttpURLConnection`</ph><ept id="p1">](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>iOS, tvOS, watchOS/Xamarin</source>
          <target state="translated">iOS、 tvOS、 watchOS/Xamarin</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Selected at build-time.</source>
          <target state="translated">选择在生成时。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Can either use <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> or be configured to use Apple's <bpt id="p1">[</bpt><ph id="ph2">`NSUrlSession`</ph><ept id="p1">](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/)</ept> (HTTP 2.0 capable)</source>
          <target state="translated">可以使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>或配置为使用 Apple 的<bpt id="p1">[</bpt> <ph id="ph2">`NSUrlSession`</ph> <ept id="p1">](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/)</ept> (HTTP 2.0 支持)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>macOS/Xamarin</source>
          <target state="translated">macOS/Xamarin</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Selected at build-time.</source>
          <target state="translated">选择在生成时。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Can either use <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> or be configured to use Apple's <bpt id="p1">[</bpt><ph id="ph2">`NSUrlSession`</ph><ept id="p1">](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/)</ept> (HTTP 2.0 capable)</source>
          <target state="translated">可以使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>或配置为使用 Apple 的<bpt id="p1">[</bpt> <ph id="ph2">`NSUrlSession`</ph> <ept id="p1">](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/)</ept> (HTTP 2.0 支持)</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>macOS/Mono</source>
          <target state="translated">macOS/Mono</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>macOS/.NET Core</source>
          <target state="translated">macOS/.NET Core</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><ph id="ph1">`libcurl`</ph>-based HTTP transport (HTTP 2.0 capable)</source>
          <target state="translated"><ph id="ph1">`libcurl`</ph>-基于 HTTP 传输协议 (HTTP 2.0 支持)</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Linux/Mono</source>
          <target state="translated">Linux/Mono</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Linux/.NET Core</source>
          <target state="translated">Linux/.NET Core</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><ph id="ph1">`libcurl`</ph>-based HTTP transport (HTTP 2.0 capable)</source>
          <target state="translated"><ph id="ph1">`libcurl`</ph>-基于 HTTP 传输协议 (HTTP 2.0 支持)</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Users can also configure a specific transport for <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> by invoking the <ph id="ph2">&lt;xref:System.Net.Http.HttpClient.%23ctor*&gt;</ph> constructor that takes an <ph id="ph3">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph>.</source>
          <target state="translated">用户还可以配置的特定传输<ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>通过调用<ph id="ph2">&lt;xref:System.Net.Http.HttpClient.%23ctor*&gt;</ph>构造函数采用<ph id="ph3">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> is intended to be instantiated once and re-used throughout the life of an application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 被用于一次实例化和重新使用应用程序的整个生存期。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</source>
          <target state="translated">实例化 HttpClient 类，为每个请求，则将耗尽重度负载下可用的插槽数。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This will result in SocketException errors.</source>
          <target state="translated">这将导致 SocketException 错误。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Below is an example using HttpClient correctly.</source>
          <target state="translated">下面是使用 HttpClient 正确示例。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
          <source>The HTTP handler stack to use for sending requests.</source>
          <target state="translated">要用于发送请求的 HTTP 处理程序堆栈。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> class with a specific handler.</source>
          <target state="translated">用特定的处理程序初始化 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
          <source><ph id="ph1">`handler`</ph> will be disposed of by calling <bpt id="p1">[</bpt>HttpClient.Dispose<ept id="p1">](xref:System.Net.Http.HttpMessageInvoker.Dispose)</ept>.</source>
          <target state="translated"><ph id="ph1">`handler`</ph> 将通过调用释放<bpt id="p1">[</bpt>HttpClient.Dispose<ept id="p1">](xref:System.Net.Http.HttpMessageInvoker.Dispose)</ept>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
          <source>The <ph id="ph1">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph> responsible for processing the HTTP response messages.</source>
          <target state="translated">负责处理 HTTP 响应消息的 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the inner handler should be disposed of by <bpt id="p1">[</bpt>HttpClient.Dispose<ept id="p1">](xref:System.Net.Http.HttpMessageInvoker.Dispose)</ept>, <ph id="ph2">&lt;see langword="false" /&gt;</ph> if you intend to reuse the inner handler.</source>
          <target state="translated">如果内部处理程序应由 <bpt id="p1">[</bpt>HttpClient.Dispose<ept id="p1">](xref:System.Net.Http.HttpMessageInvoker.Dispose)</ept> 处置，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，如果希望重新使用内部处理程序，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> class with a specific handler.</source>
          <target state="translated">用特定的处理程序初始化 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.BaseAddress">
          <source>Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</source>
          <target state="translated">获取或设置发送请求时使用的 Internet 资源的统一资源标识符 (URI) 的基址。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.BaseAddress">
          <source>The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</source>
          <target state="translated">发送请求时使用的 Internet 资源的统一资源标识符 (URI) 的基址。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.BaseAddress">
          <source>When sending a <ph id="ph1">&lt;xref:System.Net.Http.HttpRequestMessage&gt;</ph> with a relative Uri, the message Uri will be added to the <ph id="ph2">&lt;xref:System.Net.Http.HttpClient.BaseAddress%2A&gt;</ph> property to create an absolute Uri.</source>
          <target state="translated">发送时<ph id="ph1">&lt;xref:System.Net.Http.HttpRequestMessage&gt;</ph>与相对的 Uri，对消息 Uri 将添加到<ph id="ph2">&lt;xref:System.Net.Http.HttpClient.BaseAddress%2A&gt;</ph>属性来创建绝对 Uri。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.CancelPendingRequests">
          <source>Cancel all pending requests on this instance.</source>
          <target state="translated">取消该实例所有挂起的请求。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.CancelPendingRequests">
          <source>After calling this method, the <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance can still be used to execute additional requests.</source>
          <target state="translated">调用此方法后<ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>实例仍可以用于执行其他请求。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
          <source>Gets the headers which should be sent with each request.</source>
          <target state="translated">获取与每个请求一起发送的标题。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
          <source>The headers which should be sent with each request.</source>
          <target state="translated">应与每一个请求一起发送的标题。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
          <source>Headers set on this property don't need to be set on request messages again.</source>
          <target state="translated">此属性上设置的标头无需再次设置请求消息。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a DELETE request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以异步操作将 DELETE 请求发送给指定 URI。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>Send a DELETE request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以异步操作将 DELETE 请求发送给指定 URI。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">请求消息已由 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 实例发送。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>Send a DELETE request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以异步操作将 DELETE 请求发送给指定 URI。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">请求消息已由 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 实例发送。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">可由其他对象或线程用以接收取消通知的取消标记。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</source>
          <target state="translated">用以异步操作的取消标记发送 DELETE 请求到指定的 URI。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">请求消息已由 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 实例发送。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">可由其他对象或线程用以接收取消通知的取消标记。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</source>
          <target state="translated">用以异步操作的取消标记发送 DELETE 请求到指定的 URI。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">请求消息已由 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 实例发送。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to releases only unmanaged resources.</source>
          <target state="translated">如果释放托管资源和非托管资源，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果仅释放非托管资源，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> and optionally disposes of the managed resources.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 使用的非托管资源，并可根据需要释放托管资源。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">此方法称为由公共<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 调用受保护<ph id="ph2">`Dispose(Boolean)`</ph>方法替换<ph id="ph3">`disposing`</ph>参数设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 调用<ph id="ph2">`Dispose`</ph>与<ph id="ph3">`disposing`</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Net.Http.HttpClient&gt;</ph> references.</source>
          <target state="translated">当 <ph id="ph1">`disposing`</ph> 参数为 <ph id="ph2">`true`</ph> 时，此方法释放该 <ph id="ph3">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 引用的、由任何托管对象持有的全部资源。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">此方法调用每个引用对象的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>When this method is called, the <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.CancelPendingRequests%2A&gt;</ph> method is called to abort all pending requests.</source>
          <target state="translated">当调用此方法时，<ph id="ph1">&lt;xref:System.Net.Http.HttpClient.CancelPendingRequests%2A&gt;</ph>调用方法以中止所有挂起的请求。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a GET request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以异步操作将 GET 请求发送给指定 URI。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The operation will not block.</source>
          <target state="translated">不会阻止该操作。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>Send a GET request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以异步操作将 GET 请求发送给指定 URI。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>Send a GET request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以异步操作将 GET 请求发送给指定 URI。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>An HTTP completion option value that indicates when the operation should be considered completed.</source>
          <target state="translated">指示操作应视为已完成的时间的 HTTP 完成选项值。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</source>
          <target state="translated">用以异步操作的 HTTP 完成选项发送 GET 请求到指定的 URI。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete based on the <ph id="ph2">`completionOption`</ph> parameter after the part or all of the response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>对象将在完成基于<ph id="ph2">`completionOption`</ph>读取部分或全部 （包括内容） 的响应后的参数。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">可由其他对象或线程用以接收取消通知的取消标记。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</source>
          <target state="translated">用以异步操作的取消标记发送 GET 请求到指定的 URI。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>An HTTP completion option value that indicates when the operation should be considered completed.</source>
          <target state="translated">指示操作应视为已完成的时间的 HTTP 完成选项值。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</source>
          <target state="translated">用以异步操作的 HTTP 完成选项发送 GET 请求到指定的 URI。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete based on the <ph id="ph2">`completionOption`</ph> parameter after the part or all of the response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>对象将在完成基于<ph id="ph2">`completionOption`</ph>读取部分或全部 （包括内容） 的响应后的参数。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">可由其他对象或线程用以接收取消通知的取消标记。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</source>
          <target state="translated">用以异步操作的取消标记发送 GET 请求到指定的 URI。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>An HTTP  completion option value that indicates when the operation should be considered completed.</source>
          <target state="translated">指示操作应视为已完成的时间的 HTTP 完成选项值。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">可由其他对象或线程用以接收取消通知的取消标记。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</source>
          <target state="translated">用以异步操作的 HTTP 完成选项和取消标记发送 GET 请求到指定的 URI。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete based on the <ph id="ph2">`completionOption`</ph> parameter after the part or all of the response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>对象将在完成基于<ph id="ph2">`completionOption`</ph>读取部分或全部 （包括内容） 的响应后的参数。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>An HTTP  completion option value that indicates when the operation should be considered completed.</source>
          <target state="translated">指示操作应视为已完成的时间的 HTTP 完成选项值。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">可由其他对象或线程用以接收取消通知的取消标记。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</source>
          <target state="translated">用以异步操作的 HTTP 完成选项和取消标记发送 GET 请求到指定的 URI。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete based on the <ph id="ph2">`completionOption`</ph> parameter after the part or all of the response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>对象将在完成基于<ph id="ph2">`completionOption`</ph>读取部分或全部 （包括内容） 的响应后的参数。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</source>
          <target state="translated">将 GET 请求发送到指定 URI 并在异步操作中以字节数组的形式返回响应正文。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The operation will not block.</source>
          <target state="translated">不会阻止该操作。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</source>
          <target state="translated">将 GET 请求发送到指定 URI 并在异步操作中以字节数组的形式返回响应正文。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>对象都完成后在读取整个响应正文。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</source>
          <target state="translated">将 GET 请求发送到指定 URI 并在异步操作中以字节数组的形式返回响应正文。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>对象都完成后在读取整个响应正文。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</source>
          <target state="translated">将 GET 请求发送到指定 URI 并在异步操作中以流的形式返回响应正文。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The operation will not block.</source>
          <target state="translated">不会阻止该操作。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</source>
          <target state="translated">将 GET 请求发送到指定 URI 并在异步操作中以流的形式返回响应正文。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>对象都完成后在读取整个响应正文。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>This method does not buffer the stream.</source>
          <target state="translated">此方法不缓冲流。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</source>
          <target state="translated">将 GET 请求发送到指定 URI 并在异步操作中以流的形式返回响应正文。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>对象都完成后在读取整个响应正文。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>This method does not buffer the stream.</source>
          <target state="translated">此方法不缓冲流。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</source>
          <target state="translated">将 GET 请求发送到指定 URI 并在异步操作中以字符串的形式返回响应正文。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</source>
          <target state="translated">将 GET 请求发送到指定 URI 并在异步操作中以字符串的形式返回响应正文。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>对象都完成后在读取整个响应正文。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</source>
          <target state="translated">将 GET 请求发送到指定 URI 并在异步操作中以字符串的形式返回响应正文。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>对象都完成后在读取整个响应正文。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>Gets or sets the maximum number of bytes to buffer when reading the response content.</source>
          <target state="translated">获取或设置读取响应内容时要缓冲的最大字节数。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>The maximum number of bytes to buffer when reading the response content.</source>
          <target state="translated">当读取响应内容时缓冲区的最大字节数。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>The default value for this property is 2 gigabytes.</source>
          <target state="translated">此属性的默认值为 2 GB。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>An app can set the <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A&gt;</ph> property to a lower value to limit the size of the response to buffer when reading the response.</source>
          <target state="translated">应用程序可以设置<ph id="ph1">&lt;xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A&gt;</ph>为较低的值，以限制对缓冲区的响应的大小，在读取响应时的属性。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>If the size of the response content is greater than the  <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A&gt;</ph> property, an exception is thrown.</source>
          <target state="translated">如果响应内容的大小大于<ph id="ph1">&lt;xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A&gt;</ph>属性，将引发异常。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>The size specified is less than or equal to zero.</source>
          <target state="translated">指定大小小于或等于零。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>An operation has already been started on the current instance.</source>
          <target state="translated">已在当前实例上启动了一个操作。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>The current instance has been disposed.</source>
          <target state="translated">已释放当前实例。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a POST request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以异步操作将 POST 请求发送给指定 URI。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">发送到服务器的 HTTP 请求内容。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>Send a POST request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以异步操作将 POST 请求发送给指定 URI。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">发送到服务器的 HTTP 请求内容。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>Send a POST request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以异步操作将 POST 请求发送给指定 URI。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">发送到服务器的 HTTP 请求内容。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">可由其他对象或线程用以接收取消通知的取消标记。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>Send a POST request with a cancellation token as an asynchronous operation.</source>
          <target state="translated">用以异步操作的取消标记发送 POST 请求。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">发送到服务器的 HTTP 请求内容。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">可由其他对象或线程用以接收取消通知的取消标记。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>Send a POST request with a cancellation token as an asynchronous operation.</source>
          <target state="translated">用以异步操作的取消标记发送 POST 请求。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a PUT request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以异步操作将 PUT 请求发送给指定 URI。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">发送到服务器的 HTTP 请求内容。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>Send a PUT request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以异步操作将 PUT 请求发送给指定 URI。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">发送到服务器的 HTTP 请求内容。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>Send a PUT request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以异步操作将 PUT 请求发送给指定 URI。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">发送到服务器的 HTTP 请求内容。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">可由其他对象或线程用以接收取消通知的取消标记。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>Send a PUT request with a cancellation token as an asynchronous operation.</source>
          <target state="translated">用以异步操作的取消标记发送 PUT 请求。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">请求发送到的 URI。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">发送到服务器的 HTTP 请求内容。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">可由其他对象或线程用以接收取消通知的取消标记。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>Send a PUT request with a cancellation token as an asynchronous operation.</source>
          <target state="translated">用以异步操作的取消标记发送 PUT 请求。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>读取整个响应 （包括内容） 后，将完成对象。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">以异步操作发送 HTTP 请求。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The HTTP request message to send.</source>
          <target state="translated">要发送的 HTTP 请求消息。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">以异步操作发送 HTTP 请求。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete once the entire response including content is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>对象都完成后读取包括内容的整个响应。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">请求消息已由 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 实例发送。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The HTTP request message to send.</source>
          <target state="translated">要发送的 HTTP 请求消息。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>When the operation should complete (as soon as a response is available or after reading the whole response content).</source>
          <target state="translated">操作应完成时（在响应可利用或在读取整个响应内容之后）。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">以异步操作发送 HTTP 请求。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>Depending on the value of the <ph id="ph1">`completionOption`</ph> parameter, the returned <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete as soon as a response is available or the entire response including content is read.</source>
          <target state="translated">根据值<ph id="ph1">`completionOption`</ph>参数、 返回<ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>一旦响应一旦可用或读取包括内容的整个响应对象将完成。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">请求消息已由 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 实例发送。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The HTTP request message to send.</source>
          <target state="translated">要发送的 HTTP 请求消息。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The cancellation token to cancel operation.</source>
          <target state="translated">取消操作的取消标记。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">以异步操作发送 HTTP 请求。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete once the entire response including content is read.</source>
          <target state="translated">返回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>对象都完成后读取包括内容的整个响应。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">请求消息已由 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 实例发送。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The HTTP request message to send.</source>
          <target state="translated">要发送的 HTTP 请求消息。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>When the operation should complete (as soon as a response is available or after reading the whole response content).</source>
          <target state="translated">操作应完成时（在响应可利用或在读取整个响应内容之后）。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The cancellation token to cancel operation.</source>
          <target state="translated">取消操作的取消标记。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">以异步操作发送 HTTP 请求。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">表示异步操作的任务对象。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">不会阻止此操作。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>Depending on the value of the <ph id="ph1">`completionOption`</ph> parameter, the returned <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete as soon as a response is available or the entire response including content is read.</source>
          <target state="translated">根据值<ph id="ph1">`completionOption`</ph>参数、 返回<ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>一旦响应一旦可用或读取包括内容的整个响应对象将完成。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">请求消息已由 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 实例发送。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">由于基础问题（如网络连接性、DNS 失败、服务器证书验证或超时），请求失败。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>Gets or sets the timespan to wait before the request times out.</source>
          <target state="translated">获取或设置请求超时前等待的时间跨度。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The timespan to wait before the request times out.</source>
          <target state="translated">请求超时前等待的时间跨度。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The default value is 100,000 milliseconds (100 seconds).</source>
          <target state="translated">默认值是 100,000 毫秒（100 秒）。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>To set an infinite timeout, set the property value to <ph id="ph1">&lt;xref:System.Threading.Timeout.InfiniteTimeSpan&gt;</ph>.</source>
          <target state="translated">若要设置无限超时，请将属性值设置为<ph id="ph1">&lt;xref:System.Threading.Timeout.InfiniteTimeSpan&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.Timeout%2A&gt;</ph> to a value less than 15 seconds, it may take 15 seconds or more before a <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> is thrown to indicate a timeout on your request.</source>
          <target state="translated">域名系统 (DNS) 查询可能需要最多为 15 秒为单位返回或超时。如果你的请求包含需要解析的主机名，并设置<ph id="ph1">&lt;xref:System.Net.Http.HttpClient.Timeout%2A&gt;</ph>为值小于 15 秒，可能需要 15 秒或更之前<ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph>引发来指示你的请求超时。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The same timeout will apply for all requests using this <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance.</source>
          <target state="translated">相同的超时将适用于所有请求使用此<ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>You may also set different timeouts for individual requests using a <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> on a task.</source>
          <target state="translated">您还可以设置不同的使用的各个请求的超时<ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph>任务。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>Note that only the shorter of the two timeouts will apply.</source>
          <target state="translated">请注意，只有较短的两个超时将应用。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The timeout specified is less than or equal to zero and is not <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /&gt;</ph>.</source>
          <target state="translated">指定的超时值小于或等于零，而不是 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>An operation has already been started on the current instance.</source>
          <target state="translated">已在当前实例上启动了一个操作。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The current instance has been disposed.</source>
          <target state="translated">已释放当前实例。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>