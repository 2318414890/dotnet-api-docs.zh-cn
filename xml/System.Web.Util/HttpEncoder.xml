<Type Name="HttpEncoder" FullName="System.Web.Util.HttpEncoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2474ea2afb6fd952074dbcdd29d6df7607fbbd04" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39750459" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HttpEncoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Util.HttpEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpEncoder" />
  <TypeSignature Language="F#" Value="type HttpEncoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2fdae-101">提供编码和解码逻辑。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2fdae-101">Provides encoding and decoding logic.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fdae-102">此类包含编码和解码类中的方法使用如的逻辑<xref:System.Web.HttpUtility>， <xref:System.Web.HttpServerUtility>，和<xref:System.Net.HttpResponseHeader>。</span><span class="sxs-lookup"><span data-stu-id="2fdae-102">The class contains encoding and decoding logic that is used by methods in classes such as <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, and <xref:System.Net.HttpResponseHeader>.</span></span>  
  
 <span data-ttu-id="2fdae-103">可以继承自<xref:System.Web.Util.HttpEncoder>类并重写其行为以进行自定义默认的编码和解码的 ASP.NET 的行为。</span><span class="sxs-lookup"><span data-stu-id="2fdae-103">You can inherit from the <xref:System.Web.Util.HttpEncoder> class and override its behavior to customize the default encoding and decoding behavior of ASP.NET.</span></span> <span data-ttu-id="2fdae-104">然后设置<xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A>属性的<xref:System.Web.Configuration.HttpRuntimeSection>类，以配置自定义类。</span><span class="sxs-lookup"><span data-stu-id="2fdae-104">You then set the <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> property of the <xref:System.Web.Configuration.HttpRuntimeSection> class to configure your custom class.</span></span>  
  
 <span data-ttu-id="2fdae-105">用于编码和解码的自定义类派生自<xref:System.Web.Util.HttpEncoder>可以重写内置 ASP.NET 编码和解码行为或更改只选择了它的方面。</span><span class="sxs-lookup"><span data-stu-id="2fdae-105">A custom class for encoding and decoding that derives from <xref:System.Web.Util.HttpEncoder> can override the built-in ASP.NET encoding and decoding behavior or change only selected aspects of it.</span></span>  
  
 <span data-ttu-id="2fdae-106">在 ASP.NET 中来取代或补充以下编码行为，可以配置的自定义编码类型：</span><span class="sxs-lookup"><span data-stu-id="2fdae-106">You can configure the custom encoding type for in ASP.NET to replace or supplement the following encoding behavior:</span></span>  
  
-   <span data-ttu-id="2fdae-107">HTML 编码</span><span class="sxs-lookup"><span data-stu-id="2fdae-107">HTML encoding</span></span>  
  
-   <span data-ttu-id="2fdae-108">HTML 特性编码</span><span class="sxs-lookup"><span data-stu-id="2fdae-108">HTML attribute encoding</span></span>  
  
-   <span data-ttu-id="2fdae-109">URL 编码</span><span class="sxs-lookup"><span data-stu-id="2fdae-109">URL encoding</span></span>  
  
-   <span data-ttu-id="2fdae-110">URL 路径编码</span><span class="sxs-lookup"><span data-stu-id="2fdae-110">URL path encoding</span></span>  
  
-   <span data-ttu-id="2fdae-111">HTTP 标头名称和标头值编码</span><span class="sxs-lookup"><span data-stu-id="2fdae-111">HTTP header name and header value encoding</span></span>  
  
 <span data-ttu-id="2fdae-112">默认情况下，ASP.NET 应用程序配置为使用<xref:System.Web.Security.AntiXss.AntiXssEncoder>键入对于所有输出编码。</span><span class="sxs-lookup"><span data-stu-id="2fdae-112">By default, ASP.NET applications are configured to use the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type for all output encoding.</span></span>  
  
 <span data-ttu-id="2fdae-113">下面的示例从应用程序级别 Web.config 文件显示如何<xref:System.Web.Security.AntiXss.AntiXssEncoder>类型设置为 ASP.NET 应用程序：</span><span class="sxs-lookup"><span data-stu-id="2fdae-113">The following example from an application-level Web.config file shows how the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type is set for an ASP.NET application:</span></span>  
  
 `<httpRuntime requestValidationMode="4.5" encoderType="System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>`  
  
 <span data-ttu-id="2fdae-114">该示例设置中的配置设置<xref:System.Web.Security.AntiXss.AntiXssEncoder>类来执行所有输出应用程序中的编码。</span><span class="sxs-lookup"><span data-stu-id="2fdae-114">The configuration setting in the example sets the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class to perform all output encoding in the application.</span></span> <span data-ttu-id="2fdae-115">有关详细信息，请参阅<xref:System.Web.Security.AntiXss.AntiXssEncoder>类概述。</span><span class="sxs-lookup"><span data-stu-id="2fdae-115">For more information, see the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class overview.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="2fdae-116">
        <para>如果您创建一个自定义编码器类，重写基方法的类的基类派生的编码器可能引发异常从任何重写方法。但是，在以下情况下引发此类异常可能会导致意外行为在 ASP.NET 中:-如果 ASP.NET 将呈现一个错误页面，导致未处理的异常引发自定义编码器，ASP.NET 不会尝试对其错误 o 进行编码通过调入自定义编码器的分行符。这样可避免递归错误条件。 -当 ASP.NET HTTP 标头发送到 IIS，ASP.NET 有未经处理的异常无法预配。因此，将呈现标准 ASP.NET 错误页 （如果配置设置允许要显示此页）。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="2fdae-116">
          <para>When you create a custom encoder class and override the base methods of the base class, the derived encoder might throw an exception from any of the overridden methods. However, in the following cases throwing such an exception could lead to unexpected behavior in ASP.NET:  -   If ASP.NET is rendering an error page that is caused by an unhandled exception that was thrown from a custom encoder, ASP.NET does not attempt to encode its error output by calling into the custom encoder. This avoids recursive error conditions.  -   When ASP.NET is sending HTTP headers to IIS, ASP.NET has no provision for unhandled exceptions. Therefore, the standard ASP.NET error page will be rendered (if configuration settings allows this page to be displayed).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="T:System.Web.Configuration.HttpRuntimeSection" />
    <altmember cref="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2fdae-117">初始化 <see cref="T:System.Web.Util.HttpEncoder" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-117">Initializes a new instance of the <see cref="T:System.Web.Util.HttpEncoder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Current" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Current { System::Web::Util::HttpEncoder ^ get(); void set(System::Web::Util::HttpEncoder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Web.Util.HttpEncoder with get, set" Usage="System.Web.Util.HttpEncoder.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fdae-118">获取或设置将在应用程序中使用的 <see cref="T:System.Web.Util.HttpEncoder" /> 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-118">Gets or set the <see cref="T:System.Web.Util.HttpEncoder" /> type that will be used in an application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fdae-119">对将要使用的编码器/解码器类型的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-119">A reference to the encoder/decoder type that will be used.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fdae-120">如果派生<xref:System.Web.Util.HttpEncoder>在配置文件中，指定类型<xref:System.Web.Util.HttpEncoder.Current%2A>属性返回对自定义类型的引用。</span><span class="sxs-lookup"><span data-stu-id="2fdae-120">If a derived <xref:System.Web.Util.HttpEncoder> type is specified in the configuration file, the <xref:System.Web.Util.HttpEncoder.Current%2A> property returns a reference to the custom type.</span></span> <span data-ttu-id="2fdae-121">但是，如果使用没有自定义编码器，该属性将返回到默认 ASP.NET 的引用<xref:System.Web.Util.HttpEncoder>实例。</span><span class="sxs-lookup"><span data-stu-id="2fdae-121">However, if no custom encoder is used, the property returns a reference to the default ASP.NET <xref:System.Web.Util.HttpEncoder> instance.</span></span>  
  
 <span data-ttu-id="2fdae-122"><xref:System.Web.Util.HttpEncoder.Current%2A>属性不是线程安全。</span><span class="sxs-lookup"><span data-stu-id="2fdae-122">The <xref:System.Web.Util.HttpEncoder.Current%2A> property is not thread-safe.</span></span> <span data-ttu-id="2fdae-123">只能在应用程序中设置此属性`Application_Start`方法，因为`Application_Start`在单个线程上运行。</span><span class="sxs-lookup"><span data-stu-id="2fdae-123">Set this property only in the application's `Application_Start` method, because `Application_Start` runs on a single thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fdae-124">分配给此属性的编码器实例是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-124">The encoder instance that is being assigned to this property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Default { System::Web::Util::HttpEncoder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Web.Util.HttpEncoder" Usage="System.Web.Util.HttpEncoder.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2fdae-125">获取对 ASP.NET 的默认编码器的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-125">Gets a reference to the default encoder for ASP.NET.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2fdae-126">对默认编码器的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-126">A reference to the default encoder.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fdae-127">常见的编码问题是，默认 ASP.NET<xref:System.Web.Util.HttpEncoder.UrlEncode%2A>行为将"+"字符转换为空格。</span><span class="sxs-lookup"><span data-stu-id="2fdae-127">A common encoding issue is that the default ASP.NET <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> behavior converts spaces into the "+" character.</span></span> <span data-ttu-id="2fdae-128">从历史上看，"+"字符已经成为 Internet 约定，在 URL 中的空格字符编码到更具可读性的方式。</span><span class="sxs-lookup"><span data-stu-id="2fdae-128">Historically, the "+" character has been an Internet convention for encoding space characters in a URL into a more human-readable manner.</span></span> <span data-ttu-id="2fdae-129">但是，根据标准，空格字符是应该为"%20"，而不是编码为"+"字符。</span><span class="sxs-lookup"><span data-stu-id="2fdae-129">However, according to standards, the space character is supposed to be encoded as "%20" and instead of as the "+" character.</span></span> <span data-ttu-id="2fdae-130">ASP.NET 使您可以实现更多的标准合规编码算法。</span><span class="sxs-lookup"><span data-stu-id="2fdae-130">ASP.NET lets you implement a more standards compliant encoding algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderNameValueEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HeaderNameValueEncode (string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HeaderNameValueEncode(string headerName, string headerValue, [out] string&amp; encodedHeaderName, [out] string&amp; encodedHeaderValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HeaderNameValueEncode (headerName As String, headerValue As String, ByRef encodedHeaderName As String, ByRef encodedHeaderValue As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HeaderNameValueEncode(System::String ^ headerName, System::String ^ headerValue, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderName, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderValue);" />
      <MemberSignature Language="F#" Value="abstract member HeaderNameValueEncode : string * string *  *  -&gt; unit&#xA;override this.HeaderNameValueEncode : string * string *  *  -&gt; unit" Usage="httpEncoder.HeaderNameValueEncode (headerName, headerValue, encodedHeaderName, encodedHeaderValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="headerValue" Type="System.String" />
        <Parameter Name="encodedHeaderName" Type="System.String" RefType="out" />
        <Parameter Name="encodedHeaderValue" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="headerName">
          <span data-ttu-id="2fdae-131">要编码的 HTTP 标头名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-131">The HTTP header name to encode.</span>
          </span>
        </param>
        <param name="headerValue">
          <span data-ttu-id="2fdae-132">要编码的 HTTP 标头值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-132">The HTTP header value to encode.</span>
          </span>
        </param>
        <param name="encodedHeaderName">
          <span data-ttu-id="2fdae-133">当此方法返回时，返回值包含要用于 HTTP 标头的已编码名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-133">When this method returns, contains the encoded name to use for an HTTP header.</span>
          </span>
          <span data-ttu-id="2fdae-134">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-134">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="encodedHeaderValue">
          <span data-ttu-id="2fdae-135">当此方法返回时，返回值包含要用于 HTTP 标头的已编码值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-135">When this method returns, contains the encoded value to use for an HTTP header.</span>
          </span>
          <span data-ttu-id="2fdae-136">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-136">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fdae-137">将标头名称和值编码为可用作 HTTP 标头的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-137">Encodes a header name and value into a string that can be used as an HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fdae-138"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A>方法采用从输入的字符串`headerName`和`headerValue`参数并对它们进行编码。</span><span class="sxs-lookup"><span data-stu-id="2fdae-138">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method takes input strings from the `headerName` and `headerValue` parameters and encodes them.</span></span> <span data-ttu-id="2fdae-139">为输出参数返回已编码的值。</span><span class="sxs-lookup"><span data-stu-id="2fdae-139">The encoded values are returned as out parameters.</span></span>  
  
 <span data-ttu-id="2fdae-140"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A>方法使用以下逻辑进行编码标头名称和值：</span><span class="sxs-lookup"><span data-stu-id="2fdae-140">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method uses the following logic to encode header names and values:</span></span>  
  
-   <span data-ttu-id="2fdae-141">其 Unicode 值小于 32，除 ASCII 字符，第 9 的 ASCII 字符的所有字符都都转换为格式的 URL 编码`%NN`其中`N`字符表示十六进制值。</span><span class="sxs-lookup"><span data-stu-id="2fdae-141">All characters whose Unicode value is less than ASCII character 32, except ASCII character 9, are URL-encoded into a format of `%NN` where the `N` characters represent hexadecimal values.</span></span>  
  
-   <span data-ttu-id="2fdae-142">ASCII 字符 9 （水平制表符） 不是 URL 编码。</span><span class="sxs-lookup"><span data-stu-id="2fdae-142">ASCII character 9 (the horizontal tab character) is not URL-encoded.</span></span>  
  
-   <span data-ttu-id="2fdae-143">127 的 ASCII 字符编码为`%7F`。</span><span class="sxs-lookup"><span data-stu-id="2fdae-143">ASCII character 127 is encoded as `%7F`.</span></span>  
  
-   <span data-ttu-id="2fdae-144">所有其他字符不进行编码。</span><span class="sxs-lookup"><span data-stu-id="2fdae-144">All other characters are not encoded.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="2fdae-145">尽管此方法可以用于 Unicode 值，但它通常用于 ASCII 范围内的值。</span><span class="sxs-lookup"><span data-stu-id="2fdae-145">Although this method can be used for Unicode values, it is typically used for values in the ASCII range.</span></span>  
  
 <span data-ttu-id="2fdae-146">默认实现<xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A>方法将返回的值`headerValue`中`encodedHeaderValue`如果`headerValue`是`null`或为空字符串。</span><span class="sxs-lookup"><span data-stu-id="2fdae-146">The default implementation of the <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method returns the value of `headerValue` in `encodedHeaderValue` if `headerValue` is `null` or is an empty string.</span></span> <span data-ttu-id="2fdae-147">同样的默认实现返回的值`headerName`中`encodedHeaderName`如果`headerName`是`null`或为空字符串。</span><span class="sxs-lookup"><span data-stu-id="2fdae-147">Similarly, the default implementation returns the value of `headerName` in `encodedHeaderName` if `headerName` is `null` or is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlAttributeEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2fdae-148">要编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-148">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2fdae-149">要将已编码值写入到的文本编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-149">The text writer to write the encoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fdae-150">将传入值编码为可插入 HTML 特性（由单引号或双引号分隔）的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-150">Encodes an incoming value into a string that can be inserted into an HTML attribute that is delimited by using single or double quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fdae-151"><xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>方法通过使用标准的 HTML 实体对字符进行编码。</span><span class="sxs-lookup"><span data-stu-id="2fdae-151">The <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> method encodes characters by using the standard HTML entities.</span></span> <span data-ttu-id="2fdae-152">例如， `<` （左的尖括号） 编码为`&lt;`并`\`（反斜杠） 编码为`&#92;`。</span><span class="sxs-lookup"><span data-stu-id="2fdae-152">For example, the `<` (left angle bracket) is encoded as `&lt;` and the `\` (backslash) is encoded as `&#92;`.</span></span>  
  
 <span data-ttu-id="2fdae-153">则可以安全地使用<xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>单引号和双引号中的属性中。</span><span class="sxs-lookup"><span data-stu-id="2fdae-153">It is safe to use <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> within single-quoted and double-quoted attributes.</span></span> <span data-ttu-id="2fdae-154">值必须用引号引起来。</span><span class="sxs-lookup"><span data-stu-id="2fdae-154">The values must be quoted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fdae-155">
            <paramref name="output" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-155">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlDecode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2fdae-156">要解码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-156">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2fdae-157">要将已解码值写入到的文本编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-157">The text writer to write the decoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fdae-158">解码 HTML 编码的字符串中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-158">Decodes a value from an HTML-encoded string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fdae-159">下表列出了 ASP.NET 解码逻辑可以解码的字符序列。</span><span class="sxs-lookup"><span data-stu-id="2fdae-159">The following table lists the character sequences that the ASP.NET decoding logic can decode.</span></span>  
  
|<span data-ttu-id="2fdae-160">字符序列</span><span class="sxs-lookup"><span data-stu-id="2fdae-160">Character sequence</span></span>|<span data-ttu-id="2fdae-161">规则</span><span class="sxs-lookup"><span data-stu-id="2fdae-161">Rule</span></span>|  
|------------------------|----------|  
|<span data-ttu-id="2fdae-162">`&#NNN;` （的 ASCII 字符十进制代码）。</span><span class="sxs-lookup"><span data-stu-id="2fdae-162">`&#NNN;` (decimal codes for ASCII characters).</span></span>|<span data-ttu-id="2fdae-163">解码为指定的 ASCII 字符。</span><span class="sxs-lookup"><span data-stu-id="2fdae-163">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="2fdae-164">字符序列之后的 # 字符开始的第一个数字和分号处完成。</span><span class="sxs-lookup"><span data-stu-id="2fdae-164">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="2fdae-165">`&#xZZ;` （ASCII 字符的十六进制代码）。</span><span class="sxs-lookup"><span data-stu-id="2fdae-165">`&#xZZ;` (hexadecimal codes for ASCII characters).</span></span>|<span data-ttu-id="2fdae-166">解码为指定的 ASCII 字符。</span><span class="sxs-lookup"><span data-stu-id="2fdae-166">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="2fdae-167">该编码的格式而不十进制值使用十六进制字符来指定的字符。</span><span class="sxs-lookup"><span data-stu-id="2fdae-167">The encoded form specifies the character by using hexadecimal characters instead of a decimal value.</span></span> <span data-ttu-id="2fdae-168">字符序列之后的 # 字符开始的第一个数字和分号处完成。</span><span class="sxs-lookup"><span data-stu-id="2fdae-168">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="2fdae-169">命名的 HTML 实体。</span><span class="sxs-lookup"><span data-stu-id="2fdae-169">Named HTML entities.</span></span>|<span data-ttu-id="2fdae-170">解码为等效的 ASCII 字符。</span><span class="sxs-lookup"><span data-stu-id="2fdae-170">Decoded as the equivalent ASCII character.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fdae-171">
            <paramref name="output" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-171">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2fdae-172">要编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-172">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="2fdae-173">要将已编码值写入到的文本编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-173">The text writer to write the encoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fdae-174">将字符串编码为 HTML 编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-174">Encodes a string into an HTML-encoded string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fdae-175">下表列出了 ASP.NET 的编码逻辑可以解码的字符序列。</span><span class="sxs-lookup"><span data-stu-id="2fdae-175">The following table lists the character sequences that the ASP.NET encoding logic can decode.</span></span>  
  
|<span data-ttu-id="2fdae-176">字符</span><span class="sxs-lookup"><span data-stu-id="2fdae-176">Character</span></span>|<span data-ttu-id="2fdae-177">编码为</span><span class="sxs-lookup"><span data-stu-id="2fdae-177">Encoded as</span></span>|  
|---------------|----------------|  
|<span data-ttu-id="2fdae-178">`<` （左的尖括号）</span><span class="sxs-lookup"><span data-stu-id="2fdae-178">`<` (left angle bracket)</span></span>|`&lt;`|  
|<span data-ttu-id="2fdae-179">`>` （右尖括号）</span><span class="sxs-lookup"><span data-stu-id="2fdae-179">`>` (right angle bracket)</span></span>|`&gt;`|  
|<span data-ttu-id="2fdae-180">`"` （双引号）</span><span class="sxs-lookup"><span data-stu-id="2fdae-180">`"` (double quotation marks)</span></span>|`&quot;`|  
|<span data-ttu-id="2fdae-181">`&` （与号）</span><span class="sxs-lookup"><span data-stu-id="2fdae-181">`&` (ampersand)</span></span>|`&amp;`|  
|<span data-ttu-id="2fdae-182">`\` （反斜杠）</span><span class="sxs-lookup"><span data-stu-id="2fdae-182">`\` (backslash)</span></span>|`&#92;`|  
|<span data-ttu-id="2fdae-183">从 160 到 255 之间的 ASCII 字符</span><span class="sxs-lookup"><span data-stu-id="2fdae-183">ASCII characters from 160 to 255</span></span>|<span data-ttu-id="2fdae-184">`&#NNN;`其中`NNN`是三位十进制字符代码</span><span class="sxs-lookup"><span data-stu-id="2fdae-184">`&#NNN;`, where `NNN` is the three-digit decimal character code</span></span>|  
  
 <span data-ttu-id="2fdae-185">如果重写<xref:System.Web.Util.HttpEncoder.HtmlEncode%2A>方法，必须生成的安全在 HTML 特性中带双引号或单引号的输出。</span><span class="sxs-lookup"><span data-stu-id="2fdae-185">If you override the <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> method, you must produce output that is also safe within double-quoted or single-quoted HTML attributes.</span></span> <span data-ttu-id="2fdae-186">这适合于在分析由 Razor 引擎，其中标记和代码可以结合使用，如\<标记 attr ="@value">。</span><span class="sxs-lookup"><span data-stu-id="2fdae-186">This accommodates parsing by the Razor engine, where markup and code can be combined, such as \<tag attr="@value">.</span></span> <span data-ttu-id="2fdae-187">此外，@ 运算符不是上下文感知当 Razor 引擎进行处理，因此它将调用<xref:System.Web.Util.HttpEncoder.HtmlEncode%2A>而非<xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>。</span><span class="sxs-lookup"><span data-stu-id="2fdae-187">In addition, the @ operator is not context-aware when processed by the Razor engine, therefore it calls <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> rather than <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fdae-188">
            <paramref name="output" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-188">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string JavaScriptStringEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string JavaScriptStringEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function JavaScriptStringEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ JavaScriptStringEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member JavaScriptStringEncode : string -&gt; string&#xA;override this.JavaScriptStringEncode : string -&gt; string" Usage="httpEncoder.JavaScriptStringEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2fdae-189">要编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-189">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fdae-190">对字符串进行编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-190">Encodes a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fdae-191">已编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-191">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fdae-192">URL 编码可确保所有浏览器正确地传输 URL 字符串中的文本。</span><span class="sxs-lookup"><span data-stu-id="2fdae-192">URL encoding makes sure that all browsers correctly transmit text in URL strings.</span></span> <span data-ttu-id="2fdae-193">可能会截断或某些浏览器已损坏等问号 （？）、 and 符 (&)、 斜杠 （/） 和空格字符。</span><span class="sxs-lookup"><span data-stu-id="2fdae-193">Characters such as a question mark (?), ampersand (&), slash (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="2fdae-194">因此，必须对这些字符进行编码。</span><span class="sxs-lookup"><span data-stu-id="2fdae-194">Therefore, these characters must be encoded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member UrlEncode : byte[] * int * int -&gt; byte[]&#xA;override this.UrlEncode : byte[] * int * int -&gt; byte[]" Usage="httpEncoder.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="2fdae-195">要编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-195">An array of bytes to encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="2fdae-196">
            <c>bytes</c> 数组中开始编码的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-196">The position in the <c>bytes</c> array at which to begin encoding.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="2fdae-197">
            <c>bytes</c> 数组中要编码的项数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-197">The number of items in the <c>bytes</c> array to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fdae-198">将 URL 中不允许使用的字符数组编码为等效十六进制字符实体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-198">Encodes an array of characters that are not allowed in a URL into a hexadecimal character-entity equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fdae-199">已编码字符的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-199">An array of encoded characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fdae-200"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A>方法中的多个 URL 编码方法由调用<xref:System.Web.HttpUtility>类。</span><span class="sxs-lookup"><span data-stu-id="2fdae-200">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method is called by several URL encoding methods in the <xref:System.Web.HttpUtility> class.</span></span>  
  
 <span data-ttu-id="2fdae-201"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A>方法进行 URL 编码并不处于的一套 ASCII 字符的任何字符都被认为是安全的 URL。</span><span class="sxs-lookup"><span data-stu-id="2fdae-201">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method URL-encodes any character that is not in the set of ASCII characters that is considered to be URL-safe.</span></span> <span data-ttu-id="2fdae-202">空格编码为 ASCII"`+"`字符。</span><span class="sxs-lookup"><span data-stu-id="2fdae-202">Spaces are encoded as the ASCII "`+"` character.</span></span> <span data-ttu-id="2fdae-203">ASCII URL 安全字符包括 ASCI 字符 (A 到 Z 和一个到 z)，数字 (0 到 9) 和一些标点符号。</span><span class="sxs-lookup"><span data-stu-id="2fdae-203">URL-safe ASCII characters include the ASCI characters (A to Z and a to z), numerals (0 to 9), and some punctuation marks.</span></span> <span data-ttu-id="2fdae-204">下表列出了被视为 URL 安全 ASCII 字符的标点符号。</span><span class="sxs-lookup"><span data-stu-id="2fdae-204">The following table lists the punctuation marks that are considered URL-safe ASCII characters.</span></span>  
  
|<span data-ttu-id="2fdae-205">字符</span><span class="sxs-lookup"><span data-stu-id="2fdae-205">Character</span></span>|<span data-ttu-id="2fdae-206">描述</span><span class="sxs-lookup"><span data-stu-id="2fdae-206">Description</span></span>|  
|---------------|-----------------|  
|-|<span data-ttu-id="2fdae-207">连字符</span><span class="sxs-lookup"><span data-stu-id="2fdae-207">Hyphen</span></span>|  
|<span data-ttu-id="2fdae-208">_</span><span class="sxs-lookup"><span data-stu-id="2fdae-208">_</span></span>|<span data-ttu-id="2fdae-209">下划线</span><span class="sxs-lookup"><span data-stu-id="2fdae-209">Underscore</span></span>|  
|<span data-ttu-id="2fdae-210">.</span><span class="sxs-lookup"><span data-stu-id="2fdae-210">.</span></span>|<span data-ttu-id="2fdae-211">段 （点）</span><span class="sxs-lookup"><span data-stu-id="2fdae-211">Period (dot)</span></span>|  
|<span data-ttu-id="2fdae-212">!</span><span class="sxs-lookup"><span data-stu-id="2fdae-212">!</span></span>|<span data-ttu-id="2fdae-213">感叹号</span><span class="sxs-lookup"><span data-stu-id="2fdae-213">Exclamation mark</span></span>|  
|*|<span data-ttu-id="2fdae-214">星号 （\*）</span><span class="sxs-lookup"><span data-stu-id="2fdae-214">Asterisk (star)</span></span>|  
|<span data-ttu-id="2fdae-215">(</span><span class="sxs-lookup"><span data-stu-id="2fdae-215">(</span></span>|<span data-ttu-id="2fdae-216">左括号</span><span class="sxs-lookup"><span data-stu-id="2fdae-216">Opening parenthesis</span></span>|  
|<span data-ttu-id="2fdae-217">)</span><span class="sxs-lookup"><span data-stu-id="2fdae-217">)</span></span>|<span data-ttu-id="2fdae-218">右括号</span><span class="sxs-lookup"><span data-stu-id="2fdae-218">Closing parenthesis</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2fdae-219">
            <paramref name="offset" /> 小于零或大于 <paramref name="bytes" /> 数组的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-219">
              <paramref name="offset" /> is less than zero or greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
          <span data-ttu-id="2fdae-220">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-220">-or-</span>
          </span>
          <span data-ttu-id="2fdae-221">
            <paramref name="count" /> 小于零或 <paramref name="count" /> 加上 <paramref name="offset" /> 大于 <paramref name="bytes" /> 数组的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-221">
              <paramref name="count" /> is less than zero or <paramref name="count" /> plus <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2fdae-222">
            <paramref name="bytes" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-222">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member UrlPathEncode : string -&gt; string&#xA;override this.UrlPathEncode : string -&gt; string" Usage="httpEncoder.UrlPathEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="2fdae-223">要编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-223">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2fdae-224">对 URL 的子节进行编码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-224">Encodes a subsection of a URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2fdae-225">URL 编码的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2fdae-225">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fdae-226"><xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> 方法由 <xref:System.Web.HttpUtility.UrlPathEncode%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="2fdae-226">The <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method is called by the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method.</span></span> <span data-ttu-id="2fdae-227"><xref:System.Web.HttpUtility.UrlPathEncode%2A>方法执行以下步骤：</span><span class="sxs-lookup"><span data-stu-id="2fdae-227">The <xref:System.Web.HttpUtility.UrlPathEncode%2A> method performs the following steps:</span></span>  
  
-   <span data-ttu-id="2fdae-228">适用的编码逻辑<xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A>到的 URL （这不包括查询字符串） 的路径部分的方法。</span><span class="sxs-lookup"><span data-stu-id="2fdae-228">Applies the encoding logic of the <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method to only the path part of the URL (which excludes the query string).</span></span> <span data-ttu-id="2fdae-229">该方法假定 URL 已编码为 utf-8 字符串。</span><span class="sxs-lookup"><span data-stu-id="2fdae-229">The method assumes that the URL is encoded as a UTF-8 string.</span></span>  
  
-   <span data-ttu-id="2fdae-230">将非空格编码，以便在生成编码的字符串中使用的前 128 个 ASCII 字符的一个子集。</span><span class="sxs-lookup"><span data-stu-id="2fdae-230">Encodes non-spaces so that only a subset of the first 128 ASCII characters is used in the resulting encoded string.</span></span> <span data-ttu-id="2fdae-231">在 Unicode 值 128 和更高版本，或 32 且小于，任何字符进行 URL 编码。</span><span class="sxs-lookup"><span data-stu-id="2fdae-231">Any characters at Unicode value 128 and greater, or 32 and less, are URL-encoded.</span></span>  
  
-   <span data-ttu-id="2fdae-232">将空格编码为 %20。</span><span class="sxs-lookup"><span data-stu-id="2fdae-232">Encodes spaces as %20.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>