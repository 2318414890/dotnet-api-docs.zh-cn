<Type Name="EntityModelSchemaGenerator" FullName="System.Data.Entity.Design.EntityModelSchemaGenerator">
  <TypeSignature Language="C#" Value="public sealed class EntityModelSchemaGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityModelSchemaGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Design.EntityModelSchemaGenerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityModelSchemaGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityModelSchemaGenerator sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="243eb-101">在 S 空间中的 EntityContainer 与 C 空间中的 EntityContainer 之间创建默认的 CCMapping。</span><span class="sxs-lookup"><span data-stu-id="243eb-101">The class creates a default CCMapping between an EntityContainer in S space and an EntityContainer in C space.</span></span> <span data-ttu-id="243eb-102">映射将基于已声明的程度的类型生成。</span><span class="sxs-lookup"><span data-stu-id="243eb-102">The Mapping will be created based on the declared types of extents.</span></span> <span data-ttu-id="243eb-103">因此继承不工作。</span><span class="sxs-lookup"><span data-stu-id="243eb-103">So Inheritance does not work.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="243eb-104">这里不会更新任何内容；请不要在这里添加材料。</span><span class="sxs-lookup"><span data-stu-id="243eb-104">No content here will be updated; please do not add material here.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="243eb-105">初始化 <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="243eb-105">Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityModelSchemaGenerator (System.Data.Metadata.Edm.EntityContainer storeEntityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.EntityContainer storeEntityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeEntityContainer As EntityContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityModelSchemaGenerator(System::Data::Metadata::Edm::EntityContainer ^ storeEntityContainer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeEntityContainer" Type="System.Data.Metadata.Edm.EntityContainer" />
      </Parameters>
      <Docs>
        <param name="storeEntityContainer"><span data-ttu-id="243eb-106">从中创建概念和映射元数据的存储模型 EntityContainer。</span><span class="sxs-lookup"><span data-stu-id="243eb-106">The storage model EntityContainer from which conceptual and mapping metadata is created.</span></span></param>
        <summary><span data-ttu-id="243eb-107">初始化 <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="243eb-107">Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityModelSchemaGenerator (System.Data.Metadata.Edm.EntityContainer storeEntityContainer, string namespaceName, string modelEntityContainerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.EntityContainer storeEntityContainer, string namespaceName, string modelEntityContainerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeEntityContainer As EntityContainer, namespaceName As String, modelEntityContainerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityModelSchemaGenerator(System::Data::Metadata::Edm::EntityContainer ^ storeEntityContainer, System::String ^ namespaceName, System::String ^ modelEntityContainerName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeEntityContainer" Type="System.Data.Metadata.Edm.EntityContainer" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="modelEntityContainerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeEntityContainer"><span data-ttu-id="243eb-108">从中创建概念和映射元数据的存储模型 EntityContainer。</span><span class="sxs-lookup"><span data-stu-id="243eb-108">The storage model EntityContainer from which conceptual and mapping metadata is created.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="243eb-109">概念模型命名空间的名称。</span><span class="sxs-lookup"><span data-stu-id="243eb-109">The name for the conceptual model namespace.</span></span> <span data-ttu-id="243eb-110">如果此值为 null，storeEntityContainer 将用作命名空间名称。</span><span class="sxs-lookup"><span data-stu-id="243eb-110">If this value is null, the storeEntityContainer name is used for the namespace name.</span></span></param>
        <param name="modelEntityContainerName"><span data-ttu-id="243eb-111">在概念模型中声明的 EntityContainer 名称。</span><span class="sxs-lookup"><span data-stu-id="243eb-111">The EntityContainer name declared in the conceptual model.</span></span></param>
        <summary><span data-ttu-id="243eb-112">初始化 <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="243eb-112">Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityModelSchemaGenerator (System.Data.Metadata.Edm.StoreItemCollection storeItemCollection, string namespaceName, string modelEntityContainerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection, string namespaceName, string modelEntityContainerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.StoreItemCollection,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityModelSchemaGenerator(System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection, System::String ^ namespaceName, System::String ^ modelEntityContainerName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="modelEntityContainerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeItemCollection"><span data-ttu-id="243eb-113">包含 EntityContainer 和其他生成模型元数据的项目的 StoreItemCollection。</span><span class="sxs-lookup"><span data-stu-id="243eb-113">The StoreItemCollection that contains an EntityContainer and other items to create the Model Metadata from.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="243eb-114">要提供命名空间的名称。</span><span class="sxs-lookup"><span data-stu-id="243eb-114">The name to give the namespace.</span></span> <span data-ttu-id="243eb-115">如果为 null，则 storeEntityContainer 将不被使用。</span><span class="sxs-lookup"><span data-stu-id="243eb-115">If null, the name of the storeEntityContainer will be used.</span></span></param>
        <param name="modelEntityContainerName"><span data-ttu-id="243eb-116">给 Model EntityContainer 的名称。</span><span class="sxs-lookup"><span data-stu-id="243eb-116">The name to give the Model EntityContainer.</span></span> <span data-ttu-id="243eb-117">如果为 null，则将使用 storeEntityContainer 中所引用类型的命名空间的修改版本。</span><span class="sxs-lookup"><span data-stu-id="243eb-117">If null, a modified version of the namespace of the of a type referenced in storeEntityContainer will be used.</span></span></param>
        <summary><span data-ttu-id="243eb-118">构造 EntityModelGenerator</span><span class="sxs-lookup"><span data-stu-id="243eb-118">Constructs an EntityModelGenerator</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdmItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmItemCollection EdmItemCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EdmItemCollection EdmItemCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityModelSchemaGenerator.EdmItemCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EdmItemCollection As EdmItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EdmItemCollection ^ EdmItemCollection { System::Data::Metadata::Edm::EdmItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="243eb-119">获取由 GenerateMetadata 方法创建的 EdmItemCollection 。</span><span class="sxs-lookup"><span data-stu-id="243eb-119">Gets the EdmItemCollection that was created by the GenerateMetadata method.</span></span></summary>
        <value><span data-ttu-id="243eb-120">包含概念性架构定义语言 (CSDL) 的 <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="243eb-120">An <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> object that contains the conceptual schema definition language (CSDL).</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer EntityContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EntityContainer EntityContainer" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityModelSchemaGenerator.EntityContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityContainer As EntityContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EntityContainer ^ EntityContainer { System::Data::Metadata::Edm::EntityContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="243eb-121">获取由 GenerateMetadata 方法创建的概念模型 EntityContainer。</span><span class="sxs-lookup"><span data-stu-id="243eb-121">Gets the conceptual model EntityContainer that was created by the GenerateMetadata method.</span></span></summary>
        <value><span data-ttu-id="243eb-122">包含概念模型 EntityContainer 的 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="243eb-122">An <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object that contains the conceptual model EntityContainer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateForeignKeyProperties">
      <MemberSignature Language="C#" Value="public bool GenerateForeignKeyProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateForeignKeyProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateForeignKeyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateForeignKeyProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateForeignKeyProperties { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="243eb-123">获取或设置用于在概念模型中生成外键属性的标志。</span><span class="sxs-lookup"><span data-stu-id="243eb-123">Gets or sets the flag for generating foreign key properties in a conceptual model.</span></span></summary>
        <value><span data-ttu-id="243eb-124">如果此属性的值设置为 <see langword="true" />，则在概念模型中生成外键属性；否则不会在概念模型中生成外键属性。</span><span class="sxs-lookup"><span data-stu-id="243eb-124">If the value of this property is set to <see langword="true" /> then foreign key properties are generated in the conceptual model; otherwise foreign key properties are not generated in the conceptual model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="243eb-125">生成概念模型元数据信息，返回任何架构错误。</span><span class="sxs-lookup"><span data-stu-id="243eb-125">Generates the conceptual model metadata information and returns any schema errors.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateMetadata () As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateMetadata();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="243eb-126">生成概念模型元数据信息，返回任何架构错误。</span><span class="sxs-lookup"><span data-stu-id="243eb-126">Generates the conceptual model metadata information and returns any schema errors.</span></span></summary>
        <returns><span data-ttu-id="243eb-127">架构错误对象的集合。</span><span class="sxs-lookup"><span data-stu-id="243eb-127">A collection of schema error objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateMetadata (Version targetEntityFrameworkVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateMetadata(class System.Version targetEntityFrameworkVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata(System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateMetadata (targetEntityFrameworkVersion As Version) As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateMetadata(Version ^ targetEntityFrameworkVersion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetEntityFrameworkVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="targetEntityFrameworkVersion"><span data-ttu-id="243eb-128">与 Entity Framework 的目标版本相对应的 EntityFrameworkVersions 的属性。</span><span class="sxs-lookup"><span data-stu-id="243eb-128">The property of EntityFrameworkVersions that corresponds to the targeted version of the Entity Framework.</span></span></param>
        <summary><span data-ttu-id="243eb-129">生成概念模型元数据信息，返回任何架构错误。</span><span class="sxs-lookup"><span data-stu-id="243eb-129">Generates the conceptual model metadata information and returns any schema errors.</span></span></summary>
        <returns><span data-ttu-id="243eb-130">架构错误对象的集合。</span><span class="sxs-lookup"><span data-stu-id="243eb-130">A collection of schema error objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PluralizationService">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Design.PluralizationServices.PluralizationService PluralizationService { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Design.PluralizationServices.PluralizationService PluralizationService" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService" />
      <MemberSignature Language="VB.NET" Value="Public Property PluralizationService As PluralizationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Entity::Design::PluralizationServices::PluralizationService ^ PluralizationService { System::Data::Entity::Design::PluralizationServices::PluralizationService ^ get(); void set(System::Data::Entity::Design::PluralizationServices::PluralizationService ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Design.PluralizationServices.PluralizationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="243eb-131">获取或设置 PluralizationService 值，该值指示生成模型时使用的服务。</span><span class="sxs-lookup"><span data-stu-id="243eb-131">Gets or sets the PluralizationService value that indicates the service used when generating a model.</span></span></summary>
        <value><span data-ttu-id="243eb-132">指示生成模型时使用的服务的 <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> 值。</span><span class="sxs-lookup"><span data-stu-id="243eb-132">The <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> value that indicates the service used when generating a model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteModelSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="243eb-133">将生成的概念性架构定义语言 (CSDL) 写入指定的文件。</span><span class="sxs-lookup"><span data-stu-id="243eb-133">Writes the generated conceptual schema definition language (CSDL) to the specified file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteModelSchema">
      <MemberSignature Language="C#" Value="public void WriteModelSchema (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteModelSchema(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteModelSchema (outputFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteModelSchema(System::String ^ outputFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="243eb-134">输出文件的名称。</span><span class="sxs-lookup"><span data-stu-id="243eb-134">The name of the output file.</span></span></param>
        <summary><span data-ttu-id="243eb-135">将生成的概念性架构定义语言 (CSDL) 写入指定的文件。</span><span class="sxs-lookup"><span data-stu-id="243eb-135">Writes the generated conceptual schema definition language (CSDL) to the specified file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteModelSchema">
      <MemberSignature Language="C#" Value="public void WriteModelSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteModelSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteModelSchema (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteModelSchema(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="243eb-136">将 CSDL 文件写入到其中的 XmlWriter。</span><span class="sxs-lookup"><span data-stu-id="243eb-136">The XmlWriter to which the CSDL is written.</span></span></param>
        <summary><span data-ttu-id="243eb-137">将生成的概念性架构定义语言 (CSDL) 写入 XmlWriter 对象。</span><span class="sxs-lookup"><span data-stu-id="243eb-137">Writes the generated conceptual schema definition language (CSDL) to an XmlWriter object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStorageMapping">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="243eb-138">将生成的映射规范语言 (MSL) 写入指定的文件。</span><span class="sxs-lookup"><span data-stu-id="243eb-138">Writes the generated mapping specification language (MSL) to the specified file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStorageMapping">
      <MemberSignature Language="C#" Value="public void WriteStorageMapping (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStorageMapping(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStorageMapping (outputFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStorageMapping(System::String ^ outputFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileName"><span data-ttu-id="243eb-139">输出文件的名称。</span><span class="sxs-lookup"><span data-stu-id="243eb-139">The name of the output file.</span></span></param>
        <summary><span data-ttu-id="243eb-140">将生成的映射规范语言 (MSL) 写入指定的文件。</span><span class="sxs-lookup"><span data-stu-id="243eb-140">Writes the generated mapping specification language (MSL) to the specified file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStorageMapping">
      <MemberSignature Language="C#" Value="public void WriteStorageMapping (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStorageMapping(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStorageMapping (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStorageMapping(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="243eb-141">将 MSL 文件写入到其中的 XmlWriter。</span><span class="sxs-lookup"><span data-stu-id="243eb-141">The XmlWriter to which the MSL is written.</span></span></param>
        <summary><span data-ttu-id="243eb-142">将生成的映射规范语言 (MSL) 写入 XmlWriter 对象。</span><span class="sxs-lookup"><span data-stu-id="243eb-142">Writes the generated mapping specification language (MSL) to an XmlWriter object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>