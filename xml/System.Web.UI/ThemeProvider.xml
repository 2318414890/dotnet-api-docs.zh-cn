<Type Name="ThemeProvider" FullName="System.Web.UI.ThemeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36f99c3e14a5a6a5cb680fb9022c4cea44774d42" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36375772" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ThemeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThemeProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ThemeProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThemeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThemeProvider sealed" />
  <TypeSignature Language="F#" Value="type ThemeProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在设计器环境中为控件提供封装主题和样式表信息的类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不使用页开发人员和控件作者<xref:System.Web.UI.ThemeProvider>类。 使用 ASP.NET 开发人员工具和设计器生成器<xref:System.Web.UI.ThemeProvider>结合类<xref:System.Web.UI.SkinBuilder>类和<xref:System.Web.UI.IThemeResolutionService>在设计时将主题和其各自的控件外观应用于控件的接口。  
  
 <xref:System.Web.UI.ThemeProvider>类封装需适用于在设计器中控件的子控件的主题或样式表主题和其控件外观的信息。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IThemeResolutionService" />
    <altmember cref="T:System.Web.UI.ControlBuilder" />
    <altmember cref="T:System.Web.UI.SkinBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThemeProvider (System.ComponentModel.Design.IDesignerHost host, string name, string themeDefinition, string[] cssFiles, string themePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.IDesignerHost host, string name, string themeDefinition, string[] cssFiles, string themePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ThemeProvider.#ctor(System.ComponentModel.Design.IDesignerHost,System.String,System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As IDesignerHost, name As String, themeDefinition As String, cssFiles As String(), themePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThemeProvider(System::ComponentModel::Design::IDesignerHost ^ host, System::String ^ name, System::String ^ themeDefinition, cli::array &lt;System::String ^&gt; ^ cssFiles, System::String ^ themePath);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ThemeProvider : System.ComponentModel.Design.IDesignerHost * string * string * string[] * string -&gt; System.Web.UI.ThemeProvider" Usage="new System.Web.UI.ThemeProvider (host, name, themeDefinition, cssFiles, themePath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="themeDefinition" Type="System.String" />
        <Parameter Name="cssFiles" Type="System.String[]" />
        <Parameter Name="themePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">表示当前设计器环境的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</param>
        <param name="name">
          <see cref="T:System.Web.UI.ThemeProvider" /> 表示的主题或样式表主题的名称。 此参数可以为 <see langword="null" />。</param>
        <param name="themeDefinition">传递给 <see cref="M:System.Web.UI.DesignTimeTemplateParser.ParseTheme(System.ComponentModel.Design.IDesignerHost,System.String,System.String)" /> 方法的主题信息。 这些是关于该主题的原始的、连接的内容。</param>
        <param name="cssFiles">
          <see cref="T:System.Web.UI.ThemeProvider" /> 表示的主题所包含的级联样式表 (CSS) 文件的名称。</param>
        <param name="themePath">包含指定主题的主题和控件外观信息的文件的绝对路径。</param>
        <summary>初始化 <see cref="T:System.Web.UI.ThemeProvider" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `themeDefinition`参数传递给<xref:System.Web.UI.ThemeProvider.%23ctor%28System.ComponentModel.Design.IDesignerHost%2CSystem.String%2CSystem.String%2CSystem.String%5B%5D%2CSystem.String%29>构造函数表示与主题关联的所有控件外观的串联，但不是直接通过公开<xref:System.Web.UI.ThemeProvider>类，如此特定的参数传递给<xref:System.Web.UI.DesignTimeTemplateParser>若要检索<xref:System.Web.UI.ControlBuilder>和不使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentHashCode">
      <MemberSignature Language="C#" Value="public int ContentHashCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentHashCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ThemeProvider.ContentHashCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentHashCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentHashCode { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentHashCode : int" Usage="System.Web.UI.ThemeProvider.ContentHashCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取传递给构造函数的主题定义的哈希代码。</summary>
        <value>作为主题定义传递给类构造函数的字符串的哈希代码。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssFiles">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection CssFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection CssFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ThemeProvider.CssFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CssFiles As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ CssFiles { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CssFiles : System.Collections.ICollection" Usage="System.Web.UI.ThemeProvider.CssFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果主题是样式表主题，则获取一组字符串，表示与当前主题关联的所有级联样式表 (CSS) 文件的名称。</summary>
        <value>标识与主题或样式表主题关联的 CSS 文件的字符串的 <see cref="T:System.Collections.ICollection" />。 此属性可能会返回 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设计器宿主使用此属性时设计图面上呈现 HTML 将样式表链接添加到 CSS 文件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerHost">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.IDesignerHost DesignerHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.IDesignerHost DesignerHost" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ThemeProvider.DesignerHost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerHost As IDesignerHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::IDesignerHost ^ DesignerHost { System::ComponentModel::Design::IDesignerHost ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerHost : System.ComponentModel.Design.IDesignerHost" Usage="System.Web.UI.ThemeProvider.DesignerHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesignerHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示当前设计器环境的 <see cref="T:System.ComponentModel.Design.IDesignerHost" /> 对象。</summary>
        <value>表示当前设计器环境的 <see cref="T:System.ComponentModel.Design.IDesignerHost" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetSkinBuilder">
      <MemberSignature Language="C#" Value="public System.Web.UI.SkinBuilder GetSkinBuilder (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.SkinBuilder GetSkinBuilder(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ThemeProvider.GetSkinBuilder(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::SkinBuilder ^ GetSkinBuilder(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetSkinBuilder : System.Web.UI.Control -&gt; System.Web.UI.SkinBuilder" Usage="themeProvider.GetSkinBuilder control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.SkinBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">要对其应用主题和控件外观的控件。</param>
        <summary>检索用于在设计器环境中应用主题和控件外观的指定控件的 <see cref="T:System.Web.UI.SkinBuilder" /> 实例。</summary>
        <returns>如果指定的控件类型定义了 <see cref="T:System.Web.UI.SkinBuilder" /> 实例，则为该实例；否则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ThemeProvider.GetSkinBuilder%2A>方法由调用<xref:System.Web.UI.ControlBuilder>基类，来应用一个主题和任何控制到控件的外观，当在设计时生成。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.BuildObject" />
      </Docs>
    </Member>
    <Member MemberName="GetSkinControlBuildersForControlType">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary GetSkinControlBuildersForControlType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary GetSkinControlBuildersForControlType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ThemeProvider.GetSkinControlBuildersForControlType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ GetSkinControlBuildersForControlType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSkinControlBuildersForControlType : Type -&gt; System.Collections.IDictionary" Usage="themeProvider.GetSkinControlBuildersForControlType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要为其检索所有关联 <see cref="T:System.Web.UI.ControlBuilder" /> 对象的 <see cref="T:System.Type" />。</param>
        <summary>获取一个 <see cref="T:System.Collections.IDictionary" /> 对象，该对象包含指定的 <see cref="T:System.Type" /> 的一组 <see cref="T:System.Web.UI.SkinBuilder" /> 对象。</summary>
        <returns>
          <see cref="T:System.Collections.IDictionary" />，包含与传递给该方法的 <see cref="T:System.Type" /> 关联的一个或多个 <see cref="T:System.Web.UI.ControlBuilder" /> 对象的列表。 此列表由 <see cref="T:System.Collections.DictionaryEntry" /> 对象填充，其中 <see cref="P:System.Web.UI.Control.SkinID" /> 为 <see cref="P:System.Collections.DictionaryEntry.Key" />，而其关联的 <see cref="T:System.Web.UI.SkinBuilder" /> 为 <see cref="P:System.Collections.DictionaryEntry.Value" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkinsForControl">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetSkinsForControl (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetSkinsForControl(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ThemeProvider.GetSkinsForControl(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetSkinsForControl(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSkinsForControl : Type -&gt; System.Collections.ICollection" Usage="themeProvider.GetSkinsForControl type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要为其检索所有关联外观名称的 <see cref="T:System.Type" />。</param>
        <summary>获取与指定的 <see cref="T:System.Type" /> 关联的外观标识符的 <see cref="T:System.Collections.ICollection" />。</summary>
        <returns>如果指定的 <see cref="T:System.Type" /> 定义了控件外观，则为外观标识符的 <see cref="T:System.Collections.ICollection" />。 如果类型没有任何关联控件外观，则返回空的 <see cref="T:System.Collections.ICollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ThemeProvider.GetSkinsForControl%2A>方法由设计器用来填充控件外观名称的列表。 若要将绑定到用户界面 (UI) 元素，或以显示设计给定的控件类型的属性，则设计器使用列表。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThemeName">
      <MemberSignature Language="C#" Value="public string ThemeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThemeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ThemeProvider.ThemeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThemeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThemeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThemeName : string" Usage="System.Web.UI.ThemeProvider.ThemeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.ThemeProvider" /> 实例所表示的主题或样式表主题的名称。</summary>
        <value>
          <see cref="T:System.Web.UI.ThemeProvider" /> 实例所表示的主题或样式表主题的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ThemeProvider.ThemeName%2A>属性由设置`name`属性<xref:System.Web.UI.ThemeProvider.%23ctor%28System.ComponentModel.Design.IDesignerHost%2CSystem.String%2CSystem.String%2CSystem.String%5B%5D%2CSystem.String%29>构造函数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>