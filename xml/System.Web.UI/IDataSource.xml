<Type Name="IDataSource" FullName="System.Web.UI.IDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9bc745508e22af28c1bf4d51ec95afad4d0656fb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37588636" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataSource" />
  <TypeSignature Language="F#" Value="type IDataSource = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>表示数据绑定控件绑定到的抽象数据源。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 支持的控件数据绑定体系结构，使 Web 服务器控件能够以一致的方式绑定到数据。 Web 服务器控件绑定到数据的数据绑定控件，并促进绑定称为数据源控件的类称为。 数据源控件可以表示任何数据源： 关系数据库、 文件、 流、 业务对象等。 数据源控件数据绑定控件，而不考虑源或基础数据的格式一致的方式呈现数据。  
  
 您实现<xref:System.Web.UI.IDataSource>接口时您想要实现您自己的自定义 ASP.NET 数据源控件。  
  
 任何实现类都<xref:System.Web.UI.IDataSource>接口是数据源控件。 <xref:System.Web.UI.IDataSource>接口作为所有 ASP.NET 数据源的基础控件，并包含其两个方法定义的基本数据绑定体系结构概念之一：<xref:System.Web.UI.IDataSource.GetView%2A>方法和<xref:System.Web.UI.IDataSource.GetViewNames%2A>方法。 这一概念是所有数据源控件都支持对其数据的一个或多个命名的视图。 数据源视图对象是类似于<xref:System.Data.DataView>中的抽象<xref:System.Data>命名空间： 数据可绑定的自定义视图的数据的排序、 筛选和视图定义其他数据操作。 就其核心而言，数据源控件不执行任何操作只需检索数据的视图。  
  
 数据源控件可以有一个或多个关联的数据源视图对象。 某些数据源控件，包括表示关系数据库，如<xref:System.Web.UI.WebControls.SqlDataSource>和<xref:System.Web.UI.WebControls.AccessDataSource>，只支持一个视图。 其他数据源控件，其中包括分层数据源控件，例如<xref:System.Web.UI.WebControls.SiteMapDataSource>，支持多个视图。 数据源视图定义的数据源和它所支持的操作的功能。  
  
 总之，数据源控件实现<xref:System.Web.UI.IDataSource>接口，支持一个或多个命名的数据，它们表示，而且始终支持从它们所代表的数据源检索数据的视图。 数据源控件始终根据需要检索数据，例如何时`DataBind`数据绑定控件上调用。  
  
   
  
## Examples  
 下面的代码示例演示了如何类可以实现定义的方法<xref:System.Web.UI.IDataSource>接口向数据绑定控件提供数据。 在此示例中的数据源控件充当数据源上的逗号分隔值文件，和任何数据绑定控件可用于显示以逗号分隔的文件数据。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.UI.DataSourceControl>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>当数据源控件以某种影响数据绑定控件的方式发生变化时发生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IDataSource.DataSourceChanged>引发事件时数据绑定控件或基础数据的属性已更改以某种影响数据绑定控件和其数据之间的数据绑定的方式。 例如，如果文件的名称属性，如引发该事件<xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>属性，更改对基于文件的数据源控件。  
  
 有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="iDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">要检索的视图的名称。</param>
        <summary>获取与数据源控件关联的指定数据源视图。</summary>
        <returns>返回与 <see cref="T:System.Web.UI.DataSourceView" /> 关联的指定 <see cref="T:System.Web.UI.IDataSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据源控件类可以支持其基础数据的一个或多个视图。 这些视图由的实例来表示<xref:System.Web.UI.DataSourceView>类。 数据源视图定义的数据源控件，功能，并执行所有从基础数据存储区检索数据和执行操作，如排序、 插入、 删除和更新所需的工作。  
  
 数据源控件类实现<xref:System.Web.UI.IDataSource>接口实现<xref:System.Web.UI.IDataSource.GetView%2A>方法以返回强类型化查看类与关联的对象。  
  
   
  
## Examples  
 下面的代码示例演示如何实现的数据源控件类<xref:System.Web.UI.IDataSource>接口实现<xref:System.Web.UI.IDataSource.GetView%2A>方法，并返回强类型化的实例的<xref:System.Web.UI.DataSourceView>类。 因为数据源控件只支持一个视图，它将忽略名称，并返回名为使用默认的视图名称的视图。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.UI.DataSourceControl>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection" Usage="iDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取名称的集合，这些名称表示与 <see cref="T:System.Web.UI.IDataSource" /> 接口关联的视图对象的列表。</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> 包含视图的名称，这些视图与 <see cref="T:System.Web.UI.IDataSource" /> 关联。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据源控件类可以支持其基础数据的一个或多个命名的视图。 <xref:System.Web.UI.IDataSource.GetViewNames%2A>方法返回当前与数据源控件实例关联的视图名称的集合。 调用方可以循环访问的视图名称的集合并检索各个<xref:System.Web.UI.DataSourceView>对象与<xref:System.Web.UI.IDataSource.GetView%2A>方法。  
  
 数据源控件类实现<xref:System.Web.UI.IDataSource>接口实现<xref:System.Web.UI.IDataSource.GetViewNames%2A>方法返回表示所有数据源名称的集合查看当前与数据源控件类相关联的对象。  
  
   
  
## Examples  
 下面的代码示例演示如何实现的数据源控件<xref:System.Web.UI.IDataSource>接口实现<xref:System.Web.UI.IDataSource.GetViewNames%2A>方法，并返回<xref:System.Collections.ICollection>名称的集合。 因为数据源只支持一个视图，该方法将返回使用默认名称为视图的一个元素的集合。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.UI.DataSourceControl>类。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>