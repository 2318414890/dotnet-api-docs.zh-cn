<Type Name="XPathBinder" FullName="System.Web.UI.XPathBinder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7842e31f0f192a7febe2621b04f88241b3774c20" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51901001" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XPathBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XPathBinder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.XPathBinder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XPathBinder" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathBinder sealed" />
  <TypeSignature Language="F#" Value="type XPathBinder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为应用程序快速开发 (RAD) 设计器提供支持，以便分析使用 XPath 表达式的数据绑定表达式。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可使用重载<xref:System.Web.UI.XPathBinder.Eval%2A>方法的此类，以绑定到对实现的对象执行的 XPath 表达式的结果<xref:System.Xml.XPath.IXPathNavigable>接口，如<xref:System.Xml.XmlNode>。 可以使用<xref:System.Web.UI.XPathBinder.Select%2A>方法来检索对执行的 XPath 表达式的结果<xref:System.Xml.XPath.IXPathNavigable>对象作为<xref:System.Collections.IEnumerable>节点的列表。 可直接枚举或分配给此节点的列表`DataSource`属性的列表控件，如<xref:System.Web.UI.WebControls.Repeater>或<xref:System.Web.UI.WebControls.DataList>。  
  
 使用时，可以使用数据绑定语法的简化的版本<xref:System.Web.UI.XPathBinder>方法声明的方式。 而不是调用`XPathBinder.Eval`(`Container.DataItem`， `xpath`) 可以使用`XPath`(`xpath`)。 同样，而不是调用`XPathBinder.Select`(`Container.DataItem`，`xpath`)，可以使用`XPathSelect`(`xpath`) 来检索<xref:System.Collections.IEnumerable>的节点集。 使用此简化的语法中，当<xref:System.Web.UI.XPathBinder.Eval%2A>并<xref:System.Web.UI.XPathBinder.Select%2A>方法假定默认值`Container.DataItem`上下文对象。  
  
 有关数据绑定到 ASP.NET 服务器控件的详细信息，请参阅[数据绑定表达式语法](https://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.XmlDataSource>具有模板化控件<xref:System.Web.UI.WebControls.Repeater>控件来显示 XML 数据。 此示例包含两个部分：  
  
-   显示 XML 数据的 Web 窗体页面。  
  
-   包含数据的 XML 文件。  
  
 该示例的第一部分显示了一个显示通过访问 XML 数据的 Web 窗体页面<xref:System.Web.UI.WebControls.XmlDataSource>控件。 一个<xref:System.Web.UI.WebControls.Repeater>控件使用简化<xref:System.Web.UI.XPathBinder.Eval%28System.Object%2CSystem.String%29>方法语法以绑定到 XML 中的数据项的文档<xref:System.Web.UI.WebControls.XmlDataSource>表示。 它使用<xref:System.Web.UI.XPathBinder.Select%28System.Object%2CSystem.String%29>方法来检索<xref:System.Collections.IEnumerable>列表并将其分配为后期绑定<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>属性<xref:System.Web.UI.WebControls.Repeater>控件。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/CS/xmlds14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/VB/xmlds14vb.aspx#1)]  
  
 第二个示例提供了 XML 文件，Order.xml，如上文所定义的 Web 窗体页中显示的数据源使用。  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
  <orders>  
    <order>  
      <customer id="12345" />  
      <customername>  
        <firstn>John</firstn>  
        <lastn>Doe</lastn>  
      </customername>  
      <transaction id="12345" />  
      <shipaddress>  
        <address1>1234 Tenth Avenue</address1>  
        <city>Bellevue</city>  
        <state>Washington</state>  
        <zip>98001</zip>  
      </shipaddress>  
      <summary>  
        <item dept="tools">screwdriver</item>  
        <item dept="tools">hammer</item>  
        <item dept="plumbing">fixture</item>  
      </summary>  
    </order>  
 </orders>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Eval">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在运行时对 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象分析和计算 XPath 数据绑定表达式。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static object Eval (object container, string xPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Eval(object container, string xPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, xPath As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eval(System::Object ^ container, System::String ^ xPath);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string -&gt; obj" Usage="System.Web.UI.XPathBinder.Eval (container, xPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">计算表达式所根据的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象引用。 此标识符必须是以页的指定语言表示的有效对象标识符。</param>
        <param name="xPath">从<c>容器</c>到放置在绑定控件属性中的属性值的 XPath 查询。</param>
        <summary>在运行时计算 XPath 数据绑定表达式。</summary>
        <returns>一个 <see cref="T:System.Object" />，它是数据绑定表达式的计算结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用<xref:System.Web.UI.XPathBinder.Eval%2A>方法以声明方式如果你想要简化到要在浏览器上显示的文本字符串的 XML 节点的转换。 若要执行此操作，必须将放\<%# 和 %> 标记，也使用标准 ASP.NET 数据绑定，在数据绑定表达式中。  
  
 对于任何列表 ASP.NET 服务器控件，如<xref:System.Web.UI.WebControls.DataList>， <xref:System.Web.UI.WebControls.DataGrid>，或<xref:System.Web.UI.WebControls.Repeater>，则`container`参数应为`Container.DataItem`。 如果要针对页上，进行绑定`container`参数应为`Page`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.XmlDataSource>具有模板化控件<xref:System.Web.UI.WebControls.Repeater>控件来显示 XML 数据。 此示例包含两个部分：  
  
-   显示 XML 数据的 Web 窗体页面。  
  
-   包含数据的 XML 文件。  
  
 该示例的第一部分显示了一个显示通过访问 XML 数据的 Web 窗体页面<xref:System.Web.UI.WebControls.XmlDataSource>控件。 一个<xref:System.Web.UI.WebControls.Repeater>控件使用简化<xref:System.Web.UI.XPathBinder.Eval%28System.Object%2CSystem.String%29>方法语法以绑定到 XML 中的数据项的文档<xref:System.Web.UI.WebControls.XmlDataSource>表示。 它使用<xref:System.Web.UI.XPathBinder.Select%28System.Object%2CSystem.String%29>方法来检索<xref:System.Collections.IEnumerable>列表并将其分配为后期绑定<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>属性<xref:System.Web.UI.WebControls.Repeater>控件。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_13/CS/xmlds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_13/VB/xmlds13vb.aspx#1)]  
  
 第二个示例提供了 XML 文件，Bookstore2.xml，如上文所定义的 Web 窗体页中显示的数据源使用。  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
  <bookstore>  
    <genre name="fiction">  
      <book ISBN="10-861003-324">  
        <author>  
          <firstname>test</firstname>  
          <lastname>test2</lastname>  
        </author>  
        <title>The Handmaid's Tale</title>  
        <price>12.95</price>  
        <chapters>  
          <chapter num="1" name="Introduction" />   
          <chapter num="2" name="Body" />   
          <chapter num="3" name="Conclusion" />  
        </chapters>  
      </book>  
    </genre>  
    <genre name="nonfiction">  
      <book genre="nonfiction" ISBN="1-861001-57-5">  
        <author>  
          <firstname>test3</firstname>  
          <lastname>test4</lastname>  
        </author>      
        <title>Pride And Prejudice</title>  
        <price>24.95</price>  
        <chapters>  
          <chapter num="1" name="Introduction" />   
          <chapter num="2" name="Body" />  
          <chapter num="3" name="Conclusion" />  
        </chapters>  
      </book>  
    </genre>  
  </bookstore>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> 或 <paramref name="xpath" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">由 <paramref name="container" /> 指定的对象不是 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象。</exception>
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="T:System.Web.UI.DataBinding" />
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static string Eval (object container, string xPath, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Eval(object container, string xPath, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, xPath As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Eval(System::Object ^ container, System::String ^ xPath, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string * string -&gt; string" Usage="System.Web.UI.XPathBinder.Eval (container, xPath, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">计算表达式所根据的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象引用。 此标识符必须是以页的指定语言表示的有效对象标识符。</param>
        <param name="xPath">从 <c>container</c> 到要放置在绑定控件属性中的属性值的 XPath 查询。</param>
        <param name="format">.NET Framework 格式字符串，类似于 <see cref="M:System.String.Format(System.String,System.Object)" /> 所用的字符串，可以将 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象（是数据绑定表达式的计算结果）转换为可由请求浏览器显示的 <see cref="T:System.String" />。</param>
        <summary>在运行时计算 XPath 数据绑定表达式，并将结果格式化为要在请求浏览器中显示的文本。</summary>
        <returns>
          <see cref="T:System.String" />，通过计算数据绑定表达式并转换为字符串类型得出。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要了解有关.NET Framework 中的格式字符串的详细信息，请参阅[格式设置类型](~/docs/standard/base-types/formatting-types.md)。  
  
 可以使用<xref:System.Web.UI.XPathBinder.Eval%28System.Object%2CSystem.String%29>方法以声明方式如果你想要简化到要在浏览器中显示的文本字符串的 XML 节点的转换。 若要执行此操作，必须将放\<%# 和 %> 标记，也使用标准 ASP.NET 数据绑定，在数据绑定表达式中。  
  
 对于任何列表 ASP.NET 服务器控件，如<xref:System.Web.UI.WebControls.DataList>， <xref:System.Web.UI.WebControls.DataGrid>，或<xref:System.Web.UI.WebControls.Repeater>，则`container`参数应为`Container.DataItem`。 如果要针对页上，进行绑定`container`参数应为`Page`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> 或 <paramref name="xpath" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">由 <paramref name="container" /> 指定的对象不是 <see cref="T:System.Xml.XPath.IXPathNavigable" />。</exception>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">设置 .NET 中类型的格式</related>
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static object Eval (object container, string xPath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Eval(object container, string xPath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, xPath As String, resolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eval(System::Object ^ container, System::String ^ xPath, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="System.Web.UI.XPathBinder.Eval (container, xPath, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="container">计算表达式所根据的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象引用。 此标识符必须是以页的指定语言表示的有效对象标识符。</param>
        <param name="xPath">从 <c>container</c> 到要放置在绑定控件属性中的属性值的 XPath 查询。</param>
        <param name="resolver">用来解析 XPath 表达式中的命名空间前缀的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象。</param>
        <summary>使用指定用来解析 XPath 表达式中的命名空间前缀的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象，在运行时评估 XPath 数据绑定表达式，并将结果格式化为文本以便显示在请求浏览器中。</summary>
        <returns>
          <see cref="T:System.Object" />，它是数据绑定表达式的计算结果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用<xref:System.Web.UI.XPathBinder.Eval%2A>方法以声明方式如果你想要简化到要在浏览器中显示的文本字符串的 XML 节点的转换。 若要执行此操作，必须将放\<%# 和 %> 标记，也使用标准 ASP.NET 数据绑定，在数据绑定表达式中。 数据绑定表达式中包含的 XPath 表达式和<xref:System.Xml.IXmlNamespaceResolver>对象解析命名空间引用。  
  
 对于任何列表 ASP.NET 服务器控件，如<xref:System.Web.UI.WebControls.DataList>， <xref:System.Web.UI.WebControls.DataGrid>，或<xref:System.Web.UI.WebControls.Repeater>，则`container`参数应为`Container.DataItem`。 如果要针对页上，进行绑定`container`参数应为`Page`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static string Eval (object container, string xPath, string format, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Eval(object container, string xPath, string format, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, xPath As String, format As String, resolver As IXmlNamespaceResolver) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Eval(System::Object ^ container, System::String ^ xPath, System::String ^ format, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string * string * System.Xml.IXmlNamespaceResolver -&gt; string" Usage="System.Web.UI.XPathBinder.Eval (container, xPath, format, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="container">计算表达式所根据的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象引用。 此标识符必须是以页的指定语言表示的有效对象标识符。</param>
        <param name="xPath">从 <c>container</c> 到要放置在绑定控件属性中的属性值的 XPath 查询。</param>
        <param name="format">.NET Framework 格式字符串，类似于 <see cref="M:System.String.Format(System.String,System.Object)" /> 所用的字符串，可以将 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象（是数据绑定表达式的计算结果）转换为可由请求浏览器显示的 <see cref="T:System.String" />。</param>
        <param name="resolver">用来解析 XPath 表达式中的命名空间前缀的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象。</param>
        <summary>使用指定用来解析 XPath 表达式中的命名空间前缀的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象，在运行时评估 XPath 数据绑定表达式，并将结果格式化为文本以便显示在请求浏览器中。</summary>
        <returns>
          <see cref="T:System.String" />，通过计算数据绑定表达式并转换为字符串类型得出。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用<xref:System.Web.UI.XPathBinder.Eval%2A>方法以声明方式如果你想要简化到要在浏览器中显示的文本字符串的 XML 节点的转换。 若要执行此操作，必须将放\<%# 和 %> 标记，也使用标准 ASP.NET 数据绑定，在数据绑定表达式中。 数据绑定表达式中包含的 XPath 表达式和<xref:System.Xml.IXmlNamespaceResolver>对象解析命名空间引用。  
  
 对于任何列表 ASP.NET 服务器控件，如<xref:System.Web.UI.WebControls.DataList>， <xref:System.Web.UI.WebControls.DataGrid>，或<xref:System.Web.UI.WebControls.Repeater>，则`container`参数应为`Container.DataItem`。 如果要针对页上，进行绑定`container`参数应为`Page`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在运行时使用 XPath 数据绑定表达式来返回节点列表。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可使用重载<xref:System.Web.UI.XPathBinder.Select%2A>方法以声明方式如果你想要简化使用 XPath 查询的节点集的检索。 若要执行此操作，必须将放\<%# 和 %> 标记，也使用标准 ASP.NET 数据绑定，周围的 XPath 查询中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable Select (object container, string xPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable Select(object container, string xPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Select(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Select (container As Object, xPath As String) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ Select(System::Object ^ container, System::String ^ xPath);" />
      <MemberSignature Language="F#" Value="static member Select : obj * string -&gt; System.Collections.IEnumerable" Usage="System.Web.UI.XPathBinder.Select (container, xPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">计算表达式所根据的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象引用。 此标识符必须是以页的指定语言表示的有效对象标识符。</param>
        <param name="xPath">检索节点列表的 XPath 查询。</param>
        <summary>在运行时使用 XPath 数据绑定表达式来返回节点列表。</summary>
        <returns>一个 <see cref="T:System.Collections.IEnumerable" /> 节点列表。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用<xref:System.Web.UI.XPathBinder.Select%28System.Object%2CSystem.String%29>方法以声明方式如果你想要简化使用 XPath 查询的节点集的检索。 若要执行此操作，必须将放\<%# 和 %> 标记，也使用标准 ASP.NET 数据绑定，周围的 XPath 查询中。  
  
 对于任何列表 ASP.NET 服务器控件，如<xref:System.Web.UI.WebControls.DataList>， <xref:System.Web.UI.WebControls.DataGrid>，或<xref:System.Web.UI.WebControls.Repeater>，则`container`参数应为`Container.DataItem`。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.XmlDataSource>具有模板化控件<xref:System.Web.UI.WebControls.Repeater>控件来显示 XML 数据。 此示例包含两个部分：  
  
-   显示 XML 数据的 Web 窗体页面。  
  
-   包含数据的 XML 文件。  
  
 该示例的第一部分显示了一个显示通过访问 XML 数据的 Web 窗体页面<xref:System.Web.UI.WebControls.XmlDataSource>控件。 一个<xref:System.Web.UI.WebControls.Repeater>控件使用简化<xref:System.Web.UI.XPathBinder.Eval%28System.Object%2CSystem.String%29>方法语法以绑定到 XML 中的数据项的文档<xref:System.Web.UI.WebControls.XmlDataSource>表示。 它使用<xref:System.Web.UI.XPathBinder.Select%28System.Object%2CSystem.String%29>方法来检索<xref:System.Collections.IEnumerable>列表并将其分配为后期绑定<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>属性<xref:System.Web.UI.WebControls.Repeater>控件。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/CS/xmlds14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/VB/xmlds14vb.aspx#1)]  
  
 第二个示例提供了 XML 文件，Order.xml，如上文所定义的 Web 窗体页中显示的数据源使用。  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
  <orders>  
    <order>  
      <customer id="12345" />  
      <customername>  
        <firstn>John</firstn>  
        <lastn>Doe</lastn>  
      </customername>  
      <transaction id="12345" />  
      <shipaddress>  
        <address1>1234 Tenth Avenue</address1>  
        <city>Bellevue</city>  
        <state>Washington</state>  
        <zip>98001</zip>  
      </shipaddress>  
      <summary>  
        <item dept="tools">screwdriver</item>  
        <item dept="tools">hammer</item>  
        <item dept="plumbing">fixture</item>  
      </summary>  
    </order>  
  </orders>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> 或 <paramref name="xpath" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">由 <paramref name="container" /> 指定的对象不是 <see cref="T:System.Xml.XPath.IXPathNavigable" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XPath.XPathNodeIterator" /> 的当前节点没有关联 XML 节点。</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable Select (object container, string xPath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable Select(object container, string xPath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Select(System.Object,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Select (container As Object, xPath As String, resolver As IXmlNamespaceResolver) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ Select(System::Object ^ container, System::String ^ xPath, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member Select : obj * string * System.Xml.IXmlNamespaceResolver -&gt; System.Collections.IEnumerable" Usage="System.Web.UI.XPathBinder.Select (container, xPath, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="container">计算表达式所根据的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 对象引用。 此标识符必须是以页的指定语言表示的有效对象标识符。</param>
        <param name="xPath">检索节点列表的 XPath 查询。</param>
        <param name="resolver">用来解析 XPath 表达式中的命名空间前缀的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象。</param>
        <summary>通过使用指定用来解析 XPath 表达式中的命名空间前缀的 <see cref="T:System.Xml.IXmlNamespaceResolver" />，可以在运行时使用 XPath 数据绑定表达式来返回节点列表。</summary>
        <returns>一个 <see cref="T:System.Collections.IEnumerable" /> 节点列表。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以使用<xref:System.Web.UI.XPathBinder.Select%2A>方法以声明方式如果你想要简化使用 XPath 查询的节点集的检索。 若要执行此操作，必须将放\<%# 和 %> 标记，也使用了标准 ASP.NET 数据绑定，周围的 XPath 查询和<xref:System.Xml.IXmlNamespaceResolver>对象解析命名空间引用。  
  
 对于任何列表 ASP.NET 服务器控件，如<xref:System.Web.UI.WebControls.DataList>， <xref:System.Web.UI.WebControls.DataGrid>，或<xref:System.Web.UI.WebControls.Repeater>，则`container`参数应为`Container.DataItem`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>