<Type Name="UpdatePanel" FullName="System.Web.UI.UpdatePanel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1398084c9d3dd1e0c54470196566f5dfcd551338" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53227504" /></Metadata><TypeSignature Language="C#" Value="public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor, System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdatePanel extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor, class System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanel" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdatePanel&#xA;Inherits Control&#xA;Implements IAttributeAccessor, IUpdatePanel" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdatePanel : System::Web::UI::Control, System::Web::UI::IAttributeAccessor, System::Web::UI::IUpdatePanel" />
  <TypeSignature Language="F#" Value="type UpdatePanel = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor&#xA;    interface IUpdatePanel" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IUpdatePanel</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Triggers")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdatePanel.bmp")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在不回发的情况下允许部分呈现页的各部分。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主题内容：  
  
-   [介绍](#introduction)  
  
-   [刷新 UpdatePanel 内容](#refreshing_updatepanel_content)  
  
-   [UpdatePanel 使用情况](#updatepanel_usage)  
  
-   [应用样式](#applying_styles)  
  
-   [声明性语法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>介绍  
 <xref:System.Web.UI.UpdatePanel> 控件是 ASP.NET 中 AJAX 功能的核心部分。 它们用于<xref:System.Web.UI.ScriptManager>控件以使部分页面呈现。 当页面部分必须进行更新时，局部页面呈现减少了同步回发和完成页更新的需要。 在局部页面呈现提升的用户体验，因为它减少了整页回发期间发生，并提高 Web 页交互的屏幕闪烁。  
  
<a name="refreshing_updatepanel_content"></a>   
## <a name="refreshing-updatepanel-content"></a>刷新 UpdatePanel 内容  
 启用部分页呈现时，控件可以执行更新整页回发或异步回发的更新的一个或多个内容<xref:System.Web.UI.UpdatePanel>控件。 控制是否异步回发和更新会导致<xref:System.Web.UI.UpdatePanel>控件取决于以下：  
  
-   如果<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>的属性<xref:System.Web.UI.UpdatePanel>控件设置为<xref:System.Web.UI.UpdatePanelUpdateMode.Always>，则<xref:System.Web.UI.UpdatePanel>源自页上的每个回发将更新控件的内容。 这包括从在其他控件的异步回发<xref:System.Web.UI.UpdatePanel>控件并不是内部的控件的回发<xref:System.Web.UI.UpdatePanel>控件。  
  
-   如果<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性设置为<xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>，则<xref:System.Web.UI.UpdatePanel>在以下情况下更新控件的内容：  
  
    -   当您调用<xref:System.Web.UI.UpdatePanel.Update%2A>方法的<xref:System.Web.UI.UpdatePanel>显式控制。  
  
    -   当<xref:System.Web.UI.UpdatePanel>控件嵌套在另一个<xref:System.Web.UI.UpdatePanel>控制和父面板会更新。  
  
    -   通过使用定义为触发器的控件导致回发是时`Triggers`属性的<xref:System.Web.UI.UpdatePanel>控件。 在此方案中，该控件显式触发面板内容的更新。 该控件可以是内部或外部<xref:System.Web.UI.UpdatePanel>触发器与之关联的控件。  
  
    -   当<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性设置为`true`的子控件和<xref:System.Web.UI.UpdatePanel>控件导致回发。 子控件嵌套<xref:System.Web.UI.UpdatePanel>控件不会导致更新外部<xref:System.Web.UI.UpdatePanel>控件，除非将它们显式定义为触发器。  
  
 设置的组合<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性设置为`false`并<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性设置为<xref:System.Web.UI.UpdatePanelUpdateMode.Always>不允许，将引发异常。  
  
 当<xref:System.Web.UI.UpdatePanel>控件执行的异步 post，它将添加自定义 HTTP 标头。 某些代理中删除此自定义 HTTP 标头。 如果发生这种情况，在服务器处理的请求作为常规回发，这会导致客户端错误。 若要解决此问题，请在执行异步发布时插入自定义窗体字段。 然后检查标头或服务器代码中的自定义窗体字段。  
  
<a name="updatepanel_usage"></a>   
## <a name="updatepanel-usage"></a>UpdatePanel 使用情况  
 可以使用多个<xref:System.Web.UI.UpdatePanel>独立控件来更新不同页上的区域。 当页面包含一个或多个<xref:System.Web.UI.UpdatePanel>控件第一次呈现时，所有的所有内容<xref:System.Web.UI.UpdatePanel>都呈现和发送到浏览器控件。 在后续异步回发，每个内容<xref:System.Web.UI.UpdatePanel>控件可能不会更新，具体取决于控制面板设置和客户端或服务器逻辑的各个面板上。  
  
 此外可以使用<xref:System.Web.UI.UpdatePanel>控件在以下方案：  
  
-   在用户控件。  
  
-   在母版页和内容页。  
  
-   嵌套在其他<xref:System.Web.UI.UpdatePanel>控件。  
  
-   内部模板化控件，如<xref:System.Web.UI.WebControls.GridView>或<xref:System.Web.UI.WebControls.Repeater>控件。  
  
 <xref:System.Web.UI.UpdatePanel> 以声明方式或以编程方式，可以添加控件。  
  
 您可以添加<xref:System.Web.UI.UpdatePanel>控制以编程方式，但不能以编程方式添加触发器。 若要创建类似于触发器的行为，可以为异步回发控件注册页上的控件。 执行此操作通过调用<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>方法的<xref:System.Web.UI.ScriptManager>控件。 然后可以创建事件处理程序响应异步回发，并在处理程序调用在运行<xref:System.Web.UI.UpdatePanel.Update%2A>方法的<xref:System.Web.UI.UpdatePanel>控件。  
  
<a name="applying_styles"></a>   
## <a name="applying-styles"></a>应用样式  
 <xref:System.Web.UI.UpdatePanel>控件接受 expando 属性。 这样可以为控件呈现 HTMLelements 设置 CSS 类。 例如，您可以创建下面的示例中所示的标记：  
  
```  
<asp:UpdatePanel runat="server" class="myStyle">  
</asp:UpdatePanel>   
```  
  
 在前面的示例标记呈现 HTML 类似于以下运行页面时：  
  
```  
<div id="ctl00_MainContent_UpdatePanel1" class="MyStyle">  
</div>  
```  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>声明性语法  
  
```  
<asp:UpdatePanel  
    ChildrenAsTriggers="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RenderMode="Block|Inline"  
    runat="server"  
    SkinID="string"  
    UpdateMode="Always|Conditional"  
    Visible="True|False"  
>  
    <ContentTemplate>  
        <!-- child controls -->  
    </ContentTemplate>  
    <Triggers>  
        <asp:AsyncPostBackTrigger   
            ControlID="string"  
            EventName="string"  
        />  
        <asp:PostBackTrigger   
            ControlID="string"  
        />  
    </Triggers>  
</asp:UpdatePanel>  
```  
  
   
  
## Examples  
 以下示例演示的不同用法<xref:System.Web.UI.UpdatePanel>控件。  
  
 **UpdatePanel 控件内的控件**  
  
 下面的示例演示如何将内部控件<xref:System.Web.UI.UpdatePanel>控制，以减少屏幕闪烁，当您发布到服务器。 在此示例中，<xref:System.Web.UI.WebControls.Calendar>和一个<xref:System.Web.UI.WebControls.DropDownList>控件位于<xref:System.Web.UI.UpdatePanel>控件。 默认情况下<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性是<xref:System.Web.UI.UpdatePanelUpdateMode.Always>并<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性是`true`。 因此，子控件的面板会导致异步回发。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 **使用 UpdatePanel 控件的母版/详细信息方案**  
  
 在以下示例中，<xref:System.Web.UI.UpdatePanel>控件用于显示订单和订单从 Northwind 数据库的详细信息的母版/详细信息方案。 一个<xref:System.Web.UI.UpdatePanel>控件包含<xref:System.Web.UI.WebControls.GridView>显示订单列表的控件。 第二个<xref:System.Web.UI.UpdatePanel>控件包含<xref:System.Web.UI.WebControls.DetailsView>控件，用于显示一个订单的详细信息。 当从第一个表中选择订单时，第二个表中显示该订单的详细信息。 第二个表进行更新以异步方式基于第一个表中所选内容上。 订单摘要表中的排序和分页操作也会导致部分更新。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample2VB.aspx#2)]  
  
 如果将放<xref:System.Web.UI.WebControls.GridView>控件内部<xref:System.Web.UI.UpdatePanel>控件，设置<xref:System.Web.UI.WebControls.GridView>控件的<xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>属性设置为`true`不受支持。 但是，由于<xref:System.Web.UI.UpdatePanel>控件支持异步回发，更改任何回发<xref:System.Web.UI.WebControls.GridView>控件内部<xref:System.Web.UI.UpdatePanel>控件导致排序和分页回调的行为相同。  
  
 **在模板中使用 UpdatePanel 控件**  
  
 在以下示例中，<xref:System.Web.UI.UpdatePanel>控件中的项模板使用<xref:System.Web.UI.WebControls.GridView>控件。 <xref:System.Web.UI.UpdatePanel> 自动生成每个数据行中的控件。 每一行<xref:System.Web.UI.UpdatePanel>控件包含<xref:System.Web.UI.WebControls.Label>控件来显示该行中的项的数量和<xref:System.Web.UI.WebControls.Button>控件以减少，增加该数量。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample3CS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample3VB.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManager" />
    <related type="Article" href="https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a">UpdatePanel 技术概述</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b0156068-0d33-48e4-80fe-9ef76670ed26">ScriptManager 技术概述</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdatePanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdatePanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.UpdatePanel" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数初始化的新实例<xref:System.Web.UI.UpdatePanel>类。 若要动态添加<xref:System.Web.UI.UpdatePanel>控制转移到一个页面，创建一个新<xref:System.Web.UI.UpdatePanel>实例，并将子控件添加到由的实例公开的控件对象<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>属性。  
  
   
  
## Examples  
 下面的示例演示如何动态创建<xref:System.Web.UI.UpdatePanel>控制并将其添加到页面。 当您单击的按钮内<xref:System.Web.UI.UpdatePanel>控件，该消息由已刷新的日期和时间。 通过添加子控件<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>属性。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.UpdatePanel.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.WebSysDescription("WebControl_Attributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的级联样式表 (CSS) 特性集合。</summary>
        <value>特性集合中的 CSS 样式规则的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Attributes%2A>属性包含一系列可在包含它的 CSS 样式特性`div`元素的<xref:System.Web.UI.UpdatePanel>控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsTriggers">
      <MemberSignature Language="C#" Value="public bool ChildrenAsTriggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsTriggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsTriggers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsTriggers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenAsTriggers : bool with get, set" Usage="System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示来自 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的即时子控件的回发是否更新面板的内容。</summary>
        <value>如果来自 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的即时子控件的回发将更新面板的内容，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性设置为`true`如果你想从的直接子控件的回发<xref:System.Web.UI.UpdatePanel>控件以使该面板的内容的更新。 子控件嵌套<xref:System.Web.UI.UpdatePanel>控件不会导致更新父<xref:System.Web.UI.UpdatePanel>控件的内容，除非调用<xref:System.Web.UI.UpdatePanel.Update%2A>方法显式或作为触发器定义的子控件。  
  
> [!NOTE]
>  当<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性设置为<xref:System.Web.UI.UpdatePanelUpdateMode.Always>并<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性设置为`false`，则<xref:System.InvalidOperationException>期间引发异常<xref:System.Web.UI.UpdatePanel.OnPreRender%2A>方法。 不允许使用此属性的组合<xref:System.Web.UI.UpdatePanel>控件。  
  
 其中可能设置的情况下<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>到`false`时，有两个<xref:System.Web.UI.UpdatePanel>控制，并且您想要更新的第二个面板的内容，但不是更新其自己的内容的第一个面板中的回发。 例如，第一个面板可能是要购买的产品列表，并且第二个面板可能购物车。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ ContentTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.TemplateInstance</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置用于定义 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内容的模板。</summary>
        <value>一个 <see cref="T:System.Web.UI.ITemplate" /> 实例，用于定义 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>属性包含在显示的内容<xref:System.Web.UI.UpdatePanel>控制呈现时。 您可以以声明方式或以编程方式创建模板的内容。 内容的模板<xref:System.Web.UI.UpdatePanel>控件是单实例模板。 因此，它包含控件的属性可直接在页面上而无需使用<xref:System.Web.UI.Page.FindControl%2A>方法。 有关详细信息，请参阅<xref:System.Web.UI.TemplateInstanceAttribute>类概述。  
  
 若要将项添加到<xref:System.Web.UI.UpdatePanel>控件以声明方式中，添加`<ContentTemplate>`元素的开始和结束标记之间<xref:System.Web.UI.UpdatePanel>控件。 内部`<ContentTemplate>`元素标记声明其他控件和 HTML 元素。  
  
 若要将项添加到<xref:System.Web.UI.UpdatePanel>动态控制，请使用<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>属性，这样就可以添加子控件，而无需创建实现的自定义模板<xref:System.Web.UI.ITemplate>接口。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在创建模板实例或内容模板容器后，设置 <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> 控件的 <see cref="T:System.Web.UI.UpdatePanel" /> 属性。</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae">ASP.NET Web 服务器控件模板</related>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ContentTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ContentTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTemplateContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ContentTemplateContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplateContainer : System.Web.UI.Control" Usage="System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个可以以编程方式向其添加子控件的控件对象。</summary>
        <value>一个定义了 <see cref="T:System.Web.UI.Control" /> 控件内容的 <see cref="T:System.Web.UI.UpdatePanel" /> 对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>属性使您能够以编程方式添加到的子控件<xref:System.Web.UI.UpdatePanel>而无需定义继承的自定义模板的控件<xref:System.Web.UI.ITemplate>接口。 如果要添加到的内容<xref:System.Web.UI.UpdatePanel>控制以声明方式或通过设计器中，您应将内容添加到<xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>属性使用`<ContentTemplate>`元素。  
  
   
  
## Examples  
 下面的示例演示如何以编程方式指定<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>属性的<xref:System.Web.UI.UpdatePanel>控件。 <xref:System.Web.UI.WebControls.Label.Text%2A>的属性<xref:System.Web.UI.WebControls.Label>时设置控件`Button1`单击。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override sealed System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.UpdatePanel.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含 <see cref="T:System.Web.UI.ControlCollection" /> 控件的子控件的 <see cref="T:System.Web.UI.UpdatePanel" /> 对象。</summary>
        <value><see cref="T:System.Web.UI.UpdatePanel" /> 控件的子控件集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Controls%2A>属性被重写基<xref:System.Web.UI.Control>类和密封的以防止其他派生。 若要将控件添加到<xref:System.Web.UI.UpdatePanel>控件以声明方式，创建`<ContentTemplate>`元素内的<xref:System.Web.UI.UpdatePanel>控件标记。 若要将控件添加到<xref:System.Web.UI.UpdatePanel>以编程方式控制，请使用<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">已调用 <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" /> 类的 <see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />、<see cref="M:System.Web.UI.ControlCollection.Clear" />、<see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />、<see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" /> 或 <see cref="T:System.Web.UI.ControlCollection" /> 方法。 若要更改 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容，请修改 <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> 属性的子控件。</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateContentTemplateContainer">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateContentTemplateContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateContentTemplateContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentTemplateContainer () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateContentTemplateContainer();" />
      <MemberSignature Language="F#" Value="abstract member CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control&#xA;override this.CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control" Usage="updatePanel.CreateContentTemplateContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建一个 <see cref="T:System.Web.UI.Control" /> 对象，该对象用作定义 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内容的子控件的容器。</summary>
        <returns><see cref="T:System.Web.UI.Control" /> 控件内容的 <see cref="T:System.Web.UI.UpdatePanel" /> 容器。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法旨在用于由控件开发人员想要扩展<xref:System.Web.UI.UpdatePanel>控件。 例如，在派生类中，可以提供不同的根控件，它就像一个用于在<xref:System.Web.UI.UpdatePanel>控件的内容。 默认实现返回<xref:System.Web.UI.Control>对象。  
  
   
  
## Examples  
 下面的示例演示如何重写<xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A>方法在自定义<xref:System.Web.UI.UpdatePanel>要始终呈现控件`<fieldset>`和`<legend>`面板的内容的元素。 自定义<xref:System.Web.UI.UpdatePanel>控件定义了一个名为的公共属性`GroupingText`，它是字符串文字`<legend>`元素。  
  
 自定义<xref:System.Web.UI.UpdatePanel>名为控件`CustomUpdatePanel`派生自<xref:System.Web.UI.UpdatePanel>并重写<xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A>方法。 放置`CustomUpdatePanel`类网站的 App_Code 文件夹中的源代码。  
  
 [!code-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/App_Code/CustomUpdatePanel.cs#2)]
 [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/App_Code/CustomUpdatePanel.vb#2)]  
  
 自定义<xref:System.Web.UI.UpdatePanel>页上使用控件一样<xref:System.Web.UI.UpdatePanel>控件。 下面的示例显示了一个包含自定义的页面<xref:System.Web.UI.UpdatePanel>控件。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/UpdatePanelCreateContentTemplateContainerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/UpdatePanelCreateContentTemplateContainerVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection&#xA;override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="updatePanel.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回 <see cref="T:System.Web.UI.UpdatePanel" /> 控件中包含的所有控件的集合。</summary>
        <returns>一个 <see cref="T:System.Web.UI.ControlCollection" /> 对象，该对象包含定义 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内容的所有控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.CreateControlCollection%2A>方法由控件开发人员。  
  
 此方法是受保护的和密封的因为它是继承的类可见<xref:System.Web.UI.UpdatePanel>，但它不能重写。 此方法重写基实现返回一个专用<xref:System.Web.UI.ControlCollection>对象，它将引发<xref:System.InvalidOperationException>时<xref:System.Web.UI.ControlCollection.Add%2A>， <xref:System.Web.UI.ControlCollection.AddAt%2A>， <xref:System.Web.UI.ControlCollection.Clear%2A>， <xref:System.Web.UI.ControlCollection.Remove%2A>，或者<xref:System.Web.UI.ControlCollection.RemoveAt%2A>方法的<xref:System.Web.UI.ControlCollection>调用类。 若要更改 <xref:System.Web.UI.UpdatePanel> 控件的内容，请修改 <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> 属性的子控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="updatePanel.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果启用部分页呈现，则会初始化 <see cref="T:System.Web.UI.UpdatePanel" /> 控件触发器集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果未启用部分页呈现，在中定义的触发器<xref:System.Web.UI.UpdatePanel.Triggers%2A>不初始化属性，因为它们不不起任何作用。 <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>属性的<xref:System.Web.UI.ScriptManager>控件获取或设置一个值，该值指示是否启用部分页呈现。 <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>属性的<xref:System.Web.UI.ScriptManager>控件获取或设置一个值，该值指示是否支持局部页面呈现。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>当您重写<see cref="M:System.Web.UI.UpdatePanel.Initialize" />方法，请确保调用的基类，因此，如果在局部页面呈现启用注册触发器。</para></block>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsInPartialRendering">
      <MemberSignature Language="C#" Value="public bool IsInPartialRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInPartialRendering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInPartialRendering : bool" Usage="System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否因异步回发而更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控件。</summary>
        <value>如果因异步回发而更新当前 <see cref="T:System.Web.UI.UpdatePanel" /> 控件，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.IsInPartialRendering%2A>属性的控件开发人员想要知道何时应使用<xref:System.Web.UI.UpdatePanel>因异步回发而更新控件。 在页开发方案中，使用<xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>属性来确定是否因异步回发处理页面。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInit : EventArgs -&gt; unit&#xA;override this.OnInit : EventArgs -&gt; unit" Usage="updatePanel.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel>控件的<xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>属性实例化期间<xref:System.Web.UI.UpdatePanel.OnInit%2A>方法。  
  
 <xref:System.Web.UI.UpdatePanel.OnInit%2A>方法由控件开发人员用来扩展功能<xref:System.Web.UI.UpdatePanel>控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在已创建 <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> 属性之后定义 <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> 属性。</exception>
        <block subset="none" type="overrides"><para>当您重写<see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />方法在派生类中，请确保调用<see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />基类以便注册的委托的方法可以接收该事件。</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 页面生命周期概述</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="updatePanel.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>在未启用部分页呈现时，为 <see cref="E:System.Web.UI.Control.Load" /> 控件引发 <see cref="T:System.Web.UI.UpdatePanel" /> 事件，并调用 <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> 方法。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>如果重写<see cref="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />方法，请确保调用基类，以便<see cref="E:System.Web.UI.Control.Load" />将引发事件。</para></block>
        <altmember cref="M:System.Web.UI.UpdatePanel.Initialize" />
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="updatePanel.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.OnPreRender%2A>方法由控件开发人员用来扩展功能<xref:System.Web.UI.UpdatePanel>控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">将 <see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" /> 属性设置为 <see langword="false" />，而将 <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> 属性设置为 <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />。</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnload : EventArgs -&gt; unit&#xA;override this.OnUnload : EventArgs -&gt; unit" Usage="updatePanel.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</param>
        <summary>引发 <see cref="E:System.Web.UI.Control.Unload" /> 基事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.OnUnload%2A>方法由控件开发人员用来扩展功能<xref:System.Web.UI.UpdatePanel>控件  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 页面生命周期概述</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">一个 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，表示用于呈现 HTML 内容的输出流。</param>
        <summary>引发 <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Render%2A>方法由控件开发人员用来扩展功能<xref:System.Web.UI.UpdatePanel>控件。  
  
 <xref:System.Web.UI.UpdatePanel.Render%2A>方法的呈现的内容写入<xref:System.Web.UI.UpdatePanel>到浏览器通过使用所提供的控件<xref:System.Web.UI.HtmlTextWriter>对象。 当您重写<xref:System.Web.UI.UpdatePanel.Render%2A>方法在派生类中，请确保调用<xref:System.Web.UI.UpdatePanel.Render%2A>方法的基本类，使子控件的<xref:System.Web.UI.UpdatePanel>呈现控件。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 页面生命周期概述</related>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">一个 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象，表示用于呈现 HTML 内容的输出流。</param>
        <summary>引发 <see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.RenderChildren%2A>方法由控件开发人员用来扩展功能<xref:System.Web.UI.UpdatePanel>控件。  
  
 <xref:System.Web.UI.UpdatePanel.RenderChildren%2A>方法的呈现的内容写入<xref:System.Web.UI.UpdatePanel>到浏览器通过使用所提供的控件<xref:System.Web.UI.HtmlTextWriter>对象。 当您重写<xref:System.Web.UI.UpdatePanel.RenderChildren%2A>方法在派生类中，请确保调用<xref:System.Web.UI.UpdatePanel.RenderChildren%2A>方法的基本类，使子控件的<xref:System.Web.UI.UpdatePanel>呈现控件。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 页面生命周期概述</related>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderMode As UpdatePanelRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelRenderMode RenderMode { System::Web::UI::UpdatePanelRenderMode get(); void set(System::Web::UI::UpdatePanelRenderMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderMode : System.Web.UI.UpdatePanelRenderMode with get, set" Usage="System.Web.UI.UpdatePanel.RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容是否包含在 HTML <see langword="&lt;div&gt;" /> 或 <see langword="&lt;span&gt;" /> 元素中。</summary>
        <value><see cref="T:System.Web.UI.UpdatePanelRenderMode" /> 值之一。 默认值为 <see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" />，以便面板内容包含在 HTML <see langword="&lt;div&gt;" /> 元素中。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.UpdatePanel.RenderMode%2A>属性设置为<xref:System.Web.UI.UpdatePanelRenderMode.Inline>，则内容<xref:System.Web.UI.UpdatePanel>控件呈现在 HTML 内`<span>`元素。 如果<xref:System.Web.UI.UpdatePanel.RenderMode%2A>属性设置为<xref:System.Web.UI.UpdatePanelRenderMode.Block>，呈现在 HTML`<div>`元素。  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Web.UI.UpdatePanel.RenderMode%2A>属性以声明方式。 <xref:System.Web.UI.UpdatePanel>名为控件`UpdatePanel1`以 html 格式呈现`<span>`元素。 如果<xref:System.Web.UI.UpdatePanel.RenderMode%2A>属性设置为<xref:System.Web.UI.UpdatePanelRenderMode.Block>，则生成的段落便会因的方式而出现不相互连接 HTML`<div>`元素呈现。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/CS/UpdatePanelRenderModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/VB/UpdatePanelRenderModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="RequiresUpdate">
      <MemberSignature Language="C#" Value="protected internal virtual bool RequiresUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property RequiresUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool RequiresUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUpdate : bool" Usage="System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容。</summary>
        <value>如果更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下<xref:System.Web.UI.UpdatePanel.RequiresUpdate%2A>属性返回`true`如果<xref:System.Web.UI.UpdatePanel.Update%2A>显式调用方法或者如果<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性设置为<xref:System.Web.UI.UpdatePanelUpdateMode.Always>。  
  
 此属性应使用由控件开发人员想要扩展<xref:System.Web.UI.UpdatePanel>控件。 例如，在派生类中，你可能会提供其他逻辑来确定是否<xref:System.Web.UI.UpdatePanel>应更新控件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">属性名。</param>
        <summary>通过使用指定名称返回 Web 控件的特性。</summary>
        <returns>属性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.UpdatePanel> 实例强制转换为 <xref:System.Web.UI.IAttributeAccessor> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要设置的特性的名称。</param>
        <param name="value">要设置的属性的值。</param>
        <summary>设置指定的控件特性的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.UpdatePanel> 实例强制转换为 <xref:System.Web.UI.IAttributeAccessor> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.UpdatePanelTriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As UpdatePanelTriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelTriggerCollection ^ Triggers { System::Web::UI::UpdatePanelTriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Web.UI.UpdatePanelTriggerCollection" Usage="System.Web.UI.UpdatePanel.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelTriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> 对象，该对象包含以声明方式为 <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> 控件注册的 <see cref="T:System.Web.UI.PostBackTrigger" /> 和 <see cref="T:System.Web.UI.UpdatePanel" /> 对象。</summary>
        <value>类型为 <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> 和 <see cref="T:System.Web.UI.PostBackTrigger" /> 的对象的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Triggers%2A>属性获取已为定义的所有触发器的集合<xref:System.Web.UI.UpdatePanel>控件。 (您可以通过使用以声明方式定义触发器**UpdatePanelTrigger 集合编辑器**对话框，在设计器中或通过使用`<Triggers>`元素的<xref:System.Web.UI.UpdatePanel>控件。)该集合包含<xref:System.Web.UI.AsyncPostBackTrigger>和<xref:System.Web.UI.PostBackTrigger>对象。  
  
 在中定义的声明性触发器<xref:System.Web.UI.UpdatePanel.Triggers%2A>集合不会跟踪视图状态中。  
  
 命名容器的控件用作触发器，其所有子控件引起回发将都用作触发器。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelTriggerCollection" />
        <altmember cref="T:System.Web.UI.UpdatePanelTrigger" />
        <altmember cref="T:System.Web.UI.AsyncPostBackTrigger" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="updatePanel.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>导致更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在调用时，为局部页面呈现启用页<xref:System.Web.UI.UpdatePanel.Update%2A>方法，<xref:System.Web.UI.UpdatePanel>在浏览器中更新控件的内容。 调用<xref:System.Web.UI.UpdatePanel.Update%2A>方法，如果必须确定所必须执行的服务器代码是否<xref:System.Web.UI.UpdatePanel>应更新控件。 如果你打算使用<xref:System.Web.UI.UpdatePanel.Update%2A>方法，并将<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性设置为<xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>。 如果你想更新服务器逻辑中的面板的决定，请确保<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性是`false`并没有显式触发器定义面板。  
  
 在典型的页面开发方案中，如果定义了触发器或者<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性是`true`有关<xref:System.Web.UI.UpdatePanel>控件，<xref:System.Web.UI.UpdatePanel.Update%2A>在页生命周期内自动调用方法。  
  
 如果<xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>属性未定义为<xref:System.Web.UI.UpdatePanel>控件，不会进行任何更新面板。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Web.UI.UpdatePanel.Update%2A>方法来更新的内容<xref:System.Web.UI.UpdatePanel>控制自上次更新时所经历时间超过五秒。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> 属性设置为 <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />。  
  
\- 或 - 
在执行页的 <see cref="M:System.Web.UI.UpdatePanel.Update" /> 事件期间或之后，调用 <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> 方法。</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelUpdateMode UpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMode As UpdatePanelUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelUpdateMode UpdateMode { System::Web::UI::UpdatePanelUpdateMode get(); void set(System::Web::UI::UpdatePanelUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMode : System.Web.UI.UpdatePanelUpdateMode with get, set" Usage="System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示何时更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容。</summary>
        <value><see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> 值之一。 默认值为 <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.UpdatePanel>控件不是在另一<xref:System.Web.UI.UpdatePanel>控件，面板中更新的设置根据<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>和<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性，以及触发器的集合。 当<xref:System.Web.UI.UpdatePanel>控件位于另一个<xref:System.Web.UI.UpdatePanel>父面板会进行更新时，将自动更新控件，在子面板。  
  
 内容<xref:System.Web.UI.UpdatePanel>在以下情况下更新控件：  
  
-   如果<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性设置为<xref:System.Web.UI.UpdatePanelUpdateMode.Always>，则<xref:System.Web.UI.UpdatePanel>上每个从页面上的任何位置执行回发时将更新控件的内容。 这包括从在其他控件的异步回发<xref:System.Web.UI.UpdatePanel>控件并不是内部的控件的回发<xref:System.Web.UI.UpdatePanel>控件。  
  
-   如果<xref:System.Web.UI.UpdatePanel>控件嵌套在另一个<xref:System.Web.UI.UpdatePanel>更新控件和父更新面板。  
  
-   如果<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性设置为<xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>，并出现以下情况之一：  
  
    -   在调用<xref:System.Web.UI.UpdatePanel.Update%2A>方法的<xref:System.Web.UI.UpdatePanel>显式控制。  
  
    -   通过使用定义为触发器的控件导致回发<xref:System.Web.UI.UpdatePanel.Triggers%2A>属性的<xref:System.Web.UI.UpdatePanel>控件。 在此方案中，该控件显式触发面板内容的更新。 该控件可以是内部或外部<xref:System.Web.UI.UpdatePanel>定义该触发器的控件。  
  
    -   <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性设置为`true`的子控件和<xref:System.Web.UI.UpdatePanel>控件导致回发。 嵌套的子控件<xref:System.Web.UI.UpdatePanel>控件不会导致更新外部<xref:System.Web.UI.UpdatePanel>控件，除非它被显式定义为触发器。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> 属性。 此示例声明两个<xref:System.Web.UI.UpdatePanel>控件。 在第一个面板中，<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性设置为<xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>。 在第二个面板中，<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>设置为<xref:System.Web.UI.UpdatePanelUpdateMode.Always>。 这两个面板外部按钮注册为异步回发控件通过调用<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>方法的<xref:System.Web.UI.ScriptManager>控件。 在按钮的`Click`事件处理程序<xref:System.Web.UI.UpdatePanel.Update%2A>如果其上次更新以来所经历时间超过五秒会调用方法的第一个面板。 在此方案中，仅当最后一个面板刷新已超过五秒更新面板的内容。 第二个面板的内容始终进行更新。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的类型不是 <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> 值之一。</exception>
        <altmember cref="T:System.Web.UI.UpdatePanelUpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      </Docs>
    </Member>
  </Members>
</Type>