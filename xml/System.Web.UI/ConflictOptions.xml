<Type Name="ConflictOptions" FullName="System.Web.UI.ConflictOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab3cd7d259dad0e74ecfbc9e7ed7d3f48beb26c7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30604961" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ConflictOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConflictOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ConflictOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConflictOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConflictOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>确定 ASP.NET 数据源控件在更新或删除数据时如何处理数据冲突。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 并发控制是一种数据存储区使用来控制如何读取和更改存储区中，在访问和操作同一数据多个客户端数据的技术。 例如，一台客户端读取数据，并将其呈现给用户，而另一个客户端读取同一数据，并将其呈现给其他用户。 如果两个用户更新的数据，并将其提交至数据存储，则可能会发生某种意外的结果，因为客户端可能会更新相同数据的不同值。 这是被视为冲突。  
  
 `ConflictDetection`定义 ASP.NET 数据源控件的属性用于确定控件在基础数据存储区正在使用乐观并发访问和删除或更新操作已时如何处理基础数据存储中的数据冲突执行。  
  
 默认情况下，`ConflictDetection`属性设置为 OverwriteChanges，这意味着数据源控件将覆盖到的数据源控件第一次读取数据行中的时间和更新行的时间之间的数据行所做的任何更改。 为主键用于查找数据行，将更新或删除，但不执行的数据的任何其他比较。 如果数据源控件配置为使用 CompareAllValues 选项，但是，该控件将通过中的原始数据`oldValues`的集合`Update`和`Delete`方法，以便您可以编写逻辑来更新或删除数据，仅当这些值匹配的数据存储中的当前值。 匹配的值指示的数据已未更改以来的读取的时间。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
  </Docs>
  <Members>
    <Member MemberName="CompareAllValues">
      <MemberSignature Language="C#" Value="CompareAllValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions CompareAllValues = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberSignature Language="VB.NET" Value="CompareAllValues" />
      <MemberSignature Language="C++ CLI" Value="CompareAllValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>数据源控件使用 <see langword="Update" /> 和 <see langword="Delete" /> 方法的 <paramref name="oldValues" /> 集合来确定数据是否已被其他进程更改。</summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions OverwriteChanges = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>数据源控件使用数据行自己的值覆盖该行中的所有值。</summary>
      </Docs>
    </Member>
  </Members>
</Type>