<Type Name="ControlCachePolicy" FullName="System.Web.UI.ControlCachePolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="41fc28c7ea28ef70f02053f7bbcd612ecbcc89d9" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37531985" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ControlCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlCachePolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlCachePolicy sealed" />
  <TypeSignature Language="F#" Value="type ControlCachePolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides programmatic access to an ASP.NET user control's output cache settings.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlCachePolicy>编程式用户控制方案中的开发人员使用类来指定用户控件 （.ascx 文件） 的输出缓存设置。 ASP.NET 将嵌入的用户控件<xref:System.Web.UI.BasePartialCachingControl>实例。 <xref:System.Web.UI.BasePartialCachingControl>类表示启用了输出缓存的用户控件。 当访问<xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=nameWithType>的属性<xref:System.Web.UI.PartialCachingControl>控件，你始终将收到一个有效<xref:System.Web.UI.ControlCachePolicy>对象。 但是，如果访问<xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=nameWithType>的属性<xref:System.Web.UI.UserControl>控件，您接收到有效<xref:System.Web.UI.ControlCachePolicy>对象只能由已在包装用户控件<xref:System.Web.UI.BasePartialCachingControl>控件。 如果不换行，<xref:System.Web.UI.ControlCachePolicy>属性返回的对象将引发异常，当您尝试对其进行操作，因为它不具有关联<xref:System.Web.UI.BasePartialCachingControl>。 若要确定是否<xref:System.Web.UI.UserControl>实例支持缓存不会生成异常，检查<xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A>属性。  
  
 使用<xref:System.Web.UI.ControlCachePolicy>类是可启用输出缓存的几种方式之一。 以下列表介绍了可用于启用输出缓存的方法：  
  
-   使用指令启用输出缓存在声明性方案中。  
  
-   使用<xref:System.Web.UI.PartialCachingAttribute>特性，使用户控件代码隐藏文件中的缓存。  
  
-   使用<xref:System.Web.UI.ControlCachePolicy>类，以指定在其中你正在使用的编程方案中的缓存设置<xref:System.Web.UI.BasePartialCachingControl>已启用缓存的使用上一方法之一，并使用动态加载的实例<xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=nameWithType>方法。 一个<xref:System.Web.UI.ControlCachePolicy>实例才能成功操作仅介于`Init`和`PreRender`控件生命周期的阶段。 如果你修改<xref:System.Web.UI.ControlCachePolicy>对象之后`PreRender`阶段中，ASP.NET 会引发异常，因为在呈现控件后，进行任何更改不能实际影响缓存设置 (在过程缓存控件`Render`阶段)。 最后，用户控件实例 (因此其<xref:System.Web.UI.ControlCachePolicy>对象) 实际上呈现时才可用于以编程方式操作。  
  
   
  
## Examples  
 下面的代码示例演示如何动态加载和运行时以编程方式操作用户控件。 <xref:System.Web.UI.PartialCachingAttribute>特性应用于名为的用户控件`SimpleControl`，这意味着该用户控件由包装<xref:System.Web.UI.PartialCachingControl>控件在运行时。 `SimpleControl`对象的缓存设置可以以编程方式通过及其关联操作<xref:System.Web.UI.ControlCachePolicy>对象，可通过引用<xref:System.Web.UI.PartialCachingControl>包装它的控件。 在此示例中，<xref:System.Web.UI.ControlCachePolicy.Duration%2A>属性检查在页初始化和更改使用期间<xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A>和<xref:System.Web.UI.ControlCachePolicy.SetExpires%2A>方法满足某些条件时。  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 下面的代码示例演示了如何使用`SimpleControl`从 Web 窗体页的用户控件。 若要成功运行此示例，请确保用户控件文件 (.ascx)、 其代码隐藏文件 （.cs 或.vb） 和承载用户控件 (.aspx) 的 Web 窗体页是相同的目录中。  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx.cs#2)]
 [!code-vb[System.Web.UI.ControlCachePolicy_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx.vb#2)]  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx#3)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.BasePartialCachingControl.CachePolicy" />
    <altmember cref="P:System.Web.UI.UserControl.CachePolicy" />
  </Docs>
  <Members>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public bool Cached { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cached" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Cached" />
      <MemberSignature Language="VB.NET" Value="Public Property Cached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cached { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Cached : bool with get, set" Usage="System.Web.UI.ControlCachePolicy.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether fragment caching is enabled for the user control.</summary>
        <value>
          <see langword="true" /> 如果用户控件的输出缓存;，否则为<see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.  \- or -  The <see cref="P:System.Web.UI.ControlCachePolicy.Cached" /> property is set outside of the initialization and rendering stages of the control.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dependency">
      <MemberSignature Language="C#" Value="public System.Web.Caching.CacheDependency Dependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.CacheDependency Dependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Dependency" />
      <MemberSignature Language="VB.NET" Value="Public Property Dependency As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::CacheDependency ^ Dependency { System::Web::Caching::CacheDependency ^ get(); void set(System::Web::Caching::CacheDependency ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Dependency : System.Web.Caching.CacheDependency with get, set" Usage="System.Web.UI.ControlCachePolicy.Dependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class associated with the cached user control output.</summary>
        <value>与控件关联的 <see cref="T:System.Web.Caching.CacheDependency" />。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlCachePolicy.Dependency%2A>属性委托给<xref:System.Web.UI.BasePartialCachingControl.Dependency%2A>属性的<xref:System.Web.UI.BasePartialCachingControl>包装用户控件的控件。 当<xref:System.Web.Caching.CacheDependency>实例无效，从缓存中删除的用户控件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.  \- or -  The <see cref="P:System.Web.UI.ControlCachePolicy.Dependency" /> property is set outside of the initialization and rendering stages of the control.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="P:System.Web.UI.BasePartialCachingControl.Dependency" />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Duration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : TimeSpan with get, set" Usage="System.Web.UI.ControlCachePolicy.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the amount of time that cached items are to remain in the output cache.</summary>
        <value>一个<see cref="T:System.TimeSpan" />，表示用户控件将输出缓存中保留的时间量。 默认值为 <see cref="F:System.TimeSpan.Zero" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果使用设置的绝对过期策略<xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A>方法，<xref:System.Web.UI.ControlCachePolicy.Duration%2A>属性返回的缓存项过期前的剩余时间量。  
  
   
  
## Examples  
 下面的代码示例演示如何动态加载和运行时以编程方式操作用户控件。 <xref:System.Web.UI.PartialCachingAttribute>特性应用于名为的用户控件`SimpleControl`，这意味着它由包装<xref:System.Web.UI.PartialCachingControl>控件在运行时。 `SimpleControl`对象的缓存设置可以以编程方式通过及其关联操作<xref:System.Web.UI.ControlCachePolicy>对象，可通过引用<xref:System.Web.UI.PartialCachingControl>包装它的控件。 在此示例中，<xref:System.Web.UI.ControlCachePolicy.Duration%2A>属性在页面初始化过程将检查并满足某些条件时更改了缓存过期日期。 此示例摘自一个更大的示例为提供<xref:System.Web.UI.ControlCachePolicy>类。  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.  \- or -  The <see cref="P:System.Web.UI.ControlCachePolicy.Duration" /> property is set outside of the initialization and rendering stages of the control.</exception>
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string with get, set" Usage="System.Web.UI.ControlCachePolicy.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the output-cache provider that is associated with a control instance.</summary>
        <value>提供程序的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlCachePolicy.ProviderName%2A>属性可用于指定当前输出缓存提供程序通过使用与控件关联的<xref:System.Web.UI.ControlCachePolicy>实例。 仅之前设置此属性<xref:System.Web.UI.Control.PreRender>控件生命周期中发生的事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The provider name was not found.</exception>
        <exception cref="T:System.Web.HttpException">An attempt was made to set the <see cref="P:System.Web.UI.ControlCachePolicy.ProviderName" /> property during or after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetExpires">
      <MemberSignature Language="C#" Value="public void SetExpires (DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExpires(valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExpires (expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExpires(DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="member this.SetExpires : DateTime -&gt; unit" Usage="controlCachePolicy.SetExpires expirationTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="expirationTime">A <see cref="T:System.DateTime" /> after which the cached entry expires.</param>
        <summary>Instructs the <see cref="T:System.Web.UI.BasePartialCachingControl" /> control that wraps the user control to expire the cache entry at the specified date and time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.ControlCachePolicy.SetExpires%2A>并<xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A>方法 (传递`true`) 以指示<xref:System.Web.UI.BasePartialCachingControl>包装要使用可调到期缓存而不是绝对过期策略的策略的用户控件的控件。 使用<xref:System.Web.UI.ControlCachePolicy.SetExpires%2A>方法和<xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A>方法 (传递`false`) 来指定绝对过期策略。  
  
   
  
## Examples  
 下面的代码示例演示如何动态加载和运行时以编程方式操作用户控件。 <xref:System.Web.UI.PartialCachingAttribute>特性应用于名为的用户控件`SimpleControl`，这意味着该用户控件由包装<xref:System.Web.UI.PartialCachingControl>控件在运行时。 `SimpleControl`对象的缓存设置可以以编程方式通过及其关联操作<xref:System.Web.UI.ControlCachePolicy>对象，可通过引用<xref:System.Web.UI.PartialCachingControl>包装它的控件。 在此示例中，<xref:System.Web.UI.ControlCachePolicy.Duration%2A>属性检查在页初始化和更改使用期间<xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A>和<xref:System.Web.UI.ControlCachePolicy.SetExpires%2A>方法满足某些条件时。 此示例摘自一个更大的示例为提供<xref:System.Web.UI.ControlCachePolicy>类。  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetSlidingExpiration">
      <MemberSignature Language="C#" Value="public void SetSlidingExpiration (bool useSlidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSlidingExpiration(bool useSlidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSlidingExpiration (useSlidingExpiration As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSlidingExpiration(bool useSlidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.SetSlidingExpiration : bool -&gt; unit" Usage="controlCachePolicy.SetSlidingExpiration useSlidingExpiration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useSlidingExpiration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useSlidingExpiration">
          <see langword="true" /> to use sliding cache expiration instead of absolute expiration; otherwise, <see langword="false" />.</param>
        <summary>Instructs the <see cref="T:System.Web.UI.BasePartialCachingControl" /> control that wraps the user control to set the user control's cache entry to use sliding or absolute expiration.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.ControlCachePolicy.SetExpires%2A>并<xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A>方法 (传递`true`) 以指示<xref:System.Web.UI.BasePartialCachingControl>包装要使用可调到期缓存而不是绝对过期策略的策略的用户控件的控件。 使用<xref:System.Web.UI.ControlCachePolicy.SetExpires%2A>方法和<xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A>方法 (传递`false`) 来指定绝对过期策略。  
  
   
  
## Examples  
 下面的代码示例演示如何动态加载和运行时以编程方式操作用户控件。 名为的用户控件`SimpleControl`用修饰<xref:System.Web.UI.PartialCachingAttribute>属性，这意味着它由包装<xref:System.Web.UI.PartialCachingControl>控件在运行时。 `SimpleControl`对象的缓存设置可以以编程方式通过及其关联操作<xref:System.Web.UI.ControlCachePolicy>对象，可通过引用<xref:System.Web.UI.PartialCachingControl>包装它的控件。 在此示例中，缓存设置来在页面初始化过程检查和更改满足某些条件时。 此示例摘自一个更大的示例为提供<xref:System.Web.UI.ControlCachePolicy>类。  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="SetVaryByCustom">
      <MemberSignature Language="C#" Value="public void SetVaryByCustom (string varyByCustom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVaryByCustom(string varyByCustom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVaryByCustom (varyByCustom As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVaryByCustom(System::String ^ varyByCustom);" />
      <MemberSignature Language="F#" Value="member this.SetVaryByCustom : string -&gt; unit" Usage="controlCachePolicy.SetVaryByCustom varyByCustom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varyByCustom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="varyByCustom">The list of custom strings.</param>
        <summary>Sets a list of custom strings that the output cache will use to vary the user control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果将"浏览器"作为传递`varyByCustom`参数，将不同的用户控件是否可以通过浏览器类型和主要版本号。 如果输入另一个自定义字符串，则必须重写<xref:System.Web.HttpApplication.GetVaryByCustomString%2A>应用程序的 Global.asax 文件中的方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" />
      </Docs>
    </Member>
    <Member MemberName="SupportsCaching">
      <MemberSignature Language="C#" Value="public bool SupportsCaching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.SupportsCaching" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsCaching { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCaching : bool" Usage="System.Web.UI.ControlCachePolicy.SupportsCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the user control supports caching.</summary>
        <value>
          <see langword="true" /> 如果用户控件支持缓存;，否则为<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用户控件支持缓存如果与相关联<xref:System.Web.UI.BasePartialCachingControl>实例，向发出信号的指令已分析 ASP.NET 分析器或用户控件使用修饰<xref:System.Web.UI.PartialCachingAttribute>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PartialCachingAttribute" />
        <altmember cref="T:System.Web.UI.BasePartialCachingControl" />
      </Docs>
    </Member>
    <Member MemberName="VaryByControl">
      <MemberSignature Language="C#" Value="public string VaryByControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByControl" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByControl : string with get, set" Usage="System.Web.UI.ControlCachePolicy.VaryByControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a list of control identifiers to vary the cached output by.</summary>
        <value>用于改变用户控件的字符串之间用分号分隔列表的输出缓存。 这些字符串表示<see cref="P:System.Web.UI.Control.ID" />用户控件中声明的 ASP.NET 服务器控件的属性值。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.  \- or -  The <see cref="P:System.Web.UI.ControlCachePolicy.VaryByControl" /> property is set outside of the initialization and rendering stages of the control.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByControls" />
      </Docs>
    </Member>
    <Member MemberName="VaryByParams">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByParams VaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByParams VaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByParams As HttpCacheVaryByParams" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByParams ^ VaryByParams { System::Web::HttpCacheVaryByParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByParams : System.Web.HttpCacheVaryByParams" Usage="System.Web.UI.ControlCachePolicy.VaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a list of <see langword="GET" /> or <see langword="POST" /> parameter names to vary the cached output by.</summary>
        <value>用于输出缓存发生变化的字符串之间用分号分隔列表。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，这些字符串对应于与 GET 方法一起发送的查询字符串值或使用 POST 方法发送的参数。 当<xref:System.Web.UI.ControlCachePolicy.VaryByParams%2A>属性设置为多个参数，输出缓存包含请求的文档的不同版本，为每个指定的参数。 可能的值包括"none"、"*"，和任何有效的查询字符串或 POST 参数名。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">The user control is not associated with a <see cref="T:System.Web.UI.BasePartialCachingControl" /> and is not cacheable.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByParams" />
      </Docs>
    </Member>
  </Members>
</Type>