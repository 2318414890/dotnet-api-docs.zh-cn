<Type Name="MasterPage" FullName="System.Web.UI.MasterPage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7a0b00f25a019fea6aba23039fcfd8c4da56f044" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610031" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MasterPage : System.Web.UI.UserControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MasterPage extends System.Web.UI.UserControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.MasterPage" />
  <TypeSignature Language="VB.NET" Value="Public Class MasterPage&#xA;Inherits UserControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class MasterPage : System::Web::UI::UserControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UserControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.MasterPageControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fd60e-101">充当仅由 <see cref="T:System.Web.UI.WebControls.Content" /> 控件和它们各自的子控件组成的页面的模板和合并容器。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fd60e-101">Acts as a template and merging container for pages that are composed only of <see cref="T:System.Web.UI.WebControls.Content" /> controls and their respective child controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd60e-102">母版页充当一个模板容器和 ASP.NET Web 应用程序中的内容页的合并页面。</span><span class="sxs-lookup"><span data-stu-id="fd60e-102">A master page functions as a template container and merging page for content pages in your ASP.NET Web application.</span></span> <span data-ttu-id="fd60e-103">主页面提供了一种简便方式，在内容页的一组共享结构和内容。</span><span class="sxs-lookup"><span data-stu-id="fd60e-103">Master pages provide a convenient way to share structure and content across a set of content pages.</span></span> <span data-ttu-id="fd60e-104">内容占位符用于定义母版页内容页中的内容替换的部分。</span><span class="sxs-lookup"><span data-stu-id="fd60e-104">You use content placeholders to define the sections of the master page to replace with content from the content pages.</span></span>  
  
 <span data-ttu-id="fd60e-105">当你使用主控页和其相关的内容页时，你将添加所需的 XHTML 文档标记 (如`html`， `head`，和`body`) 仅对母版页并且不再作为独立的 Web 创建其他.aspx 文件 （ASP.NET 页）页。</span><span class="sxs-lookup"><span data-stu-id="fd60e-105">When you use a master page and its related content pages, you add the required XHTML document tags (such as `html`, `head`, and `body`) only to the master page and no longer create your other .aspx files (ASP.NET pages) as stand-alone Web pages.</span></span> <span data-ttu-id="fd60e-106">内容页定义的内容将插入母版页中的占位符。</span><span class="sxs-lookup"><span data-stu-id="fd60e-106">The content pages define the content to insert into the placeholders in the master page.</span></span>  
  
 <span data-ttu-id="fd60e-107">当在运行时，如果对一个页发出 HTTP 请求时，主控页和内容页将组合成一个类与内容页同名。</span><span class="sxs-lookup"><span data-stu-id="fd60e-107">When an HTTP request is made for a page at run time, the master page and content pages are combined into a single class with the same name as the content pages.</span></span> <span data-ttu-id="fd60e-108">编译所生成，合并的类派生自<xref:System.Web.UI.Page>类。</span><span class="sxs-lookup"><span data-stu-id="fd60e-108">The resulting compiled, merged class derives from the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="fd60e-109">母版页可以包含直接标记和服务器控件，以及容器控件。</span><span class="sxs-lookup"><span data-stu-id="fd60e-109">A master page can contain direct markup and server controls, as well as container controls.</span></span> <span data-ttu-id="fd60e-110">位于外部的母版页中的每个元素<xref:System.Web.UI.WebControls.ContentPlaceHolder>因内容页与母版页合并的所有页面上呈现控件。</span><span class="sxs-lookup"><span data-stu-id="fd60e-110">Every element that is placed in the master page outside of a <xref:System.Web.UI.WebControls.ContentPlaceHolder> control is rendered on all pages that result from merging the master page and content pages.</span></span>  
  
 <span data-ttu-id="fd60e-111">每个内容页与母版页必须引用中的母版页`MasterPageFile`其指令的属性。</span><span class="sxs-lookup"><span data-stu-id="fd60e-111">Each content page that is related to the master page must reference the master page in a `MasterPageFile` attribute of its  directive.</span></span> <span data-ttu-id="fd60e-112">内容页只能包含`@ Page`指令和一个或多个<xref:System.Web.UI.WebControls.Content>控件。</span><span class="sxs-lookup"><span data-stu-id="fd60e-112">Content pages can contain only a `@ Page` directive and one or more <xref:System.Web.UI.WebControls.Content> controls.</span></span> <span data-ttu-id="fd60e-113">所有页面文本、 标记和服务器控件必须放在<xref:System.Web.UI.WebControls.Content>控件。</span><span class="sxs-lookup"><span data-stu-id="fd60e-113">All of your page text, markup, and server controls must be placed within <xref:System.Web.UI.WebControls.Content> controls.</span></span> <span data-ttu-id="fd60e-114">你确定<xref:System.Web.UI.WebControls.ContentPlaceHolder>页控件的基础<xref:System.Web.UI.WebControls.Content>设置与关联控件<xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A>属性<xref:System.Web.UI.WebControls.Content>控件。</span><span class="sxs-lookup"><span data-stu-id="fd60e-114">You identify the <xref:System.Web.UI.WebControls.ContentPlaceHolder> control of a master page that a <xref:System.Web.UI.WebControls.Content> control is associated with by setting the <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> property of the <xref:System.Web.UI.WebControls.Content> control.</span></span>  
  
 <span data-ttu-id="fd60e-115">在运行时，从每个动态内容<xref:System.Web.UI.WebControls.Content>与中的相关的确切位置的母版页合并请求的页中控件<xref:System.Web.UI.WebControls.ContentPlaceHolder>控件。</span><span class="sxs-lookup"><span data-stu-id="fd60e-115">At run time, the dynamic content from each <xref:System.Web.UI.WebControls.Content> control in the requested page is merged with the master page in the exact location of the related <xref:System.Web.UI.WebControls.ContentPlaceHolder> control.</span></span> <span data-ttu-id="fd60e-116">任何其他标记和在母版页中的控件不会受到影响。</span><span class="sxs-lookup"><span data-stu-id="fd60e-116">Any other markup and controls in the master page are unaffected.</span></span> <span data-ttu-id="fd60e-117">在这两个 master 类并在内容页上，可以定义事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="fd60e-117">Event handlers can be defined in both the master class and on the content page.</span></span> <span data-ttu-id="fd60e-118">有关详细信息，请参阅[ASP.NET Master 和内容页中的事件](http://msdn.microsoft.com/library/b3ab2d01-9e37-4788-82d0-c6065e3ff5bd)。</span><span class="sxs-lookup"><span data-stu-id="fd60e-118">For more information, see [Events in ASP.NET Master and Content Pages](http://msdn.microsoft.com/library/b3ab2d01-9e37-4788-82d0-c6065e3ff5bd).</span></span>  
  
 <span data-ttu-id="fd60e-119"><xref:System.Web.UI.MasterPage>类是与具有.master 扩展名的文件关联。</span><span class="sxs-lookup"><span data-stu-id="fd60e-119">The <xref:System.Web.UI.MasterPage> class is associated with files that have a .master extension.</span></span> <span data-ttu-id="fd60e-120">这些文件在运行时作为编译<xref:System.Web.UI.MasterPage>对象，并在服务器内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="fd60e-120">These files are compiled at run time as <xref:System.Web.UI.MasterPage> objects and are cached in server memory.</span></span>  
  
 <span data-ttu-id="fd60e-121">主控页将提供给通过内容页<xref:System.Web.UI.Page.Master%2A>基属性<xref:System.Web.UI.Page>类。</span><span class="sxs-lookup"><span data-stu-id="fd60e-121">The master page is made available to the content page through the <xref:System.Web.UI.Page.Master%2A> property of the base <xref:System.Web.UI.Page> class.</span></span> <span data-ttu-id="fd60e-122"><xref:System.Web.UI.Page.Master%2A>属性返回的实例的主控页; 但是，它被类型化为基<xref:System.Web.UI.MasterPage>类。</span><span class="sxs-lookup"><span data-stu-id="fd60e-122">The <xref:System.Web.UI.Page.Master%2A> property returns the instance of the master page; however, it is typed as the base <xref:System.Web.UI.MasterPage> class.</span></span> <span data-ttu-id="fd60e-123">到访问控制、 属性和函数的主页上，<xref:System.Web.UI.Page.Master%2A>属性可以强制转换为<xref:System.Web.UI.MasterPage>对象。</span><span class="sxs-lookup"><span data-stu-id="fd60e-123">To access controls, properties, and functions of the master page, the <xref:System.Web.UI.Page.Master%2A> property can be cast to a <xref:System.Web.UI.MasterPage> object.</span></span> <span data-ttu-id="fd60e-124">使用定义母版页的类名`ClassName`指令的特性。</span><span class="sxs-lookup"><span data-stu-id="fd60e-124">The class name of the master page is defined using the `ClassName` attribute of the  directive.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd60e-125">具有.master 扩展名的文件不被提供到浏览器。</span><span class="sxs-lookup"><span data-stu-id="fd60e-125">Files with .master extensions are not served to a browser.</span></span>  
  
 <span data-ttu-id="fd60e-126">在母版页都有效指令是一种方式与上可用的相同<xref:System.Web.UI.UserControl>对象。</span><span class="sxs-lookup"><span data-stu-id="fd60e-126">The directives that are valid on a master page are the same as those that are available on a <xref:System.Web.UI.UserControl> object.</span></span> <span data-ttu-id="fd60e-127">它们可以包括以下属性：</span><span class="sxs-lookup"><span data-stu-id="fd60e-127">They can include the following attributes:</span></span>  
  
-   `AutoEventWireup`  
  
-   `ClassName`  
  
-   `CodeFile`  
  
-   `CompilerMode`  
  
-   `CompilerOptions`  
  
-   `Debug`  
  
-   `Description`  
  
-   `EnableTheming`  
  
-   `EnableViewState`  
  
-   `Explicit`  
  
-   `Inherits`  
  
-   `Language`  
  
-   `LinePragmas`  
  
-   `MasterPageFile`  
  
-   `Src`  
  
-   `Strict`  
  
-   `WarningLevel`  
  
 <span data-ttu-id="fd60e-128">母版页指令不重写各个内容页上的指令。</span><span class="sxs-lookup"><span data-stu-id="fd60e-128">Master page directives do not override the directives on individual content pages.</span></span>  
  
 <span data-ttu-id="fd60e-129">母版页最常以声明方式创建。</span><span class="sxs-lookup"><span data-stu-id="fd60e-129">Master pages are most often created declaratively.</span></span> <span data-ttu-id="fd60e-130">如果你想要以编程方式创建母版页，直接从派生<xref:System.Web.UI.MasterPage>类。</span><span class="sxs-lookup"><span data-stu-id="fd60e-130">If you want to create a master page programmatically, derive directly from the <xref:System.Web.UI.MasterPage> class.</span></span> <span data-ttu-id="fd60e-131">除了扩展<xref:System.Web.UI.MasterPage>类，您必须创建.master 文件，来直观地显示与已在源文件中调用的类关联的用户界面 (UI)。</span><span class="sxs-lookup"><span data-stu-id="fd60e-131">In addition to extending the <xref:System.Web.UI.MasterPage> class, you must create the .master file to visually display the user interface (UI) that is associated with the classes that you have invoked in your source file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd60e-132">在创建母版页通过首先创建您自己的类时，必须包括所有所需的页面使用的类的命名空间。</span><span class="sxs-lookup"><span data-stu-id="fd60e-132">When you create a master page by creating your own class first, you must include all namespaces that are required for the classes that are used by the page.</span></span>  
  
 <span data-ttu-id="fd60e-133">有关为母版页的详细信息，请参阅[ASP.NET 母版页](http://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b)。</span><span class="sxs-lookup"><span data-stu-id="fd60e-133">For more information about master pages, see [ASP.NET Master Pages](http://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd60e-134">本部分包含四个代码示例：</span><span class="sxs-lookup"><span data-stu-id="fd60e-134">This section contains four code examples:</span></span>  
  
-   <span data-ttu-id="fd60e-135">第一个代码示例演示如何以声明方式创建母版页。</span><span class="sxs-lookup"><span data-stu-id="fd60e-135">The first code example demonstrates how to create a master page declaratively.</span></span>  
  
-   <span data-ttu-id="fd60e-136">第二个代码示例表示内容页与母版页中第一个代码示例创建的。</span><span class="sxs-lookup"><span data-stu-id="fd60e-136">The second code example represents the content page that is associated with the master page that was created in the first code example.</span></span>  
  
-   <span data-ttu-id="fd60e-137">第三个代码示例演示如何将属性添加到母版页。</span><span class="sxs-lookup"><span data-stu-id="fd60e-137">The third code example demonstrates how to add a property to a master page.</span></span>  
  
-   <span data-ttu-id="fd60e-138">第四个代码示例演示如何使用内容页来访问在主页上的公共属性。</span><span class="sxs-lookup"><span data-stu-id="fd60e-138">The fourth code example demonstrates how to use a content page to access a public property on the master page.</span></span>  
  
 <span data-ttu-id="fd60e-139">下面的示例演示如何以声明方式创建母版页，以及如何使用内容页向它添加一些内容。</span><span class="sxs-lookup"><span data-stu-id="fd60e-139">The following example demonstrates how to create a master page declaratively and to add some content to it using a content page.</span></span> <span data-ttu-id="fd60e-140">第一个的 Web 页是名为的.master 页`MasterPageSample_1.master`。</span><span class="sxs-lookup"><span data-stu-id="fd60e-140">The first Web page is the .master page named `MasterPageSample_1.master`.</span></span>  
  
```csharp  
<%@ Master Language="C#" %>  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server" />  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server" />  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 <span data-ttu-id="fd60e-141">下面的示例表示与关联的内容页`MasterPageSample_1.master`。</span><span class="sxs-lookup"><span data-stu-id="fd60e-141">The following example represents the content page that is associated with `MasterPageSample_1.master`.</span></span> <span data-ttu-id="fd60e-142">它包含<xref:System.Web.UI.WebControls.Content>控制和标识<xref:System.Web.UI.WebControls.ContentPlaceHolder>内容使用与关联的控件<xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="fd60e-142">It contains a <xref:System.Web.UI.WebControls.Content> control and identifies the <xref:System.Web.UI.WebControls.ContentPlaceHolder> control that the content is associated with by using the <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> property.</span></span>  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/MasterPageSample_1cs.master" Title="Content Page"%>  
  
<asp:content   
    runat="server"  
    contentplaceholderid="ContentPlaceHolder1" >Hello, Master Pages!</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/MasterPageSample_1vb.master" Title="Content Page"%>  
  
<asp:content   
    runat="server"  
    contentplaceholderid="ContentPlaceHolder1" >Hello, Master Pages!</asp:content>  
```  
  
 <span data-ttu-id="fd60e-143">下面的示例演示如何将属性添加到母版页。</span><span class="sxs-lookup"><span data-stu-id="fd60e-143">The following example demonstrates how to add a property to a master page.</span></span> <span data-ttu-id="fd60e-144">`ClassName`特性用于将主该页命名为。</span><span class="sxs-lookup"><span data-stu-id="fd60e-144">The `ClassName` attribute is used to name the master page.</span></span>  
  
```csharp  
<%@ Master Language="C#" ClassName="MasterExample" %>  
  
<script runat="server">  
        public string SiteName  
        {  
            get { return "My Site Name"; }  
        }  
</script>  
  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" ClassName="MasterExample" %>  
  
<script runat="server">  
  Public ReadOnly Property SiteName() As String  
    Get  
      Return "My Site Name"  
    End Get  
  End Property  
  
</script>  
  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 <span data-ttu-id="fd60e-145">下面的示例演示如何使用内容页访问的公共属性`SiteName`在前面的代码示例的主控页上。</span><span class="sxs-lookup"><span data-stu-id="fd60e-145">The following example shows how to use a content page to access the public property `SiteName` on the master page in the preceding code example.</span></span>  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/MasterPage.master" Title="MasterPage Example" %>  
  
<script runat="server">  
  protected void Page_Load(object sender, EventArgs e)  
  {  
    MasterExample m = (MasterExample)Page.Master;  
    mylabel.Text = m.SiteName;  
  }  
</script>  
  
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server">  
    Hello, Master Pages!  
    <asp:Label runat="server" Text="Label" ID="mylabel"></asp:Label>  
</asp:Content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/MasterPage.master" Title="MasterPage Example" %>  
  
<script runat="server">  
  
  Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)  
    Dim m As MasterExample = CType(Page.Master, MasterPage)  
    mylabel.Text = m.SiteName  
  End Sub  
</script>  
  
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server">  
    Hello, Master Pages!  
    <asp:Label runat="server" Text="Label" ID="mylabel"></asp:Label>  
</asp:Content>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.MasterPageControlBuilder" />
    <altmember cref="T:System.Web.UI.WebControls.ContentPlaceHolder" />
    <altmember cref="T:System.Web.UI.WebControls.Content" />
    <altmember cref="T:System.Web.UI.UserControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MasterPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MasterPage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fd60e-146">创建 <see cref="T:System.Web.UI.MasterPage" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-146">Creates a new instance of the <see cref="T:System.Web.UI.MasterPage" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContentTemplate">
      <MemberSignature Language="C#" Value="protected internal void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddContentTemplate(string templateName, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddContentTemplate (templateName As String, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddContentTemplate(System::String ^ templateName, System::Web::UI::ITemplate ^ template);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" />
      </Parameters>
      <Docs>
        <param name="templateName">
          <span data-ttu-id="fd60e-147">
            <see cref="T:System.Web.UI.WebControls.Content" /> 的唯一名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-147">A unique name for the <see cref="T:System.Web.UI.WebControls.Content" />.</span>
          </span>
        </param>
        <param name="template">
          <span data-ttu-id="fd60e-148">
            <see cref="T:System.Web.UI.WebControls.Content" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-148">The <see cref="T:System.Web.UI.WebControls.Content" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd60e-149">将 <see cref="T:System.Web.UI.WebControls.Content" /> 控件添加到 <see cref="P:System.Web.UI.MasterPage.ContentTemplates" /> 字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-149">Adds a <see cref="T:System.Web.UI.WebControls.Content" /> control to the <see cref="P:System.Web.UI.MasterPage.ContentTemplates" /> dictionary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd60e-150">可以添加派生的母版页类<xref:System.Web.UI.WebControls.Content>控件添加到<xref:System.Web.UI.MasterPage.ContentTemplates%2A>字典使用<xref:System.Web.UI.MasterPage.AddContentTemplate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fd60e-150">Derived master page classes can add <xref:System.Web.UI.WebControls.Content> controls to the <xref:System.Web.UI.MasterPage.ContentTemplates%2A> dictionary using the <xref:System.Web.UI.MasterPage.AddContentTemplate%2A> method.</span></span> <span data-ttu-id="fd60e-151">派生的类型通常不重写<xref:System.Web.UI.MasterPage.AddContentTemplate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fd60e-151">Derived types do not typically override the <xref:System.Web.UI.MasterPage.AddContentTemplate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="fd60e-152">在 <see cref="P:System.Web.UI.MasterPage.ContentTemplates" /> 字典中已经存在具有相同名称的 <see cref="T:System.Web.UI.WebControls.Content" /> 控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-152">A <see cref="T:System.Web.UI.WebControls.Content" /> control with the same name already exists in the <see cref="P:System.Web.UI.MasterPage.ContentTemplates" /> dictionary.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.MasterPage.ContentTemplates" />
      </Docs>
    </Member>
    <Member MemberName="ContentPlaceHolders">
      <MemberSignature Language="C#" Value="protected internal System.Collections.IList ContentPlaceHolders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList ContentPlaceHolders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.ContentPlaceHolders" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ContentPlaceHolders As IList" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::IList ^ ContentPlaceHolders { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd60e-153">获取母版页用来定义不同内容区域的 <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> 控件的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-153">Gets a list of <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> controls that the master page uses to define different content regions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd60e-154">
            <see cref="T:System.Collections.IList" /> 控件的 <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" />，母版页使用它作为内容页中的 <see cref="T:System.Web.UI.WebControls.Content" /> 控件的占位符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-154">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> controls that the master page uses as placeholders for <see cref="T:System.Web.UI.WebControls.Content" /> controls found in content pages.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd60e-155">派生母版页类访问<xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A>属性可以列出当前<xref:System.Web.UI.WebControls.ContentPlaceHolder>由主机包含的控件。</span><span class="sxs-lookup"><span data-stu-id="fd60e-155">Derived master page classes access the <xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A> property to list the current <xref:System.Web.UI.WebControls.ContentPlaceHolder> controls that are contained by the master.</span></span> <span data-ttu-id="fd60e-156">派生的类型通常不重写<xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="fd60e-156">Derived types do not typically override the <xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplates">
      <MemberSignature Language="C#" Value="protected internal System.Collections.IDictionary ContentTemplates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary ContentTemplates" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.ContentTemplates" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ContentTemplates As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::IDictionary ^ ContentTemplates { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd60e-157">获取与母版页相关联的内容控件的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-157">Gets a list of content controls that are associated with the master page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd60e-158">与母版页相关联的内容控件的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-158">An <see cref="T:System.Collections.IList" /> of content controls associated with the master page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd60e-159">派生母版页类访问<xref:System.Web.UI.MasterPage.ContentTemplates%2A>属性来检索当前<xref:System.Web.UI.WebControls.Content>控件相同，如由关联的内容页。</span><span class="sxs-lookup"><span data-stu-id="fd60e-159">Derived master page classes access the <xref:System.Web.UI.MasterPage.ContentTemplates%2A> property to retrieve the current <xref:System.Web.UI.WebControls.Content> controls, as defined by associated content pages.</span></span> <span data-ttu-id="fd60e-160">派生的类型通常不重写<xref:System.Web.UI.MasterPage.ContentTemplates%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="fd60e-160">Derived types do not typically override the <xref:System.Web.UI.MasterPage.ContentTemplates%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateInContentPlaceHolder">
      <MemberSignature Language="C#" Value="public void InstantiateInContentPlaceHolder (System.Web.UI.Control contentPlaceHolder, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstantiateInContentPlaceHolder(class System.Web.UI.Control contentPlaceHolder, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstantiateInContentPlaceHolder (contentPlaceHolder As Control, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstantiateInContentPlaceHolder(System::Web::UI::Control ^ contentPlaceHolder, System::Web::UI::ITemplate ^ template);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentPlaceHolder" Type="System.Web.UI.Control" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" />
      </Parameters>
      <Docs>
        <param name="contentPlaceHolder">
          <span data-ttu-id="fd60e-161">表示内容容器的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-161">The control that represents the container of the content.</span>
          </span>
        </param>
        <param name="template">
          <span data-ttu-id="fd60e-162">要使用的 <see cref="T:System.Web.UI.WebControls.Content" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-162">The <see cref="T:System.Web.UI.WebControls.Content" /> instance to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fd60e-163">提供一个方法将当前模板控件设置为拥有母版页的页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-163">Provides a method to set the current template control to a page that owns the master page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Master">
      <MemberSignature Language="C#" Value="public System.Web.UI.MasterPage Master { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.MasterPage Master" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.Master" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Master As MasterPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::MasterPage ^ Master { System::Web::UI::MasterPage ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.MasterPage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd60e-164">获取嵌套母版页方案中当前母版页的父级母版页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-164">Gets the parent master page of the current master in nested master pages scenarios.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd60e-165">当前母版页的父级母版页；如果当前母版页没有父级，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-165">The master page that is the parent of the current master page; otherwise, <see langword="null" />, if the current master page has no parent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd60e-166"><xref:System.Web.UI.MasterPage.Master%2A>属性是只读的因为无法在运行时生成母版页层次结构。</span><span class="sxs-lookup"><span data-stu-id="fd60e-166">The <xref:System.Web.UI.MasterPage.Master%2A> property is read-only, because master page hierarchies cannot be built at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd60e-167">本部分包含三个代码示例。</span><span class="sxs-lookup"><span data-stu-id="fd60e-167">This section contains three code examples.</span></span> <span data-ttu-id="fd60e-168">第一个代码示例演示如何创建嵌套的母版页`.`第二个代码示例演示如何引用第一个代码示例中创建的母版页。</span><span class="sxs-lookup"><span data-stu-id="fd60e-168">The first code example demonstrates how to create a nested master page`.` The second code example demonstrates how to reference the master page that was created in the first code example.</span></span> <span data-ttu-id="fd60e-169">第三个代码示例演示如何使用内容的页引用第二个代码示例中创建的母版页。</span><span class="sxs-lookup"><span data-stu-id="fd60e-169">The third code example demonstrates how to use a content page to reference the master page that was created in the second code example.</span></span>  
  
 <span data-ttu-id="fd60e-170">下面的代码示例演示如何创建嵌套的母版页和表示名为父母版页`ParentMasterPage_1`。</span><span class="sxs-lookup"><span data-stu-id="fd60e-170">The following code example demonstrates how to create a nested master page and represents the parent master page named `ParentMasterPage_1`.</span></span>  
  
```csharp  
<%@ Master Language="C#" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 <span data-ttu-id="fd60e-171">下面的代码示例演示如何使用一个名为的嵌套 master 页`ChildMasterPage_1`引用已在前面的代码示例中创建的主页面。</span><span class="sxs-lookup"><span data-stu-id="fd60e-171">The following code example demonstrates how to use a nested master page named `ChildMasterPage_1` that references the master page that was created in the preceding code example.</span></span>  
  
```csharp  
<%@ Master Language="C#" MasterPageFile="~/ParentMasterPage_1cs.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
```vb  
<%@ Master Language="VB" MasterPageFile="~/ParentMasterPage_1vb.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
 <span data-ttu-id="fd60e-172">下面的代码示例演示如何使用一个名为的内容页`ContentPage`引用`ChildMasterPage_1`前面的代码示例中所创建。</span><span class="sxs-lookup"><span data-stu-id="fd60e-172">The following code example demonstrates how to use a content page named `ContentPage` that references the `ChildMasterPage_1` that was created in the preceding code example.</span></span>  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/ChildMasterPage_1cs.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/ChildMasterPage_1vb.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MasterPageFile">
      <MemberSignature Language="C#" Value="public string MasterPageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MasterPageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.MasterPageFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MasterPageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MasterPageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fd60e-173">获取或设置包含当前内容的母版页的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-173">Gets or sets the name of the master page that contains the current content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fd60e-174">当前母版页的父级母版页的名称；如果当前母版页没有父级，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-174">The name of the master page that is the parent of the current master page; otherwise, <see langword="null" />, if the current master page has no parent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fd60e-175">本部分包含三个代码示例。</span><span class="sxs-lookup"><span data-stu-id="fd60e-175">This section contains three code examples.</span></span> <span data-ttu-id="fd60e-176">第一个代码示例演示如何创建嵌套的母版页`.`第二个代码示例演示如何引用第一个代码示例中创建的母版页。</span><span class="sxs-lookup"><span data-stu-id="fd60e-176">The first code example demonstrates how to create a nested master page`.` The second code example demonstrates how to reference the master page that was created in the first code example.</span></span> <span data-ttu-id="fd60e-177">第三个代码示例演示如何使用内容的页引用第二个代码示例中创建的母版页。</span><span class="sxs-lookup"><span data-stu-id="fd60e-177">The third code example demonstrates how to use a content page to reference the master page that was created in the second code example.</span></span>  
  
 <span data-ttu-id="fd60e-178">下面的代码示例演示如何创建嵌套的母版页和表示名为父母版页`ParentMasterPage_1`。</span><span class="sxs-lookup"><span data-stu-id="fd60e-178">The following code example demonstrates how to create a nested master page and represents the parent master page named `ParentMasterPage_1`.</span></span>  
  
```csharp  
<%@ Master Language="C#" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 <span data-ttu-id="fd60e-179">下面的代码示例演示如何使用一个名为的嵌套 master 页`ChildMasterPage_1`引用已在前面的代码示例中创建的主页面。</span><span class="sxs-lookup"><span data-stu-id="fd60e-179">The following code example demonstrates how to use a nested master page named `ChildMasterPage_1` that references the master page that was created in the preceding code example.</span></span>  
  
```csharp  
<%@ Master Language="C#" MasterPageFile="~/ParentMasterPage_1cs.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
```vb  
<%@ Master Language="VB" MasterPageFile="~/ParentMasterPage_1vb.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
 <span data-ttu-id="fd60e-180">下面的代码示例演示如何使用一个名为的内容页`ContentPage`引用`ChildMasterPage_1`前面的代码示例中所创建。</span><span class="sxs-lookup"><span data-stu-id="fd60e-180">The following code example demonstrates how to use a content page named `ContentPage` that references the `ChildMasterPage_1` that was created in the preceding code example.</span></span>  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/ChildMasterPage_1cs.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/ChildMasterPage_1vb.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fd60e-181">
            <see cref="P:System.Web.UI.MasterPage.MasterPageFile" /> 属性只能在 <see cref="E:System.Web.UI.Page.PreInit" /> 事件中或之前设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fd60e-181">The <see cref="P:System.Web.UI.MasterPage.MasterPageFile" /> property can only be set in or before the <see cref="E:System.Web.UI.Page.PreInit" /> event.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>