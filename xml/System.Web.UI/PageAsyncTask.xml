<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PageAsyncTask.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac536cc8e3f70ac39686797a62234cd83eb5704a5b4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36cc8e3f70ac39686797a62234cd83eb5704a5b4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.PageAsyncTask">
          <source>Contains information about an asynchronous task registered to a page.</source>
          <target state="translated">包含有关注册到页的异步任务的信息。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.PageAsyncTask">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</source>
          <target state="translated">ASP.NET 版本 2.0，可注册到页上的多个任务和呈现页之前以异步方式运行。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</source>
          <target state="translated">你可能指定是否这是一个慢速过程并且您不希望其他进程占用执行时，以异步方式运行任务。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The asynchronous tasks can be executed in parallel or sequentially.</source>
          <target state="translated">并行或按顺序，可以执行异步任务。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> object must be registered to the page through the <ph id="ph2">&lt;xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt;</ph> method.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph>对象必须注册到页中，通过<ph id="ph2">&lt;xref:System.Web.UI.Page.RegisterAsyncTask%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The page itself does not have to be processed asynchronously to execute asynchronous tasks.</source>
          <target state="translated">页面本身不需要以异步方式处理执行异步任务。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>You can set the <ph id="ph1">`Async`</ph> attribute to either <ph id="ph2">`true`</ph> (as shown in the following code example) or <ph id="ph3">`false`</ph> on the page directive and the asynchronous tasks will still be processed asynchronously:</source>
          <target state="translated">你可以设置<ph id="ph1">`Async`</ph>属性为<ph id="ph2">`true`</ph>（如下面的代码示例中所示） 或<ph id="ph3">`false`</ph>在页面指令和异步任务将仍处理以异步方式：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>When the <ph id="ph1">`Async`</ph> attribute is set to <ph id="ph2">`false`</ph>, the thread that executes the page will be blocked until all asynchronous tasks are complete.</source>
          <target state="translated">当<ph id="ph1">`Async`</ph>属性设置为<ph id="ph2">`false`</ph>，将阻止将页执行的线程，直到所有异步任务都已完成。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>Any asynchronous tasks registered before the <ph id="ph1">&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;</ph> event will be executed automatically by the page if they have not already been executed.</source>
          <target state="translated">之前注册的任何异步任务<ph id="ph1">&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;</ph>事件将自动执行的页面如果它们已尚未执行。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>Those asynchronous tasks registered after the <ph id="ph1">&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;</ph> event must be executed explicitly through the <ph id="ph2">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</ph> method.</source>
          <target state="translated">注册后的异步任务<ph id="ph1">&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;</ph>必须显式通过执行事件<ph id="ph2">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</ph> method can also be used to start tasks before the <ph id="ph2">&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</ph>方法还可以用于启动任务，然后<ph id="ph2">&lt;xref:System.Web.UI.Page.PreRenderComplete&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</ph> method executes all the registered asynchronous tasks on the page that have not been executed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A&gt;</ph>方法在未执行的页面上执行所有已注册的异步任务。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>By default, an asynchronous task will time out if it has not completed within 45 seconds.</source>
          <target state="translated">默认情况下，一个异步任务将超时，如果它未在 45 秒内完成。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>You can specify a different time-out value in either the Web.config file or the page directive.</source>
          <target state="translated">你可以在 Web.config 文件或页面指令中指定一个不同的超时值。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The <ph id="ph1">`&lt;pages&gt;`</ph> section of the Web.config file contains an <ph id="ph2">`asyncTimeout`</ph> attribute, as shown below.</source>
          <target state="translated"><ph id="ph1">`&lt;pages&gt;`</ph> Web.config 文件的部分包含<ph id="ph2">`asyncTimeout`</ph>属性，如下所示。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The page directive contains an <ph id="ph1">`AsyncTimeout`</ph> attribute.</source>
          <target state="translated">Page 指令包含<ph id="ph1">`AsyncTimeout`</ph>属性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>The following code example registers three asynchronous tasks to a page and executes them in parallel.</source>
          <target state="translated">下面的代码示例注册到页上的三个异步任务，并以并行方式执行它们。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.PageAsyncTask">
          <source>Each task calls a method that merely causes the thread to sleep for 5 seconds.</source>
          <target state="translated">每个任务调用只是导致线程休眠 5 秒钟的方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Web.UI.PageAsyncTask">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>An event handler.</source>
          <target state="translated">事件处理程序。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> class using an event handler that enables the task to be canceled.</source>
          <target state="translated">使用能取消任务的事件处理程序初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>This constructor wraps a <ph id="ph1">&lt;xref:System.Web.TaskEventHandler&gt;</ph> delegate so that the <ph id="ph2">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> object can integrate asynchronous code (based on <ph id="ph3">&lt;xref:System.Threading.Tasks.Task&gt;</ph> objects) with the existing ASP.NET Web Forms asynchronous pages feature.</source>
          <target state="translated">此构造函数包装<ph id="ph1">&lt;xref:System.Web.TaskEventHandler&gt;</ph>委托以便<ph id="ph2">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph>对象可以将集成异步代码 (基于<ph id="ph3">&lt;xref:System.Threading.Tasks.Task&gt;</ph>对象) 与现有的 ASP.NET Web 窗体异步页功能。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>ASP.NET will signal the <ph id="ph1">&lt;xref:System.Threading.CancellationToken&gt;</ph> object that is passed to a <ph id="ph2">&lt;xref:System.Web.TaskEventHandler&gt;</ph> delegate for cancellation based on the <ph id="ph3">&lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;</ph> attribute set in the <ph id="ph4">`@ Page`</ph> directive of the Web page.</source>
          <target state="translated">将指示 ASP.NET<ph id="ph1">&lt;xref:System.Threading.CancellationToken&gt;</ph>对象传递给<ph id="ph2">&lt;xref:System.Web.TaskEventHandler&gt;</ph>取消基于委托<ph id="ph3">&lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;</ph>属性中设置<ph id="ph4">`@ Page`</ph>网页上的指令。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;</ph> value has been reached, the <ph id="ph2">&lt;xref:System.Threading.CancellationToken&gt;</ph> object will be signaled.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Web.UI.Page.AsyncTimeout%2A&gt;</ph>值已达到，<ph id="ph2">&lt;xref:System.Threading.CancellationToken&gt;</ph>将用信号通知对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>The <ph id="ph1">`CancellationToken`</ph> parameter must be passed to any asynchronous APIs that are called by your implementation of the <ph id="ph2">&lt;xref:System.Web.TaskEventHandler&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">`CancellationToken`</ph>必须将参数传递给调用由您的实现的任何异步 Api<ph id="ph2">&lt;xref:System.Web.TaskEventHandler&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})">
          <source>An event handler.</source>
          <target state="translated">事件处理程序。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> class using an event handler that enables the task to be handled.</source>
          <target state="translated">使用能处理任务的事件处理程序初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The handler to call when beginning an asynchronous task.</source>
          <target state="translated">当异步任务开始时要调用的处理程序。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The handler to call when the task is completed successfully within the time-out period.</source>
          <target state="translated">当任务在超时期内成功完成时要调用的处理程序。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The handler to call when the task is not completed successfully within the time-out period.</source>
          <target state="translated">当任务未在超时期内成功完成时要调用的处理程序。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The object that represents the state of the task.</source>
          <target state="translated">表示任务状态的对象。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> class using the default value for executing in parallel.</source>
          <target state="translated">使用并行执行的默认值初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>This implementation of the constructor sets the <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> property to <ph id="ph2">`false`</ph> so the asynchronous task is not processed in parallel with other tasks on the page.</source>
          <target state="translated">此实现的构造函数集<ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph>属性<ph id="ph2">`false`</ph>以便与页上的其他任务并行不处理异步任务。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="beginHandler" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="endHandler" /&gt;</ph> parameter is not specified.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="beginHandler" /&gt;</ph> 参数或 <ph id="ph2">&lt;paramref name="endHandler" /&gt;</ph> 参数未指定。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The handler to call when beginning an asynchronous task.</source>
          <target state="translated">当异步任务开始时要调用的处理程序。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The handler to call when the task is completed successfully within the time-out period.</source>
          <target state="translated">当任务在超时期内成功完成时要调用的处理程序。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The handler to call when the task is not completed successfully within the time-out period.</source>
          <target state="translated">当任务未在超时期内成功完成时要调用的处理程序。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The object that represents the state of the task.</source>
          <target state="translated">表示任务状态的对象。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The value that indicates whether the task can be processed in parallel with other tasks.</source>
          <target state="translated">指示任务能否与其他任务并行处理的值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> class using the specified value for executing in parallel.</source>
          <target state="translated">使用并行执行的指定值初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.PageAsyncTask" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</source>
          <target state="translated">此实现的构造函数，可设置是否将与页上的其他任务并行处理异步任务。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The following code example creates three asynchronous tasks that are processed in parallel to each other.</source>
          <target state="translated">下面的代码示例创建与每个其他并行处理的三个异步任务。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>This example is part of a larger example found in the <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> class overview.</source>
          <target state="translated">此示例摘自更大的示例中找到<ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph>类概述。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="beginHandler" /&gt;</ph> parameter or <ph id="ph2">&lt;paramref name="endHandler" /&gt;</ph> parameter is not specified.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="beginHandler" /&gt;</ph> 参数或 <ph id="ph2">&lt;paramref name="endHandler" /&gt;</ph> 参数未指定。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageAsyncTask.BeginHandler">
          <source>Gets the method to call when beginning an asynchronous task.</source>
          <target state="translated">获取当异步任务开始时要调用的方法。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.BeginHandler">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> delegate that represents the method to call when beginning the asynchronous task.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> 委托，表示当异步任务开始时要调用的方法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.BeginHandler">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.BeginHandler%2A&gt;</ph> delegate is set in the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.BeginHandler%2A&gt;</ph>构造函数中设置委托。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.BeginHandler">
          <source>The following code example registers three asynchronous tasks to a page and executes them in parallel.</source>
          <target state="translated">下面的代码示例注册到页上的三个异步任务，并以并行方式执行它们。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.BeginHandler">
          <source>Each task calls a method that merely causes the thread to sleep for 5 seconds.</source>
          <target state="translated">每个任务调用只是导致线程休眠 5 秒钟的方法。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.BeginHandler">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.BeginHandler%2A&gt;</ph> delegate is specified for each task.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.BeginHandler%2A&gt;</ph>委托指定每个任务。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageAsyncTask.EndHandler">
          <source>Gets the method to call when the task completes successfully within the time-out period.</source>
          <target state="translated">获取当任务在超时期内成功完成时要调用的方法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.EndHandler">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> delegate that represents the method to call when the task completes successfully within the time-out period.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> 委托，表示当任务在超时期内成功完成时要调用的方法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.EndHandler">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.EndHandler%2A&gt;</ph> delegate is set in the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.EndHandler%2A&gt;</ph>构造函数中设置委托。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.EndHandler">
          <source>The following code example registers three asynchronous tasks to a page and executes them in parallel.</source>
          <target state="translated">下面的代码示例注册到页上的三个异步任务，并以并行方式执行它们。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.EndHandler">
          <source>Each task calls a method that merely causes the thread to sleep for 5 seconds.</source>
          <target state="translated">每个任务调用只是导致线程休眠 5 秒钟的方法。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.EndHandler">
          <source>An <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.EndHandler%2A&gt;</ph> delegate is specified for each task.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.EndHandler%2A&gt;</ph>委托指定每个任务。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>Gets a value that indicates whether the task can be processed in parallel with other tasks.</source>
          <target state="translated">获取一个值，该值指示任务能否与其他任务并行处理。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the task should be processed in parallel with other tasks; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果任务应当与其他任务并行处理，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> property is set in the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph>构造函数中设置属性。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>When multiple tasks are registered in a page and the <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, then those tasks are processed concurrently.</source>
          <target state="translated">多个任务在页中的注册时与<ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph>属性设置为<ph id="ph2">`true`</ph>，则这些任务进行并发处理。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>However, if the <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, then those tasks are processed sequentially.</source>
          <target state="translated">但是，如果<ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph>属性设置为<ph id="ph2">`false`</ph>，然后按顺序处理这些任务。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, both tasks will complete in 5 seconds.</source>
          <target state="translated">例如，如果一个页包含这两个异步任务，每个需要完成的 5 秒和<ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph>设置为<ph id="ph2">`true`</ph>，这两项任务将在 5 秒内完成。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>If <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph> is set to <ph id="ph2">`false`</ph> for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A&gt;</ph>设置为<ph id="ph2">`false`</ph>这些相同，这两个任务，则第一个任务将在 5 秒内完成和第二个任务将完成的第一个任务完成后的 5 秒。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>The following code example defines three asynchronous tasks that are each set to be processed in parallel.</source>
          <target state="translated">下面的代码示例定义是并行处理每个组的三个异步任务。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.ExecuteInParallel">
          <source>This example is part of a larger example found in the <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> class overview.</source>
          <target state="translated">此示例摘自更大的示例中找到<ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph>类概述。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageAsyncTask.State">
          <source>Gets an object that represents the state of the task.</source>
          <target state="translated">获取表示任务状态的对象。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.State">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the state of the task.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，表示任务状态。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.State">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.State%2A&gt;</ph> property is set in the constructor and cannot be modified during execution of the asynchronous task.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.State%2A&gt;</ph>属性构造函数中设置和异步任务的执行期间无法修改。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.State">
          <source>You can differentiate asynchronous tasks in a page by assigning unique string values to their respective <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.State%2A&gt;</ph> properties.</source>
          <target state="translated">你可以通过将唯一的字符串值分配到其各自区分在页中的异步任务<ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.State%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.State">
          <source>The following code example creates three asynchronous tasks and gives them unique values for their <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.State%2A&gt;</ph> properties.</source>
          <target state="translated">下面的代码示例创建三个异步任务并将这些唯一值其<ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.State%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.State">
          <source>This example is part of a larger example found in the <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph> class overview.</source>
          <target state="translated">此示例摘自更大的示例中找到<ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask&gt;</ph>类概述。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Web.UI.PageAsyncTask.TimeoutHandler">
          <source>Gets the method to call when the task does not complete successfully within the time-out period.</source>
          <target state="translated">获取当任务未在超时期内成功完成时要调用的方法。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.TimeoutHandler">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> delegate that represents the method to call when the task does not complete successfully within the time-out period.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> 委托，表示当任务未在超时期内成功完成时要调用的方法。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.TimeoutHandler">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A&gt;</ph> delegate is set in the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A&gt;</ph>构造函数中设置委托。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.TimeoutHandler">
          <source>The following code example registers three asynchronous tasks to a page and executes them in parallel.</source>
          <target state="translated">下面的代码示例注册到页上的三个异步任务，并以并行方式执行它们。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.TimeoutHandler">
          <source>Each task calls a method that merely causes the thread to sleep for 5 seconds.</source>
          <target state="translated">每个任务调用只是导致线程休眠 5 秒钟的方法。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.PageAsyncTask.TimeoutHandler">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A&gt;</ph> delegate is specified for each task.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A&gt;</ph>委托指定每个任务。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>