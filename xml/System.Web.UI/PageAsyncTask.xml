<Type Name="PageAsyncTask" FullName="System.Web.UI.PageAsyncTask">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36cc8e3f70ac39686797a62234cd83eb5704a5b4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PageAsyncTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageAsyncTask extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageAsyncTask" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageAsyncTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAsyncTask sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b4eab-101">包含有关注册到页的异步任务的信息。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4eab-101">Contains information about an asynchronous task registered to a page.</span>
      </span>
      <span data-ttu-id="b4eab-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b4eab-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4eab-103">ASP.NET 版本 2.0，可注册到页上的多个任务和呈现页之前以异步方式运行。</span><span class="sxs-lookup"><span data-stu-id="b4eab-103">ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</span></span> <span data-ttu-id="b4eab-104">你可能指定是否这是一个慢速过程并且您不希望其他进程占用执行时，以异步方式运行任务。</span><span class="sxs-lookup"><span data-stu-id="b4eab-104">You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</span></span> <span data-ttu-id="b4eab-105">并行或按顺序，可以执行异步任务。</span><span class="sxs-lookup"><span data-stu-id="b4eab-105">The asynchronous tasks can be executed in parallel or sequentially.</span></span>  
  
 <span data-ttu-id="b4eab-106">A<xref:System.Web.UI.PageAsyncTask>对象必须注册到页中，通过<xref:System.Web.UI.Page.RegisterAsyncTask%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b4eab-106">A <xref:System.Web.UI.PageAsyncTask> object must be registered to the page through the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method.</span></span> <span data-ttu-id="b4eab-107">页面本身不需要以异步方式处理执行异步任务。</span><span class="sxs-lookup"><span data-stu-id="b4eab-107">The page itself does not have to be processed asynchronously to execute asynchronous tasks.</span></span> <span data-ttu-id="b4eab-108">你可以设置`Async`属性为`true`（如下面的代码示例中所示） 或`false`在页面指令和异步任务将仍处理以异步方式：</span><span class="sxs-lookup"><span data-stu-id="b4eab-108">You can set the `Async` attribute to either `true` (as shown in the following code example) or `false` on the page directive and the asynchronous tasks will still be processed asynchronously:</span></span>  
  
 `<%@ Page Async="true" %>`  
  
 <span data-ttu-id="b4eab-109">当`Async`属性设置为`false`，将阻止将页执行的线程，直到所有异步任务都已完成。</span><span class="sxs-lookup"><span data-stu-id="b4eab-109">When the `Async` attribute is set to `false`, the thread that executes the page will be blocked until all asynchronous tasks are complete.</span></span>  
  
 <span data-ttu-id="b4eab-110">之前注册的任何异步任务<xref:System.Web.UI.Page.PreRenderComplete>事件将自动执行的页面如果它们已尚未执行。</span><span class="sxs-lookup"><span data-stu-id="b4eab-110">Any asynchronous tasks registered before the <xref:System.Web.UI.Page.PreRenderComplete> event will be executed automatically by the page if they have not already been executed.</span></span> <span data-ttu-id="b4eab-111">注册后的异步任务<xref:System.Web.UI.Page.PreRenderComplete>必须显式通过执行事件<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b4eab-111">Those asynchronous tasks registered after the <xref:System.Web.UI.Page.PreRenderComplete> event must be executed explicitly through the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="b4eab-112"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>方法还可以用于启动任务，然后<xref:System.Web.UI.Page.PreRenderComplete>事件。</span><span class="sxs-lookup"><span data-stu-id="b4eab-112">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can also be used to start tasks before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="b4eab-113"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>方法在未执行的页面上执行所有已注册的异步任务。</span><span class="sxs-lookup"><span data-stu-id="b4eab-113">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method executes all the registered asynchronous tasks on the page that have not been executed.</span></span>  
  
 <span data-ttu-id="b4eab-114">默认情况下，一个异步任务将超时，如果它未在 45 秒内完成。</span><span class="sxs-lookup"><span data-stu-id="b4eab-114">By default, an asynchronous task will time out if it has not completed within 45 seconds.</span></span> <span data-ttu-id="b4eab-115">你可以在 Web.config 文件或页面指令中指定一个不同的超时值。</span><span class="sxs-lookup"><span data-stu-id="b4eab-115">You can specify a different time-out value in either the Web.config file or the page directive.</span></span> <span data-ttu-id="b4eab-116">`<pages>` Web.config 文件的部分包含`asyncTimeout`属性，如下所示。</span><span class="sxs-lookup"><span data-stu-id="b4eab-116">The `<pages>` section of the Web.config file contains an `asyncTimeout` attribute, as shown below.</span></span>  
  
 `<system.web>`  
  
 `<pages asyncTimeout="30">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 <span data-ttu-id="b4eab-117">Page 指令包含`AsyncTimeout`属性。</span><span class="sxs-lookup"><span data-stu-id="b4eab-117">The page directive contains an `AsyncTimeout` attribute.</span></span>  
  
 `<%@ Page AsyncTimeout="30" %>`  
  
   
  
## Examples  
 <span data-ttu-id="b4eab-118">下面的代码示例注册到页上的三个异步任务，并以并行方式执行它们。</span><span class="sxs-lookup"><span data-stu-id="b4eab-118">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="b4eab-119">每个任务调用只是导致线程休眠 5 秒钟的方法。</span><span class="sxs-lookup"><span data-stu-id="b4eab-119">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b4eab-120">初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-120">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="b4eab-121">事件处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-121">An event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4eab-122">使用能取消任务的事件处理程序初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-122">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4eab-123">此构造函数包装<xref:System.Web.TaskEventHandler>委托以便<xref:System.Web.UI.PageAsyncTask>对象可以将集成异步代码 (基于<xref:System.Threading.Tasks.Task>对象) 与现有的 ASP.NET Web 窗体异步页功能。</span><span class="sxs-lookup"><span data-stu-id="b4eab-123">This constructor wraps a <xref:System.Web.TaskEventHandler> delegate so that the <xref:System.Web.UI.PageAsyncTask> object can integrate asynchronous code (based on <xref:System.Threading.Tasks.Task> objects) with the existing ASP.NET Web Forms asynchronous pages feature.</span></span> <span data-ttu-id="b4eab-124">将指示 ASP.NET<xref:System.Threading.CancellationToken>对象传递给<xref:System.Web.TaskEventHandler>取消基于委托<xref:System.Web.UI.Page.AsyncTimeout%2A>属性中设置`@ Page`网页上的指令。</span><span class="sxs-lookup"><span data-stu-id="b4eab-124">ASP.NET will signal the <xref:System.Threading.CancellationToken> object that is passed to a <xref:System.Web.TaskEventHandler> delegate for cancellation based on the <xref:System.Web.UI.Page.AsyncTimeout%2A> attribute set in the `@ Page` directive of the Web page.</span></span> <span data-ttu-id="b4eab-125">当<xref:System.Web.UI.Page.AsyncTimeout%2A>值已达到，<xref:System.Threading.CancellationToken>将用信号通知对象。</span><span class="sxs-lookup"><span data-stu-id="b4eab-125">When the <xref:System.Web.UI.Page.AsyncTimeout%2A> value has been reached, the <xref:System.Threading.CancellationToken> object will be signaled.</span></span> <span data-ttu-id="b4eab-126">`CancellationToken`必须将参数传递给调用由您的实现的任何异步 Api<xref:System.Web.TaskEventHandler>类。</span><span class="sxs-lookup"><span data-stu-id="b4eab-126">The `CancellationToken` parameter must be passed to any asynchronous APIs that are called by your implementation of the <xref:System.Web.TaskEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="b4eab-127">事件处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-127">An event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4eab-128">使用能处理任务的事件处理程序初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-128">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be handled.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="b4eab-129">当异步任务开始时要调用的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-129">The handler to call when beginning an asynchronous task.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="b4eab-130">当任务在超时期内成功完成时要调用的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-130">The handler to call when the task is completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="timeoutHandler">
          <span data-ttu-id="b4eab-131">当任务未在超时期内成功完成时要调用的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-131">The handler to call when the task is not completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="b4eab-132">表示任务状态的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-132">The object that represents the state of the task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4eab-133">使用并行执行的默认值初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-133">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the default value for executing in parallel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4eab-134">此实现的构造函数集<xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A>属性`false`以便与页上的其他任务并行不处理异步任务。</span><span class="sxs-lookup"><span data-stu-id="b4eab-134">This implementation of the constructor sets the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property to `false` so the asynchronous task is not processed in parallel with other tasks on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4eab-135">
            <paramref name="beginHandler" /> 参数或 <paramref name="endHandler" /> 参数未指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-135">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object, executeInParallel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state, bool executeInParallel);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="executeInParallel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="b4eab-136">当异步任务开始时要调用的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-136">The handler to call when beginning an asynchronous task.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="b4eab-137">当任务在超时期内成功完成时要调用的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-137">The handler to call when the task is completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="timeoutHandler">
          <span data-ttu-id="b4eab-138">当任务未在超时期内成功完成时要调用的处理程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-138">The handler to call when the task is not completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="b4eab-139">表示任务状态的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-139">The object that represents the state of the task.</span>
          </span>
        </param>
        <param name="executeInParallel">
          <span data-ttu-id="b4eab-140">指示任务能否与其他任务并行处理的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-140">The value that indicates whether the task can be processed in parallel with other tasks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b4eab-141">使用并行执行的指定值初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-141">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the specified value for executing in parallel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4eab-142">此实现的构造函数，可设置是否将与页上的其他任务并行处理异步任务。</span><span class="sxs-lookup"><span data-stu-id="b4eab-142">This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4eab-143">下面的代码示例创建与每个其他并行处理的三个异步任务。</span><span class="sxs-lookup"><span data-stu-id="b4eab-143">The following code example creates three asynchronous tasks that are processed in parallel to each other.</span></span> <span data-ttu-id="b4eab-144">此示例摘自更大的示例中找到<xref:System.Web.UI.PageAsyncTask>类概述。</span><span class="sxs-lookup"><span data-stu-id="b4eab-144">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b4eab-145">
            <paramref name="beginHandler" /> 参数或 <paramref name="endHandler" /> 参数未指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-145">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4eab-146">获取当异步任务开始时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-146">Gets the method to call when beginning an asynchronous task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4eab-147">
            <see cref="T:System.Web.BeginEventHandler" /> 委托，表示当异步任务开始时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-147">A <see cref="T:System.Web.BeginEventHandler" /> delegate that represents the method to call when beginning the asynchronous task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4eab-148"><xref:System.Web.UI.PageAsyncTask.BeginHandler%2A>构造函数中设置委托。</span><span class="sxs-lookup"><span data-stu-id="b4eab-148">The <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4eab-149">下面的代码示例注册到页上的三个异步任务，并以并行方式执行它们。</span><span class="sxs-lookup"><span data-stu-id="b4eab-149">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="b4eab-150">每个任务调用只是导致线程休眠 5 秒钟的方法。</span><span class="sxs-lookup"><span data-stu-id="b4eab-150">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="b4eab-151">A<xref:System.Web.UI.PageAsyncTask.BeginHandler%2A>委托指定每个任务。</span><span class="sxs-lookup"><span data-stu-id="b4eab-151">A <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4eab-152">获取当任务在超时期内成功完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-152">Gets the method to call when the task completes successfully within the time-out period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4eab-153">
            <see cref="T:System.Web.EndEventHandler" /> 委托，表示当任务在超时期内成功完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-153">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task completes successfully within the time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4eab-154"><xref:System.Web.UI.PageAsyncTask.EndHandler%2A>构造函数中设置委托。</span><span class="sxs-lookup"><span data-stu-id="b4eab-154">The <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4eab-155">下面的代码示例注册到页上的三个异步任务，并以并行方式执行它们。</span><span class="sxs-lookup"><span data-stu-id="b4eab-155">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="b4eab-156">每个任务调用只是导致线程休眠 5 秒钟的方法。</span><span class="sxs-lookup"><span data-stu-id="b4eab-156">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="b4eab-157"><xref:System.Web.UI.PageAsyncTask.EndHandler%2A>委托指定每个任务。</span><span class="sxs-lookup"><span data-stu-id="b4eab-157">An <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInParallel">
      <MemberSignature Language="C#" Value="public bool ExecuteInParallel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExecuteInParallel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecuteInParallel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExecuteInParallel { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4eab-158">获取一个值，该值指示任务能否与其他任务并行处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-158">Gets a value that indicates whether the task can be processed in parallel with other tasks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4eab-159">如果任务应当与其他任务并行处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-159">
              <see langword="true" /> if the task should be processed in parallel with other tasks; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4eab-160"><xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A>构造函数中设置属性。</span><span class="sxs-lookup"><span data-stu-id="b4eab-160">The <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set in the constructor.</span></span> <span data-ttu-id="b4eab-161">多个任务在页中的注册时与<xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A>属性设置为`true`，则这些任务进行并发处理。</span><span class="sxs-lookup"><span data-stu-id="b4eab-161">When multiple tasks are registered in a page and the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `true`, then those tasks are processed concurrently.</span></span> <span data-ttu-id="b4eab-162">但是，如果<xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A>属性设置为`false`，然后按顺序处理这些任务。</span><span class="sxs-lookup"><span data-stu-id="b4eab-162">However, if the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `false`, then those tasks are processed sequentially.</span></span> <span data-ttu-id="b4eab-163">例如，如果一个页包含这两个异步任务，每个需要完成的 5 秒和<xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A>设置为`true`，这两项任务将在 5 秒内完成。</span><span class="sxs-lookup"><span data-stu-id="b4eab-163">For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `true`, both tasks will complete in 5 seconds.</span></span> <span data-ttu-id="b4eab-164">如果<xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A>设置为`false`这些相同，这两个任务，则第一个任务将在 5 秒内完成和第二个任务将完成的第一个任务完成后的 5 秒。</span><span class="sxs-lookup"><span data-stu-id="b4eab-164">If <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `false` for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4eab-165">下面的代码示例定义是并行处理每个组的三个异步任务。</span><span class="sxs-lookup"><span data-stu-id="b4eab-165">The following code example defines three asynchronous tasks that are each set to be processed in parallel.</span></span> <span data-ttu-id="b4eab-166">此示例摘自更大的示例中找到<xref:System.Web.UI.PageAsyncTask>类概述。</span><span class="sxs-lookup"><span data-stu-id="b4eab-166">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public object State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object State" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ State { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4eab-167">获取表示任务状态的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-167">Gets an object that represents the state of the task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4eab-168">
            <see cref="T:System.Object" />，表示任务状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-168">An <see cref="T:System.Object" /> that represents the state of the task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4eab-169"><xref:System.Web.UI.PageAsyncTask.State%2A>属性构造函数中设置和异步任务的执行期间无法修改。</span><span class="sxs-lookup"><span data-stu-id="b4eab-169">The <xref:System.Web.UI.PageAsyncTask.State%2A> property is set in the constructor and cannot be modified during execution of the asynchronous task.</span></span> <span data-ttu-id="b4eab-170">你可以通过将唯一的字符串值分配到其各自区分在页中的异步任务<xref:System.Web.UI.PageAsyncTask.State%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b4eab-170">You can differentiate asynchronous tasks in a page by assigning unique string values to their respective <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4eab-171">下面的代码示例创建三个异步任务并将这些唯一值其<xref:System.Web.UI.PageAsyncTask.State%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b4eab-171">The following code example creates three asynchronous tasks and gives them unique values for their <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span> <span data-ttu-id="b4eab-172">此示例摘自更大的示例中找到<xref:System.Web.UI.PageAsyncTask>类概述。</span><span class="sxs-lookup"><span data-stu-id="b4eab-172">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler TimeoutHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler TimeoutHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ TimeoutHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b4eab-173">获取当任务未在超时期内成功完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-173">Gets the method to call when the task does not complete successfully within the time-out period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b4eab-174">
            <see cref="T:System.Web.EndEventHandler" /> 委托，表示当任务未在超时期内成功完成时要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b4eab-174">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task does not complete successfully within the time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4eab-175"><xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A>构造函数中设置委托。</span><span class="sxs-lookup"><span data-stu-id="b4eab-175">The <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b4eab-176">下面的代码示例注册到页上的三个异步任务，并以并行方式执行它们。</span><span class="sxs-lookup"><span data-stu-id="b4eab-176">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="b4eab-177">每个任务调用只是导致线程休眠 5 秒钟的方法。</span><span class="sxs-lookup"><span data-stu-id="b4eab-177">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="b4eab-178">A<xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A>委托指定每个任务。</span><span class="sxs-lookup"><span data-stu-id="b4eab-178">A <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>