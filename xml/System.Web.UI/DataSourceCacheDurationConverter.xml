<Type Name="DataSourceCacheDurationConverter" FullName="System.Web.UI.DataSourceCacheDurationConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3365f8e00f6c6543b5c13aef04e8b32de0cf2712" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36577457" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataSourceCacheDurationConverter : System.ComponentModel.Int32Converter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataSourceCacheDurationConverter extends System.ComponentModel.Int32Converter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceCacheDurationConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataSourceCacheDurationConverter&#xA;Inherits Int32Converter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceCacheDurationConverter : System::ComponentModel::Int32Converter" />
  <TypeSignature Language="F#" Value="type DataSourceCacheDurationConverter = class&#xA;    inherit Int32Converter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Int32Converter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供能将 32 位带符号整数对象与数据源控件缓存持续时间表示形式相互转换的类型转换器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 支持通常缓存的 ASP.NET 数据源控件提供`CacheDuration`属性，你可以设置为的秒数控件会缓存数据。 值 0 表示"无限"在这些缓存上下文，和<xref:System.Web.UI.DataSourceCacheDurationConverter>类负责此显式转换。  
  
 不使用网页开发人员<xref:System.Web.UI.DataSourceCacheDurationConverter>类。 控件开发人员要开发支持缓存的数据源控件使用此类型转换器连同<xref:System.ComponentModel.TypeConverterAttribute>特性修饰表示缓存持续时间设置的一个自定义数据源控件的属性。  
  
   
  
## Examples  
 下面的代码示例演示如何用修饰支持缓存的数据源控件的属性<xref:System.ComponentModel.TypeConverterAttribute>属性。 在此示例中，数据源控件支持缓存的语义，并公开三个建模后其他 ASP.NET 数据源控件的属性： `EnableCaching`， `CacheDuration`，和`CacheExpirationPolicy`。 `CacheDuration`属性使用<xref:System.Web.UI.DataSourceCacheDurationConverter>类型转换器。  
  
 [!code-csharp[System.Web.UI.DataSourceCacheDurationConverter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataSourceCacheDurationConverter/CS/somedatasourcecdc.cs#1)]
 [!code-vb[System.Web.UI.DataSourceCacheDurationConverter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataSourceCacheDurationConverter/VB/somedatasourcecdc.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
    <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
    <altmember cref="T:System.ComponentModel.Int32Converter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceCacheDurationConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceCacheDurationConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dataSourceCacheDurationConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
        <param name="sourceType">
          <see cref="T:System.Type" />，表示转换器转换的类型。</param>
        <summary>确定 <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> 是否能将给定源类型的对象转换为 <see cref="T:System.Int32" /> 对象。</summary>
        <returns>如果此转换器能够执行该操作，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceCacheDurationConverter>类显式处理`string`类型。 否则，它会调用其基类， <xref:System.ComponentModel.Int32Converter>，以供判断。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dataSourceCacheDurationConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
        <param name="destinationType">表示要转换为的类型的<see cref="T:System.Type" />。</param>
        <summary>返回一个值，该值指示 <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> 实例是否可将对象转换为给定的目标类型。</summary>
        <returns>如果此转换器能够执行该操作，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceCacheDurationConverter>显式处理转换为`string`和<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>类型。 否则，它会调用其基类， <xref:System.ComponentModel.Int32Converter>，以供判断。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="dataSourceCacheDurationConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
        <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" />，指定用于表示该数字的区域性。</param>
        <param name="value">要转换的对象。</param>
        <summary>将指定对象转换为 <see cref="T:System.Int32" /> 对象。</summary>
        <returns>一个对象，表示转换后的值。 如果值参数中传入 <see langword="null" />，则返回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceCacheDurationConverter.ConvertFrom%2A?displayProperty=nameWithType>方法将<xref:System.String.Empty?displayProperty=nameWithType>字符串或字符串"无限"为值 0。 其他值将由基类， <xref:System.ComponentModel.Int32Converter>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="dataSourceCacheDurationConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
        <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" />，指定用于表示该数字的区域性。</param>
        <param name="value">要转换的对象。</param>
        <param name="destinationType">对象要转换为的类型。</param>
        <summary>将指定的对象转换为其他类型。</summary>
        <returns>一个对象，表示转换后的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceCacheDurationConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29>方法将 0 的有效的值转换为字符串"无限"。 其他值将由基类， <xref:System.ComponentModel.Int32Converter>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="dataSourceCacheDurationConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
        <summary>返回 <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> 实例设计用于的数据类型的标准值集合。</summary>
        <returns>
          <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />，包含的缓存持续时间为 0（表示“Infinite”）。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataSourceCacheDurationConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
        <summary>使用指定的上下文，指定从 <see cref="Overload:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValues" /> 方法返回的标准值集合是否为完全列表。</summary>
        <returns>在所有情况下均为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceCacheDurationConverter>类始终返回`false`，则指示<xref:System.ComponentModel.TypeConverter.StandardValuesCollection>从返回的集合<xref:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValues%2A>方法不是可能的值的穷举列表。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataSourceCacheDurationConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
        <summary>使用指定的上下文，指定 <see cref="T:System.Web.UI.DataSourceCacheDurationConverter" /> 对象是否支持可从列表中选取的标准值集。</summary>
        <returns>在所有情况下均为 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceCacheDurationConverter>对象始终返回`true`，则指示<xref:System.Web.UI.DataSourceCacheDurationConverter.GetStandardValues%2A>应调用方法以查找该转换器的一组公共值的支持。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>