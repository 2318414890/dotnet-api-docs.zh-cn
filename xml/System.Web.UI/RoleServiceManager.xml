<Type Name="RoleServiceManager" FullName="System.Web.UI.RoleServiceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44d1ce2a38368081a5e0123c1c7e33356df17d4c" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55340709" /></Metadata><TypeSignature Language="C#" Value="public class RoleServiceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleServiceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.RoleServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class RoleServiceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleServiceManager" />
  <TypeSignature Language="F#" Value="type RoleServiceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>配置角色服务的自定义实现的位置。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.RoleServiceManager>类对应于<xref:System.Web.UI.ScriptManager.RoleService%2A>的属性<xref:System.Web.UI.ScriptManager>或<xref:System.Web.UI.ScriptManagerProxy>控件。  
  
 启用了 AJAX 的应用程序使用角色 Web 服务使用的异步 Web 服务调用检索当前已经过身份验证用户的角色信息。 可以使用<xref:System.Web.UI.RoleServiceManager>提供角色而不是使用内置的 Web 服务的 Web 服务的备用实现的路径。  
  
 若要在应用程序中使用的角色服务，必须在配置文件中启用它，并将其声明的页中。 如果使用 Web 服务的内置角色，则必须启用它，但无需显式声明角色页中的 service manager。  
  
 若要创建自定义角色服务，必须实现的 Web 服务有两种方法：`GetRolesForCurrentUser`和`IsCurrentUserInRole`。 这些方法必须具有与对应方法的 Web 服务的内置角色相同的签名。  
  
 下面的示例演示必须在自定义角色 Web 服务类中实现基本的类结构。  
  
  
  
 若要使用自定义角色 Web 服务，你可以添加服务以声明方式在标记中放置`RoleService`元素内的<xref:System.Web.UI.ScriptManager>控制，如下面的示例中所示。  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <RoleService Path="MyRoleService.asmx" LoadRoles="true" />  
</asp:ScriptManager>  
```  
  
 您可以以编程方式设置<xref:System.Web.UI.RoleServiceManager.Path%2A>属性，以使用自定义角色 Web 服务。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ScriptingRoleServiceSection" />
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b">ASP.NET AJAX 中的 web 服务</related>
    <related type="Article" href="https://msdn.microsoft.com/library/280f6ad9-ba1a-4fc9-b0cc-22e39e54a82d">将角色信息用于 ASP.NET AJAX</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.RoleServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoleServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.RoleServiceManager" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRoles">
      <MemberSignature Language="C#" Value="public bool LoadRoles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadRoles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.LoadRoles" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadRoles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadRoles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LoadRoles : bool with get, set" Usage="System.Web.UI.RoleServiceManager.LoadRoles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否必须检索当前已登录用户的角色列表。</summary>
        <value>如果必须检索角色列表，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.RoleServiceManager.LoadRoles%2A>属性设置为`true`，通过检索的角色列表<xref:System.Web.UI.RoleServiceManager>类通过使用<xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=nameWithType>方法。 列表然后序列化到页面标记。  
  
> [!NOTE]
>  当<xref:System.Web.UI.RoleServiceManager.LoadRoles%2A>是`true`，当前经过身份验证的用户所属的所有角色都发送到浏览器。 因为用户可能可以查看角色的信息，这可能是一个安全问题。  
  
 <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A>属性可以指定在<xref:System.Web.UI.ScriptManager>控制或关联<xref:System.Web.UI.ScriptManagerProxy>控件。 如果<xref:System.Web.UI.RoleServiceManager.LoadRoles%2A>设置为`true`对于代理实例，检索并添加到页面的角色列表。 如果<xref:System.Web.UI.RoleServiceManager.LoadRoles%2A>是`false`，角色不会添加到页面标记。 在这种情况下，该方法可用于在浏览器中的内存中存储角色信息。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ScriptManager" />
        <altmember cref="T:System.Web.UI.ScriptManagerProxy" />
        <altmember cref="M:System.Web.Security.Roles.GetRolesForUser" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.RoleServiceManager.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置角色服务的路径。</summary>
        <value>自定义角色 Web 服务的路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.RoleServiceManager.Path%2A>未设置属性，则返回值为<xref:System.String.Empty?displayProperty=nameWithType>。 在这种情况下，ASP.NET 使用内置的身份验证 Web 服务对应于以下的内部默认路径: ~ / RolesService.svc。 如果您设置，会发生相同的行为<xref:System.Web.UI.RoleServiceManager.Path%2A>为空字符串或`null`。  
  
 <xref:System.Web.UI.RoleServiceManager.Path%2A> 可以在中指定<xref:System.Web.UI.ScriptManager>控件或关联<xref:System.Web.UI.ScriptManagerProxy>控件。 当<xref:System.Web.UI.RoleServiceManager.Path%2A>设置为<xref:System.Web.UI.ScriptManagerProxy>级别，以下条件成立：  
  
-   如果控件层次结构中有多个代理对象<xref:System.Web.UI.RoleServiceManager.Path%2A>无需为每个代理实例设置。  
  
-   如果<xref:System.Web.UI.RoleServiceManager.Path%2A>显式设置的代理对象，值必须是相同的所有其他代理对象，此属性设置为。 如果在控件层次结构中设置不同的代理对象的不同路径<xref:System.ArgumentException>引发异常。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">在控件层次结构中设置了多个唯一路径。</exception>
      </Docs>
    </Member>
  </Members>
</Type>