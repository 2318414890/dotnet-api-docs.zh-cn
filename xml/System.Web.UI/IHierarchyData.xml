<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IHierarchyData.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54401bd445a98e07a176f0bdd5128240d058c8310.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4401bd445a98e07a176f0bdd5128240d058c8310</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.IHierarchyData">
          <source>Exposes a node of a hierarchical data structure, including the node object and some properties that describe characteristics of the node.</source>
          <target state="translated">公开分层数据结构的节点，包括节点对象和描述节点特征的一些属性。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.IHierarchyData">
          <source>Objects that implement the <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> interface can be contained in <ph id="ph2">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> collections, and are used by ASP.NET site navigation and data source controls.</source>
          <target state="translated">实现 <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> 接口的对象可以包含在 <ph id="ph2">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> 集合中，并由 ASP.NET 站点导航和数据源控件所使用。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface is implemented by classes that represent nodes of a hierarchical structure, and track the hierarchical relationships to their parent and child nodes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>接口实现的类表示的层次结构中，节点和跟踪其父节点和子节点的分层关系。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>Classes that implement the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface can be contained in collections that implement the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> interface.</source>
          <target state="translated">类实现<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>接口实现的集合中可包含<ph id="ph2">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface with a class that wraps a <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> object.</source>
          <target state="translated">下面的代码示例演示如何实现<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>包装的类接口<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> class is a good example of a hierarchical data node, which the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface represents for ASP.NET hierarchical data source controls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>类是一个层次结构数据节点中，一个好例子其中<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>接口表示 ASP.NET 层次结构数据源控件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>The following code example demonstrates how to recursively iterate through an <ph id="ph1">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> collection, extract the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> item from the enumerator using the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A&gt;</ph> method, and perform basic work with the data item.</source>
          <target state="translated">下面的代码示例演示如何以递归方式循环访问<ph id="ph1">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph>集合，提取<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>从枚举器使用的项<ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A&gt;</ph>方法，并执行与数据项的基本工作。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>Gets an enumeration object that represents all the child nodes of the current hierarchical node.</source>
          <target state="translated">获取一个枚举对象，该对象表示当前分层节点的所有子节点。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> collection of child nodes of the current hierarchical node.</source>
          <target state="translated">当前分层节点的子节点的 <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property to determine whether the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> node has child nodes.</source>
          <target state="translated">你可以使用<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>属性来确定是否<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>节点有子节点。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>The following code example demonstrates how to check the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property to determine whether the current hierarchical data node has child nodes, and retrieve them using the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示如何检查<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>属性来确定当前的层次结构数据节点是否有子节点，然后检索这些使用<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object that represents the parent node of the current hierarchical node.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> 对象，该对象表示当前分层节点的父节点。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object that represents the parent node of the current hierarchical node.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> 对象，该对象表示当前分层节点的父节点。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface does not define a HasParent convenience property, so callers must check the return value of the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph> method for <ph id="ph3">`null`</ph> to determine whether the current <ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> node is the root node of the hierarchical data structure to which the node belongs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>接口无法定义 hasparent 简便属性，以便调用方必须检查的返回值<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph>方法<ph id="ph3">`null`</ph>以确定是否当前<ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>节点是层次结构数据的根节点与节点所属的结构。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph> method in a class that implements the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">下面的代码示例演示如何实现<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph>方法的类中实现<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>The <ph id="ph1">`FileSystemHierarchyData`</ph> class wraps a <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> object, and the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph> method implementation checks the type of the <ph id="ph4">&lt;xref:System.IO.FileSystemInfo&gt;</ph> object, and returns the appropriate parent object based on the type.</source>
          <target state="translated"><ph id="ph1">`FileSystemHierarchyData`</ph>类包装<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>对象，与<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph>方法实现将检查的一种<ph id="ph4">&lt;xref:System.IO.FileSystemInfo&gt;</ph>对象，并返回适当的父对象根据的类型。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>接口和<ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>Indicates whether the hierarchical data node that the <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object represents has any child nodes.</source>
          <target state="translated">指示 <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> 对象所表示的分层数据节点是否有子节点。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node has child nodes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果当前节点具有子节点，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property is a convenience property that enables callers to avoid checking the return value of the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph> method for <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>属性是使调用方能够避免检查返回值的一个便捷属性<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph>方法<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property returns <ph id="ph2">`true`</ph>, call the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph> method to retrieve an <ph id="ph4">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> collection of child nodes.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>属性返回<ph id="ph2">`true`</ph>，调用<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph>方法来检索<ph id="ph4">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph>子节点的集合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>The following code example demonstrates how an ASP.NET hierarchical data-bound control uses an <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object in a recursive data-binding method.</source>
          <target state="translated">下面的代码示例演示如何使用 ASP.NET 分层数据绑定控件<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>递归数据绑定方法中的对象。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>The items in an <ph id="ph1">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> collection are enumerated, and for each an <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object is retrieved using the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A&gt;</ph> method.</source>
          <target state="translated">中的项<ph id="ph1">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph>集合进行枚举，每个<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>对象使用检索<ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property is checked to determine whether to recurse.</source>
          <target state="translated">最后，<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>属性进行检查以确定是否要递归。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.HierarchicalDataBoundControl&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Web.UI.WebControls.HierarchicalDataBoundControl&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>Gets the hierarchical data node that the <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object represents.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> 对象所表示的分层数据节点。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> hierarchical data node object.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 分层数据节点对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>While many classes that represent hierarchical data nodes, such as the <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> class, implement the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface directly, other classes only act as a wrapper for a class that does not implement the interface.</source>
          <target state="translated">尽管许多类用于表示层次结构数据节点，如<ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph>类中，实现<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>直接接口，其他类只充当不实现接口的类的包装器。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Item%2A&gt;</ph> property is provided for these design situations, when business objects are functionally equivalent to an <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object but cannot be redesigned easily.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Item%2A&gt;</ph>功能上等效于业务对象时要提供这些设计的情况下，属性<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>对象但不能轻松地重新设计。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>The following code example demonstrates how to access <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> properties, check the type of an <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object using the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph> property, and cast the object to perform more type-specific operations.</source>
          <target state="translated">下面的代码示例演示如何访问<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>属性，请检查的一种<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>对象使用<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph>属性，并强制转换该对象来执行特定类型的更多操作。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>Gets the hierarchical path of the node.</source>
          <target state="translated">获取节点的分层路径。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that identifies the hierarchical path relative to the current node.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，标识相对当前节点的分层路径。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph> property can be passed to the <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A&gt;</ph> method to retrieve the <ph id="ph3">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph> object that corresponds to the node identified by <ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>属性可以传递给<ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A&gt;</ph>方法来检索<ph id="ph3">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph>对应于由标识的节点对象<ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph> property should not contain any sensitive information about the host environment, because it might be rendered to the client in a data-bound control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>属性不应包含有关主机环境中，任何敏感信息，因为它可能呈现到数据绑定控件中的客户端。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph> property in a class that implements the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">下面的代码示例演示如何实现<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>中实现的类属性<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>接口。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>The <ph id="ph1">`FileSystemHierarchyData`</ph> class wraps a <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> object, and the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph> property implementation returns its file system path.</source>
          <target state="translated"><ph id="ph1">`FileSystemHierarchyData`</ph>类包装<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>对象，与<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>属性实现返回其文件系统路径。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>接口和<ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>Gets the name of the type of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> contained in the <ph id="ph2">&lt;see cref="P:System.Web.UI.IHierarchyData.Item" /&gt;</ph> property.</source>
          <target state="translated">获取包含在 <ph id="ph2">&lt;see cref="P:System.Web.UI.IHierarchyData.Item" /&gt;</ph> 属性中的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的类型名称。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>The name of the type of object that the <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object represents.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> 对象表示的对象的类型的名称。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph> property does not return the <ph id="ph2">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> of the object represented in an <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph>属性不返回<ph id="ph2">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph>中表示的对象<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>It returns a name used by data-bound controls to differentiate between items in a hierarchy that have different bindable properties.</source>
          <target state="translated">它将返回数据绑定控件用于区分具有不同的可绑定属性层次结构中的项的名称。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>The following code example demonstrates how to write the basic <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> properties to an <ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph> stream, then check the type of an <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object using the <ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph> property and cast the object to perform more type-specific operations.</source>
          <target state="translated">下面的代码示例演示如何编写基本<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>属性设置为<ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph>流，然后检查的类型<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>对象使用<ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph>属性和强制转换该对象来执行特定类型的更多操作。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>接口。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>