<Type Name="BasePartialCachingControl" FullName="System.Web.UI.BasePartialCachingControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7fe0d41dbb1f26a445d06228d179270333746af7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30605181" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BasePartialCachingControl : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BasePartialCachingControl extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.BasePartialCachingControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BasePartialCachingControl&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasePartialCachingControl abstract : System::Web::UI::Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>为 <see cref="T:System.Web.UI.StaticPartialCachingControl" /> 和 <see cref="T:System.Web.UI.PartialCachingControl" /> 类提供基本功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.BasePartialCachingControl>类表示在编程方案中启用了输出缓存的用户控件。 ASP.NET 提供多种方式来启用输出缓存的控件。 以下列表描述可用于启用输出缓存的方法：  
  
-   使用`@ OutputCache`指令来启用输出缓存中声明性方案。  
  
-   使用<xref:System.Web.UI.PartialCachingAttribute>类来启用缓存的代码隐藏文件中的用户控件。  
  
-   使用<xref:System.Web.UI.ControlCachePolicy>类，以在其中你正在使用的编程方案中指定要缓存设置<xref:System.Web.UI.BasePartialCachingControl>实例。  
  
   
  
## Examples  
 下面的代码示例演示如何创建对引用<xref:System.Web.UI.BasePartialCachingControl>类并将其设置的值为<xref:System.Web.UI.Control.Parent%2A>属性。 代码随后设置<xref:System.Web.UI.BasePartialCachingControl.Dependency%2A>属性<xref:System.Web.Caching.CacheDependency>使控件依赖于文本文件的对象。  
  
 [!code-csharp[BasePartialCachingControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BasePartialCachingControl/CS/dep1cs.ascx#1)]
 [!code-vb[BasePartialCachingControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BasePartialCachingControl/VB/dep1vb.ascx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.UserControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasePartialCachingControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.BasePartialCachingControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BasePartialCachingControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.BasePartialCachingControl" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Web.UI.ControlCachePolicy CachePolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.BasePartialCachingControl.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachePolicy As ControlCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ControlCachePolicy ^ CachePolicy { System::Web::UI::ControlCachePolicy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与预包装用户控件关联的 <see cref="T:System.Web.UI.ControlCachePolicy" /> 对象。</summary>
        <value>一个 <see cref="T:System.Web.UI.ControlCachePolicy" />，存储与预包装用户控件的输出缓存相关的属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A>属性，以编程方式访问<xref:System.Web.UI.ControlCachePolicy>与包含的用户控件关联的对象<xref:System.Web.UI.BasePartialCachingControl>实例。 <xref:System.Web.UI.ControlCachePolicy>对象可以以编程方式操作，以影响用户控件的缓存行为和设置。  
  
   
  
## Examples  
 下面的代码示例演示如何动态加载和运行时以编程方式操作用户控件。 此示例具有三个部分：  
  
-   分部类中， `LogOnControl`，该类继承自<xref:System.Web.UI.UserControl>基本类并向其<xref:System.Web.UI.PartialCachingAttribute>应用特性。  
  
-   用户控件，用于为`LogOnControl`分部类。  
  
-   Web 窗体页承载用户控件。  
  
 若要成功运行此示例，请确保用户控件文件 (.ascx)、 （.cs 或.vb），其代码隐藏文件和承载用户控件 (.aspx) 的 Web 窗体页是相同的目录中。  
  
 该示例的第一部分演示如何<xref:System.Web.UI.PartialCachingAttribute>应用到用户控件名为`LogOnControl`，这意味着该用户控件由包装<xref:System.Web.UI.PartialCachingControl>控件在运行时。 `LogOnControl`对象的缓存设置可以以编程方式通过及其关联操作<xref:System.Web.UI.ControlCachePolicy>对象，它是可通过对引用<xref:System.Web.UI.PartialCachingControl>包装它。 在此示例中，缓存设置是检查页初始化期间，如果满足某些条件更改。  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy/CS/LogonControl.cs#2)]
 [!code-vb[System.Web.UI.ControlCachePolicy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy/VB/logoncontrol.vb#2)]  
  
 该示例的第二部分显示使用与前面的示例来演示用户控制缓存的用户控件。  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy/CS/Logonformcs.ascx#3)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy/VB/Logonformvb.ascx#3)]  
  
 该示例的第三个部分演示如何使用`LogOnControl`从 Web 窗体页的用户控件。  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy/CS/controlcachepolicy_loadcontrolcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy/VB/controlcachepolicy_loadcontrolvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UserControl.CachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="Dependency">
      <MemberSignature Language="C#" Value="public System.Web.Caching.CacheDependency Dependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.CacheDependency Dependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.BasePartialCachingControl.Dependency" />
      <MemberSignature Language="VB.NET" Value="Public Property Dependency As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::CacheDependency ^ Dependency { System::Web::Caching::CacheDependency ^ get(); void set(System::Web::Caching::CacheDependency ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与缓存的用户控件输出关联的 <see cref="T:System.Web.Caching.CacheDependency" /> 类的实例。</summary>
        <value>与服务器控件关联的 <see cref="T:System.Web.Caching.CacheDependency" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性，可从输出缓存中删除用户控制输出关联的缓存依赖项发生更改时。  
  
   
  
## Examples  
 下面的代码示例演示如何设置<xref:System.Web.UI.BasePartialCachingControl.Dependency%2A>属性<xref:System.Web.Caching.CacheDependency>使控件依赖于文本文件的对象。 此代码示例摘自更大的示例为提供<xref:System.Web.UI.BasePartialCachingControl>类。  
  
 [!code-csharp[BasePartialCachingControl#2](~/samples/snippets/csharp/VS_Snippets_WebNet/BasePartialCachingControl/CS/dep1cs.ascx#2)]
 [!code-vb[BasePartialCachingControl#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BasePartialCachingControl/VB/dep1vb.ascx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.BasePartialCachingControl.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放 <see cref="T:System.Web.UI.BasePartialCachingControl" /> 类使用的所有资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.BasePartialCachingControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">将缓存的控件写入页的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将用户控件的内容输出到指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 输出流。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>