<Type Name="ControlCollection" FullName="System.Web.UI.ControlCollection">
  <TypeSignature Language="C#" Value="public class ControlCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlCollection : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0f817-101">提供使 ASP.NET 服务器控件能够维护其子控件列表的集合容器。</span><span class="sxs-lookup"><span data-stu-id="0f817-101">Provides a collection container that enables ASP.NET server controls to maintain a list of their child controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f817-102">你可以访问的任何属性和方法的<xref:System.Web.UI.ControlCollection>类通过<xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="0f817-102">You can access any of the properties and methods of the <xref:System.Web.UI.ControlCollection> class through the <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="0f817-103">由于<xref:System.Web.UI.Control>类是所有 ASP.NET 服务器控件的基类，所有服务器控件都继承此属性。</span><span class="sxs-lookup"><span data-stu-id="0f817-103">Since the <xref:System.Web.UI.Control> class is the base class for all ASP.NET server controls, all server controls inherit this property.</span></span>  
  
 <span data-ttu-id="0f817-104">有关集合的详细信息，请参阅[集合和数据结构](http://msdn.microsoft.com/library/60cc581f-1db5-445b-ba04-a173396bf872)。</span><span class="sxs-lookup"><span data-stu-id="0f817-104">For more information about collections, see [Collections and Data Structures](http://msdn.microsoft.com/library/60cc581f-1db5-445b-ba04-a173396bf872).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f817-105">下面的代码示例替代<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>方法来创建两个控件、 名为的自定义类的两个实例`ChildControl`，它具有名为的字符串属性`Message`。</span><span class="sxs-lookup"><span data-stu-id="0f817-105">The following code example overrides the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> method to create two controls, both instances of the custom class named `ChildControl`, which has a string property named `Message`.</span></span> <span data-ttu-id="0f817-106">在创建时，将两个控件添加到<xref:System.Web.UI.ControlCollection>。</span><span class="sxs-lookup"><span data-stu-id="0f817-106">When created, the two controls are added to the <xref:System.Web.UI.ControlCollection>.</span></span> <span data-ttu-id="0f817-107"><xref:System.Web.UI.ControlCollection.Add%2A>在每个这些控件，以将它们添加到包含此版本的类上调用方法<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0f817-107">The <xref:System.Web.UI.ControlCollection.Add%2A> method is called on each of these controls to add them to the class that contains this version of <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0f817-108"><xref:System.Web.UI.Control.ChildControlsCreated%2A>属性设置为`true`，以便这些控件将不会不必要地再次创建。</span><span class="sxs-lookup"><span data-stu-id="0f817-108">The <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true` so that these controls will not be created again unnecessarily.</span></span>  
  
 [!code-csharp[Control_Sample_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#1)]
 [!code-vb[Control_Sample_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.UI.Control.Controls" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlCollection (System.Web.UI.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlCollection(System::Web::UI::Control ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="0f817-109">为其创建控件集合的 ASP.NET 服务器控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-109">The ASP.NET server control that the control collection is created for.</span></span></param>
        <summary><span data-ttu-id="0f817-110">为指定的父服务器控件初始化 <see cref="T:System.Web.UI.ControlCollection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="0f817-110">Initializes a new instance of the <see cref="T:System.Web.UI.ControlCollection" /> class for the specified parent server control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f817-111">下面的代码示例是一个自定义<xref:System.Web.UI.ControlCollection>类，并重写构造函数将消息写入 (其中包括的名称<xref:System.Web.UI.ControlCollection.Owner%2A>属性) 写入跟踪日志创建集合的实例时。</span><span class="sxs-lookup"><span data-stu-id="0f817-111">The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the constructor to write messages (which include the name of the <xref:System.Web.UI.ControlCollection.Owner%2A> property) to the trace log when an instance of the collection is created.</span></span> <span data-ttu-id="0f817-112">你必须启用页跟踪或应用程序的此示例正常工作。</span><span class="sxs-lookup"><span data-stu-id="0f817-112">You must enable tracing for the page or application for this example to work.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#1)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f817-113">当 <paramref name="owner" /> 参数为 <see langword="null" /> 时发生。</span><span class="sxs-lookup"><span data-stu-id="0f817-113">Occurs if the <paramref name="owner" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Web.UI.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Web.UI.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (child As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Web::UI::Control ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="0f817-114">要添加到集合中的 <see cref="T:System.Web.UI.Control" />。</span><span class="sxs-lookup"><span data-stu-id="0f817-114">The <see cref="T:System.Web.UI.Control" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="0f817-115">将指定的 <see cref="T:System.Web.UI.Control" /> 对象添加到集合。</span><span class="sxs-lookup"><span data-stu-id="0f817-115">Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f817-116">新控件添加到数组末尾之间的序号索引。</span><span class="sxs-lookup"><span data-stu-id="0f817-116">The new control is added to the end of an ordinal index array.</span></span> <span data-ttu-id="0f817-117">控件可以所有 ASP.NET 服务器控件，你创建的自定义服务器控件或文本控件的实例。</span><span class="sxs-lookup"><span data-stu-id="0f817-117">The control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.</span></span>  
  
 <span data-ttu-id="0f817-118">若要将控件添加到集合中的特定索引位置处，使用<xref:System.Web.UI.ControlCollection.AddAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0f817-118">To add a control to the collection at a specific index location, use the <xref:System.Web.UI.ControlCollection.AddAt%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f817-119">下面的代码示例使用<xref:System.Web.UI.ControlCollection.Add%2A>方法将添加一系列模板项，其中许多将从服务器控件的视图状态，转到自定义模板化控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-119">The following code example uses the <xref:System.Web.UI.ControlCollection.Add%2A> method to add a series of template items, the number of which are taken from the server control's view state, to a custom templated control.</span></span>  
  
 [!code-csharp[TemplatedDataBoundControl#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#2)]
 [!code-vb[TemplatedDataBoundControl#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f817-120">在 <paramref name="child" /> 参数未指定控件时引发。</span><span class="sxs-lookup"><span data-stu-id="0f817-120">Thrown if the <paramref name="child" /> parameter does not specify a control.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="0f817-121">在 <see cref="T:System.Web.UI.ControlCollection" /> 为只读时引发。</span><span class="sxs-lookup"><span data-stu-id="0f817-121">Thrown if the <see cref="T:System.Web.UI.ControlCollection" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public virtual void AddAt (int index, System.Web.UI.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAt(int32 index, class System.Web.UI.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAt (index As Integer, child As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAt(int index, System::Web::UI::Control ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0f817-122">数组中要添加子控件的位置。</span><span class="sxs-lookup"><span data-stu-id="0f817-122">The location in the array at which to add the child control.</span></span></param>
        <param name="child"><span data-ttu-id="0f817-123">要添加到集合中的 <see cref="T:System.Web.UI.Control" />。</span><span class="sxs-lookup"><span data-stu-id="0f817-123">The <see cref="T:System.Web.UI.Control" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="0f817-124">将指定的 <see cref="T:System.Web.UI.Control" /> 对象添加到集合中的指定索引位置。</span><span class="sxs-lookup"><span data-stu-id="0f817-124">Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection at the specified index location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f817-125">添加的控件均可以是任何 ASP.NET 服务器控件，你创建的自定义服务器控件或文本控件的实例。</span><span class="sxs-lookup"><span data-stu-id="0f817-125">The added control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f817-126">下面的代码示例使用<xref:System.Web.UI.ControlCollection.AddAt%2A>方法来创建一个新<xref:System.Web.UI.LiteralControl>名为`ChildControl2`和将其添加到`myButton`控件的<xref:System.Web.UI.ControlCollection>1 的索引位置处的集合。</span><span class="sxs-lookup"><span data-stu-id="0f817-126">The following code example uses the <xref:System.Web.UI.ControlCollection.AddAt%2A> method to create a new <xref:System.Web.UI.LiteralControl> named `ChildControl2` and add it to the `myButton` control's <xref:System.Web.UI.ControlCollection> collection at the index location of 1.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#1)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f817-127"><paramref name="child" /> 参数不指定控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-127">The <paramref name="child" /> parameter does not specify a control.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0f817-128"><paramref name="index" /> 参数小于零或大于 <see cref="P:System.Web.UI.ControlCollection.Count" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="0f817-128">The <paramref name="index" /> parameter is less than zero or greater than the <see cref="P:System.Web.UI.ControlCollection.Count" /> property.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="0f817-129"><see cref="T:System.Web.UI.ControlCollection" /> 为只读。</span><span class="sxs-lookup"><span data-stu-id="0f817-129">The <see cref="T:System.Web.UI.ControlCollection" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f817-130">从当前服务器控件的 <see cref="T:System.Web.UI.ControlCollection" /> 对象中移除所有控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-130">Removes all controls from the current server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f817-131">使用此方法可清空自定义控件的<xref:System.Web.UI.ControlCollection>当重写<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>和<xref:System.Web.UI.Control.DataBind%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0f817-131">Use this method to empty a custom control's <xref:System.Web.UI.ControlCollection> when you override the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> and <xref:System.Web.UI.Control.DataBind%2A> methods.</span></span> <span data-ttu-id="0f817-132">当你开发复合、 模板化控件或模板化数据绑定控件时执行此操作。</span><span class="sxs-lookup"><span data-stu-id="0f817-132">Do this when you develop composite, templated controls or templated data-bound controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f817-133">下面的代码示例演示如何重写<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>方法，并使用<xref:System.Web.UI.ControlCollection.Clear%2A>方法来删除中的所有子控件以前<xref:System.Web.UI.ControlCollection>对象。</span><span class="sxs-lookup"><span data-stu-id="0f817-133">The following code example demonstrates overriding the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> method, and using the <xref:System.Web.UI.ControlCollection.Clear%2A> method to delete all child controls previously in the <xref:System.Web.UI.ControlCollection> object.</span></span> <span data-ttu-id="0f817-134">在这种情况下，你必须执行此操作，以便过时中控件的对象<xref:System.Web.UI.ControlCollection>不当而导致不会显示。</span><span class="sxs-lookup"><span data-stu-id="0f817-134">In this case, you must do this so that outdated objects in your control's <xref:System.Web.UI.ControlCollection> are not displayed inappropriately.</span></span>  
  
 [!code-csharp[TemplatedDataBoundControl#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#2)]
 [!code-vb[TemplatedDataBoundControl#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (System.Web.UI.Control c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Web.UI.Control c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (c As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Web::UI::Control ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="0f817-135">要在集合中搜索的服务器控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-135">The server control to search for in the collection.</span></span></param>
        <summary><span data-ttu-id="0f817-136">确定指定的服务器控件是否在父服务器控件的 <see cref="T:System.Web.UI.ControlCollection" /> 对象中。</span><span class="sxs-lookup"><span data-stu-id="0f817-136">Determines whether the specified server control is in the parent server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="0f817-137">如果集合中存在指定的服务器控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f817-137"><see langword="true" /> if the specified server control exists in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Web.UI.ctrlCollection_Contains#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.CtrlCollection_Contains/CS/ctrlcollection_contains.cs.aspx#1)]
 [!code-vb[System.Web.UI.ctrlCollection_Contains#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.CtrlCollection_Contains/VB/ctrlcollection_contains.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="0f817-138">要将子控件复制到的 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="0f817-138">The <see cref="T:System.Array" /> to copy the child controls to.</span></span></param>
        <param name="index"><span data-ttu-id="0f817-139"><c>array</c> 中从零开始的相对索引，从此位置开始进行复制。</span><span class="sxs-lookup"><span data-stu-id="0f817-139">The zero-based relative index in <c>array</c> where copying begins.</span></span></param>
        <summary><span data-ttu-id="0f817-140">从 <see cref="T:System.Web.UI.ControlCollection" /> 中的指定索引位置开始，将 <see cref="T:System.Array" /> 对象中存储的子控件复制到 <see cref="T:System.Array" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="0f817-140">Copies the child controls stored in the <see cref="T:System.Web.UI.ControlCollection" /> object to an <see cref="T:System.Array" /> object, beginning at the specified index location in the <see cref="T:System.Array" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="0f817-141"><paramref name="array" /> 不为 <see langword="null" /> 并且不是一维数组。</span><span class="sxs-lookup"><span data-stu-id="0f817-141"><paramref name="array" /> is not <see langword="null" /> and not one-dimensional.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f817-142">为指定的 ASP.NET 服务器控件获取 <see cref="T:System.Web.UI.ControlCollection" /> 对象中的服务器控件数。</span><span class="sxs-lookup"><span data-stu-id="0f817-142">Gets the number of server controls in the <see cref="T:System.Web.UI.ControlCollection" /> object for the specified ASP.NET server control.</span></span></summary>
        <value><span data-ttu-id="0f817-143"><see cref="T:System.Web.UI.ControlCollection" /> 中的服务器控件数。</span><span class="sxs-lookup"><span data-stu-id="0f817-143">The number of server controls in the <see cref="T:System.Web.UI.ControlCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f817-144">下面的代码示例演示如何使用<xref:System.Web.UI.ControlCollection.Count%2A>属性来循环访问控件的<xref:System.Web.UI.ControlCollection>对象。</span><span class="sxs-lookup"><span data-stu-id="0f817-144">The following code example demonstrates how to use the <xref:System.Web.UI.ControlCollection.Count%2A> property to iterate through a control's <xref:System.Web.UI.ControlCollection> object.</span></span> <span data-ttu-id="0f817-145">使用<xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType>属性验证该控件具有子控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-145">The use of the <xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> property verifies that the control has child controls.</span></span> <span data-ttu-id="0f817-146">如果<xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType>返回`false`，其余的代码不会运行。</span><span class="sxs-lookup"><span data-stu-id="0f817-146">If <xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> returns `false`, the remaining code does not run.</span></span>  
  
 [!code-csharp[Classic Control.HasControls Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.HasControls Example/CS/source.cs#1)]
 [!code-vb[Classic Control.HasControls Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.HasControls Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f817-147">检索可以循环访问 <see cref="T:System.Web.UI.ControlCollection" /> 对象的枚举数。</span><span class="sxs-lookup"><span data-stu-id="0f817-147">Retrieves an enumerator that can iterate through the <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <returns><span data-ttu-id="0f817-148">循环访问集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="0f817-148">The enumerator to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f817-149">下面的代码示例创建一个枚举的方法<xref:System.Web.UI.ControlCollection>集合<xref:System.Web.UI.WebControls.Button>控件， `myButton`。</span><span class="sxs-lookup"><span data-stu-id="0f817-149">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="0f817-150">创建枚举器时，<xref:System.Web.UI.ControlCollection.IsSynchronized%2A>属性将检查以确定操作是否线程安全的以及是否不是，<xref:System.Web.UI.ControlCollection.SyncRoot%2A>属性用于获取要使操作是线程安全的对象。</span><span class="sxs-lookup"><span data-stu-id="0f817-150">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="0f817-151">在完成后在枚举，的值<xref:System.Web.UI.ControlCollection.IsReadOnly%2A>属性写作为<xref:System.Web.UI.WebControls.Label.Text%2A>属性<xref:System.Web.UI.WebControls.Label>包含页上的控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-151">When the enumeration is completed, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (System.Web.UI.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Web.UI.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Control) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Web::UI::Control ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0f817-152">为其返回索引的 <see cref="T:System.Web.UI.Control" />。</span><span class="sxs-lookup"><span data-stu-id="0f817-152">The <see cref="T:System.Web.UI.Control" /> for which the index is returned.</span></span></param>
        <summary><span data-ttu-id="0f817-153">检索集合中指定 <see cref="T:System.Web.UI.Control" /> 对象的索引。</span><span class="sxs-lookup"><span data-stu-id="0f817-153">Retrieves the index of a specified <see cref="T:System.Web.UI.Control" /> object in the collection.</span></span></summary>
        <returns><span data-ttu-id="0f817-154">指定服务器控件的索引。</span><span class="sxs-lookup"><span data-stu-id="0f817-154">The index of the specified server control.</span></span> <span data-ttu-id="0f817-155">如果服务器控件当前不是集合的成员，则返回 -1。</span><span class="sxs-lookup"><span data-stu-id="0f817-155">If the server control is not currently a member of the collection, it returns -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f817-156">使用此方法来确定指定的服务器控件中的索引位置<xref:System.Web.UI.ControlCollection>对象。</span><span class="sxs-lookup"><span data-stu-id="0f817-156">Use this method to determine the index location of the specified server control in the <xref:System.Web.UI.ControlCollection> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f817-157">下面的代码示例使用<xref:System.Web.UI.ControlCollection.IndexOf%2A>方法写入的控件的索引位置`myLiteralControl`中<xref:System.Web.UI.ControlCollection>集合<xref:System.Web.UI.WebControls.Button>控件名为`myButton`。</span><span class="sxs-lookup"><span data-stu-id="0f817-157">The following code example uses the <xref:System.Web.UI.ControlCollection.IndexOf%2A> method to write the index location of a control, `myLiteralControl`, in the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control named `myButton`.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#1)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f817-158">获取一个值，该值指示 <see cref="T:System.Web.UI.ControlCollection" /> 对象是否为只读。</span><span class="sxs-lookup"><span data-stu-id="0f817-158">Gets a value indicating whether the <see cref="T:System.Web.UI.ControlCollection" /> object is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="0f817-159">如果控件为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f817-159"><see langword="true" /> if the control is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0f817-160">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f817-160">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f817-161">下面的代码示例创建一个枚举的方法<xref:System.Web.UI.ControlCollection>集合<xref:System.Web.UI.WebControls.Button>控件， `myButton`。</span><span class="sxs-lookup"><span data-stu-id="0f817-161">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="0f817-162">创建枚举器时，<xref:System.Web.UI.ControlCollection.IsSynchronized%2A>属性将检查以确定操作是否线程安全的以及是否不是，<xref:System.Web.UI.ControlCollection.SyncRoot%2A>属性用于获取要使操作是线程安全的对象。</span><span class="sxs-lookup"><span data-stu-id="0f817-162">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="0f817-163">在枚举完成时，值<xref:System.Web.UI.ControlCollection.IsReadOnly%2A>属性写作为<xref:System.Web.UI.WebControls.Label.Text%2A>属性<xref:System.Web.UI.WebControls.Label>包含页上的控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-163">When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f817-164">获取一个值，该值指示 <see cref="T:System.Web.UI.ControlCollection" /> 对象是否已同步。</span><span class="sxs-lookup"><span data-stu-id="0f817-164">Gets a value indicating whether the <see cref="T:System.Web.UI.ControlCollection" /> object is synchronized.</span></span></summary>
        <value><span data-ttu-id="0f817-165">此属性恒为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f817-165">This property is always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f817-166">下面的代码示例创建一个枚举的方法<xref:System.Web.UI.ControlCollection>集合<xref:System.Web.UI.WebControls.Button>控件， `myButton`。</span><span class="sxs-lookup"><span data-stu-id="0f817-166">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="0f817-167">创建枚举器时，<xref:System.Web.UI.ControlCollection.IsSynchronized%2A>属性将检查以确定操作是否线程安全的以及是否不是，<xref:System.Web.UI.ControlCollection.SyncRoot%2A>属性用于获取要使操作是线程安全的对象。</span><span class="sxs-lookup"><span data-stu-id="0f817-167">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="0f817-168">在枚举完成时，值<xref:System.Web.UI.ControlCollection.IsReadOnly%2A>属性写作为<xref:System.Web.UI.WebControls.Label.Text%2A>属性<xref:System.Web.UI.WebControls.Label>包含页上的控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-168">When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ default[int] { System::Web::UI::Control ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0f817-169">服务器控件在 <see cref="T:System.Web.UI.ControlCollection" /> 中的位置。</span><span class="sxs-lookup"><span data-stu-id="0f817-169">The location of the server control in the <see cref="T:System.Web.UI.ControlCollection" />.</span></span></param>
        <summary><span data-ttu-id="0f817-170">获取对 <see cref="T:System.Web.UI.ControlCollection" /> 对象中指定索引位置的服务器控件的引用。</span><span class="sxs-lookup"><span data-stu-id="0f817-170">Gets a reference to the server control at the specified index location in the <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <value><span data-ttu-id="0f817-171">对控件的引用。</span><span class="sxs-lookup"><span data-stu-id="0f817-171">The reference to the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f817-172">下面的代码示例使用<xref:System.Web.UI.ControlCollection.Item%2A>中移除属性来指定子级的索引位置控制<xref:System.Web.UI.ControlCollection.Remove%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="0f817-172">The following code example uses the <xref:System.Web.UI.ControlCollection.Item%2A> property to specify the index location of a child control that is removed in a <xref:System.Web.UI.ControlCollection.Remove%2A> method call.</span></span> <span data-ttu-id="0f817-173">执行此操作`myButton.Controls.Remove`语法。</span><span class="sxs-lookup"><span data-stu-id="0f817-173">This is performed by the `myButton.Controls.Remove` syntax.</span></span>  
  
 [!code-aspx-csharp[ControlCollection_ReSubmit_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlCollection_ReSubmit_2/CS/controlcollection_copyto.cs.aspx#1)]
 [!code-aspx-vb[ControlCollection_ReSubmit_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlCollection_ReSubmit_2/VB/controlcollection_copyto.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0f817-174"><paramref name="index" /> 参数小于 0，或者大于等于 <see cref="P:System.Web.UI.ControlCollection.Count" />。</span><span class="sxs-lookup"><span data-stu-id="0f817-174">The <paramref name="index" /> parameter is less than zero or greater than or equal to <see cref="P:System.Web.UI.ControlCollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Control Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Owner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Owner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Owner As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Control ^ Owner { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f817-175">获取 <see cref="T:System.Web.UI.ControlCollection" /> 对象所属的 ASP.NET 服务器控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-175">Gets the ASP.NET server control to which the <see cref="T:System.Web.UI.ControlCollection" /> object belongs.</span></span></summary>
        <value><span data-ttu-id="0f817-176"><see cref="T:System.Web.UI.Control" /> 所属的 <see cref="T:System.Web.UI.ControlCollection" />。</span><span class="sxs-lookup"><span data-stu-id="0f817-176">The <see cref="T:System.Web.UI.Control" /> to which the <see cref="T:System.Web.UI.ControlCollection" /> belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f817-177">下面的代码示例是一个自定义<xref:System.Web.UI.ControlCollection>类，并重写<xref:System.Web.UI.ControlCollection.%23ctor%2A>方法将消息写入 (其中包括的名称<xref:System.Web.UI.ControlCollection.Owner%2A>属性) 写入跟踪日志创建集合的实例时。</span><span class="sxs-lookup"><span data-stu-id="0f817-177">The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the <xref:System.Web.UI.ControlCollection.%23ctor%2A> method to write messages (which include the name of the <xref:System.Web.UI.ControlCollection.Owner%2A> property) to the trace log when an instance of the collection is created.</span></span> <span data-ttu-id="0f817-178">你必须启用页跟踪或应用程序的此示例正常工作。</span><span class="sxs-lookup"><span data-stu-id="0f817-178">You must enable tracing for the page or application for this example to work.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#1)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Web.UI.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Web.UI.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Web::UI::Control ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0f817-179">要移除的服务器控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-179">The server control to be removed.</span></span></param>
        <summary><span data-ttu-id="0f817-180">从父服务器控件的 <see cref="T:System.Web.UI.ControlCollection" /> 对象中移除指定服务器控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-180">Removes the specified server control from the parent server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f817-181">若要从索引位置移除的控件，使用<xref:System.Web.UI.ControlCollection.RemoveAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0f817-181">To remove a control from an index location, use the <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f817-182">下面的代码示例使用<xref:System.Web.UI.ControlCollection.Remove%2A>方法来删除子控件从`myButton`服务器控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-182">The following code example uses the <xref:System.Web.UI.ControlCollection.Remove%2A> method to delete a child control from the `myButton` server control.</span></span> <span data-ttu-id="0f817-183">代码首先使用<xref:System.Web.UI.ControlCollection.Contains%2A>方法来确定是否`myChildControl`中包含<xref:System.Web.UI.ControlCollection>对象，以及如果是，将其删除。</span><span class="sxs-lookup"><span data-stu-id="0f817-183">First the code uses the <xref:System.Web.UI.ControlCollection.Contains%2A> method to determine whether the `myChildControl` is contained in the <xref:System.Web.UI.ControlCollection> object, and, if it is, removes it.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#4)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" />
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="0f817-184">要从集合中移除的服务器控件的序号索引。</span><span class="sxs-lookup"><span data-stu-id="0f817-184">The ordinal index of the server control to be removed from the collection.</span></span></param>
        <summary><span data-ttu-id="0f817-185">从 <see cref="T:System.Web.UI.ControlCollection" /> 对象中移除指定索引位置处的子控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-185">Removes a child control, at the specified index location, from the <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f817-186">若要从基于其值的集合中移除的控件，使用<xref:System.Web.UI.ControlCollection.Remove%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0f817-186">To remove a control from the collection based on its value, use the <xref:System.Web.UI.ControlCollection.Remove%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f817-187">下面的代码示例使用<xref:System.Web.UI.ControlCollection.RemoveAt%2A>方法来删除子控件从`myButton`服务器控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-187">The following code example uses the <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method to delete a child control from the `myButton` server control.</span></span> <span data-ttu-id="0f817-188">方法调用首先指定从中删除该控件的 1 的索引位置。</span><span class="sxs-lookup"><span data-stu-id="0f817-188">The method call first specifies an index location of 1 from which the control is deleted.</span></span> <span data-ttu-id="0f817-189">示例然后写入到包含页上的文本消息，说明该位置的控件已从<xref:System.Web.UI.ControlCollection>集合。</span><span class="sxs-lookup"><span data-stu-id="0f817-189">The example then writes to the containing page a text message saying that the control at that location has been deleted from the <xref:System.Web.UI.ControlCollection> collection.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#5)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="0f817-190">在 <see cref="T:System.Web.UI.ControlCollection" /> 为只读时引发。</span><span class="sxs-lookup"><span data-stu-id="0f817-190">Thrown if the <see cref="T:System.Web.UI.ControlCollection" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f817-191">获取可用于同步控件集合访问的对象。</span><span class="sxs-lookup"><span data-stu-id="0f817-191">Gets an object that can be used to synchronize access to the collection of controls.</span></span></summary>
        <value><span data-ttu-id="0f817-192">用于同步集合的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="0f817-192">The <see cref="T:System.Object" /> used to synchronize the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f817-193">下面的代码示例创建一个枚举的方法<xref:System.Web.UI.ControlCollection>集合<xref:System.Web.UI.WebControls.Button>控件， `myButton`。</span><span class="sxs-lookup"><span data-stu-id="0f817-193">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="0f817-194">创建枚举器时，<xref:System.Web.UI.ControlCollection.IsSynchronized%2A>属性将检查以确定操作是否线程安全的以及是否不是，<xref:System.Web.UI.ControlCollection.SyncRoot%2A>属性用于获取要使操作是线程安全的对象。</span><span class="sxs-lookup"><span data-stu-id="0f817-194">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="0f817-195">在枚举完成时，值<xref:System.Web.UI.ControlCollection.IsReadOnly%2A>属性写作为<xref:System.Web.UI.WebControls.Label.Text%2A>属性<xref:System.Web.UI.WebControls.Label>包含页上的控件。</span><span class="sxs-lookup"><span data-stu-id="0f817-195">When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
  </Members>
</Type>