<Type Name="PartialCachingControl" FullName="System.Web.UI.PartialCachingControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba992ccdf851797dca1fb58725846e705dfc93b3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30605131" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PartialCachingControl : System.Web.UI.BasePartialCachingControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PartialCachingControl extends System.Web.UI.BasePartialCachingControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PartialCachingControl" />
  <TypeSignature Language="VB.NET" Value="Public Class PartialCachingControl&#xA;Inherits BasePartialCachingControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class PartialCachingControl : System::Web::UI::BasePartialCachingControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.BasePartialCachingControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在以下情况下创建：使用页指令或 <see cref="T:System.Web.UI.PartialCachingAttribute" /> 特性为输出缓存指定用户控件（.ascx 文件），且通过使用 <see cref="M:System.Web.UI.TemplateControl.LoadControl(System.String)" /> 方法动态加载用户控件，从而将用户控件插入页的控件层次结构。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 页面和控件开发人员不能使用<xref:System.Web.UI.PartialCachingControl>类直接。 ASP.NET 创建的实例<xref:System.Web.UI.PartialCachingControl>类用于包装用户控件 （.ascx 文件） 时动态加载的用户控件启用输出缓存。 你可以启用输出缓存使用的用户控件[@ OutputCache](http://msdn.microsoft.com/library/28a9e101-fb44-4198-9cb6-b8a52312fec2)页指令或<xref:System.Web.UI.PartialCachingAttribute>属性。  
  
 你用户控件添加到页面以编程方式通过调用<xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=nameWithType>方法。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CachedControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control CachedControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control CachedControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PartialCachingControl.CachedControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ CachedControl { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对已缓存的用户控件的引用。</summary>
        <value>已缓存的用户控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 仅在其输出不会缓存时，此属性将返回的用户控件。 用户控制输出中是否存在输出缓存，此属性返回`null`，因为未创建的控件的实例。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>