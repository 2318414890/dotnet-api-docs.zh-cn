<Type Name="Page" FullName="System.Web.UI.Page">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f721b2567579346df3fa88fb8c8539fab884192" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Page : System.Web.UI.TemplateControl, System.Web.IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Page extends System.Web.UI.TemplateControl implements class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Page" />
  <TypeSignature Language="VB.NET" Value="Public Class Page&#xA;Inherits TemplateControl&#xA;Implements IHttpHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Page : System::Web::UI::TemplateControl, System::Web::IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.TemplateControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("ASPXCodeBehind")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f9efe-101">表示一个从托管 ASP.NET Web 应用程序的服务器请求的 .aspx 文件（也称为 Web 窗体页）。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f9efe-101">Represents an .aspx file, also known as a Web Forms page, requested from a server that hosts an ASP.NET Web application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-102"><xref:System.Web.UI.Page>类是与具有.aspx 扩展名的文件关联。</span><span class="sxs-lookup"><span data-stu-id="f9efe-102">The <xref:System.Web.UI.Page> class is associated with files that have an .aspx extension.</span></span> <span data-ttu-id="f9efe-103">这些文件在运行时作为编译<xref:System.Web.UI.Page>对象，并在服务器内存中缓存。</span><span class="sxs-lookup"><span data-stu-id="f9efe-103">These files are compiled at run time as <xref:System.Web.UI.Page> objects and cached in server memory.</span></span>  
  
 <span data-ttu-id="f9efe-104">如果你想要创建 Web 窗体页使用的代码隐藏技术，派生自此类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-104">If you want to create a Web Forms page using the code-behind technique, derive from this class.</span></span> <span data-ttu-id="f9efe-105">快速应用程序开发 (RAD) 的设计器，如 Microsoft Visual Studio 自动使用此模型来创建 Web 窗体页面。</span><span class="sxs-lookup"><span data-stu-id="f9efe-105">Rapid application development (RAD) designers, such as Microsoft Visual Studio, automatically use this model to create Web Forms pages.</span></span>  
  
 <span data-ttu-id="f9efe-106"><xref:System.Web.UI.Page>对象用作在页中，除了实现的所有服务器控件的命名容器<xref:System.Web.UI.INamingContainer>接口或子控件实现此接口的控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-106">The <xref:System.Web.UI.Page> object serves as the naming container for all server controls in a page, except those that implement the <xref:System.Web.UI.INamingContainer> interface or are child controls of controls that implement this interface.</span></span>  
  
 <span data-ttu-id="f9efe-107"><xref:System.Web.UI.Page>类是一个控件，充当 Web 应用程序的用户界面并因此应审查后, 接编写安全代码和保护应用程序，请确保最佳做法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-107">The <xref:System.Web.UI.Page> class is a control that acts as the user interface for your Web application, and as such should be scrutinized to make sure best practices for writing secure code and securing applications are followed.</span></span> <span data-ttu-id="f9efe-108">有关这些主题的常规信息，请参阅[Web 应用程序安全威胁概述](http://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a)， [NIB： 安全策略最佳实践](http://msdn.microsoft.com/library/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05)，和[安全性的基础概念](~/docs/standard/security/key-security-concepts.md)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-108">For general information on these topics, see [Overview of Web Application Security Threats](http://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a), [NIB: Security Policy Best Practices](http://msdn.microsoft.com/library/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), and [Key Security Concepts](~/docs/standard/security/key-security-concepts.md).</span></span> <span data-ttu-id="f9efe-109">有关详细信息，请参阅[保护标准控件](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)，[如何： 显示安全错误消息](http://msdn.microsoft.com/library/6f70ac33-6e11-4e98-ab7d-bae9c0e7eefa)，[如何： 保护对脚本利用在 Web 应用程序中的应用的 HTML编码为字符串](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)，和[验证控件简介](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-109">For more specific information, see [Securing Standard Controls](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [How to: Display Safe Error Messages](http://msdn.microsoft.com/library/6f70ac33-6e11-4e98-ab7d-bae9c0e7eefa), [How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), and [Introduction to the Validation Controls](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-110">Visual Studio Web 站点项目与源代码是可用本主题可以附带：[下载](http://go.microsoft.com/fwlink/?LinkId=192425)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192425).</span></span>  
  
 <span data-ttu-id="f9efe-111">下面的代码示例演示如何<xref:System.Web.UI.Page>类在代码隐藏页模型中使用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-111">The following code example demonstrates how the <xref:System.Web.UI.Page> class is used in the code-behind page model.</span></span> <span data-ttu-id="f9efe-112">请注意，代码隐藏源文件声明从基本页的类继承的分部类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-112">Note that the code-behind source file declares a partial class that inherits from a base page class.</span></span> <span data-ttu-id="f9efe-113">基本页类可以是<xref:System.Web.UI.Page>，也可以是派生自的另一个类<xref:System.Web.UI.Page>。</span><span class="sxs-lookup"><span data-stu-id="f9efe-113">The base page class can be <xref:System.Web.UI.Page>, or it can be another class that derives from <xref:System.Web.UI.Page>.</span></span> <span data-ttu-id="f9efe-114">此外，请注意，该分部类允许要使用而无需页面上定义的控件将其定义为字段成员的代码隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-114">Furthermore, note that the partial class allows the code-behind file to use controls defined on the page without the need to define them as field members.</span></span>  
  
 [!code-csharp[System.Web.UI.Page_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Overview/cs/pageexample.aspx.cs#2)]
 [!code-vb[System.Web.UI.Page_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Overview/vb/pageexample.aspx.vb#2)]  
  
 <span data-ttu-id="f9efe-115">下面的代码示例演示与前面的代码隐藏源文件相对应的.aspx 文件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-115">The following code example shows the .aspx file that corresponds to the preceding code-behind source file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9efe-116">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="f9efe-116">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f9efe-117">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-117">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f9efe-118">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-118">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Overview/cs/pageexample.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Overview/vb/pageexample.aspx#1)]  
  
 <span data-ttu-id="f9efe-119">你必须使用指令，并使用`Inherits`和`CodeFile`属性链接到的.aspx 文件的代码隐藏文件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-119">You must use the  directive and use the `Inherits` and `CodeFile` attributes to link the code-behind file to the .aspx file.</span></span> <span data-ttu-id="f9efe-120">在此示例中，`Inherits`属性指示`MyCodeBehind`类和`CodeFile`属性指示包含的类的特定于语言的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="f9efe-120">In this example, the `Inherits` attribute indicates the `MyCodeBehind` class and the `CodeFile` attribute indicates the path to the language-specific file that contains the class.</span></span>  
  
 <span data-ttu-id="f9efe-121">下面的代码示例演示单文件页模型以及如何访问<xref:System.Web.UI.Page.IsPostBack%2A>属性和<xref:System.Web.UI.Page.Response%2A>属性<xref:System.Web.UI.Page>。</span><span class="sxs-lookup"><span data-stu-id="f9efe-121">The following code example demonstrates the single-file page model and how to access the <xref:System.Web.UI.Page.IsPostBack%2A> property and the <xref:System.Web.UI.Page.Response%2A> property of the <xref:System.Web.UI.Page>.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page_Overview2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Overview2/cs/pageexample.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page_Overview2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Overview2/vb/pageexample.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Page ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Page();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-122">初始化 <see cref="T:System.Web.UI.Page" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-122">Initializes a new instance of the <see cref="T:System.Web.UI.Page" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-123">默认构造函数初始化为其默认值的所有字段。</span><span class="sxs-lookup"><span data-stu-id="f9efe-123">The default constructor initializes all fields to their default values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContentTemplate">
      <MemberSignature Language="C#" Value="protected internal void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddContentTemplate(string templateName, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddContentTemplate (templateName As String, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddContentTemplate(System::String ^ templateName, System::Web::UI::ITemplate ^ template);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" />
      </Parameters>
      <Docs>
        <param name="templateName">
          <span data-ttu-id="f9efe-124">要添加的内容模板的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-124">The name of the content template to add.</span>
          </span>
        </param>
        <param name="template">
          <span data-ttu-id="f9efe-125">内容模板</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-125">The content template</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-126">在页初始化过程中调用，用于创建传递给母版页的内容（来自内容控件）的集合，前提是当前页或母版页引用母版页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-126">Called during page initialization to create a collection of content (from content controls) that is handed to a master page, if the current page or master page refers to a master page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f9efe-127">已存在相同名称的内容模板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-127">A content template with the same name already exists.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.MasterPage" />
        <altmember cref="T:System.Web.UI.WebControls.Content" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPreRenderCompleteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-128">为异步页注册开始和结束事件处理程序委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-128">Registers beginning and ending event handler delegates for an asynchronous page.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.UI.MasterPage" />
        <altmember cref="T:System.Web.UI.WebControls.Content" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPreRenderCompleteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRenderCompleteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRenderCompleteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRenderCompleteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="f9efe-129">
            <see cref="T:System.Web.BeginEventHandler" /> 方法的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-129">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="f9efe-130">
            <see cref="T:System.Web.EndEventHandler" /> 方法的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-130">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-131">为异步页注册不需要状态信息的开始和结束事件处理程序委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-131">Registers beginning and ending event handler delegates that do not require state information for an asynchronous page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-132">使用<xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A>方法将处理程序添加到异步网页。</span><span class="sxs-lookup"><span data-stu-id="f9efe-132">Use the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to add handlers to an asynchronous Web page.</span></span>  
  
 <span data-ttu-id="f9efe-133">你可以注册多个异步处理程序;但是，只有一个处理程序运行一次。</span><span class="sxs-lookup"><span data-stu-id="f9efe-133">You can register multiple asynchronous handlers; however, only one handler runs at a time.</span></span> <span data-ttu-id="f9efe-134">如果你想要同时处理多个异步方法，则应使用单个<xref:System.Web.BeginEventHandler>方法并启动从该处理程序的多个异步操作。</span><span class="sxs-lookup"><span data-stu-id="f9efe-134">If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler.</span></span>  
  
 <span data-ttu-id="f9efe-135">异步处理程序调用之间<xref:System.Web.UI.Control.PreRender>和<xref:System.Web.UI.Page.PreRenderComplete>事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-135">The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events.</span></span>  
  
 <span data-ttu-id="f9efe-136">首先，所有<xref:System.Web.UI.Page>事件 (通过<xref:System.Web.UI.Control.PreRender>事件) 运行，然后每个注册<xref:System.Web.BeginEventHandler>调用方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-136">First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called.</span></span> <span data-ttu-id="f9efe-137">处理程序完成后，相应<xref:System.Web.EndEventHandler>调用方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-137">When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called.</span></span> <span data-ttu-id="f9efe-138">如果有多个异步处理程序，调用下一步的处理程序。</span><span class="sxs-lookup"><span data-stu-id="f9efe-138">If there are multiple asynchronous handlers, the next handler is called.</span></span>  
  
 <span data-ttu-id="f9efe-139">调用的已注册的异步事件处理程序之后，调用页事件的其余部分，从<xref:System.Web.UI.Page.PreRenderComplete>事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-139">After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-140">下面的代码示例使用的异步请求来显示中的本地 Web 服务器的默认页的 HTML 源代码<xref:System.Web.UI.WebControls.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-140">The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9efe-141">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="f9efe-141">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f9efe-142">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-142">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f9efe-143">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-143">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/CS/pageaddonprerendercompleteasynccs.aspx#1)]
 [!code-aspx-vb[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/VB/pageaddonprerendercompleteasyncvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-144">
            <see langword="&lt;async&gt;" /> 页指令没有设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-144">The <see langword="&lt;async&gt;" /> page directive is not set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="f9efe-145">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-145">\- or -</span>
          </span>
          <span data-ttu-id="f9efe-146">
            <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> 方法在 <see cref="E:System.Web.UI.Control.PreRender" /> 事件之后调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-146">The <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> method is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9efe-147">
            <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> 或 <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-147">The <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> or <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.MasterPage" />
        <altmember cref="T:System.Web.UI.WebControls.Content" />
      </Docs>
    </Member>
    <Member MemberName="AddOnPreRenderCompleteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRenderCompleteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRenderCompleteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRenderCompleteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="f9efe-148">
            <see cref="T:System.Web.BeginEventHandler" /> 方法的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-148">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="f9efe-149">
            <see cref="T:System.Web.EndEventHandler" /> 方法的委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-149">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="f9efe-150">一个包含事件处理程序的状态信息的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-150">An object containing state information for the event handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-151">为异步页注册开始和结束事件处理程序委托。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-151">Registers beginning and ending  event handler delegates for an asynchronous page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-152">使用<xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A>方法添加处理程序需要到异步的 Web 页的状态信息。</span><span class="sxs-lookup"><span data-stu-id="f9efe-152">Use the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to add handlers that require state information to an asynchronous Web page.</span></span> <span data-ttu-id="f9efe-153">在传递的对象`state`参数可以为你的应用程序要求中指定的事件处理程序委托之间传输信息的任何对象`beginHandler`和`endHandler`参数。</span><span class="sxs-lookup"><span data-stu-id="f9efe-153">The object passed in the `state` parameter can be any object that your application requires to transfer information between event handler delegates specified in the `beginHandler` and the `endHandler` parameters.</span></span>  
  
 <span data-ttu-id="f9efe-154">你可以注册多个异步处理程序;但是，只有一个处理程序运行一次。</span><span class="sxs-lookup"><span data-stu-id="f9efe-154">You can register multiple asynchronous handlers; however, only one handler runs at a time.</span></span> <span data-ttu-id="f9efe-155">如果你想要同时处理多个异步方法，则应使用单个<xref:System.Web.BeginEventHandler>方法并启动从该处理程序的多个异步操作。</span><span class="sxs-lookup"><span data-stu-id="f9efe-155">If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler.</span></span>  
  
 <span data-ttu-id="f9efe-156">异步处理程序调用之间<xref:System.Web.UI.Control.PreRender>和<xref:System.Web.UI.Page.PreRenderComplete>事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-156">The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events.</span></span>  
  
 <span data-ttu-id="f9efe-157">首先，所有<xref:System.Web.UI.Page>事件 (通过<xref:System.Web.UI.Control.PreRender>事件) 运行，然后每个注册<xref:System.Web.BeginEventHandler>调用方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-157">First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called.</span></span> <span data-ttu-id="f9efe-158">处理程序完成后，相应<xref:System.Web.EndEventHandler>调用方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-158">When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called.</span></span> <span data-ttu-id="f9efe-159">如果有多个异步处理程序，调用下一步的处理程序。</span><span class="sxs-lookup"><span data-stu-id="f9efe-159">If there are multiple asynchronous handlers, the next handler is called.</span></span>  
  
 <span data-ttu-id="f9efe-160">调用的已注册的异步事件处理程序之后，调用页事件的其余部分，从<xref:System.Web.UI.Page.PreRenderComplete>事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-160">After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-161">下面的代码示例使用的异步请求来显示中的本地 Web 服务器的默认页的 HTML 源代码<xref:System.Web.UI.WebControls.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-161">The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9efe-162">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="f9efe-162">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f9efe-163">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-163">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f9efe-164">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-164">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/CS/pageaddonprerendercompleteasynccs.aspx#1)]
 [!code-aspx-vb[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/VB/pageaddonprerendercompleteasyncvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-165">
            <see langword="&lt;async&gt;" /> 页指令没有设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-165">The <see langword="&lt;async&gt;" /> page directive is not set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="f9efe-166">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-166">\- or -</span>
          </span>
          <span data-ttu-id="f9efe-167">
            <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> 方法在 <see cref="E:System.Web.UI.Control.PreRender" /> 事件之后调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-167">The <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> method is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9efe-168">
            <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> 或 <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-168">The <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> or <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddWrappedFileDependencies">
      <MemberSignature Language="C#" Value="protected internal void AddWrappedFileDependencies (object virtualFileDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddWrappedFileDependencies(object virtualFileDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddWrappedFileDependencies(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddWrappedFileDependencies (virtualFileDependencies As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddWrappedFileDependencies(System::Object ^ virtualFileDependencies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualFileDependencies" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="virtualFileDependencies">
          <span data-ttu-id="f9efe-169">一个包含文件名列表的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-169">An <see cref="T:System.Object" /> containing the list of file names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-170">添加组成当前页的依赖文件的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-170">Adds a list of dependent files that make up the current page.</span>
          </span>
          <span data-ttu-id="f9efe-171">此方法由 ASP.NET 页框架在内部使用，不应从代码直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-171">This method is used internally by the ASP.NET page framework and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-172"><xref:System.Web.UI.Page.AddWrappedFileDependencies%2A>方法将添加的文件，如用户控件文件，构成当前页的列表。</span><span class="sxs-lookup"><span data-stu-id="f9efe-172">The <xref:System.Web.UI.Page.AddWrappedFileDependencies%2A> method adds a list of files, such as user control files, that make up the current page.</span></span> <span data-ttu-id="f9efe-173">如果任何这些页被修改，整个页面编译会在被请求的下一步时间。</span><span class="sxs-lookup"><span data-stu-id="f9efe-173">If any of these pages is modified, the entire page is compiled the next time it is requested.</span></span> <span data-ttu-id="f9efe-174">此方法支持 .NET Framework 基础结构，但不适合直接在代码中使用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-174">This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-175">为当前 Web 请求获取 <see cref="T:System.Web.HttpApplicationState" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-175">Gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current Web request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-176">
            <see cref="T:System.Web.HttpApplicationState" /> 类中的当前数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-176">The current data in the <see cref="T:System.Web.HttpApplicationState" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[Page.Application_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page.Application_Sample1/CS/applicationcs.aspx#1)]
 [!code-vb[Page.Application_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page.Application_Sample1/VB/applicationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpApplicationState" />
      </Docs>
    </Member>
    <Member MemberName="AspCompatBeginProcessRequest">
      <MemberSignature Language="C#" Value="protected IAsyncResult AspCompatBeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult AspCompatBeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback cb, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function AspCompatBeginProcessRequest (context As HttpContext, cb As AsyncCallback, extraData As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ AspCompatBeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ cb, System::Object ^ extraData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="cb" Type="System.AsyncCallback" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f9efe-177">一个具有关于当前请求的信息的 <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-177">An <see cref="T:System.Web.HttpContext" /> with information about the current request.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="f9efe-178">回调方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-178">The callback method.</span>
          </span>
        </param>
        <param name="extraData">
          <span data-ttu-id="f9efe-179">使用与 ASP 请求相同的方式处理请求所需的任何额外数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-179">Any extra data needed to process the request in the same manner as an ASP request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-180">启动对 Active Server Page (ASP) 资源的请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-180">Initiates a request for Active Server Page (ASP) resources.</span>
          </span>
          <span data-ttu-id="f9efe-181">提供此方法是为了与旧式 ASP 应用程序兼容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-181">This method is provided for compatibility with legacy ASP applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-182">一个 <see cref="T:System.IAsyncResult" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-182">An <see cref="T:System.IAsyncResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-183">请勿调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-183">Do not call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AspCompatEndProcessRequest">
      <MemberSignature Language="C#" Value="protected void AspCompatEndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AspCompatEndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AspCompatEndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AspCompatEndProcessRequest(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="f9efe-184">由该请求生成的 ASP 页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-184">The ASP page generated by the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-185">终止对 Active Server Page (ASP) 资源的请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-185">Terminates a request for Active Server Page (ASP) resources.</span>
          </span>
          <span data-ttu-id="f9efe-186">提供此方法是为了与旧式 ASP 应用程序兼容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-186">This method is provided for compatibility with legacy ASP applications.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-187">请勿调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-187">Do not call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AspCompatMode">
      <MemberSignature Language="C#" Value="protected bool AspCompatMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AspCompatMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AspCompatMode" />
      <MemberSignature Language="VB.NET" Value="Protected Property AspCompatMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool AspCompatMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-188">设置一个值，它指示页是否可在单线程单元 (STA) 线程上执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-188">Sets a value indicating whether the page can be executed on a single-threaded apartment (STA) thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-189">如果页支持 Active Server Pages (ASP)，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-189">
              <see langword="true" /> if the page supports Active Server Pages (ASP) code; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9efe-190">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-190">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-191">当设置为`true`，此属性允许页后，可以在单线程单元 (STA) 线程上执行。</span><span class="sxs-lookup"><span data-stu-id="f9efe-191">When set to `true`, this property allows the page to be executed on a single-threaded apartment (STA) thread.</span></span> <span data-ttu-id="f9efe-192">这允许页后，可以调用 STA 组件，如使用 Visual Basic 6.0 中开发的组件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-192">This allows the page to call STA components, such as components developed with Visual Basic 6.0.</span></span> <span data-ttu-id="f9efe-193">此属性设置为`true`还允许页后，可以调用 COM + 组件需要访问非托管的 ASP 内置对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-193">Setting this property to `true` also allows the page to call COM+ components that require access to the unmanaged ASP built-in objects.</span></span> <span data-ttu-id="f9efe-194">这些是可通过 ASP 访问`ObjectContext`对象或`OnStartPage`方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-194">These are accessible through the ASP `ObjectContext` object or the `OnStartPage` method.</span></span>  
  
 <span data-ttu-id="f9efe-195">在大多数情况下，不要在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-195">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f9efe-196">设置`aspcompat`属性设为`true`.aspx 文件中使用指令。</span><span class="sxs-lookup"><span data-stu-id="f9efe-196">Set the `aspcompat` attribute to `true` using the  directive in the .aspx file.</span></span> <span data-ttu-id="f9efe-197">当请求页时，动态生成的类来设置属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-197">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncMode">
      <MemberSignature Language="C#" Value="protected bool AsyncMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsyncMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AsyncMode" />
      <MemberSignature Language="VB.NET" Value="Protected Property AsyncMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool AsyncMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-198">设置一个指示对页进行同步还是异步处理的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-198">Sets a value indicating whether the page is processed synchronously or asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-199">如果异步处理页，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-199">
              <see langword="true" /> if the page is processed asynchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-200"><xref:System.Web.UI.Page.AsyncMode%2A>属性由设置<xref:System.Web.UI.Page>分析器生成页代码时。</span><span class="sxs-lookup"><span data-stu-id="f9efe-200">The <xref:System.Web.UI.Page.AsyncMode%2A> property is set by the <xref:System.Web.UI.Page> parser when code for the page is generated.</span></span> <span data-ttu-id="f9efe-201">使用`Async`在指令中设置此值的属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-201">Use the `Async` attribute in  directive to set this value.</span></span>  
  
 <span data-ttu-id="f9efe-202">异步页不工作时`AspCompat`属性设置为`true`或`Transaction`属性设置为值`Disabled`在指令中。</span><span class="sxs-lookup"><span data-stu-id="f9efe-202">Asynchronous pages do not work when the `AspCompat` attribute is set to `true` or the `Transaction` attribute is set to a value other than `Disabled` in the  directive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncPageBeginProcessRequest">
      <MemberSignature Language="C#" Value="protected IAsyncResult AsyncPageBeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult AsyncPageBeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback callback, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function AsyncPageBeginProcessRequest (context As HttpContext, callback As AsyncCallback, extraData As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ AsyncPageBeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ callback, System::Object ^ extraData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f9efe-203">该请求的 <see cref="T:System.Web.HttpContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-203">The <see cref="T:System.Web.HttpContext" /> for the request.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="f9efe-204">用于通知处理完成时间的回调方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-204">The callback method to notify when the process is complete.</span>
          </span>
        </param>
        <param name="extraData">
          <span data-ttu-id="f9efe-205">异步方法的状态数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-205">State data for the asynchronous method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-206">开始处理异步页请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-206">Begins processing an asynchronous page request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-207">引用该异步请求的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-207">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncPageEndProcessRequest">
      <MemberSignature Language="C#" Value="protected void AsyncPageEndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AsyncPageEndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AsyncPageEndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AsyncPageEndProcessRequest(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="f9efe-208">一个引用挂起的异步请求的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-208">An <see cref="T:System.IAsyncResult" /> referencing a pending asynchronous request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-209">结束处理异步页请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-209">Ends processing an asynchronous page request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan AsyncTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AsyncTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AsyncTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan AsyncTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-210">获取或设置一个值，它指示处理异步任务时使用的超时间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-210">Gets or sets a value indicating the time-out interval used when processing asynchronous tasks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-211">一个 <see cref="T:System.TimeSpan" />，包含完成异步任务所允许的时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-211">A <see cref="T:System.TimeSpan" /> that contains the allowed time interval for completion of the asynchronous task.</span>
          </span>
          <span data-ttu-id="f9efe-212">默认时间间隔为 45 秒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-212">The default time interval is 45 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-213">页的异步超时表示页将等待执行异步任务的时间量。</span><span class="sxs-lookup"><span data-stu-id="f9efe-213">The asynchronous time-out of the page represents the amount of time that the page will wait to perform asynchronous tasks.</span></span> <span data-ttu-id="f9efe-214">在大多数情况下，不要在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-214">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f9efe-215">设置页异步超时间隔使用的 Web 配置文件或在指令中。</span><span class="sxs-lookup"><span data-stu-id="f9efe-215">Set the page asynchronous time-out interval using the  of the Web configuration file or in the  directive.</span></span> <span data-ttu-id="f9efe-216">由页指令覆盖页配置节中设置的值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-216">Values set in the page configuration section are overwritten by the page directive.</span></span>  
  
 <span data-ttu-id="f9efe-217">定义你异步任务使用<xref:System.Web.UI.PageAsyncTask>类并注册开始日期、 结束和超时处理程序。</span><span class="sxs-lookup"><span data-stu-id="f9efe-217">Define your asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class and register a beginning, an ending, and a time-out handler.</span></span> <span data-ttu-id="f9efe-218">如果在指定时间段内未完成异步任务，将调用超时处理程序。</span><span class="sxs-lookup"><span data-stu-id="f9efe-218">If the asynchronous task does not complete in the time interval specified, the time-out handler will be invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-219">下面的代码示例演示如何将<xref:System.Web.UI.Page.AsyncTimeout%2A>具有属性<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>和<xref:System.Web.UI.Page.RegisterAsyncTask%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-219">The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods.</span></span> <span data-ttu-id="f9efe-220">请注意开始、 结束和超时的处理程序的使用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-220">Note the use of beginning, ending, and time-out handlers.</span></span> <span data-ttu-id="f9efe-221">在示例中，引入了人工延迟以演示超出分配的时间内中指定的任务的异步任务的情况下<xref:System.Web.UI.Page.AsyncTimeout%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-221">In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property.</span></span> <span data-ttu-id="f9efe-222">在实际方案中，一个异步任务无法用于执行数据库调用或图像生成，例如，和超时处理程序提供合适的委托，如果不在指定的时间内执行任务。</span><span class="sxs-lookup"><span data-stu-id="f9efe-222">In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.</span></span> <span data-ttu-id="f9efe-223">请注意，<xref:System.Web.UI.Page.AsyncTimeout%2A>在页面指令中设置属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-223">Note that the <xref:System.Web.UI.Page.AsyncTimeout%2A> property is set in the page directive.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.cs#2)]
 [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9efe-224">该属性设置为负值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-224">The property was set to a negative value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.ExecuteRegisteredAsyncTasks" />
        <altmember cref="M:System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)" />
        <altmember cref="T:System.Web.UI.PageAsyncTask" />
      </Docs>
    </Member>
    <Member MemberName="AutoPostBackControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control AutoPostBackControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control AutoPostBackControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AutoPostBackControl" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPostBackControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ AutoPostBackControl { System::Web::UI::Control ^ get(); void set(System::Web::UI::Control ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-225">获取或设置页中用于执行回发的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-225">Gets or sets the control in the page that is used to perform postbacks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-226">用于执行回发的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-226">The control that is used to perform postbacks.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public bool Buffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public Property Buffer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Buffer { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-227">设置指示是否对页输出进行缓冲处理的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-227">Sets a value indicating whether the page output is buffered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-228">如果对页输出进行缓冲处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-228">
              <see langword="true" /> if page output is buffered; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9efe-229">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-229">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-230">在大多数情况下，不要在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-230">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f9efe-231">设置<xref:System.Web.UI.Page.Buffer%2A>属性设为`true`.aspx 文件中使用指令。</span><span class="sxs-lookup"><span data-stu-id="f9efe-231">Set the <xref:System.Web.UI.Page.Buffer%2A> attribute to `true` using the  directive in the .aspx file.</span></span> <span data-ttu-id="f9efe-232">当请求页时，动态生成的类来设置属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-232">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9efe-233"><xref:System.Web.UI.Page.Buffer%2A>属性设置和获取<xref:System.Web.HttpResponse.BufferOutput%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-233">The <xref:System.Web.UI.Page.Buffer%2A> property sets and gets the <xref:System.Web.HttpResponse.BufferOutput%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Cache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-234">获取与该页驻留的应用程序关联的 <see cref="T:System.Web.Caching.Cache" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-234">Gets the <see cref="T:System.Web.Caching.Cache" /> object associated with the application in which the page resides.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-235">与该页的应用程序关联的 <see cref="T:System.Web.Caching.Cache" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-235">The <see cref="T:System.Web.Caching.Cache" /> associated with the page's application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-236">应用程序的<xref:System.Web.Caching.Cache>对象允许你存储和检索在后续请求的任意数据。</span><span class="sxs-lookup"><span data-stu-id="f9efe-236">An application's <xref:System.Web.Caching.Cache> object allows you to store and retrieve arbitrary data on subsequent requests.</span></span> <span data-ttu-id="f9efe-237">缓存未专门关联与页或用户会话。</span><span class="sxs-lookup"><span data-stu-id="f9efe-237">The cache is not specifically associated with a page or user session.</span></span> <span data-ttu-id="f9efe-238">它主要用于增强应用程序性能。</span><span class="sxs-lookup"><span data-stu-id="f9efe-238">It is used primarily to enhance application performance.</span></span> <span data-ttu-id="f9efe-239">有关详细信息，请参阅[缓存应用程序数据](http://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-239">For more information, see [Caching Application Data](http://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d).</span></span> <span data-ttu-id="f9efe-240">应用程序缓存和页面输出缓存之间的差异的详细信息，请参阅[ASP.NET 缓存概述](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-240">For more information on the difference between application caching and page output caching, see [ASP.NET Caching Overview](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-241">下面的代码示例将插入到两个整数的总和<xref:System.Web.Caching.Cache?displayProperty=nameWithType>对象使用<xref:System.Web.UI.Page.Cache%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-241">The following code example inserts the sum of two integers into the <xref:System.Web.Caching.Cache?displayProperty=nameWithType> object using the <xref:System.Web.UI.Page.Cache%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f9efe-242">然后检索值使用<xref:System.Web.Caching.Cache.Get%2A?displayProperty=nameWithType>方法并将其写入<xref:System.Web.UI.WebControls.Label>Web 服务器控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-242">It then retrieves the value using the <xref:System.Web.Caching.Cache.Get%2A?displayProperty=nameWithType> method and writes it to a <xref:System.Web.UI.WebControls.Label> Web server control.</span></span>  
  
 [!code-csharp[System.Web.Page.Cache_Replacement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Page.Cache_Replacement/CS/pagecachecs.aspx#1)]
 [!code-vb[System.Web.Page.Cache_Replacement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Page.Cache_Replacement/VB/pagecachevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f9efe-243">未创建 <see cref="T:System.Web.Caching.Cache" /> 的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-243">An instance of <see cref="T:System.Web.Caching.Cache" /> is not created.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName="ClientQueryString">
      <MemberSignature Language="C#" Value="public string ClientQueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientQueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ClientQueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientQueryString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-244">获取请求的 URL 的查询字符串部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-244">Gets the query string portion of the requested URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-245">请求的 URL 的查询字符串部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-245">The query string portion of the requested URL.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-246"><xref:System.Web.UI.Page.ClientQueryString%2A>属性包含请求的浏览器的 URL 的查询字符串部分。</span><span class="sxs-lookup"><span data-stu-id="f9efe-246">The <xref:System.Web.UI.Page.ClientQueryString%2A> property contains the query string portion of the URL requested by the browser.</span></span> <span data-ttu-id="f9efe-247">例如，如果所请求的 URL 为"http://www.contoso.com/default.aspx?id=100"，则<xref:System.Web.UI.Page.ClientQueryString%2A>属性将包含"id = 100"。</span><span class="sxs-lookup"><span data-stu-id="f9efe-247">For example, if the requested URL is "http://www.contoso.com/default.aspx?id=100", the <xref:System.Web.UI.Page.ClientQueryString%2A> property will contain "id=100".</span></span> <span data-ttu-id="f9efe-248"><xref:System.Web.UI.Page.ClientQueryString%2A>编码属性; 使用<xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=nameWithType>方法进行解码的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="f9efe-248">The <xref:System.Web.UI.Page.ClientQueryString%2A> property is encoded; use the <xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=nameWithType> method to decode the query string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientScript">
      <MemberSignature Language="C#" Value="public System.Web.UI.ClientScriptManager ClientScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ClientScriptManager ClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ClientScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientScript As ClientScriptManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ClientScriptManager ^ ClientScript { System::Web::UI::ClientScriptManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientScriptManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-249">获取用于管理脚本、注册脚本和向页添加脚本的 <see cref="T:System.Web.UI.ClientScriptManager" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-249">Gets a <see cref="T:System.Web.UI.ClientScriptManager" /> object used to manage, register, and add script to the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-250">
            <see cref="T:System.Web.UI.ClientScriptManager" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-250">A <see cref="T:System.Web.UI.ClientScriptManager" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-251">使用<xref:System.Web.UI.Page.ClientScript%2A>属性来获取<xref:System.Web.UI.ClientScriptManager>可以用于管理、 注册脚本和将脚本添加到网页上的对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-251">Use the <xref:System.Web.UI.Page.ClientScript%2A> property to get a <xref:System.Web.UI.ClientScriptManager> object that can be used to manage, register, and add script to a Web page.</span></span> <span data-ttu-id="f9efe-252">有关更多信息，请参见 <xref:System.Web.UI.ClientScriptManager> 类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-252">For more information, see the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
 <span data-ttu-id="f9efe-253"><xref:System.Web.UI.ClientScriptManager>类是中新增[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]，并替换<xref:System.Web.UI.Page>类用于管理现已弃用的脚本方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-253">The <xref:System.Web.UI.ClientScriptManager> class is new in [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] and replaces <xref:System.Web.UI.Page> class methods for managing scripts that are now deprecated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-254">有关示例，请参阅<xref:System.Web.UI.ClientScriptManager>类概述主题。</span><span class="sxs-lookup"><span data-stu-id="f9efe-254">For an example, see the <xref:System.Web.UI.ClientScriptManager> class overview topic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="ClientTarget">
      <MemberSignature Language="C#" Value="public string ClientTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientTarget" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ClientTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientTarget As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientTarget { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-255">获取或设置一个值，该值使您得以重写对浏览器功能的自动检测，并指定针对特定的浏览器客户端页的呈现方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-255">Gets or sets a value that allows you to override automatic detection of browser capabilities and to specify how a page is rendered for particular browser clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-256">
            <see cref="T:System.String" />，指定要重写的浏览器功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-256">A <see cref="T:System.String" /> that specifies the browser capabilities that you want to override.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-257">如果你未设置<xref:System.Web.UI.Page.ClientTarget%2A>属性，<xref:System.Web.HttpBrowserCapabilities>与关联的对象<xref:System.Web.UI.Page.Request%2A?displayProperty=nameWithType>属性反映客户端浏览器的功能。</span><span class="sxs-lookup"><span data-stu-id="f9efe-257">If you do not set the <xref:System.Web.UI.Page.ClientTarget%2A> property, the <xref:System.Web.HttpBrowserCapabilities> object associated with the <xref:System.Web.UI.Page.Request%2A?displayProperty=nameWithType> property reflects the capabilities of the client browser.</span></span> <span data-ttu-id="f9efe-258">如果设置此属性，则禁用客户端浏览器检测和页将使用你提供的值 （别名） 相关联的浏览器功能。</span><span class="sxs-lookup"><span data-stu-id="f9efe-258">If you do set this property, client browser detection is disabled and the page will use browser capabilities associated with the value (alias) that you provide.</span></span>  
  
 <span data-ttu-id="f9efe-259">Web 服务器计算机上的根 Web.config 配置文件定义你可以使用常见用户代理字符串作为速记的以下默认别名：</span><span class="sxs-lookup"><span data-stu-id="f9efe-259">The root Web.config configuration file on the Web server computer defines the following default aliases that you can use as shorthand for common user-agent strings:</span></span>  
  
-   <span data-ttu-id="f9efe-260">`uplevel`它指定浏览器功能等效于 Internet Explorer 6.0。</span><span class="sxs-lookup"><span data-stu-id="f9efe-260">`uplevel`, which specifies browser capabilities equivalent to Internet Explorer 6.0.</span></span>  
  
-   <span data-ttu-id="f9efe-261">`downlevel`它指定浏览器功能等效于较旧的浏览器不支持客户端脚本。</span><span class="sxs-lookup"><span data-stu-id="f9efe-261">`downlevel`, which specifies browser capabilities equivalent to older browsers that do not support client script.</span></span> <span data-ttu-id="f9efe-262">可以使用此别名以确定 Web 页面已禁用的客户端脚本的浏览器中工作原理。</span><span class="sxs-lookup"><span data-stu-id="f9efe-262">You can use this alias to determine how Web pages would work in a browser that has client script disabled.</span></span>  
  
 <span data-ttu-id="f9efe-263">你可以设置使用此属性，以编程方式的别名也可以设置它以声明方式使用`ClientTarget`指令的特性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-263">You can set the alias programmatically using this property, or you can set it declaratively using the `ClientTarget` attribute of the  directive.</span></span>  
  
 <span data-ttu-id="f9efe-264">你可以定义中的其他别名`clientTarget`的应用程序级别的 Web.config 文件的部分。</span><span class="sxs-lookup"><span data-stu-id="f9efe-264">You can define additional aliases in the `clientTarget` section of the application-level Web.config file.</span></span> <span data-ttu-id="f9efe-265">有关详细信息，请参阅[请元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/17a0fa6e-a065-49cc-b900-ef73eda6a922)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-265">For more information, see [clientTarget Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/17a0fa6e-a065-49cc-b900-ef73eda6a922).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-266">下面的代码示例定义`ie302`别名并包括在其 Web.config 文件中配置你的应用程序所需的部分。</span><span class="sxs-lookup"><span data-stu-id="f9efe-266">The following code example defines an `ie302` alias and includes sections needed to configure your application in its Web.config file.</span></span> <span data-ttu-id="f9efe-267">使用此别名，你可以设置<xref:System.Web.UI.Page.ClientTarget%2A>属性`ie302`并自定义页专为 Internet 资源管理器 3.02 浏览器。</span><span class="sxs-lookup"><span data-stu-id="f9efe-267">Using this alias, you can set the <xref:System.Web.UI.Page.ClientTarget%2A> property to `ie302` and customize pages specifically for Internet Explorer 3.02 browsers.</span></span>  
  
```  
<configuration>  
  <system.web>  
   <clientTarget>  
    <add alias="ie302" useragent="Mozilla/2.0 (compatible; MSIE 3.02; Windows NT 3.5)" />  
   </clientTarget>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CodePage { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-268">设置当前 <see cref="T:System.Web.UI.Page" /> 的代码页标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-268">Sets the code page identifier for the current <see cref="T:System.Web.UI.Page" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-269">一个表示当前 <see cref="T:System.Web.UI.Page" /> 的代码页标识符的整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-269">An integer that represents the code page identifier for the current <see cref="T:System.Web.UI.Page" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-270">在大多数情况下，不要在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-270">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f9efe-271">设置`CodePage`属性设为所需的.aspx 文件中使用该指令的值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-271">Set the `CodePage` attribute to the value you want using the  directive in the .aspx file.</span></span> <span data-ttu-id="f9efe-272">当请求页时，动态生成的类来设置属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-272">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-273">设置与页关联的 <see cref="T:System.Web.HttpResponse" /> 对象的 HTTP MIME 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-273">Sets the HTTP MIME type for the <see cref="T:System.Web.HttpResponse" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-274">与当前页关联的 HTTP MIME 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-274">The HTTP MIME type associated with the current page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-275">在大多数情况下，不要在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-275">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f9efe-276">设置`ContentType`属性使用.aspx 文件中的指令。</span><span class="sxs-lookup"><span data-stu-id="f9efe-276">Set the `ContentType` attribute using the  directive in the .aspx file.</span></span> <span data-ttu-id="f9efe-277">当请求页时，动态生成的类来设置属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-277">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected internal override System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Context" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-278">获取与该页关联的 <see cref="T:System.Web.HttpContext" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-278">Gets the <see cref="T:System.Web.HttpContext" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-279">
            <see cref="T:System.Web.HttpContext" /> 对象，它包含与当前页关联的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-279">An <see cref="T:System.Web.HttpContext" /> object that contains information associated with the current page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-280">此属性提供以编程方式访问页将运行中，包括有关请求、 响应、 会话和应用程序的信息的上下文。</span><span class="sxs-lookup"><span data-stu-id="f9efe-280">This property provides programmatic access to the context the page runs in, including information about the request, response, session, and application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-281">下面的代码示例使用<xref:System.Web.UI.Page.Context%2A>属性来访问<xref:System.Web.HttpContext.AddError%2A?displayProperty=nameWithType>和<xref:System.Web.HttpContext.ClearError%2A?displayProperty=nameWithType>方法和<xref:System.Web.HttpContext.AllErrors%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-281">The following code example uses the <xref:System.Web.UI.Page.Context%2A> property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=nameWithType> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=nameWithType> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f9efe-282">该示例创建使用三个自定义异常<xref:System.Web.HttpContext.AddError%2A>方法，并使用<xref:System.Web.HttpContext.AllErrors%2A>属性加载到一个数组，这些异常。</span><span class="sxs-lookup"><span data-stu-id="f9efe-282">The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array.</span></span> <span data-ttu-id="f9efe-283">然后将数组写入包含页，并使用<xref:System.Web.HttpContext.ClearError%2A>方法来清除所有错误从<xref:System.Web.UI.Page.Context%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-283">It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the <xref:System.Web.UI.Page.Context%2A> property.</span></span>  
  
 [!code-csharp[System.Web.UI.Page.Context#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Context/CS/pagecontextcs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Context#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Context/VB/pagecontextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriter">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter tw);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter tw) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateHtmlTextWriter (tw As TextWriter) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ tw);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tw" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="tw">
          <span data-ttu-id="f9efe-284">用于创建 <see cref="T:System.IO.TextWriter" /> 的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-284">The <see cref="T:System.IO.TextWriter" /> used to create the <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-285">创建 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象以呈现该页的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-285">Creates an <see cref="T:System.Web.UI.HtmlTextWriter" /> object to render the page's content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-286">
            <see cref="T:System.Web.UI.HtmlTextWriter" /> 或 <see cref="T:System.Web.UI.Html32TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-286">An <see cref="T:System.Web.UI.HtmlTextWriter" /> or <see cref="T:System.Web.UI.Html32TextWriter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-287"><xref:System.Web.UI.Page.CreateHtmlTextWriter%2A>方法创建<xref:System.IO.TextWriter>通过<xref:System.Web.HttpRequest.Browser%2A>属性<xref:System.Web.HttpContext.Request%2A>页面请求与关联的对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-287">The <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method creates a <xref:System.IO.TextWriter> through the <xref:System.Web.HttpRequest.Browser%2A> property of the <xref:System.Web.HttpContext.Request%2A> object associated with the page request.</span></span> <span data-ttu-id="f9efe-288">你可以添加对的引用<xref:System.Web.UI.HtmlTextWriter>中`browserCaps`配置节。</span><span class="sxs-lookup"><span data-stu-id="f9efe-288">You can add a reference to an <xref:System.Web.UI.HtmlTextWriter> in the `browserCaps` configuration section.</span></span> <span data-ttu-id="f9efe-289">重写<xref:System.Web.UI.Page.CreateHtmlTextWriter%2A>方法来执行自定义的查找。</span><span class="sxs-lookup"><span data-stu-id="f9efe-289">Override the <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method to perform custom lookup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-290">下面的代码示例使用<xref:System.Web.UI.Page.CreateHtmlTextWriter%2A>方法来创建的自定义实例<xref:System.Web.UI.HtmlTextWriter>对象名为`MyHtmlTextWriter`。</span><span class="sxs-lookup"><span data-stu-id="f9efe-290">The following code example uses the <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method to create an instance of a custom <xref:System.Web.UI.HtmlTextWriter> object named `MyHtmlTextWriter`.</span></span> <span data-ttu-id="f9efe-291"><xref:System.Web.UI.Page.CreateHtmlTextWriter%2A>方法被重写`MyPage`类，该类派生自<xref:System.Web.UI.Page>，以便`MyHtmlTextWriter`呈现 ASP.NET 服务器控件，当请求页。</span><span class="sxs-lookup"><span data-stu-id="f9efe-291">The <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method is overridden in the `MyPage` class, which is derived from <xref:System.Web.UI.Page>, so that `MyHtmlTextWriter` renders ASP.NET server controls when the page is requested.</span></span> <span data-ttu-id="f9efe-292">请注意，此示例将禁止适配器<xref:System.IO.TextWriter>行为。</span><span class="sxs-lookup"><span data-stu-id="f9efe-292">Note that this example will prevent adapter <xref:System.IO.TextWriter> behavior.</span></span>  
  
 [!code-csharp[Page_CreateHtmlTextWriter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_CreateHtmlTextWriter/CS/page_createhtmltextwriter.cs#2)]
 [!code-vb[Page_CreateHtmlTextWriter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_CreateHtmlTextWriter/VB/page_createhtmltextwriter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="T:System.Web.UI.Html32TextWriter" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="M:System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriterFromType">
      <MemberSignature Language="C#" Value="public static System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType (System.IO.TextWriter tw, Type writerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType(class System.IO.TextWriter tw, class System.Type writerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHtmlTextWriterFromType (tw As TextWriter, writerType As Type) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriterFromType(System::IO::TextWriter ^ tw, Type ^ writerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tw" Type="System.IO.TextWriter" />
        <Parameter Name="writerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="tw">
          <span data-ttu-id="f9efe-293">用于创建 <see cref="T:System.IO.TextWriter" /> 的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-293">The <see cref="T:System.IO.TextWriter" /> used to create the <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </param>
        <param name="writerType">
          <span data-ttu-id="f9efe-294">要创建的文本编写器的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-294">The type of text writer to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-295">创建指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象以呈现该页的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-295">Creates a specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object to render the page's content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-296">一个呈现页内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-296">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders the content of the page.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-297">在页面适配器内部使用此方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-297">This method is used internally in page adapters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f9efe-298">
            <paramref name="writerType" /> 参数被设置为无效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-298">The <paramref name="writerType" /> parameter is set to an invalid type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public string Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Culture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Culture { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-299">设置与页关联的 <see cref="T:System.Threading.Thread" /> 对象的区域性 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-299">Sets the culture ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-300">一个有效的区域性 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-300">A valid culture ID.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-301">设置`Culture`的指令的.aspx 文件中的属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-301">Set the `Culture` attribute in the  directive in the .aspx file.</span></span> <span data-ttu-id="f9efe-302">当请求页时，动态生成的类将设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-302">When the page is requested, the dynamically generated class sets the value of this property.</span></span> <span data-ttu-id="f9efe-303">此外，还显式设置的值<xref:System.Web.UI.Page.Culture%2A>属性以编程方式或在元素中的 web.config 文件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-303">In addition, you can also explicitly set the value of the <xref:System.Web.UI.Page.Culture%2A> property programmatically or in the  element of the Web.config file.</span></span>  
  
 <span data-ttu-id="f9efe-304"><xref:System.Web.UI.Page.Culture%2A>属性用于帮助本地化页面内容。</span><span class="sxs-lookup"><span data-stu-id="f9efe-304">The <xref:System.Web.UI.Page.Culture%2A> property is used to help localize page content.</span></span> <span data-ttu-id="f9efe-305">你可以将其设置为任何有效的区域性 id。</span><span class="sxs-lookup"><span data-stu-id="f9efe-305">You can set it to any valid culture ID.</span></span> <span data-ttu-id="f9efe-306">例如，`en-us`的区域性 ID 将页设置为美国英语，而`fr`的区域性 ID 设置为法语的页。</span><span class="sxs-lookup"><span data-stu-id="f9efe-306">For example, the `en-us` culture ID sets the page to American English, while the `fr` culture ID sets the page to French.</span></span> <span data-ttu-id="f9efe-307">此外可以将值设置为`auto`，用于将执行的浏览器的自动检测的首选语言，并将其设置。</span><span class="sxs-lookup"><span data-stu-id="f9efe-307">You can also set the value to `auto` which will perform automatic detection of the browser's preferred language and set it.</span></span> <span data-ttu-id="f9efe-308">使用默认值可以如限定自动语言检测`auto:en-us`。</span><span class="sxs-lookup"><span data-stu-id="f9efe-308">The automatic language detection can be qualified with a default value such as `auto:en-us`.</span></span>  
  
 <span data-ttu-id="f9efe-309">有关详细信息，请参阅<xref:System.Globalization.CultureInfo>类概述。</span><span class="sxs-lookup"><span data-stu-id="f9efe-309">For more information, see the <xref:System.Globalization.CultureInfo> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.LCID" />
      </Docs>
    </Member>
    <Member MemberName="DesignerInitialize">
      <MemberSignature Language="C#" Value="public void DesignerInitialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DesignerInitialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.DesignerInitialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub DesignerInitialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DesignerInitialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-310">执行 RAD 设计器所需的 <see cref="T:System.Web.UI.Page" /> 类的实例的任何初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-310">Performs any initialization of the instance of the <see cref="T:System.Web.UI.Page" /> class that is required by RAD designers.</span>
          </span>
          <span data-ttu-id="f9efe-311">此方法仅在设计时使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-311">This method is used only at design time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.UserControl.DesignerInitialize" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-312">返回使用 POST 或 GET 命令回发到页的数据的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-312">Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> of data posted back to the page using either a POST or a GET command.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-313">包含窗体数据的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-313">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the form data.</span>
          </span>
          <span data-ttu-id="f9efe-314">如果回发使用 POST 命令，则从 <see cref="P:System.Web.UI.Page.Context" /> 对象返回窗体信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-314">If the postback used the POST command, the form information is returned from the <see cref="P:System.Web.UI.Page.Context" /> object.</span>
          </span>
          <span data-ttu-id="f9efe-315">如果回发使用 GET 命令，则返回查询字符串信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-315">If the postback used the GET command, the query string information is returned.</span>
          </span>
          <span data-ttu-id="f9efe-316">如果是第一次请求该页，则返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-316">If the page is being requested for the first time, <see langword="null" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-317"><xref:System.Web.UI.Page.DeterminePostBackMode%2A>方法返回<xref:System.Collections.Specialized.NameValueCollection>包含数据的对象回发到页。</span><span class="sxs-lookup"><span data-stu-id="f9efe-317">The <xref:System.Web.UI.Page.DeterminePostBackMode%2A> method returns a <xref:System.Collections.Specialized.NameValueCollection> object that contains the data posted back to the page.</span></span> <span data-ttu-id="f9efe-318">存在页的隐藏的字段 VIEWSTATE 和 EVENTTARGET 用于帮助确定是否发生回发事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-318">The presence of the page hidden fields VIEWSTATE and EVENTTARGET is used to help determine whether a postback event has occurred.</span></span> <span data-ttu-id="f9efe-319"><xref:System.Web.UI.Page.IsPostBack%2A>时设置属性<xref:System.Web.UI.Page.DeterminePostBackMode%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-319">The <xref:System.Web.UI.Page.IsPostBack%2A> property is set when the <xref:System.Web.UI.Page.DeterminePostBackMode%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-320">返回使用 POST 或 GET 命令发送到该页的名称/值数据集合，而不执行 ASP.NET 在该请求的请求验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-320">Returns a name-value collection of data that was posted to the page using either a POST or a GET command, without performing ASP.NET request validation on the request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-321">包含未验证的窗体数据的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-321">An object that contains the unvalidated form data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-322">有关更多信息，请参见 <xref:System.Web.UnvalidatedRequestValues> 类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-322">For more information, see the <xref:System.Web.UnvalidatedRequestValues> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEventValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableEventValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEventValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.EnableEventValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableEventValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableEventValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-323">获取或设置一个值，该值指示页面验证回发事件，还是验证回调事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-323">Gets or sets a value indicating whether the page validates postback and callback events.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-324">
            <see langword="true" />（如果该页验证回发和回调事件）； 否则为 <see langword="false" />。默认值是 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-324">
              <see langword="true" /> if the page validates postback and callback events; otherwise, <see langword="false" />.The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-325">当<xref:System.Web.UI.Page.EnableEventValidation%2A>属性设置为`true`，ASP.NET 验证控件事件源自由该控件已呈现的用户界面。</span><span class="sxs-lookup"><span data-stu-id="f9efe-325">When the <xref:System.Web.UI.Page.EnableEventValidation%2A> property is set to `true`, ASP.NET validates that a control event originated from the user interface that was rendered by that control.</span></span> <span data-ttu-id="f9efe-326">控件在呈现期间注册其事件，然后在回发或回调处理过程中验证事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-326">A control registers its events during rendering and then validates the events during postback or callback handling.</span></span> <span data-ttu-id="f9efe-327">例如，如果列表控件包含选项按顺序编号 1、 2 或 3 当呈现页面，并且如果指定选项编号 4 收到的回发的请求时，ASP.NET 将引发异常。</span><span class="sxs-lookup"><span data-stu-id="f9efe-327">For example, if a list control includes options numbered 1, 2, or 3 when the page is rendered, and if a postback request is received specifying option number 4, ASP.NET raises an exception.</span></span> <span data-ttu-id="f9efe-328">默认情况下，在 ASP.NET 中的所有事件驱动控件都使用此功能。</span><span class="sxs-lookup"><span data-stu-id="f9efe-328">All event-driven controls in ASP.NET use this feature by default.</span></span>  
  
 <span data-ttu-id="f9efe-329">如果你编写在运行时更改客户端中的控件的客户端脚本，你可能必须使用<xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>方法，以避免 false 事件验证错误。</span><span class="sxs-lookup"><span data-stu-id="f9efe-329">If you write client script that changes a control in the client at run time, you might have to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method in order to avoid false event validation errors.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9efe-330">此功能降低了未经授权或恶意的回发请求和回调的风险。</span><span class="sxs-lookup"><span data-stu-id="f9efe-330">This feature reduces the risk of unauthorized or malicious postback requests and callbacks.</span></span> <span data-ttu-id="f9efe-331">强烈建议不要禁用事件验证。</span><span class="sxs-lookup"><span data-stu-id="f9efe-331">It is strongly recommended that you do not disable event validation.</span></span>  
  
 <span data-ttu-id="f9efe-332">你设置<xref:System.Web.UI.Page.EnableEventValidation%2A>通过设置属性`enableEventValidation`指令的特性或`enableEventValidation`的 Web.config 文件中的元素的属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-332">You set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property by setting the `enableEventValidation` attribute of the  directive or the `enableEventValidation` attribute of the  element in the Web.config file.</span></span> <span data-ttu-id="f9efe-333">如果在代码中设置此属性，则必须初始化页之前设置它。</span><span class="sxs-lookup"><span data-stu-id="f9efe-333">If you set this property in code, you must set it before the page is initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-334">
            <see cref="P:System.Web.UI.Page.EnableEventValidation" /> 属性是在初始化页后设置的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-334">The <see cref="P:System.Web.UI.Page.EnableEventValidation" /> property was set after the page was initialized.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
        <altmember cref="T:System.Web.UI.SupportsEventValidationAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public override bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.EnableViewState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableViewState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-335">获取或设置一个值，该值指示当前页请求结束时该页是否保持其视图状态以及它包含的任何服务器控件的视图状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-335">Gets or sets a value indicating whether the page maintains its view state, and the view state of any server controls it contains, when the current page request ends.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-336">如果该页保持其视图状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-336">
              <see langword="true" /> if the page maintains its view state; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9efe-337">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-337">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-338">有关为什么你可能想要禁用视图状态的信息，请参阅<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f9efe-338">For information about why you might want to disable view state, see <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f9efe-339">即使<xref:System.Web.UI.Page.EnableViewState%2A>是`false`，页可能会包含 ASP.NET 用于检测回发的隐藏的视图状态字段。</span><span class="sxs-lookup"><span data-stu-id="f9efe-339">Even if <xref:System.Web.UI.Page.EnableViewState%2A> is `false`, the page might contain a hidden view state field that is used by ASP.NET to detect a postback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-340">下面的代码示例设置<xref:System.Web.UI.Page.EnableViewState%2A>属性`false`加载页时。</span><span class="sxs-lookup"><span data-stu-id="f9efe-340">The following code example sets the <xref:System.Web.UI.Page.EnableViewState%2A> property to `false` when the page is loaded.</span></span> <span data-ttu-id="f9efe-341">视图状态，这会禁用<xref:System.Web.UI.Page>对象，这意味着将保存的既不页的视图状态信息，也不包含页上的任何控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-341">This disables view state for the <xref:System.Web.UI.Page> object, meaning that neither view-state information for the page nor any controls contained by the page are saved.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9efe-342">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="f9efe-342">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f9efe-343">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-343">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f9efe-344">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-344">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Page_EnableViewState_ReSubmit_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_EnableViewState_ReSubmit_1/CS/page_enableviewstate.cs#1)]
 [!code-vb[Page_EnableViewState_ReSubmit_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_EnableViewState_ReSubmit_1/VB/page_enableviewstate.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.EnableViewStateMac" />
      </Docs>
    </Member>
    <Member MemberName="EnableViewStateMac">
      <MemberSignature Language="C#" Value="public bool EnableViewStateMac { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewStateMac" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.EnableViewStateMac" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableViewStateMac As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableViewStateMac { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-345">获取或设置一个值，该值指示从客户端回发页时，ASP.NET 是否应在页的视图状态下检查消息身份验证代码 (MAC)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-345">Gets or sets a value indicating whether ASP.NET should check message authentication codes (MAC) in the page's view state when the page is posted back from the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-346">如果应对视图状态进行 MAC 检查和编码，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-346">
              <see langword="true" /> if the view state should be MAC checked and encoded; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9efe-347">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-347">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-348">视图状态 MAC 是变量的隐藏页发送到浏览器时，将页面的视图状态保存到的加密的版本。</span><span class="sxs-lookup"><span data-stu-id="f9efe-348">A view-state MAC is an encrypted version of the hidden variable that a page's view state is persisted to when the page is sent to the browser.</span></span> <span data-ttu-id="f9efe-349">当此属性设置为`true`，加密的视图状态会检查以验证它的客户端上不被篡改。</span><span class="sxs-lookup"><span data-stu-id="f9efe-349">When this property is set to `true`, the encrypted view state is checked to verify that it has not been tampered with on the client.</span></span>  
  
 <span data-ttu-id="f9efe-350">未在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-350">Do not set this property in code.</span></span> <span data-ttu-id="f9efe-351">设置`EnableViewStateMac`属性使用.aspx 文件中的指令。</span><span class="sxs-lookup"><span data-stu-id="f9efe-351">Set the `EnableViewStateMac` attribute using the  directive in the .aspx file.</span></span> <span data-ttu-id="f9efe-352">当请求页时，动态生成的类来设置属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-352">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9efe-353">此属性应永远不会设置为`false`生产 Web 站点，即使该应用程序或页不使用视图状态中。</span><span class="sxs-lookup"><span data-stu-id="f9efe-353">This attribute should never be set to `false` in a production Web site, even if the application or page does not use view state.</span></span> <span data-ttu-id="f9efe-354">视图状态 MAC 可帮助确保 ASP.NET 函数除了视图状态中的安全。</span><span class="sxs-lookup"><span data-stu-id="f9efe-354">The view state MAC helps ensure the security of other ASP.NET functions in addition to view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="ErrorPage">
      <MemberSignature Language="C#" Value="public string ErrorPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ErrorPage" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorPage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorPage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-355">获取或设置错误页，在发生未处理的页异常的事件时请求浏览器将被重定向到该页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-355">Gets or sets the error page to which the requesting browser is redirected in the event of an unhandled page exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-356">浏览器被重定向到的错误页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-356">The error page to which the browser is redirected.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[Page_ErrorPage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_ErrorPage/CS/page_errorpage.cs.aspx#1)]
 [!code-vb[Page_ErrorPage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_ErrorPage/VB/page_errorpage.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteRegisteredAsyncTasks">
      <MemberSignature Language="C#" Value="public void ExecuteRegisteredAsyncTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteRegisteredAsyncTasks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.ExecuteRegisteredAsyncTasks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteRegisteredAsyncTasks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteRegisteredAsyncTasks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-357">开始执行异步任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-357">Starts the execution of an asynchronous task.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-358">异步任务使用定义<xref:System.Web.UI.PageAsyncTask>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-358">Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class.</span></span> <span data-ttu-id="f9efe-359">任务定义的并向页使用注册后<xref:System.Web.UI.Page.RegisterAsyncTask%2A>方法，<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>可以调用方法来开始异步任务。</span><span class="sxs-lookup"><span data-stu-id="f9efe-359">After the task is defined, and is registered with the page using the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method, the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can be invoked to begin the asynchronous task.</span></span>  
  
 <span data-ttu-id="f9efe-360"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>自动调用方法中的时刻页处理，任何已注册的异步任务，如果它们存在时，调用为非异步页。</span><span class="sxs-lookup"><span data-stu-id="f9efe-360">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method is automatically called at the point in the page processing when any registered asynchronous tasks, if they exist, are invoked for a non-asynchronous page.</span></span> <span data-ttu-id="f9efe-361">此自动调用<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>之前发生<xref:System.Web.UI.Page.PreRenderComplete>事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-361">This automatic call to <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> occurs just before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="f9efe-362">调用<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>你想要对此方法的自动调用以外有时调用的任务的方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-362">Call the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method for tasks you want to be invoked at times other than the automatic call to this method.</span></span> <span data-ttu-id="f9efe-363">请注意，将仅一次即使执行异步任务<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>可能多次调用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-363">Note, asynchronous tasks will be executed only once even though <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> may be called more than once.</span></span>  
  
 <span data-ttu-id="f9efe-364"><xref:System.Web.UI.Page.AsyncTimeout%2A>属性被重置在每次调用<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-364">The <xref:System.Web.UI.Page.AsyncTimeout%2A> property is reset on every call to the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="f9efe-365">最后一个值<xref:System.Web.UI.Page.AsyncTimeout%2A>之前调用<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>方法将优先。</span><span class="sxs-lookup"><span data-stu-id="f9efe-365">The last value of the <xref:System.Web.UI.Page.AsyncTimeout%2A> prior to invoking the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method takes precedence.</span></span> <span data-ttu-id="f9efe-366">如果一个异步任务采用多个<xref:System.Web.UI.Page.AsyncTimeout%2A>，在这个过程中调用的后续任务<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>调用立即超时。</span><span class="sxs-lookup"><span data-stu-id="f9efe-366">If an asynchronous task takes more than the <xref:System.Web.UI.Page.AsyncTimeout%2A>, subsequent tasks invoked during that <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> call are timed out immediately.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-367">下面的代码示例演示如何将<xref:System.Web.UI.Page.AsyncTimeout%2A>具有属性<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>和<xref:System.Web.UI.Page.RegisterAsyncTask%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-367">The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods.</span></span> <span data-ttu-id="f9efe-368">请注意开始、 结束和超时的处理程序的使用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-368">Note the use of beginning, ending, and time-out handlers.</span></span> <span data-ttu-id="f9efe-369">在示例中，引入了人工延迟以演示超出分配的时间内中指定的任务的异步任务的情况下<xref:System.Web.UI.Page.AsyncTimeout%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-369">In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property.</span></span> <span data-ttu-id="f9efe-370">在实际方案中，一个异步任务无法用于执行数据库调用或图像生成，例如，和超时处理程序提供合适的委托，如果不在指定的时间内执行任务。</span><span class="sxs-lookup"><span data-stu-id="f9efe-370">In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.cs#2)]
 [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f9efe-371">异步任务中有异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-371">There is an exception in the asynchronous task.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)" />
        <altmember cref="T:System.Web.UI.PageAsyncTask" />
        <altmember cref="M:System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="FileDependencies">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList FileDependencies { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList FileDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.FileDependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Property FileDependencies As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ FileDependencies {  void set(System::Collections::ArrayList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is HttpResponse.AddFileDependencies. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-372">设置当前的 <see cref="T:System.Web.HttpResponse" /> 对象所依赖的文件的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-372">Sets an array of files that the current <see cref="T:System.Web.HttpResponse" /> object is dependent upon.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-373">当前的 <see cref="T:System.Web.HttpResponse" /> 对象所依赖的文件的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-373">The array of files that the current <see cref="T:System.Web.HttpResponse" /> object is dependent upon.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-374">此属性已弃用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-374">This property has been deprecated.</span></span> <span data-ttu-id="f9efe-375">使用<xref:System.Web.HttpResponse.AddFileDependencies%2A>方法或<xref:System.Web.HttpResponse.AddFileDependency%2A>方法<xref:System.Web.HttpResponse>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-375">Use the <xref:System.Web.HttpResponse.AddFileDependencies%2A> method or the <xref:System.Web.HttpResponse.AddFileDependency%2A> method of the <xref:System.Web.HttpResponse> class instead.</span></span>  
  
 <span data-ttu-id="f9efe-376">在大多数情况下，不要在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-376">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f9efe-377">设置`FileDependencies`属性设为`true`.aspx 文件中使用指令。</span><span class="sxs-lookup"><span data-stu-id="f9efe-377">Set the `FileDependencies` attribute to `true` using the  directive in the .aspx file.</span></span> <span data-ttu-id="f9efe-378">当请求页时，动态生成的类来设置属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-378">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="f9efe-379">要查找的控件的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-379">The identifier for the control to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-380">在页命名容器中搜索带指定标识符的服务器控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-380">Searches the page naming container for a server control with the specified identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-381">指定的控件，如果指定的控件不存在则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-381">The specified control, or <see langword="null" /> if the specified control does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-382"><xref:System.Web.UI.Page.FindControl%2A>方法可以用于访问控制其<xref:System.Web.UI.Control.ID%2A>在设计时不可用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-382">The <xref:System.Web.UI.Page.FindControl%2A> method can be used to access a control whose <xref:System.Web.UI.Control.ID%2A> is not available at design time.</span></span> <span data-ttu-id="f9efe-383">方法搜索仅页面的立即，或顶级，容器;它会以递归方式搜索不包含在页上的命名容器中的控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-383">The method searches only the page's immediate, or top-level, container; it does not recursively search for controls in naming containers contained on the page.</span></span> <span data-ttu-id="f9efe-384">若要访问从属命名容器中的控件，调用`FindControl`该容器的方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-384">To access controls in a subordinate naming container, call the `FindControl` method of that container.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-385">下面的代码示例演示如何使用<xref:System.Web.UI.Page.FindControl%2A>方法来查找模板内的控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-385">The following code example demonstrates how to use the <xref:System.Web.UI.Page.FindControl%2A> method to locate controls inside templates.</span></span> <span data-ttu-id="f9efe-386">在此示例中，两个<xref:System.Web.UI.WebControls.Repeater>定义控件，每个显示另一种方式捕获<xref:System.Web.UI.WebControls.LinkButton.Click>事件<xref:System.Web.UI.WebControls.LinkButton>内中继器项模板。</span><span class="sxs-lookup"><span data-stu-id="f9efe-386">In this example, two <xref:System.Web.UI.WebControls.Repeater> controls are defined; each shows a different way to catch the <xref:System.Web.UI.WebControls.LinkButton.Click> event of a <xref:System.Web.UI.WebControls.LinkButton> inside the repeater item template.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page_FindControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_FindControl/cs/pagefindcontrolcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page_FindControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_FindControl/vb/pagefindcontrolvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlControls.HtmlForm Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As HtmlForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::HtmlControls::HtmlForm ^ Form { System::Web::UI::HtmlControls::HtmlForm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-387">获取页的 HTML 窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-387">Gets the HTML form for the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-388">与页关联的 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-388">The <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> object associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-389">使用<xref:System.Web.UI.Page.Form%2A>属性来访问的方法和属性<xref:System.Web.UI.HtmlControls.HtmlForm>是在页上的控件层次结构的基类的对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-389">Use the <xref:System.Web.UI.Page.Form%2A> property to access the methods and properties of the <xref:System.Web.UI.HtmlControls.HtmlForm> object that is the base of the control hierarchy on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
      </Docs>
    </Member>
    <Member MemberName="FrameworkInitialize">
      <MemberSignature Language="C#" Value="protected override void FrameworkInitialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void FrameworkInitialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.FrameworkInitialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub FrameworkInitialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void FrameworkInitialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-390">在页生成过程中根据页的声明性特性初始化控件树。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-390">Initializes the control tree during page generation based on the declarative nature of the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-391"><xref:System.Web.UI.Page.FrameworkInitialize%2A>方法初始化<xref:System.Web.UI.Page>对象，并创建基于页面的声明性特性的控制树。</span><span class="sxs-lookup"><span data-stu-id="f9efe-391">The <xref:System.Web.UI.Page.FrameworkInitialize%2A> method initializes the <xref:System.Web.UI.Page> object and creates the control tree based on the declarative nature of the page.</span></span> <span data-ttu-id="f9efe-392"><xref:System.Web.UI.Page.FrameworkInitialize%2A>方法被重写由页分析和代码生成为<xref:System.Web.UI.Page>声明性页的类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-392">The <xref:System.Web.UI.Page.FrameworkInitialize%2A> method is overridden by the page parsing and code generation for the <xref:System.Web.UI.Page> class for a declarative page.</span></span> <span data-ttu-id="f9efe-393">通常，你应该不需要重写此方法通过。</span><span class="sxs-lookup"><span data-stu-id="f9efe-393">Ordinarily, you should not over need to override this method.</span></span> <span data-ttu-id="f9efe-394">如果重写时，一定要调用基类的<xref:System.Web.UI.Page.FrameworkInitialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-394">If overriding, be sure to call the base class's <xref:System.Web.UI.Page.FrameworkInitialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public object GetDataItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetDataItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetDataItem" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataItem () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDataItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-395">获取位于数据绑定上下文堆栈顶部的数据项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-395">Gets the data item at the top of the data-binding context stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-396">位于数据绑定上下文堆栈顶部的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-396">The object at the top of the data binding context stack.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-397">没有用于该页的数据绑定上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-397">There is no data-binding context for the page.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientEvent">
      <MemberSignature Language="C#" Value="public string GetPostBackClientEvent (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientEvent(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientEvent(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f9efe-398">接收客户端事件回发的服务器控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-398">The server control that receives the client event postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="f9efe-399">传递给 <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" /> 的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-399">A <see cref="T:System.String" /> that is passed to <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-400">获取可在客户端事件中使用的引用，以将指定控件和指定事件参数发回给服务器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-400">Gets a reference that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-401">表示客户端事件的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-401">The string that represents the client event.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-402">请参阅<xref:System.Web.UI.ClientScriptManager>此不推荐使用的成员的替代方法的类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-402">See the <xref:System.Web.UI.ClientScriptManager> class for alternatives to this deprecated member.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.OnClientClick" />
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackClientHyperlink. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f9efe-403">处理回发的服务器控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-403">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="f9efe-404">传递给服务器控件的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-404">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-405">获取一个引用，并在其开头附加 <see langword="javascript:" />，可以在客户端事件中使用该引用，并将该引用与指定的事件参数一起使用，以便回发到指定控件的服务器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-405">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-406">一个字符串，表示对包含目标控件的 ID 和事件参数的回发函数的 JavaScript 调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-406">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-407">请参阅<xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>此不推荐使用的成员的替代方法的方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-407">See the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method for an alternative to this deprecated member.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-408">返回一个可以在客户端事件中使用的字符串，以便回发到服务器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-408">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="f9efe-409">此方法已被否决。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-409">This method has been deprecated.</span>
          </span>
          <span data-ttu-id="f9efe-410">请改用 <see cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" /> 类中的 <see cref="T:System.Web.UI.ClientScriptManager" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-410">Use the <see cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" /> method in the <see cref="T:System.Web.UI.ClientScriptManager" /> class instead.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f9efe-411">要在服务器上处理回发的服务器控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-411">The server control to process the postback on the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-412">返回一个可以在客户端事件中使用的字符串，以便回发到服务器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-412">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="f9efe-413">由指定的 <see cref="T:System.Web.UI.Control" /> 对象定义的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-413">The reference string is defined by the specified <see cref="T:System.Web.UI.Control" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-414">一个字符串，将其视为客户端脚本时，将启动回发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-414">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-415">此方法已被否决。</span><span class="sxs-lookup"><span data-stu-id="f9efe-415">This method has been deprecated.</span></span> <span data-ttu-id="f9efe-416">请改用 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 类中的 <xref:System.Web.UI.ClientScriptManager> 方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-416">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Page_GetPostBackEventReference#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_GetPostBackEventReference/CS/page_getpostbackeventreference.cs#2)]
 [!code-vb[Page_GetPostBackEventReference#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_GetPostBackEventReference/VB/page_getpostbackeventreference.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f9efe-417">处理回发的服务器控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-417">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="f9efe-418">传递给服务器控件的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-418">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-419">返回一个可以在客户端事件中使用的字符串，以便回发到服务器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-419">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="f9efe-420">该引用字符串由处理回发的指定控件和一个附加事件信息的字符串参数定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-420">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-421">一个字符串，将其视为客户端脚本时，将启动回发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-421">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-422">此方法已被否决。</span><span class="sxs-lookup"><span data-stu-id="f9efe-422">This method has been deprecated.</span></span> <span data-ttu-id="f9efe-423">请改用 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> 类中的 <xref:System.Web.UI.ClientScriptManager> 方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-423">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Page_GetPostBackEventReference#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_GetPostBackEventReference/CS/page_getpostbackeventreference.cs#1)]
 [!code-vb[Page_GetPostBackEventReference#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_GetPostBackEventReference/VB/page_getpostbackeventreference.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetTypeHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTypeHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetTypeHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetTypeHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-424">检索由运行时生成的 <see cref="T:System.Web.UI.Page" /> 对象生成的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-424">Retrieves a hash code that is generated by <see cref="T:System.Web.UI.Page" /> objects that are generated at run time.</span>
          </span>
          <span data-ttu-id="f9efe-425">这种哈希代码对于 <see cref="T:System.Web.UI.Page" /> 对象的控件层次结构是唯一的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-425">This hash code is unique to the <see cref="T:System.Web.UI.Page" /> object's control hierarchy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-426">运行时生成的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-426">The hash code generated at run time.</span>
          </span>
          <span data-ttu-id="f9efe-427">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-427">The default is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-428">不重写此方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-428">Do not override this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidators">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidatorCollection GetValidators (string validationGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.ValidatorCollection GetValidators(string validationGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetValidators(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValidators (validationGroup As String) As ValidatorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::ValidatorCollection ^ GetValidators(System::String ^ validationGroup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidatorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationGroup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validationGroup">
          <span data-ttu-id="f9efe-429">要返回的验证组，或 <see langword="null" /> 以返回默认验证组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-429">The validation group to return, or <see langword="null" /> to return the default validation group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-430">返回指定验证组的控件验证程序的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-430">Returns a collection of control validators for a specified validation group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-431">一个 <see cref="T:System.Web.UI.ValidatorCollection" />，它包含指定验证组的控件验证程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-431">A <see cref="T:System.Web.UI.ValidatorCollection" /> that contains the control validators for the specified validation group.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-432"><xref:System.Web.UI.Page.GetValidators%2A>方法返回与特定的验证组关联的所有验证对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-432">The <xref:System.Web.UI.Page.GetValidators%2A> method returns all the validation objects associated with a specific validation group.</span></span> <span data-ttu-id="f9efe-433">你可以返回默认验证组 (与控件而不通过关联的所有验证控件`ValidationGroup`属性集) 通过设置`validationGroup`参数`null`。</span><span class="sxs-lookup"><span data-stu-id="f9efe-433">You can return the default validation group (all validation controls associated with controls without the `ValidationGroup` property set) by setting the `validationGroup` parameter to `null`.</span></span>  
  
 <span data-ttu-id="f9efe-434">若要验证的验证组的成员，可以循环访问集合并调用<xref:System.Web.UI.IValidator.Validate%2A>的每个验证程序方法返回。</span><span class="sxs-lookup"><span data-stu-id="f9efe-434">To validate the members of the validation group, you can enumerate over the collection and call the <xref:System.Web.UI.IValidator.Validate%2A> method of each validator returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-435">下面的代码示例使用<xref:System.Web.UI.Page.GetValidators%2A>方法以返回默认验证组。</span><span class="sxs-lookup"><span data-stu-id="f9efe-435">The following code example uses the <xref:System.Web.UI.Page.GetValidators%2A> method to return the default validation group.</span></span>  
  
 [!code-csharp[PageGetValidators#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageGetValidators/CS/pagegetvalidatorscs.aspx#1)]
 [!code-vb[PageGetValidators#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageGetValidators/VB/pagegetvalidatorsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate(System.String)" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
      </Docs>
    </Member>
    <Member MemberName="GetWrappedFileDependencies">
      <MemberSignature Language="C#" Value="protected object GetWrappedFileDependencies (string[] virtualFileDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetWrappedFileDependencies(string[] virtualFileDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetWrappedFileDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetWrappedFileDependencies (virtualFileDependencies As String()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetWrappedFileDependencies(cli::array &lt;System::String ^&gt; ^ virtualFileDependencies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualFileDependencies" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="virtualFileDependencies">
          <span data-ttu-id="f9efe-436">虚拟文件位置的字符串数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-436">A string array of virtual file locations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-437">返回与虚拟文件位置列表对应的物理文件名列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-437">Returns a list of physical file names that correspond to a list of virtual file locations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-438">包含物理文件位置列表的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-438">An object containing a list of physical file locations.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-439"><xref:System.Web.UI.Page.GetWrappedFileDependencies%2A>方法获取的文件，如用户控件文件，构成当前页的列表。</span><span class="sxs-lookup"><span data-stu-id="f9efe-439">The <xref:System.Web.UI.Page.GetWrappedFileDependencies%2A> method gets a list of files, such as user control files, that make up the current page.</span></span> <span data-ttu-id="f9efe-440">如果修改了任何这些页面，整个页面编译会在被请求的下一步时间。</span><span class="sxs-lookup"><span data-stu-id="f9efe-440">If any of these pages are modified, the entire page is compiled the next time it is requested.</span></span> <span data-ttu-id="f9efe-441">不重写此方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-441">Do not override this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlControls.HtmlHead Header { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlHead Header" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Header" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Header As HtmlHead" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::HtmlControls::HtmlHead ^ Header { System::Web::UI::HtmlControls::HtmlHead ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlHead</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-442">在页声明中用 <see langword="head" /> 定义了 <see langword="runat=server" /> 元素的情况下获取页的文档标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-442">Gets the document header for the page if the <see langword="head" /> element is defined with a <see langword="runat=server" /> in the page declaration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-443">包含标头的 <see cref="T:System.Web.UI.HtmlControls.HtmlHead" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-443">An <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> containing the page header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-444"><xref:System.Web.UI.Page.Header%2A>属性获取的引用<xref:System.Web.UI.HtmlControls.HtmlHead>对象可用于设置页的文档标头信息。</span><span class="sxs-lookup"><span data-stu-id="f9efe-444">The <xref:System.Web.UI.Page.Header%2A> property gets a reference to an <xref:System.Web.UI.HtmlControls.HtmlHead> object that you can use to set document header information for the page.</span></span> <span data-ttu-id="f9efe-445"><xref:System.Web.UI.HtmlControls.HtmlHead>可用于添加信息，例如样式表、 样式规则、 标题和元数据向`head`元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-445">The <xref:System.Web.UI.HtmlControls.HtmlHead> allows you to add information such as style sheets, style rules, a title, and metadata to the `head` element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9efe-446">添加样式使用的方法以编程方式<xref:System.Web.UI.IStyleSheet>不支持异步回发期间的界面。</span><span class="sxs-lookup"><span data-stu-id="f9efe-446">Adding styles programmatically using the methods of the <xref:System.Web.UI.IStyleSheet> interface during asynchronous postbacks is not supported.</span></span> <span data-ttu-id="f9efe-447">当将 AJAX 功能添加到 Web 页中时，异步回发而无需更新整页更新页面区域内。</span><span class="sxs-lookup"><span data-stu-id="f9efe-447">When you add AJAX capabilities to a Web page, asynchronous postbacks update regions of the page without updating the whole page.</span></span> <span data-ttu-id="f9efe-448">有关详细信息，请参阅[Microsoft Ajax 概述](http://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-448">For more information, see [Microsoft Ajax Overview](http://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-449">下面的代码示例演示如何访问<xref:System.Web.UI.HtmlControls.HtmlHead>控制以编程方式使用<xref:System.Web.UI.Page.Header%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-449">The following code example demonstrates how to access the <xref:System.Web.UI.HtmlControls.HtmlHead> control programmatically using the <xref:System.Web.UI.Page.Header%2A> property.</span></span> <span data-ttu-id="f9efe-450">A`title`元素和`style`元素添加到`head`页面的元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-450">A `title` element and `style` element are added to the `head` element of the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlHeadClass/CS/htmlheadclasscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlHeadClass/VB/htmlheadclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlHead" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlLink" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-451">获取或设置 <see cref="T:System.Web.UI.Page" /> 类的特定实例的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-451">Gets or sets an identifier for a particular instance of the <see cref="T:System.Web.UI.Page" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-452">
            <see cref="T:System.Web.UI.Page" /> 类的实例的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-452">The identifier for the instance of the <see cref="T:System.Web.UI.Page" /> class.</span>
          </span>
          <span data-ttu-id="f9efe-453">默认值为“_Page”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-453">The default value is '_Page'.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Page.IdSeparator" />
      </Docs>
    </Member>
    <Member MemberName="IdSeparator">
      <MemberSignature Language="C#" Value="public virtual char IdSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IdSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IdSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IdSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char IdSeparator { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-454">获取在为页上的控件构造唯一 ID 时用于分隔控件标识符的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-454">Gets the character used to separate control identifiers when building a unique ID for a control on a page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-455">用于分隔控件标识符的字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-455">The character used to separate control identifiers.</span>
          </span>
          <span data-ttu-id="f9efe-456">默认值由呈现页的 <see cref="T:System.Web.UI.Adapters.PageAdapter" /> 实例设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-456">The default is set by the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> instance that renders the page.</span>
          </span>
          <span data-ttu-id="f9efe-457">
            <see cref="P:System.Web.UI.Page.IdSeparator" /> 是服务器端字段，不应修改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-457">The <see cref="P:System.Web.UI.Page.IdSeparator" /> is a server-side field and should not be modified.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Page.ID" />
      </Docs>
    </Member>
    <Member MemberName="InitComplete">
      <MemberSignature Language="C#" Value="public event EventHandler InitComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler InitComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.InitComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InitComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ InitComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-458">在页初始化完成时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-458">Occurs when page initialization is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-459"><xref:System.Web.UI.Page.InitComplete>的页的初始化阶段结束时调用事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-459">The <xref:System.Web.UI.Page.InitComplete> event is called at the end of the page's initialization stage.</span></span> <span data-ttu-id="f9efe-460">在页面的生命周期的此阶段，声明的所有页面上的控件进行初始化，但该页面的状态将不填充。</span><span class="sxs-lookup"><span data-stu-id="f9efe-460">At this stage of the page's life cycle, all declared controls on the page are initialized, but the page's state is not yet populated.</span></span> <span data-ttu-id="f9efe-461">你可以访问服务器控件，但它们将不包含从用户返回的信息。</span><span class="sxs-lookup"><span data-stu-id="f9efe-461">You can access server controls, but they will not yet contain information returned from the user.</span></span>  
  
 <span data-ttu-id="f9efe-462">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-462">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Page.LoadComplete" />
        <altmember cref="E:System.Web.UI.Page.PreRenderComplete" />
        <altmember cref="E:System.Web.UI.Page.SaveStateComplete" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCulture">
      <MemberSignature Language="C#" Value="protected virtual void InitializeCulture ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeCulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitializeCulture" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeCulture ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeCulture();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-463">为页的当前线程设置 <see cref="P:System.Web.UI.Page.Culture" /> 和 <see cref="P:System.Web.UI.Page.UICulture" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-463">Sets the <see cref="P:System.Web.UI.Page.Culture" /> and <see cref="P:System.Web.UI.Page.UICulture" /> for the current thread of the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-464"><xref:System.Web.UI.Page.InitializeCulture%2A>方法不包含任何编码的逻辑。</span><span class="sxs-lookup"><span data-stu-id="f9efe-464">The <xref:System.Web.UI.Page.InitializeCulture%2A> method contains no coding logic.</span></span> <span data-ttu-id="f9efe-465">控件扩展的功能的开发人员<xref:System.Web.UI.Page>类可以重写<xref:System.Web.UI.Page.InitializeCulture%2A>方法以初始化<xref:System.Web.UI.Page.Culture%2A>和<xref:System.Web.UI.Page.UICulture%2A>页信息。</span><span class="sxs-lookup"><span data-stu-id="f9efe-465">Control developers extending the functionality of the <xref:System.Web.UI.Page> class can override the <xref:System.Web.UI.Page.InitializeCulture%2A> method to initialize the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> information for the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="M:System.Web.UI.Page.FrameworkInitialize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InitOutputCache">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-466">初始化当前页面请求的输出缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-466">Initializes the output cache for the current page request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-467">此方法不能直接在代码中使用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-467">This method is not intended to be used directly from your code.</span></span> <span data-ttu-id="f9efe-468">若要启用和操作页的输出缓存，请使用以下方法之一：</span><span class="sxs-lookup"><span data-stu-id="f9efe-468">To enable and manipulate output caching for a page, use one of these approaches:</span></span>  
  
-   <span data-ttu-id="f9efe-469">设置选项以声明方式使用.aspx 文件中的指令。</span><span class="sxs-lookup"><span data-stu-id="f9efe-469">Set options declaratively using the  directive in the .aspx file.</span></span>  
  
-   <span data-ttu-id="f9efe-470">使用的方法和属性<xref:System.Web.HttpCachePolicy>类，该类公开的`Response.Cache`页的代码中的对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-470">Use the methods and properties of the <xref:System.Web.HttpCachePolicy> class, which is exposed by the `Response.Cache` object in the page's code.</span></span>  
  
 <span data-ttu-id="f9efe-471">有关详细信息，请参阅[缓存 ASP.NET 页](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-471">For more information, see [Caching ASP.NET Pages](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InitOutputCache">
      <MemberSignature Language="C#" Value="protected internal virtual void InitOutputCache (System.Web.UI.OutputCacheParameters cacheSettings);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void InitOutputCache(class System.Web.UI.OutputCacheParameters cacheSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub InitOutputCache (cacheSettings As OutputCacheParameters)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void InitOutputCache(System::Web::UI::OutputCacheParameters ^ cacheSettings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheSettings" Type="System.Web.UI.OutputCacheParameters" />
      </Parameters>
      <Docs>
        <param name="cacheSettings">
          <span data-ttu-id="f9efe-472">一个包含缓存设置的 <see cref="T:System.Web.UI.OutputCacheParameters" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-472">An <see cref="T:System.Web.UI.OutputCacheParameters" /> that contains the cache settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-473">根据 <see cref="T:System.Web.UI.OutputCacheParameters" /> 对象初始化当前页请求的输出缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-473">Initializes the output cache for the current page request based on an <see cref="T:System.Web.UI.OutputCacheParameters" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-474">不应调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-474">You should not call this method.</span></span> <span data-ttu-id="f9efe-475">若要启用和操作页的输出缓存，使用在.aspx 文件中，或的方法和属性指令<xref:System.Web.HttpCachePolicy>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-475">To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class.</span></span> <span data-ttu-id="f9efe-476">后者是可通过访问`Response.Cache`页的代码声明块或代码隐藏文件中的语法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-476">The latter are accessible through `Response.Cache` syntax in the page's code declaration block or code-behind file.</span></span> <span data-ttu-id="f9efe-477">有关详细信息，请参阅[缓存 ASP.NET 页](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-477">For more information, see [Caching ASP.NET Pages](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f9efe-478">未找到缓存配置文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-478">The cache profile was not found.</span>
          </span>
          <span data-ttu-id="f9efe-479">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-479">\- or -</span>
          </span>
          <span data-ttu-id="f9efe-480">缺少指令或配置设置配置文件特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-480">A missing directive or configuration settings profile attribute.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9efe-481">输出缓存设置位置无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-481">The output cache settings location is invalid.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="InitOutputCache">
      <MemberSignature Language="C#" Value="protected virtual void InitOutputCache (int duration, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitOutputCache(int32 duration, string varyByHeader, string varyByCustom, valuetype System.Web.UI.OutputCacheLocation location, string varyByParam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitOutputCache (duration As Integer, varyByHeader As String, varyByCustom As String, location As OutputCacheLocation, varyByParam As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitOutputCache(int duration, System::String ^ varyByHeader, System::String ^ varyByCustom, System::Web::UI::OutputCacheLocation location, System::String ^ varyByParam);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="varyByHeader" Type="System.String" />
        <Parameter Name="varyByCustom" Type="System.String" />
        <Parameter Name="location" Type="System.Web.UI.OutputCacheLocation" />
        <Parameter Name="varyByParam" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="duration">
          <span data-ttu-id="f9efe-482">对象存储在输出缓存中的时间量是有效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-482">The amount of time that objects stored in the output cache are valid.</span>
          </span>
        </param>
        <param name="varyByHeader">
          <span data-ttu-id="f9efe-483">以分号分隔的标头列表，来自输出缓存的内容因标头而异。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-483">A semicolon-separated list of headers that content from the output cache will vary by.</span>
          </span>
        </param>
        <param name="varyByCustom">
          <span data-ttu-id="f9efe-484">
            <see langword="Vary" /> HTTP 标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-484">The <see langword="Vary" /> HTTP header.</span>
          </span>
        </param>
        <param name="location">
          <span data-ttu-id="f9efe-485">
            <see cref="T:System.Web.UI.OutputCacheLocation" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-485">One of the <see cref="T:System.Web.UI.OutputCacheLocation" /> values.</span>
          </span>
        </param>
        <param name="varyByParam">
          <span data-ttu-id="f9efe-486">通过 GET 或 POST 方法收到的以分号分隔的参数列表，来自输出缓存的内容因参数而异。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-486">A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-487">初始化当前页面请求的输出缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-487">Initializes the output cache for the current page request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-488">不应调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-488">You should not call this method.</span></span> <span data-ttu-id="f9efe-489">若要启用和操作页的输出缓存，使用在.aspx 文件中，或的方法和属性指令<xref:System.Web.HttpCachePolicy>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-489">To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class.</span></span> <span data-ttu-id="f9efe-490">后者是可通过访问`Response.Cache`中页的代码的语法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-490">The latter are accessible through `Response.Cache` syntax in the page's code.</span></span> <span data-ttu-id="f9efe-491">有关详细信息，请参阅[缓存 ASP.NET 页](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-491">For more information, see [Caching ASP.NET Pages](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9efe-492">为 <paramref name="location" /> 指定的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-492">An invalid value is specified for <paramref name="location" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="InitOutputCache">
      <MemberSignature Language="C#" Value="protected virtual void InitOutputCache (int duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitOutputCache(int32 duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, valuetype System.Web.UI.OutputCacheLocation location, string varyByParam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitOutputCache (duration As Integer, varyByContentEncoding As String, varyByHeader As String, varyByCustom As String, location As OutputCacheLocation, varyByParam As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitOutputCache(int duration, System::String ^ varyByContentEncoding, System::String ^ varyByHeader, System::String ^ varyByCustom, System::Web::UI::OutputCacheLocation location, System::String ^ varyByParam);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="varyByContentEncoding" Type="System.String" />
        <Parameter Name="varyByHeader" Type="System.String" />
        <Parameter Name="varyByCustom" Type="System.String" />
        <Parameter Name="location" Type="System.Web.UI.OutputCacheLocation" />
        <Parameter Name="varyByParam" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="duration">
          <span data-ttu-id="f9efe-493">对象存储在输出缓存中的时间量是有效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-493">The amount of time that objects stored in the output cache are valid.</span>
          </span>
        </param>
        <param name="varyByContentEncoding">
          <span data-ttu-id="f9efe-494">以分号分隔的字符集（内容编码）列表，来自输出缓存中内容因字符集而异。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-494">A semicolon-separated list of character-sets (content encodings) that content from the output cache will vary by.</span>
          </span>
        </param>
        <param name="varyByHeader">
          <span data-ttu-id="f9efe-495">以分号分隔的标头列表，来自输出缓存的内容因标头而异。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-495">A semicolon-separated list of headers that content from the output cache will vary by.</span>
          </span>
        </param>
        <param name="varyByCustom">
          <span data-ttu-id="f9efe-496">
            <see langword="Vary" /> HTTP 标头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-496">The <see langword="Vary" /> HTTP header.</span>
          </span>
        </param>
        <param name="location">
          <span data-ttu-id="f9efe-497">
            <see cref="T:System.Web.UI.OutputCacheLocation" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-497">One of the <see cref="T:System.Web.UI.OutputCacheLocation" /> values.</span>
          </span>
        </param>
        <param name="varyByParam">
          <span data-ttu-id="f9efe-498">通过 GET 或 POST 方法收到的以分号分隔的参数列表，来自输出缓存的内容因参数而异。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-498">A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-499">初始化当前页面请求的输出缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-499">Initializes the output cache for the current page request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-500">不应调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-500">You should not call this method.</span></span> <span data-ttu-id="f9efe-501">若要启用和操作页的输出缓存，使用.aspx 文件中，或方法和属性中的指令<xref:System.Web.HttpCachePolicy>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-501">To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or methods and properties of the <xref:System.Web.HttpCachePolicy> class.</span></span> <span data-ttu-id="f9efe-502">后者是可通过访问`Response.Cache`中页的代码的语法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-502">The latter are accessible through `Response.Cache` syntax in the page's code.</span></span> <span data-ttu-id="f9efe-503">有关详细信息，请参阅[缓存 ASP.NET 页](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-503">For more information, see [Caching ASP.NET Pages](http://msdn.microsoft.com/library/e9666a1b-88df-4931-af0b-a754fc65660b).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9efe-504">为 <paramref name="location" /> 指定的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-504">An invalid value is specified for <paramref name="location" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-505">获取一个值，该值指示是否异步处理页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-505">Gets a value indicating whether the page is processed asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-506">如果页处于异步模式，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-506">
              <see langword="true" /> if the page is in asynchronous mode; otherwise, <see langword="false" />;</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-507">使用<xref:System.Web.UI.Page.IsAsync%2A>属性来确定是否异步模式中运行网页。</span><span class="sxs-lookup"><span data-stu-id="f9efe-507">Use the <xref:System.Web.UI.Page.IsAsync%2A> property to determine whether the Web page is running in asynchronous mode.</span></span> <span data-ttu-id="f9efe-508">此信息很有用，如果控件或页面上的代码需要修改其行为，具体取决于页是异步。</span><span class="sxs-lookup"><span data-stu-id="f9efe-508">This information is useful if controls or code on the page need to modify their behavior depending on whether the page is asynchronous.</span></span> <span data-ttu-id="f9efe-509">有关异步编程的详细信息，请参阅[异步操作](~/docs/framework/data/adonet/sql/asynchronous-operations.md)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-509">For more information about asynchronous programming, see [Asynchronous Operations](~/docs/framework/data/adonet/sql/asynchronous-operations.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCallback">
      <MemberSignature Language="C#" Value="public bool IsCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsCallback" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCallback { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-510">获取一个值，该值指示页请求是否是回调的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-510">Gets a value that indicates whether the page request is the result of a callback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-511">如果页请求是回调的结果，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-511">
              <see langword="true" /> if the page request is the result of a callback; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-512">有关详细信息，请参阅[实现客户端回调而无需回发](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-512">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.IsClientScriptBlockRegistered(string key). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9efe-513">要搜索的客户端脚本的字符串关键字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-513">The string key of the client script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-514">确定具有指定关键字的客户端脚本块是否已向页注册。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-514">Determines whether the client script block with the specified key is registered with the page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-515">如果注册了该脚本块，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-515">
              <see langword="true" /> if the script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-516">调用此方法之前调用<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=nameWithType>以避免不必要地将客户端脚本。</span><span class="sxs-lookup"><span data-stu-id="f9efe-516">Call this method before calling <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=nameWithType> to avoid unnecessarily assembling the client-side script.</span></span> <span data-ttu-id="f9efe-517">这一点特别重要，如果该脚本需要大量服务器资源进行创建。</span><span class="sxs-lookup"><span data-stu-id="f9efe-517">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="f9efe-518"><xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> 方法已弃用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-518">The <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method has been deprecated.</span></span> <span data-ttu-id="f9efe-519">使用<xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>中的方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-519">Use the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-520">下面的代码示例演示如何将<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>方法结合<xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-520">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="f9efe-521">如果编写的代码声明块中 ECMAScript 不已注册，所确定的那样<xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>，则<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>进行调用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-521">If the ECMAScript written in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, then a <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsCrossPagePostBack">
      <MemberSignature Language="C#" Value="public bool IsCrossPagePostBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCrossPagePostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsCrossPagePostBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCrossPagePostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCrossPagePostBack { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-522">获取一个值，该值指示跨页回发中是否涉及该页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-522">Gets a value indicating whether the page is involved in a cross-page postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-523">如果该页参与跨页请求，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-523">
              <see langword="true" /> if the page is participating in a cross-page request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-524">ASP.NET 提供了两种用于将从一页的控制转移到另一个机制。</span><span class="sxs-lookup"><span data-stu-id="f9efe-524">ASP.NET provides two mechanisms for transferring control from one page to another.</span></span> <span data-ttu-id="f9efe-525">你可以使用<xref:System.Web.HttpServerUtility.Transfer%2A>方法处理传输之间页，也可以进行的跨页面请求分配的页 URL<xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A>按钮控件实现的属性<xref:System.Web.UI.WebControls.IButtonControl>接口。</span><span class="sxs-lookup"><span data-stu-id="f9efe-525">You can use the <xref:System.Web.HttpServerUtility.Transfer%2A> method to transfer processing between pages, or you can make a cross-page request by assigning a page URL to the <xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> property of a button control that implements the <xref:System.Web.UI.WebControls.IButtonControl> interface.</span></span>  
  
 <span data-ttu-id="f9efe-526">在任一情况下，<xref:System.Web.UI.Page.PreviousPage%2A>页属性将包含表示上一页或发起方的对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-526">In either case, the <xref:System.Web.UI.Page.PreviousPage%2A> page property will contain an object that represents the previous or originator page.</span></span> <span data-ttu-id="f9efe-527">如果页 A 例如，发送至页 B，页 A<xref:System.Web.UI.Page.IsCrossPagePostBack%2A>属性 (可通过访问<xref:System.Web.UI.Page.PreviousPage%2A>属性) 将`true`和页 B<xref:System.Web.UI.Page.PreviousPage%2A>属性将具有页 A 的名称</span><span class="sxs-lookup"><span data-stu-id="f9efe-527">If, for example, Page A posts to Page B, Page A's <xref:System.Web.UI.Page.IsCrossPagePostBack%2A> property (accessible through the <xref:System.Web.UI.Page.PreviousPage%2A> property) will be `true` and Page B's <xref:System.Web.UI.Page.PreviousPage%2A> property will have the name of Page A.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.PostBackUrl" />
      </Docs>
    </Member>
    <Member MemberName="IsPostBack">
      <MemberSignature Language="C#" Value="public bool IsPostBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsPostBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPostBack { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-528">获取一个值，该值指示页是第一次呈现还是为了响应回发而加载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-528">Gets a value that indicates whether the page is being rendered for the first time or is being loaded in response to a postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-529">如果是为响应客户端回发而加载该页，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-529">
              <see langword="true" /> if the page is being loaded in response to a client postback; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-530">回发和回调之间的差异的说明，请参阅[实现客户端回调而无需回发](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-530">For an explanation of the difference between postbacks and callbacks, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-531">下面的示例演示如何测试的值<xref:System.Web.UI.Page.IsPostBack%2A>属性以确定是否页呈现第一次，或响应的回发加载页面时。</span><span class="sxs-lookup"><span data-stu-id="f9efe-531">The following example shows how to test the value of the <xref:System.Web.UI.Page.IsPostBack%2A> property when the page is loaded in order to determine whether the page is being rendered for the first time or is responding to a postback.</span></span> <span data-ttu-id="f9efe-532">如果首次呈现页，该代码调用<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-532">If the page is being rendered for the first time, the code calls the <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f9efe-533">（未显示） 的页标记包含<xref:System.Web.UI.WebControls.RequiredFieldValidator>显示星号，如果没有条目专为必填的输入字段的控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-533">The page markup (not shown) contains <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls that display asterisks if no entry is made for a required input field.</span></span> <span data-ttu-id="f9efe-534">调用<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>会导致立即当呈现页，而不是等待直到用户单击提交按钮显示星号。</span><span class="sxs-lookup"><span data-stu-id="f9efe-534">Calling <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> causes the asterisks to be displayed immediately when the page is rendered, instead of waiting until the user clicks the Submit button.</span></span> <span data-ttu-id="f9efe-535">回发之后, 你无需调用<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>，因为该方法调用的一部分<xref:System.Web.UI.Page>生命周期。</span><span class="sxs-lookup"><span data-stu-id="f9efe-535">After a postback, you do not have to call <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>, because that method is called as part of the <xref:System.Web.UI.Page> life cycle.</span></span>  
  
 [!code-csharp[System.Web.UI.Page.Validate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate/CS/validate.cs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Validate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate/VB/validate.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)" />
        <altmember cref="P:System.Web.UI.Page.IsCallback" />
      </Docs>
    </Member>
    <Member MemberName="IsPostBackEventControlRegistered">
      <MemberSignature Language="C#" Value="public bool IsPostBackEventControlRegistered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostBackEventControlRegistered" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsPostBackEventControlRegistered" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPostBackEventControlRegistered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPostBackEventControlRegistered { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-536">获取一个值，该值指示页中执行回发的控件是否经过注册。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-536">Gets a value that indicates whether the control in the page that performs postbacks has been registered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-537">如果该控件经过注册，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-537">
              <see langword="true" /> if the control has been registered; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReusable { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-538">获取一个值，该值指示 <see cref="T:System.Web.UI.Page" /> 对象是否可重用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-538">Gets a value indicating whether the <see cref="T:System.Web.UI.Page" /> object can be reused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-539">在所有情况下均为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-539">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.IHttpHandler" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.IsStartupScriptRegistered(string key). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9efe-540">要搜索的启动脚本的字符串关键字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-540">The string key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-541">确定 <see cref="T:System.Web.UI.Page" /> 对象是否注册了客户端启动脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-541">Determines whether the client startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-542">如果注册了启动脚本，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-542">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-543">调用此方法之前调用<xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=nameWithType>以避免不必要地将客户端脚本。</span><span class="sxs-lookup"><span data-stu-id="f9efe-543">Call this method before calling <xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=nameWithType> to avoid unnecessarily assembling the client-side script.</span></span> <span data-ttu-id="f9efe-544">这一点特别重要，如果该脚本需要大量服务器资源进行创建。</span><span class="sxs-lookup"><span data-stu-id="f9efe-544">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="f9efe-545"><xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> 方法已弃用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-545">The <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method has been deprecated.</span></span> <span data-ttu-id="f9efe-546">使用<xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>中的方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-546">Use the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-547">下面的代码示例演示如何将<xref:System.Web.UI.Page.RegisterStartupScript%2A>方法结合<xref:System.Web.UI.Page.IsStartupScriptRegistered%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-547">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="f9efe-548">如果编写的代码声明块中 ECMAScript 不已注册，所确定的那样<xref:System.Web.UI.Page.IsStartupScriptRegistered%2A>，则<xref:System.Web.UI.Page.RegisterStartupScript%2A>进行调用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-548">If the ECMAScript written in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A>, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-549">获取一个值，该值指示页验证是否成功。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-549">Gets a value indicating whether page validation succeeded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-550">如果页验证成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-550">
              <see langword="true" /> if page validation succeeded; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-551">此属性返回`true`，当前的验证组中的所有验证服务器控件都必须都验证成功。</span><span class="sxs-lookup"><span data-stu-id="f9efe-551">For this property to return `true`, all validation server controls in the current validation group must validate successfully.</span></span> <span data-ttu-id="f9efe-552">只有具有调用之后，应检查此属性<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>方法或一组`CausesValidation`属性`true`中`OnServerClick`启动窗体处理的 ASP.NET 服务器控件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f9efe-552">You should check this property only after you have called the <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> method, or set the `CausesValidation` property to `true` in the `OnServerClick` event handler for an ASP.NET server control that initiates form processing.</span></span> <span data-ttu-id="f9efe-553">这些服务器控件包括<xref:System.Web.UI.WebControls.Button>， <xref:System.Web.UI.HtmlControls.HtmlButton>， <xref:System.Web.UI.HtmlControls.HtmlInputButton>， <xref:System.Web.UI.HtmlControls.HtmlInputImage>， <xref:System.Web.UI.WebControls.ImageButton>，和<xref:System.Web.UI.WebControls.LinkButton>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-553">These server controls include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.HtmlControls.HtmlButton>, <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> classes.</span></span>  
  
 <span data-ttu-id="f9efe-554">如果强制验证的验证组使用<xref:System.Web.UI.Page.Validate%2A>方法，则指定的验证组中的所有验证控件必须成功验证以及。</span><span class="sxs-lookup"><span data-stu-id="f9efe-554">If you force validation of a validation group using the <xref:System.Web.UI.Page.Validate%2A> method, then all validation controls in the specified validation group must validate successfully as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-555">下面的代码示例演示如何使用<xref:System.Web.UI.Page.IsValid%2A>属性设置的条件语句。</span><span class="sxs-lookup"><span data-stu-id="f9efe-555">The following code example demonstrates using the <xref:System.Web.UI.Page.IsValid%2A> property to set up a conditional statement.</span></span> <span data-ttu-id="f9efe-556">如果该属性返回`true`、`Text`属性`lblOutput`控件设置为"页无效 ！"</span><span class="sxs-lookup"><span data-stu-id="f9efe-556">If the property returns `true`, the `Text` property of the `lblOutput` control is set to "Page is valid!"</span></span> <span data-ttu-id="f9efe-557">否则，设置为"的某些必填字段为空。"</span><span class="sxs-lookup"><span data-stu-id="f9efe-557">Otherwise, it is set to "Some of the required fields are empty."</span></span>  
  
 [!code-csharp[System.Web.UI.Page.Validate#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate/CS/validate.cs.aspx#2)]
 [!code-vb[System.Web.UI.Page.Validate#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate/VB/validate.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f9efe-558">
            <see cref="P:System.Web.UI.Page.IsValid" /> 属性在发生验证之前调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-558">The <see cref="P:System.Web.UI.Page.IsValid" /> property is called before validation has occurred.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="M:System.Web.UI.Page.Validate" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Items { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-559">获取存储在页上下文中的对象的列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-559">Gets a list of objects stored in the page context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-560">对包含存储在页上下文中的对象的 <see cref="T:System.Collections.IDictionary" /> 的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-560">A reference to an <see cref="T:System.Collections.IDictionary" /> containing objects stored in the page context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-561">使用<xref:System.Web.UI.Page.Items%2A>属性来存储为页面请求具有相同的生存期的对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-561">Use the <xref:System.Web.UI.Page.Items%2A> property to store objects with the same lifetime as the page request.</span></span> <span data-ttu-id="f9efe-562">此属性是只读的;但是，你可以将对象添加到<xref:System.Collections.IDictionary>对象返回。</span><span class="sxs-lookup"><span data-stu-id="f9efe-562">This property is read-only; however, you can add objects to the <xref:System.Collections.IDictionary> object it returns.</span></span>  
  
 <span data-ttu-id="f9efe-563">添加到对象<xref:System.Web.UI.Page.Items%2A>属性都的整个生存期内页上，提供的因此你可以将对象添加到<xref:System.Web.UI.Page.Items%2A>尽早中的页生存期的事件的属性进行循环，并访问更高版本的事件中的那些对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-563">Objects added to the <xref:System.Web.UI.Page.Items%2A> property are available throughout the lifetime of the page, so you can add objects to the <xref:System.Web.UI.Page.Items%2A> property in events early in the page life cycle and access those objects in later events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-564">设置与页关联的 <see cref="T:System.Threading.Thread" /> 对象的区域设置标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-564">Sets the locale identifier for the <see cref="T:System.Threading.Thread" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-565">要传递给 <see cref="T:System.Threading.Thread" /> 的区域设置标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-565">The locale identifier to pass to the <see cref="T:System.Threading.Thread" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-566">在大多数情况下，不要在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-566">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f9efe-567">`LCID`可以在.aspx 文件指令中设置属性，但是，设置的区域设置标识符的首选的方法是使用<xref:System.Web.UI.Page.Culture%2A>和<xref:System.Web.UI.Page.UICulture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-567">The `LCID` attribute can be set in the  directive of the .aspx file, however, the preferred method of setting the locale identifier is through the use of the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Thread" />
        <altmember cref="P:System.Web.UI.Page.Culture" />
        <altmember cref="P:System.Web.UI.Page.UICulture" />
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="public event EventHandler LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoadComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.LoadComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoadComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-568">在页生命周期的加载阶段结束时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-568">Occurs at the end of the load stage of the page's life cycle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-569"><xref:System.Web.UI.Page.LoadComplete>事件发生后所有回发数据和视图状态数据加载到页和之后<xref:System.Web.UI.Control.OnLoad%2A>已为页面上的所有控件调用方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-569">The <xref:System.Web.UI.Page.LoadComplete> event occurs after all postback data and view-state data is loaded into the page and after the <xref:System.Web.UI.Control.OnLoad%2A> method has been called for all controls on the page.</span></span>  
  
 <span data-ttu-id="f9efe-570">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-570">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Page.InitComplete" />
        <altmember cref="E:System.Web.UI.Page.PreRenderComplete" />
        <altmember cref="E:System.Web.UI.Page.SaveStateComplete" />
      </Docs>
    </Member>
    <Member MemberName="LoadPageStateFromPersistenceMedium">
      <MemberSignature Language="C#" Value="protected internal virtual object LoadPageStateFromPersistenceMedium ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object LoadPageStateFromPersistenceMedium() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.LoadPageStateFromPersistenceMedium" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function LoadPageStateFromPersistenceMedium () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ LoadPageStateFromPersistenceMedium();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-571">将所有保存的视图状态信息加载到 <see cref="T:System.Web.UI.Page" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-571">Loads any saved view-state information to the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-572">保存的视图状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-572">The saved view state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-573"><xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>方法使用<xref:System.Web.UI.PageStatePersister.Load%2A>方法<xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType>所引用对象<xref:System.Web.UI.Page.PageStatePersister%2A>属性加载任何保存的视图状态信息<xref:System.Web.UI.Page>对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-573">The <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> method uses the <xref:System.Web.UI.PageStatePersister.Load%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to load any saved view-state information for the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="f9efe-574">ASP.NET 包括两个子代的<xref:System.Web.UI.PageStatePersister>类，<xref:System.Web.UI.HiddenFieldPageStatePersister>将状态信息保存在 ASP.NET 页中包含的隐藏字段的类和<xref:System.Web.UI.SessionPageStatePersister>中保存状态的类<xref:System.Web.UI.Page.Session%2A>与关联的对象请求。</span><span class="sxs-lookup"><span data-stu-id="f9efe-574">ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request.</span></span>  
  
 <span data-ttu-id="f9efe-575">若要将状态保存在你选择的位置，你应创建一个新的派生<xref:System.Web.UI.PageStatePersister>类，该类将保存并加载到持久性介质的所选的状态。</span><span class="sxs-lookup"><span data-stu-id="f9efe-575">To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice.</span></span> <span data-ttu-id="f9efe-576">有关创建新的示例<xref:System.Web.UI.PageStatePersister>对象，请参阅<xref:System.Web.UI.PageStatePersister>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-576">For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 <span data-ttu-id="f9efe-577">如果你使用的.NET Framework 版本 1.0 或 1.1，重写此方法，如果你想要加载<xref:System.Web.UI.Page>状态从隐藏的字段之外的任何内容。</span><span class="sxs-lookup"><span data-stu-id="f9efe-577">If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to load the <xref:System.Web.UI.Page> state from anything other than a hidden field.</span></span> <span data-ttu-id="f9efe-578">如果你选择这样做，则还必须重写<xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-578">If you choose to do so, you must also override the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="MaintainScrollPositionOnPostBack">
      <MemberSignature Language="C#" Value="public bool MaintainScrollPositionOnPostBack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="VB.NET" Value="Public Property MaintainScrollPositionOnPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaintainScrollPositionOnPostBack { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-579">获取或设置一个值，该值指示是否在回发后将用户返回到客户端浏览器中的同一位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-579">Gets or sets a value indicating whether to return the user to the same position in the client browser after postback.</span>
          </span>
          <span data-ttu-id="f9efe-580">此属性替换已过时的 <see cref="P:System.Web.UI.Page.SmartNavigation" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-580">This property replaces the obsolete <see cref="P:System.Web.UI.Page.SmartNavigation" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-581">如果应保持客户端位置，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-581">
              <see langword="true" /> if the client position should be maintained; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-582">当网页是回发到服务器，则用户将返回到页面顶部。</span><span class="sxs-lookup"><span data-stu-id="f9efe-582">When Web pages are posted back to the server, the user is returned to the top of the page.</span></span> <span data-ttu-id="f9efe-583">在较长的网页，这意味着，用户必须向下滚动页面回发到页面上的最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="f9efe-583">On long Web pages, this means that the user has to scroll the page back to the last position on the page.</span></span>  
  
 <span data-ttu-id="f9efe-584">当<xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A>属性设置为`true`，则用户将改为返回到最后一个位置的页上。</span><span class="sxs-lookup"><span data-stu-id="f9efe-584">When the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property is set to `true`, the user is instead returned to the last position on the page.</span></span>  
  
 <span data-ttu-id="f9efe-585">你设置<xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A>中的属性[@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)指令。</span><span class="sxs-lookup"><span data-stu-id="f9efe-585">You set the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property in the [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f9efe-586">表示虚拟路径的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-586">A <see cref="T:System.String" /> that represents the virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-587">检索虚拟路径（绝对的或相对的）或应用程序相关的路径映射到的物理路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-587">Retrieves the physical path that a virtual path, either absolute or relative, or an application-relative path maps to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-588">与虚拟路径或应用程序相关的路径关联的物理路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-588">The physical path associated with the virtual path or application-relative path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="f9efe-589"><xref:System.Web.UI.Page.MapPath%2A>属性可能包含敏感信息有关的宿主环境。</span><span class="sxs-lookup"><span data-stu-id="f9efe-589">The <xref:System.Web.UI.Page.MapPath%2A> property can potentially contain sensitive information about the hosting environment.</span></span> <span data-ttu-id="f9efe-590">返回值不应该向用户显示。</span><span class="sxs-lookup"><span data-stu-id="f9efe-590">The return value should not be displayed to users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-591">下面的示例使用<xref:System.Web.UI.Page.MapPath%2A>方法来获取子文件夹的物理路径。</span><span class="sxs-lookup"><span data-stu-id="f9efe-591">The following example uses the <xref:System.Web.UI.Page.MapPath%2A> method to obtain the physical path of a subfolder.</span></span> <span data-ttu-id="f9efe-592">然后，将从读取的文件名称<xref:System.Web.UI.WebControls.TextBox.Text%2A>属性<xref:System.Web.UI.WebControls.TextBox>控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-592">It then appends the file name that is read from the <xref:System.Web.UI.WebControls.TextBox.Text%2A> property of a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="f9efe-593">结果是对该文件的绝对物理路径。</span><span class="sxs-lookup"><span data-stu-id="f9efe-593">The result is the absolute physical path to that file.</span></span>  
  
 [!code-csharp[Page_MapPath_ResponseEncoding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_MapPath_ResponseEncoding/CS/page_mappath_responseencoding.cs.aspx#1)]
 [!code-vb[Page_MapPath_ResponseEncoding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_MapPath_ResponseEncoding/VB/page_mappath_responseencoding.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.MapPath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Master">
      <MemberSignature Language="C#" Value="public System.Web.UI.MasterPage Master { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.MasterPage Master" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Master" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Master As MasterPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::MasterPage ^ Master { System::Web::UI::MasterPage ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.MasterPage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-594">获取确定页的整体外观的母版页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-594">Gets the master page that determines the overall look of the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-595">如果存在，则为与此页相关联的 <see cref="T:System.Web.UI.MasterPage" />；否则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-595">The <see cref="T:System.Web.UI.MasterPage" /> associated with this page if it exists; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-596"><xref:System.Web.UI.Page.Master%2A>属性返回<xref:System.Web.UI.MasterPage>对象关联的这一页。</span><span class="sxs-lookup"><span data-stu-id="f9efe-596">The <xref:System.Web.UI.Page.Master%2A> property returns the <xref:System.Web.UI.MasterPage> object associated with this page.</span></span> <span data-ttu-id="f9efe-597">此属性是只读的;但是，你可以设置属性<xref:System.Web.UI.MasterPage>对象返回。</span><span class="sxs-lookup"><span data-stu-id="f9efe-597">This property is read-only; however, you can set properties on the <xref:System.Web.UI.MasterPage> object it returns.</span></span>  
  
 <span data-ttu-id="f9efe-598"><xref:System.Web.UI.Page.Master%2A>属性是仅在引用中的主控页的页上有效<xref:System.Web.UI.Page.MasterPageFile%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-598">The <xref:System.Web.UI.Page.Master%2A> property is valid only on pages that reference a master page in the <xref:System.Web.UI.Page.MasterPageFile%2A> property.</span></span> <span data-ttu-id="f9efe-599">如果你访问<xref:System.Web.UI.Page.Master%2A>不引用母板页的页面上的属性`null`返回。</span><span class="sxs-lookup"><span data-stu-id="f9efe-599">If you access the <xref:System.Web.UI.Page.Master%2A> property on a page that does not reference a master page, `null` is returned.</span></span> <span data-ttu-id="f9efe-600">母版页的内容不可用，直到后<xref:System.Web.UI.Page.PreInit>引发事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-600">The contents of a master page are not available until after the <xref:System.Web.UI.Page.PreInit> event has been raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.MasterPageFile" />
      </Docs>
    </Member>
    <Member MemberName="MasterPageFile">
      <MemberSignature Language="C#" Value="public virtual string MasterPageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MasterPageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MasterPageFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MasterPageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MasterPageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-601">获取或设置母版页的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-601">Gets or sets the virtual path of the master page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-602">母版页面的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-602">The virtual path of the master page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-603"><xref:System.Web.UI.Page.MasterPageFile%2A>属性是虚拟路径 （从应用程序的根目录） 关联的这一页的母版页文件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-603">The <xref:System.Web.UI.Page.MasterPageFile%2A> property is a virtual path (from the root of the application) of the master page file associated with this page.</span></span> <span data-ttu-id="f9efe-604"><xref:System.Web.UI.Page.MasterPageFile%2A>属性可以设置仅在<xref:System.Web.UI.Page.PreInit>事件; 正在尝试设置<xref:System.Web.UI.Page.MasterPageFile%2A>属性后的<xref:System.Web.UI.Page.PreInit>事件将引发<xref:System.InvalidOperationException>异常。</span><span class="sxs-lookup"><span data-stu-id="f9efe-604">The <xref:System.Web.UI.Page.MasterPageFile%2A> property can be set only in the <xref:System.Web.UI.Page.PreInit> event; attempting to set the <xref:System.Web.UI.Page.MasterPageFile%2A> property after the <xref:System.Web.UI.Page.PreInit> event will throw an <xref:System.InvalidOperationException> exception.</span></span> <span data-ttu-id="f9efe-605">如果<xref:System.Web.UI.Page.MasterPageFile%2A>属性不是有效，类型的异常<xref:System.Web.HttpException>引发更高版本中页的生命周期，但不会引发异常时在该属性设置<xref:System.Web.UI.Page.PreInit>事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-605">If the <xref:System.Web.UI.Page.MasterPageFile%2A> property is not valid, an exception of type <xref:System.Web.HttpException> is thrown later in the page life cycle, but no exception is thrown when the property is set in the <xref:System.Web.UI.Page.PreInit> event.</span></span>  
  
 <span data-ttu-id="f9efe-606">页具有<xref:System.Web.UI.Page.MasterPageFile%2A>属性组是否内容页中，并因此可包含仅顶级控件<xref:System.Web.UI.WebControls.Content>控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-606">Pages that have the <xref:System.Web.UI.Page.MasterPageFile%2A> property set are content pages, and therefore can contain only top-level controls that are <xref:System.Web.UI.WebControls.Content> controls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-607">
            <see cref="P:System.Web.UI.Page.MasterPageFile" /> 属性在 <see cref="E:System.Web.UI.Page.PreInit" /> 事件完成后进行设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-607">The <see cref="P:System.Web.UI.Page.MasterPageFile" /> property is set after the <see cref="E:System.Web.UI.Page.PreInit" /> event is complete.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f9efe-608">
            <see cref="P:System.Web.UI.Page.MasterPageFile" /> 属性中指定的文件不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-608">The file specified in the <see cref="P:System.Web.UI.Page.MasterPageFile" /> property does not exist.</span>
          </span>
          <span data-ttu-id="f9efe-609">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-609">\- or -</span>
          </span>
          <span data-ttu-id="f9efe-610">页中没有作为顶级控件的 <see cref="T:System.Web.UI.WebControls.Content" /> 控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-610">The page does not have a <see cref="T:System.Web.UI.WebControls.Content" /> control as the top level control.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.Master" />
      </Docs>
    </Member>
    <Member MemberName="MaxPageStateFieldLength">
      <MemberSignature Language="C#" Value="public int MaxPageStateFieldLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPageStateFieldLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MaxPageStateFieldLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPageStateFieldLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPageStateFieldLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-611">获取或设置页状态字段的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-611">Gets or sets the maximum length for the page's state field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-612">页的状态字段的最大长度（以字节为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-612">The maximum length, in bytes, for the page's state field.</span>
          </span>
          <span data-ttu-id="f9efe-613">默认值为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-613">The default is -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-614">当<xref:System.Web.UI.Page.MaxPageStateFieldLength%2A>属性设置为正数、 发送到客户端浏览器的视图状态分为多个隐藏的字段，以及每个字段的值小于中指定的大小<xref:System.Web.UI.Page.MaxPageStateFieldLength%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-614">When the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property is set to a positive number, the view state sent to the client browser is broken into multiple hidden fields, and each field's value is less than the size specified in the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property.</span></span>  
  
 <span data-ttu-id="f9efe-615">设置<xref:System.Web.UI.Page.MaxPageStateFieldLength%2A>为负数 （默认值） 的属性指示不应该将视图状态字段分隔成多个块。</span><span class="sxs-lookup"><span data-stu-id="f9efe-615">Setting the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property to a negative number (the default) indicates that the view-state field should not be separated into chunks.</span></span> <span data-ttu-id="f9efe-616">设置<xref:System.Web.UI.Page.MaxPageStateFieldLength%2A>为数量较少可能会导致性能不佳。</span><span class="sxs-lookup"><span data-stu-id="f9efe-616">Setting the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> to a small number may result in poor performance.</span></span>  
  
 <span data-ttu-id="f9efe-617">设置的值<xref:System.Web.UI.Page.MaxPageStateFieldLength%2A>属性中的的 Web.config 文件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-617">Set the value of the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property in the  of the Web.config file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9efe-618">
            <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> 属性不等于 -1 或正数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-618">The <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> property is not equal to -1 or a positive number.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-619">
            <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> 属性是在初始化页后设置的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-619">The <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> property was set after the page was initialized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MetaDescription">
      <MemberSignature Language="C#" Value="public string MetaDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MetaDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MetaDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property MetaDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MetaDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-620">获取或设置“描述”<see langword="meta" /> 元素的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-620">Gets or sets the content of the "description" <see langword="meta" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-621">“描述”<see langword="meta" /> 元素的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-621">The content of the "description" <see langword="meta" /> element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-622">HTML`meta`元素可用于提高搜索引擎列表。</span><span class="sxs-lookup"><span data-stu-id="f9efe-622">HTML `meta` elements can be used to improve search-engine listings.</span></span> <span data-ttu-id="f9efe-623">"Description"`meta`某些搜索引擎使用元素来改善列表预览。</span><span class="sxs-lookup"><span data-stu-id="f9efe-623">The "description" `meta` element is used by some search engines to improve listing previews.</span></span>  
  
 <span data-ttu-id="f9efe-624">如果没有"描述"`meta`中的元素`head`的页标记中，元素`meta`呈现页时，将元素添加到页面。</span><span class="sxs-lookup"><span data-stu-id="f9efe-624">If there is no "description" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered.</span></span> <span data-ttu-id="f9efe-625">如果页面标记已有"description"`meta`元素，此属性获取或设置`content`属性`meta`元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-625">If the page markup already has a "description" `meta` element, this property gets or sets the `content` attribute of the `meta` element.</span></span>  
  
 <span data-ttu-id="f9efe-626">此外可以在指令中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-626">You can also set this property in the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-627">如果你设置<xref:System.Web.UI.Page.MetaDescription%2A>到"ASP.NET 概述"页的属性，下面的元素将出现在呈现的 HTML:</span><span class="sxs-lookup"><span data-stu-id="f9efe-627">If you set the <xref:System.Web.UI.Page.MetaDescription%2A> property of a page to "ASP.NET Overview", the following element will appear in the rendered HTML:</span></span>  
  
 `<meta name="description" content="ASP.NET Overview" />`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-628">页面没有标题控件（<see langword="head" /> 特性设置为“server”的 <see langword="runat" /> 元素）</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-628">The page does not have a header control (a <see langword="head" /> element with the <see langword="runat" /> attribute set to "server").</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.MetaKeywords" />
      </Docs>
    </Member>
    <Member MemberName="MetaKeywords">
      <MemberSignature Language="C#" Value="public string MetaKeywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MetaKeywords" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MetaKeywords" />
      <MemberSignature Language="VB.NET" Value="Public Property MetaKeywords As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MetaKeywords { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-629">获取或设置“关键字”<see langword="meta" /> 元素的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-629">Gets or sets the content of the "keywords" <see langword="meta" /> element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-630">“关键字”<see langword="meta" /> 元素的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-630">The content of the "keywords" <see langword="meta" /> element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-631">HTML`meta`元素可用于提高搜索引擎列表。</span><span class="sxs-lookup"><span data-stu-id="f9efe-631">HTML `meta` elements can be used to improve search-engine listings.</span></span> <span data-ttu-id="f9efe-632">"关键字"`meta`元素根本或者不使用或由主要的搜索引擎提供很少的权重。</span><span class="sxs-lookup"><span data-stu-id="f9efe-632">The "keywords" `meta` element is either not used at all or is given very little weight by the major search engines.</span></span>  
  
 <span data-ttu-id="f9efe-633">如果没有任何"关键字"`meta`中的元素`head`的页标记中，元素`meta`呈现页时，将元素添加到页面。</span><span class="sxs-lookup"><span data-stu-id="f9efe-633">If there is no "keywords" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered.</span></span> <span data-ttu-id="f9efe-634">如果页面标记已有"关键字"`meta`元素，此属性获取或设置`content`属性`meta`元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-634">If the page markup already has a "keywords" `meta` element, this property gets or sets the `content` attribute of the `meta` element.</span></span>  
  
 <span data-ttu-id="f9efe-635">此外可以在指令中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-635">You can also set this property in the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-636">如果你设置<xref:System.Web.UI.Page.MetaKeywords%2A>"HTML、 CSS、 XML，JavaScript"页的属性，下面的元素将出现在呈现的 HTML:</span><span class="sxs-lookup"><span data-stu-id="f9efe-636">If you set the <xref:System.Web.UI.Page.MetaKeywords%2A> property of a page to "HTML,CSS,XML,JavaScript", the following element will appear in the rendered HTML:</span></span>  
  
 `<meta name="keywords" content=" HTML,CSS,XML,JavaScript" />`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-637">页面没有标题控件（<see langword="head" /> 特性设置为“server”的 <see langword="runat" /> 元素）</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-637">The page does not have a header control (a <see langword="head" /> element with the <see langword="runat" /> attribute set to "server").</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.MetaDescription" />
      </Docs>
    </Member>
    <Member MemberName="ModelBindingExecutionContext">
      <MemberSignature Language="C#" Value="public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ModelBindingExecutionContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelBindingExecutionContext As ModelBindingExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ModelBinding::ModelBindingExecutionContext ^ ModelBindingExecutionContext { System::Web::ModelBinding::ModelBindingExecutionContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ModelBinding.ModelBindingExecutionContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-638">获取模型绑定器的执行上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-638">Gets the model binding execution context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-639">模型绑定器执行上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-639">The model binding execution context.</span>
          </span>
          <span data-ttu-id="f9efe-640">如果模型绑定的执行上下文是 <see langword="null" />，则声称一个新的模型绑定上下文并将其返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-640">If the model binding execution context is <see langword="null" />, a new one is created and returned.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelState">
      <MemberSignature Language="C#" Value="public System.Web.ModelBinding.ModelStateDictionary ModelState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ModelBinding.ModelStateDictionary ModelState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ModelState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelState As ModelStateDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ModelBinding::ModelStateDictionary ^ ModelState { System::Web::ModelBinding::ModelStateDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ModelBinding.ModelStateDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-641">获取包含模型状态和模型绑定验证状态的模型状态字典对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-641">Gets the model state dictionary object that contains the state of the model and of model-binding validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-642">模型状态字典对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-642">The model state dictionary object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-643">在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-643">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f9efe-644">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-644">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-645">引发 <see cref="E:System.Web.UI.Control.Init" /> 事件以对页进行初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-645">Raises the <see cref="E:System.Web.UI.Control.Init" /> event to initialize the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-646"><xref:System.Web.UI.Page.OnInit%2A>方法执行创建所需的初始化和安装步骤<xref:System.Web.UI.Page>实例。</span><span class="sxs-lookup"><span data-stu-id="f9efe-646">The <xref:System.Web.UI.Page.OnInit%2A> method performs the initialization and setup steps required to create a <xref:System.Web.UI.Page> instance.</span></span> <span data-ttu-id="f9efe-647">在此阶段中的页面的生命周期，该页上声明的服务器控件初始化为其默认状态;但是，将不填充每个控件的视图状态。</span><span class="sxs-lookup"><span data-stu-id="f9efe-647">In this stage of the page's life cycle, declared server controls on the page are initialized to their default state; however, the view state of each control is not yet populated.</span></span> <span data-ttu-id="f9efe-648">页上的控件无法访问期间页上的其他服务器控件`Page_Init`阶段，而不考虑其他控件是否子项或父控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-648">A control on the page cannot access other server controls on the page during the `Page_Init` phase, regardless of whether the other controls are child or parent controls.</span></span> <span data-ttu-id="f9efe-649">不保证其他服务器控件都可创建并准备好进行访问。</span><span class="sxs-lookup"><span data-stu-id="f9efe-649">Other server controls are not guaranteed to be created and ready for access.</span></span>  
  
 <span data-ttu-id="f9efe-650"><xref:System.Web.UI.Page.OnInit%2A>方法后，会调用<xref:System.Web.UI.Page.OnPreInit%2A>方法和之前<xref:System.Web.UI.Page.OnInitComplete%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-650">The <xref:System.Web.UI.Page.OnInit%2A> method is called after the <xref:System.Web.UI.Page.OnPreInit%2A> method and before the <xref:System.Web.UI.Page.OnInitComplete%2A> method.</span></span>  
  
 <span data-ttu-id="f9efe-651">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f9efe-651">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f9efe-652">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-652">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f9efe-653"><xref:System.Web.UI.Page.OnInit%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="f9efe-653">The <xref:System.Web.UI.Page.OnInit%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f9efe-654">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="f9efe-654">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f9efe-655">在派生类中重写 <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f9efe-655">When overriding <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInitComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnInitComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f9efe-656">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-656">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-657">在页初始化后引发 <see cref="E:System.Web.UI.Page.InitComplete" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-657">Raises the <see cref="E:System.Web.UI.Page.InitComplete" /> event after page initialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-658"><xref:System.Web.UI.Page.OnInitComplete%2A>页初始化完成后调用方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-658">The <xref:System.Web.UI.Page.OnInitComplete%2A> method is called after page initialization is complete.</span></span> <span data-ttu-id="f9efe-659">在此阶段的页面的生命周期中，所有声明的页上的控件进行初始化，但尚未填充页面的视图状态。</span><span class="sxs-lookup"><span data-stu-id="f9efe-659">In this stage of the page's life cycle, all declared controls on the page are initialized, but the page's view state is not yet populated.</span></span> <span data-ttu-id="f9efe-660">你可以访问服务器控件，但它们将不包含从用户返回的信息。</span><span class="sxs-lookup"><span data-stu-id="f9efe-660">You can access server controls, but they will not yet contain information returned from the user.</span></span>  
  
 <span data-ttu-id="f9efe-661"><xref:System.Web.UI.Page.OnInitComplete%2A>方法发生末尾<xref:System.Web.UI.Page>初始化阶段和之前的加载阶段。</span><span class="sxs-lookup"><span data-stu-id="f9efe-661">The <xref:System.Web.UI.Page.OnInitComplete%2A> method occurs at the end of the <xref:System.Web.UI.Page> initialization stage and before the load stage.</span></span>  
  
 <span data-ttu-id="f9efe-662">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f9efe-662">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f9efe-663">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-663">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f9efe-664"><xref:System.Web.UI.Page.OnInitComplete%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="f9efe-664">The <xref:System.Web.UI.Page.OnInitComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f9efe-665">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="f9efe-665">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f9efe-666">在派生类中重写 <see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f9efe-666">When overriding <see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLoadComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f9efe-667">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-667">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-668">在页加载阶段结束时引发 <see cref="E:System.Web.UI.Page.LoadComplete" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-668">Raises the <see cref="E:System.Web.UI.Page.LoadComplete" /> event at the end of the page load stage.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-669"><xref:System.Web.UI.Page.OnLoadComplete%2A>页加载阶段的末尾调用方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-669">The <xref:System.Web.UI.Page.OnLoadComplete%2A> method is called at the end of the page load stage.</span></span> <span data-ttu-id="f9efe-670">此时在页的生命周期，所有的回发数据和视图状态数据加载到页上的控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-670">At this point in the page life cycle, all postback data and view-state data is loaded into controls on the page.</span></span>  
  
 <span data-ttu-id="f9efe-671">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f9efe-671">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f9efe-672">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-672">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f9efe-673"><xref:System.Web.UI.Page.OnLoadComplete%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="f9efe-673">The <xref:System.Web.UI.Page.OnLoadComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f9efe-674">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="f9efe-674">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f9efe-675">在派生类中重写 <see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f9efe-675">When overriding <see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreInit">
      <MemberSignature Language="C#" Value="protected virtual void OnPreInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f9efe-676">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-676">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-677">在页初始化开始时引发 <see cref="E:System.Web.UI.Page.PreInit" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-677">Raises the <see cref="E:System.Web.UI.Page.PreInit" /> event at the beginning of page initialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-678"><xref:System.Web.UI.Page.OnPreInit%2A>页初始化阶段开头调用方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-678">The <xref:System.Web.UI.Page.OnPreInit%2A> method is called at the beginning of the page initialization stage.</span></span>  
  
 <span data-ttu-id="f9efe-679">后<xref:System.Web.UI.Page.OnPreInit%2A>调用方法、 加载个性化信息和页面主题中，如果有的话，已初始化。</span><span class="sxs-lookup"><span data-stu-id="f9efe-679">After the <xref:System.Web.UI.Page.OnPreInit%2A> method is called, personalization information is loaded and the page theme, if any, is initialized.</span></span> <span data-ttu-id="f9efe-680">这也是首选的阶段，以动态定义<xref:System.Web.UI.PageTheme>或<xref:System.Web.UI.MasterPage>页。</span><span class="sxs-lookup"><span data-stu-id="f9efe-680">This is also the preferred stage to dynamically define a <xref:System.Web.UI.PageTheme> or <xref:System.Web.UI.MasterPage> for the Page.</span></span>  
  
 <span data-ttu-id="f9efe-681">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f9efe-681">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f9efe-682">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-682">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f9efe-683"><xref:System.Web.UI.Page.OnPreInit%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="f9efe-683">The <xref:System.Web.UI.Page.OnPreInit%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f9efe-684">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="f9efe-684">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f9efe-685">在派生类中重写 <see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f9efe-685">When overriding <see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnPreLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f9efe-686">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-686">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-687">在回发数据已加载到页服务器控件之后但在 <see cref="E:System.Web.UI.Page.PreLoad" /> 事件之前，引发 <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-687">Raises the <see cref="E:System.Web.UI.Page.PreLoad" /> event after postback data is loaded into the page server controls but before the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-688"><xref:System.Web.UI.Page.OnPreLoad%2A>调用方法加载返回从用户的所有回发数据。</span><span class="sxs-lookup"><span data-stu-id="f9efe-688">The <xref:System.Web.UI.Page.OnPreLoad%2A> method is called after all postback data returned from the user is loaded.</span></span> <span data-ttu-id="f9efe-689">在页面的生命周期中的此阶段，查看状态信息的回发数据声明和控件和在初始化阶段过程中创建的控件将加载到页面的控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-689">At this stage in the page's life cycle, view-state information and postback data for declared controls and controls created during the initialization stage are loaded into the page's controls.</span></span>  
  
 <span data-ttu-id="f9efe-690">在中创建的控件<xref:System.Web.UI.Page.OnPreLoad%2A>方法还将加载视图状态和回发数据。</span><span class="sxs-lookup"><span data-stu-id="f9efe-690">Controls created in the <xref:System.Web.UI.Page.OnPreLoad%2A> method will also be loaded with view-state and postback data.</span></span>  
  
 <span data-ttu-id="f9efe-691">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f9efe-691">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f9efe-692">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-692">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f9efe-693"><xref:System.Web.UI.Page.OnPreLoad%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="f9efe-693">The <xref:System.Web.UI.Page.OnPreLoad%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f9efe-694">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="f9efe-694">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f9efe-695">在派生类中重写 <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f9efe-695">When overriding <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRenderComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnPreRenderComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreRenderComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreRenderComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreRenderComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f9efe-696">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-696">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-697">在 <see cref="E:System.Web.UI.Page.PreRenderComplete" /> 事件之后但在呈现页之前引发 <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-697">Raises the <see cref="E:System.Web.UI.Page.PreRenderComplete" /> event after the <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> event and before the page is rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-698"><xref:System.Web.UI.Page.OnPreRenderComplete%2A>页生命周期的预呈现阶段完成后调用方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-698">The <xref:System.Web.UI.Page.OnPreRenderComplete%2A> method is called when the prerendering stage of the page life cycle is complete.</span></span> <span data-ttu-id="f9efe-699">在此阶段的页的生命周期中，创建所有控件，而该页已准备好将输出呈现。</span><span class="sxs-lookup"><span data-stu-id="f9efe-699">At this stage of the page life cycle, all controls are created and the page is ready to render the output.</span></span>  
  
 <span data-ttu-id="f9efe-700">这是保存页面的视图状态之前调用的最后一个事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-700">This is the last event called before the page's view state is saved.</span></span>  
  
 <span data-ttu-id="f9efe-701">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f9efe-701">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f9efe-702">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-702">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f9efe-703"><xref:System.Web.UI.Page.OnPreRenderComplete%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="f9efe-703">The <xref:System.Web.UI.Page.OnPreRenderComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f9efe-704">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="f9efe-704">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f9efe-705">在派生类中重写 <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f9efe-705">When overriding <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSaveStateComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnSaveStateComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSaveStateComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSaveStateComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSaveStateComplete(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f9efe-706">一个包含事件数据的 <see cref="T:System.EventArgs" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-706">A <see cref="T:System.EventArgs" /> object containing the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-707">在已将页状态保存到持久性介质中之后引发 <see cref="E:System.Web.UI.Page.SaveStateComplete" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-707">Raises the <see cref="E:System.Web.UI.Page.SaveStateComplete" /> event after the page state has been saved to the persistence medium.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-708"><xref:System.Web.UI.Page.OnSaveStateComplete%2A>时控件的状态信息写入持久性介质页调用方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-708">The <xref:System.Web.UI.Page.OnSaveStateComplete%2A> method is called when the state information for the control has been written to the persistence medium for the page.</span></span> <span data-ttu-id="f9efe-709">状态信息写入到持久性介质上，通过调用<xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-709">State information is written to the persistence medium by calling the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method.</span></span>  
  
 <span data-ttu-id="f9efe-710">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f9efe-710">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f9efe-711">有关详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-711">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f9efe-712"><xref:System.Web.UI.Page.OnSaveStateComplete%2A> 方法还允许派生类对事件进行处理而不必附加委托。</span><span class="sxs-lookup"><span data-stu-id="f9efe-712">The <xref:System.Web.UI.Page.OnSaveStateComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f9efe-713">这是在派生类中处理事件的首选技术。</span><span class="sxs-lookup"><span data-stu-id="f9efe-713">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f9efe-714">在派生类中重写 <see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" /> 时，一定要调用基类的 <see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" /> 方法，以便已注册的委托对事件进行接收。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f9efe-714">When overriding <see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Web.UI.Page.SaveStateComplete" />
        <altmember cref="M:System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)" />
        <altmember cref="M:System.Web.UI.Page.LoadPageStateFromPersistenceMedium" />
      </Docs>
    </Member>
    <Member MemberName="PageAdapter">
      <MemberSignature Language="C#" Value="public System.Web.UI.Adapters.PageAdapter PageAdapter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Adapters.PageAdapter PageAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.PageAdapter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageAdapter As PageAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Adapters::PageAdapter ^ PageAdapter { System::Web::UI::Adapters::PageAdapter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.PageAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-715">获取为特定的请求浏览器呈现页的适配器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-715">Gets the adapter that renders the page for the specific requesting browser.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-716">呈现页的 <see cref="T:System.Web.UI.Adapters.PageAdapter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-716">The <see cref="T:System.Web.UI.Adapters.PageAdapter" /> that renders the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-717"><xref:System.Web.UI.Page.PageAdapter%2A>属性返回特定于<xref:System.Web.UI.Adapters.PageAdapter>修改的行为的对象<xref:System.Web.UI.Page>请求浏览器的对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-717">The <xref:System.Web.UI.Page.PageAdapter%2A> property returns the specific <xref:System.Web.UI.Adapters.PageAdapter> object that modifies the behavior of the <xref:System.Web.UI.Page> object for the requesting browser.</span></span>  
  
 <span data-ttu-id="f9efe-718">特定于<xref:System.Web.UI.Adapters.PageAdapter>对象确定通过检查传入的特征<xref:System.Web.UI.Page.Request%2A>对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-718">The specific <xref:System.Web.UI.Adapters.PageAdapter> object is determined by examining characteristics of the incoming <xref:System.Web.UI.Page.Request%2A> object.</span></span> <span data-ttu-id="f9efe-719">在任何生命周期事件、 请求选择适配器时<xref:System.Web.UI.Adapters.PageAdapter>对象替代的相应事件上<xref:System.Web.UI.Page>对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-719">When an adapter is chosen for the request, any life cycle events on the <xref:System.Web.UI.Adapters.PageAdapter> object override the corresponding events on the <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageStatePersister">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PageStatePersister PageStatePersister { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.PageStatePersister PageStatePersister" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.PageStatePersister" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property PageStatePersister As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::PageStatePersister ^ PageStatePersister { System::Web::UI::PageStatePersister ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-720">获取与该页关联的 <see cref="T:System.Web.UI.PageStatePersister" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-720">Gets the <see cref="T:System.Web.UI.PageStatePersister" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-721">与该页关联的 <see cref="T:System.Web.UI.PageStatePersister" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-721">A <see cref="T:System.Web.UI.PageStatePersister" /> associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-722">HTTP 请求和响应是本质上是无状态。</span><span class="sxs-lookup"><span data-stu-id="f9efe-722">HTTP requests and responses are inherently stateless.</span></span> <span data-ttu-id="f9efe-723">要保持 HTTP 请求之间的状态，ASP.NET 服务器页可以存储<xref:System.Web.UI.Page>状态。</span><span class="sxs-lookup"><span data-stu-id="f9efe-723">To maintain state between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state.</span></span> <span data-ttu-id="f9efe-724">此状态，称为视图状态，它包含的页面和控件设置使页和控件显示就像它们是相同的用户所看到并与之交互到页其最后一个往返行程的数据。</span><span class="sxs-lookup"><span data-stu-id="f9efe-724">This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the page.</span></span> <span data-ttu-id="f9efe-725">有几种机制来存储到同一页上的连续请求之间的视图状态。</span><span class="sxs-lookup"><span data-stu-id="f9efe-725">Several mechanisms exist to store view state between successive requests to the same page.</span></span> <span data-ttu-id="f9efe-726">抽象<xref:System.Web.UI.PageStatePersister>类表示这些状态存储机制的基类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-726">The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state storage mechanisms.</span></span>  
  
 <span data-ttu-id="f9efe-727">页开发人员通常不需要使用<xref:System.Web.UI.Page.PageStatePersister%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-727">Page developers will typically not need to use the <xref:System.Web.UI.Page.PageStatePersister%2A> property.</span></span> <span data-ttu-id="f9efe-728"><xref:System.Web.UI.Page.PageStatePersister%2A>属性主要由控件开发人员扩展的功能使用<xref:System.Web.UI.Page>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-728">The <xref:System.Web.UI.Page.PageStatePersister%2A> property is used primarily by control developers extending the functionality of the <xref:System.Web.UI.Page> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="postEventArgumentID">
      <MemberSignature Language="C#" Value="public const string postEventArgumentID;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string postEventArgumentID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.Page.postEventArgumentID" />
      <MemberSignature Language="VB.NET" Value="Public Const postEventArgumentID As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ postEventArgumentID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-729">一个定义呈现的页中的 EVENTARGUMENT 隐藏字段的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-729">A string that defines the EVENTARGUMENT hidden field in the rendered page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Web.UI.Page.postEventSourceID" />
      </Docs>
    </Member>
    <Member MemberName="postEventSourceID">
      <MemberSignature Language="C#" Value="public const string postEventSourceID;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string postEventSourceID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.Page.postEventSourceID" />
      <MemberSignature Language="VB.NET" Value="Public Const postEventSourceID As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ postEventSourceID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-730">一个定义呈现的页中的 EVENTTARGET 隐藏字段的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-730">A string that defines the EVENTTARGET hidden field in the rendered page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Web.UI.Page.postEventArgumentID" />
      </Docs>
    </Member>
    <Member MemberName="PreInit">
      <MemberSignature Language="C#" Value="public event EventHandler PreInit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreInit" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.PreInit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreInit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreInit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-731">在页初始化之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-731">Occurs before page initialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-732">此事件使您能够检查页请求，如是否正在加载页回发到响应中的条件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-732">This event enables you to check conditions of the page request, such as whether the page is being loaded in response to a postback.</span></span> <span data-ttu-id="f9efe-733">你还可以检查配置文件属性的值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-733">You can also check the values of profile properties.</span></span>  
  
 <span data-ttu-id="f9efe-734">事件可以设置更高版本在页的生命周期中使用的值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-734">The event enables you to set values that are used later in the page life cycle.</span></span> <span data-ttu-id="f9efe-735">可以动态设置母版页或主题对于请求的页，并创建动态控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-735">You can dynamically set a master page or a theme for the requested page, and create dynamic controls.</span></span>  
  
 <span data-ttu-id="f9efe-736">有关详细信息，如何<xref:System.Web.UI.Page.PreInit>事件适合 ASP.NET 生命周期，请参阅[ASP.NET 页面生命周期概述](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-736">For more information about how the <xref:System.Web.UI.Page.PreInit> event fits into the ASP.NET life cycle, see [ASP.NET Page Life Cycle Overview](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.PreLoad" />
      </Docs>
    </Member>
    <Member MemberName="PreLoad">
      <MemberSignature Language="C#" Value="public event EventHandler PreLoad;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreLoad" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.PreLoad" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreLoad As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreLoad;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-737">在页 <see cref="E:System.Web.UI.Control.Load" /> 事件之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-737">Occurs before the page <see cref="E:System.Web.UI.Control.Load" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-738"><xref:System.Web.UI.Page.PreLoad>所有回发数据处理之后，并在引发事件<xref:System.Web.UI.Control.Load>事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-738">The <xref:System.Web.UI.Page.PreLoad> event is raised after all postback data processing and before the <xref:System.Web.UI.Control.Load> event.</span></span> <span data-ttu-id="f9efe-739">第二个尝试加载之前的回发数据<xref:System.Web.UI.Page.OnLoadComplete%2A>事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-739">There is a second attempt to load postback data before the <xref:System.Web.UI.Page.OnLoadComplete%2A> event.</span></span> <span data-ttu-id="f9efe-740">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-740">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.PreInit" />
        <altmember cref="E:System.Web.UI.Page.PreRenderComplete" />
      </Docs>
    </Member>
    <Member MemberName="PreRenderComplete">
      <MemberSignature Language="C#" Value="public event EventHandler PreRenderComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreRenderComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.PreRenderComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreRenderComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreRenderComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-741">在呈现页内容之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-741">Occurs before the page content is rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-742"><xref:System.Web.UI.Page.PreRenderComplete>页生命周期的预呈现阶段已完成时将引发事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-742">The <xref:System.Web.UI.Page.PreRenderComplete> event is raised when the pre-render stage of the page life cycle is complete.</span></span> <span data-ttu-id="f9efe-743">在此阶段的页的生命周期中，创建所有控件、 完成所需的任何分页，和页已准备好呈现到输出。</span><span class="sxs-lookup"><span data-stu-id="f9efe-743">At this stage of the page life cycle, all controls are created, any pagination required is completed, and the page is ready to render to the output.</span></span>  
  
 <span data-ttu-id="f9efe-744">这是保存页面的视图状态之前引发的最后一个事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-744">This is the last event raised before the page's view state is saved.</span></span>  
  
 <span data-ttu-id="f9efe-745">有关处理事件的详细信息，请参阅[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-745">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.PreLoad" />
        <altmember cref="E:System.Web.UI.Page.PreInit" />
      </Docs>
    </Member>
    <Member MemberName="PreviousPage">
      <MemberSignature Language="C#" Value="public System.Web.UI.Page PreviousPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page PreviousPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.PreviousPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousPage As Page" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Page ^ PreviousPage { System::Web::UI::Page ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-746">获取向当前页传输控件的页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-746">Gets the page that transferred control to the current page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-747">表示向当前页传输控件的页的 <see cref="T:System.Web.UI.Page" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-747">The <see cref="T:System.Web.UI.Page" /> representing the page that transferred control to the current page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-748">当你使用<xref:System.Web.HttpServerUtility.Transfer%2A>方法或使用跨页面发送将处理从一个 ASP.NET 页传输到另一个，起始页包含可能要求的目标页的请求信息。</span><span class="sxs-lookup"><span data-stu-id="f9efe-748">When you use the <xref:System.Web.HttpServerUtility.Transfer%2A> method or use cross-page posting to transfer processing from one ASP.NET page to another, the originating page contains request information that might be required for the destination page.</span></span> <span data-ttu-id="f9efe-749">你可以使用<xref:System.Web.UI.Page.PreviousPage%2A>属性来访问该信息。</span><span class="sxs-lookup"><span data-stu-id="f9efe-749">You can use the <xref:System.Web.UI.Page.PreviousPage%2A> property to access that information.</span></span>  
  
 <span data-ttu-id="f9efe-750">如果当前页呈现 （不是传输或从另一页的跨 post），直接请求的结果<xref:System.Web.UI.Page.PreviousPage%2A>属性包含`null`。</span><span class="sxs-lookup"><span data-stu-id="f9efe-750">If the current page is being rendered as a result of a direct request (not a transfer or cross-post from another page), the <xref:System.Web.UI.Page.PreviousPage%2A> property contains `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-751">下面的示例是在两个部分中。</span><span class="sxs-lookup"><span data-stu-id="f9efe-751">The following example is in two parts.</span></span> <span data-ttu-id="f9efe-752">第一种是 ASP.NET 页使用<xref:System.Web.HttpServerUtility.Transfer%2A>方法，在页面模型中作为公开`Server.Transfer("path")`。</span><span class="sxs-lookup"><span data-stu-id="f9efe-752">The first is an ASP.NET page that uses the <xref:System.Web.HttpServerUtility.Transfer%2A> method, exposed in the page model as `Server.Transfer("path")`.</span></span> <span data-ttu-id="f9efe-753">第二部分是目标页中，使用<xref:System.Web.UI.Page.PreviousPage%2A>属性来获取第一页的标题。</span><span class="sxs-lookup"><span data-stu-id="f9efe-753">The second part is the target page, which uses the <xref:System.Web.UI.Page.PreviousPage%2A> property to get the title of the first page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.PreviousPage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/CS/Main.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.PreviousPage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/VB/Main.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.Page.PreviousPage#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/CS/Notify.aspx#2)]
 [!code-aspx-vb[System.Web.UI.Page.PreviousPage#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/VB/Notify.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-754">不允许当前用户访问上一页。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-754">The current user is not allowed to access the previous page.</span>
          </span>
          <span data-ttu-id="f9efe-755">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-755">-or-</span>
          </span>
          <span data-ttu-id="f9efe-756">ASP.NET 路由正在使用，并且前一页的 URL 是路由的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-756">ASP.NET routing is in use and the previous page's URL is a routed URL.</span>
          </span>
          <span data-ttu-id="f9efe-757">当 ASP.NET 检查访问权限时，它假定该 URL 是一个文件的实际路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-757">When ASP.NET checks access permissions, it assumes that the URL is an actual path to a file.</span>
          </span>
          <span data-ttu-id="f9efe-758">因为这与使用路由的 URL 时情况不同，该检查将失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-758">Because this is not the case with a routed URL, the check fails.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f9efe-759">一个 <see cref="T:System.Web.HttpContext" /> 对象，它提供对用于为 HTTP 请求提供服务的内部服务器对象（如 <see cref="P:System.Web.HttpContext.Request" />、<see cref="P:System.Web.HttpContext.Response" />、<see cref="P:System.Web.HttpContext.Session" />）的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-759">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, and <see cref="P:System.Web.HttpContext.Session" />) used to service HTTP requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-760">设置 <see cref="T:System.Web.UI.Page" /> 对象的内部服务器对象，如 <see cref="P:System.Web.UI.Page.Context" />、<see cref="P:System.Web.UI.Page.Request" />、<see cref="P:System.Web.UI.Page.Response" /> 和 <see cref="P:System.Web.UI.Page.Application" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-760">Sets the intrinsic server objects of the <see cref="T:System.Web.UI.Page" /> object, such as the <see cref="P:System.Web.UI.Page.Context" />, <see cref="P:System.Web.UI.Page.Request" />, <see cref="P:System.Web.UI.Page.Response" />, and <see cref="P:System.Web.UI.Page.Application" /> properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-761">不应调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-761">You should not call this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Context" />
        <altmember cref="P:System.Web.UI.Page.Request" />
        <altmember cref="P:System.Web.UI.Page.Response" />
        <altmember cref="P:System.Web.UI.Page.Application" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(class System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (sourceControl As IPostBackEventHandler, eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::Web::UI::IPostBackEventHandler ^ sourceControl, System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControl" Type="System.Web.UI.IPostBackEventHandler" />
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceControl">
          <span data-ttu-id="f9efe-762">引起回发的 ASP.NET 服务器控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-762">The ASP.NET server control that caused the postback.</span>
          </span>
          <span data-ttu-id="f9efe-763">该控件必须实现 <see cref="T:System.Web.UI.IPostBackEventHandler" /> 接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-763">This control must implement the <see cref="T:System.Web.UI.IPostBackEventHandler" /> interface.</span>
          </span>
        </param>
        <param name="eventArgument">
          <span data-ttu-id="f9efe-764">回发参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-764">The postback argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-765">通知引起回发的服务器控件：它应处理传入的回发事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-765">Notifies the server control that caused the postback that it should handle an incoming postback event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-766"><xref:System.Web.UI.Page>对象调用<xref:System.Web.UI.Page.RaisePostBackEvent%2A>方法时产生的回发。</span><span class="sxs-lookup"><span data-stu-id="f9efe-766">The <xref:System.Web.UI.Page> object calls the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method when a postback occurs.</span></span> <span data-ttu-id="f9efe-767">加载和更改通知都已完成之后但尚未预呈现发生之前，此调用是在页的生命周期中。</span><span class="sxs-lookup"><span data-stu-id="f9efe-767">This call occurs in the page life cycle after loading and change notification are complete but before prerendering occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-768">下面的示例使用<xref:System.Web.UI.Page.RaisePostBackEvent%2A>方法通知 ASP.NET 自定义时，是否会引发的回发事件`userButton`服务器控件被单击。</span><span class="sxs-lookup"><span data-stu-id="f9efe-768">The following example uses the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method to notify ASP.NET that a post-back event is raised when a custom `userButton` server control is clicked.</span></span>  
  
 [!code-csharp[Page_RaisePostBackEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RaisePostBackEvent/CS/page_raisepostbackevent.cs.aspx#1)]
 [!code-vb[Page_RaisePostBackEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RaisePostBackEvent/VB/page_raisepostbackevent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterArrayDeclaration(string arrayName, string arrayValue). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName">
          <span data-ttu-id="f9efe-769">要在其中声明该值的数组的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-769">The name of the array in which to declare the value.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="f9efe-770">要放置在数组中的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-770">The value to place in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-771">声明一个值，该值在页呈现时声明为 ECMAScript 数组声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-771">Declares a value that is declared as an ECMAScript array declaration when the page is rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-772">此方法可以由基于脚本的控件，用于在数组内声明本身，以便客户端脚本库可以使用的相同类型的所有控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-772">This method can be used by script-based controls to declare themselves within an array so that a client script library can work with all the controls of the same type.</span></span>  
  
 <span data-ttu-id="f9efe-773"><xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> 方法已弃用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-773">The <xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> method has been deprecated.</span></span> <span data-ttu-id="f9efe-774">使用<xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>中的方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-774">Use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-775">下面的代码示例使用<xref:System.Web.UI.Page.RegisterArrayDeclaration%2A>方法来声明一个数组， `myArray`，包含名为的三个对象`x`， `y`，和`z`。</span><span class="sxs-lookup"><span data-stu-id="f9efe-775">The following code example uses the <xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> method to declare an array, `myArray`, that contains three objects named `x`, `y`, and `z`.</span></span> <span data-ttu-id="f9efe-776">该示例定义并注册一个启动脚本使用<xref:System.Web.UI.Page.RegisterStartupScript%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-776">The example defines and registers a startup script using the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="f9efe-777">当 ECMAScript`doClick`从页面，其中包含此代码调用函数、 数组和其对象进行初始化。</span><span class="sxs-lookup"><span data-stu-id="f9efe-777">When the ECMAScript `doClick` function is called from the page that contains this code, the array and its objects are initialized.</span></span>  
  
 [!code-csharp[Page_RegisterArrayDeclaration#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterArrayDeclaration/CS/page_registerarraydeclaration.cs.aspx#1)]
 [!code-vb[Page_RegisterArrayDeclaration#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterArrayDeclaration/VB/page_registerarraydeclaration.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAsyncTask">
      <MemberSignature Language="C#" Value="public void RegisterAsyncTask (System.Web.UI.PageAsyncTask task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterAsyncTask(class System.Web.UI.PageAsyncTask task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterAsyncTask (task As PageAsyncTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterAsyncTask(System::Web::UI::PageAsyncTask ^ task);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Web.UI.PageAsyncTask" />
      </Parameters>
      <Docs>
        <param name="task">
          <span data-ttu-id="f9efe-778">一个定义异步任务的 <see cref="T:System.Web.UI.PageAsyncTask" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-778">A <see cref="T:System.Web.UI.PageAsyncTask" /> that defines the asynchronous task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-779">向页注册新的异步任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-779">Registers a new asynchronous task with the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-780">异步任务使用定义<xref:System.Web.UI.PageAsyncTask>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-780">Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class.</span></span> <span data-ttu-id="f9efe-781">当定义任务时，使用<xref:System.Web.UI.Page.RegisterAsyncTask%2A>方法替换为页注册任务。</span><span class="sxs-lookup"><span data-stu-id="f9efe-781">When the task is defined, use the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method to register the task with the page.</span></span> <span data-ttu-id="f9efe-782">注册任务之后, 调用<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>方法，以开始异步任务。</span><span class="sxs-lookup"><span data-stu-id="f9efe-782">After registering the task, invoke the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method to begin the asynchronous task.</span></span>  
  
 <span data-ttu-id="f9efe-783"><xref:System.Web.UI.Page.RegisterAsyncTask%2A>方法可用于同步和异步页。</span><span class="sxs-lookup"><span data-stu-id="f9efe-783">The <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method can be used with both synchronous and asynchronous pages.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-784">下面的代码示例演示如何将<xref:System.Web.UI.Page.AsyncTimeout%2A>具有属性<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>和<xref:System.Web.UI.Page.RegisterAsyncTask%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-784">The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods.</span></span> <span data-ttu-id="f9efe-785">请注意开始、 结束和超时的处理程序的使用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-785">Note the use of beginning, ending, and time-out handlers.</span></span> <span data-ttu-id="f9efe-786">在示例中，引入了人工延迟以演示超出分配的时间内中指定的任务的异步任务的情况下<xref:System.Web.UI.Page.AsyncTimeout%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-786">In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property.</span></span> <span data-ttu-id="f9efe-787">在实际方案中，一个异步任务无法用于执行数据库调用或图像生成，例如，和超时处理程序提供合适的委托，如果不在指定的时间内执行任务。</span><span class="sxs-lookup"><span data-stu-id="f9efe-787">In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.cs#2)]
 [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9efe-788">异步任务为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-788">The asynchronous task is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.ExecuteRegisteredAsyncTasks" />
        <altmember cref="T:System.Web.UI.PageAsyncTask" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public virtual void RegisterClientScriptBlock (string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterClientScriptBlock(string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterClientScriptBlock (key As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterClientScriptBlock(System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterClientScriptBlock(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9efe-789">标识脚本块的唯一键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-789">Unique key that identifies a script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="f9efe-790">发送到客户端的脚本的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-790">Content of script that is sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-791">向响应发出客户端脚本块。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-791">Emits client-side script blocks to the response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-792">客户端脚本的开始标记之后，将发出<xref:System.Web.UI.Page>对象的`<form runat= server>`元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-792">The client-side script is emitted just after the opening tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element.</span></span> <span data-ttu-id="f9efe-793">请务必包括打开和关闭`<script>`元素周围的脚本块中指定的字符串`script`参数。</span><span class="sxs-lookup"><span data-stu-id="f9efe-793">Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter.</span></span>  
  
 <span data-ttu-id="f9efe-794">因为此方法使用密钥来标识脚本块，则不需要发送到输出流请求的其他服务器控件实例每次脚本块。</span><span class="sxs-lookup"><span data-stu-id="f9efe-794">Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance.</span></span> <span data-ttu-id="f9efe-795">使用密钥也减少了不同的控件的脚本块相互干扰的可能性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-795">Using a key also decreases the likelihood of different controls' script blocks interfering with each other.</span></span>  
  
 <span data-ttu-id="f9efe-796">任何脚本块具有相同`key`参数值被视为重复项。</span><span class="sxs-lookup"><span data-stu-id="f9efe-796">Any script blocks with the same `key` parameter values are considered duplicates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9efe-797">请记住包括解决你的脚本的 HTML 注释标记，以便它将不会呈现请求浏览器不支持脚本。</span><span class="sxs-lookup"><span data-stu-id="f9efe-797">Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.</span></span>  
  
 <span data-ttu-id="f9efe-798"><xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> 方法已弃用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-798">The <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method has been deprecated.</span></span> <span data-ttu-id="f9efe-799">请改用 <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> 类中的 <xref:System.Web.UI.ClientScriptManager> 方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-799">Use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-800">下面的代码示例演示如何将<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>方法结合<xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-800">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="f9efe-801">如果代码声明块中的 ECMAScript 不已注册，所确定的那样<xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>、<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>进行调用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-801">If the ECMAScript in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public virtual void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName">
          <span data-ttu-id="f9efe-802">要呈现的隐藏字段的唯一名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-802">The unique name of the hidden field to be rendered.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="f9efe-803">要以隐藏形式发出的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-803">The value to be emitted in the hidden form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-804">使服务器控件能够在窗体上自动注册隐藏字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-804">Allows server controls to automatically register a hidden field on the form.</span>
          </span>
          <span data-ttu-id="f9efe-805">呈现 <see cref="T:System.Web.UI.Page" /> 服务器控件时，将该字段发送到 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-805">The field will be sent to the <see cref="T:System.Web.UI.Page" /> object when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> server control is rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-806"><xref:System.Web.UI.Page.RegisterHiddenField%2A> 方法已弃用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-806">The <xref:System.Web.UI.Page.RegisterHiddenField%2A> method has been deprecated.</span></span> <span data-ttu-id="f9efe-807">使用<xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>中的方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-807">Use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-808">下面的代码示例使用<xref:System.Web.UI.Page.RegisterHiddenField%2A>方法，可帮助创建 ECMAScript 代码传递到请求的浏览器。</span><span class="sxs-lookup"><span data-stu-id="f9efe-808">The following code example uses the <xref:System.Web.UI.Page.RegisterHiddenField%2A> method to help create ECMAScript code that is passed to the requesting browser.</span></span> <span data-ttu-id="f9efe-809">隐藏字段的名称设置为`myHiddenField`和其值设置为"欢迎使用 Microsoft ！"</span><span class="sxs-lookup"><span data-stu-id="f9efe-809">The name of the hidden field is set to `myHiddenField` and its value is set to "Welcome to Microsoft!"</span></span> <span data-ttu-id="f9efe-810"><xref:System.Web.UI.Page.RegisterStartupScript%2A>方法调用`myHiddenField`值当用户单击页面上的按钮。</span><span class="sxs-lookup"><span data-stu-id="f9efe-810">The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method calls the `myHiddenField` value when the user clicks a button on the page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9efe-811">此示例具有一个隐藏的字段，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="f9efe-811">This example has a hidden field, which is a potential security threat.</span></span> <span data-ttu-id="f9efe-812">默认情况下，你应验证隐藏字段的值，就像一个文本框的值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-812">By default, you should validate the value of a hidden field as you would the value of a text box.</span></span> <span data-ttu-id="f9efe-813">ASP.NET 网页验证用户输入不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-813">ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f9efe-814">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-814">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Page_RegisterHiddenField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterHiddenField/CS/page_registerhiddenfield.cs.aspx#1)]
 [!code-vb[Page_RegisterHiddenField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterHiddenField/VB/page_registerhiddenfield.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterOnSubmitStatement (key As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterOnSubmitStatement(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9efe-815">标识脚本块的唯一键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-815">Unique key that identifies a script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="f9efe-816">要发送到客户端的客户端脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-816">The client-side script to be sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-817">使页能够访问客户端 <see langword="OnSubmit" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-817">Allows a page to access the client <see langword="OnSubmit" /> event.</span>
          </span>
          <span data-ttu-id="f9efe-818">脚本应该是注册在其他地方的对客户端代码的函数调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-818">The script should be a function call to client code registered elsewhere.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-819"><xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> 方法已弃用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-819">The <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method has been deprecated.</span></span> <span data-ttu-id="f9efe-820">使用<xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>中的方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-820">Use the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-821">下面的代码示例演示如何使用<xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A>访问客户端提交按钮时响应的脚本。</span><span class="sxs-lookup"><span data-stu-id="f9efe-821">The following code example demonstrates using the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> to access a script that responds when a client-side Submit button is clicked.</span></span> <span data-ttu-id="f9efe-822">发生此事件时，客户端上执行的已注册的 ECMAScript 代码。</span><span class="sxs-lookup"><span data-stu-id="f9efe-822">When this event occurs, the registered ECMAScript code is executed on the client.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9efe-823">此示例具有一个隐藏的字段，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="f9efe-823">This example has a hidden field, which is a potential security threat.</span></span> <span data-ttu-id="f9efe-824">默认情况下，你应验证隐藏字段的值，就像一个文本框的值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-824">By default, you should validate the value of a hidden field as you would the value of a text box.</span></span> <span data-ttu-id="f9efe-825">ASP.NET 网页验证用户输入不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-825">ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f9efe-826">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-826">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Page_RegisterHiddenField#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterHiddenField/CS/page_registerhiddenfield.cs.aspx#2)]
 [!code-vb[Page_RegisterHiddenField#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterHiddenField/VB/page_registerhiddenfield.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterHiddenField(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresControlState">
      <MemberSignature Language="C#" Value="public void RegisterRequiresControlState (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterRequiresControlState(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterRequiresControlState(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f9efe-827">要注册的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-827">The control to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-828">将控件注册为具有持久性控件状态的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-828">Registers a control as one whose control state must be persisted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-829">使用控件状态的自定义服务器控件必须调用<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>方法对每个请求因为控件状态的注册将不会从请求到请求在回发事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-829">Custom server controls that use control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method on each request because registration for control state is not carried over from request to request during a postback event.</span></span> <span data-ttu-id="f9efe-830">建议在进行注册<xref:System.Web.UI.Control.Init>事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-830">It is recommended that registration occur in the <xref:System.Web.UI.Control.Init> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-831">下面的代码示例演示自定义服务器控件调用<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-831">The following code example shows a custom server control calling the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method.</span></span>  
  
 [!code-csharp[ControlState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlState/CS/controlstatecs.aspx#1)]
 [!code-vb[ControlState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlState/VB/controlstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9efe-832">要注册的控件为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-832">The control to register is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-833">
            <see cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" /> 方法只能在 <see cref="E:System.Web.UI.Control.PreRender" /> 事件期间或之前调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-833">The <see cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" /> method can be called only before or during the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresPostBack">
      <MemberSignature Language="C#" Value="public void RegisterRequiresPostBack (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterRequiresPostBack(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterRequiresPostBack(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f9efe-834">要注册的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-834">The control to be registered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-835">将控件注册为要求在页回发至服务器时进行回发处理的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-835">Registers a control as one that requires postback handling when the page is posted back to the server.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-836">要注册的控件必须实现<xref:System.Web.UI.IPostBackDataHandler>接口或<xref:System.Web.HttpException>引发。</span><span class="sxs-lookup"><span data-stu-id="f9efe-836">The control to be registered must implement the <xref:System.Web.UI.IPostBackDataHandler> interface or an <xref:System.Web.HttpException> is raised.</span></span> <span data-ttu-id="f9efe-837">在实现某一控件时<xref:System.Web.UI.IPostBackDataHandler>接口启用的回发数据处理和引发的任何帖子备份数据更改事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-837">When implemented by a control, the <xref:System.Web.UI.IPostBackDataHandler> interface enables handling of post back data and raising of any post back data changed events.</span></span> <span data-ttu-id="f9efe-838">服务器控件的事件模型的详细信息，请参阅[ASP.NET Web 窗体服务器控件事件模型](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-838">For more information on the server control event model, see [ASP.NET Web Forms Server Control Event Model](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).</span></span>  
  
 <span data-ttu-id="f9efe-839">使用页或之前注册控件`Page_PreRender`页生命周期事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-839">Register controls with the page at or before the `Page_PreRender` event of the page life cycle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-840">下面的代码示例使用<xref:System.Web.UI.Page.RegisterRequiresPostBack%2A>方法需要一个文本框控件， `myTextBox`、 必须回发才可以执行与此文本框关联的任何代码。</span><span class="sxs-lookup"><span data-stu-id="f9efe-840">The following code example uses the <xref:System.Web.UI.Page.RegisterRequiresPostBack%2A> method to require a text box control, `myTextBox`, to be posted back before any code associated with the text box can execute.</span></span> <span data-ttu-id="f9efe-841"><xref:System.Web.UI.WebControls.TextBox> 控件实现<xref:System.Web.UI.IPostBackDataHandler>接口。</span><span class="sxs-lookup"><span data-stu-id="f9efe-841"><xref:System.Web.UI.WebControls.TextBox> controls implement the <xref:System.Web.UI.IPostBackDataHandler> interface.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9efe-842">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="f9efe-842">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f9efe-843">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-843">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f9efe-844">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-844">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Page_RegisterRequiresPostBack#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterRequiresPostBack/CS/page_registerrequirespostback.cs.aspx#1)]
 [!code-vb[Page_RegisterRequiresPostBack#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterRequiresPostBack/VB/page_registerrequirespostback.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f9efe-845">要注册的控件不实现 <see cref="T:System.Web.UI.IPostBackDataHandler" /> 接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-845">The control to register does not implement the <see cref="T:System.Web.UI.IPostBackDataHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresRaiseEvent">
      <MemberSignature Language="C#" Value="public virtual void RegisterRequiresRaiseEvent (System.Web.UI.IPostBackEventHandler control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRequiresRaiseEvent(class System.Web.UI.IPostBackEventHandler control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterRequiresRaiseEvent (control As IPostBackEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRequiresRaiseEvent(System::Web::UI::IPostBackEventHandler ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.IPostBackEventHandler" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f9efe-846">要注册的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-846">The control to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-847">将 ASP.NET 服务器控件注册为需要在 <see cref="T:System.Web.UI.Page" /> 对象上处理控件时引发事件的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-847">Registers an ASP.NET server control as one requiring an event to be raised when the control is processed on the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-848">只有一台服务器控件可以注册每个页请求。</span><span class="sxs-lookup"><span data-stu-id="f9efe-848">Only one server control can be registered per page request.</span></span> <span data-ttu-id="f9efe-849"><xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A>时该控件不包括其控件 ID 的形式将数据发布，必须使用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-849">The <xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A> must be used when the control does not include its control ID in the form post data.</span></span> <span data-ttu-id="f9efe-850">此外，注册的控件必须实现<xref:System.Web.UI.IPostBackEventHandler>接口。</span><span class="sxs-lookup"><span data-stu-id="f9efe-850">Also, the control that is registered must implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-851">下面的代码示例使用<xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A>方法注册<xref:System.Web.UI.WebControls.Button>Web 服务器控件为需要引发事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-851">The following code example uses the <xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A> method to register a <xref:System.Web.UI.WebControls.Button> Web server control as requiring an event to be raised.</span></span> <span data-ttu-id="f9efe-852">注册第一个后<xref:System.Web.UI.WebControls.Button>控件，你可能会导致第二个<xref:System.Web.UI.WebControls.Button>要发布的第一个按钮的结果的代码中声明的控件 click 事件到页。</span><span class="sxs-lookup"><span data-stu-id="f9efe-852">After you have registered the first <xref:System.Web.UI.WebControls.Button> control, you can cause the second <xref:System.Web.UI.WebControls.Button> control declared in the code to post the results of the first button's click event to the page.</span></span>  
  
 [!code-csharp[Page_RaisePostBackEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RaisePostBackEvent/CS/page_raisepostbackevent.cs.aspx#1)]
 [!code-vb[Page_RaisePostBackEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RaisePostBackEvent/VB/page_raisepostbackevent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresViewStateEncryption">
      <MemberSignature Language="C#" Value="public void RegisterRequiresViewStateEncryption ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterRequiresViewStateEncryption() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterRequiresViewStateEncryption ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterRequiresViewStateEncryption();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-853">向页将控件注册为需要视图状态加密的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-853">Registers a control with the page as one requiring view-state encryption.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-854">如果你正在开发讨论与潜在敏感信息的自定义控件，调用<xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A>方法替换为页注册控件并确保视图状态，对控件进行加密。</span><span class="sxs-lookup"><span data-stu-id="f9efe-854">If you are developing a custom control that deals with potentially sensitive information, call the <xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A> method to register the control with the page and ensure view state for the control is encrypted.</span></span>  
  
 <span data-ttu-id="f9efe-855">如果将加密整个页面状态<xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>设置为<xref:System.Web.UI.ViewStateEncryptionMode.Auto>或<xref:System.Web.UI.ViewStateEncryptionMode.Always>。</span><span class="sxs-lookup"><span data-stu-id="f9efe-855">The entire page state will be encrypted if the <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> is set to <xref:System.Web.UI.ViewStateEncryptionMode.Auto> or <xref:System.Web.UI.ViewStateEncryptionMode.Always>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-856">下面的代码示例演示如何设置的视图状态加密模式<xref:System.Web.UI.Page>对象和通过的视图状态的请求加密<xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A>。</span><span class="sxs-lookup"><span data-stu-id="f9efe-856">The following code example demonstrates setting the view-state encryption mode for a <xref:System.Web.UI.Page> object and requesting encryption of the view state through <xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A>.</span></span> <span data-ttu-id="f9efe-857">在此示例中，从数据库检索客户信息时，将加密视图状态。</span><span class="sxs-lookup"><span data-stu-id="f9efe-857">In this example, view state will be encrypted when customer information is retrieved from a database.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ViewStateEncryptionMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateEncryptionMode/CS/encryptViewState.cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ViewStateEncryptionMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateEncryptionMode/VB/encryptViewState.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-858">必须在页生命周期中的页 <see langword="PreRender" /> 阶段之前或期间调用 <see cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-858">The <see cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" /> method must be called before or during the page <see langword="PreRender" /> phase in the page life cycle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.ViewStateEncryptionMode" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public virtual void RegisterStartupScript (string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterStartupScript(string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterStartupScript (key As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterStartupScript(System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterStartupScript(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f9efe-859">标识脚本块的唯一键。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-859">Unique key that identifies a script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="f9efe-860">要发送到客户端的脚本的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-860">Content of script that will be sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-861">在页响应中发出客户端脚本块。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-861">Emits a client-side script block in the page response.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-862">类似于<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>方法，<xref:System.Web.UI.Page.RegisterStartupScript%2A>方法发出的结束标记之前脚本<xref:System.Web.UI.Page>对象的`<form runat= server>`元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-862">Similar to the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method emits the script just before the closing tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element.</span></span> <span data-ttu-id="f9efe-863">请务必包括打开和关闭`<script>`元素周围的脚本块中指定的字符串`script`参数。</span><span class="sxs-lookup"><span data-stu-id="f9efe-863">Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter.</span></span>  
  
 <span data-ttu-id="f9efe-864">此方法使用密钥来标识脚本块，因为脚本块不必每次请求的其他服务器控件实例到输出流发出</span><span class="sxs-lookup"><span data-stu-id="f9efe-864">Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance</span></span>  
  
 <span data-ttu-id="f9efe-865">任何脚本块具有相同`key`参数值被视为重复项。</span><span class="sxs-lookup"><span data-stu-id="f9efe-865">Any script blocks with the same `key` parameter values are considered duplicates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9efe-866">请记住包括解决你的脚本的 HTML 注释标记，以便它将不会呈现请求浏览器不支持脚本。</span><span class="sxs-lookup"><span data-stu-id="f9efe-866">Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.</span></span>  
  
 <span data-ttu-id="f9efe-867"><xref:System.Web.UI.Page.RegisterStartupScript%2A> 方法已弃用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-867">The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method has been deprecated.</span></span> <span data-ttu-id="f9efe-868">请改用 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> 类中的 <xref:System.Web.UI.ClientScriptManager> 方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-868">Use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-869">下面的代码示例演示如何将<xref:System.Web.UI.Page.RegisterStartupScript%2A>方法结合<xref:System.Web.UI.Page.IsStartupScriptRegistered%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-869">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="f9efe-870">如果编写的代码声明块中 ECMAScript 不已注册，所确定的那样<xref:System.Web.UI.Page.IsStartupScriptRegistered%2A>方法，则<xref:System.Web.UI.Page.RegisterStartupScript%2A>进行调用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-870">If the ECMAScript written in the code declaration block has not already been registered, as determined by the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterViewStateHandler">
      <MemberSignature Language="C#" Value="public void RegisterViewStateHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterViewStateHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterViewStateHandler" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterViewStateHandler ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterViewStateHandler();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-871">如果调用，则保持页视图状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-871">Causes page view state to be persisted, if called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-872"><xref:System.Web.UI.Page.RegisterViewStateHandler%2A>方法将自动调用通过<xref:System.Web.UI.HtmlControls.HtmlForm>服务器控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-872">The <xref:System.Web.UI.Page.RegisterViewStateHandler%2A> method is automatically called through the <xref:System.Web.UI.HtmlControls.HtmlForm> server control.</span></span> <span data-ttu-id="f9efe-873">如果此方法不会被调用，则不会保留页面视图状态。</span><span class="sxs-lookup"><span data-stu-id="f9efe-873">If this method is not invoked, the page view state will not be persisted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9efe-874">通常情况下，仅<xref:System.Web.UI.HtmlControls.HtmlForm>页的服务器控件调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-874">Typically, only the <xref:System.Web.UI.HtmlControls.HtmlForm> server control for the page calls this method.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Page_RegisterViewStateHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterViewStateHandler/CS/page_registerviewstatehandler.cs#1)]
 [!code-vb[Page_RegisterViewStateHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterViewStateHandler/VB/page_registerviewstatehandler.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="f9efe-875">接收页内容的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-875">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the page content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-876">初始化 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象并调用 <see cref="T:System.Web.UI.Page" /> 的子控件进行呈现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-876">Initializes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and calls on the child controls of the <see cref="T:System.Web.UI.Page" /> to render.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-877"><xref:System.Web.UI.Page.Render%2A>方法负责创建的文本和发送到客户端浏览器的标记。</span><span class="sxs-lookup"><span data-stu-id="f9efe-877">The <xref:System.Web.UI.Page.Render%2A> method is responsible for creating the text and markup that is sent to the client browser.</span></span> <span data-ttu-id="f9efe-878">默认值<xref:System.Web.UI.Page.Render%2A>方法调用<xref:System.Web.UI.Control.RenderChildren%2A>要写入的文本和包含的页上的控件的标记。</span><span class="sxs-lookup"><span data-stu-id="f9efe-878">The default <xref:System.Web.UI.Page.Render%2A> method calls <xref:System.Web.UI.Control.RenderChildren%2A> to write the text and markup for the controls contained on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Web.HttpRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpRequest ^ Request { System::Web::HttpRequest ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-879">获取所请求的页面的 <see cref="T:System.Web.HttpRequest" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-879">Gets the <see cref="T:System.Web.HttpRequest" /> object for the requested page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-880">当前与该页关联的 <see cref="T:System.Web.HttpRequest" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-880">The current <see cref="T:System.Web.HttpRequest" /> associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-881"><xref:System.Web.HttpRequest> 对象包含当前 HTTP 请求的相关信息。</span><span class="sxs-lookup"><span data-stu-id="f9efe-881">The <xref:System.Web.HttpRequest> object contains information about the current HTTP request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-882">下面的示例演示如何获取<xref:System.Web.HttpRequest.Headers%2A>集合从<xref:System.Web.HttpRequest>对象，并将其写入到 ASP.NET 页。</span><span class="sxs-lookup"><span data-stu-id="f9efe-882">The following example demonstrates how to obtain the <xref:System.Web.HttpRequest.Headers%2A> collection from the <xref:System.Web.HttpRequest> object and write it to an ASP.NET page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f9efe-883">
            <see cref="T:System.Web.HttpRequest" /> 对象不可用时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-883">Occurs when the <see cref="T:System.Web.HttpRequest" /> object is not available.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequiresControlState">
      <MemberSignature Language="C#" Value="public bool RequiresControlState (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RequiresControlState(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RequiresControlState(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f9efe-884">用于检查控件状态要求的 <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-884">The <see cref="T:System.Web.UI.Control" /> to check for a control state requirement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-885">确定是否注册指定的 <see cref="T:System.Web.UI.Control" /> 对象以参与控件状态管理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-885">Determines whether the specified <see cref="T:System.Web.UI.Control" /> object is registered to participate in control state management.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-886">如果指定的 <see cref="T:System.Web.UI.Control" /> 需要控件状态，则为 <see langword="true" />；否则为 <see langword="false" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-886">
              <see langword="true" /> if the specified <see cref="T:System.Web.UI.Control" /> requires control state; otherwise, <see langword="false" /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-887">控件状态是组成关键需要函数; Web 服务器控件的视图状态数据的对象它包含在一个单独的对象从普通视图状态。</span><span class="sxs-lookup"><span data-stu-id="f9efe-887">Control state is an object composed of critical view-state data that Web server controls need to function; it is contained in a separate object from normal view state.</span></span>  
  
 <span data-ttu-id="f9efe-888">使用控件状态的自定义控件必须调用<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>之前保存控件状态的方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-888">Custom controls using control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method before saving control state.</span></span> <span data-ttu-id="f9efe-889">使用<xref:System.Web.UI.Page.RequiresControlState%2A>方法来检查注册为需要控件状态页上的控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-889">Use the <xref:System.Web.UI.Page.RequiresControlState%2A> method to check for controls that are registered with the page as requiring control state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" />
        <altmember cref="P:System.Web.UI.PageStatePersister.ControlState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Web.HttpResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpResponse ^ Response { System::Web::HttpResponse ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-890">获取与 <see cref="T:System.Web.UI.Page" /> 对象关联的 <see cref="T:System.Web.HttpResponse" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-890">Gets the <see cref="T:System.Web.HttpResponse" /> object associated with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
          <span data-ttu-id="f9efe-891">使用此对象，可以将 HTTP 响应数据发送到客户端，并包含此响应的相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-891">This object allows you to send HTTP response data to a client and contains information about that response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-892">当前与该页关联的 <see cref="T:System.Web.HttpResponse" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-892">The current <see cref="T:System.Web.HttpResponse" /> associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9efe-893">下面的代码示例演示如何创建一个 cookie 并将其添加到页面的 HTTP 输出使用<xref:System.Web.HttpResponse>对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-893">The following code example demonstrates creating a cookie and adding it to the page's HTTP output by using the <xref:System.Web.HttpResponse> object.</span></span>  
  
 [!code-csharp[Classic HttpResponse.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f9efe-894">
            <see cref="T:System.Web.HttpResponse" /> 对象不可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-894">The <see cref="T:System.Web.HttpResponse" /> object is not available.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="ResponseEncoding">
      <MemberSignature Language="C#" Value="public string ResponseEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ResponseEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-895">设置当前的 <see cref="T:System.Web.HttpResponse" /> 对象的编码语言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-895">Sets the encoding language for the current <see cref="T:System.Web.HttpResponse" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-896">包含当前的 <see cref="T:System.Web.HttpResponse" /> 的编码语言的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-896">A string that contains the encoding language for the current <see cref="T:System.Web.HttpResponse" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-897">在大多数情况下，不要在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-897">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f9efe-898">设置`ResponseEncoding`属性设为所需的.aspx 文件中使用该指令的值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-898">Set the `ResponseEncoding` attribute to the value you want using the  directive in the .aspx file.</span></span> <span data-ttu-id="f9efe-899">当请求页时，动态生成的类来设置属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-899">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteData">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteData RouteData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteData RouteData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.RouteData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RouteData As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteData ^ RouteData { System::Web::Routing::RouteData ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-900">获取当前 <see cref="P:System.Web.Routing.RequestContext.RouteData" /> 实例的 <see cref="T:System.Web.Routing.RequestContext" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-900">Gets the <see cref="P:System.Web.Routing.RequestContext.RouteData" /> value of the current <see cref="T:System.Web.Routing.RequestContext" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-901">当前 <see cref="P:System.Web.Routing.RequestContext.RouteData" /> 实例的 <see cref="T:System.Web.Routing.RequestContext" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-901">The <see cref="P:System.Web.Routing.RequestContext.RouteData" /> value of the current <see cref="T:System.Web.Routing.RequestContext" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-902">如果网页正在通过 ASP.NET 路由发出的请求的响应，此属性提供访问权限作为路由数据传递的 URL 参数值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-902">If a page is running in response to a request made through ASP.NET routing, this property provides access to the URL parameter values that were passed as route data.</span></span> <span data-ttu-id="f9efe-903">如果在响应而不是路由 URL 的物理 URL 运行页面，此属性是`null`。</span><span class="sxs-lookup"><span data-stu-id="f9efe-903">If the page runs in response to a physical URL instead of a route URL, this property is `null`.</span></span> <span data-ttu-id="f9efe-904">下面的示例演示如何提取名为 URL 参数的值`year`。</span><span class="sxs-lookup"><span data-stu-id="f9efe-904">The following example shows how to extract the value of a URL parameter that is named `year`.</span></span>  
  
```vb  
Dim year As Integer = Convert.ToInt32(Page.RouteData.Values("year"))  
```  
  
```csharp  
int year = Convert.ToInt32(Page.RouteData.Values["year"])  
```  
  
 <span data-ttu-id="f9efe-905">如果使用的 URL 模式定义路由`{locale}/{year}`域`contoso.com`，以及请求的 URL 是否`contoso.com/US/2010`，`year`将包含值"2010"时此代码运行。</span><span class="sxs-lookup"><span data-stu-id="f9efe-905">If the route is defined by using the URL pattern `{locale}/{year}` for the domain `contoso.com`, and if the requested URL is `contoso.com/US/2010`, `year` will contain the value "2010" when this code runs.</span></span>  
  
 <span data-ttu-id="f9efe-906">有关 ASP.NET 路由的详细信息，请参阅[ASP.NET 路由](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-906">For more information about ASP.NET routing, see [ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Routing.RequestContext.RouteData" />
      </Docs>
    </Member>
    <Member MemberName="SavePageStateToPersistenceMedium">
      <MemberSignature Language="C#" Value="protected internal virtual void SavePageStateToPersistenceMedium (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SavePageStateToPersistenceMedium(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SavePageStateToPersistenceMedium (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SavePageStateToPersistenceMedium(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="f9efe-907">要在其中存储视图状态信息的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-907">An <see cref="T:System.Object" /> in which to store the view-state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-908">保存页的所有视图状态信息和控件状态信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-908">Saves any view-state and control-state information for the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-909"><xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>方法使用<xref:System.Web.UI.PageStatePersister.Save%2A>方法<xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType>所引用对象<xref:System.Web.UI.Page.PageStatePersister%2A>属性来存储页的视图状态，以及控制状态信息。</span><span class="sxs-lookup"><span data-stu-id="f9efe-909">The <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method uses the <xref:System.Web.UI.PageStatePersister.Save%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to store view-state and control-state information for the page.</span></span>  
  
 <span data-ttu-id="f9efe-910">ASP.NET 包括两个子代的<xref:System.Web.UI.PageStatePersister>类，<xref:System.Web.UI.HiddenFieldPageStatePersister>将状态信息保存在 ASP.NET 页中包含的隐藏字段的类和<xref:System.Web.UI.SessionPageStatePersister>中保存状态的类<xref:System.Web.UI.Page.Session%2A>与关联的对象请求。</span><span class="sxs-lookup"><span data-stu-id="f9efe-910">ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request.</span></span> <span data-ttu-id="f9efe-911">请注意，当使用<xref:System.Web.UI.SessionPageStatePersister>类隐藏的视图状态字段仍呈现因为这用于确定回发。</span><span class="sxs-lookup"><span data-stu-id="f9efe-911">Note that when using the <xref:System.Web.UI.SessionPageStatePersister> class the hidden VIEWSTATE field is still rendered as this is used to determine post back.</span></span>  
  
 <span data-ttu-id="f9efe-912">若要将状态保存在你选择的位置，你应创建一个新的派生<xref:System.Web.UI.PageStatePersister>类，该类将保存并加载到持久性介质的所选的状态。</span><span class="sxs-lookup"><span data-stu-id="f9efe-912">To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice.</span></span> <span data-ttu-id="f9efe-913">有关创建新的示例<xref:System.Web.UI.PageStatePersister>对象，请参阅<xref:System.Web.UI.PageStatePersister>类。</span><span class="sxs-lookup"><span data-stu-id="f9efe-913">For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 <span data-ttu-id="f9efe-914">如果你使用的.NET Framework 版本 1.0 或 1.1，重写此方法，如果你想要保存<xref:System.Web.UI.Page>状态的隐藏字段之外的任何内容。</span><span class="sxs-lookup"><span data-stu-id="f9efe-914">If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to save the <xref:System.Web.UI.Page> state in anything other than a hidden field.</span></span> <span data-ttu-id="f9efe-915">如果你选择这样做，则还必须重写<xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-915">If you choose to do so, you must also override the <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.LoadPageStateFromPersistenceMedium" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="SaveStateComplete">
      <MemberSignature Language="C#" Value="public event EventHandler SaveStateComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SaveStateComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.SaveStateComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SaveStateComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SaveStateComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-916">在页已完成对页和页上控件的所有视图状态和控件状态信息的保存后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-916">Occurs after the page has completed saving all view state and control state information for the page and controls on the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-917">在网页上的控件的状态信息保存后<xref:System.Web.UI.Page.PreRenderComplete>事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-917">State information for controls on the Web page is saved after the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="f9efe-918"><xref:System.Web.UI.Page.SaveStateComplete>后的视图状态和页面的控件状态引发事件和页上的控件将保存到持久性介质中。</span><span class="sxs-lookup"><span data-stu-id="f9efe-918">The <xref:System.Web.UI.Page.SaveStateComplete> event is raised after the view state and control state of the page and controls on the page are saved to the persistence medium.</span></span>  
  
 <span data-ttu-id="f9efe-919">这是在请求浏览器中呈现页之前引发的最后一个事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-919">This is the last event raised before the page is rendered to the requesting browser.</span></span>  
  
 <span data-ttu-id="f9efe-920">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-920">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.InitComplete" />
        <altmember cref="E:System.Web.UI.Page.LoadComplete" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-921">获取 <see langword="Server" /> 对象，它是 <see cref="T:System.Web.HttpServerUtility" /> 类的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-921">Gets the <see langword="Server" /> object, which is an instance of the <see cref="T:System.Web.HttpServerUtility" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-922">当前与该页关联的 <see langword="Server" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-922">The current <see langword="Server" /> object associated with the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-923">此属性提供访问权限频繁使用<xref:System.Web.HttpServerUtility.HtmlEncode%2A>和<xref:System.Web.HttpServerUtility.MapPath%2A>方法，以及其他。</span><span class="sxs-lookup"><span data-stu-id="f9efe-923">This property provides access to the frequently used <xref:System.Web.HttpServerUtility.HtmlEncode%2A> and <xref:System.Web.HttpServerUtility.MapPath%2A> methods, among others.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-924">下面的代码示例演示如何通过使用从服务器访问的错误信息`Server`对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-924">The following code example demonstrates how to access error information from the server by using the `Server` object.</span></span> <span data-ttu-id="f9efe-925">具体而言，此示例获取所请求的 URL 从`Request`对象、 中的最新错误`Server`对象 (使用<xref:System.Web.HttpServerUtility.GetLastError%2A>方法)，并将这两个转换为客户端可以显示的字符串。</span><span class="sxs-lookup"><span data-stu-id="f9efe-925">In particular, the example gets the requested URL from the `Request` object, the most recent error from the `Server` object (using the <xref:System.Web.HttpServerUtility.GetLastError%2A> method) and converts them both to strings that can be displayed by the client.</span></span> <span data-ttu-id="f9efe-926">一次`message`变量写入到客户端，使用删除错误<xref:System.Web.HttpServerUtility.ClearError%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-926">Once the `message` variable is written to the client, the error is deleted using the <xref:System.Web.HttpServerUtility.ClearError%2A> method.</span></span>  
  
 [!code-csharp[System.Web.UI.Page_Error method#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Error method/CS/sourcecs.aspx#1)]
 [!code-vb[System.Web.UI.Page_Error method#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Error method/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpServerUtility" />
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Session" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-927">获取 ASP.NET 提供的当前 <see langword="Session" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-927">Gets the current <see langword="Session" /> object provided by ASP.NET.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-928">当前会话状态数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-928">The current session-state data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-929">此属性提供有关当前请求的会话的信息。</span><span class="sxs-lookup"><span data-stu-id="f9efe-929">This property provides information about the current request's session.</span></span> <span data-ttu-id="f9efe-930">A`Session`对象将保留为从 ASP.NET 应用程序中请求网页或文档的每个用户。</span><span class="sxs-lookup"><span data-stu-id="f9efe-930">A `Session` object is maintained for each user that requests a page or document from an ASP.NET application.</span></span> <span data-ttu-id="f9efe-931">变量存储在`Session`时用户将页面之间移动应用程序中，对象将不会被丢弃; 相反，这些变量将保留，只要用户访问你的应用程序中的页。</span><span class="sxs-lookup"><span data-stu-id="f9efe-931">Variables stored in the `Session` object are not discarded when the user moves from page to page in the application; instead, these variables persist as long as the user is accessing pages in your application.</span></span> <span data-ttu-id="f9efe-932">有关会话状态的详细信息，请参阅[ASP.NET 会话状态概述](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-932">For more information about session state, see [ASP.NET Session State Overview](http://msdn.microsoft.com/library/6d60d381-6521-4e1d-9089-da6464f2a9bc).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-933">下面的代码示例创建`GetStyle`函数，用于检索存储在 Web 窗体页的会话状态中的密钥并将其值转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="f9efe-933">The following code example creates a `GetStyle` function that retrieves a key stored in the session state of the Web Forms page and converts its value to a string.</span></span>  
  
 [!code-csharp[Page.Session_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page.Session_Samples1/CS/sessioncs.aspx#1)]
 [!code-vb[Page.Session_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page.Session_Samples1/VB/sessionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f9efe-934">将会话信息设置为 <see langword="null" /> 时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-934">Occurs when the session information is set to <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFocus">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-935">将浏览器焦点设置为指定控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-935">Sets the browser focus to the specified control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (string clientID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(string clientID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.SetFocus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus (clientID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::String ^ clientID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientID">
          <span data-ttu-id="f9efe-936">要将焦点设置到的控件的 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-936">The ID of the control to set focus to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-937">将浏览器焦点设置为具有指定标识符的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-937">Sets the browser focus to the control with the specified identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-938">使用<xref:System.Web.UI.Page.SetFocus%2A>方法，以使控件具有指定 ID 的字符串由浏览器显示的 Web 页面中的活动控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-938">Use the <xref:System.Web.UI.Page.SetFocus%2A> method to make the control with the specified ID string the active control in the Web page displayed by the browser.</span></span> <span data-ttu-id="f9efe-939"><xref:System.Web.UI.Page.SetFocus%2A>页已准备好进行呈现到中的客户端之前，必须调用方法<xref:System.Web.UI.Control.PreRender>事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-939">The <xref:System.Web.UI.Page.SetFocus%2A> method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9efe-940"><xref:System.Web.UI.Page.SetFocus%2A>方法将仅适用于浏览器支持 ECMAScript 1.3 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="f9efe-940">The <xref:System.Web.UI.Page.SetFocus%2A> method will work only on browsers supporting ECMAScript version 1.3 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-941">下面的代码示例将焦点设置到第二个文本框中，在网页上。</span><span class="sxs-lookup"><span data-stu-id="f9efe-941">The following code example sets the focus to the second text box on a Web page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9efe-942">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="f9efe-942">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f9efe-943">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-943">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f9efe-944">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-944">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[PageSetFocus#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageSetFocus/CS/setfocusbyidcs.aspx#1)]
 [!code-aspx-vb[PageSetFocus#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageSetFocus/VB/setfocusbyidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9efe-945">
            <paramref name="clientID" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-945">
              <paramref name="clientID" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-946">
            <see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> 在控件不是 Web 窗体页的一部分时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-946">
              <see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> is called when the control is not part of a Web Forms page.</span>
          </span>
          <span data-ttu-id="f9efe-947">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-947">\- or -</span>
          </span>
          <span data-ttu-id="f9efe-948">
            <see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> 是在 <see cref="E:System.Web.UI.Control.PreRender" /> 事件后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-948">
              <see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f9efe-949">要接收焦点的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-949">The control to receive focus.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-950">将浏览器焦点设置为指定控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-950">Sets the browser focus to the specified control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-951">使用<xref:System.Web.UI.Page.SetFocus%2A>方法来实现指定的控件的浏览器显示的网页上的活动控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-951">Use the <xref:System.Web.UI.Page.SetFocus%2A> method to make the specified control the active control on the Web page displayed by the browser.</span></span> <span data-ttu-id="f9efe-952"><xref:System.Web.UI.Page.SetFocus%2A>页已准备好进行呈现到中的客户端之前，必须调用方法<xref:System.Web.UI.Control.PreRender>事件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-952">The <xref:System.Web.UI.Page.SetFocus%2A> method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9efe-953"><xref:System.Web.UI.Page.SetFocus%2A>方法将仅适用于浏览器支持 ECMAScript 1.3 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="f9efe-953">The <xref:System.Web.UI.Page.SetFocus%2A> method will work only on browsers supporting ECMAScript version 1.3 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-954">下面的代码示例将焦点设置到第二个文本框中，在网页上。</span><span class="sxs-lookup"><span data-stu-id="f9efe-954">The following code example sets the focus to the second text box on a Web page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9efe-955">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="f9efe-955">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f9efe-956">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-956">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f9efe-957">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-957">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[PageSetFocus#2](~/samples/snippets/csharp/VS_Snippets_WebNet/PageSetFocus/CS/setfocusbycontrolcs.aspx#2)]
 [!code-aspx-vb[PageSetFocus#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageSetFocus/VB/setfocusbycontrolvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9efe-958">
            <paramref name="control" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-958">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-959">
            <see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> 在控件不是 Web 窗体页的一部分时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-959">
              <see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> is called when the control is not part of a Web Forms page.</span>
          </span>
          <span data-ttu-id="f9efe-960">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-960">\- or -</span>
          </span>
          <span data-ttu-id="f9efe-961">
            <see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> 是在 <see cref="E:System.Web.UI.Control.PreRender" /> 事件后调用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-961">
              <see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SkipFormActionValidation">
      <MemberSignature Language="C#" Value="public bool SkipFormActionValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipFormActionValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.SkipFormActionValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipFormActionValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipFormActionValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-962">获取或设置一个值，该值指示是否已对查询字符串字段进行验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-962">Gets or sets a value that indicates whether the query string value is validated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-963">如果应跳过查询字符串验证（不应验证查询字符串），则为 <see langword="true" />；如果将查询字符串作为普通发生，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-963">
              <see langword="true" /> if query string validation should be skipped (the query string should not be validated); otherwise, <see langword="false" /> if query string validation should take place as normal.</span>
          </span>
          <span data-ttu-id="f9efe-964">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-964">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartNavigation">
      <MemberSignature Language="C#" Value="public bool SmartNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SmartNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.SmartNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property SmartNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SmartNavigation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is Page.SetFocus and Page.MaintainScrollPositionOnPostBack. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-965">获取或设置指示是否启用了智能导航的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-965">Gets or sets a value indicating whether smart navigation is enabled.</span>
          </span>
          <span data-ttu-id="f9efe-966">此属性已弃用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-966">This property is deprecated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-967">如果已启用智能导航，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-967">
              <see langword="true" /> if smart navigation is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-968">在大多数情况下，不要在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-968">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f9efe-969">设置`SmartNavigation`属性设为`true`的指令的.aspx 文件中。</span><span class="sxs-lookup"><span data-stu-id="f9efe-969">Set the `SmartNavigation` attribute to `true` in the  directive in the .aspx file.</span></span> <span data-ttu-id="f9efe-970">当请求页时，动态生成的类将设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-970">When the page is requested, the dynamically generated class sets this property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9efe-971">在 ASP.NET 2.0 版中，<xref:System.Web.UI.Page.SmartNavigation%2A>属性已弃用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-971">In ASP.NET version 2.0, the <xref:System.Web.UI.Page.SmartNavigation%2A> property is deprecated.</span></span> <span data-ttu-id="f9efe-972">使用<xref:System.Web.UI.Page.SetFocus%2A>方法和<xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A>属性改为。</span><span class="sxs-lookup"><span data-stu-id="f9efe-972">Use the <xref:System.Web.UI.Page.SetFocus%2A> method and the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property instead.</span></span>  
  
 <span data-ttu-id="f9efe-973">当一个页面请求的 Microsoft Internet Explorer 5.5 浏览器中，或更高版本，智能导航增强了用户的体验的页通过执行以下：</span><span class="sxs-lookup"><span data-stu-id="f9efe-973">When a page is requested by Microsoft Internet Explorer 5.5 browser, or later, smart navigation enhances the user's experience of the page by performing the following:</span></span>  
  
-   <span data-ttu-id="f9efe-974">消除导致导航的闪烁。</span><span class="sxs-lookup"><span data-stu-id="f9efe-974">Eliminating the flash caused by navigation.</span></span>  
  
-   <span data-ttu-id="f9efe-975">在移动页时，请保持滚动位置。</span><span class="sxs-lookup"><span data-stu-id="f9efe-975">Persisting the scroll position when moving from page to page.</span></span>  
  
-   <span data-ttu-id="f9efe-976">导航之间保持元素焦点。</span><span class="sxs-lookup"><span data-stu-id="f9efe-976">Persisting element focus between navigations.</span></span>  
  
-   <span data-ttu-id="f9efe-977">保留页状态在浏览器的历史记录中仅最后一个。</span><span class="sxs-lookup"><span data-stu-id="f9efe-977">Retaining only the last page state in the browser's history.</span></span>  
  
 <span data-ttu-id="f9efe-978">具有需要频繁回发的 ASP.NET 页、 但是并不返回显著改变的可见内容，最好使用智能导航。</span><span class="sxs-lookup"><span data-stu-id="f9efe-978">Smart navigation is best used with ASP.NET pages that require frequent postbacks but with visual content that does not change dramatically on return.</span></span> <span data-ttu-id="f9efe-979">决定是否将此属性设置为时，请仔细考虑这一点`true`。</span><span class="sxs-lookup"><span data-stu-id="f9efe-979">Consider this carefully when deciding whether to set this property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Page.SetFocus" />
        <altmember cref="P:System.Web.UI.Page.MaintainScrollPositionOnPostBack" />
      </Docs>
    </Member>
    <Member MemberName="StyleSheetTheme">
      <MemberSignature Language="C#" Value="public virtual string StyleSheetTheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StyleSheetTheme" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.StyleSheetTheme" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StyleSheetTheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StyleSheetTheme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-980">获取或设置页面生命周期早期适用于页面的主题的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-980">Gets or sets the name of the theme that is applied to the page early in the page life cycle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-981">页面生命周期早期适用于页面的主题的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-981">The name of the theme that is applied to the page early in the page life cycle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-982">此属性不是指直接级联样式表 (CSS)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-982">This property does not refer directly to a cascading style sheet (CSS).</span></span> <span data-ttu-id="f9efe-983">属性包含 ASP.NET 主题，可以包括 CSS 文件中的名称。</span><span class="sxs-lookup"><span data-stu-id="f9efe-983">The property contains the name of an ASP.NET theme, which can  include CSS files within it.</span></span>  
  
 <span data-ttu-id="f9efe-984"><xref:System.Web.UI.Page.StyleSheetTheme%2A>属性指定在页面生命周期的早期应用于的页面主题的名称，而<xref:System.Web.UI.Page.Theme%2A>属性指定更高版本中页的生命周期应用于的页面主题的名称。</span><span class="sxs-lookup"><span data-stu-id="f9efe-984">The <xref:System.Web.UI.Page.StyleSheetTheme%2A> property specifies the name of a theme that is applied to a page early in the page life cycle, whereas the <xref:System.Web.UI.Page.Theme%2A> property specifies the name of a theme that is applied to a page later in the page life cycle.</span></span> <span data-ttu-id="f9efe-985">这意味着在页上的设置，优先于样式表主题中的设置。</span><span class="sxs-lookup"><span data-stu-id="f9efe-985">This means that settings on the page take precedence over settings in the style sheet theme.</span></span> <span data-ttu-id="f9efe-986">有关详细信息，请参阅[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-986">For more information, see [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
 <span data-ttu-id="f9efe-987">通常，在页面指令中或通过重写属性，可设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-987">You typically set a value for this property in the page directive or by overriding the property.</span></span> <span data-ttu-id="f9efe-988">有关信息，请参阅以下主题：</span><span class="sxs-lookup"><span data-stu-id="f9efe-988">For information, see the following topics:</span></span>  
  
-   [<span data-ttu-id="f9efe-989">如何： 将 ASP.NET 主题更改</span><span class="sxs-lookup"><span data-stu-id="f9efe-989">How to: Apply ASP.NET Themes</span></span>](http://msdn.microsoft.com/library/f9d72364-4d77-4b73-84be-7630dc63e0fe)  
  
-   <span data-ttu-id="f9efe-990">[如何： 以编程方式应用 ASP.NET 主题](http://msdn.microsoft.com/library/02eed7c3-01e8-4e20-8358-df47dbd4f148))</span><span class="sxs-lookup"><span data-stu-id="f9efe-990">[How to: Apply ASP.NET Themes Programmatically](http://msdn.microsoft.com/library/02eed7c3-01e8-4e20-8358-df47dbd4f148))</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-991">尝试在调用 <see cref="P:System.Web.UI.Page.StyleSheetTheme" /> 方法后设置 <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-991">An attempt was made to set the <see cref="P:System.Web.UI.Page.StyleSheetTheme" /> property after the <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> method was called.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9efe-992">
            <see cref="P:System.Web.UI.Page.StyleSheetTheme" /> 被设置为无效的主题名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-992">
              <see cref="P:System.Web.UI.Page.StyleSheetTheme" /> is set to an invalid theme name.</span>
          </span>
          <span data-ttu-id="f9efe-993">如果调用 <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> 方法借助的是属性 setter，则会引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-993">This exception is thrown when the <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> method is called, not by the property setter.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.Theme" />
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public virtual string Theme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Theme" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Theme" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Theme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Theme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-994">获取或设置页主题的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-994">Gets or sets the name of the page theme.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-995">页主题的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-995">The name of the page theme.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-996"><xref:System.Web.UI.Page.Theme%2A>属性设置为页面使用的主题的名称。</span><span class="sxs-lookup"><span data-stu-id="f9efe-996">The <xref:System.Web.UI.Page.Theme%2A> property sets the name of the theme used for the page.</span></span> <span data-ttu-id="f9efe-997">如果你想要优先于主题中的设置页上的设置，使用<xref:System.Web.UI.Page.StyleSheetTheme%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-997">If you want the settings on the page to take precedence over the settings in the theme, use the <xref:System.Web.UI.Page.StyleSheetTheme%2A> property.</span></span> <span data-ttu-id="f9efe-998">有关详细信息，请参阅[ASP.NET 主题和皮肤](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-998">For more information, see [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
 <span data-ttu-id="f9efe-999"><xref:System.Web.UI.Page.Theme%2A>属性必须之前设置<xref:System.Web.UI.Page.PreInit>事件; 设置<xref:System.Web.UI.Page.Theme%2A>属性后的<xref:System.Web.UI.Page.PreInit>事件将导致<xref:System.InvalidOperationException>异常。</span><span class="sxs-lookup"><span data-stu-id="f9efe-999">The <xref:System.Web.UI.Page.Theme%2A> property must be set prior to the <xref:System.Web.UI.Page.PreInit> event; setting the <xref:System.Web.UI.Page.Theme%2A> property after the <xref:System.Web.UI.Page.PreInit> event will cause an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="f9efe-1000">作为应用程序或全局主题必须存在指定的主题。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1000">The specified theme must exist as either an application or a global theme.</span></span> <span data-ttu-id="f9efe-1001">如果主题不存在，<xref:System.Web.HttpException>引发异常。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1001">If the theme does not exist, an <xref:System.Web.HttpException> exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-1002">下面的代码示例设置<xref:System.Web.UI.Page.Theme%2A>为名称的属性传递给查询字符串中。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1002">The following code example sets the <xref:System.Web.UI.Page.Theme%2A> property to a name passed in the query string.</span></span>  
  
 [!code-csharp[PageTheme#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageTheme/CS/pagethemecs.aspx#1)]
 [!code-vb[PageTheme#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageTheme/VB/pagethemevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-1003">尝试在 <see cref="P:System.Web.UI.Page.Theme" /> 已发生后设置 <see cref="E:System.Web.UI.Page.PreInit" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1003">An attempt was made to set <see cref="P:System.Web.UI.Page.Theme" /> after the <see cref="E:System.Web.UI.Page.PreInit" /> event has occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9efe-1004">
            <see cref="P:System.Web.UI.Page.Theme" /> 被设置为无效的主题名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1004">
              <see cref="P:System.Web.UI.Page.Theme" /> is set to an invalid theme name.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.Page.StyleSheetTheme" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1005">获取或设置该页标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1005">Gets or sets the title for the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1006">页的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1006">The title of the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1007">使用<xref:System.Web.UI.Page.Title%2A>属性在发送到请求的浏览器的 HTML 标头中设置页面标题。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1007">Use the <xref:System.Web.UI.Page.Title%2A> property to set the page title in the HTML header sent to the requesting browser.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9efe-1008">页面必须包含`head`具有属性的元素`runat="server"`，否则标题将不会呈现。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1008">The page must contain a `head` element that has the attribute `runat="server"`, otherwise the title will not render.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-1009">
            <see cref="P:System.Web.UI.Page.Title" /> 属性要求页上有标头控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1009">The <see cref="P:System.Web.UI.Page.Title" /> property requires a header control on the page.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTitle" />
      </Docs>
    </Member>
    <Member MemberName="Trace">
      <MemberSignature Language="C#" Value="public System.Web.TraceContext Trace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.TraceContext Trace" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Trace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Trace As TraceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceContext ^ Trace { System::Web::TraceContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.TraceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1010">为当前 Web 请求获取 <see cref="T:System.Web.TraceContext" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1010">Gets the <see cref="T:System.Web.TraceContext" /> object for the current Web request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1011">来自当前 Web 请求的 <see cref="T:System.Web.TraceContext" /> 对象的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1011">Data from the <see cref="T:System.Web.TraceContext" /> object for the current Web request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1012">跟踪跟踪，并显示有关 Web 请求的执行详细信息。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1012">Tracing tracks and presents the execution details about a Web request.</span></span> <span data-ttu-id="f9efe-1013">无法在呈现的页面中显示的跟踪数据，必须启用页面或应用程序级别的跟踪。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1013">For trace data to be visible in a rendered page, you must enable tracing at the page or application level.</span></span>  
  
 <span data-ttu-id="f9efe-1014">默认情况下，在页面上的跟踪功能被禁用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1014">Tracing on a page is disabled by default.</span></span> <span data-ttu-id="f9efe-1015">若要启用页跟踪，使用指令`<% @ Page trace="true" %>`。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1015">To enable tracing for a page, use the  directive `<% @ Page trace="true" %>`.</span></span> <span data-ttu-id="f9efe-1016">若要启用整个应用程序的跟踪，必须在应用程序的配置文件中，Web.config 文件中，驻留在应用程序的根目录下启用它。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1016">To enable tracing for an entire application, you must enable it in the application's configuration file, Web.config, which resides in the root directory of the application.</span></span> <span data-ttu-id="f9efe-1017">有关详细信息，请参阅[ASP.NET 跟踪概述](http://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1017">For more information, see [ASP.NET Tracing Overview](http://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-1018">下面的代码示例演示如何访问<xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=nameWithType>属性和<xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType>方法通过<xref:System.Web.UI.Page.Trace%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1018">The following code example demonstrates accessing the <xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=nameWithType> property and the <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> method through the <xref:System.Web.UI.Page.Trace%2A> property.</span></span> <span data-ttu-id="f9efe-1019">此代码调用<xref:System.Diagnostics.Trace.Write%2A>方法仅在跟踪过程中启用的<xref:System.Web.UI.Page>对象。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1019">This code calls the <xref:System.Diagnostics.Trace.Write%2A> method only when tracing is enabled for the <xref:System.Web.UI.Page> object.</span></span> <span data-ttu-id="f9efe-1020">如果未启用，此代码将不运行，从而帮助减少你的应用程序的开销。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1020">If it is not enabled, this code will not run, which can help reduce overhead for your application.</span></span>  
  
 [!code-csharp[System.Web.UI.Page.Trace#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Trace/CS/trace1cs.aspx#2)]
 [!code-vb[System.Web.UI.Page.Trace#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Trace/VB/trace1vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.TraceContext" />
      </Docs>
    </Member>
    <Member MemberName="TraceEnabled">
      <MemberSignature Language="C#" Value="public bool TraceEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.TraceEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1021">设置一个值，该值指示是否为 <see cref="T:System.Web.UI.Page" /> 对象启用跟踪。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1021">Sets a value indicating whether tracing is enabled for the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1022">如果为该页启用跟踪，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1022">
              <see langword="true" /> if tracing is enabled for the page; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9efe-1023">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1023">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1024">在大多数情况下，不要在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1024">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f9efe-1025">设置`Trace`属性设为`true`的指令的.aspx 文件中。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1025">Set the `Trace` attribute to `true` in the  directive in the .aspx file.</span></span> <span data-ttu-id="f9efe-1026">当请求页时，动态生成的类来设置属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1026">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Trace" />
        <altmember cref="P:System.Web.UI.Page.TraceModeValue" />
        <altmember cref="T:System.Web.TraceContext" />
      </Docs>
    </Member>
    <Member MemberName="TraceModeValue">
      <MemberSignature Language="C#" Value="public System.Web.TraceMode TraceModeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.TraceMode TraceModeValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.TraceModeValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceModeValue As TraceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceMode TraceModeValue { System::Web::TraceMode get(); void set(System::Web::TraceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.TraceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1027">设置跟踪语句在页中的显示模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1027">Sets the mode in which trace statements are displayed on the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1028">
            <see cref="T:System.Web.TraceMode" /> 枚举成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1028">One of the <see cref="T:System.Web.TraceMode" /> enumeration members.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1029">在大多数情况下，不要在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1029">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f9efe-1030">设置`TraceMode`的指令的.aspx 文件中的属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1030">Set the `TraceMode` attribute in the  directive in the .aspx file.</span></span> <span data-ttu-id="f9efe-1031">当请求页时，动态生成的类来设置属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1031">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Trace" />
        <altmember cref="P:System.Web.UI.Page.TraceEnabled" />
        <altmember cref="T:System.Web.TraceContext" />
      </Docs>
    </Member>
    <Member MemberName="TransactionMode">
      <MemberSignature Language="C#" Value="protected int TransactionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransactionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.TransactionMode" />
      <MemberSignature Language="VB.NET" Value="Protected Property TransactionMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int TransactionMode { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1032">设置该页的事务支持的级别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1032">Sets the level of transaction support for the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1033">表示 <see cref="T:System.EnterpriseServices.TransactionOption" /> 枚举成员之一的整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1033">An integer that represents one of the <see cref="T:System.EnterpriseServices.TransactionOption" /> enumeration members.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1034">在大多数情况下，不要在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1034">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="f9efe-1035">设置`Transaction`的指令的.aspx 文件中的属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1035">Set the `Transaction` attribute in the  directive in the .aspx file.</span></span> <span data-ttu-id="f9efe-1036">当请求页时，动态生成的类来设置属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1036">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryUpdateModel&lt;TModel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1037">使用来自值提供程序的值更新指定的模型实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1037">Updates the specified model instance using values from a value provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1038">在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1038">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryUpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool TryUpdateModel&lt;TModel&gt; (TModel model) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryUpdateModel&lt;class TModel&gt;(!!TModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.TryUpdateModel``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryUpdateModel(Of TModel As Class) (model As TModel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual bool TryUpdateModel(TModel model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">
          <span data-ttu-id="f9efe-1039">模型的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1039">The type of the model.</span>
          </span>
        </typeparam>
        <param name="model">
          <span data-ttu-id="f9efe-1040">模型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1040">The model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-1041">使用来自数据绑定控制的值更新指定的模型实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1041">Updates the specified model instance using values from the data-bound control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-1042">如果模型绑定成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1042">
              <see langword="true" /> if model binding is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1043">仅应由数据绑定控件的指定的方法中调用此方法`UpdateMethod`或`InsertMethod`属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1043">This method should only be called from a method that is specified by a data-bound control's `UpdateMethod` or `InsertMethod` property.</span></span>  
  
 <span data-ttu-id="f9efe-1044">在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1044">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool TryUpdateModel&lt;TModel&gt; (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryUpdateModel&lt;class TModel&gt;(!!TModel model, class System.Web.ModelBinding.IValueProvider valueProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryUpdateModel(Of TModel As Class) (model As TModel, valueProvider As IValueProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual bool TryUpdateModel(TModel model, System::Web::ModelBinding::IValueProvider ^ valueProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="valueProvider" Type="System.Web.ModelBinding.IValueProvider" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">
          <span data-ttu-id="f9efe-1045">模型的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1045">The type of the model.</span>
          </span>
        </typeparam>
        <param name="model">
          <span data-ttu-id="f9efe-1046">模型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1046">The model.</span>
          </span>
        </param>
        <param name="valueProvider">
          <span data-ttu-id="f9efe-1047">值提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1047">The value provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-1048">使用来自指定值提供程序的值更新模型实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1048">Updates the model instance using values from the specified value provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f9efe-1049">如果模型绑定成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1049">
              <see langword="true" /> if model binding is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1050">在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1050">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UICulture">
      <MemberSignature Language="C#" Value="public string UICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UICulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.UICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property UICulture As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UICulture { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1051">设置与页关联的 <see cref="T:System.Threading.Thread" /> 对象的用户界面 (UI) ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1051">Sets the user interface (UI) ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1052">用户界面 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1052">The UI ID.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1053">此属性是快捷方式<xref:System.Threading.Thread.CurrentThread%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1053">This property is a shortcut for the <xref:System.Threading.Thread.CurrentThread%2A> property.</span></span> <span data-ttu-id="f9efe-1054">区域性是线程的正在执行的属性</span><span class="sxs-lookup"><span data-stu-id="f9efe-1054">The culture is a property of the executing thread</span></span>  
  
 <span data-ttu-id="f9efe-1055">设置`UICulture`的指令的.aspx 文件中的属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1055">Set the `UICulture` attribute in the  directive in the .aspx file.</span></span> <span data-ttu-id="f9efe-1056">当请求页时，动态生成的类将设置此属性的值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1056">When the page is requested, the dynamically generated class sets the value of this property.</span></span> <span data-ttu-id="f9efe-1057">此外，还显式设置的值<xref:System.Web.UI.Page.UICulture%2A>属性中的的 Web.config 文件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1057">In addition, you can also explicitly set the value of the <xref:System.Web.UI.Page.UICulture%2A> property in the  of the Web.config file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.LCID" />
        <altmember cref="P:System.Web.UI.Page.Culture" />
      </Docs>
    </Member>
    <Member MemberName="UniqueFilePathSuffix">
      <MemberSignature Language="C#" Value="protected internal virtual string UniqueFilePathSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueFilePathSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.UniqueFilePathSuffix" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property UniqueFilePathSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::String ^ UniqueFilePathSuffix { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1058">获取要追加到用于缓存浏览器的文件路径的唯一后缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1058">Gets a unique suffix to append to the file path for caching browsers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1059">要追加到文件路径的唯一后缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1059">A unique suffix appended to the file path.</span>
          </span>
          <span data-ttu-id="f9efe-1060">默认值为“__ufps=”加上一个唯一的 6 位数字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1060">The default is "__ufps=" plus a unique 6-digit number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1061"><xref:System.Web.UI.Page.UniqueFilePathSuffix%2A>属性返回到的文件路径时所需的缓存浏览器末尾追加的字符串。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1061">The <xref:System.Web.UI.Page.UniqueFilePathSuffix%2A> property returns a string that is appended to the end of a file path when required for caching browsers.</span></span> <span data-ttu-id="f9efe-1062">此字符串用来标识与特定请求相关联的文件路径。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1062">The string is used to identify the file path associated with a specific request.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnobtrusiveValidationMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.UnobtrusiveValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UnobtrusiveValidationMode As UnobtrusiveValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UnobtrusiveValidationMode UnobtrusiveValidationMode { System::Web::UI::UnobtrusiveValidationMode get(); void set(System::Web::UI::UnobtrusiveValidationMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UnobtrusiveValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1063">获取或设置一个值，该值指示不显眼的 JavaScript 是否用于客户端验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1063">Gets or sets a value that indicates whether unobtrusive JavaScript is used for client-side validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1064">如果要使用入式 JavaScript，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1064">
              <see langword="true" /> if unobtrusive JavaScript is used; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterRequiresControlState">
      <MemberSignature Language="C#" Value="public void UnregisterRequiresControlState (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterRequiresControlState(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterRequiresControlState(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f9efe-1065">要停止其控件状态的持久性的 <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1065">The <see cref="T:System.Web.UI.Control" /> for which to stop persistence of control state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-1066">停止指定控件的控件状态的持久性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1066">Stops persistence of control state for the specified control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1067">使用控件状态的自定义服务器控件必须调用<xref:System.Web.UI.Page.RegisterRequiresControlState%2A>对每个请求之前保存的状态。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1067">Custom server controls that use control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> on each request during before the state is persisted.</span></span> <span data-ttu-id="f9efe-1068">控件状态的注册将不会从请求到请求在回发期间。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1068">Registration for control state is not carried over from request to request during a postback.</span></span> <span data-ttu-id="f9efe-1069">使用<xref:System.Web.UI.Page.UnregisterRequiresControlState%2A>方法，以确保控件状态不永久性的不再需要保留的回发的控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1069">Use the <xref:System.Web.UI.Page.UnregisterRequiresControlState%2A> method to ensure that control state is not persisted for controls that no longer need to be persisted for postback.</span></span>  
  
 <span data-ttu-id="f9efe-1070">在内部，<xref:System.Web.UI.Page.UnregisterRequiresControlState%2A>使用时，会调用方法<xref:System.Web.UI.Control.RemovedControl%2A>方法以从控件集合中移除的控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1070">Internally, the <xref:System.Web.UI.Page.UnregisterRequiresControlState%2A> method is invoked when using the <xref:System.Web.UI.Control.RemovedControl%2A> method to remove a control from a controls collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f9efe-1071">
            <see cref="T:System.Web.UI.Control" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1071">The <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateModel&lt;TModel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1072">使用来自值提供程序的值更新指定的模型实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1072">Updates the specified model instance using values from a value provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1073">在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1073">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual void UpdateModel&lt;TModel&gt; (TModel model) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateModel&lt;class TModel&gt;(!!TModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.UpdateModel``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateModel(Of TModel As Class) (model As TModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual void UpdateModel(TModel model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">
          <span data-ttu-id="f9efe-1074">模型的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1074">The type of the model.</span>
          </span>
        </typeparam>
        <param name="model">
          <span data-ttu-id="f9efe-1075">模型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1075">The model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-1076">使用来自数据绑定控制的值更新指定的模型实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1076">Updates the specified model instance using values from the data-bound control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1077">仅应由数据绑定控件的指定的方法中调用此方法`UpdateMethod`或`InsertMethod`属性。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1077">This method should only be called from a method that is specified by a data-bound control's `UpdateMethod` or `InsertMethod` property.</span></span>  
  
 <span data-ttu-id="f9efe-1078">在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1078">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual void UpdateModel&lt;TModel&gt; (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateModel&lt;class TModel&gt;(!!TModel model, class System.Web.ModelBinding.IValueProvider valueProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateModel(Of TModel As Class) (model As TModel, valueProvider As IValueProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual void UpdateModel(TModel model, System::Web::ModelBinding::IValueProvider ^ valueProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="valueProvider" Type="System.Web.ModelBinding.IValueProvider" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">
          <span data-ttu-id="f9efe-1079">模型的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1079">The type of the model.</span>
          </span>
        </typeparam>
        <param name="model">
          <span data-ttu-id="f9efe-1080">模型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1080">The model.</span>
          </span>
        </param>
        <param name="valueProvider">
          <span data-ttu-id="f9efe-1081">值提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1081">The value provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-1082">使用来自指定值提供程序的值更新指定的模型实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1082">Updates the specified model instance using values from a specified value provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1083">在 Web 窗体中使用模型绑定教程系列，请参阅[模型绑定和 Web 窗体](http://go.microsoft.com/fwlink/?LinkId=286117)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1083">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1084">获取有关发出页请求的用户的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1084">Gets information about the user making the page request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1085">表示发出页请求的用户的 <see cref="T:System.Security.Principal.IPrincipal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1085">An <see cref="T:System.Security.Principal.IPrincipal" /> that represents the user making the page request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1086"><xref:System.Security.Principal.IPrincipal>对象表示该用户的名义运行代码，它包括该用户的标识和它们属于任何角色的安全上下文。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1086">An <xref:System.Security.Principal.IPrincipal> object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 <span data-ttu-id="f9efe-1087">此属性使用<xref:System.Web.HttpContext>对象的<xref:System.Web.HttpContext.User%2A>属性以确定请求的来源位置。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1087">This property uses the <xref:System.Web.HttpContext> object's <xref:System.Web.HttpContext.User%2A> property to determine where the request originates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-1088">下面的代码示例使用<xref:System.Web.UI.Page.User%2A>属性设置为当前用户的访问身份验证和标识信息。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1088">The following code example uses the <xref:System.Web.UI.Page.User%2A> property to access authentication and identity information for the current user.</span></span> <span data-ttu-id="f9efe-1089">如果用户未通过身份验证，它将他们重定向到登录页。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1089">If the user is not authenticated, it redirects them to a login page.</span></span>  
  
 [!code-csharp[Page_User#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_User/CS/page_user.cs.aspx#1)]
 [!code-vb[Page_User#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_User/VB/page_user.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1090">指示该页上包含的所有验证控件验证指派给它们的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1090">Instructs any validation controls included on the page to validate their assigned information.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1091">指示该页上包含的所有验证控件验证指派给它们的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1091">Instructs any validation controls included on the page to validate their assigned information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1092">当用户单击具有所有 ASP.NET 服务器控件时，会调用此方法`CausesValidation`属性设置为`true`，这是默认设置。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1092">This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default.</span></span> <span data-ttu-id="f9efe-1093">其中包括<xref:System.Web.UI.WebControls.Button>， <xref:System.Web.UI.WebControls.ImageButton>，和<xref:System.Web.UI.WebControls.LinkButton>Web 服务器控件<xref:System.Web.UI.HtmlControls.HtmlInputButton>， <xref:System.Web.UI.HtmlControls.HtmlInputImage>，和<xref:System.Web.UI.HtmlControls.HtmlButton>HTML 服务器控件和控件，可以自动回发到服务器，如<xref:System.Web.UI.WebControls.TextBox>， <xref:System.Web.UI.WebControls.CheckBox>， <xref:System.Web.UI.WebControls.ListControl>，和<xref:System.Web.UI.WebControls.BulletedList>控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1093">These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls.</span></span>  
  
 <span data-ttu-id="f9efe-1094">若要禁用的任何页面上的按钮控件的验证，设置按钮控件的`CausesValidation`属性`false`。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1094">To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`.</span></span>  
  
 <span data-ttu-id="f9efe-1095">当调用此方法时，它将循环中包含的验证控件<xref:System.Web.UI.ValidatorCollection>与关联的对象<xref:System.Web.UI.Page.Validators%2A?displayProperty=nameWithType>属性并调用当前的验证组中每个验证控件的验证逻辑。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1095">When this method is invoked, it iterates through the validation controls contained in the <xref:System.Web.UI.ValidatorCollection> object associated with the <xref:System.Web.UI.Page.Validators%2A?displayProperty=nameWithType> property and invokes the validation logic for each validation control in the current validation group.</span></span> <span data-ttu-id="f9efe-1096">验证组取决于发布到服务器页的控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1096">The validation group is determined by the control that posted the page to the server.</span></span> <span data-ttu-id="f9efe-1097">如果未验证指定组，然后使用没有验证组。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1097">If no validation group is specified, then no validation group is used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9efe-1098">页验证的行为已更改。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1098">The behavior of page validation has changed.</span></span> <span data-ttu-id="f9efe-1099">在[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]，控件不再调用<xref:System.Web.UI.Page.Validate?displayProperty=nameWithType>方法; 它们使用<xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=nameWithType>方法相反。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1099">In [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)], controls no longer call the <xref:System.Web.UI.Page.Validate?displayProperty=nameWithType> method; they use the <xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="f9efe-1100">如果你使用<xref:System.Web.UI.Page.Validate?displayProperty=nameWithType>方法[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]页上，验证组将被忽略，并且所有控件进行都验证。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1100">If you use the <xref:System.Web.UI.Page.Validate?displayProperty=nameWithType> method on an [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] page, validation groups are ignored and all controls are validated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-1101">下面的代码示例调用<xref:System.Web.UI.Page.Validate%2A>定义了几个不同的验证组方案中页上的方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1101">The following code example calls the <xref:System.Web.UI.Page.Validate%2A> method on a page in a scenario with several different validation groups defined.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9efe-1102">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1102">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f9efe-1103">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1103">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f9efe-1104">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1104">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.Validate2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/cs/pagevalidatecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.Validate2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/vb/pagevalidatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f9efe-1105">
              <see cref="M:System.Web.UI.Page.Validate" />方法不由[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f9efe-1105">The <see cref="M:System.Web.UI.Page.Validate" /> method is not used by [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)].</span>
            </span>
            <span data-ttu-id="f9efe-1106">如果要使用[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]，重写<see cref="M:System.Web.UI.Page.Validate(System.String)" />方法可以更改页验证行为。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f9efe-1106">When you are using [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)], override the <see cref="M:System.Web.UI.Page.Validate(System.String)" /> method to change page validation behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate (string validationGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(string validationGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.Validate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate (validationGroup As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate(System::String ^ validationGroup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationGroup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validationGroup">
          <span data-ttu-id="f9efe-1107">要验证的控件的验证组名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1107">The validation group name of the controls to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-1108">指示指定验证组中的验证控件验证指派给它们的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1108">Instructs the validation controls in the specified validation group to validate their assigned information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1109">当用户单击具有所有 ASP.NET 服务器控件时，会调用此方法`CausesValidation`属性设置为`true`，这是默认设置。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1109">This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default.</span></span> <span data-ttu-id="f9efe-1110">其中包括<xref:System.Web.UI.WebControls.Button>， <xref:System.Web.UI.WebControls.ImageButton>，和<xref:System.Web.UI.WebControls.LinkButton>Web 服务器控件<xref:System.Web.UI.HtmlControls.HtmlInputButton>， <xref:System.Web.UI.HtmlControls.HtmlInputImage>，和<xref:System.Web.UI.HtmlControls.HtmlButton>HTML 服务器控件和控件，可以自动回发到服务器，如<xref:System.Web.UI.WebControls.TextBox>， <xref:System.Web.UI.WebControls.CheckBox>， <xref:System.Web.UI.WebControls.ListControl>，和<xref:System.Web.UI.WebControls.BulletedList>控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1110">These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls.</span></span>  
  
 <span data-ttu-id="f9efe-1111">若要禁用的任何页面上的按钮控件的验证，设置按钮控件的`CausesValidation`属性`false`。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1111">To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`.</span></span>  
  
 <span data-ttu-id="f9efe-1112"><xref:System.Web.UI.Page.Validate%2A>方法用于验证指定的验证组。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1112">The <xref:System.Web.UI.Page.Validate%2A> method validates the specified validation group.</span></span> <span data-ttu-id="f9efe-1113">在调用<xref:System.Web.UI.Page.Validate%2A>方法上的验证组中，<xref:System.Web.UI.Page.IsValid%2A>方法将返回`true`仅当指定的验证组和引发页后，可以发布到服务器的控件的验证组是否有效。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1113">After calling the <xref:System.Web.UI.Page.Validate%2A> method on a validation group, the <xref:System.Web.UI.Page.IsValid%2A> method will return `true` only if both the specified validation group and the validation group of the control that caused the page to be posted to the server are valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-1114">下面的代码示例调用<xref:System.Web.UI.Page.Validate%2A>定义了几个不同的验证组方案中页上的方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1114">The following code example calls the <xref:System.Web.UI.Page.Validate%2A> method on a page in a scenario with several different validation groups defined.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f9efe-1115">此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1115">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="f9efe-1116">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1116">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="f9efe-1117">有关详细信息，请参阅[脚本侵入概述](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1117">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.Validate2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/cs/pagevalidatecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.Validate2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/vb/pagevalidatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1118">获取或设置指示页面是否检查来自浏览器的客户端输入是否具有潜在危险值的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1118">Gets or sets a value that indicates whether the page checks client input from the browser for potentially dangerous values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1119">指示页面是否检查客户输入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1119">A value that indicates whether the page checks client input.</span>
          </span>
          <span data-ttu-id="f9efe-1120">默认值为 <see cref="F:System.Web.UI.ValidateRequestMode.Enabled" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1120">The default is <see cref="F:System.Web.UI.ValidateRequestMode.Enabled" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1121">值<xref:System.Web.UI.ValidateRequestMode.Inherit>中不使用<xref:System.Web.UI.Page>类，因为没有任何要从其继承。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1121">The value <xref:System.Web.UI.ValidateRequestMode.Inherit> is not used in the <xref:System.Web.UI.Page> class because there is nothing to inherit from.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Validators">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidatorCollection Validators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ValidatorCollection Validators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Validators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Validators As ValidatorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidatorCollection ^ Validators { System::Web::UI::ValidatorCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidatorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1122">获取请求的页上包含的全部验证控件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1122">Gets a collection of all validation controls contained on the requested page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1123">验证控件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1123">The collection of validation controls.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1124">你可以使用此属性来操作的方法和属性<xref:System.Web.UI.ValidatorCollection>关联与当前对象<xref:System.Web.UI.Page>实例。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1124">You can use this property to manipulate the methods and properties of the <xref:System.Web.UI.ValidatorCollection> object associated with the current <xref:System.Web.UI.Page> instance.</span></span> <span data-ttu-id="f9efe-1125">此集合包含页中包含的所有验证服务器控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1125">This collection contains all the validation server controls that are contained in a page.</span></span>  
  
 <span data-ttu-id="f9efe-1126">调用<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>方法会导致执行当前的验证组中每个验证服务器控件的验证逻辑。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1126">Calling the <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> method causes validation logic to be executed for each validation server control in the current validation group.</span></span> <span data-ttu-id="f9efe-1127">如果未通过的任何这些控件，<xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType>属性返回`false`。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1127">If any of these controls do not pass, the <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> property returns `false`.</span></span>  
  
 <span data-ttu-id="f9efe-1128">验证控件的详细信息，请参阅[ASP.NET 验证控件](http://msdn.microsoft.com/library/fa2aa14d-a461-492e-9a79-c990904613ef)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1128">For more information on validation controls, see [ASP.NET Validation Controls](http://msdn.microsoft.com/library/fa2aa14d-a461-492e-9a79-c990904613ef).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
      </Docs>
    </Member>
    <Member MemberName="VerifyRenderingInServerForm">
      <MemberSignature Language="C#" Value="public virtual void VerifyRenderingInServerForm (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VerifyRenderingInServerForm(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void VerifyRenderingInServerForm(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="f9efe-1129">必须位于 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件中的 ASP.NET 服务器控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1129">The ASP.NET server control that is required in the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f9efe-1130">确认在运行时为指定的 ASP.NET 服务器控件呈现 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1130">Confirms that an <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control is rendered for the specified ASP.NET server control at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1131">所需内的控件`<form runat=server>`标记可以调用此方法之前及其呈现，以便是否它们位于外部标记显示错误消息。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1131">Controls that are required to be inside `<form runat=server>` tags can call this method before they render so that an error message is shown if they are placed outside the tags.</span></span> <span data-ttu-id="f9efe-1132">控件的回发或依赖于已注册的脚本块应调用此方法的重写中<xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1132">Controls that post back or depend on registered script blocks should call this method in an override of the <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f9efe-1133">具有不同的方式呈现服务器窗体元素的页可以重写此方法引发在不同条件下的异常。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1133">Pages that have a different way of rendering the server form element can override this method to throw an exception under different conditions.</span></span>  
  
 <span data-ttu-id="f9efe-1134">如果没有包含在服务器控件的回发或使用客户端脚本将不起<xref:System.Web.UI.HtmlControls.HtmlForm>服务器控件 (<`form runat="server">`) 标记。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1134">Server controls that post back or use client-side script will not work if they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> server control (<`form runat="server">`) tags.</span></span> <span data-ttu-id="f9efe-1135">在呈现时没有包含在提供明确的错误消息时，这些控件可以调用此方法<xref:System.Web.UI.HtmlControls.HtmlForm>控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1135">These controls can call this method when they render to provide a clear error message when they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> control.</span></span>  
  
 <span data-ttu-id="f9efe-1136">当你开发的自定义服务器控件时，很常见，才能调用此方法重写时`Render`任何类型的输入标记的方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1136">When you develop a custom server control, it is common to call this method when you override the `Render` method for any kind of input tag.</span></span> <span data-ttu-id="f9efe-1137">这一点特别重要，如果输入的控件调用<xref:System.Web.UI.Page.GetPostBackEventReference%2A>，或如果它会发出客户端脚本。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1137">This is particularly important if the input control calls <xref:System.Web.UI.Page.GetPostBackEventReference%2A>, or if it emits client script.</span></span> <span data-ttu-id="f9efe-1138">复合服务器控件不需要进行此调用。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1138">A composite server control does not need to make this call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9efe-1139">下面的代码示例替代<xref:System.Web.UI.Page.Render%2A?displayProperty=nameWithType>自定义服务器控件的方法。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1139">The following code example overrides the <xref:System.Web.UI.Page.Render%2A?displayProperty=nameWithType> method of a custom server control.</span></span> <span data-ttu-id="f9efe-1140">当此控件将其内容写入到页上时，它会使用<xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A>方法以确保该控件会出现开始和结束标记之间<xref:System.Web.UI.HtmlControls.HtmlForm>控件。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1140">When this control writes its content to a page, it uses the <xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> method to make sure that the control appears between the opening and closing tags of an <xref:System.Web.UI.HtmlControls.HtmlForm> control.</span></span>  
  
 [!code-csharp[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_VerifyRenderingInServerForm/CS/testlinkbutton.cs#3)]
 [!code-vb[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_VerifyRenderingInServerForm/vb/testlinkbutton.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f9efe-1141">指定的服务器控件在运行时不包含在 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 服务器控件的开始和结束标记之间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1141">The specified server control is not contained between the opening and closing tags of the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> server control at run time.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f9efe-1142">要验证的控件为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1142">The control to verify is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ViewStateEncryptionMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ViewStateEncryptionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateEncryptionMode As ViewStateEncryptionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ViewStateEncryptionMode ViewStateEncryptionMode { System::Web::UI::ViewStateEncryptionMode get(); void set(System::Web::UI::ViewStateEncryptionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ViewStateEncryptionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1143">获取或设置视图状态的加密模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1143">Gets or sets the encryption mode of the view state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1144">
            <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1144">One of the <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> values.</span>
          </span>
          <span data-ttu-id="f9efe-1145">默认值为 <see cref="F:System.Web.UI.ViewStateEncryptionMode.Auto" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1145">The default value is <see cref="F:System.Web.UI.ViewStateEncryptionMode.Auto" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1146"><xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>属性不能在代码中设置。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1146">The <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> property cannot be set in code.</span></span> <span data-ttu-id="f9efe-1147">它只能设置在指令中或在 < 配置文件元素。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1147">It can only be set in the  directive or in the < element of the configuration file.</span></span> <span data-ttu-id="f9efe-1148">在指令的替代中的值设置，在配置文件中设置任何值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1148">Values set in the  directive override any values set in the configuration file.</span></span>  
  
 <span data-ttu-id="f9efe-1149">在指令中设置此属性的语法如下所示：</span><span class="sxs-lookup"><span data-stu-id="f9efe-1149">The syntax for setting this property in the  directive is as follows:</span></span>  
  
```vb  
<%@ Page Language="VB" ViewStateEncryptionMode="Always" %>  
```  
  
```csharp  
<%@ Page Language="C#" ViewStateEncryptionMode="Always" %>  
```  
  
 <span data-ttu-id="f9efe-1150">用于在配置文件中设置此属性的语法如下所示：</span><span class="sxs-lookup"><span data-stu-id="f9efe-1150">The syntax for setting this property in the configuration file is as follows:</span></span>  
  
```vb  
<system.web>  
  <pages viewStateEncryptionMode="Always" />  
</system.web>  
```  
  
```csharp  
<system.web>  
  <pages viewStateEncryptionMode="Always" />  
</system.web>  
```  
  
 <span data-ttu-id="f9efe-1151">自定义控件开发人员可能想要在保存潜在的敏感数据，若要在其控件中查看状态之前检查代码中的此属性的值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1151">Custom control developers may wish to check the value of this property in code before saving potentially sensitive data to view state in their control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f9efe-1152">设置的值不是 <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> 枚举的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1152">The value set is not a member of the <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f9efe-1153">仅可在页生命周期中的页 <see langword="PreRender" /> 阶段之前或期间设置 <see cref="P:System.Web.UI.Page.ViewStateEncryptionMode" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1153">The <see cref="P:System.Web.UI.Page.ViewStateEncryptionMode" /> property can be set only in or before the page <see langword="PreRender" /> phase in the page life cycle.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ViewStateEncryptionMode" />
      </Docs>
    </Member>
    <Member MemberName="ViewStateUserKey">
      <MemberSignature Language="C#" Value="public string ViewStateUserKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewStateUserKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ViewStateUserKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateUserKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewStateUserKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1154">将一个标识符分配给与当前页关联的视图状态变量中的单个用户。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1154">Assigns an identifier to an individual user in the view-state variable associated with the current page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1155">单个用户的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1155">The identifier for the individual user.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9efe-1156">设置<xref:System.Web.UI.Page.ViewStateUserKey%2A>属性可帮助你防止对你的应用程序免受恶意用户的攻击。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1156">Setting the <xref:System.Web.UI.Page.ViewStateUserKey%2A> property can help you prevent attacks on your application from malicious users.</span></span> <span data-ttu-id="f9efe-1157">通过允许你将标识符分配给单个用户的视图状态变量，以便它们不能使用变量来生成攻击执行此操作。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1157">It does this by allowing you to assign an identifier to the view-state variable for individual users so that they cannot use the variable to generate an attack.</span></span> <span data-ttu-id="f9efe-1158">有关 Web 攻击和有关你可以执行哪些操作来帮助防止它们的详细信息，请参阅[需要利用的 ASP.NET 内置功能受到保护，这一点 Web 攻击](http://go.microsoft.com/fwlink/?LinkId=163557)。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1158">For more information about Web attacks and about what you can do to help prevent them, see [Take Advantage of ASP.NET Built-in Features to Fend Off Web Attacks](http://go.microsoft.com/fwlink/?LinkId=163557).</span></span>  
  
 <span data-ttu-id="f9efe-1159">你可以为任何字符串值，设置此属性，如对用户的身份验证名称或<xref:System.Web.SessionState.HttpSessionState.SessionID%2A>值。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1159">You can set this property to any string value, such as the user's authenticated name or the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9efe-1160">你必须将此属性设置期间`Page_Init`的页处理阶段。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1160">You must set this property during the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="f9efe-1161">设置此属性在`Page_Load`阶段将引发异常。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1161">Setting this property during the `Page_Load` phase throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f9efe-1162">在页处理期间，对 <see cref="P:System.Web.UI.Page.ViewStateUserKey" /> 属性的访问太迟。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1162">The <see cref="P:System.Web.UI.Page.ViewStateUserKey" /> property was accessed too late during page processing.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f9efe-1163">获取或设置指示是否呈现 <see cref="T:System.Web.UI.Page" /> 对象的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1163">Gets or sets a value indicating whether the <see cref="T:System.Web.UI.Page" /> object is rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f9efe-1164">如果将呈现 <see cref="T:System.Web.UI.Page" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1164">
              <see langword="true" /> if the <see cref="T:System.Web.UI.Page" /> is to be rendered; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f9efe-1165">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f9efe-1165">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9efe-1166">下面的示例设置<xref:System.Web.UI.Page.Visible%2A>属性`false`隐藏所呈现的内容的页面。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1166">The following example sets the <xref:System.Web.UI.Page.Visible%2A> property to `false` to hide the rendered content of a page.</span></span> <span data-ttu-id="f9efe-1167">当第一次请求此页时，数据源填充，并在页中显示。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1167">When this page is first requested, a data source is populated and displayed in the page.</span></span> <span data-ttu-id="f9efe-1168">当用户单击按钮，`HideButton_Click`事件处理程序隐藏整个呈现页面的内容。</span><span class="sxs-lookup"><span data-stu-id="f9efe-1168">When a user clicks the button, the `HideButton_Click` event handler hides the entire rendered content of the page.</span></span>  
  
 [!code-csharp[Page_Visible#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_Visible/CS/page_visible.cs.aspx#1)]
 [!code-vb[Page_Visible#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_Visible/VB/page_visible.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.UI.TemplateControl" />
        <altmember cref="T:System.Web.UI.UserControl" />
      </Docs>
    </Member>
  </Members>
</Type>