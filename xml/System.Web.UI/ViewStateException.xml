<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ViewStateException.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a96557c46b0c067684a9680f548bb1037bc62c76.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a96557c46b0c067684a9680f548bb1037bc62c76</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ViewStateException">
          <source>Represents the exception that is thrown when the view state cannot be loaded or validated.</source>
          <target state="translated">表示当无法加载或验证视图状态时引发的异常。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ViewStateException">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If an exception occurs when the page loads the view-state information, the page creates a <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object and passes it as an inner exception within an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception.</source>
          <target state="translated">如果加载的页面的视图状态信息时，则会发生异常，则该页创建<ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>对象并将它传递作为内部异常中<ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph>异常。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception is re-thrown to be handled by the application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>异常被重新引发，由应用程序处理。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> class stores information about the exception in the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>类存储有关中的异常信息<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the request has permission to access the <ph id="ph1">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property, then the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains the values returned from the <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, and <ph id="ph8">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> properties; otherwise, the <ph id="ph9">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains a generic view-state error message.</source>
          <target state="translated">如果请求具有访问权限<ph id="ph1">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph>属性，则<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph>属性包含从返回的值<ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>， <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>，和<ph id="ph8">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph>属性：否则为<ph id="ph9">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph>属性包含一般的视图状态错误消息。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>A view-state exception can be the result of a Message Authentication Codes (MAC) validation error.</source>
          <target state="translated">视图状态异常可以是消息验证代码 (MAC) 验证错误的结果。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the page attribute <ph id="ph1">`enableViewStateMac`</ph> is set to <ph id="ph2">`true`</ph>, view-state information is encoded with a MAC identifier.</source>
          <target state="translated">如果页特性<ph id="ph1">`enableViewStateMac`</ph>设置为<ph id="ph2">`true`</ph>，查看状态信息使用 MAC 标识符进行编码。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>When the view-state information is posted back to the server, the page verifies the encoding to ensure that it has not been altered by the user.</source>
          <target state="translated">当视图状态信息回发到服务器时，该页会验证以确保它具有不被更改用户的编码。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the page cannot validate the MAC encoding on the view-state information, it will throw an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception with the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated">如果该页无法验证的视图状态信息的 MAC 编码，则会引发<ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>异常<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>作为内部异常的对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>For MAC validation to succeed, the view-state information must be hashed by the same key when it is sent and received.</source>
          <target state="translated">对于 MAC 验证成功，视图状态信息必须进行哈希处理由相同的密钥时发送和接收。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>Within a Web farm, the machine key on each server should be set to a common key.</source>
          <target state="translated">在网络场中，每个服务器上的计算机密钥应设置为公共密钥。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">下面的代码示例演示如何实现的方法，反序列化的 base64 编码字符串并返回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>属性设置的集合。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph>方法可能会引发<ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph>包含异常<ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>作为内部异常的对象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">该示例演示如何捕获<ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>异常和检索从属性<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">承载序列化对象数据的对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">关于来源和目标的上下文信息</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">用序列化数据初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>Gets a value indicating whether the client is currently connected to the server.</source>
          <target state="translated">获取一个值，该值指示客户端当前是否连接在服务器上。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client is still connected to the server; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果客户端仍连接在服务器上，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>This property returns the same value as calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> property.</source>
          <target state="translated">此属性返回相同的值调用<ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">下面的代码示例演示如何实现的方法，反序列化的 base64 编码字符串并返回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>属性设置的集合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph>方法可能会引发<ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph>包含异常<ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>作为内部异常的对象。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">该示例演示如何捕获<ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>异常和检索从属性<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Message">
          <source>Gets debugging information about the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">获取导致视图状态异常的 HTTP 请求的调试信息。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the formatted message with information about the exception.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含格式化消息以及有关异常的信息。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>If the request does not have permission to access the server variables, then this property returns a generic view-state error message.</source>
          <target state="translated">如果请求不包含服务器变量的访问权，则此属性返回一般的视图状态错误消息。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>If the request does have permission to access server variables, the <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains the values returned from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> properties.</source>
          <target state="translated">如果请求未包含服务器变量的访问权<ph id="ph1">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph>属性包含从返回的值<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>，和<ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Path">
          <source>Gets the path of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">获取导致视图状态异常的 HTTP 请求的路径。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the path from the request.</source>
          <target state="translated">包含请求的路径的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>This property returns the same value as the <ph id="ph1">`PATH_INFO`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">此属性返回相同的值<ph id="ph1">`PATH_INFO`</ph>变量中<ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>It returns the portion of the path after the host name.</source>
          <target state="translated">它返回后的主机名的路径的一部分。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>For example, in the URL <ph id="ph1">http://www.contoso.com/virdir/page.html</ph>, <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> would return /virdir/page.html.</source>
          <target state="translated">例如，在 URL 中<ph id="ph1">http://www.contoso.com/virdir/page.html</ph>，<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph>将返回 /virdir/page.html。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">下面的代码示例演示如何实现的方法，反序列化的 base64 编码字符串并返回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>属性设置的集合。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph>方法可能会引发<ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph>包含异常<ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>作为内部异常的对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">该示例演示如何捕获<ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>异常和检索从属性<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.PersistedState">
          <source>Gets the contents of the view-state string that, when read, caused the view-state exception.</source>
          <target state="translated">获取视图状态字符串的内容，读取它时导致了视图状态异常。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.PersistedState">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the view-state values that caused the view-state exception.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含导致视图状态异常的视图状态值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>Gets the URL of the page that linked to the page where the view-state exception occurred.</source>
          <target state="translated">获取页的 URL，该页链接到发生视图状态异常的页。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the HTTP referrer.</source>
          <target state="translated">包含 HTTP 链接的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>This property returns the same value as the <ph id="ph1">`HTTP_REFERER`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">此属性返回相同的值<ph id="ph1">`HTTP_REFERER`</ph>变量中<ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The value is an empty string ("") if no previous request linked to the page.</source>
          <target state="translated">值为空字符串 ("") 如果没有以前的请求链接到页。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">下面的代码示例演示如何实现的方法，反序列化的 base64 编码字符串并返回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>属性设置的集合。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph>方法可能会引发<ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph>包含异常<ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>作为内部异常的对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">该示例演示如何捕获<ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>异常和检索从属性<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>Gets the IP address of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">获取导致视图状态异常的 HTTP 请求的 IP 地址。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the remote IP address of the client.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含客户端的远程 IP 地址。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>This property returns the same value as the <ph id="ph1">`REMOTE_ADDR`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">此属性返回相同的值<ph id="ph1">`REMOTE_ADDR`</ph>变量中<ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>Gets the port number of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">获取导致视图状态异常的 HTTP 请求的端口号。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the remote port number.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含远程端口号。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>This property returns the same value as the <ph id="ph1">`REMOTE_PORT`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">此属性返回相同的值<ph id="ph1">`REMOTE_PORT`</ph>变量中<ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>Gets the browser type of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">获取导致视图状态异常的 HTTP 请求的浏览器类型。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the user agent, which is typically the browser type.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，其中包含用户代理（通常为浏览器类型）。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>This property returns the same value as the <ph id="ph1">`HTTP_USER_AGENT`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">此属性返回相同的值<ph id="ph1">`HTTP_USER_AGENT`</ph>变量中<ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">下面的代码示例演示如何实现的方法，反序列化的 base64 编码字符串并返回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>属性设置的集合。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph>方法可能会引发<ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph>包含异常<ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>作为内部异常的对象。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">该示例演示如何捕获<ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>异常和检索从属性<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>对象。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>