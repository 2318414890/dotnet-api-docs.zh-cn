<Type Name="IStyleSheet" FullName="System.Web.UI.IStyleSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="162981d160c029e33619534a5b670b7f89fafbee" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30607121" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStyleSheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStyleSheet" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IStyleSheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStyleSheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStyleSheet" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义某个类为支持样式规则的创建而必须实现的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 实现此接口的类可以用它来支持创建样式规则。  
  
 若要自定义级联样式表的创建和注册的方式，你必须创建实现此接口的类。  
  
 <xref:System.Web.UI.HtmlControls.HtmlHead>类实现由 ASP.NET 通过使用此接口<xref:System.Web.UI.Page.Header%2A>属性。  
  
> [!NOTE]
>  不支持添加或修改以编程方式异步回发期间的样式或样式规则。 当您将 AJAX 功能添加到 ASP.NET 网页时，异步回发而无需更新整个页面更新页面区域内。 有关详细信息，请参阅[Microsoft Ajax 概述](http://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.UI.Page.Header%2A>实现<xref:System.Web.UI.IStyleSheet>来演示如何以编程方式创建一个新的样式规则和注册自定义<xref:System.Web.UI.WebControls.Style>对象。  
  
 在此示例中，自定义的第一部分<xref:System.Web.UI.WebControls.Style>对象， `labelStyle`、 创建，然后注册为当前的位置 (URL)。 则`label1`标签调用<xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A>方法，以便`labelStyle`样式应用于`label1`标签。  
  
 该示例的第二个部分定义另一个自定义<xref:System.Web.UI.WebControls.Style>对象， `bodyStyle`，并设置其属性以创建新的样式规则。  
  
> [!NOTE]
>  此类主要面向开发人员想要创建的自定义实现。 此示例演示如何实现由.NET Framework 提供。  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/VB/istylesheetvb.aspx#1)]  
  
 下面是前面的示例中的 Web 页的代码隐藏文件。  
  
 [!code-csharp[System.Web.UI.IStyleSheet#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Style" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlHead" />
  </Docs>
  <Members>
    <Member MemberName="CreateStyleRule">
      <MemberSignature Language="C#" Value="public void CreateStyleRule (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver, string selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateStyleRule(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver, string selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.CreateStyleRule(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateStyleRule(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver, System::String ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
        <Parameter Name="selector" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="style">要添加到嵌入式样式表中的样式规则。</param>
        <param name="urlResolver">一个实现了 <see cref="T:System.Web.UI.IUrlResolutionService" /> 的对象，它包含当前位置 (URL) 的上下文信息。</param>
        <param name="selector">HTML 页中受到样式影响的部分。</param>
        <summary>由类实现时，它为指定的文档语言元素类型或选择器创建样式规则。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A>方法创建指定的选择器的样式规则。 为相同的选择器，可以创建多个样式规则。  
  
 如果`urlResolver`设置为`null`，当前的 URL<xref:System.Web.UI.Page>使用实例。  
  
> [!NOTE]
>  不支持添加或修改以编程方式异步回发期间的样式或样式规则。 当您将 AJAX 功能添加到 ASP.NET 网页时，异步回发而无需更新整个页面更新页面区域内。 有关详细信息，请参阅[Microsoft Ajax 概述](http://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.UI.Page.Header%2A>实现<xref:System.Web.UI.IStyleSheet>来演示如何定义一个新<xref:System.Web.UI.WebControls.Style>对象， `bodyStyle`。 然后`bodyStyle`通过调用添加到当前 URL <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A>。  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/CS/istylesheetcreatestylerulecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/VB/istylesheetcreatestylerulevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="public void RegisterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterStyle(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.RegisterStyle(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
      </Parameters>
      <Docs>
        <param name="style">要添加到嵌入式样式表中的样式规则。</param>
        <param name="urlResolver">一个实现了 <see cref="T:System.Web.UI.IUrlResolutionService" /> 的对象，它包含当前位置 (URL) 的上下文信息。</param>
        <summary>由类实现时，它将新的样式规则添加至网页的 <see langword="&lt;head&gt;" /> 部分中的嵌入样式表。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法将添加新的样式规则和<xref:System.Web.UI.WebControls.Style.RegisteredCssClass%2A>到嵌入的样式表中的属性名称`<head>`部分<xref:System.Web.UI.Page>对象，并将规则与自动生成样式名称相关联。 <xref:System.Web.UI.WebControls.Style>呈现对象所使用指定`urlResolver`参数。  
  
 如果`urlResolver`设置为`null`，当前的 URL<xref:System.Web.UI.Page>使用。  
  
 如果<xref:System.Web.UI.WebControls.Style>已注册对象，将不会添加多个时间。  
  
> [!NOTE]
>  不支持添加或异步回发期间以编程方式修改样式。 当您将 AJAX 功能添加到 ASP.NET 网页时，异步回发而无需更新整个页面更新页面区域内。 有关详细信息，请参阅[Microsoft Ajax 概述](http://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)。  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Web.UI.Page.Header%2A>实现<xref:System.Web.UI.IStyleSheet>演示创建自定义<xref:System.Web.UI.WebControls.Style>对象， `labelStyle`，然后将它注册为当前的位置 (URL)。 则`label1`标签调用<xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A>方法，以便`labelStyle`样式应用于`label1`标签。  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/CS/istylesheetregisterstylecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/VB/istylesheetregisterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>