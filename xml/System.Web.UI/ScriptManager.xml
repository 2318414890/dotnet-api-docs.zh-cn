<Type Name="ScriptManager" FullName="System.Web.UI.ScriptManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9923660b999d64c484a67da8c88091d677e8639" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34317739" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ScriptManager : System.Web.UI.Control, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler, System.Web.UI.IScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ScriptManager extends System.Web.UI.Control implements class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.IScriptManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptManager&#xA;Inherits Control&#xA;Implements IPostBackDataHandler, IPostBackEventHandler, IScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptManager : System::Web::UI::Control, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler, System::Web::UI::IScriptManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IScriptManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Scripts")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.ScriptManagerDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.ScriptManager.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a6179-101">为 Web 和应用程序服务管理 ASP.NET Ajax 脚本库和脚本文件、局部页面呈现以及客户端代理类生成。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6179-101">Manages ASP.NET Ajax script libraries and script files, partial-page rendering, and client proxy class generation for Web and application services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-102">本主题内容：</span><span class="sxs-lookup"><span data-stu-id="a6179-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="a6179-103">介绍</span><span class="sxs-lookup"><span data-stu-id="a6179-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="a6179-104">局部页面呈现</span><span class="sxs-lookup"><span data-stu-id="a6179-104">Partial-Page Rendering</span></span>](#partial_page_rendering)  
  
-   [<span data-ttu-id="a6179-105">主控页、 用户控件，与其他子组件使用 ScriptManager 控件</span><span class="sxs-lookup"><span data-stu-id="a6179-105">Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components</span></span>](#using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components)  
  
-   [<span data-ttu-id="a6179-106">脚本管理和注册</span><span class="sxs-lookup"><span data-stu-id="a6179-106">Script Management and Registration</span></span>](#script_management_and_registration)  
  
-   [<span data-ttu-id="a6179-107">Web 服务引用</span><span class="sxs-lookup"><span data-stu-id="a6179-107">Web Service References</span></span>](#web_service_references)  
  
-   [<span data-ttu-id="a6179-108">本地化</span><span class="sxs-lookup"><span data-stu-id="a6179-108">Localization</span></span>](#localization)  
  
-   [<span data-ttu-id="a6179-109">错误处理</span><span class="sxs-lookup"><span data-stu-id="a6179-109">Error Handling</span></span>](#error_handling)  
  
-   [<span data-ttu-id="a6179-110">声明性语法</span><span class="sxs-lookup"><span data-stu-id="a6179-110">Declarative Syntax</span></span>](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="a6179-111">介绍</span><span class="sxs-lookup"><span data-stu-id="a6179-111">Introduction</span></span>  
 <span data-ttu-id="a6179-112"><xref:System.Web.UI.ScriptManager>控件是在 ASP.NET 中的 Ajax 功能的核心。</span><span class="sxs-lookup"><span data-stu-id="a6179-112">The <xref:System.Web.UI.ScriptManager> control is central to Ajax functionality in ASP.NET.</span></span> <span data-ttu-id="a6179-113">控件管理页面上的所有 ASP.NET Ajax 资源。</span><span class="sxs-lookup"><span data-stu-id="a6179-113">The control manages all ASP.NET Ajax resources on a page.</span></span> <span data-ttu-id="a6179-114">这包括将 Microsoft Ajax Library 脚本下载到浏览器和协调使用启用的部分页面更新<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-114">This includes downloading Microsoft Ajax Library scripts to the browser and coordinating partial-page updates that are enabled by using <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="a6179-115">此外，<xref:System.Web.UI.ScriptManager>控制，你可以执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="a6179-115">In addition, the <xref:System.Web.UI.ScriptManager> control enables you to do the following:</span></span>  
  
-   <span data-ttu-id="a6179-116">注册适用于部分页面更新的脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-116">Register script that is compatible with partial-page updates.</span></span> <span data-ttu-id="a6179-117">若要管理你的脚本和核心库之间的依赖关系，你注册任何脚本是在 Microsoft Ajax Library 脚本之后加载。</span><span class="sxs-lookup"><span data-stu-id="a6179-117">In order to manage dependencies between your script and the core library, any script that you register is loaded after the Microsoft Ajax Library script.</span></span>  
  
-   <span data-ttu-id="a6179-118">指定是否发布或调试脚本发送到浏览器。</span><span class="sxs-lookup"><span data-stu-id="a6179-118">Specify whether release or debug scripts are sent to the browser.</span></span>  
  
-   <span data-ttu-id="a6179-119">提供对 Web 服务方法中访问脚本通过注册 Web 服务用于<xref:System.Web.UI.ScriptManager>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-119">Provide access to Web service methods from script by registering Web services with the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
-   <span data-ttu-id="a6179-120">提供对 ASP.NET 身份验证、 角色和配置文件的访问，请从客户端脚本的应用程序服务通过注册这些服务用于<xref:System.Web.UI.ScriptManager>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-120">Provide access to ASP.NET authentication, role, and profile application services from client script by registering these services with the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
-   <span data-ttu-id="a6179-121">支持 ECMAScript (JavaScript)、 和浏览器中的函数的区域性特定的显示。</span><span class="sxs-lookup"><span data-stu-id="a6179-121">Enable culture-specific display of ECMAScript (JavaScript) , , and  functions in the browser.</span></span>  
  
-   <span data-ttu-id="a6179-122">通过使用访问嵌入的脚本文件或独立的脚本文件的本地化资源<xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A>属性<xref:System.Web.UI.ScriptReference>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-122">Access localization resources for embedded script files or for stand-alone script files by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> control.</span></span>  
  
-   <span data-ttu-id="a6179-123">注册实现的服务器控件<xref:System.Web.UI.IExtenderControl>或<xref:System.Web.UI.IScriptControl>接口与<xref:System.Web.UI.ScriptManager>控制，以便在呈现脚本所需的客户端组件和行为。</span><span class="sxs-lookup"><span data-stu-id="a6179-123">Register server controls that implement the <xref:System.Web.UI.IExtenderControl> or <xref:System.Web.UI.IScriptControl> interfaces with the <xref:System.Web.UI.ScriptManager> control so that script required by client components and behaviors is rendered.</span></span>  
  
<a name="partial_page_rendering"></a>   
## <a name="partial-page-rendering"></a><span data-ttu-id="a6179-124">局部页面呈现</span><span class="sxs-lookup"><span data-stu-id="a6179-124">Partial-Page Rendering</span></span>  
 <span data-ttu-id="a6179-125">ASP.NET 页能够支持局部页面呈现受以下因素：</span><span class="sxs-lookup"><span data-stu-id="a6179-125">The ability of an ASP.NET page to support partial-page rendering is controlled by the following factors:</span></span>  
  
-   <span data-ttu-id="a6179-126"><xref:System.Web.UI.ScriptManager>控件的<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>属性必须为`true`（默认值）。</span><span class="sxs-lookup"><span data-stu-id="a6179-126">The <xref:System.Web.UI.ScriptManager> control's <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property must be `true` (the default value).</span></span>  
  
-   <span data-ttu-id="a6179-127">必须有至少一个<xref:System.Web.UI.UpdatePanel>页上的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-127">There must be at least one <xref:System.Web.UI.UpdatePanel> control on the page.</span></span>  
  
-   <span data-ttu-id="a6179-128"><xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>属性必须为`true`（默认值）。</span><span class="sxs-lookup"><span data-stu-id="a6179-128">The <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property must be `true` (the default value).</span></span> <span data-ttu-id="a6179-129">如果<xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>未显式设置属性，其值基于浏览器功能。</span><span class="sxs-lookup"><span data-stu-id="a6179-129">If the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is not set explicitly, its value is based on browser capabilities.</span></span>  
  
 <span data-ttu-id="a6179-130">你可以重写的值<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>属性在运行时期间或之前已在页面的<xref:System.Web.UI.Control.Init>事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-130">You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event.</span></span> <span data-ttu-id="a6179-131">如果你尝试在该页面的后更改此属性<xref:System.Web.UI.Control.Init>事件已发生的<xref:System.InvalidOperationException>引发异常。</span><span class="sxs-lookup"><span data-stu-id="a6179-131">If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 <span data-ttu-id="a6179-132">当支持局部页面呈现时，<xref:System.Web.UI.ScriptManager>控件呈现脚本，以启用异步回发和局部页面更新。</span><span class="sxs-lookup"><span data-stu-id="a6179-132">When partial-page rendering is supported, the <xref:System.Web.UI.ScriptManager> control renders script to enable asynchronous postbacks and partial-page updates.</span></span> <span data-ttu-id="a6179-133">通过使用指定的页后，可以更新区域<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-133">The regions of the page to be updated are designated by using <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="a6179-134"><xref:System.Web.UI.ScriptManager>控制处理异步回发和刷新仅的区域的页必须进行更新。</span><span class="sxs-lookup"><span data-stu-id="a6179-134">The <xref:System.Web.UI.ScriptManager> control handles the asynchronous postbacks and refreshes only the regions of the page that have to be updated.</span></span> <span data-ttu-id="a6179-135">有关在局部页面呈现的详细信息，请参阅[局部页面呈现概述](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)。</span><span class="sxs-lookup"><span data-stu-id="a6179-135">For more information about partial-page rendering, see [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span> <span data-ttu-id="a6179-136">有关导致更新的条件的详细信息，请参阅[UpdatePanel 控件概述](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)。</span><span class="sxs-lookup"><span data-stu-id="a6179-136">For more information about the conditions that cause an update, see [UpdatePanel Control Overview](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a).</span></span>  
  
<a name="using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components"></a>   
## <a name="using-the-scriptmanager-control-with-master-pages-user-controls-and-other-child-components"></a><span data-ttu-id="a6179-137">主控页、 用户控件，与其他子组件使用 ScriptManager 控件</span><span class="sxs-lookup"><span data-stu-id="a6179-137">Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components</span></span>  
 <span data-ttu-id="a6179-138">一个页只能包含一个<xref:System.Web.UI.ScriptManager>其层次结构中的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-138">A page can contain only one <xref:System.Web.UI.ScriptManager> control in its hierarchy.</span></span> <span data-ttu-id="a6179-139">若要注册服务和嵌套的页、 用户控件或组件的脚本，如果父页已<xref:System.Web.UI.ScriptManager>控制，请使用<xref:System.Web.UI.ScriptManagerProxy>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-139">To register services and scripts for nested pages, user controls, or components when the parent page already has a <xref:System.Web.UI.ScriptManager> control, use the <xref:System.Web.UI.ScriptManagerProxy> control.</span></span> <span data-ttu-id="a6179-140">有关详细信息，请参阅[UpdatePanel 控件使用母版页](http://msdn.microsoft.com/library/b1c974d5-a6b2-4bb3-a3cc-61dd9dc0e1d6)</span><span class="sxs-lookup"><span data-stu-id="a6179-140">For more information, see [Using the UpdatePanel Control with Master Pages](http://msdn.microsoft.com/library/b1c974d5-a6b2-4bb3-a3cc-61dd9dc0e1d6)</span></span>  
  
<a name="script_management_and_registration"></a>   
## <a name="script-management-and-registration"></a><span data-ttu-id="a6179-141">脚本管理和注册</span><span class="sxs-lookup"><span data-stu-id="a6179-141">Script Management and Registration</span></span>  
 <span data-ttu-id="a6179-142"><xref:System.Web.UI.ScriptManager>控制，你可以将则呈现的脚本注册为页面的一部分。</span><span class="sxs-lookup"><span data-stu-id="a6179-142">The <xref:System.Web.UI.ScriptManager> control enables you to register script that is then rendered as part of the page.</span></span> <span data-ttu-id="a6179-143"><xref:System.Web.UI.ScriptManager>控件注册方法可以分为以下三个类别：</span><span class="sxs-lookup"><span data-stu-id="a6179-143">The <xref:System.Web.UI.ScriptManager> control registration methods can be broken into the following three categories:</span></span>  
  
-   <span data-ttu-id="a6179-144">确保维护脚本依赖 Microsoft Ajax 库的注册方法。</span><span class="sxs-lookup"><span data-stu-id="a6179-144">Registration methods that guarantee that script dependencies on the Microsoft Ajax Library are maintained.</span></span>  
  
-   <span data-ttu-id="a6179-145">注册方法不依赖于 Microsoft Ajax 库中，但与兼容<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-145">Registration methods that are not dependent on the Microsoft Ajax Library, but that are compatible with <xref:System.Web.UI.UpdatePanel> controls.</span></span>  
  
-   <span data-ttu-id="a6179-146">注册方法，支持使用<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-146">Registration methods that support working with <xref:System.Web.UI.UpdatePanel> controls.</span></span>  
  
 <span data-ttu-id="a6179-147">有关如何创建和用于在 ASP.NET Ajax 脚本的详细信息，请参阅[是通过使用 Microsoft Ajax 库中创建自定义客户端脚本](http://msdn.microsoft.com/library/285e3a65-b42e-42c5-952d-baf184057899)。</span><span class="sxs-lookup"><span data-stu-id="a6179-147">For more information about how to create and use Ajax script in ASP.NET, see [Creating Custom Client Script by Using the Microsoft Ajax Library](http://msdn.microsoft.com/library/285e3a65-b42e-42c5-952d-baf184057899).</span></span>  
  
### <a name="registering-script-that-is-dependent-on-the-microsoft-ajax-library"></a><span data-ttu-id="a6179-148">注册依赖于 Microsoft Ajax 库的脚本</span><span class="sxs-lookup"><span data-stu-id="a6179-148">Registering Script That Is Dependent on the Microsoft Ajax Library</span></span>  
 <span data-ttu-id="a6179-149">你可以使用以下方法可保证维护 Microsoft Ajax 库的任何依赖的方式注册脚本文件。</span><span class="sxs-lookup"><span data-stu-id="a6179-149">You can use the following methods to register script files in a way that guarantees that any dependencies on the Microsoft Ajax Library are maintained.</span></span>  
  
|<span data-ttu-id="a6179-150">方法</span><span class="sxs-lookup"><span data-stu-id="a6179-150">Method</span></span>|<span data-ttu-id="a6179-151">定义</span><span class="sxs-lookup"><span data-stu-id="a6179-151">Definition</span></span>|  
|------------|----------------|  
|<xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A>|<span data-ttu-id="a6179-152">注册一个实现的服务器控件<xref:System.Web.UI.IScriptControl>用于定义客户端对象的接口。</span><span class="sxs-lookup"><span data-stu-id="a6179-152">Registers a server control that implements the <xref:System.Web.UI.IScriptControl> interface that is used to define a  client object.</span></span> <span data-ttu-id="a6179-153"><xref:System.Web.UI.ScriptManager>控件呈现支持客户端对象的脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-153">The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A>|<span data-ttu-id="a6179-154">注册一个实现的服务器控件<xref:System.Web.UI.IExtenderControl>用于定义客户端对象的接口。</span><span class="sxs-lookup"><span data-stu-id="a6179-154">Registers a server control that implements the <xref:System.Web.UI.IExtenderControl> interface that is used to define a  client object.</span></span> <span data-ttu-id="a6179-155"><xref:System.Web.UI.ScriptManager>控件呈现支持客户端对象的脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-155">The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.</span></span>|  
  
### <a name="registering-partial-page-update-compatible-scripts"></a><span data-ttu-id="a6179-156">注册局部页面的更新兼容脚本</span><span class="sxs-lookup"><span data-stu-id="a6179-156">Registering Partial-Page Update Compatible Scripts</span></span>  
 <span data-ttu-id="a6179-157">你可以使用以下方法来注册脚本文件不依赖于 Microsoft Ajax Library 但与兼容<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-157">You can use the following methods to register script files that are not dependent on the Microsoft Ajax Library but that are compatible with <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="a6179-158">这些方法对应于的类似方法<xref:System.Web.UI.ClientScriptManager>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-158">These methods correspond to similar methods of the <xref:System.Web.UI.ClientScriptManager> control.</span></span> <span data-ttu-id="a6179-159">如果你是在内部使用的呈现脚本<xref:System.Web.UI.UpdatePanel>控制，请确保调用的方法的<xref:System.Web.UI.ScriptManager>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-159">If you are rendering script for use inside an <xref:System.Web.UI.UpdatePanel> control, make sure that you call the methods of the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
|<span data-ttu-id="a6179-160">方法</span><span class="sxs-lookup"><span data-stu-id="a6179-160">Method</span></span>|<span data-ttu-id="a6179-161">定义</span><span class="sxs-lookup"><span data-stu-id="a6179-161">Definition</span></span>|  
|------------|----------------|  
|<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>|<span data-ttu-id="a6179-162">将值添加到 JavaScript 数组。</span><span class="sxs-lookup"><span data-stu-id="a6179-162">Adds a value to a JavaScript array.</span></span> <span data-ttu-id="a6179-163">如果数组不存在，则创建它。</span><span class="sxs-lookup"><span data-stu-id="a6179-163">If the array does not exist, it is created.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>|<span data-ttu-id="a6179-164">呈现`script`页打开之后的元素`<form>`标记。</span><span class="sxs-lookup"><span data-stu-id="a6179-164">Renders a `script` element after the page's opening `<form>` tag.</span></span> <span data-ttu-id="a6179-165">作为字符串参数指定了脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-165">The script is specified as a string parameter.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>|<span data-ttu-id="a6179-166">呈现`script`页打开之后的元素`<form>`标记。</span><span class="sxs-lookup"><span data-stu-id="a6179-166">Renders a `script` element after the page's opening `<form>` tag.</span></span> <span data-ttu-id="a6179-167">通过将设置指定的脚本内容`src`属性设为指向脚本文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="a6179-167">The script content is specified by setting the `src` attribute to a URL that points to a script file.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>|<span data-ttu-id="a6179-168">呈现`script`页打开之后的元素`<form>`标记。</span><span class="sxs-lookup"><span data-stu-id="a6179-168">Renders a `script` element after the page's opening `<form>` tag.</span></span> <span data-ttu-id="a6179-169">脚本内容指定的程序集中的资源名称。</span><span class="sxs-lookup"><span data-stu-id="a6179-169">The script content is specified with a resource name in an assembly.</span></span> <span data-ttu-id="a6179-170">`src`属性会自动填充的 URL 通过从程序集中检索命名的脚本的 HTTP 处理程序调用。</span><span class="sxs-lookup"><span data-stu-id="a6179-170">The `src` attribute is automatically populated with a URL by a call to an HTTP handler that retrieves the named script from the assembly.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>|<span data-ttu-id="a6179-171">呈现自定义的名称/值特性对 (expando) 指定的控件的标记中。</span><span class="sxs-lookup"><span data-stu-id="a6179-171">Renders a custom name/value attribute pair (an expando) in the markup for a specified control.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>|<span data-ttu-id="a6179-172">呈现的隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="a6179-172">Renders a hidden field.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>|<span data-ttu-id="a6179-173">注册一个脚本在响应中执行的脚本`form`元素的`submit`事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-173">Registers a script that is executed in response to the `form` element's `submit` event.</span></span> <span data-ttu-id="a6179-174">`onSubmit`属性引用指定的脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-174">The `onSubmit` attribute references the specified script.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>|<span data-ttu-id="a6179-175">呈现一个启动脚本块之前页面的右`</form>`标记。</span><span class="sxs-lookup"><span data-stu-id="a6179-175">Renders a startup script block just before the page's closing `</form>` tag.</span></span> <span data-ttu-id="a6179-176">要呈现的脚本被指定为字符串参数。</span><span class="sxs-lookup"><span data-stu-id="a6179-176">The script to render is specified as a string parameter.</span></span>|  
  
 <span data-ttu-id="a6179-177">当你注册方法时，你指定用于该脚本的类型/密钥对。</span><span class="sxs-lookup"><span data-stu-id="a6179-177">When you register methods, you specify a type/key pair for that script.</span></span> <span data-ttu-id="a6179-178">如果已注册具有相同的类型/密钥对的脚本，则未注册的新脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-178">If a script with the same type/key pair is already registered, a new script is not registered.</span></span> <span data-ttu-id="a6179-179">同样，如果已注册的脚本的类型/资源名称对存在，`script`引用该资源的元素不会再次添加。</span><span class="sxs-lookup"><span data-stu-id="a6179-179">Similarly, if you register a script with a type/resource name pair that already exists, the `script` element that references the resource is not added again.</span></span> <span data-ttu-id="a6179-180">当你注册 expando 属性的一个以前注册的属性时，会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a6179-180">When you register an expando attribute of a previously registered attribute, an exception is thrown.</span></span> <span data-ttu-id="a6179-181">允许的数组值重复的注册。</span><span class="sxs-lookup"><span data-stu-id="a6179-181">Duplicate registration of array values is allowed.</span></span>  
  
 <span data-ttu-id="a6179-182">当调用<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>或<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>方法，避免注册执行内联函数的脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-182">When you call the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> or the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method, avoid registering script that executes inline functions.</span></span> <span data-ttu-id="a6179-183">相反，应注册脚本，其中包含如事件处理程序的函数定义或自定义类定义你的应用程序。</span><span class="sxs-lookup"><span data-stu-id="a6179-183">Instead, register script that contains function definitions like event handlers or custom class definitions for your application.</span></span>  
  
### <a name="registration-methods-for-updatepanel-controls"></a><span data-ttu-id="a6179-184">UpdatePanel 控件的注册方法</span><span class="sxs-lookup"><span data-stu-id="a6179-184">Registration Methods for UpdatePanel Controls</span></span>  
 <span data-ttu-id="a6179-185">你可以使用以下方法以自定义部分页面更新，当你使用<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-185">You can use the following methods to customize partial-page updates when you use <xref:System.Web.UI.UpdatePanel> controls.</span></span>  
  
|<span data-ttu-id="a6179-186">方法</span><span class="sxs-lookup"><span data-stu-id="a6179-186">Method</span></span>|<span data-ttu-id="a6179-187">定义</span><span class="sxs-lookup"><span data-stu-id="a6179-187">Definition</span></span>|  
|------------|----------------|  
|<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>|<span data-ttu-id="a6179-188">将控件注册为异步回发的触发器。</span><span class="sxs-lookup"><span data-stu-id="a6179-188">Registers a control as a trigger for asynchronous postbacks.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>|<span data-ttu-id="a6179-189">在局部页面呈现期间将自定义数据发送到多个控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-189">Sends custom data to controls during partial-page rendering.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>|<span data-ttu-id="a6179-190">注册控件中的 dispose 脚本<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-190">Registers a dispose script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="a6179-191">在更新或删除 <xref:System.Web.UI.UpdatePanel> 控件时会执行脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-191">The script is executed when the <xref:System.Web.UI.UpdatePanel> control is updated or deleted.</span></span> <span data-ttu-id="a6179-192">Dispose 方法用于客户端组件，是 Microsoft Ajax 库的一部分且必须在不再使用组件时释放资源。</span><span class="sxs-lookup"><span data-stu-id="a6179-192">The dispose method is used for client components that are part of the Microsoft Ajax Library and that have to free resources when a component is no longer used.</span></span>|  
|<xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A>|<span data-ttu-id="a6179-193">将控件注册为完整的回发的触发器。</span><span class="sxs-lookup"><span data-stu-id="a6179-193">Registers a control as a trigger for a full postback.</span></span> <span data-ttu-id="a6179-194">此方法用于内的控件<xref:System.Web.UI.UpdatePanel>将执行异步回发的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-194">This method is used for controls inside an <xref:System.Web.UI.UpdatePanel> control that would otherwise perform asynchronous postbacks.</span></span>|  
  
<a name="web_service_references"></a>   
## <a name="web-service-references"></a><span data-ttu-id="a6179-195">Web 服务引用</span><span class="sxs-lookup"><span data-stu-id="a6179-195">Web Service References</span></span>  
 <span data-ttu-id="a6179-196">你可以注册 Web 服务以从客户端脚本中调用通过创建<xref:System.Web.UI.ServiceReference>对象并将其添加到<xref:System.Web.UI.ScriptManager.Services%2A>集合<xref:System.Web.UI.ScriptManager>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-196">You can register a Web service to be called from client script by creating a <xref:System.Web.UI.ServiceReference> object and adding it to the <xref:System.Web.UI.ScriptManager.Services%2A> collection of the <xref:System.Web.UI.ScriptManager> control.</span></span> <span data-ttu-id="a6179-197">ASP.NET 生成每个客户端代理对象<xref:System.Web.UI.ServiceReference>对象在<xref:System.Web.UI.ScriptManager.Services%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="a6179-197">ASP.NET generates a client proxy object for each <xref:System.Web.UI.ServiceReference> object in the <xref:System.Web.UI.ScriptManager.Services%2A> collection.</span></span> <span data-ttu-id="a6179-198">你可以以编程方式添加<xref:System.Web.UI.ServiceReference>对象添加到<xref:System.Web.UI.ScriptManager.Services%2A>集合用于在运行时注册 Web 服务。</span><span class="sxs-lookup"><span data-stu-id="a6179-198">You can programmatically add <xref:System.Web.UI.ServiceReference> objects to the <xref:System.Web.UI.ScriptManager.Services%2A> collection to register Web services at run time.</span></span>  
  
 <span data-ttu-id="a6179-199">有关如何访问脚本中的 Web 服务的详细信息，请参阅[公开 Web 服务迁移到 ASP.NET AJAX 中的客户端脚本](http://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8)和[从 ASP.NET AJAX 中的客户端脚本调用 Web 服务](http://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0)。</span><span class="sxs-lookup"><span data-stu-id="a6179-199">For more information about how to access Web services in script, see [Exposing Web Services to Client Script in ASP.NET AJAX](http://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8) and [Calling Web Services from Client Script in ASP.NET AJAX](http://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0).</span></span>  
  
<a name="localization"></a>   
## <a name="localization"></a><span data-ttu-id="a6179-200">本地化</span><span class="sxs-lookup"><span data-stu-id="a6179-200">Localization</span></span>  
 <span data-ttu-id="a6179-201"><xref:System.Web.UI.ScriptManager>控件在所呈现的页面上，指向相应的本地化的脚本文件是脚本文件嵌入到程序集或独立的脚本文件中，但也生成引用。</span><span class="sxs-lookup"><span data-stu-id="a6179-201">The <xref:System.Web.UI.ScriptManager> control generates references in the rendered page that point to the appropriate localized script files, which are either script files embedded in assemblies or stand-alone script files.</span></span>  
  
 <span data-ttu-id="a6179-202">当<xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A>属性设置为`true`、<xref:System.Web.UI.ScriptManager>控件中检索本地化的资源 （例如本地化的字符串） 的当前区域性，如果它们存在。</span><span class="sxs-lookup"><span data-stu-id="a6179-202">When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> control retrieves localized resources (such as localized strings) for the current culture, if they exist.</span></span> <span data-ttu-id="a6179-203"><xref:System.Web.UI.ScriptManager>控件提供使用本地化的资源的以下功能：</span><span class="sxs-lookup"><span data-stu-id="a6179-203">The <xref:System.Web.UI.ScriptManager> control provides the following functionality for using localized resources:</span></span>  
  
-   <span data-ttu-id="a6179-204">**脚本嵌入到程序集中的文件**。</span><span class="sxs-lookup"><span data-stu-id="a6179-204">**Script files that are embedded in an assembly**.</span></span> <span data-ttu-id="a6179-205"><xref:System.Web.UI.ScriptManager>控件确定要发送到浏览器的区域性特定或回退区域性脚本文件。</span><span class="sxs-lookup"><span data-stu-id="a6179-205">The <xref:System.Web.UI.ScriptManager> control determines which culture-specific or fallback-culture script file to send to the browser.</span></span> <span data-ttu-id="a6179-206">通过使用特定于区域性的执行这<xref:System.Resources.NeutralResourcesLanguageAttribute>程序集属性、 与程序集和浏览器的 UI 区域性打包在一起 （如果有） 的资源。</span><span class="sxs-lookup"><span data-stu-id="a6179-206">It does this by using the culture-specific <xref:System.Resources.NeutralResourcesLanguageAttribute> assembly attribute, the resources packaged with the assembly, and the UI culture of the browser (if any).</span></span>  
  
-   <span data-ttu-id="a6179-207">**独立的脚本文件**。</span><span class="sxs-lookup"><span data-stu-id="a6179-207">**Stand-alone script files**.</span></span> <span data-ttu-id="a6179-208"><xref:System.Web.UI.ScriptManager>控件定义的通过使用支持的 UI 区域性列表<xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A>属性<xref:System.Web.UI.ScriptReference>对象。</span><span class="sxs-lookup"><span data-stu-id="a6179-208">The <xref:System.Web.UI.ScriptManager> control defines the list of UI cultures that are supported by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> object.</span></span>  
  
-   <span data-ttu-id="a6179-209">**在调试模式下**。</span><span class="sxs-lookup"><span data-stu-id="a6179-209">**In debug mode**.</span></span> <span data-ttu-id="a6179-210"><xref:System.Web.UI.ScriptManager>控件尝试呈现包含调试信息的区域性特定的脚本文件。</span><span class="sxs-lookup"><span data-stu-id="a6179-210">The <xref:System.Web.UI.ScriptManager> control tries to render a culture-specific script file that contains debug information.</span></span> <span data-ttu-id="a6179-211">例如，如果页处于调试模式下，当前区域性设置为 en MX 控件呈现脚本文件，如具有名称`scriptname`.en MX.debug.js，如果该文件存在。</span><span class="sxs-lookup"><span data-stu-id="a6179-211">For example, if the page is in debug mode and the current culture is set to en-MX, the control renders a script file that has a name such as `scriptname`.en-MX.debug.js, if the file exists.</span></span> <span data-ttu-id="a6179-212">如果文件不存在，将呈现的调试文件的适当的回退区域性。</span><span class="sxs-lookup"><span data-stu-id="a6179-212">If the file does not exist, the debug file for the appropriate fallback culture is rendered</span></span>  
  
 <span data-ttu-id="a6179-213">有关如何将本地化资源的详细信息，请参阅[本地化资源组件库概述](http://msdn.microsoft.com/library/e6b15435-57c1-4dd1-9bd3-5d4c509685bb)。</span><span class="sxs-lookup"><span data-stu-id="a6179-213">For more information about how to localize resources, see [Localizing Resources for Component Libraries Overview](http://msdn.microsoft.com/library/e6b15435-57c1-4dd1-9bd3-5d4c509685bb).</span></span>  
  
<a name="error_handling"></a>   
## <a name="error-handling"></a><span data-ttu-id="a6179-214">错误处理</span><span class="sxs-lookup"><span data-stu-id="a6179-214">Error Handling</span></span>  
 <span data-ttu-id="a6179-215">当异步回发期间出现页面错误<xref:System.Web.UI.ScriptManager.AsyncPostBackError>引发事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-215">When a page error occurs during asynchronous postbacks, the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised.</span></span> <span data-ttu-id="a6179-216">在该服务器上的错误会发送到客户端的方式取决于<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>属性，<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>属性，且 Web.config 文件的自定义错误部分。</span><span class="sxs-lookup"><span data-stu-id="a6179-216">The way in which errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span> <span data-ttu-id="a6179-217">有关详细信息，请参阅[UpdatePanel 控件的自定义错误处理](http://msdn.microsoft.com/library/e15e7ffb-e4b2-4a89-b99e-16624a5861d0)。</span><span class="sxs-lookup"><span data-stu-id="a6179-217">For more information, see [Customizing Error Handling for UpdatePanel Controls](http://msdn.microsoft.com/library/e15e7ffb-e4b2-4a89-b99e-16624a5861d0).</span></span>  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="a6179-218">声明性语法</span><span class="sxs-lookup"><span data-stu-id="a6179-218">Declarative Syntax</span></span>  
  
```  
<asp:ScriptManager  
    AllowCustomErrorsRedirect="True|False"  
    AsyncPostBackErrorMessage="string"  
    AsyncPostBackTimeout="integer"  
    AuthenticationService-Path="uri"  
    EnablePageMethods="True|False"  
    EnablePartialRendering="True|False"  
    EnableScriptGlobalization="True|False"  
    EnableScriptLocalization="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    LoadScriptsBeforeUI="True|False"  
    OnAsyncPostBackError="AsyncPostBackError event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnResolveScriptReference="ResolveScriptReference event handler"  
    OnUnload="Unload event handler"  
    ProfileService-LoadProperties="string"  
    ProfileService-Path="uri"  
    RoleService-LoadRoles="True|False"  
    RoleService-Path="uri"  
    runat="server"  
    ScriptMode="Auto|Inherit|Debug|Release"  
    ScriptPath="string"  
    SkinID="string"  
    SupportsPartialRendering="True|False"  
    Visible="True|False"  
>  
        <AuthenticationService  
            Path="uri"  
        />  
        <ProfileService  
            LoadProperties="string"  
            Path="uri"  
        />  
        <RoleService  
            LoadRoles="True|False"  
            Path="uri"  
        />  
        <Scripts>  
            <asp:ScriptReference  
                Assembly="string"  
                IgnoreScriptPath="True|False"  
                Name="string"  
                NotifyScriptLoaded="True|False"  
                Path="string"  
                ResourceUICultures="string"  
                ScriptMode="Auto|Debug|Inherit|Release"  
            />  
        </Scripts>  
        <Services>  
            <asp:ServiceReference  
                InlineScript="True|False"  
                Path="string"  
            />  
        </Services>  
</asp:ScriptManager>  
```  
  
   
  
## Examples  
 <span data-ttu-id="a6179-219">下面的示例演示使用不同方案<xref:System.Web.UI.ScriptManager>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-219">The following examples show different scenarios for using the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
 <span data-ttu-id="a6179-220">**启用部分页面更新**</span><span class="sxs-lookup"><span data-stu-id="a6179-220">**Enabling Partial-Page Updates**</span></span>  
  
 <span data-ttu-id="a6179-221">下面的示例演示如何使用<xref:System.Web.UI.ScriptManager>控件来启用局部页面更新。</span><span class="sxs-lookup"><span data-stu-id="a6179-221">The following example shows how to use the <xref:System.Web.UI.ScriptManager> control to enable partial-page updates.</span></span> <span data-ttu-id="a6179-222">在此示例中，<xref:System.Web.UI.WebControls.Calendar>和<xref:System.Web.UI.WebControls.DropDownList>控件位于<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-222">In this example, a <xref:System.Web.UI.WebControls.Calendar> and a <xref:System.Web.UI.WebControls.DropDownList> control are inside an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="a6179-223">默认情况下，值<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性是<xref:System.Web.UI.UpdatePanelUpdateMode.Always>，和的值<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="a6179-223">By default, the value of the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, and the value of the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `true`.</span></span> <span data-ttu-id="a6179-224">因此，子控件的面板会导致异步回发。</span><span class="sxs-lookup"><span data-stu-id="a6179-224">Therefore, child controls of the panel cause an asynchronous postback.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 <span data-ttu-id="a6179-225">**处理局部页面的更新错误并注册脚本**</span><span class="sxs-lookup"><span data-stu-id="a6179-225">**Handling Partial-Page Update Errors and Registering Script**</span></span>  
  
 <span data-ttu-id="a6179-226">下面的示例演示如何提供自定义错误处理在局部页面更新过程。</span><span class="sxs-lookup"><span data-stu-id="a6179-226">The following example shows how to provide custom error handling during partial-page updates.</span></span> <span data-ttu-id="a6179-227">默认情况下，在局部页面更新过程中发生错误时被显示一个 JavaScript 消息框。</span><span class="sxs-lookup"><span data-stu-id="a6179-227">By default, when an error occurs during partial-page updates, a JavaScript message box is displayed.</span></span> <span data-ttu-id="a6179-228">此示例演示如何使用自定义错误处理程序通过提供的处理程序<xref:System.Web.UI.ScriptManager.AsyncPostBackError>事件，并通过设置<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>事件处理程序中的属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-228">This example demonstrates how to use custom error handling by providing a handler for the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event, and by setting the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property in the event handler.</span></span> <span data-ttu-id="a6179-229">你还可以设置<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>属性指定在局部页面更新过程中发生错误时如何使用 Web.config 文件的自定义错误部分。</span><span class="sxs-lookup"><span data-stu-id="a6179-229">You can also set the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property to specify how the custom errors section of the Web.config file is used when an error occurs during partial-page updates.</span></span> <span data-ttu-id="a6179-230">在此示例中，默认值的<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>使用属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-230">In this example, the default value of the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property is used.</span></span> <span data-ttu-id="a6179-231">这意味着如果 Web.config 文件包含的元素，该元素将确定错误的显示方式。</span><span class="sxs-lookup"><span data-stu-id="a6179-231">This means that if the Web.config file contains a  element, that element determines how errors are displayed.</span></span> <span data-ttu-id="a6179-232">有关详细信息，请参阅[customErrors 元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/288c32e2-df1f-4548-abda-de6b4cb989a6)。</span><span class="sxs-lookup"><span data-stu-id="a6179-232">For more information, see [customErrors Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/288c32e2-df1f-4548-abda-de6b4cb989a6).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.OnAsyncPostBackError#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.OnAsyncPostBackError/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.OnAsyncPostBackError#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.OnAsyncPostBackError/VB/default.aspx#1)]  
  
 <span data-ttu-id="a6179-233">**全球化的日期和浏览器中显示的时间**</span><span class="sxs-lookup"><span data-stu-id="a6179-233">**Globalizing the Date and Time That Are Displayed in the Browser**</span></span>  
  
 <span data-ttu-id="a6179-234">下面的示例演示如何设置<xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A>属性，以便该客户端脚本可以在浏览器中显示的特定于区域性的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="a6179-234">The following example shows how to set the <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> property so that client script can display a culture-specific date and time in the browser.</span></span> <span data-ttu-id="a6179-235">在示例中，`Culture`指令的特性设置为`auto`。</span><span class="sxs-lookup"><span data-stu-id="a6179-235">In the example, the `Culture` attribute of the  directive is set to `auto`.</span></span> <span data-ttu-id="a6179-236">因此，在当前的浏览器设置中指定的第一个语言确定的区域性和 UI 区域性页。</span><span class="sxs-lookup"><span data-stu-id="a6179-236">As a result, the first language that is specified in the current browser settings determines the culture and UI culture for the page.</span></span> <span data-ttu-id="a6179-237">有关详细信息，请参阅[如何： 为 ASP.NET 网页全球化设置区域性和 UI 区域性](http://msdn.microsoft.com/library/76091f86-f967-4687-a40f-de87bd8cc9a0)。</span><span class="sxs-lookup"><span data-stu-id="a6179-237">For more information, see [How to: Set the Culture and UI Culture for ASP.NET Web Page Globalization](http://msdn.microsoft.com/library/76091f86-f967-4687-a40f-de87bd8cc9a0).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.EnableScriptGlobalization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.EnableScriptGlobalization/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.EnableScriptGlobalization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.EnableScriptGlobalization/VB/default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManagerProxy" />
    <altmember cref="T:System.Web.UI.UpdatePanel" />
    <altmember cref="T:System.Web.UI.ClientScriptManager" />
    <altmember cref="T:System.Web.UI.ScriptMode" />
    <altmember cref="T:System.Web.UI.ScriptReference" />
    <altmember cref="T:System.Web.UI.ServiceReference" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6179-238">初始化 <see cref="T:System.Web.UI.ScriptManager" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-238">Initializes a new instance of the <see cref="T:System.Web.UI.ScriptManager" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-239">此构造函数初始化由使用的内部字段<xref:System.Web.UI.ScriptManager>控件跟踪页、 控制和部署信息。</span><span class="sxs-lookup"><span data-stu-id="a6179-239">This constructor initializes the internal fields that are used by the <xref:System.Web.UI.ScriptManager> control to track page, control, and deployment information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHistoryPoint">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-240">创建一个历史时间点，并将其添加到浏览器的历史记录堆栈中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-240">Creates a history point and adds it to the browser's history stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-241">这些方法重载使你能够在浏览器中定义服务器状态和 （可选） 的历史记录条目的标题。</span><span class="sxs-lookup"><span data-stu-id="a6179-241">These method overloads enable you to define server state, and optionally the title of the history entry in the browser.</span></span> <span data-ttu-id="a6179-242">在创建历史时间点时，序列化和加密的数据会追加到网页的 URL 和浏览器的历史记录堆栈中包括一个条目。</span><span class="sxs-lookup"><span data-stu-id="a6179-242">When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.</span></span> <span data-ttu-id="a6179-243">状态数据可用于引发任何后续服务器导航事件时重新创建该页面。</span><span class="sxs-lookup"><span data-stu-id="a6179-243">You can use the state data to re-create the page when any subsequent server navigation event is raised.</span></span> <span data-ttu-id="a6179-244">有关详细信息，请参阅[管理浏览器历史记录中使用服务器控件](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)。</span><span class="sxs-lookup"><span data-stu-id="a6179-244">For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHistoryPoint">
      <MemberSignature Language="C#" Value="public void AddHistoryPoint (System.Collections.Specialized.NameValueCollection state, string title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHistoryPoint(class System.Collections.Specialized.NameValueCollection state, string title) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHistoryPoint (state As NameValueCollection, title As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHistoryPoint(System::Collections::Specialized::NameValueCollection ^ state, System::String ^ title);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="a6179-245">包含状态数据的键/值对的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-245">A collection of key/value pairs that contain the data for the state.</span>
          </span>
        </param>
        <param name="title">
          <span data-ttu-id="a6179-246">将作为此状态的标题添加到浏览器的历史记录堆栈中的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-246">The text that will be added to the browser's history stack as the title for this state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-247">使用指定的状态数据集合和状态标题创建历史时间点，然后将它添加到浏览器的历史记录堆栈中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-247">Creates a history point and adds it to the browser's history stack, using the specified state data collection and state title.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-248">此方法用于创建历史时间点，如果你想要保存的状态数据的多个键/值对。</span><span class="sxs-lookup"><span data-stu-id="a6179-248">Use this method to create a history point when you want to save more than one key/value pair for the state data.</span></span> <span data-ttu-id="a6179-249">在创建历史时间点时，序列化和加密的数据会追加到网页的 URL 和浏览器的历史记录堆栈中包括一个条目。</span><span class="sxs-lookup"><span data-stu-id="a6179-249">When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.</span></span> <span data-ttu-id="a6179-250">如果`title`参数是`null`，为历史记录堆栈中的状态条目的标题使用的网页标题。</span><span class="sxs-lookup"><span data-stu-id="a6179-250">If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack.</span></span>  
  
 <span data-ttu-id="a6179-251">状态数据可用于引发任何后续服务器导航事件时重新创建该页面。</span><span class="sxs-lookup"><span data-stu-id="a6179-251">You can use the state data to re-create the page when any subsequent server navigation event is raised.</span></span> <span data-ttu-id="a6179-252">有关详细信息，请参阅[管理浏览器历史记录中使用服务器控件](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)。</span><span class="sxs-lookup"><span data-stu-id="a6179-252">For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHistoryPoint">
      <MemberSignature Language="C#" Value="public void AddHistoryPoint (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHistoryPoint(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHistoryPoint (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHistoryPoint(System::String ^ key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a6179-253">标识网页状态的键/值对的键部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-253">The key part of the key/value pair that identifies the state of the Web page.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a6179-254">标识网页状态的键/值对的值部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-254">The value part of the key/value pair that identifies the state of the Web page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-255">使用指定的状态键和状态值创建历史时间点，然后将它添加到浏览器的历史记录堆栈中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-255">Creates a history point and adds it to the browser's history stack, using the specified state key and state value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-256">使用此方法时你只想要保存一个值来标识状态创建历史时间点。</span><span class="sxs-lookup"><span data-stu-id="a6179-256">Use this method to create a history point when you only want to save a value to identify the state.</span></span> <span data-ttu-id="a6179-257">在创建历史时间点时，序列化和加密的数据会追加到网页的 URL 和浏览器的历史记录堆栈中包括一个条目。</span><span class="sxs-lookup"><span data-stu-id="a6179-257">When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.</span></span> <span data-ttu-id="a6179-258">网页的标题用作历史记录堆栈中的状态条目的标题。</span><span class="sxs-lookup"><span data-stu-id="a6179-258">The title of the Web page is used as the title of the state entry in the history stack.</span></span>  
  
 <span data-ttu-id="a6179-259">状态数据可用于引发任何后续服务器导航事件时重新创建该页面。</span><span class="sxs-lookup"><span data-stu-id="a6179-259">You can use the state data to re-create the page when any subsequent server navigation event is raised.</span></span> <span data-ttu-id="a6179-260">有关详细信息，请参阅[管理浏览器历史记录中使用服务器控件](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)。</span><span class="sxs-lookup"><span data-stu-id="a6179-260">For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHistoryPoint">
      <MemberSignature Language="C#" Value="public void AddHistoryPoint (string key, string value, string title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHistoryPoint(string key, string value, string title) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHistoryPoint (key As String, value As String, title As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHistoryPoint(System::String ^ key, System::String ^ value, System::String ^ title);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a6179-261">标识网页状态的键/值对的键部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-261">The key part of the key/value pair that identifies the state of the Web page.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a6179-262">标识网页状态的键/值对的值部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-262">The value part of the key/value pair that identifies the state of the Web page.</span>
          </span>
        </param>
        <param name="title">
          <span data-ttu-id="a6179-263">将作为此状态的标题添加到浏览器的历史记录堆栈中的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-263">The text that will be added to the browser's history stack as the title for this state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-264">使用指定的状态键、状态值和状态标题创建历史时间点，然后将它添加到浏览器的历史记录堆栈中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-264">Creates a history point and adds it to the browser's history stack, using the specified state key, state value, and state title.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-265">使用此方法时要用于保存一个值来标识的状态和状态标题创建历史时间点。</span><span class="sxs-lookup"><span data-stu-id="a6179-265">Use this method to create a history point when you want to save a value to identify the state and a title for the state.</span></span> <span data-ttu-id="a6179-266">在创建历史时间点时，序列化和加密的数据会追加到网页的 URL 和浏览器的历史记录堆栈中包括一个条目。</span><span class="sxs-lookup"><span data-stu-id="a6179-266">When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.</span></span> <span data-ttu-id="a6179-267">如果`title`参数是`null`，为历史记录堆栈中的状态条目的标题使用的网页标题。</span><span class="sxs-lookup"><span data-stu-id="a6179-267">If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack.</span></span>  
  
 <span data-ttu-id="a6179-268">状态数据可用于引发任何后续服务器导航事件时重新创建该页面。</span><span class="sxs-lookup"><span data-stu-id="a6179-268">You can use the state data to re-create the page when any subsequent server navigation event is raised.</span></span> <span data-ttu-id="a6179-269">有关详细信息，请参阅[管理浏览器历史记录中使用服务器控件](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)。</span><span class="sxs-lookup"><span data-stu-id="a6179-269">For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AjaxFrameworkAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly AjaxFrameworkAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly AjaxFrameworkAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AjaxFrameworkAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AjaxFrameworkAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ AjaxFrameworkAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-270">获取页上组件所使用的 Ajax framework 程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-270">Gets the Ajax framework assembly that components on the page use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-271">Ajax framework 程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-271">The Ajax framework assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AjaxFrameworkMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.AjaxFrameworkMode AjaxFrameworkMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.AjaxFrameworkMode AjaxFrameworkMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AjaxFrameworkMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AjaxFrameworkMode As AjaxFrameworkMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AjaxFrameworkMode AjaxFrameworkMode { System::Web::UI::AjaxFrameworkMode get(); void set(System::Web::UI::AjaxFrameworkMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AjaxFrameworkMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-272">获取或设置一个值，该值指定将如何将 Microsoft Ajax 客户端库的客户端脚本包括到客户端上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-272">Gets or sets a value that specifies how client scripts of the Microsoft Ajax client library will be included on the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-273">一个 <see cref="T:System.Web.UI.AjaxFrameworkMode" /> 枚举值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-273">An <see cref="T:System.Web.UI.AjaxFrameworkMode" /> enumeration value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-274">使用<xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A>属性以启用所有 Microsoft Ajax 脚本文件，来禁用所有 Microsoft Ajax 脚本文件，或显式包括各个脚本文件。</span><span class="sxs-lookup"><span data-stu-id="a6179-274">Use the <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> property to enable all Microsoft Ajax script files, to disable all Microsoft Ajax script files, or to explicitly include individual script files.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6179-275">下面的示例演示如何设置<xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A>属性`Explicit`以便指明指明脚本可以显式指定。</span><span class="sxs-lookup"><span data-stu-id="a6179-275">The following example shows how to set the <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> property to `Explicit` in order to indicate that scripts can be explicitly specified.</span></span>  
  
```  
<asp:ScriptManager ID="sm1" AjaxFrameworkMode="Explicit" runat="server">   
<Scripts>   
    <asp:ScriptReference Name="MicrosoftAjaxCore.js" />   
    <asp:ScriptReference Name="MicrosoftAjaxComponentModel.js" />    
    <asp:ScriptReference Name="MicrosoftAjaxSerialization.js" />   
    <asp:ScriptReference Name="MicrosoftAjaxNetwork.js" />       
</Scripts>   
</asp:ScriptManager>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.AjaxFrameworkMode" />
      </Docs>
    </Member>
    <Member MemberName="AllowCustomErrorsRedirect">
      <MemberSignature Language="C#" Value="public bool AllowCustomErrorsRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomErrorsRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCustomErrorsRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCustomErrorsRedirect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-276">获取或设置一个值，该值确定异步回发出现错误时是否使用 Web.config 文件的自定义错误部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-276">Gets or sets a value that determines whether the custom errors section of the Web.config file is used during an error in an asynchronous postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-277">如果使用 Web.config 文件中的自定义错误设置来确定异步回发期间的错误行为，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-277">
              <see langword="true" /> if the custom errors setting in the Web.config file is used to determine error behavior during asynchronous postbacks; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6179-278">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-278">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-279"><xref:System.Web.UI.ScriptManager.AsyncPostBackError>异步回发期间页错误时引发事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-279">The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks.</span></span> <span data-ttu-id="a6179-280">服务器上的错误发送给客户端的方式取决于<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>属性，<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>属性，且 Web.config 文件的自定义错误部分。</span><span class="sxs-lookup"><span data-stu-id="a6179-280">How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt; AsyncPostBackError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.AsyncPostBackErrorEventArgs&gt; AsyncPostBackError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.AsyncPostBackError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AsyncPostBackError As EventHandler(Of AsyncPostBackErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::AsyncPostBackErrorEventArgs ^&gt; ^ AsyncPostBackError;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-281">当异步回发期间出现页面错误时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-281">Occurs when there is a page error during an asynchronous postback.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-282"><xref:System.Web.UI.ScriptManager.AsyncPostBackError>异步回发期间页错误时引发事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-282">The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks.</span></span> <span data-ttu-id="a6179-283">服务器上的错误发送给客户端的方式取决于<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>属性，<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>属性，且 Web.config 文件的自定义错误部分。</span><span class="sxs-lookup"><span data-stu-id="a6179-283">How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6179-284">下面的示例演示如何处理<xref:System.Web.UI.ScriptManager.AsyncPostBackError>事件设置<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>服务器异常错误消息的属性 （它将发送到客户端）。</span><span class="sxs-lookup"><span data-stu-id="a6179-284">The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)" />
        <altmember cref="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackErrorMessage">
      <MemberSignature Language="C#" Value="public string AsyncPostBackErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AsyncPostBackErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPostBackErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AsyncPostBackErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-285">获取或设置异步回发期间发生未处理的服务器异常时发送到客户端的错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-285">Gets or sets the error message that is sent to the client when an unhandled server exception occurs during an asynchronous postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-286">错误消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-286">The error message.</span>
          </span>
          <span data-ttu-id="a6179-287">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-287">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-288"><xref:System.Web.UI.ScriptManager.AsyncPostBackError>异步回发期间页错误时引发事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-288">The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks.</span></span> <span data-ttu-id="a6179-289">服务器上的错误发送给客户端的方式取决于<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>属性，<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>属性，且 Web.config 文件的自定义错误部分。</span><span class="sxs-lookup"><span data-stu-id="a6179-289">How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6179-290">下面的示例演示如何处理<xref:System.Web.UI.ScriptManager.AsyncPostBackError>事件设置<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>服务器异常错误消息的属性 （它将发送到客户端）。</span><span class="sxs-lookup"><span data-stu-id="a6179-290">The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackSourceElementID">
      <MemberSignature Language="C#" Value="public string AsyncPostBackSourceElementID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AsyncPostBackSourceElementID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncPostBackSourceElementID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AsyncPostBackSourceElementID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IScriptManagerInternal.AsyncPostBackSourceElementID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-291">获取引发异步回发的控件的唯一 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-291">Gets the unique ID of the control that caused the asynchronous postback.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-292">如果控件具有 ID，则为它的唯一 ID；否则，为空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-292">The unique ID of a control, if the control has an ID; otherwise, an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-293"><xref:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID%2A>属性包含的值的控件 ID 的引发异步回发，可以是以下之一：</span><span class="sxs-lookup"><span data-stu-id="a6179-293">The <xref:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID%2A> property contains the value of the control ID that caused the asynchronous postback, which can be one of the following:</span></span>  
  
-   <span data-ttu-id="a6179-294">来自中控件的回发<xref:System.Web.UI.UpdatePanel>控制其<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性设置为`true`（默认值）。</span><span class="sxs-lookup"><span data-stu-id="a6179-294">A postback from a control that is inside an <xref:System.Web.UI.UpdatePanel> control whose <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is set to `true` (the default).</span></span>  
  
-   <span data-ttu-id="a6179-295">为触发器的控件回发<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-295">A postback from a control that is a trigger for an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
-   <span data-ttu-id="a6179-296">从通过调用注册的控件回发<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>方法<xref:System.Web.UI.ScriptManager>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-296">A postback from a control that is registered by calling the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackTimeout">
      <MemberSignature Language="C#" Value="public int AsyncPostBackTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AsyncPostBackTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AsyncPostBackTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPostBackTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AsyncPostBackTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(90)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-297">获取或设置一个值，该值指示在未收到响应时异步回发超时前的时间（以秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-297">Gets or sets a value that indicates the time, in seconds, before asynchronous postbacks time out if no response is received.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-298">一个表示超时的整数（以秒为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-298">An integer that represents the time-out in seconds.</span>
          </span>
          <span data-ttu-id="a6179-299">默认值为 90 秒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-299">The default value is 90 seconds.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationService">
      <MemberSignature Language="C#" Value="public System.Web.UI.AuthenticationServiceManager AuthenticationService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AuthenticationServiceManager AuthenticationService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AuthenticationService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationService As AuthenticationServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AuthenticationServiceManager ^ AuthenticationService { System::Web::UI::AuthenticationServiceManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AuthenticationServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-300">获取与当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例关联的 <see cref="T:System.Web.UI.AuthenticationServiceManager" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-300">Gets the <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-301">当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例的 <see cref="T:System.Web.UI.AuthenticationServiceManager" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-301">The <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-302"><xref:System.Web.UI.AuthenticationServiceManager>此属性返回的对象表示向该页面注册的身份验证服务。</span><span class="sxs-lookup"><span data-stu-id="a6179-302">The <xref:System.Web.UI.AuthenticationServiceManager> object that is returned by this property represents the authentication service that is registered with the page.</span></span> <span data-ttu-id="a6179-303">可以在中定义的身份验证服务<xref:System.Web.UI.ScriptManager>控件或关联<xref:System.Web.UI.ScriptManagerProxy>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-303">The authentication service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span>  
  
 <span data-ttu-id="a6179-304">你可以使用 ASP.NET 身份验证服务，或使用自定义身份验证服务。</span><span class="sxs-lookup"><span data-stu-id="a6179-304">You can use the ASP.NET authentication service or use a custom authentication service.</span></span> <span data-ttu-id="a6179-305">你可以在标记中添加自定义的服务，通过包括`AuthenticationService`内的元素`asp:ScriptManager`元素在页面上，如下面的示例中所示。</span><span class="sxs-lookup"><span data-stu-id="a6179-305">You can add the custom service in markup by including an `AuthenticationService` element inside the `asp:ScriptManager` element on the page, as shown in the following example.</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <AuthenticationService Path="MyAuthenticationService.asmx" />  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="a6179-306">你可以以编程方式配置<xref:System.Web.UI.AuthenticationServiceManager>对象。</span><span class="sxs-lookup"><span data-stu-id="a6179-306">You can also programmatically configure the <xref:System.Web.UI.AuthenticationServiceManager> object.</span></span> <span data-ttu-id="a6179-307">注册服务<xref:System.Web.UI.ScriptManager>控件在页面的<xref:System.Web.UI.Control.PreRender>生命周期阶段。</span><span class="sxs-lookup"><span data-stu-id="a6179-307">Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientNavigateHandler">
      <MemberSignature Language="C#" Value="public string ClientNavigateHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientNavigateHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ClientNavigateHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientNavigateHandler As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientNavigateHandler { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-308">获取或设置在客户端上处理 [Sys.Application.navigate](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) 事件的方法的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-308">Gets or sets the name of the method that handles the [Sys.Application.navigate](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) event on the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-309">处理 [Sys.Application.navigate] 的方法的名称 (http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93)客户端上的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-309">The name of the method that handles the [Sys.Application.navigate](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) event on the client.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeScript">
      <MemberSignature Language="C#" Value="public System.Web.UI.CompositeScriptReference CompositeScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CompositeScriptReference CompositeScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.CompositeScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositeScript As CompositeScriptReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CompositeScriptReference ^ CompositeScript { System::Web::UI::CompositeScriptReference ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CompositeScriptReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-310">获取对支持网页的复合脚本的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-310">Gets a reference to the composite script that supports the Web page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-311">对复合脚本的引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-311">A reference to the composite script.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-312">有关详细信息，请参阅[组合到一个复合脚本中的客户端脚本](http://msdn.microsoft.com/library/d0f608d0-b4c8-4795-990b-ede68c1239b3)。</span><span class="sxs-lookup"><span data-stu-id="a6179-312">For more information, see [Combining Client Scripts into a Composite Script](http://msdn.microsoft.com/library/d0f608d0-b4c8-4795-990b-ede68c1239b3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyPageUrl">
      <MemberSignature Language="C#" Value="public virtual string EmptyPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EmptyPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Web.UI.Design.UrlEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-313">获取或设置空白网页的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-313">Gets or sets a URL to a blank Web page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-314">要在目标网页为空时使用的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-314">The URL to use if the target Web page is empty.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-315"><xref:System.Web.UI.ScriptManager.EmptyPageUrl%2A>属性支持 Ajax 浏览器历史记录。</span><span class="sxs-lookup"><span data-stu-id="a6179-315">The <xref:System.Web.UI.ScriptManager.EmptyPageUrl%2A> property supports Ajax browser history.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCdn">
      <MemberSignature Language="C#" Value="public bool EnableCdn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCdn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableCdn" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCdn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCdn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-316">确定当前页是否从 CDN（内容分发网络）路径加载客户端脚本引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-316">Determines whether the current page loads client script references from CDN (Content Delivery Network) paths.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-317">如果从 CDN 路径加载客户端脚本引用，则为 <see langword="true" />，否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-317">
              <see langword="true" /> if client script references are loaded from CDN paths, otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-318">未设置此属性为`true`如果你设置<xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A>到`true`已。</span><span class="sxs-lookup"><span data-stu-id="a6179-318">Do not set this property to `true` if you set <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> to `true` already.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCdnFallback">
      <MemberSignature Language="C#" Value="public bool EnableCdnFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCdnFallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableCdnFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCdnFallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCdnFallback { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-319">在无法访问 CDN（内容分发网络）的情况下启动脚本本地副本加载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-319">Enables local copy of a script to load in the event that the CDN (Content Delivery Network) is unavailable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-320">如果启用了回退 CDN 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-320">
              <see langword="true" /> if the fallback CDN value is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableHistory">
      <MemberSignature Language="C#" Value="public bool EnableHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHistory" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHistory { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-321">获取或设置一个值，该值指示网页是否支持历史时间点管理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-321">Gets or sets a value that indicates whether the Web page supports history point management.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-322">如果网页支持将历史时间点添加到浏览器的历史记录堆栈中，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-322">
              <see langword="true" /> if the Web page supports adding history points to the browser's history stack; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-323">使用<xref:System.Web.UI.ScriptManager.EnableHistory%2A>属性以启用 Web 页中的历史记录管理。</span><span class="sxs-lookup"><span data-stu-id="a6179-323">Use the <xref:System.Web.UI.ScriptManager.EnableHistory%2A> property to enable history management in a Web page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePageMethods">
      <MemberSignature Language="C#" Value="public bool EnablePageMethods { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePageMethods" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnablePageMethods" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePageMethods As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePageMethods { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-324">获取或设置一个值，该值指示能否从客户端脚本调用 ASP.NET 页中公共静态页方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-324">Gets or sets a value that indicates whether public static page methods in an ASP.NET page can be called from client script.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-325">如果可以从客户端脚本将 ASP.NET 页上的静态页方法作为 Web 方法调用，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-325">
              <see langword="true" /> if static page methods on an ASP.NET page can be called from client script as Web methods; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6179-326">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-326">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-327">你可以将静态页方法添加到 ASP.NET 页，并将其标记作为 Web 方法。</span><span class="sxs-lookup"><span data-stu-id="a6179-327">You can add static page methods to an ASP.NET page and mark them as Web methods.</span></span> <span data-ttu-id="a6179-328">然后就像它们是 Web 服务，但不会创建单独的.asmx 文件的一部分，可以从脚本中调用这些方法。</span><span class="sxs-lookup"><span data-stu-id="a6179-328">You can then call these methods from script as if they were part of a Web service, but without creating a separate .asmx file.</span></span> <span data-ttu-id="a6179-329">若要在页面上创建 Web 方法，请导入<xref:System.Web.Services>命名空间并添加<xref:System.Web.Services.WebMethodAttribute>属性设为你想要公开的每个静态方法。</span><span class="sxs-lookup"><span data-stu-id="a6179-329">To create Web methods on a page, import the <xref:System.Web.Services> namespace and add a <xref:System.Web.Services.WebMethodAttribute> attribute to each static method that you want to expose.</span></span> <span data-ttu-id="a6179-330">方法必须标记为公共类。</span><span class="sxs-lookup"><span data-stu-id="a6179-330">The methods must be marked public.</span></span>  
  
 <span data-ttu-id="a6179-331">有关详细信息，请参阅[公开 Web 服务迁移到 ASP.NET AJAX 中的客户端脚本](http://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8)。</span><span class="sxs-lookup"><span data-stu-id="a6179-331">For more information, see [Exposing Web Services to Client Script in ASP.NET AJAX](http://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePartialRendering">
      <MemberSignature Language="C#" Value="public bool EnablePartialRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePartialRendering { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-332">获取或设置一个可部分呈现页面的值，该操作转而使你可以使用 <see cref="T:System.Web.UI.UpdatePanel" /> 控件来单独更新页面区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-332">Gets or sets a value that enables partial rendering of a page, which in turn enables you to update regions of the page individually by using <see cref="T:System.Web.UI.UpdatePanel" /> controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-333">如果启用了部分呈现且禁止了整页更新，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-333">
              <see langword="true" /> if partial rendering is enabled and full-page updates are suppressed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6179-334">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-334">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-335">即使<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>属性是`true`，可能不会在局部页面呈现。</span><span class="sxs-lookup"><span data-stu-id="a6179-335">Even if the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property is `true`, partial-page rendering might not occur.</span></span> <span data-ttu-id="a6179-336">浏览器可能不支持局部页面呈现，或<xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="a6179-336">The browser might not support partial-page rendering, or the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="a6179-337">你可以重写的值<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>属性在运行时期间或之前已在页面的<xref:System.Web.UI.Control.Init>事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-337">You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event.</span></span> <span data-ttu-id="a6179-338">如果你尝试在该页面的后更改此属性<xref:System.Web.UI.Control.Init>事件已发生的<xref:System.InvalidOperationException>引发异常。</span><span class="sxs-lookup"><span data-stu-id="a6179-338">If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6179-339">发生页面的 <see cref="E:System.Web.UI.Control.Init" /> 事件后，设置 <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-339">The <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> property is set after the page's <see cref="E:System.Web.UI.Control.Init" /> event occurs.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.UpdatePanel" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="EnableScriptGlobalization">
      <MemberSignature Language="C#" Value="public bool EnableScriptGlobalization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableScriptGlobalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableScriptGlobalization" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableScriptGlobalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableScriptGlobalization { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-340">获取或设置一个值，该值指示 <see cref="T:System.Web.UI.ScriptManager" /> 控件是否呈现支持分析和格式化区域性特定的信息的脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-340">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.ScriptManager" /> control renders script that supports parsing and formatting of culture-specific information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-341">如果可以显示区域性特定的信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-341">
              <see langword="true" /> if culture-specific information can be displayed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6179-342">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-342">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-343">当<xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A>属性设置为`true`，例如该方法的全球化的 ECMAScript (JavaScript) 函数可显示区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="a6179-343">When the <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> property is set to `true`, globalized ECMAScript (JavaScript) functions such as the  method display culture-specific information.</span></span> <span data-ttu-id="a6179-344">在浏览器中、 在服务器代码中，或在网站的配置文件中，可以设置该区域性。</span><span class="sxs-lookup"><span data-stu-id="a6179-344">The culture can be set in the browser, in server code, or in the Web site's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableScriptLocalization">
      <MemberSignature Language="C#" Value="public bool EnableScriptLocalization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableScriptLocalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableScriptLocalization" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableScriptLocalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableScriptLocalization { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-345">获取或设置一个值，该值指示 <see cref="T:System.Web.UI.ScriptManager" /> 控件是否呈现脚本文件的本地化版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-345">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.ScriptManager" /> control renders localized versions of script files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-346">如果将呈现本地化脚本文件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-346">
              <see langword="true" /> if localized script files will be rendered; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6179-347">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-347">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-348">当<xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A>属性设置为`true`、<xref:System.Web.UI.ScriptManager>对象将检索当前区域性的脚本文件，如果它们存在。</span><span class="sxs-lookup"><span data-stu-id="a6179-348">When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> object will retrieve script files for the current culture if they exist.</span></span> <span data-ttu-id="a6179-349">例如，页面可能指定名为 CustomScript.js 的脚本文件。</span><span class="sxs-lookup"><span data-stu-id="a6179-349">For example, a page might specify a script file that is named CustomScript.js.</span></span> <span data-ttu-id="a6179-350">如果为 fr 的 CA，设置该区域性<xref:System.Web.UI.ScriptManager>对象将尝试检索名为 CustomScript.fr CA.js 的脚本文件。</span><span class="sxs-lookup"><span data-stu-id="a6179-350">If the culture is set to fr-CA, the <xref:System.Web.UI.ScriptManager> object will try to retrieve a script file that is named CustomScript.fr-CA.js.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6179-351">若要防止脚本文件呈现两次，<xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A>异步回发期间不能修改属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-351">To prevent a script file from being rendered two times, the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property must not be modified during an asynchronous postback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSecureHistoryState">
      <MemberSignature Language="C#" Value="public bool EnableSecureHistoryState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSecureHistoryState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableSecureHistoryState" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSecureHistoryState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSecureHistoryState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-352">获取或设置一个值，该值指示是否加密历史记录状态字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-352">Gets or sets a value that indicates whether to encrypt the history state string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-353">如果应加密历史记录状态字符串，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-353">
              <see langword="true" /> if the history state string should be encrypted; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6179-354">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-354">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="a6179-355">此属性应***永远不会***设置为`false`生产 web 站点上。</span><span class="sxs-lookup"><span data-stu-id="a6179-355">This property should ***never*** be set to `false` on a production web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ScriptManager GetCurrent (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.ScriptManager GetCurrent(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::ScriptManager ^ GetCurrent(System::Web::UI::Page ^ page);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="a6179-356">要从中检索 <see cref="T:System.Web.UI.ScriptManager" /> 的页实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-356">The page instance to retrieve the <see cref="T:System.Web.UI.ScriptManager" /> from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-357">获取给定 <see cref="T:System.Web.UI.Page" /> 对象的 <see cref="T:System.Web.UI.ScriptManager" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-357">Gets the <see cref="T:System.Web.UI.ScriptManager" /> instance for a given <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6179-358">选定 <see cref="T:System.Web.UI.Page" /> 对象的当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例；如果未定义实例，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-358">The current <see cref="T:System.Web.UI.ScriptManager" /> instance for the selected <see cref="T:System.Web.UI.Page" /> object, or <see langword="null" /> if no instance is defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-359">此静态方法用于确定是否<xref:System.Web.UI.ScriptManager>控件是在页中，或访问的属性和方法<xref:System.Web.UI.ScriptManager>控制当你不知道其 id。</span><span class="sxs-lookup"><span data-stu-id="a6179-359">Use this static method to determine whether a <xref:System.Web.UI.ScriptManager> control is on a page, or to access the properties and methods of a <xref:System.Web.UI.ScriptManager> control when you do not know its ID.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-360">
            <paramref name="page" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-360">
              <paramref name="page" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredArrayDeclarations">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt; GetRegisteredArrayDeclarations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredArrayDeclaration&gt; GetRegisteredArrayDeclarations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredArrayDeclarations () As ReadOnlyCollection(Of RegisteredArrayDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredArrayDeclaration ^&gt; ^ GetRegisteredArrayDeclarations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6179-361">检索先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的 ECMAScript (JavaScript) 数组声明的只读集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-361">Retrieves a read-only collection of ECMAScript (JavaScript) array declarations that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6179-362">一个包含数组声明的泛型集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-362">A generic collection that contains the array declarations.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Web.UI.ScriptManager.RegisterArrayDeclaration" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredClientScriptBlocks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt; GetRegisteredClientScriptBlocks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredScript&gt; GetRegisteredClientScriptBlocks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredClientScriptBlocks () As ReadOnlyCollection(Of RegisteredScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredScript ^&gt; ^ GetRegisteredClientScriptBlocks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6179-363">检索先前已向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册的客户端脚本块的只读集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-363">Retrieves a read-only collection of client script blocks that were previously registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6179-364">一个包含客户端脚本块的泛型集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-364">A generic collection that contains client script blocks.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-365">客户端脚本块中注册的<xref:System.Web.UI.ScriptManager>内的某个控件一起使用的控件<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-365">Client script blocks are registered with the <xref:System.Web.UI.ScriptManager> control for use with a control that is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredDisposeScripts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt; GetRegisteredDisposeScripts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredDisposeScript&gt; GetRegisteredDisposeScripts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredDisposeScripts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredDisposeScripts () As ReadOnlyCollection(Of RegisteredDisposeScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredDisposeScript ^&gt; ^ GetRegisteredDisposeScripts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6179-366">检索先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的 <see langword="dispose" /> 脚本的只读集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-366">Retrieves a read-only collection of <see langword="dispose" /> scripts that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6179-367">一个包含 <see langword="dispose" /> 脚本的泛型集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-367">A generic collection that contains <see langword="dispose" /> scripts.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-368">A`dispose`脚本时执行<xref:System.Web.UI.UpdatePanel>更新或删除控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-368">A `dispose` script executes when the <xref:System.Web.UI.UpdatePanel> control is updated or deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredExpandoAttributes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt; GetRegisteredExpandoAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredExpandoAttribute&gt; GetRegisteredExpandoAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredExpandoAttributes () As ReadOnlyCollection(Of RegisteredExpandoAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredExpandoAttribute ^&gt; ^ GetRegisteredExpandoAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6179-369">检索先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的自定义 (expando) 特性的只读集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-369">Retrieves a read-only collection of custom (expando) attributes that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6179-370">一个包含自定义特性的泛型集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-370">A generic collection that contains custom attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-371">自定义特性是可以读取和设置由客户端脚本的名称/值对。</span><span class="sxs-lookup"><span data-stu-id="a6179-371">A custom attribute is a name/value pair that can be read and set by client script.</span></span>  
  
   
  
## Examples  
 <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>  
  
 <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>  
  
 <xref:System.Web.UI.RegisteredExpandoAttribute>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredHiddenFields">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt; GetRegisteredHiddenFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredHiddenField&gt; GetRegisteredHiddenFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredHiddenFields" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredHiddenFields () As ReadOnlyCollection(Of RegisteredHiddenField)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredHiddenField ^&gt; ^ GetRegisteredHiddenFields();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6179-372">检索先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的隐藏字段的只读集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-372">Retrieves a read-only collection of hidden fields that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6179-373">一个包含隐藏字段的泛型集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-373">A generic collection that contains hidden fields.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.RegisteredHiddenField" />
        <altmember cref="Overload:System.Web.UI.ScriptManager.RegisterHiddenField" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredOnSubmitStatements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt; GetRegisteredOnSubmitStatements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredScript&gt; GetRegisteredOnSubmitStatements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredOnSubmitStatements () As ReadOnlyCollection(Of RegisteredScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredScript ^&gt; ^ GetRegisteredOnSubmitStatements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6179-374">检索先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的 <see langword="onsubmit" /> 语句的只读集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-374">Retrieves a read-only collection of <see langword="onsubmit" /> statements that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6179-375">一个包含 <see langword="onsubmit" /> 语句的泛型集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-375">A generic collection that contains <see langword="onsubmit" /> statements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-376">`onsubmit`语句是在提交表单时执行的 ECMAScript (JavaScript)。</span><span class="sxs-lookup"><span data-stu-id="a6179-376">An `onsubmit` statement is ECMAScript (JavaScript) that is executed when the form is submitted.</span></span>  
  
   
  
## Examples  
 <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>  
  
 <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredStartupScripts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt; GetRegisteredStartupScripts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredScript&gt; GetRegisteredStartupScripts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredStartupScripts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredStartupScripts () As ReadOnlyCollection(Of RegisteredScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredScript ^&gt; ^ GetRegisteredStartupScripts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6179-377">检索先前已向 <see cref="T:System.Web.UI.Page" /> 对象注册的启动脚本的只读集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-377">Retrieves a read-only collection of startup scripts that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6179-378">一个包含启动脚本的泛型集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-378">A generic collection that contains startup scripts.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-379">启动脚本是与执行启动控件时控件关联的客户端脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-379">A startup script is client script that is associated with a control that executes when the control is started.</span></span>  
  
   
  
## Examples  
 <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>  
  
 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>  
  
 <xref:System.Web.UI.ScriptManager.GetRegisteredStartupScripts%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStateString">
      <MemberSignature Language="C#" Value="public string GetStateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetStateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetStateString" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetStateString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6179-380">检索包含表示网页状态的键/值对的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-380">Retrieves a string that contains key/value pairs that represent the state of the Web page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6179-381">一个字符串，其中包含表示网页状态的键/值对。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-381">A string containing the key/value pairs that represent the state of the Web page.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDebuggingEnabled">
      <MemberSignature Language="C#" Value="public bool IsDebuggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebuggingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.IsDebuggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDebuggingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDebuggingEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-382">获取一个值，它指示是否将呈现客户端脚本库的调试版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-382">Gets a value that indicates whether the debug versions of client script libraries will be rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-383">如果要在调试模式下执行当前请求，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-383">
              <see langword="true" /> if the current request is executing in debug mode; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-384"><xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A>属性返回`false`满足以下条件之一时：</span><span class="sxs-lookup"><span data-stu-id="a6179-384">The <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> property returns `false` when any one of the following conditions is true:</span></span>  
  
-   <span data-ttu-id="a6179-385">在配置文件的元素中`retail`属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="a6179-385">In the  element of the configuration file, the `retail` attribute is set to `true`.</span></span> <span data-ttu-id="a6179-386">此设置将替代所有其他设置。</span><span class="sxs-lookup"><span data-stu-id="a6179-386">This overrides all other settings.</span></span>  
  
-   <span data-ttu-id="a6179-387"><xref:System.Web.UI.ScriptManager.ScriptMode%2A>属性设置为`Auto`或`Inherit`，和中未启用调试`compilation`的应用程序根 Web.config 文件的部分。</span><span class="sxs-lookup"><span data-stu-id="a6179-387">The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property is set to `Auto` or to `Inherit`, and debugging is not enabled in the `compilation` section of the application-root Web.config file.</span></span>  
  
-   <span data-ttu-id="a6179-388"><xref:System.Web.UI.ScriptManager.ScriptMode%2A> 属性设置为 `Release`。</span><span class="sxs-lookup"><span data-stu-id="a6179-388">The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property is set to `Release`.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="a6179-389">`debug`指令的特性不会影响支持 Ajax 的 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="a6179-389">The `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications.</span></span> <span data-ttu-id="a6179-390"><xref:System.Web.UI.ScriptManager>控件使用的设置仅在 Web.config 文件中并在其<xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A>和<xref:System.Web.UI.ScriptManager.ScriptMode%2A>属性来确定是否呈现调试脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-390">The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.</span></span>  
  
 <span data-ttu-id="a6179-391">有关详细信息，请参阅[调试和跟踪 Ajax 应用程序概述](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375)。</span><span class="sxs-lookup"><span data-stu-id="a6179-391">For more information, see [Debugging and Tracing Ajax Applications Overview](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpContext.IsDebuggingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsInAsyncPostBack">
      <MemberSignature Language="C#" Value="public bool IsInAsyncPostBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInAsyncPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInAsyncPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInAsyncPostBack { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IScriptManagerInternal.IsInAsyncPostBack</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-392">获取一个值，该值指示是否要在部分呈现模式下执行当前回发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-392">Gets a value that indicates whether the current postback is being executed in partial-rendering mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-393">如果要在部分呈现模式下执行当前回发，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-393">
              <see langword="true" /> if the current postback is executing in partial-rendering mode; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-394">使用<xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>属性结合<xref:System.Web.UI.Page.IsPostBack%2A>属性来区分初始页面加载、 局部页面的更新和中的整页更新<xref:System.Web.UI.Control.Load>， <xref:System.Web.UI.Page.InitComplete>，或<xref:System.Web.UI.Control.PreRender>事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-394">Use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property in combination with the <xref:System.Web.UI.Page.IsPostBack%2A> property to distinguish between the initial page load, a partial-page update, and a full-page update in <xref:System.Web.UI.Control.Load>, <xref:System.Web.UI.Page.InitComplete>, or <xref:System.Web.UI.Control.PreRender> events.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsNavigating">
      <MemberSignature Language="C#" Value="public bool IsNavigating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNavigating" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.IsNavigating" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNavigating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNavigating { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-395">获取一个值，该值指示当前是否正在处理 <see cref="E:System.Web.UI.ScriptManager.Navigate" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-395">Gets a value that indicates whether a <see cref="E:System.Web.UI.ScriptManager.Navigate" /> event is currently being handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-396">如果正在处理 <see cref="E:System.Web.UI.ScriptManager.Navigate" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-396">
              <see langword="true" /> if the <see cref="E:System.Web.UI.ScriptManager.Navigate" /> is being handled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-397">使用<xref:System.Web.UI.ScriptManager.IsNavigating%2A>属性来确定是否<xref:System.Web.UI.ScriptManager.Navigate>引发事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-397">Use the <xref:System.Web.UI.ScriptManager.IsNavigating%2A> property to determine whether the <xref:System.Web.UI.ScriptManager.Navigate> event has been raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">
          <span data-ttu-id="a6179-398">控件的主要标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-398">The key identifier for the control.</span>
          </span>
        </param>
        <param name="postCollection">
          <span data-ttu-id="a6179-399">所有传入的后期数据的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-399">The collection of all the incoming post data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-400">读取从浏览器发送到服务器的表单数据，并确定异步回发的源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-400">Reads form data that is posted from the browser to the server, and determines the source of the asynchronous postback.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6179-401">如果 <see cref="T:System.Web.UI.ScriptManager" /> 控件的状态已因回发而更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-401">
              <see langword="true" /> if the <see cref="T:System.Web.UI.ScriptManager" /> control's state has changed as a result of a postback; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-402"><xref:System.Web.UI.ScriptManager.LoadPostData%2A>方法主要由控件开发人员用来扩展的功能<xref:System.Web.UI.ScriptManager>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-402">The <xref:System.Web.UI.ScriptManager.LoadPostData%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadScriptsBeforeUI">
      <MemberSignature Language="C#" Value="public bool LoadScriptsBeforeUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadScriptsBeforeUI" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.LoadScriptsBeforeUI" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadScriptsBeforeUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadScriptsBeforeUI { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-403">获取或设置一个值，该值指示是在加载页 UI 的标记之前还是在之后加载脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-403">Gets or sets a value that indicates whether scripts are loaded before or after markup for the page UI is loaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-404">如果在加载 UI 标记前加载脚本，则为 <see langword="true" />；如果在加载 UI 标记后加载脚本，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-404">
              <see langword="true" /> if scripts are loaded before markup for the UI is loaded; <see langword="false" /> if scripts are loaded after markup for the UI is loaded.</span>
          </span>
          <span data-ttu-id="a6179-405">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-405">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-406"><xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A>属性确定如何在脚本<xref:System.Web.UI.ScriptManager.Scripts%2A>集合加载相对于页 UI 的标记。</span><span class="sxs-lookup"><span data-stu-id="a6179-406">The <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property determines how scripts in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection are loaded relative to the markup for the page UI.</span></span>  
  
 <span data-ttu-id="a6179-407">当<xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A>属性是`true`、`script`元素呈现在加载页面的 UI 标记之前。</span><span class="sxs-lookup"><span data-stu-id="a6179-407">When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `true`, a `script` element is rendered before the page's UI markup is loaded.</span></span> <span data-ttu-id="a6179-408">在此方案中，如果 UI 元素定义在脚本中，UI 将完全正常运行时加载。</span><span class="sxs-lookup"><span data-stu-id="a6179-408">In this scenario, if UI elements are defined in scripts, the UI will be fully functional when it loads.</span></span> <span data-ttu-id="a6179-409">但是，如果该脚本访问中为其实例尚未已创建的标记的 UI 元素，可能发生错误。</span><span class="sxs-lookup"><span data-stu-id="a6179-409">However, if the script accesses UI elements in the markup for which instances have not yet been created, an error might occur.</span></span> <span data-ttu-id="a6179-410">若要确保访问它们之前，加载了 UI 元素，处理的事件的类。</span><span class="sxs-lookup"><span data-stu-id="a6179-410">To make sure that UI elements are loaded before you access them, handle the  event of the  class.</span></span>  
  
 <span data-ttu-id="a6179-411">当<xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A>属性是`false`、`script`元素后呈现页面的 UI 标记呈现。</span><span class="sxs-lookup"><span data-stu-id="a6179-411">When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `false`, a `script` element is rendered after the page's UI markup is rendered.</span></span> <span data-ttu-id="a6179-412">在此方案中，UI 加载速度更快，但它可能不是完全正常运行如果定义其他 UI 元素的脚本具有未完成加载。</span><span class="sxs-lookup"><span data-stu-id="a6179-412">In this scenario, the UI loads more quickly, but it might not be fully functional if scripts that define additional UI elements have not finished loading.</span></span>  
  
 <span data-ttu-id="a6179-413">未设置此属性为`true`如果你设置<xref:System.Web.UI.ScriptManager.EnableCdn%2A>到`true`已。</span><span class="sxs-lookup"><span data-stu-id="a6179-413">Do not set this property to `true` if you set <xref:System.Web.UI.ScriptManager.EnableCdn%2A> to `true` already.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.Scripts" />
        <altmember cref="T:System.Web.UI.ScriptReference" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.HistoryEventArgs&gt; Navigate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.HistoryEventArgs&gt; Navigate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.Navigate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigate As EventHandler(Of HistoryEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::HistoryEventArgs ^&gt; ^ Navigate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-414">当用户点击浏览器的“后退”或“前进”按钮时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-414">Occurs when the user clicks the browser's **Back** or **Forward** button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-415">当用户单击浏览器的**回**按钮，浏览器将转到以前查看过的 Url，其中包括包含历史时间点状态数据的 Url。</span><span class="sxs-lookup"><span data-stu-id="a6179-415">When a user clicks the browser's **Back** button, the browser navigates through previously-viewed URLs, which can include URLs that contain history-point state data.</span></span> <span data-ttu-id="a6179-416">如果网页中的客户端代码检测到该 URL 包含历史记录状态数据，它将发出一个请求到服务器页。</span><span class="sxs-lookup"><span data-stu-id="a6179-416">If client code in the Web page detects that the URL contains history state data, it makes a request to the server page.</span></span> <span data-ttu-id="a6179-417">回发事件，将充当和<xref:System.Web.UI.ScriptManagerProxy>服务器控件引发`Navigate`事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-417">This acts as a postback event, and the <xref:System.Web.UI.ScriptManagerProxy> server control raises the `Navigate` event.</span></span> <span data-ttu-id="a6179-418">你可以处理此事件，并重新创建与事件使用传递的状态数据的根据需要在 Web 应用程序中的页。</span><span class="sxs-lookup"><span data-stu-id="a6179-418">You can handle this event and re-create the page as required in the Web application by using the state data that is passed with the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAsyncPostBackError">
      <MemberSignature Language="C#" Value="protected internal virtual void OnAsyncPostBackError (System.Web.UI.AsyncPostBackErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnAsyncPostBackError(class System.Web.UI.AsyncPostBackErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnAsyncPostBackError (e As AsyncPostBackErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnAsyncPostBackError(System::Web::UI::AsyncPostBackErrorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.AsyncPostBackErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6179-419">错误事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-419">The error event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-420">引发 <see cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-420">Raises the <see cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-421"><xref:System.Web.UI.ScriptManager.AsyncPostBackError>异步回发期间页错误时引发事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-421">The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks.</span></span> <span data-ttu-id="a6179-422">服务器上的错误发送给客户端的方式取决于<xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A>属性，<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>属性，且 Web.config 文件的自定义错误部分。</span><span class="sxs-lookup"><span data-stu-id="a6179-422">How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6179-423">下面的示例演示如何处理<xref:System.Web.UI.ScriptManager.AsyncPostBackError>事件设置<xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A>服务器异常错误消息的属性 （它将发送到客户端）。</span><span class="sxs-lookup"><span data-stu-id="a6179-423">The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" />
        <altmember cref="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6179-424">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-424">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-425">引发 <see cref="E:System.Web.UI.Control.Init" /> 事件并确保页面上只有一个 <see cref="T:System.Web.UI.ScriptManager" /> 控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-425">Raises the <see cref="E:System.Web.UI.Control.Init" /> event and makes sure that only one <see cref="T:System.Web.UI.ScriptManager" /> control exists on the page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6179-426">页面上存在多个 <see cref="T:System.Web.UI.ScriptManager" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-426">More than one instance of <see cref="T:System.Web.UI.ScriptManager" /> exists on the page.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="a6179-427">
            <para>在重写此方法，调用基<see cref="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)" />为局部页面呈现正确处理方法，以便脚本文件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-427">
              <para>When overriding this method, call the base <see cref="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)" /> method so that script files are correctly handled for partial-page rendering.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6179-428">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-428">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-429">引发 <see cref="E:System.Web.UI.Control.PreRender" /> 事件，并为部分页面更新注册脚本文件和服务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-429">Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event, and registers script files and services for partial-page updates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-430">有关 DOM 的信息，请参阅[文档对象模型 (DOM) 级别 1 规范](http://go.microsoft.com/fwlink/?LinkId=73305)World Wide Web Consortium (W3C) 网站上。</span><span class="sxs-lookup"><span data-stu-id="a6179-430">For information about the DOM, see the [Document Object Model (DOM) Level 1 Specification](http://go.microsoft.com/fwlink/?LinkId=73305) on the World Wide Web Consortium (W3C) Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6179-431">发出部分页面请求的浏览器至少不支持 DOM Level 1.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-431">The browser that made the partial-page request does not support at least DOM Level 1.0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="a6179-432">
            <para>在重写此方法，调用基<see cref="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)" />为局部页面呈现正确处理方法，以便脚本块和服务。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-432">
              <para>When overriding this method, call the base <see cref="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)" /> method so that script blocks and services are correctly handled for partial-page rendering.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompositeScriptReference">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveCompositeScriptReference (System.Web.UI.CompositeScriptReferenceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveCompositeScriptReference(class System.Web.UI.CompositeScriptReferenceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveCompositeScriptReference (e As CompositeScriptReferenceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveCompositeScriptReference(System::Web::UI::CompositeScriptReferenceEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.CompositeScriptReferenceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6179-433">一个表示复合脚本引用的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-433">An object that represents the composite script reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-434">引发 <see cref="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-434">Raises the <see cref="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveScriptReference">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveScriptReference (System.Web.UI.ScriptReferenceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveScriptReference(class System.Web.UI.ScriptReferenceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveScriptReference (e As ScriptReferenceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveScriptReference(System::Web::UI::ScriptReferenceEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.ScriptReferenceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="a6179-435">一个表示当前脚本的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-435">An object that represents the current script.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-436">为 <see cref="T:System.Web.UI.ScriptManager" /> 控件托管的每个脚本引用引发 <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-436">Raises the <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> event for each script reference that is managed by the <see cref="T:System.Web.UI.ScriptManager" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-437">调用此方法<xref:System.Web.UI.ScriptManager.OnPreRender%2A>事件处理程序，每次为一个<xref:System.Web.UI.ScriptReference>中<xref:System.Web.UI.ScriptManager.Scripts%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="a6179-437">This method is called by the <xref:System.Web.UI.ScriptManager.OnPreRender%2A> event handler, one time for each <xref:System.Web.UI.ScriptReference> in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection.</span></span>  
  
 <span data-ttu-id="a6179-438"><xref:System.Web.UI.ScriptManager.ResolveScriptReference>重复脚本条目已得到解决后，将引发事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-438">The <xref:System.Web.UI.ScriptManager.ResolveScriptReference> event is raised after duplicate script entries have been resolved.</span></span>  
  
 <span data-ttu-id="a6179-439">重写此方法以影响单个脚本块在回发时或在局部页面更新的行为。</span><span class="sxs-lookup"><span data-stu-id="a6179-439">Override this method to affect the behaviors of individual script blocks on postback or during partial-page updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileService">
      <MemberSignature Language="C#" Value="public System.Web.UI.ProfileServiceManager ProfileService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ProfileServiceManager ProfileService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ProfileService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProfileService As ProfileServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ProfileServiceManager ^ ProfileService { System::Web::UI::ProfileServiceManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ProfileServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-440">获取与当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例关联的 <see cref="T:System.Web.UI.ProfileServiceManager" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-440">Gets the <see cref="T:System.Web.UI.ProfileServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-441">当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例的 <see cref="T:System.Web.UI.ProfileServiceManager" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-441">The <see cref="T:System.Web.UI.ProfileServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-442"><xref:System.Web.UI.ProfileServiceManager>此属性返回的对象表示向该页面注册配置文件服务。</span><span class="sxs-lookup"><span data-stu-id="a6179-442">The <xref:System.Web.UI.ProfileServiceManager> object that is returned by this property represents the profile service that is registered with the page.</span></span> <span data-ttu-id="a6179-443">可以在中定义配置文件服务<xref:System.Web.UI.ScriptManager>控件或关联<xref:System.Web.UI.ScriptManagerProxy>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-443">The profile service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span>  
  
 <span data-ttu-id="a6179-444">你可以使用 ASP.NET 配置文件服务，或使用自定义配置文件服务。</span><span class="sxs-lookup"><span data-stu-id="a6179-444">You can use the ASP.NET profile service or use a custom profile service.</span></span> <span data-ttu-id="a6179-445">你可以在标记中添加自定义的服务，通过包括`ProfileService`内的元素`asp:ScriptManager`元素在页面上，如下面的示例中所示。</span><span class="sxs-lookup"><span data-stu-id="a6179-445">You can add the custom service in markup by including a `ProfileService` element inside the `asp:ScriptManager` element on the page, as shown in the following example.</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <ProfileService LoadProperties="propertyA,propertyB"  
    Path="MyProfileService.asmx" />  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="a6179-446">你可以以编程方式配置<xref:System.Web.UI.ProfileServiceManager>对象。</span><span class="sxs-lookup"><span data-stu-id="a6179-446">You can also programmatically configure the <xref:System.Web.UI.ProfileServiceManager> object.</span></span> <span data-ttu-id="a6179-447">注册服务<xref:System.Web.UI.ScriptManager>控件在页面的<xref:System.Web.UI.Control.PreRender>生命周期阶段。</span><span class="sxs-lookup"><span data-stu-id="a6179-447">Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <span data-ttu-id="a6179-448">表示网页历史记录状态的键/值对的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-448">A string of key/value pairs that represent the history state of the Web page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-449">处理由 <see cref="T:System.Web.UI.ScriptManager" /> 控件引发的回发事件，并加载网页的历史记录状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-449">Processes a postback event raised by the <see cref="T:System.Web.UI.ScriptManager" /> control and loads the history state of the Web page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6179-450">当 <see cref="T:System.Web.UI.ScriptManager" /> 控件回发到服务器时引发此控件的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-450">Raises events for the <see cref="T:System.Web.UI.ScriptManager" /> control when it posts back to the server.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-451"><xref:System.Web.UI.ScriptManager.RaisePostDataChangedEvent%2A>方法主要由控件开发人员用来扩展的功能<xref:System.Web.UI.ScriptManager>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-451">The <xref:System.Web.UI.ScriptManager.RaisePostDataChangedEvent%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control.</span></span> <span data-ttu-id="a6179-452">默认实现为<xref:System.Web.UI.ScriptManager>控件，会引发任何事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-452">For the default implementation of the <xref:System.Web.UI.ScriptManager> control, no events are raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterArrayDeclaration">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-453">向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个 ECMAScript (JavaScript) 数组声明以与 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内的某个控件一起使用，并将此数组添加到页面中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-453">Registers an ECMAScript (JavaScript) array declaration with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and adds the array to the page.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public static void RegisterArrayDeclaration (System.Web.UI.Control control, string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterArrayDeclaration(class System.Web.UI.Control control, string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterArrayDeclaration(System::Web::UI::Control ^ control, System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-454">正在注册数组的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-454">The control that is registering the array.</span>
          </span>
        </param>
        <param name="arrayName">
          <span data-ttu-id="a6179-455">要注册的数组的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-455">The name of the array to register.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="a6179-456">要注册的一个或多个数组值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-456">The array value or values to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-457">向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个 ECMAScript (JavaScript) 数组声明以与 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内的某个控件一起使用，并将此数组添加到页面中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-457">Registers an ECMAScript (JavaScript) array declaration with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and adds the array to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-458">你使用<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>方法注册客户端脚本数组，它是与兼容局部页面呈现，且没有任何 Microsoft Ajax 库依赖项。</span><span class="sxs-lookup"><span data-stu-id="a6179-458">You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="a6179-459">此方法注册数组时`control`表示控件内<xref:System.Web.UI.UpdatePanel>正在更新的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-459">This method registers the array when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="a6179-460">若要注册一个数组，每次异步回发发生时，使用<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-460">To register an array every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-461">如果你想要注册一个数组，其中不属于部分页面更新，如果你想要注册该数组只进行一次初始页呈现期间使用<xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-461">If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-462">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-462">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="a6179-463"><xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>方法确定是否包含在指定的名称的数组`arrayName`参数已注册。</span><span class="sxs-lookup"><span data-stu-id="a6179-463">The <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method determines whether an array with the name that is specified in the `arrayName` parameter is already registered.</span></span> <span data-ttu-id="a6179-464">因此，该方法将添加中指定的值如果`arrayValue`。</span><span class="sxs-lookup"><span data-stu-id="a6179-464">If so, the method adds the values specified in `arrayValue`.</span></span> <span data-ttu-id="a6179-465">因为要注册的数组基于<xref:System.Collections.ArrayList>类，允许重复项。</span><span class="sxs-lookup"><span data-stu-id="a6179-465">Because the array to be registered is based on the <xref:System.Collections.ArrayList> class, duplicates are allowed.</span></span> <span data-ttu-id="a6179-466">如果中的名称的已注册数组`arrayName`不存在，在创建数组中的值和`arrayValue`向其添加。</span><span class="sxs-lookup"><span data-stu-id="a6179-466">If a registered array with the name in `arrayName` does not exist, the array is created and the values in `arrayValue` are added to it.</span></span>  
  
 <span data-ttu-id="a6179-467">若要在数组中包含字符串文本，使用单引号 （'） 或转义的双引号括起来 (\\") 中`arrayValue`。</span><span class="sxs-lookup"><span data-stu-id="a6179-467">To include string literals in the array, use single quotation marks (') or escaped double quotation marks (\\") in `arrayValue`.</span></span>  
  
 <span data-ttu-id="a6179-468">请注意 JavaScript 作为数组中的分隔符将逗号 （，）。</span><span class="sxs-lookup"><span data-stu-id="a6179-468">Note that JavaScript treats a comma (,) as a delimiter in an array.</span></span> <span data-ttu-id="a6179-469">你可以通过将传递以逗号分隔的字符串中指定多个数组值`arrayValue`。</span><span class="sxs-lookup"><span data-stu-id="a6179-469">You can specify multiple array values by passing a comma-delimited string in `arrayValue`.</span></span> <span data-ttu-id="a6179-470">用逗号分隔两个项`arrayValue`等效于调用<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>方法两次，一次每个项。</span><span class="sxs-lookup"><span data-stu-id="a6179-470">Separating two items with a comma in `arrayValue` is equivalent to calling the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method two times, one time for each item.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-471">
            <paramref name="arrayName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-471">
              <paramref name="arrayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public static void RegisterArrayDeclaration (System.Web.UI.Page page, string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterArrayDeclaration(class System.Web.UI.Page page, string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterArrayDeclaration(System::Web::UI::Page ^ page, System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="a6179-472">正在注册该数组的页对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-472">The page object that is registering the array.</span>
          </span>
        </param>
        <param name="arrayName">
          <span data-ttu-id="a6179-473">要注册的数组的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-473">The name of the array to register.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="a6179-474">要注册的一个或多个数组值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-474">The array value or values to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-475">向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个 ECMAScript (JavaScript) 数组声明以与 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内的某个控件一起使用，并将此数组添加到页面中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-475">Registers an ECMAScript (JavaScript) array declaration with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and adds the array to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-476">你使用<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>方法注册客户端脚本数组，它是与兼容局部页面呈现，且没有任何 Microsoft Ajax 库依赖项。</span><span class="sxs-lookup"><span data-stu-id="a6179-476">You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="a6179-477">此方法在每次发生异步回发注册数组。</span><span class="sxs-lookup"><span data-stu-id="a6179-477">This method registers the array every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="a6179-478">若要注册的控件，位于数组<xref:System.Web.UI.UpdatePanel>控制，以便仅在更新面板时，才注册该数组，请使用<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-478">To register an array for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the array is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-479">如果你想要注册一个数组，其中不属于部分页面更新，如果你想要注册该数组只进行一次初始页呈现期间使用<xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-479">If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-480">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-480">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-481">
            <paramref name="arrayName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-481">
              <paramref name="arrayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAsyncPostBackControl">
      <MemberSignature Language="C#" Value="public void RegisterAsyncPostBackControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAsyncPostBackControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterAsyncPostBackControl(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterAsyncPostBackControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-482">要为异步回发注册的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-482">The control to register for asynchronous postbacks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-483">将控件注册为异步回发的触发器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-483">Registers a control as a trigger for asynchronous postbacks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-484"><xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>方法使您能够将 Web 服务器控件注册为触发器，以便他们执行异步回发而不是同步回发。</span><span class="sxs-lookup"><span data-stu-id="a6179-484">The <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method enables you to register Web server controls as triggers so that they perform an asynchronous postback instead of a synchronous postback.</span></span> <span data-ttu-id="a6179-485">当<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性<xref:System.Web.UI.UpdatePanel>控件设置为`true`（这是默认值），回发控件内的<xref:System.Web.UI.UpdatePanel>控件将自动注册为异步回发的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-485">When the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property of an <xref:System.Web.UI.UpdatePanel> control is set to `true` (which is the default), postback controls inside the <xref:System.Web.UI.UpdatePanel> control are automatically registered as asynchronous postback controls.</span></span>  
  
 <span data-ttu-id="a6179-486">使用<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>方法注册外部的控件<xref:System.Web.UI.UpdatePanel>为触发器为异步回发，并可能会更新面板的内容的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-486">Use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register controls outside an <xref:System.Web.UI.UpdatePanel> control as triggers for asynchronous postbacks, and to potentially update the content of an update panel.</span></span> <span data-ttu-id="a6179-487">若要更新<xref:System.Web.UI.UpdatePanel>以编程方式控制，请调用<xref:System.Web.UI.UpdatePanel.Update%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a6179-487">To update an <xref:System.Web.UI.UpdatePanel> control programmatically, call the <xref:System.Web.UI.UpdatePanel.Update%2A> method.</span></span>  
  
 <span data-ttu-id="a6179-488">你可以通过将添加触发器以声明方式`Triggers`元素<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-488">You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="a6179-489">在 Visual Studio 中，使用设计器的**UpdatePanelTrigger 集合编辑器**对话框。</span><span class="sxs-lookup"><span data-stu-id="a6179-489">In Visual Studio, use the designer's **UpdatePanelTrigger Collection Editor** dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6179-490">下面的示例演示如何调用<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>方法注册<xref:System.Web.UI.WebControls.Button>控制，以便它导致更新<xref:System.Web.UI.UpdatePanel>控件的内容。</span><span class="sxs-lookup"><span data-stu-id="a6179-490">The following example shows how to call the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register a <xref:System.Web.UI.WebControls.Button> control so that it causes an update of an <xref:System.Web.UI.UpdatePanel> control's content.</span></span> <span data-ttu-id="a6179-491"><xref:System.Web.UI.WebControls.Button>控件不是内部<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-491">The <xref:System.Web.UI.WebControls.Button> control is not inside the <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="a6179-492">显示两个按钮：`Button1`和`Button2`。</span><span class="sxs-lookup"><span data-stu-id="a6179-492">Two buttons are shown: `Button1` and `Button2`.</span></span> <span data-ttu-id="a6179-493">`Button1` 刷新面板的内容和`Button2`刷新整个页面。</span><span class="sxs-lookup"><span data-stu-id="a6179-493">`Button1` refreshes the content of the panel, and `Button2` refreshes the whole page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/CS/ScriptManager1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/VB/ScriptManager1VB.aspx#1)]  
  
 <span data-ttu-id="a6179-494">下面的示例演示如何调用<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>方法来注册用户控件，以便它导致更新<xref:System.Web.UI.UpdatePanel>控件的内容。</span><span class="sxs-lookup"><span data-stu-id="a6179-494">The following example shows how to call the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register a user control so that it causes an update of an <xref:System.Web.UI.UpdatePanel> control's content.</span></span> <span data-ttu-id="a6179-495">第一个示例演示使用用户控件的页面。</span><span class="sxs-lookup"><span data-stu-id="a6179-495">The first example shows a page using the user control.</span></span> <span data-ttu-id="a6179-496">第二个示例显示用户控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-496">The second example shows the user control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/CS/ScriptManager2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/VB/ScriptManager2VB.aspx#2)]  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-497">
            <paramref name="control" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-497">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6179-498">注册的控件不实现 <see cref="T:System.Web.UI.INamingContainer" />、<see cref="T:System.Web.UI.IPostBackDataHandler" /> 或 <see cref="T:System.Web.UI.IPostBackEventHandler" /> 接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-498">The registered control does not implement the <see cref="T:System.Web.UI.INamingContainer" />, <see cref="T:System.Web.UI.IPostBackDataHandler" />, or <see cref="T:System.Web.UI.IPostBackEventHandler" /> interfaces.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.Triggers" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-499">向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个客户端脚本块以与 <see cref="T:System.Web.UI.UpdatePanel" /> 控件中的某个控件一起使用，然后将该此脚本块添加到页面中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-499">Registers a client script block with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds the script block to the page.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptBlock (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptBlock(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptBlock(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-500">正在注册客户端脚本块的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-500">The control that is registering the client script block.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a6179-501">客户端脚本块的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-501">The type of the client script block.</span>
          </span>
          <span data-ttu-id="a6179-502">通常使用 <see langword="typeof" /> 运算符 (C#) 或 <see langword="GetType" /> 运算符 (Visual Basic) 来指定此参数，以检索正在注册此脚本的控件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-502">This parameter is usually specified by using the <see langword="typeof" /> operator (C#) or the <see langword="GetType" /> operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a6179-503">脚本块的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-503">A unique identifier for the script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="a6179-504">脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-504">The script.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="a6179-505">如果要用 <see langword="&lt;script&gt;" /> 和 <see langword="&lt;/script&gt;" /> 标记括起脚本块，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-505">
              <see langword="true" /> to enclose the script block in <see langword="&lt;script&gt;" /> and <see langword="&lt;/script&gt;" /> tags; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-506">向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个客户端脚本块以与 <see cref="T:System.Web.UI.UpdatePanel" /> 控件中的某个控件一起使用，然后将该此脚本块添加到页面中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-506">Registers a client script block with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds the script block to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-507">你使用<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>方法注册客户端脚本块兼容具有局部页面呈现，且没有任何 Microsoft Ajax 库依赖项。</span><span class="sxs-lookup"><span data-stu-id="a6179-507">You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method to register a client script block that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="a6179-508">使用此方法注册的客户端脚本块被发送到页仅当`control`表示控件内<xref:System.Web.UI.UpdatePanel>正在更新的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-508">Client script blocks that are registered by using this method are sent to the page only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="a6179-509">若要注册的脚本块每次异步回发发生时，使用<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-509">To register a script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-510">如果你想要注册不属于部分页面更新，如果你想要注册的脚本块只进行一次初始页呈现期间使用的脚本块<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-510">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-511">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-511">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="a6179-512">如果`addScriptTags`是`true`、<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>方法将添加`<script>`脚本块的标记。</span><span class="sxs-lookup"><span data-stu-id="a6179-512">If `addScriptTags` is `true`, the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds `<script>` tags around the script block.</span></span> <span data-ttu-id="a6179-513">传递`false`如果你想要创建`<script>`标记你自己，如你想要设置特定的特性`<script>`标记。</span><span class="sxs-lookup"><span data-stu-id="a6179-513">Pass `false` if you want to create `<script>` tags yourself, such as when you want to set the attributes of specific `<script>` tags.</span></span> <span data-ttu-id="a6179-514">如果`addScriptTags`是`false`和`script`参数包含多个脚本块，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a6179-514">If `addScriptTags` is `false` and the `script` parameter contains multiple script blocks, an exception is thrown.</span></span>  
  
 <span data-ttu-id="a6179-515"><xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>方法在打开后将脚本块添加到页面`<form>`标记。</span><span class="sxs-lookup"><span data-stu-id="a6179-515">The <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the page after the opening `<form>` tag.</span></span> <span data-ttu-id="a6179-516">不保证的脚本块都是与它们注册的顺序相同的输出。</span><span class="sxs-lookup"><span data-stu-id="a6179-516">The script blocks are not guaranteed to be output in the same order in which they are registered.</span></span> <span data-ttu-id="a6179-517">如果脚本块的顺序很重要，则应将脚本块连接到单个字符串 (例如，通过使用<xref:System.Text.StringBuilder>对象)，然后将它们注册为单个客户端脚本块。</span><span class="sxs-lookup"><span data-stu-id="a6179-517">If the order of the script blocks is important, concatenate your script blocks into a single string (for example, by using the <xref:System.Text.StringBuilder> object), and then register them as a single client script block.</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/CS/ScriptManager_RegisterClientScriptBlockCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/vb/ScriptManager_RegisterClientScriptBlockVB.aspx#1)]  
  
 [!code-xml[System.Web.UI.ScriptManager.RegisterClientScriptBlock#2](~/samples/snippets/common/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/Common/App_Data/Contacts.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-518">该客户端脚本块的 <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-518">The client script block <paramref name="type" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-519">\- 或 -  正在注册该脚本块的控件为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-519">\- or -  The control that is registering the script block is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6179-520">正在注册该脚本块的控件不在页面的控件树中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-520">The control that is registering the script block is not in the page's control tree.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptBlock (System.Web.UI.Page page, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptBlock(class System.Web.UI.Page page, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptBlock(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="a6179-521">正在注册客户端脚本块的页对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-521">The page object that is registering the client script block.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a6179-522">客户端脚本块的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-522">The type of the client script block.</span>
          </span>
          <span data-ttu-id="a6179-523">通常使用 <see langword="typeof" /> 运算符 (C#) 或 <see langword="GetType" /> 运算符 (Visual Basic) 来指定此参数，以检索正在注册此脚本的控件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-523">This parameter is usually specified by using the <see langword="typeof" /> operator (C#) or the <see langword="GetType" /> operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a6179-524">脚本块的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-524">A unique identifier for the script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="a6179-525">要注册的脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-525">The script to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="a6179-526">如果要用 <see langword="&lt;script&gt;" /> 和 <see langword="&lt;/script&gt;" /> 标记括起脚本块，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-526">
              <see langword="true" /> to enclose the script block in <see langword="&lt;script&gt;" /> and <see langword="&lt;/script&gt;" /> tags; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-527">向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个客户端脚本块以与 <see cref="T:System.Web.UI.UpdatePanel" /> 控件中的某个控件一起使用，然后将该此脚本块添加到页面中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-527">Registers a client script block with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds the script block to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-528">当你使用此方法注册一个脚本块时，每次异步回发发生时，被呈现该脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-528">When you register a script block by using this method, the script is rendered every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="a6179-529">若要注册脚本块内的控件<xref:System.Web.UI.UpdatePanel>控制，以便脚本已注册时，才<xref:System.Web.UI.UpdatePanel>控件更新，请使用<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-529">To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-530">如果你想要注册不属于部分页面更新，如果你想要注册的脚本块只进行一次初始页呈现期间使用的脚本块<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-530">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-531">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-531">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-532">该脚本块的 <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-532">The script block <paramref name="type" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-533">\- 或 -  正在注册该脚本块的页为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-533">\- or -  The page that is registering the script block is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-534">向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个客户端脚本文件，以便和 <see cref="T:System.Web.UI.UpdatePanel" /> 控件中的某个控件一起使用，然后将脚本文件引用添加到页面中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-534">Registers a client script file with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds a script file reference to the page.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptInclude (System.Web.UI.Control control, Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptInclude(class System.Web.UI.Control control, class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptInclude(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-535">正在注册客户端脚本文件的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-535">The control that is registering the client script file.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a6179-536">客户端脚本文件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-536">The type of the client script file.</span>
          </span>
          <span data-ttu-id="a6179-537">通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定此参数，以检索正在注册脚本的控件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-537">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a6179-538">脚本文件的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-538">A unique identifier for the script file.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="a6179-539">脚本文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-539">The URL of the script file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-540">向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个客户端脚本文件，以便和 <see cref="T:System.Web.UI.UpdatePanel" /> 控件中的某个控件一起使用，然后将脚本文件引用添加到页面中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-540">Registers a client script file with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds a script file reference to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-541">你使用<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>方法中部分页面更新注册页或属于是否正在参与的页面的客户端脚本文件。</span><span class="sxs-lookup"><span data-stu-id="a6179-541">You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method to register a client script file for a page or part of a page that is participating in partial-page updates.</span></span> <span data-ttu-id="a6179-542">使用此方法注册的客户端脚本文件发送到页面时，才`control`表示控件内<xref:System.Web.UI.UpdatePanel>正在更新的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-542">Client script files that are registered by using this method are sent to the page only when the `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="a6179-543">若要注册的脚本文件每次异步回发发生时，使用<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-543">To register a script file every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-544">如果你想要注册不属于部分页面更新，如果你想要注册的脚本块只进行一次初始页呈现期间使用的脚本块<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-544">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-545">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-545">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="a6179-546"><xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>方法注册页上的客户端脚本文件呈现`script`其开始标记中包含的元素`src`属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-546">The <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method registers a client script file on the page by rendering a `script` element whose opening tag contains a `src` attribute.</span></span> <span data-ttu-id="a6179-547">`url`参数用于设置`src`属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-547">The `url` parameter is used to set the `src` attribute.</span></span> <span data-ttu-id="a6179-548">若要解决 Url，请使用<xref:System.Web.UI.Control.ResolveClientUrl%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a6179-548">To resolve URLs, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="a6179-549">此方法使用被调用的以解析路径的 URL 的上下文。</span><span class="sxs-lookup"><span data-stu-id="a6179-549">This method uses the context of the URL it is called for to resolve the path.</span></span>  
  
 <span data-ttu-id="a6179-550">同时<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>和<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>方法呈现到浏览器的脚本文件。</span><span class="sxs-lookup"><span data-stu-id="a6179-550">Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> methods render script files to the browser.</span></span> <span data-ttu-id="a6179-551">如果已呈现具有相同类型和密钥 （对于脚本文件） 或相同类型和资源名称 （对于嵌入的资源） 的脚本，则不会再次呈现脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-551">If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already rendered, the script is not rendered again.</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterClientScriptInclude#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptInclude/CS/ScriptManager_RegisterClientScriptIncludeCS.aspx#1)]  
  
 [!code-javascript[System.Web.UI.ScriptManager.RegisterClientScriptInclude#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptInclude/CS/scripts/script_alertdiv.js#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-552">该客户端脚本文件的 <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-552">The client script file <paramref name="type" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-553">\- 或 -  正在注册该脚本文件的控件为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-553">\- or -  The control that is registering the script file is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6179-554">正在注册该脚本文件的控件不在页面的控件树中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-554">The control that is registering the script file is not in the page's control tree.</span>
          </span>
          <span data-ttu-id="a6179-555">\- 或 -  <paramref name="url" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-555">\- or -  <paramref name="url" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-556">\- 或 -  <paramref name="url" /> 为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-556">\- or -  <paramref name="url" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptInclude (System.Web.UI.Page page, Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptInclude(class System.Web.UI.Page page, class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptInclude(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="a6179-557">正在注册客户端脚本文件的页对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-557">The page object that is registering the client script file.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a6179-558">客户端脚本文件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-558">The type of the client script file.</span>
          </span>
          <span data-ttu-id="a6179-559">通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定此参数，以检索正在注册脚本的控件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-559">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a6179-560">脚本文件的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-560">A unique identifier for the script file.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="a6179-561">脚本文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-561">The URL of the script file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-562">每次发生异步回发时都向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册客户端脚本，然后将一个脚本文件引用添加到页面中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-562">Registers client script with the <see cref="T:System.Web.UI.ScriptManager" /> control every time that an asynchronous postback occurs, and then adds a script file reference to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-563">使用此方法注册的脚本文件时，被呈现该脚本每次发生异步回发。</span><span class="sxs-lookup"><span data-stu-id="a6179-563">When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="a6179-564">要注册脚本文件的控件，位于<xref:System.Web.UI.UpdatePanel>控制，以便脚本已注册时，才<xref:System.Web.UI.UpdatePanel>控件更新，请使用<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-564">To register a script file for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-565">如果你想要注册不属于部分页面更新，如果你想要注册的脚本块只进行一次初始页呈现期间使用的脚本块<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-565">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-566">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-566">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-567">该客户端脚本文件的 <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-567">The client script file <paramref name="type" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-568">\- 或 -  正在注册该脚本文件的页为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-568">\- or -  The page that is registering the script file is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6179-569">
            <paramref name="url" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-569">
              <paramref name="url" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-570">\- 或 -  <paramref name="url" /> 为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-570">\- or -  <paramref name="url" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptResource">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-571">向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册嵌入程序集中的客户端脚本，以便和正在参与局部页面呈现的控件一起使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-571">Registers client script that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptResource (System.Web.UI.Control control, Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptResource(class System.Web.UI.Control control, class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptResource(System::Web::UI::Control ^ control, Type ^ type, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-572">正在注册脚本的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-572">The control that is registering the script.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a6179-573">客户端脚本的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-573">The type of the client script.</span>
          </span>
          <span data-ttu-id="a6179-574">通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定此参数，以检索正在注册脚本的控件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-574">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="a6179-575">资源的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-575">An identifier for the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-576">向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册嵌入程序集中的客户端脚本，以便和正在参与局部页面呈现的控件一起使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-576">Registers the client script that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-577">你使用<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>方法以注册与局部页面呈现，兼容的脚本没有任何 Microsoft Ajax 库依赖项。</span><span class="sxs-lookup"><span data-stu-id="a6179-577">You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method to register a script that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="a6179-578">注册使用此方法注册的脚本资源时，才`control`表示控件内<xref:System.Web.UI.UpdatePanel>更新的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-578">Script resources that are registered by using this method are registered only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is updated.</span></span> <span data-ttu-id="a6179-579">若要注册的脚本每次异步回发发生时，使用<xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-579">To register a script every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-580">如果你想要注册不属于部分页面更新，如果你想要注册的脚本块只进行一次初始页呈现期间使用的脚本块<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-580">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-581">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-581">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="a6179-582"><xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>当从程序集的资源访问的 HTTP 处理程序通过使用方法。</span><span class="sxs-lookup"><span data-stu-id="a6179-582">The <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method is used when resources from assemblies are accessed through an HTTP handler.</span></span> <span data-ttu-id="a6179-583">此方法包含的内容中的资源 URL`script`元素。</span><span class="sxs-lookup"><span data-stu-id="a6179-583">This method includes the content of the resource URL in a `script` element.</span></span>  
  
 <span data-ttu-id="a6179-584">同时<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>和<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>方法加载到浏览器中的脚本文件。</span><span class="sxs-lookup"><span data-stu-id="a6179-584">Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method load script files into the browser.</span></span> <span data-ttu-id="a6179-585">如果已加载具有相同类型和密钥 （对于脚本文件） 或相同类型和资源名称 （对于嵌入的资源） 的脚本，脚本不会重新加载。</span><span class="sxs-lookup"><span data-stu-id="a6179-585">If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already loaded, the script is not reloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-586">该客户端资源的 <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-586">The client resource <paramref name="type" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-587">\- 或 -  正在注册该脚本的控件为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-587">\- or -  The control that is registering the script is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6179-588">正在注册该脚本的控件不在页面的控件树中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-588">The control that is registering the script is not in the page's control tree.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptResource (System.Web.UI.Page page, Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptResource(class System.Web.UI.Page page, class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptResource(System::Web::UI::Page ^ page, Type ^ type, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="a6179-589">正在注册脚本的页对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-589">The page object that is registering the script.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a6179-590">客户端脚本的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-590">The type of the client script.</span>
          </span>
          <span data-ttu-id="a6179-591">通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定此参数，以检索正在注册脚本的控件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-591">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="a6179-592">资源的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-592">An identifier for the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-593">每次发生回发时都向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册嵌入程序集中的客户端脚本文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-593">Registers a client script file that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control every time that a postback occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-594">使用此方法注册的脚本文件时，被呈现该脚本每次发生异步回发。</span><span class="sxs-lookup"><span data-stu-id="a6179-594">When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="a6179-595">以注册的脚本的控件，位于<xref:System.Web.UI.UpdatePanel>控制，以便注册了脚本时，才<xref:System.Web.UI.UpdatePanel>控件更新，请使用<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-595">To register a script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-596">如果你想要注册不属于部分页面更新，如果你想要注册的脚本块只进行一次初始页呈现期间使用的脚本块<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-596">If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-597">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-597">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-598">该客户端资源的 <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-598">The client resource <paramref name="type" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-599">\- 或 -  正在注册该脚本的页为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-599">\- or -  The page that is registering the script is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterDataItem">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-600">在局部页面呈现期间将自定义数据发送到多个控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-600">Sends custom data to controls during partial-page rendering.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterDataItem">
      <MemberSignature Language="C#" Value="public void RegisterDataItem (System.Web.UI.Control control, string dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDataItem(class System.Web.UI.Control control, string dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDataItem(System::Web::UI::Control ^ control, System::String ^ dataItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="dataItem" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-601">正在接收数据的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-601">The control that is receiving the data.</span>
          </span>
        </param>
        <param name="dataItem">
          <span data-ttu-id="a6179-602">发送到控件的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-602">The data that is sent to the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-603">在局部页面呈现期间将自定义数据发送到某个控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-603">Sends custom data to a control during partial-page rendering.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-604">使用<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>方法将数据发送从服务器到客户端异步回发，而不考虑是否接收数据的控件位于期间<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-604">Use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 <span data-ttu-id="a6179-605"><xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>可以仅在异步回发期间调用方法。</span><span class="sxs-lookup"><span data-stu-id="a6179-605">The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback.</span></span> <span data-ttu-id="a6179-606">若要确定是否异步回发，请使用<xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-606">To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property.</span></span> <span data-ttu-id="a6179-607">此方法调用采用名为的参数的重载`isJsonSerialized`设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="a6179-607">This method invokes the overload that takes a parameter named `isJsonSerialized` that is set to `false`.</span></span> <span data-ttu-id="a6179-608">当`isJsonSerialized`参数设置为`false`，该字符串未序列化 JavaScript 对象表示法 (JSON)。</span><span class="sxs-lookup"><span data-stu-id="a6179-608">When the `isJsonSerialized` parameter is set to `false`, the string is not serialized as JavaScript Object Notation (JSON).</span></span> <span data-ttu-id="a6179-609">有关 JSON 格式的详细信息，请参阅[JSON 简介](http://go.microsoft.com/fwlink/?LinkId=77297)Web 站点。</span><span class="sxs-lookup"><span data-stu-id="a6179-609">For more information about the JSON format, see the [Introducing JSON](http://go.microsoft.com/fwlink/?LinkId=77297) Web site.</span></span>  
  
 <span data-ttu-id="a6179-610">注册到的数据项<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>方法可以访问客户端脚本，在过程中、 和的对象的事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-610">The data items that are registered with the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object.</span></span> <span data-ttu-id="a6179-611">在处理这些事件时，事件参数对象将传入的自定义数据。</span><span class="sxs-lookup"><span data-stu-id="a6179-611">When you handle these events, the custom data is passed in an event argument object.</span></span> <span data-ttu-id="a6179-612">例如，如果为事件提供一个处理程序，在类中，公开一个属性传递的自定义数据。</span><span class="sxs-lookup"><span data-stu-id="a6179-612">For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6179-613">下面的示例演示如何将数据发送到两个<xref:System.Web.UI.WebControls.Label>期间异步回发页面上的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-613">The following example shows how to send data to two <xref:System.Web.UI.WebControls.Label> controls on a page during an asynchronous postback.</span></span> <span data-ttu-id="a6179-614"><xref:System.Web.UI.WebControls.Label>控件不是内部<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-614">The <xref:System.Web.UI.WebControls.Label> controls are not inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6179-615">此示例中未发送的数据为仅用于说明目的。</span><span class="sxs-lookup"><span data-stu-id="a6179-615">The data that is sent in this example is for illustration only.</span></span> <span data-ttu-id="a6179-616">在实际应用中，你将使用<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>方法以从服务器中发送自定义数据。</span><span class="sxs-lookup"><span data-stu-id="a6179-616">In a real-world application, you would use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send custom data from the server.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/CS/ScriptManagerRegisterDataItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/VB/ScriptManagerRegisterDataItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-617">
            <paramref name="control" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-617">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6179-618">在回发期间调用 <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-618">The <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> method is called during a postback.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6179-619">已为 <paramref name="control" /> 注册 <paramref name="dataItem" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-619">
              <paramref name="dataItem" /> is already registered for <paramref name="control" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDataItem">
      <MemberSignature Language="C#" Value="public void RegisterDataItem (System.Web.UI.Control control, string dataItem, bool isJsonSerialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDataItem(class System.Web.UI.Control control, string dataItem, bool isJsonSerialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDataItem(System::Web::UI::Control ^ control, System::String ^ dataItem, bool isJsonSerialized);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="dataItem" Type="System.String" />
        <Parameter Name="isJsonSerialized" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-620">正在接收数据的页控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-620">The page control that is receiving the data.</span>
          </span>
        </param>
        <param name="dataItem">
          <span data-ttu-id="a6179-621">发送到控件的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-621">The data that is sent to the control.</span>
          </span>
        </param>
        <param name="isJsonSerialized">
          <span data-ttu-id="a6179-622">如果要将 <c>dataItem</c> 序列化为 JSON，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-622">
              <see langword="true" /> to indicate that <c>dataItem</c> is serialized as JSON; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-623">在局部页面呈现期间，将自定义数据发送到某个控件，并指示数据是否为 JavaScript 对象表示法 (JSON) 格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-623">Sends custom data to a control during partial-page rendering, and indicates whether the data is in JavaScript Object Notation (JSON) format.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-624">你使用<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>方法将数据发送从服务器到客户端异步回发，而不考虑是否接收数据的控件位于期间<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-624">You use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 <span data-ttu-id="a6179-625">如果`dataItem`你注册的参数`control`未序列化为 JSON，设置`isJsonSerialized`参数`false`。</span><span class="sxs-lookup"><span data-stu-id="a6179-625">If the `dataItem` parameter that you register for `control` is not serialized as JSON, set the `isJsonSerialized` parameter to `false`.</span></span> <span data-ttu-id="a6179-626">这样就避免了需要为每个字符串发送到客户端使用该函数。</span><span class="sxs-lookup"><span data-stu-id="a6179-626">This avoids the need to use the  function for each string that is sent to the client.</span></span> <span data-ttu-id="a6179-627">有关 JSON 格式的详细信息，请参阅[JSON 简介](http://go.microsoft.com/fwlink/?LinkId=77297)Web 站点。</span><span class="sxs-lookup"><span data-stu-id="a6179-627">For more information about the JSON format, see the [Introducing JSON](http://go.microsoft.com/fwlink/?LinkId=77297) Web site.</span></span>  
  
 <span data-ttu-id="a6179-628"><xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>可以仅在异步回发期间调用方法。</span><span class="sxs-lookup"><span data-stu-id="a6179-628">The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback.</span></span> <span data-ttu-id="a6179-629">若要确定是否异步回发，请使用<xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-629">To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property.</span></span>  
  
 <span data-ttu-id="a6179-630">通过使用已注册的数据项<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>方法可以访问客户端脚本，在过程中、 和的对象的事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-630">The data items that are registered by using the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object.</span></span> <span data-ttu-id="a6179-631">在处理这些事件时，事件参数对象将传入的自定义数据。</span><span class="sxs-lookup"><span data-stu-id="a6179-631">When you handle these events, the custom data is passed in an event argument object.</span></span> <span data-ttu-id="a6179-632">例如，如果为事件提供一个处理程序，在类中，公开一个属性传递的自定义数据。</span><span class="sxs-lookup"><span data-stu-id="a6179-632">For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6179-633">下面的示例演示如何将数据发送到两个<xref:System.Web.UI.WebControls.Label>期间异步回发页面上的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-633">The following example shows how to send data to two <xref:System.Web.UI.WebControls.Label> controls on a page during an asynchronous postback.</span></span> <span data-ttu-id="a6179-634"><xref:System.Web.UI.WebControls.Label>控件不是内部<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-634">The <xref:System.Web.UI.WebControls.Label> controls are not inside an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="a6179-635">此示例演示不采用重载`isJsonSerialized`参数。</span><span class="sxs-lookup"><span data-stu-id="a6179-635">This example shows the overload that does not take the `isJsonSerialized` parameter.</span></span> <span data-ttu-id="a6179-636">否则，用于检索对象的属性的过程是相同好像未使用该重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-636">Otherwise, the procedure for retrieving the  property of the  object is the same as if you did not use that overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6179-637">此示例中未发送的数据为仅用于说明目的。</span><span class="sxs-lookup"><span data-stu-id="a6179-637">The data that is sent in this example is for illustration only.</span></span> <span data-ttu-id="a6179-638">在实际应用中，你将使用<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>方法以从服务器中发送自定义数据。</span><span class="sxs-lookup"><span data-stu-id="a6179-638">In a real-world application, you would use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send custom data from the server.</span></span> <span data-ttu-id="a6179-639">例如，你无法使用数据项发送有关是否隐藏或显示未内的元素的客户端信息<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-639">For example, you could use the data item to send information about whether to hide or show client elements that are not inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/CS/ScriptManagerRegisterDataItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/VB/ScriptManagerRegisterDataItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-640">
            <paramref name="control" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-640">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6179-641">在回发期间调用 <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-641">The <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> method is called during a postback.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6179-642">已为 <paramref name="control" /> 注册 <paramref name="dataItem" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-642">
              <paramref name="dataItem" /> is already registered for <paramref name="control" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDispose">
      <MemberSignature Language="C#" Value="public void RegisterDispose (System.Web.UI.Control control, string disposeScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDispose(class System.Web.UI.Control control, string disposeScript) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDispose(System::Web::UI::Control ^ control, System::String ^ disposeScript);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="disposeScript" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-643">使用 <see langword="dispose" /> 脚本的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-643">The control that the <see langword="dispose" /> script is for.</span>
          </span>
        </param>
        <param name="disposeScript">
          <span data-ttu-id="a6179-644">
            <see langword="dispose" /> 脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-644">The <see langword="dispose" /> script.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-645">为 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内的某个控件注册一个 <see langword="dispose" /> 脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-645">Registers a <see langword="dispose" /> script for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span>
          </span>
          <span data-ttu-id="a6179-646">在更新或删除 <see cref="T:System.Web.UI.UpdatePanel" /> 控件时会执行脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-646">The script is executed when the <see cref="T:System.Web.UI.UpdatePanel" /> control is updated or deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-647">使用<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>方法注册`dispose`控件内的脚本<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-647">Use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method to register `dispose` scripts for controls that are inside an <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="a6179-648">在异步回发，<xref:System.Web.UI.UpdatePanel>控件可以更新、 删除，或者创建。</span><span class="sxs-lookup"><span data-stu-id="a6179-648">During asynchronous postbacks, <xref:System.Web.UI.UpdatePanel> controls can be updated, deleted, or created.</span></span> <span data-ttu-id="a6179-649">当更新或删除任何面板`dispose`内的控件注册的脚本<xref:System.Web.UI.UpdatePanel>调用。</span><span class="sxs-lookup"><span data-stu-id="a6179-649">When a panel is updated or deleted, any `dispose` scripts that are registered for controls that are inside the <xref:System.Web.UI.UpdatePanel> are called.</span></span> <span data-ttu-id="a6179-650">在典型的页面开发方案中，则不需要调用<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a6179-650">In typical page development scenarios, you do not have to call the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method.</span></span>  
  
 <span data-ttu-id="a6179-651"><xref:System.Web.UI.ScriptManager.RegisterDispose%2A>方法旨在用于由控件开发人员，以注册脚本，或者创建继承的控件<xref:System.Web.UI.IScriptControl>接口。</span><span class="sxs-lookup"><span data-stu-id="a6179-651">The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method is intended for use by control developers to register script or create controls that inherit from the <xref:System.Web.UI.IScriptControl> interface.</span></span> <span data-ttu-id="a6179-652">例如，你可能使用`dispose`脚本。 如果你通过使用合成开发的客户端控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-652">For example, you might use a `dispose` script if you develop a client control by using composition.</span></span> <span data-ttu-id="a6179-653">在您的控件，你实现<xref:System.Web.UI.IScriptControl>和呈现单独的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-653">In your control, you implement <xref:System.Web.UI.IScriptControl> and render individual controls.</span></span> <span data-ttu-id="a6179-654">你注册`dispose`任何的方法项都不对应于定义的客户端组件如`Sys.TextBox`。</span><span class="sxs-lookup"><span data-stu-id="a6179-654">You register the `dispose` method of any item that does not correspond to a defined client component such as `Sys.TextBox`.</span></span> <span data-ttu-id="a6179-655">如果你自定义控件撰写对应于 Microsoft Ajax 库中的客户端组件的元素，不需要注册`dispose`脚本，因为`dispose`自动调用。</span><span class="sxs-lookup"><span data-stu-id="a6179-655">If your custom control composes elements that correspond to client components in the Microsoft Ajax Library, you do not have to register a `dispose` script, because `dispose` is called automatically.</span></span> <span data-ttu-id="a6179-656">因此，使用<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>客户端组件，是 Microsoft Ajax 库的一部分且必须在不再使用组件时释放资源的方法。</span><span class="sxs-lookup"><span data-stu-id="a6179-656">Therefore, use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method for client components that are part of the Microsoft Ajax Library and that have to free resources when a component is no longer used.</span></span>  
  
 <span data-ttu-id="a6179-657"><xref:System.Web.UI.ScriptManager.RegisterDispose%2A>方法可以多次调用控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-657">The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method can be called multiple times for a control.</span></span> <span data-ttu-id="a6179-658">聚合多个脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-658">Multiple scripts are aggregated.</span></span> <span data-ttu-id="a6179-659">释放脚本的顺序匹配脚本已注册的顺序。</span><span class="sxs-lookup"><span data-stu-id="a6179-659">The order of disposing scripts matches the order in which the scripts were registered.</span></span>  
  
 <span data-ttu-id="a6179-660">如果你注册`dispose`脚本的控件，将不在<xref:System.Web.UI.UpdatePanel>控件，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="a6179-660">If you register a `dispose` script for a control that is not in an <xref:System.Web.UI.UpdatePanel> control, an exception is thrown.</span></span> <span data-ttu-id="a6179-661">`dispose`脚本调用之间的类和事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-661">The `dispose` script is called between the  and  events of the  class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-662">
            <paramref name="control" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-662">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-663">\- 或 -  <paramref name="disposeScript" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-663">\- or -  <paramref name="disposeScript" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6179-664">页面上找不到 <paramref name="control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-664">
              <paramref name="control" /> is not found on the page.</span>
          </span>
          <span data-ttu-id="a6179-665">\- 或 -  <paramref name="control" /> 不在 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-665">\- or -  <paramref name="control" /> is not inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.IScriptControl" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public static void RegisterExpandoAttribute (System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterExpandoAttribute(class System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterExpandoAttribute(System::Web::UI::Control ^ control, System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-666">正在注册 expando 特性的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-666">The control that is registering the expando attribute.</span>
          </span>
        </param>
        <param name="controlId">
          <span data-ttu-id="a6179-667">页中包含自定义特性的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-667">The control that contains the custom attribute on the page.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="a6179-668">要注册的自定义特性的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-668">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="a6179-669">自定义特性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-669">The value of the custom attribute.</span>
          </span>
        </param>
        <param name="encode">
          <span data-ttu-id="a6179-670">如果要编码正在注册的自定义特性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-670">
              <see langword="true" /> to encode the custom attribute that is being registered; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-671">在 <see cref="T:System.Web.UI.ScriptManager" /> 控件中，将名称/值对注册为指定控件的自定义 (expando) 特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-671">Registers a name/value pair with the <see cref="T:System.Web.UI.ScriptManager" /> control as a custom (expando) attribute of a specified control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-672">你使用<xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>方法注册的控件，与局部页面呈现，兼容的自定义 (expando) 属性没有任何 Microsoft Ajax 库依赖项。</span><span class="sxs-lookup"><span data-stu-id="a6179-672">You use the <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> method to register a custom (expando) property for a control that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span>  
  
 <span data-ttu-id="a6179-673"><xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>方法注册为指定的控件的自定义特性的名称/值对。</span><span class="sxs-lookup"><span data-stu-id="a6179-673">The <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom attribute for the specified control.</span></span> <span data-ttu-id="a6179-674">属性是动态设置从 ECMAScript (JavaScript) 保持与呈现的控件的标记 XHTML 兼容性。</span><span class="sxs-lookup"><span data-stu-id="a6179-674">The property is set dynamically from ECMAScript (JavaScript) to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="a6179-675">设置`encode`到`true`如果你有动态属性的值中的任何字符进行转义。</span><span class="sxs-lookup"><span data-stu-id="a6179-675">Set `encode` to `true` if you have to escape any characters in the dynamic property's value.</span></span>  
  
 <span data-ttu-id="a6179-676">如果未找到动态属性将添加到控件，出现脚本错误。</span><span class="sxs-lookup"><span data-stu-id="a6179-676">If the control to which the dynamic property will be added is not found, a script error occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-677">
            <paramref name="control" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-677">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6179-678">
            <paramref name="control" /> 不在该页面的控件树中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-678">
              <paramref name="control" /> is not in the page's control tree.</span>
          </span>
          <span data-ttu-id="a6179-679">\- 或 -  <paramref name="controlId" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-679">\- or -  <paramref name="controlId" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-680">\- 或 -  <paramref name="controlId" /> 为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-680">\- or -  <paramref name="controlId" /> is empty.</span>
          </span>
          <span data-ttu-id="a6179-681">\- 或 -  <paramref name="attributeName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-681">\- or -  <paramref name="attributeName" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-682">\- 或 -  <paramref name="attributeName" /> 为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-682">\- or -  <paramref name="attributeName" /> is empty.</span>
          </span>
          <span data-ttu-id="a6179-683">\- 或 -  <paramref name="attributeName" /> 已注册。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-683">\- or -  <paramref name="attributeName" /> is already registered.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExtenderControl&lt;TExtenderControl&gt;">
      <MemberSignature Language="C#" Value="public void RegisterExtenderControl&lt;TExtenderControl&gt; (TExtenderControl extenderControl, System.Web.UI.Control targetControl) where TExtenderControl : System.Web.UI.Control, System.Web.UI.IExtenderControl;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterExtenderControl&lt;(class System.Web.UI.Control, class System.Web.UI.IExtenderControl) TExtenderControl&gt;(!!TExtenderControl extenderControl, class System.Web.UI.Control targetControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExtenderControl(Of TExtenderControl As {Control, IExtenderControl}) (extenderControl As TExtenderControl, targetControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExtenderControl&gt;&#xA; where TExtenderControl : System::Web::UI::Control, System::Web::UI::IExtenderControl virtual void RegisterExtenderControl(TExtenderControl extenderControl, System::Web::UI::Control ^ targetControl);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterExtenderControl``1(``0,System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExtenderControl">
          <Constraints>
            <BaseTypeName>System.Web.UI.Control</BaseTypeName>
            <InterfaceName>System.Web.UI.IExtenderControl</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="extenderControl" Type="TExtenderControl" />
        <Parameter Name="targetControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <typeparam name="TExtenderControl">
          <span data-ttu-id="a6179-684">实现 <see cref="T:System.Web.UI.IExtenderControl" /> 接口的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-684">A control that implements the <see cref="T:System.Web.UI.IExtenderControl" /> interface.</span>
          </span>
        </typeparam>
        <param name="extenderControl">
          <span data-ttu-id="a6179-685">要注册的扩展程序控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-685">The extender control to register.</span>
          </span>
        </param>
        <param name="targetControl">
          <span data-ttu-id="a6179-686">扩展程序控件扩展的脚本控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-686">The script control that the extender control extends.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-687">向当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例注册扩展程序控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-687">Registers an extender control with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-688">此方法主要适用于由控件开发人员使用。</span><span class="sxs-lookup"><span data-stu-id="a6179-688">This method is primarily for use by control developers.</span></span> <span data-ttu-id="a6179-689">调用<xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A>方法在一个自定义 ASP.NET Ajax 扩展程序控件从其`onInit`事件处理程序以注册该控件使用页。</span><span class="sxs-lookup"><span data-stu-id="a6179-689">Call the <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method from a custom ASP.NET Ajax extender control during its `onInit` event handler to register that control with the page.</span></span> <span data-ttu-id="a6179-690">若要参与局部页面呈现，必须注册 ASP.NET Ajax 扩展程序控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-690">An ASP.NET Ajax extender control must be registered to participate in partial-page rendering.</span></span>  
  
 <span data-ttu-id="a6179-691"><xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A>方法将指定的扩展程序控件添加到扩展程序控件和它们扩展的目标脚本控件的内部列表。</span><span class="sxs-lookup"><span data-stu-id="a6179-691">The <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method adds the specified extender control to an internal list of extender controls and the target script controls they extend.</span></span> <span data-ttu-id="a6179-692">此列表处理期间<xref:System.Web.UI.Control.PreRender>事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-692">This list is processed during the <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-693">
            <paramref name="extenderControl" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-693">
              <paramref name="extenderControl" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-694">\- 或 -  <paramref name="targetControl" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-694">\- or -  <paramref name="targetControl" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterHiddenField">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-695">注册隐藏字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-695">Registers a hidden field.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public static void RegisterHiddenField (System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterHiddenField(class System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterHiddenField(System::Web::UI::Control ^ control, System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-696">正在注册隐藏字段的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-696">The control that is registering the hidden field.</span>
          </span>
        </param>
        <param name="hiddenFieldName">
          <span data-ttu-id="a6179-697">要注册的隐藏字段的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-697">The name of the hidden field to register.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="a6179-698">隐藏字段的初始值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-698">The initial value of the hidden field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-699">针对 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内的控件，向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册隐藏字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-699">Registers a hidden field with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-700">你使用<xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>方法注册的隐藏的字段的与兼容局部页面呈现，且没有任何 Microsoft Ajax 库依赖项。</span><span class="sxs-lookup"><span data-stu-id="a6179-700">You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="a6179-701">此方法注册隐藏的字段，当正在注册字段控件<xref:System.Web.UI.UpdatePanel>正在更新的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-701">This method registers the hidden field when the control that is registering the field is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="a6179-702">若要注册隐藏的字段每次异步回发发生时，使用<xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-702">To register a hidden field every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-703">如果你想要注册不属于部分页面更新，如果你想要注册的隐藏的字段仅一次初始页呈现期间使用的隐藏的字段<xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-703">If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-704">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-704">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="a6179-705"><xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>方法创建一个隐藏`input`上呈现的 HTML 页面的元素。</span><span class="sxs-lookup"><span data-stu-id="a6179-705">The <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method creates a hidden `input` element on the rendered HTML page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-706">
            <paramref name="control" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-706">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-707">\- 或 -  <paramref name="hiddenFieldName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-707">\- or -  <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6179-708">
            <paramref name="control" /> 不在该页面的控件树中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-708">
              <paramref name="control" /> is not in the page's control tree.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public static void RegisterHiddenField (System.Web.UI.Page page, string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterHiddenField(class System.Web.UI.Page page, string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterHiddenField(System::Web::UI::Page ^ page, System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="a6179-709">正在注册隐藏字段的页对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-709">The page object that is registering the hidden field.</span>
          </span>
        </param>
        <param name="hiddenFieldName">
          <span data-ttu-id="a6179-710">要注册的隐藏字段的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-710">The name of the hidden field to register.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="a6179-711">隐藏字段的初始值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-711">The initial value of the hidden field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-712">在每次异步回发期间向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册隐藏字段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-712">Registers a hidden field with the <see cref="T:System.Web.UI.ScriptManager" /> control during every asynchronous postback.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-713">你使用<xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>方法注册的隐藏的字段的与兼容局部页面呈现，且没有任何 Microsoft Ajax 库依赖项。</span><span class="sxs-lookup"><span data-stu-id="a6179-713">You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="a6179-714">此方法在每次发生异步回发注册隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="a6179-714">This method registers the hidden field every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="a6179-715">若要注册隐藏的字段的控件，位于<xref:System.Web.UI.UpdatePanel>控制，以便仅在更新面板时，才注册该字段，请使用<xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-715">To register a hidden field for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the field is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-716">如果你想要注册不属于部分页面更新，如果你想要注册的隐藏的字段仅一次初始页呈现期间使用的隐藏的字段<xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-716">If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-717">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-717">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-718">
            <paramref name="page" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-718">
              <paramref name="page" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-719">\- 或 -  <paramref name="hiddenFieldName" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-719">\- or -  <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterNamedClientScriptResource">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-720">按资源名称向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册嵌入程序集中的客户端脚本，以便和正在参与局部页面呈现的控件一起使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-720">Registers client script by resource name that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterNamedClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterNamedClientScriptResource (System.Web.UI.Control control, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterNamedClientScriptResource(class System.Web.UI.Control control, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterNamedClientScriptResource(System::Web::UI::Control ^ control, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-721">正在注册脚本的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-721">The control that is registering the script.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="a6179-722">资源的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-722">An identifier for the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-723">按资源名称向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册嵌入程序集中的客户端脚本，以便和正在参与局部页面呈现的控件一起使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-723">Registers client script by resource name that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterNamedClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterNamedClientScriptResource (System.Web.UI.Page page, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterNamedClientScriptResource(class System.Web.UI.Page page, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterNamedClientScriptResource(System::Web::UI::Page ^ page, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="a6179-724">正在注册脚本的页对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-724">The page object that is registering the script.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="a6179-725">资源的标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-725">An identifier for the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-726">按资源名称向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册嵌入程序集中的客户端脚本，以便和正在参与局部页面呈现的控件一起使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-726">Registers client script by resource name that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterOnSubmitStatement">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-727">注册在提交表单时执行的 ECMAScript (JavaScript) 代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-727">Registers ECMAScript (JavaScript) code that is executed when the form is submitted.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public static void RegisterOnSubmitStatement (System.Web.UI.Control control, Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterOnSubmitStatement(class System.Web.UI.Control control, class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterOnSubmitStatement(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-728">正在注册 <see langword="onsubmit" /> 语句的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-728">The control that is registering the <see langword="onsubmit" /> statement.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a6179-729">客户端脚本语句的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-729">The type of the client script statement.</span>
          </span>
          <span data-ttu-id="a6179-730">通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定此参数，以检索正在注册脚本的控件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-730">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a6179-731">脚本语句的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-731">A unique identifier for the script statement.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="a6179-732">要注册的脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-732">The script to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-733">针对与 <see cref="T:System.Web.UI.UpdatePanel" /> 控件一起使用的控件，向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册提交表单时执行的 ECMAScript (JavaScript) 代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-733">Registers ECMAScript (JavaScript) code with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is used with an <see cref="T:System.Web.UI.UpdatePanel" /> control that is executed when the form is submitted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-734"><xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>将添加在提交表单时之前, 执行的脚本它可让你修改提交或取消它。</span><span class="sxs-lookup"><span data-stu-id="a6179-734">The <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> adds script that is executed before the form is submitted, which lets you modify the submission or cancel it.</span></span>  
  
 <span data-ttu-id="a6179-735">你使用<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>方法呈现`onsubmit`语句与局部页面呈现兼容并具有无 Microsoft Ajax 库依赖项。</span><span class="sxs-lookup"><span data-stu-id="a6179-735">You use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> method to render an `onsubmit` statement that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="a6179-736">使用此方法注册的 JavaScript 代码发送到页面中，仅当正在注册该语句的控件内时，才<xref:System.Web.UI.UpdatePanel>正在更新的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-736">JavaScript code that is registered by using this method is sent to the page only when the control that is registering the statement is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="a6179-737">若要向每个异步回发注册代码，请使用<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-737">To register code with every asynchronous postback, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-738">如果你想要注册不属于部分页面更新，如果你想要注册该代码仅一次初始页呈现期间使用的 JavaScript 代码<xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-738">If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-739">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-739">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="a6179-740">*脚本*参数<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>方法可包含使用分号 （;） 分隔的多个脚本命令。</span><span class="sxs-lookup"><span data-stu-id="a6179-740">The *script* parameter of the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands that are delimited by using semicolons (;).</span></span>  
  
 <span data-ttu-id="a6179-741">有关 HTML 窗体的详细信息和`onsubmit`事件，请参阅[World Wide Web Consortium (W3C) 网站](http://go.microsoft.com/fwlink/?linkid=37125)。</span><span class="sxs-lookup"><span data-stu-id="a6179-741">For more information about HTML forms and the `onsubmit` event, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-742">
            <paramref name="control" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-742">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-743">\- 或 -  <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-743">\- or -  <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6179-744">
            <paramref name="control" /> 不在该页面的控件树中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-744">
              <paramref name="control" /> is not in the page's control tree.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public static void RegisterOnSubmitStatement (System.Web.UI.Page page, Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterOnSubmitStatement(class System.Web.UI.Page page, class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterOnSubmitStatement(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="a6179-745">正在注册 <see langword="onsubmit" /> 语句的页对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-745">The page object that is registering the <see langword="onsubmit" /> statement.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a6179-746">客户端脚本语句的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-746">The type of the client script statement.</span>
          </span>
          <span data-ttu-id="a6179-747">通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定此参数，以检索正在注册脚本的控件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-747">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a6179-748">脚本语句的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-748">A unique identifier for the script statement.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="a6179-749">要注册的脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-749">The script to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-750">针对与 <see cref="T:System.Web.UI.UpdatePanel" /> 控件一起使用的控件，向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册提交表单时执行的 ECMAScript (JavaScript) 代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-750">Registers ECMAScript (JavaScript) code with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is used with an <see cref="T:System.Web.UI.UpdatePanel" /> control that is executed when the form is submitted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-751">使用此方法注册 JavaScript 代码将导致脚本要包含每次发生异步回发。</span><span class="sxs-lookup"><span data-stu-id="a6179-751">Registering JavaScript code with this method causes the script to be included every time that an asynchronous postback occurs.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a6179-752">从任何早期异步回发的代码不会删除。</span><span class="sxs-lookup"><span data-stu-id="a6179-752">Code from any earlier asynchronous postbacks is not removed.</span></span> <span data-ttu-id="a6179-753">新的异步回发将代码附加到任何现有代码，以`onsubmit`语句。</span><span class="sxs-lookup"><span data-stu-id="a6179-753">New asynchronous postbacks append code to any existing code for the `onsubmit` statement.</span></span>  
  
 <span data-ttu-id="a6179-754">可以注册在控件内的代码<xref:System.Web.UI.UpdatePanel>控制，以便注册该代码时，才<xref:System.Web.UI.UpdatePanel>控件更新，请使用<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-754">To register code for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the code is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-755">如果你想要注册不属于部分页面更新，如果你想要注册该代码仅一次初始页呈现期间使用的 JavaScript 代码<xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-755">If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-756">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-756">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-757">
            <paramref name="page" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-757">
              <paramref name="page" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-758">\- 或 -  <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-758">\- or -  <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPostBackControl">
      <MemberSignature Language="C#" Value="public void RegisterPostBackControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterPostBackControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterPostBackControl(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterPostBackControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-759">要为回发注册的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-759">The control to register for postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-760">将控件注册为回发的触发器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-760">Registers a control as a trigger for a postback.</span>
          </span>
          <span data-ttu-id="a6179-761">此方法用于配置 <see cref="T:System.Web.UI.UpdatePanel" /> 控件内的回发控件，若未配置，此控件将执行异步回发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-761">This method is used to configure postback controls inside an <see cref="T:System.Web.UI.UpdatePanel" /> control that would otherwise perform asynchronous postbacks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-762">使用<xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A>方法注册内的回发控件<xref:System.Web.UI.UpdatePanel>为触发器的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-762">Use the <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> method to register postback controls inside an <xref:System.Web.UI.UpdatePanel> control as triggers.</span></span> <span data-ttu-id="a6179-763">使用此方法注册的控件更新整个页面，而不是仅更新<xref:System.Web.UI.UpdatePanel>控件的内容。</span><span class="sxs-lookup"><span data-stu-id="a6179-763">Controls that are registered by using this method update a whole page instead of updating only the <xref:System.Web.UI.UpdatePanel> control's content.</span></span> <span data-ttu-id="a6179-764">使用外部此方法注册的回发控件<xref:System.Web.UI.UpdatePanel>控件具有没有影响，因为默认情况下这些控件不执行异步回发。</span><span class="sxs-lookup"><span data-stu-id="a6179-764">Registering a postback control with this method outside an <xref:System.Web.UI.UpdatePanel> control has no affect because by default these controls do not perform asynchronous postbacks.</span></span>  
  
 <span data-ttu-id="a6179-765">你可以通过将添加触发器以声明方式`Triggers`元素<xref:System.Web.UI.UpdatePanel>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-765">You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control.</span></span> <span data-ttu-id="a6179-766">在 Visual Studio 中，使用设计器的**UpdatePanelTrigger 集合编辑器**对话框。</span><span class="sxs-lookup"><span data-stu-id="a6179-766">In Visual Studio, use the designer's **UpdatePanelTrigger Collection Editor** dialog box.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.Triggers" />
      </Docs>
    </Member>
    <Member MemberName="RegisterScriptControl&lt;TScriptControl&gt;">
      <MemberSignature Language="C#" Value="public void RegisterScriptControl&lt;TScriptControl&gt; (TScriptControl scriptControl) where TScriptControl : System.Web.UI.Control, System.Web.UI.IScriptControl;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterScriptControl&lt;(class System.Web.UI.Control, class System.Web.UI.IScriptControl) TScriptControl&gt;(!!TScriptControl scriptControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterScriptControl(Of TScriptControl As {Control, IScriptControl}) (scriptControl As TScriptControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TScriptControl&gt;&#xA; where TScriptControl : System::Web::UI::Control, System::Web::UI::IScriptControl virtual void RegisterScriptControl(TScriptControl scriptControl);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterScriptControl``1(``0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TScriptControl">
          <Constraints>
            <BaseTypeName>System.Web.UI.Control</BaseTypeName>
            <InterfaceName>System.Web.UI.IScriptControl</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="scriptControl" Type="TScriptControl" />
      </Parameters>
      <Docs>
        <typeparam name="TScriptControl">
          <span data-ttu-id="a6179-767">实现 <see cref="T:System.Web.UI.IScriptControl" /> 接口的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-767">A control that implements the <see cref="T:System.Web.UI.IScriptControl" /> interface.</span>
          </span>
        </typeparam>
        <param name="scriptControl">
          <span data-ttu-id="a6179-768">要注册的脚本控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-768">The script control to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-769">向当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例注册脚本控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-769">Registers a script control with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-770">此方法主要适用于由控件开发人员使用。</span><span class="sxs-lookup"><span data-stu-id="a6179-770">This method is primarily for use by control developers.</span></span> <span data-ttu-id="a6179-771">调用<xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A>方法期间，从自定义 ASP.NET Ajax 脚本控件其`onInit`事件处理程序以注册该控件使用页。</span><span class="sxs-lookup"><span data-stu-id="a6179-771">Call the <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method from a custom ASP.NET Ajax script control during its `onInit` event handler to register that control with the page.</span></span> <span data-ttu-id="a6179-772">参与局部页面呈现，必须注册 ASP.NET Ajax 脚本控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-772">An ASP.NET Ajax script control must be registered to participate in partial-page rendering.</span></span>  
  
 <span data-ttu-id="a6179-773"><xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A>方法将指定的扩展程序控件添加到期间处理的脚本控件的内部列表<xref:System.Web.UI.Control.PreRender>事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-773">The <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method adds the specified extender control to an internal list of script controls that is processed during the <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-774">
            <paramref name="scriptControl" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-774">
              <paramref name="scriptControl" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterScriptDescriptors">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-775">指示 <see cref="T:System.Web.UI.ScriptManager" /> 控件回调到 <see cref="T:System.Web.UI.ScriptControl" /> 或 <see cref="T:System.Web.UI.ExtenderControl" /> 类，以便返回支持表示客户端控件、组件或行为的客户端对象的脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-775">Instructs the <see cref="T:System.Web.UI.ScriptManager" /> control to  call back to the <see cref="T:System.Web.UI.ScriptControl" /> or <see cref="T:System.Web.UI.ExtenderControl" /> classes in order to return scripts that support the client object that represents a client control, component, or behavior.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterScriptDescriptors">
      <MemberSignature Language="C#" Value="public void RegisterScriptDescriptors (System.Web.UI.IExtenderControl extenderControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterScriptDescriptors(class System.Web.UI.IExtenderControl extenderControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterScriptDescriptors (extenderControl As IExtenderControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterScriptDescriptors(System::Web::UI::IExtenderControl ^ extenderControl);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extenderControl" Type="System.Web.UI.IExtenderControl" />
      </Parameters>
      <Docs>
        <param name="extenderControl">
          <span data-ttu-id="a6179-776">将为其注册脚本描述符的扩展程序控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-776">The extender control for which script descriptors will be registered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-777">回调到 <see cref="T:System.Web.UI.ExtenderControl" /> 类以返回为支持表示客户端控件、组件或行为的客户端对象而必须呈现的实例脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-777">Calls back to an <see cref="T:System.Web.UI.ExtenderControl" /> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-778"><xref:System.Web.UI.ExtenderControl>类调用<xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A>方法在其<xref:System.Web.UI.Control.Render%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a6179-778">The <xref:System.Web.UI.ExtenderControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method in its <xref:System.Web.UI.Control.Render%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a6179-779">
            <para>如果派生自<see cref="T:System.Web.UI.ExtenderControl" />类并重写<see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />方法，但你不调用基类方法，必须调用<see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)" />方法。这使<see cref="T:System.Web.UI.ScriptManager" />控件呈现支持该控件所表示的客户端对象的实例脚本。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-779">
              <para>If you derive from the <see cref="T:System.Web.UI.ExtenderControl" /> class and override the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> method, but you do not call the base class method, you must call the <see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)" /> method. This enables the <see cref="T:System.Web.UI.ScriptManager" /> control to render the instance scripts that support the client object that the control represents.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)" />
        <altmember cref="T:System.Web.UI.ScriptDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="RegisterScriptDescriptors">
      <MemberSignature Language="C#" Value="public void RegisterScriptDescriptors (System.Web.UI.IScriptControl scriptControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterScriptDescriptors(class System.Web.UI.IScriptControl scriptControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterScriptDescriptors (scriptControl As IScriptControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterScriptDescriptors(System::Web::UI::IScriptControl ^ scriptControl);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterScriptDescriptors(System.Web.UI.IScriptControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptControl" Type="System.Web.UI.IScriptControl" />
      </Parameters>
      <Docs>
        <param name="scriptControl">
          <span data-ttu-id="a6179-780">将为其注册脚本描述符的脚本控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-780">The script control for which script descriptors will be registered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-781">调用 <see cref="T:System.Web.UI.ScriptControl" /> 类以返回为支持表示客户端控件、组件或行为的客户端对象而必须呈现的实例脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-781">Calls a <see cref="T:System.Web.UI.ScriptControl" /> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-782"><xref:System.Web.UI.ScriptControl>类调用<xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A>方法在其<xref:System.Web.UI.Control.Render%2A>事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-782">The <xref:System.Web.UI.ScriptControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method during its <xref:System.Web.UI.Control.Render%2A> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a6179-783">
            <para>如果派生自<see cref="T:System.Web.UI.ScriptControl" />类并重写<see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />方法，但你不调用基类方法，必须调用<see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)" />方法。这使<see cref="T:System.Web.UI.ScriptManager" />控件呈现支持该控件所表示的客户端对象的实例脚本。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-783">
              <para>If you derive from the <see cref="T:System.Web.UI.ScriptControl" /> class and override the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> method, but you do not call the base class method, you must call the <see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)" /> method. This enables the <see cref="T:System.Web.UI.ScriptManager" /> control to render the instance scripts that support the client object that the control represents.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)" />
        <altmember cref="T:System.Web.UI.ScriptDescriptor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-784">向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个启动脚本块并将此脚本块添加到页面中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-784">Registers a startup script block with the <see cref="T:System.Web.UI.ScriptManager" /> control and adds the script block to the page.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public static void RegisterStartupScript (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterStartupScript(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterStartupScript(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-785">正在注册客户端脚本块的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-785">The control that is registering the client script block.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a6179-786">客户端脚本块的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-786">The type of the client script block.</span>
          </span>
          <span data-ttu-id="a6179-787">通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定此参数，以检索正在注册脚本的控件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-787">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a6179-788">脚本块的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-788">A unique identifier for the script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="a6179-789">要注册的脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-789">The script to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="a6179-790">如果用 <see langword="&lt;script&gt;" /> 和 <see langword="&lt;/script&gt;" /> 标记括起此脚本块，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-790">
              <see langword="true" /> to enclose the script block with <see langword="&lt;script&gt;" /> and <see langword="&lt;/script&gt;" /> tags; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-791">使用 <see cref="T:System.Web.UI.ScriptManager" /> 控件为 <see cref="T:System.Web.UI.UpdatePanel" /> 中的某个控件注册一个启动脚本块，并将此脚本块添加到页面中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-791">Registers a startup script block for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> by using the <see cref="T:System.Web.UI.ScriptManager" /> control, and adds the script block to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-792">你使用<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>方法注册的页与兼容局部页面呈现，且一个启动脚本块没有任何 Microsoft Ajax 库依赖项。</span><span class="sxs-lookup"><span data-stu-id="a6179-792">You use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method to register a startup script block for a page that is compatible with partial-page rendering and that has no Microsoft Ajax Library dependencies.</span></span> <span data-ttu-id="a6179-793">使用此方法注册的启动脚本块发送到页面中，仅当正在注册块控件内<xref:System.Web.UI.UpdatePanel>正在更新的控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-793">Startup script blocks that are registered by using this method are sent to the page only when the control that is registering the block is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated.</span></span> <span data-ttu-id="a6179-794">若要注册一个启动脚本块每次异步回发发生时，使用<xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-794">To register a startup script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-795">如果你想要注册的启动脚本的不属于部分页面更新，如果你想要注册脚本仅一次初始页呈现期间使用<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-795">If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-796">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-796">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 <span data-ttu-id="a6179-797">由呈现的脚本块<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>方法执行时在页面完成加载，但在该页面的客户端之前`onload`引发事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-797">The script block that is rendered by the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's client `onload` event is raised.</span></span> <span data-ttu-id="a6179-798">启动脚本块位于呈现的 ASP.NET 页的底部紧前面`</form>`标记。</span><span class="sxs-lookup"><span data-stu-id="a6179-798">Startup script blocks are located at the bottom of the rendered ASP.NET page just before the `</form>` tag.</span></span>  
  
 <span data-ttu-id="a6179-799">通过使用已注册的启动脚本块<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>并非一定要与它们注册的顺序相同的输出。</span><span class="sxs-lookup"><span data-stu-id="a6179-799">Startup script blocks that are registered by using <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> are not guaranteed to be output in the same order in which they are registered.</span></span> <span data-ttu-id="a6179-800">如果启动脚本块的顺序很重要，则使用<xref:System.Text.StringBuilder>对象，以便收集的脚本块中单个字符串中，然后将它们注册所有作为单个启动脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-800">If the order of the startup script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the script blocks in a single string, and then register them all as a single startup script.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6179-801">
            <paramref name="control" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-801">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a6179-802">\- 或 -  <paramref name="type" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-802">\- or -  <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6179-803">
            <paramref name="control" /> 不在该页面的控件树中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-803">
              <paramref name="control" /> is not in the page's control tree.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public static void RegisterStartupScript (System.Web.UI.Page page, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterStartupScript(class System.Web.UI.Page page, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterStartupScript(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="page">
          <span data-ttu-id="a6179-804">正在注册客户端脚本块的页对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-804">The page object that is registering the client script block.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="a6179-805">客户端脚本块的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-805">The type of the client script block.</span>
          </span>
          <span data-ttu-id="a6179-806">通常使用 typeof 运算符 (C#) 或 GetType 运算符 (Visual Basic) 来指定此参数，以检索正在注册脚本的控件的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-806">This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="a6179-807">脚本块的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-807">A unique identifier for the script block.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="a6179-808">要注册的脚本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-808">The script to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="a6179-809">如果用 <see langword="&lt;script&gt;" /> 和 <see langword="&lt;/script&gt;" /> 标记括起此脚本块，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-809">
              <see langword="true" /> to enclose the script block with <see langword="&lt;script&gt;" /> and <see langword="&lt;/script&gt;" /> tags; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-810">为每个异步回发向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册一个启动脚本块，并将此脚本块添加到页面中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-810">Registers a startup script block for every asynchronous postback with the <see cref="T:System.Web.UI.ScriptManager" /> control and adds the script block to the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-811">使用此方法以注册一个启动脚本块，它包括在每次发生异步回发。</span><span class="sxs-lookup"><span data-stu-id="a6179-811">You use this method to register a startup script block that is included every time that an asynchronous postback occurs.</span></span> <span data-ttu-id="a6179-812">若要注册脚本块内的控件<xref:System.Web.UI.UpdatePanel>控制，以便注册该脚本块时，才<xref:System.Web.UI.UpdatePanel>控件更新，请使用<xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="a6179-812">To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script block is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.</span></span>  
  
 <span data-ttu-id="a6179-813">如果你想要注册的启动脚本的不属于部分页面更新，如果你想要注册脚本仅一次初始页呈现期间使用<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法<xref:System.Web.UI.ClientScriptManager>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-813">If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="a6179-814">你可以获取对引用<xref:System.Web.UI.ClientScriptManager>对象<xref:System.Web.UI.Page.ClientScript%2A>页属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-814">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="a6179-815">一个接收要写入页面的控件内容的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-815">An object that receives the content of the control to write to the page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-816">使用指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象将 <see cref="T:System.Web.UI.ScriptManager" /> 控件的内容呈现给浏览器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-816">Renders the <see cref="T:System.Web.UI.ScriptManager" /> control's content to the browser by using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-817">此方法由控件开发人员用来扩展<xref:System.Web.UI.ScriptManager>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-817">This method is used by control developers to extend the <xref:System.Web.UI.ScriptManager> control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="a6179-818">
            <para>在重写此方法，调用基<see cref="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)" />方法，以便在页面上呈现定义类的客户端脚本。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-818">
              <para>When overriding this method, call the base <see cref="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)" /> method so that the client script that defines the  class is rendered on the page.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompositeScriptReference">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt; ResolveCompositeScriptReference;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.CompositeScriptReferenceEventArgs&gt; ResolveCompositeScriptReference" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompositeScriptReference As EventHandler(Of CompositeScriptReferenceEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::CompositeScriptReferenceEventArgs ^&gt; ^ ResolveCompositeScriptReference;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-819">在向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册复合脚本时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-819">Occurs when a composite script is registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveScriptReference">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt; ResolveScriptReference;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.ScriptReferenceEventArgs&gt; ResolveScriptReference" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.ResolveScriptReference" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveScriptReference As EventHandler(Of ScriptReferenceEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::ScriptReferenceEventArgs ^&gt; ^ ResolveScriptReference;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-820">在向 <see cref="T:System.Web.UI.ScriptManager" /> 控件注册 <see cref="P:System.Web.UI.ScriptManager.Scripts" /> 集合的成员时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-820">Occurs when a member of the <see cref="P:System.Web.UI.ScriptManager.Scripts" /> collection is registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-821">引发此事件是一次的每个成员<xref:System.Web.UI.ScriptManager.Scripts%2A>在页面的集合<xref:System.Web.UI.Control.PreRender>事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-821">This event is raised one time for each member of the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection during the page's <xref:System.Web.UI.Control.PreRender> event.</span></span> <span data-ttu-id="a6179-822">使用此事件脚本呈现到页之前执行的任何更新。</span><span class="sxs-lookup"><span data-stu-id="a6179-822">Use this event to perform any updates before the script is rendered to the page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleService">
      <MemberSignature Language="C#" Value="public System.Web.UI.RoleServiceManager RoleService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.RoleServiceManager RoleService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.RoleService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoleService As RoleServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::RoleServiceManager ^ RoleService { System::Web::UI::RoleServiceManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.RoleServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-823">获取与当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例关联的 <see cref="T:System.Web.UI.RoleServiceManager" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-823">Gets the <see cref="T:System.Web.UI.RoleServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-824">当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例的 <see cref="T:System.Web.UI.RoleServiceManager" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-824">The <see cref="T:System.Web.UI.RoleServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-825"><xref:System.Web.UI.RoleServiceManager>此属性返回的对象表示向该页面注册角色服务。</span><span class="sxs-lookup"><span data-stu-id="a6179-825">The <xref:System.Web.UI.RoleServiceManager> object that is returned by this property represents the role service that is registered with the page.</span></span> <span data-ttu-id="a6179-826">可以在中定义的角色服务<xref:System.Web.UI.ScriptManager>控件或关联<xref:System.Web.UI.ScriptManagerProxy>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-826">The role service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span> <span data-ttu-id="a6179-827">你可以使用 ASP.NET 角色服务或使用自定义的角色服务。</span><span class="sxs-lookup"><span data-stu-id="a6179-827">You can use the ASP.NET role service or use a custom role service.</span></span> <span data-ttu-id="a6179-828">你可以在标记中添加自定义的服务，通过包括`RoleService`内的元素`asp:ScriptManager`元素在页面上，如下面的示例中所示：</span><span class="sxs-lookup"><span data-stu-id="a6179-828">You can add the custom service in markup by including a `RoleService` element inside the `asp:ScriptManager` element on the page, as shown in the following example:</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <RoleService Path="MyRoleService.asmx" LoadRoles="True" />  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="a6179-829">你可以以编程方式配置<xref:System.Web.UI.RoleServiceManager>对象。</span><span class="sxs-lookup"><span data-stu-id="a6179-829">You can also programmatically configure the <xref:System.Web.UI.RoleServiceManager> object.</span></span> <span data-ttu-id="a6179-830">注册服务<xref:System.Web.UI.ScriptManager>控件在页面的<xref:System.Web.UI.Control.PreRender>生命周期阶段。</span><span class="sxs-lookup"><span data-stu-id="a6179-830">Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ScriptMode ScriptMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ScriptMode ScriptMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ScriptMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptMode As ScriptMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ScriptMode ScriptMode { System::Web::UI::ScriptMode get(); void set(System::Web::UI::ScriptMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-831">获取或设置一个值，该值指定是呈现客户端脚本库的调试版本还是发布版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-831">Gets or sets a value that specifies whether debug or release versions of client script libraries are rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-832">指示当前模式的枚举值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-832">The enumeration value that indicates the current mode.</span>
          </span>
          <span data-ttu-id="a6179-833">默认值为 <see cref="F:System.Web.UI.ScriptMode.Auto" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-833">The default is <see cref="F:System.Web.UI.ScriptMode.Auto" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-834"><xref:System.Web.UI.ScriptManager.ScriptMode%2A>属性指定是否<xref:System.Web.UI.ScriptManager>控件应呈现调试或发布的客户端脚本库的版本。</span><span class="sxs-lookup"><span data-stu-id="a6179-834">The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property specifies whether the <xref:System.Web.UI.ScriptManager> control should render debug or release versions of client script libraries.</span></span> <span data-ttu-id="a6179-835">此值可以通过在配置文件中并在页面指令中设置的值被取代。</span><span class="sxs-lookup"><span data-stu-id="a6179-835">This value can be superseded by values that are set in the configuration file and in the page directive.</span></span>  
  
 <span data-ttu-id="a6179-836">下表列出了此属性的有效值。</span><span class="sxs-lookup"><span data-stu-id="a6179-836">The following table lists the valid values for this property.</span></span>  
  
|<span data-ttu-id="a6179-837">“值”</span><span class="sxs-lookup"><span data-stu-id="a6179-837">Value</span></span>|<span data-ttu-id="a6179-838">定义</span><span class="sxs-lookup"><span data-stu-id="a6179-838">Definition</span></span>|  
|-----------|----------------|  
|<xref:System.Web.UI.ScriptMode.Auto>|<span data-ttu-id="a6179-839">客户端脚本库用于在网页上的调试版本时`retail`配置元素的属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="a6179-839">Debug versions of client script libraries are used in the Web page when the `retail` attribute of the  configuration element is set to `false`.</span></span> <span data-ttu-id="a6179-840">否则，使用客户端脚本库的发行版本。</span><span class="sxs-lookup"><span data-stu-id="a6179-840">Otherwise, the release versions of client script libraries are used.</span></span>|  
|<xref:System.Web.UI.ScriptMode.Inherit>|<span data-ttu-id="a6179-841">当应用于<xref:System.Web.UI.ScriptManager.ScriptMode%2A>属性<xref:System.Web.UI.ScriptManager>对象，此值等同于<xref:System.Web.UI.ScriptMode.Auto>。</span><span class="sxs-lookup"><span data-stu-id="a6179-841">When applied to the <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property of the <xref:System.Web.UI.ScriptManager> object, this value is the same as <xref:System.Web.UI.ScriptMode.Auto>.</span></span>|  
|<xref:System.Web.UI.ScriptMode.Debug>|<span data-ttu-id="a6179-842">调试版本的客户端脚本库使用网页中，除非`retail`配置元素的属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="a6179-842">Debug versions of client script libraries are used in the Web page unless the `retail` attribute of the  configuration element is set to `true`.</span></span>|  
|<xref:System.Web.UI.ScriptMode.Release>|<span data-ttu-id="a6179-843">客户端脚本库的发行版本使用网页中，除非`retail`配置元素的属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="a6179-843">Release versions of client script libraries are used in the Web page unless the `retail` attribute of the  configuration element is set to `false`.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="a6179-844">`debug`指令的特性不会影响支持 Ajax 的 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="a6179-844">The `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications.</span></span> <span data-ttu-id="a6179-845"><xref:System.Web.UI.ScriptManager>控件使用的设置仅在 Web.config 文件中并在其<xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A>和<xref:System.Web.UI.ScriptManager.ScriptMode%2A>属性来确定是否呈现调试脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-845">The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.</span></span>  
  
 <span data-ttu-id="a6179-846">有关详细信息，请参阅[调试和跟踪 Ajax 应用程序概述](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375)。</span><span class="sxs-lookup"><span data-stu-id="a6179-846">For more information, see [Debugging and Tracing Ajax Applications Overview](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a6179-847">
            <see cref="P:System.Web.UI.ScriptManager.ScriptMode" /> 属性不是 <see cref="T:System.Web.UI.ScriptMode" /> 值中的其中一个。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-847">The <see cref="P:System.Web.UI.ScriptManager.ScriptMode" /> property is not one of the <see cref="T:System.Web.UI.ScriptMode" /> values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ScriptMode" />
      </Docs>
    </Member>
    <Member MemberName="ScriptPath">
      <MemberSignature Language="C#" Value="public string ScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScriptPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property is obsolete. Set the Path property on each individual ScriptReference instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-848">获取或设置位置的根路径，该位置用来生成指向 ASP.NET Ajax 和自定义脚本文件的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-848">Gets or sets the root path of the location that is used to build the paths to ASP.NET Ajax and custom script files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-849">存储脚本文件的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-849">The location where script files are stored.</span>
          </span>
          <span data-ttu-id="a6179-850">默认值为解释为相对路径的空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-850">The default value is an empty string (""), which is interpreted as a relative path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-851"><xref:System.Web.UI.ScriptManager.ScriptPath%2A>属性使您能够指定绝对、 相对的或在页面上阻止所有脚本的相对于应用程序 URL。</span><span class="sxs-lookup"><span data-stu-id="a6179-851">The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property enables you to specify an absolute, relative, or application-relative URL for all script blocks on the page.</span></span> <span data-ttu-id="a6179-852">这包括与当前注册的自定义和第三方脚本块<xref:System.Web.UI.ScriptManager>实例。</span><span class="sxs-lookup"><span data-stu-id="a6179-852">This includes custom and third-party script blocks that are registered with the current <xref:System.Web.UI.ScriptManager> instance.</span></span> <span data-ttu-id="a6179-853"><xref:System.Web.UI.ScriptManager.ScriptPath%2A>属性通常以声明方式的属性设置`ScriptManager`元素上的页中，但它可以还在代码中设置。</span><span class="sxs-lookup"><span data-stu-id="a6179-853">The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property is typically set declaratively as an attribute of a `ScriptManager` element on the page, but it can be set in code also.</span></span>  
  
 <span data-ttu-id="a6179-854">如果`path`属性或<xref:System.Web.UI.ScriptReferenceBase.Path%2A>属性设置为<xref:System.Web.UI.ScriptReference>对象在<xref:System.Web.UI.ScriptManager.Scripts%2A>集合，则路径值将覆盖<xref:System.Web.UI.ScriptManager.ScriptPath%2A>值的<xref:System.Web.UI.ScriptReference>实例。</span><span class="sxs-lookup"><span data-stu-id="a6179-854">If the `path` attribute or the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property is set for a <xref:System.Web.UI.ScriptReference> object in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection, the path value overrides the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> value for that <xref:System.Web.UI.ScriptReference> instance.</span></span>  
  
 <span data-ttu-id="a6179-855">如果没有<xref:System.Web.UI.ScriptReferenceBase.Path%2A>指定值，<xref:System.Web.UI.ScriptManager>控件搜索由定义的目录<xref:System.Web.UI.ScriptManager.ScriptPath%2A>属性并解析脚本引用其<xref:System.Web.UI.ScriptReference.Name%2A>或<xref:System.Web.UI.ScriptReference.Assembly%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="a6179-855">If no <xref:System.Web.UI.ScriptReferenceBase.Path%2A> value is specified, the <xref:System.Web.UI.ScriptManager> control searches the directory that is defined by the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property and resolves script references by their <xref:System.Web.UI.ScriptReference.Name%2A> or <xref:System.Web.UI.ScriptReference.Assembly%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptResourceMapping">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ScriptResourceMapping ScriptResourceMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.UI.ScriptResourceMapping ScriptResourceMapping" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ScriptResourceMapping" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ScriptResourceMapping As ScriptResourceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::UI::ScriptResourceMapping ^ ScriptResourceMapping { System::Web::UI::ScriptResourceMapping ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptResourceMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-856">获取 <see cref="T:System.Web.UI.ScriptResourceMapping" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-856">Gets a <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-857">
            <see cref="T:System.Web.UI.ScriptResourceMapping" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-857">A <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-858">静态<xref:System.Web.UI.ScriptManager.ScriptResourceMapping%2A>属性返回<xref:System.Web.UI.ScriptResourceMapping>可以包含表示脚本资源 （脚本重定向） 的位置的映射的集合对象。</span><span class="sxs-lookup"><span data-stu-id="a6179-858">The static <xref:System.Web.UI.ScriptManager.ScriptResourceMapping%2A> property returns a <xref:System.Web.UI.ScriptResourceMapping> object that can contain a collection of mappings that represent the location of the script resource (script redirection).</span></span> <span data-ttu-id="a6179-859">可以根据名称或名称/程序集对映射的映射此集合，它可以指向<xref:System.Web.UI.ScriptResourceDefinition>对象。</span><span class="sxs-lookup"><span data-stu-id="a6179-859">This collection of mappings can be mapped based on names or name/assembly pairs, and it can point to a <xref:System.Web.UI.ScriptResourceDefinition> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6179-860">下面的示例演示如何添加<xref:System.Web.UI.ScriptResourceDefinition>可供引用的对象<xref:System.Web.UI.ScriptManager>对象。</span><span class="sxs-lookup"><span data-stu-id="a6179-860">The following examples shows how to add a <xref:System.Web.UI.ScriptResourceDefinition> object that can be referenced by a <xref:System.Web.UI.ScriptManager> object.</span></span> <span data-ttu-id="a6179-861">将以下代码添加到 Global.asax 文件`Application_Start`事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-861">Add the following code to the Global.asax file in the `Application_Start` event.</span></span>  
  
```csharp  
ScriptResourceDefinition myScriptResDef = new ScriptResourceDefinition();  
myScriptResDef.Path = "~/Scripts/jquery-1.4.2.min.js";  
myScriptResDef.DebugPath = "~/Scripts/jquery-1.4.2.js";  
myScriptResDef.CdnPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js";  
myScriptResDef.CdnDebugPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.js";  
ScriptManager.ScriptResourceMapping.AddDefinition("jquery", null, myScriptResDef);  
```  
  
```vb  
Dim myScriptResDef As New ScriptResourceDefinition()  
myScriptResDef.Path = "~/Scripts/jquery-1.4.2.min.js"  
myScriptResDef.DebugPath = "~/Scripts/jquery-1.4.2.js"  
myScriptResDef.CdnPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js"  
myScriptResDef.CdnDebugPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.js"  
ScriptManager.ScriptResourceMapping.AddDefinition("jquery", Nothing, myScriptResDef)  
```  
  
 <span data-ttu-id="a6179-862">在 ASP.NET Web 窗体页面 （.aspx 文件） 的标记，添加以下标记内的`form`元素并且在任何元素或使用 jQuery 脚本的代码之前。</span><span class="sxs-lookup"><span data-stu-id="a6179-862">In the markup for an ASP.NET Web Forms page (.aspx file), add the following markup inside the `form` element and before any elements or code that uses jQuery script.</span></span>  
  
```  
<asp:ScriptManager ID="sm1" runat="server">  
  <Scripts>  
    <asp:ScriptReference Name="jquery"/>  
  </Scripts>  
</asp:ScriptManager>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public System.Web.UI.ScriptReferenceCollection Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ScriptReferenceCollection Scripts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As ScriptReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ScriptReferenceCollection ^ Scripts { System::Web::UI::ScriptReferenceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.CollectionEditorBase, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-863">获取一个包含 <see cref="T:System.Web.UI.ScriptReference" /> 对象（每个对象表示一个呈现给客户端的脚本文件）的 <see cref="T:System.Web.UI.ScriptReferenceCollection" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-863">Gets a <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object that contains the <see cref="T:System.Web.UI.ScriptReference" /> objects, each of which represents a script file rendered to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-864">
            <see cref="T:System.Web.UI.ScriptManager" /> 实例的 <see cref="T:System.Web.UI.ScriptReferenceCollection" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-864">The <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object of the <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-865"><xref:System.Web.UI.ScriptReferenceCollection>此属性返回的对象是一个集合的<xref:System.Web.UI.ScriptReference>对象，其中每个表示一个脚本文件。</span><span class="sxs-lookup"><span data-stu-id="a6179-865">The <xref:System.Web.UI.ScriptReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ScriptReference> objects, each of which represents a script file.</span></span> <span data-ttu-id="a6179-866">集合包含针对 Ajax 功能，则 ASP.NET 需要的所有脚本文件和自定义脚本文件的引用。</span><span class="sxs-lookup"><span data-stu-id="a6179-866">The collection includes references to all the script files that ASP.NET needs for Ajax functionality, and to custom script files.</span></span> <span data-ttu-id="a6179-867">可以在定义自定义脚本文件来呈现<xref:System.Web.UI.ScriptManager>控件或关联<xref:System.Web.UI.ScriptManagerProxy>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-867">Custom script files to render can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span>  
  
 <span data-ttu-id="a6179-868">您可以通过添加脚本文件添加到标记中的集合`asp:ScriptReference`元素与`Scripts`节点`asp:ScriptManager`元素在页面上，如下面的示例中所示。</span><span class="sxs-lookup"><span data-stu-id="a6179-868">You can add script files to the collection in markup by adding `asp:ScriptReference` elements to a `Scripts` node inside the `asp:ScriptManager` element on the page, as shown in the following example.</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <Scripts>  
    <asp:ScriptReference Name="Script.js" />  
  </Scripts>  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="a6179-869">你还可以添加<xref:System.Web.UI.ScriptReference>对象传递给<xref:System.Web.UI.ScriptManager.Scripts%2A>以编程方式通过使用集合<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法<xref:System.Web.UI.ScriptReferenceCollection>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-869">You can also add a <xref:System.Web.UI.ScriptReference> object to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection programmatically by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ScriptReferenceCollection> class.</span></span>  
  
 <span data-ttu-id="a6179-870"><xref:System.Web.UI.ScriptManager>控件在控件的过程注册脚本文件<xref:System.Web.UI.Control.PreRender>事件。</span><span class="sxs-lookup"><span data-stu-id="a6179-870">The <xref:System.Web.UI.ScriptManager> control registers script files during the control's <xref:System.Web.UI.Control.PreRender> event.</span></span>  
  
 <span data-ttu-id="a6179-871"><xref:System.Web.UI.ScriptManager.Scripts%2A>集合不包含的核心 Microsoft Ajax Library 脚本。</span><span class="sxs-lookup"><span data-stu-id="a6179-871">The <xref:System.Web.UI.ScriptManager.Scripts%2A> collection does not contain the core Microsoft Ajax Library scripts.</span></span> <span data-ttu-id="a6179-872">核心库中的脚本可以呈现自动保存功能。它们无需向注册<xref:System.Web.UI.ScriptManager>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-872">The scripts in the core library are rendered automatically; they do not have to be registered with the <xref:System.Web.UI.ScriptManager> control.</span></span> <span data-ttu-id="a6179-873">但是，如果你想要重写核心脚本或任何控制脚本并替换该脚本的不同版本，则可以添加到你的版本<xref:System.Web.UI.ScriptManager.Scripts%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="a6179-873">However, if you want to override a core script or any control script and substitute a different version of the script, you can add your version to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public System.Web.UI.ServiceReferenceCollection Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ServiceReferenceCollection Services" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As ServiceReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ServiceReferenceCollection ^ Services { System::Web::UI::ServiceReferenceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ServiceReferenceCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ServiceReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-874">获取一个 <see cref="T:System.Web.UI.ServiceReferenceCollection" /> 对象，该对象包含 ASP.NET 在客户端上针对 Ajax 功能公开的每个 Web 服务的 <see cref="T:System.Web.UI.ServiceReference" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-874">Gets a <see cref="T:System.Web.UI.ServiceReferenceCollection" /> object that contains a <see cref="T:System.Web.UI.ServiceReference" /> object for each Web service that ASP.NET exposes on the client for Ajax functionality.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-875">当前 <see cref="T:System.Web.UI.ScriptManager" /> 实例的 <see cref="T:System.Web.UI.ServiceReferenceCollection" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-875">The <see cref="T:System.Web.UI.ServiceReferenceCollection" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-876"><xref:System.Web.UI.ServiceReferenceCollection>此属性返回的对象是一个集合的<xref:System.Web.UI.ServiceReference>对象，其中每个表示 Web 服务向注册<xref:System.Web.UI.ScriptManager>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-876">The <xref:System.Web.UI.ServiceReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ServiceReference> objects, each of which represents a Web service that is registered with the <xref:System.Web.UI.ScriptManager> control .</span></span> <span data-ttu-id="a6179-877">你可以定义中的服务<xref:System.Web.UI.ScriptManager>控件或关联<xref:System.Web.UI.ScriptManagerProxy>控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-877">You can define services in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.</span></span>  
  
 <span data-ttu-id="a6179-878">可以通过添加到标记中的集合中添加服务`asp:ServiceReference`元素`Services`内的元素`asp:ScriptManager`实例在页上，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="a6179-878">You can add services to the collection in markup by adding an `asp:ServiceReference` element to a `Services` element inside the `asp:ScriptManager` instance on the page, as shown in the following example.</span></span>  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <Services>  
    <asp:ServiceReference Path="Service.asmx" />  
  </Services>  
</asp:ScriptManager>  
```  
  
 <span data-ttu-id="a6179-879">你可以以编程方式添加<xref:System.Web.UI.ServiceReference>对象传递给<xref:System.Web.UI.ScriptManager.Services%2A>使用进行收集<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法<xref:System.Web.UI.ServiceReferenceCollection>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-879">You can also programmatically add a <xref:System.Web.UI.ServiceReference> object to the <xref:System.Web.UI.ScriptManager.Services%2A> collection by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ServiceReferenceCollection> class.</span></span>  
  
 <span data-ttu-id="a6179-880">注册服务<xref:System.Web.UI.ScriptManager>在页面的<xref:System.Web.UI.Control.PreRender>生命周期阶段。</span><span class="sxs-lookup"><span data-stu-id="a6179-880">Services are registered with the <xref:System.Web.UI.ScriptManager> during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFocus">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-881">将浏览器焦点设置为指定控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-881">Sets the browser focus to the specified control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (string clientID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(string clientID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.SetFocus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus (clientID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::String ^ clientID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientID">
          <span data-ttu-id="a6179-882">要接收焦点的控件的 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-882">The ID of the control to receive focus.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-883">将浏览器焦点设置为由 ID 指定的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-883">Sets the browser focus to the control specified by ID.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-884"><xref:System.Web.UI.ScriptManager.SetFocus%2A>方法的工作原理类似<xref:System.Web.UI.Page.SetFocus%2A>方法<xref:System.Web.UI.Page>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-884">The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class.</span></span> <span data-ttu-id="a6179-885">这两种方法使具有指定 ID 控件在网页上的活动控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-885">Both methods make the control with the specified ID the active control on the Web page.</span></span> <span data-ttu-id="a6179-886"><xref:System.Web.UI.ScriptManager.SetFocus%2A>方法<xref:System.Web.UI.ScriptManager>类用于将焦点设置异步回发期间。</span><span class="sxs-lookup"><span data-stu-id="a6179-886">The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback.</span></span> <span data-ttu-id="a6179-887">在回发和首次呈现页时，期间<xref:System.Web.UI.ScriptManager.SetFocus%2A>方法调用<xref:System.Web.UI.Page.SetFocus%2A>方法<xref:System.Web.UI.Page>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-887">During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="a6179-888">如果有多个调用<xref:System.Web.UI.ScriptManager.SetFocus%2A>方法，最后一次调用中的控件接收焦点。</span><span class="sxs-lookup"><span data-stu-id="a6179-888">If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control in the last call receives focus.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.String)" />
        <altmember cref="M:System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="a6179-889">要接收焦点的控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-889">The control to receive focus.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-890">将浏览器焦点设置为指定控件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-890">Sets the browser focus to the specified control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-891"><xref:System.Web.UI.ScriptManager.SetFocus%2A>方法的工作原理类似<xref:System.Web.UI.Page.SetFocus%2A>方法<xref:System.Web.UI.Page>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-891">The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class.</span></span> <span data-ttu-id="a6179-892">这两种方法使指定的控件在网页上的活动控件。</span><span class="sxs-lookup"><span data-stu-id="a6179-892">Both methods make the specified control the active control on the Web page.</span></span> <span data-ttu-id="a6179-893"><xref:System.Web.UI.ScriptManager.SetFocus%2A>方法<xref:System.Web.UI.ScriptManager>类用于将焦点设置异步回发期间。</span><span class="sxs-lookup"><span data-stu-id="a6179-893">The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback.</span></span> <span data-ttu-id="a6179-894">在回发和首次呈现页时，期间<xref:System.Web.UI.ScriptManager.SetFocus%2A>方法调用<xref:System.Web.UI.Page.SetFocus%2A>方法<xref:System.Web.UI.Page>类。</span><span class="sxs-lookup"><span data-stu-id="a6179-894">During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="a6179-895">如果有多个调用<xref:System.Web.UI.ScriptManager.SetFocus%2A>方法，在最后一次调用中指定的控件接收焦点。</span><span class="sxs-lookup"><span data-stu-id="a6179-895">If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control specified in the last call receives focus.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.SetFocus(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SupportsPartialRendering">
      <MemberSignature Language="C#" Value="public bool SupportsPartialRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsPartialRendering { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-896">获取一个指示客户端是否支持局部页面呈现的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-896">Gets a value that indicates whether the client supports partial-page rendering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-897">如果客户端支持局部页面呈现，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-897">
              <see langword="true" /> if the client supports partial-page rendering; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a6179-898">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-898">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-899">如果<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>属性设置为`false`、<xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>属性返回`false`。</span><span class="sxs-lookup"><span data-stu-id="a6179-899">If the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property is set to `false`, the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property returns `false`.</span></span>  
  
 <span data-ttu-id="a6179-900">若要确定是否支持局部页面呈现的默认检查返回`true`当以下条件都为真：</span><span class="sxs-lookup"><span data-stu-id="a6179-900">The default check to determine whether partial-page rendering is supported returns `true` when the following conditions are true:</span></span>  
  
-   <span data-ttu-id="a6179-901"><xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A>属性值必须大于或等于 1.0。</span><span class="sxs-lookup"><span data-stu-id="a6179-901">The <xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A> property value must be greater than or equal to 1.0.</span></span>  
  
-   <span data-ttu-id="a6179-902"><xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A>属性值必须大于或等于 1.0。</span><span class="sxs-lookup"><span data-stu-id="a6179-902">The <xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A> property value must be greater than or equal to 1.0.</span></span>  
  
-   <span data-ttu-id="a6179-903"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>属性值必须设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="a6179-903">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property value must be set to `true`.</span></span>  
  
 <span data-ttu-id="a6179-904">当<xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>属性显式设置，则不使用这些检查。</span><span class="sxs-lookup"><span data-stu-id="a6179-904">When the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is explicitly set, these checks are not used.</span></span>  
  
 <span data-ttu-id="a6179-905">控件开发人员应使用<xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>属性来确定他们是否应支持局部页面呈现。</span><span class="sxs-lookup"><span data-stu-id="a6179-905">Control developers should use the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property to determine whether they should support partial-page rendering.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6179-906">
            <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> 属性为 <see langword="false" />，而 <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> 属性原来设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-906">The <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> property is <see langword="false" /> and the <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> property was set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="a6179-907">\- 或 -  在 <see cref="E:System.Web.UI.Control.Init" /> 事件后设置 <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-907">\- or -  The <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> property was set after the <see cref="E:System.Web.UI.Control.Init" /> event.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">
          <span data-ttu-id="a6179-908">控件的密钥标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-908">The key-identifier for the control.</span>
          </span>
        </param>
        <param name="postCollection">
          <span data-ttu-id="a6179-909">所有传入的后期数据的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-909">A collection of all incoming post data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-910">有关此成员的说明，请参阅 <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-910">For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a6179-911">如果 <see cref="T:System.Web.UI.ScriptManager" /> 控件的状态已因回发而更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-911">
              <see langword="true" /> if the <see cref="T:System.Web.UI.ScriptManager" /> control's state has changed as a result of a postback; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-912">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="a6179-912">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a6179-913">它只能在 <xref:System.Web.UI.ScriptManager> 实例强制转换为 <xref:System.Web.UI.IPostBackDataHandler> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a6179-913">It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6179-914">有关此成员的说明，请参阅 <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-914">For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-915">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="a6179-915">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a6179-916">它只能在 <xref:System.Web.UI.ScriptManager> 实例强制转换为 <xref:System.Web.UI.IPostBackDataHandler> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a6179-916">It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.ScriptManager.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <span data-ttu-id="a6179-917">表示网页历史记录状态的键/值对的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-917">A string of key/value pairs that represent the history state of the Web page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6179-918">启用 <see cref="T:System.Web.UI.ScriptManager" /> 控件以处理回发事件，并加载网页的历史记录状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-918">Enables the <see cref="T:System.Web.UI.ScriptManager" /> control to process a postback event and load the history state of the Web page.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.IsSecureConnection">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IScriptManager.IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IScriptManager.IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSecureConnection As Boolean Implements IScriptManager.IsSecureConnection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IScriptManager.IsSecureConnection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterArrayDeclaration (System.Web.UI.Control control, string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterArrayDeclaration(class System.Web.UI.Control control, string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterArrayDeclaration(System::Web::UI::Control ^ control, System::String ^ arrayName, System::String ^ arrayValue) = System::Web::UI::IScriptManager::RegisterArrayDeclaration;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="arrayName">To be added.</param>
        <param name="arrayValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterClientScriptBlock (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterClientScriptBlock(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterClientScriptBlock(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags) = System::Web::UI::IScriptManager::RegisterClientScriptBlock;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="script">To be added.</param>
        <param name="addScriptTags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterClientScriptInclude (System.Web.UI.Control control, Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterClientScriptInclude(class System.Web.UI.Control control, class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterClientScriptInclude(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ url) = System::Web::UI::IScriptManager::RegisterClientScriptInclude;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="url">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterClientScriptResource (System.Web.UI.Control control, Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterClientScriptResource(class System.Web.UI.Control control, class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterClientScriptResource(System::Web::UI::Control ^ control, Type ^ type, System::String ^ resourceName) = System::Web::UI::IScriptManager::RegisterClientScriptResource;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="resourceName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterDispose">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterDispose (System.Web.UI.Control control, string disposeScript);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterDispose(class System.Web.UI.Control control, string disposeScript) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterDispose(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterDispose(System::Web::UI::Control ^ control, System::String ^ disposeScript) = System::Web::UI::IScriptManager::RegisterDispose;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="disposeScript" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="disposeScript">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterExpandoAttribute (System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterExpandoAttribute(class System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterExpandoAttribute(System::Web::UI::Control ^ control, System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode) = System::Web::UI::IScriptManager::RegisterExpandoAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="controlId">To be added.</param>
        <param name="attributeName">To be added.</param>
        <param name="attributeValue">To be added.</param>
        <param name="encode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterHiddenField">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterHiddenField (System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterHiddenField(class System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterHiddenField(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterHiddenField(System::Web::UI::Control ^ control, System::String ^ hiddenFieldName, System::String ^ hiddenFieldValue) = System::Web::UI::IScriptManager::RegisterHiddenField;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="hiddenFieldName">To be added.</param>
        <param name="hiddenFieldValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterOnSubmitStatement (System.Web.UI.Control control, Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterOnSubmitStatement(class System.Web.UI.Control control, class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterOnSubmitStatement(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script) = System::Web::UI::IScriptManager::RegisterOnSubmitStatement;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="script">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterPostBackControl">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterPostBackControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterPostBackControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterPostBackControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterPostBackControl(System::Web::UI::Control ^ control) = System::Web::UI::IScriptManager::RegisterPostBackControl;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterPostBackControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterStartupScript">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterStartupScript (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterStartupScript(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterStartupScript(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags) = System::Web::UI::IScriptManager::RegisterStartupScript;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="script">To be added.</param>
        <param name="addScriptTags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.SetFocusInternal">
      <MemberSignature Language="C#" Value="void IScriptManager.SetFocusInternal (string clientID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.SetFocusInternal(string clientID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#SetFocusInternal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetFocusInternal (clientID As String) Implements IScriptManager.SetFocusInternal" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.SetFocusInternal(System::String ^ clientID) = System::Web::UI::IScriptManager::SetFocusInternal;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientID">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6179-919">重写从 <see cref="T:System.Web.UI.Control" /> 基类继承的 <see cref="P:System.Web.UI.Control.Visible" /> 属性以防止设置此值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-919">Overrides the <see cref="P:System.Web.UI.Control.Visible" /> property that is inherited from the base <see cref="T:System.Web.UI.Control" /> class to prevent setting this value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6179-920">在所有情况下均为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-920">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6179-921"><xref:System.Web.UI.Control.Visible%2A>属性被重写，<xref:System.Web.UI.ScriptManager>类以防止设置此值。</span><span class="sxs-lookup"><span data-stu-id="a6179-921">The <xref:System.Web.UI.Control.Visible%2A> property is overridden in the <xref:System.Web.UI.ScriptManager> class to prevent setting this value.</span></span> <span data-ttu-id="a6179-922">A<xref:System.NotImplementedException>如果一个值分配给此属性，则会发生错误。</span><span class="sxs-lookup"><span data-stu-id="a6179-922">A <xref:System.NotImplementedException> error occurs if a value is assigned to this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="a6179-923">将一个值分配给 <see cref="P:System.Web.UI.ScriptManager.Visible" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6179-923">A value is assigned to the <see cref="P:System.Web.UI.ScriptManager.Visible" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>