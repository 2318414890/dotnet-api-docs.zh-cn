<Type Name="ObjectStateFormatter" FullName="System.Web.UI.ObjectStateFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d32b9109721ca3809f7f0edb9032f3add7dd856" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51310035" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectStateFormatter : System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectStateFormatter extends System.Object implements class System.Runtime.Serialization.IFormatter, class System.Web.UI.IStateFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ObjectStateFormatter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectStateFormatter&#xA;Implements IFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectStateFormatter sealed : System::Runtime::Serialization::IFormatter" />
  <TypeSignature Language="F#" Value="type ObjectStateFormatter = class&#xA;    interface IStateFormatter&#xA;    interface IFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IFormatter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>序列化和反序列化表示对象状态的对象图。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ObjectStateFormatter>类序列化和反序列化中一种紧凑对象状态图。  
  
 <xref:System.Web.UI.ObjectStateFormatter> 由<xref:System.Web.UI.PageStatePersister>类和派生自该类进行序列化视图状态和控件状态的类。 它还由<xref:System.Web.UI.LosFormatter>类以提供对象状态图格式设置为 ASP.NET 基础结构的各个部分。  
  
 <xref:System.Web.UI.ObjectStateFormatter>类经过优化，可序列化和格式化许多常见.NET Framework 引用类型，以及常量。 下表列出了进行了优化的类型。  
  
|||||  
|-|-|-|-|  
|<xref:System.Array>|<xref:System.DateTime>|<xref:System.Int16>|<xref:System.String>|  
|<xref:System.Collections.ArrayList>|<xref:System.Double>|<xref:System.Int32>|String]|  
|<xref:System.Boolean>|<xref:System.Enum>|null (`Nothing`)|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.Byte>|<xref:System.Collections.Hashtable>|<xref:System.Web.UI.Pair>|<xref:System.Web.UI.Triplet>|  
|<xref:System.Char>|<xref:System.Collections.Specialized.HybridDictionary>|<xref:System.Single>|<xref:System.Type>|  
|<xref:System.Drawing.Color>|<xref:System.Collections.IDictionary>|||  
  
 此外，当常规的字符串类型和字符串数组将写入到并从原封不动地序列化二进制编写器时，某些字符串进行了优化通过创建内部字符串表。 字符串进行了优化使用这些表，如果字符串都有一个关联<xref:System.ComponentModel.TypeConverter>对象或字符串是否实际的实例<xref:System.Web.UI.IndexedString>类。  
  
 上面未列出其他类型是二进制序列化使用<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>对象如果它们实现<xref:System.Runtime.Serialization.ISerializable>接口或使用修饰<xref:System.SerializableAttribute>属性。 <xref:System.Web.UI.ObjectStateFormatter>类没有为任何一种可序列化的类型进行优化。  
  
 如果<xref:System.Web.UI.ObjectStateFormatter>类遇到不可序列化，类型<xref:System.ArgumentException>引发异常。  
  
   
  
## Examples  
 下面的代码示例演示如何从派生的类<xref:System.Web.UI.PageStatePersister>类访问<xref:System.Web.UI.PageStatePersister.StateFormatter%2A>属性来检索<xref:System.Web.UI.ObjectStateFormatter>实例进行序列化视图状态和控件状态到流。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.UI.PageStatePersister>类。  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectStateFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectStateFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.ObjectStateFormatter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>从对象状态图的序列化形式对该对象状态图进行反序列化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ObjectStateFormatter.Serialize" />
        <altmember cref="Overload:System.Web.UI.LosFormatter.Deserialize" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.Stream inputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (inputStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::Stream ^ inputStream);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.IO.Stream -&gt; obj" Usage="objectStateFormatter.Deserialize inputStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputStream">一个 <see cref="T:System.IO.Stream" />，<see cref="T:System.Web.UI.ObjectStateFormatter" /> 将其反序列化为一个初始化的 <see langword="object" />。</param>
        <summary>从包含在指定的 <see cref="T:System.IO.Stream" /> 对象中的对象状态图的二进制序列化形式对该对象状态图进行反序列化。</summary>
        <returns>表示反序列化的对象状态图的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用序列化任何对象状态图<xref:System.Web.UI.ObjectStateFormatter.Serialize%2A>方法可反序列化与<xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A>方法。 <xref:System.Web.UI.ObjectStateFormatter.Deserialize%28System.IO.Stream%29>方法用来还原存储在对象状态图<xref:System.IO.Stream>，如<xref:System.IO.FileStream>。  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]   
  
## Examples  
 下面的代码示例演示如何从派生的类<xref:System.Web.UI.PageStatePersister>类初始化<xref:System.Web.UI.PageStatePersister.ViewState%2A>集合。 在此示例中，<xref:System.Web.UI.PageStatePersister.ViewState%2A>集合赋予<xref:System.Web.UI.Pair.First>字段<xref:System.Web.UI.Pair>对象，并序列化为文件使用<xref:System.Web.UI.ObjectStateFormatter>类。 当<xref:System.Web.UI.PageStatePersister.Load%2A>调用方法时，<xref:System.Web.UI.LosFormatter.Deserialize%28System.IO.Stream%29>方法用于反序列化来自文件的视图状态和<xref:System.Web.UI.PageStatePersister.ViewState%2A>初始化属性。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.UI.PageStatePersister>类。  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="inputStream" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">在 <see cref="T:System.IO.Stream" /> 的反序列化期间发生异常。 异常消息被追加到 <see cref="T:System.ArgumentException" /> 的消息。</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string inputString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string inputString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (inputString As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ inputString);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; obj" Usage="objectStateFormatter.Deserialize inputString" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateFormatter.Deserialize(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputString">
          <see cref="T:System.Web.UI.ObjectStateFormatter" /> 会将其反序列化为初始化对象的字符串。</param>
        <summary>从对象状态图的序列化 Base64 编码字符串形式对该对象状态图进行反序列化。</summary>
        <returns>表示反序列化的对象状态图的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用序列化任何对象状态图<xref:System.Web.UI.ObjectStateFormatter.Serialize%2A>方法可反序列化与<xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A>方法。 <xref:System.Web.UI.ObjectStateFormatter.Deserialize%28System.String%29>方法用于还原 base64 编码字符串形式存储在对象状态图。  
  
[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]   
  
## Examples  
 下面的代码示例演示如何实现一个方法，反序列化 base64 编码字符串并返回<xref:System.Collections.ICollection>属性设置的集合。 此代码示例依赖于具有使用序列化的属性设置<xref:System.Web.UI.ObjectStateFormatter>类，如中所示<xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.Object%29>方法。  
  
 [!code-csharp[System.Web.UI.ObjectStateFormatter_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ObjectStateFormatter_1/CS/objectstateformattertest.cs#2)]
 [!code-vb[System.Web.UI.ObjectStateFormatter_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ObjectStateFormatter_1/VB/objectstateformattertest.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="inputString" /> 为 <see langword="null" /> 或者 <see cref="P:System.String.Length" /> 为 0。</exception>
        <exception cref="T:System.ArgumentException">序列化的数据无效。</exception>
        <exception cref="T:System.Web.HttpException">当对视图状态进行序列化失败时执行的计算机验证代码 (MAC) 验证检查。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>序列化对象状态图。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object stateGraph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object stateGraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (stateGraph As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ stateGraph);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="objectStateFormatter.Serialize stateGraph" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateFormatter.Serialize(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGraph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stateGraph">要序列化的对象。</param>
        <summary>将对象状态图序列化为 Base64 编码字符串。</summary>
        <returns>一个 Base-64 编码字符串，表示 <paramref name="stateGraph" /> 参数的序列化对象状态。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用序列化任何对象图<xref:System.Web.UI.ObjectStateFormatter.Serialize%2A>方法可反序列化与<xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A>方法。 <xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.Object%29>方法用于为 base64 编码字符串形式的对象状态图序列化。  
  
   
  
## Examples  
 下面的代码示例演示如何序列化的控件属性绑定到 base64 编码的字符串使用一组值<xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.Object%29>方法。 字符串可以在更高版本时，使用反序列<xref:System.Web.UI.ObjectStateFormatter.Deserialize%28System.String%29>方法。  
  
 [!code-csharp[System.Web.UI.ObjectStateFormatter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ObjectStateFormatter_1/CS/objectstateformattertest.cs#1)]
 [!code-vb[System.Web.UI.ObjectStateFormatter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ObjectStateFormatter_1/VB/objectstateformattertest.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream outputStream, object stateGraph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream outputStream, object stateGraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (outputStream As Stream, stateGraph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ outputStream, System::Object ^ stateGraph);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.Stream * obj -&gt; unit" Usage="objectStateFormatter.Serialize (outputStream, stateGraph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputStream" Type="System.IO.Stream" />
        <Parameter Name="stateGraph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="outputStream">一个 <see cref="T:System.IO.Stream" />，<see cref="T:System.Web.UI.ObjectStateFormatter" /> 将指定对象的状态序列化为该流。</param>
        <param name="stateGraph">要序列化的对象。</param>
        <summary>将对象状态图序列化为指定的 <see cref="T:System.IO.Stream" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用序列化任何对象状态图<xref:System.Web.UI.ObjectStateFormatter.Serialize%2A>方法可反序列化与<xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A>方法。 <xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.IO.Stream%2CSystem.Object%29>方法用于序列化对象状态图的二进制文件<xref:System.IO.Stream>对象。  
  
   
  
## Examples  
 下面的代码示例演示如何检索类<xref:System.Web.UI.ObjectStateFormatter>实例进行序列化视图状态和流使用的控件状态<xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.IO.Stream%2CSystem.Object%29>方法。 此代码示例是为提供一个更大示例的一部分<xref:System.Web.UI.PageStatePersister>类。  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="inputStream" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.Binder">
      <MemberSignature Language="C#" Value="System.Runtime.Serialization.SerializationBinder System.Runtime.Serialization.IFormatter.Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder System.Runtime.Serialization.IFormatter.Binder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Binder" />
      <MemberSignature Language="VB.NET" Value=" Property Binder As SerializationBinder Implements IFormatter.Binder" />
      <MemberSignature Language="C++ CLI" Value="property System::Runtime::Serialization::SerializationBinder ^ System::Runtime::Serialization::IFormatter::Binder { System::Runtime::Serialization::SerializationBinder ^ get(); void set(System::Runtime::Serialization::SerializationBinder ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.Serialization.IFormatter.Binder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参阅 <see cref="P:System.Runtime.Serialization.Formatter.Binder" />。</summary>
        <value>在反序列化过程中执行类型查找的 <see cref="T:System.Runtime.Serialization.SerializationBinder" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.ObjectStateFormatter> 实例强制转换为 <xref:System.Runtime.Serialization.IFormatter> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.Context">
      <MemberSignature Language="C#" Value="System.Runtime.Serialization.StreamingContext System.Runtime.Serialization.IFormatter.Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext System.Runtime.Serialization.IFormatter.Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Context" />
      <MemberSignature Language="VB.NET" Value=" Property Context As StreamingContext Implements IFormatter.Context" />
      <MemberSignature Language="C++ CLI" Value="property System::Runtime::Serialization::StreamingContext System::Runtime::Serialization::IFormatter::Context { System::Runtime::Serialization::StreamingContext get(); void set(System::Runtime::Serialization::StreamingContext value); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.Serialization.IFormatter.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参阅 <see cref="P:System.Runtime.Serialization.IFormatter.Context" />。</summary>
        <value>用于序列化和反序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.ObjectStateFormatter> 实例强制转换为 <xref:System.Runtime.Serialization.IFormatter> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.Deserialize">
      <MemberSignature Language="C#" Value="object IFormatter.Deserialize (System.IO.Stream serializationStream);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.Serialization.IFormatter.Deserialize(class System.IO.Stream serializationStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Deserialize(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Function Deserialize (serializationStream As Stream) As Object Implements IFormatter.Deserialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.Serialization.IFormatter.Deserialize(System::IO::Stream ^ serializationStream) = System::Runtime::Serialization::IFormatter::Deserialize;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serializationStream">包含要反序列化的数据的流。</param>
        <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.IO.Stream)" />。</summary>
        <returns>反序列化图形的顶级对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.ObjectStateFormatter> 实例强制转换为 <xref:System.Runtime.Serialization.IFormatter> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.Serialize">
      <MemberSignature Language="C#" Value="void IFormatter.Serialize (System.IO.Stream serializationStream, object stateGraph);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IFormatter.Serialize(class System.IO.Stream serializationStream, object stateGraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Serialize (serializationStream As Stream, stateGraph As Object) Implements IFormatter.Serialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IFormatter.Serialize(System::IO::Stream ^ serializationStream, System::Object ^ stateGraph) = System::Runtime::Serialization::IFormatter::Serialize;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="stateGraph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationStream">格式化程序在其中放置串行化数据的流。 此流可以引用多种后备存储（如文件、网络、内存等）。</param>
        <param name="stateGraph">要序列化的对象或对象图形的根。 将自动序列化此根对象的所有子对象。</param>
        <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.ObjectStateFormatter.Serialize(System.IO.Stream,System.Object)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.ObjectStateFormatter> 实例强制转换为 <xref:System.Runtime.Serialization.IFormatter> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.SurrogateSelector">
      <MemberSignature Language="C#" Value="System.Runtime.Serialization.ISurrogateSelector System.Runtime.Serialization.IFormatter.SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector System.Runtime.Serialization.IFormatter.SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#SurrogateSelector" />
      <MemberSignature Language="VB.NET" Value=" Property SurrogateSelector As ISurrogateSelector Implements IFormatter.SurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="property System::Runtime::Serialization::ISurrogateSelector ^ System::Runtime::Serialization::IFormatter::SurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.Serialization.IFormatter.SurrogateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有关此成员的说明，请参阅 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />。</summary>
        <value>当前格式化程序所使用的 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.ObjectStateFormatter> 实例强制转换为 <xref:System.Runtime.Serialization.IFormatter> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateFormatter.Deserialize">
      <MemberSignature Language="C#" Value="object IStateFormatter.Deserialize (string serializedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateFormatter.Deserialize(string serializedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.System#Web#UI#IStateFormatter#Deserialize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function Deserialize (serializedState As String) As Object Implements IStateFormatter.Deserialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateFormatter.Deserialize(System::String ^ serializedState) = System::Web::UI::IStateFormatter::Deserialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateFormatter.Deserialize(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializedState" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serializedState">
          <see cref="T:System.Web.UI.IStateFormatter" /> 会将其反序列化为初始化对象的字符串。</param>
        <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.String)" />。</summary>
        <returns>表示 ASP.NET 服务器控件状态的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.ObjectStateFormatter> 实例强制转换为 <xref:System.Web.UI.IStateFormatter> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateFormatter.Serialize">
      <MemberSignature Language="C#" Value="string IStateFormatter.Serialize (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IStateFormatter.Serialize(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.System#Web#UI#IStateFormatter#Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Serialize (state As Object) As String Implements IStateFormatter.Serialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IStateFormatter.Serialize(System::Object ^ state) = System::Web::UI::IStateFormatter::Serialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateFormatter.Serialize(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">该对象表示要序列化为字符串形式的 Web 服务器控件的视图状态。</param>
        <summary>有关此成员的说明，请参阅 <see cref="M:System.Web.UI.ObjectStateFormatter.Serialize(System.Object)" />。</summary>
        <returns>表示 Web 服务器控件的视图状态的字符串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式的接口成员实现。 它只能在 <xref:System.Web.UI.ObjectStateFormatter> 实例强制转换为 <xref:System.Web.UI.IStateFormatter> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>