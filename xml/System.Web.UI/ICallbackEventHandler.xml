<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1780d-101">用于指示控件可以作为服务器上的回调事件的目标。</span><span class="sxs-lookup"><span data-stu-id="1780d-101">Used to indicate that a control can be the target of a callback event on the server.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1780d-102">实现<xref:System.Web.UI.ICallbackEventHandler>需要接收回调事件任何自定义控件接口。</span><span class="sxs-lookup"><span data-stu-id="1780d-102">Implement the <xref:System.Web.UI.ICallbackEventHandler> interface for any custom control that needs to receive callback events.</span></span> <span data-ttu-id="1780d-103">有关详细信息，请参阅[实现客户端回调而无需回发](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)。</span><span class="sxs-lookup"><span data-stu-id="1780d-103">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
 <span data-ttu-id="1780d-104">实现的控件示例<xref:System.Web.UI.ICallbackEventHandler>接口包括<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>，和<xref:System.Web.UI.WebControls.TreeView>控件。</span><span class="sxs-lookup"><span data-stu-id="1780d-104">Examples of controls that implement the <xref:System.Web.UI.ICallbackEventHandler> interface include the <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> controls.</span></span> <span data-ttu-id="1780d-105">回调事件实现以控件为目标时<xref:System.Web.UI.ICallbackEventHandler>接口，<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>调用方法来处理该事件，作为参数传递的事件自变量和<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>方法会返回结果的回调。</span><span class="sxs-lookup"><span data-stu-id="1780d-105">When a callback event targets a control that implements the <xref:System.Web.UI.ICallbackEventHandler> interface, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is called to handle the event, passing the event argument as a parameter and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the result of the callback.</span></span>  
  
 <span data-ttu-id="1780d-106">同步或异步，将在回调过程从数据源控件中检索数据的控件可以这样做。</span><span class="sxs-lookup"><span data-stu-id="1780d-106">Controls that retrieve data from a data source control during callback can do so synchronously or asynchronously.</span></span> <span data-ttu-id="1780d-107">ASP.NET 控件喜欢<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>，和<xref:System.Web.UI.WebControls.TreeView>以同步方式实现。</span><span class="sxs-lookup"><span data-stu-id="1780d-107">ASP.NET controls like <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> are implemented synchronously.</span></span> <span data-ttu-id="1780d-108">同步回调不会阻止用户在浏览器中工作。</span><span class="sxs-lookup"><span data-stu-id="1780d-108">Synchronous callbacks do not prevent the user from working in the browser.</span></span> <span data-ttu-id="1780d-109">在同步模式下，还可以执行一次只有一个回调，最后一个回调优先。</span><span class="sxs-lookup"><span data-stu-id="1780d-109">In synchronous mode, only one callback at a time can execute, with the last callback taking precedence.</span></span> <span data-ttu-id="1780d-110">当 Web 控件实现以支持异步行为时，可以同时引发多个回调。</span><span class="sxs-lookup"><span data-stu-id="1780d-110">When a Web control is implemented to support asynchronous behavior, multiple callbacks can be raised simultaneously.</span></span> <span data-ttu-id="1780d-111">有关异步编程的详细信息，请参阅[基于事件的异步模式 (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md)。</span><span class="sxs-lookup"><span data-stu-id="1780d-111">For details on asynchronous programming, see [Event-based Asynchronous Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span></span>  
  
 <span data-ttu-id="1780d-112">你可以指定是否来自用户界面的回调事件呈现通过控件实现<xref:System.Web.UI.ICallbackEventHandler>接口进行验证。</span><span class="sxs-lookup"><span data-stu-id="1780d-112">You can specify whether callback events originating from the user interface rendered by a control implementing the <xref:System.Web.UI.ICallbackEventHandler> interface are validated.</span></span> <span data-ttu-id="1780d-113">验证事件是一种很好的安全做法。</span><span class="sxs-lookup"><span data-stu-id="1780d-113">Validation of events is a good security practice.</span></span> <span data-ttu-id="1780d-114">但是，出于性能原因可以禁用它。</span><span class="sxs-lookup"><span data-stu-id="1780d-114">However, for performance reasons you can disable it.</span></span> <span data-ttu-id="1780d-115">若要控制是否事件验证回调事件，请将设置`enableEventValidation`属性[@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)指令或`enableEventValidation`属性[页元素 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458)的 Web.config 文件。</span><span class="sxs-lookup"><span data-stu-id="1780d-115">To control whether event validation is performed on callback events, set the `enableEventValidation` attribute of the [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive or the `enableEventValidation` attribute of the [pages Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) of the Web.config file.</span></span> <span data-ttu-id="1780d-116">如果你设置<xref:System.Web.UI.Page.EnableEventValidation%2A>属性在代码中，将其设置`Page_Init`的页处理阶段。</span><span class="sxs-lookup"><span data-stu-id="1780d-116">If you set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property in code, set it in the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="1780d-117">平衡与其性能成本的事件验证的安全优势的详细信息，请参阅[ASP.NET 性能概述](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b)。</span><span class="sxs-lookup"><span data-stu-id="1780d-117">For more information on balancing the security benefit of event validation with its performance cost, see [ASP.NET Performance Overview](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1780d-118">返回以控件为目标的回调事件的结果。</span><span class="sxs-lookup"><span data-stu-id="1780d-118">Returns the results of a callback event that targets a control.</span></span></summary>
        <returns><span data-ttu-id="1780d-119">回调的结果。</span><span class="sxs-lookup"><span data-stu-id="1780d-119">The result of the callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1780d-120">中引发的异常<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>将不会阻止<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>从调用并返回结果。</span><span class="sxs-lookup"><span data-stu-id="1780d-120">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="1780d-121">若要防止<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>中引发了异常时，则返回一个结果，设置一个标志<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>并返回从空字符串<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>。</span><span class="sxs-lookup"><span data-stu-id="1780d-121">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><span data-ttu-id="1780d-122">一个字符串，表示要传递到事件处理程序的事件参数。</span><span class="sxs-lookup"><span data-stu-id="1780d-122">A string that represents an event argument to pass to the event handler.</span></span></param>
        <summary><span data-ttu-id="1780d-123">处理以控件为目标的回调事件。</span><span class="sxs-lookup"><span data-stu-id="1780d-123">Processes a callback event that targets a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1780d-124">当`null`使用作为事件自变量参数，该字符串序列化为"null"，然后发送回服务器。</span><span class="sxs-lookup"><span data-stu-id="1780d-124">When `null` is used as the event argument parameter, the string is serialized to "null" and sent back to the server.</span></span> <span data-ttu-id="1780d-125">因为没有方法来区分`null`和"null"，则应避免使用`null`回调的自变量参数。</span><span class="sxs-lookup"><span data-stu-id="1780d-125">Because there is no way to distinguish between `null` and "null", you should avoid using `null` argument parameters with callbacks.</span></span>  
  
 <span data-ttu-id="1780d-126">中引发的异常<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>将不会阻止<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>从调用并返回结果。</span><span class="sxs-lookup"><span data-stu-id="1780d-126">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="1780d-127">若要防止<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>中引发了异常时，则返回一个结果，设置一个标志<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>并返回从空字符串<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>。</span><span class="sxs-lookup"><span data-stu-id="1780d-127">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>