<Type Name="UpdatePanelUpdateMode" FullName="System.Web.UI.UpdatePanelUpdateMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5292c64c24773d34a9402add89b3761b40f06f8a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36375674" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum UpdatePanelUpdateMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UpdatePanelUpdateMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanelUpdateMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum UpdatePanelUpdateMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class UpdatePanelUpdateMode" />
  <TypeSignature Language="F#" Value="type UpdatePanelUpdateMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>表示 <see cref="T:System.Web.UI.UpdatePanel" /> 控件中内容可能的更新模式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanelUpdateMode>枚举定义的内容的可能的更新模式<xref:System.Web.UI.UpdatePanel>控件。 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性必须设置为的值之一<xref:System.Web.UI.UpdatePanelUpdateMode>枚举。 <xref:System.Web.UI.UpdatePanel>控件要求<xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>属性<xref:System.Web.UI.ScriptManager>控件为`true`局部页面呈现发生。  
  
 默认值<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性是始终。  
  
 如果<xref:System.Web.UI.UpdatePanelUpdateMode.Always>控件位于另一个<xref:System.Web.UI.UpdatePanel>更新控件和父面板，也将更新而不考虑，嵌套的面板<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性值。  
  
   
  
## Examples  
 下面的示例声明了两个<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>控件。 前面板集<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>属性<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>控件添加到条件。 第二个面板<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>默认设置为始终。 使用作为异步回发控件注册外部这两个面板的一个按钮<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>方法<xref:System.Web.UI.ScriptManager>控件。 在按钮的单击事件处理程序，<xref:System.Web.UI.UpdatePanel.Update%2A>如果时间超过五秒经过自其上次更新后会调用方法的第一个面板。 在此方案中，仅当上次面板更新已超过五秒，将更新的面板的内容。 第二个面板的内容始终更新。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.UpdatePanelUpdateMode Always = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.UpdatePanelUpdateMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberSignature Language="F#" Value="Always = 0" Usage="System.Web.UI.UpdatePanelUpdateMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>对于源于页面的所有回发，<see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容都会进行更新。 其中也包括异步回发。</summary>
      </Docs>
    </Member>
    <Member MemberName="Conditional">
      <MemberSignature Language="C#" Value="Conditional" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.UpdatePanelUpdateMode Conditional = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.UpdatePanelUpdateMode.Conditional" />
      <MemberSignature Language="VB.NET" Value="Conditional" />
      <MemberSignature Language="C++ CLI" Value="Conditional" />
      <MemberSignature Language="F#" Value="Conditional = 1" Usage="System.Web.UI.UpdatePanelUpdateMode.Conditional" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.UpdatePanel" /> 控件的内容会在满足以下条件时进行更新：</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   如果<xref:System.Web.UI.UpdatePanel.Update%2A>方法<xref:System.Web.UI.UpdatePanel>显式调用控件。  
  
-   如果控件定义为触发器使用的触发器属性<xref:System.Web.UI.UpdatePanel>控制并导致回发。 在此方案中，控件是显式触发器为更新面板内容。 触发器控件均可以是内部或外部<xref:System.Web.UI.UpdatePanel>定义该触发器的控件。  
  
-   如果<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>属性设置为`true`和子控件的<xref:System.Web.UI.UpdatePanel>控制会导致回发。 在此方案中，子控件的<xref:System.Web.UI.UpdatePanel>控件是用于更新面板的隐式触发器。 子控件的嵌套<xref:System.Web.UI.UpdatePanel>控件不会导致外部<xref:System.Web.UI.UpdatePanel>控件，除非它们显式定义为触发器会更新。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>