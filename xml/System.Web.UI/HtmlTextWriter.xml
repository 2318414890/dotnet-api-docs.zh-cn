<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <TypeSignature Language="C#" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HtmlTextWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextWriter : System::IO::TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="09602-101">将标记字符和文本写入 ASP.NET 服务器控件输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-101">Writes markup characters and text to an ASP.NET server control output stream.</span></span> <span data-ttu-id="09602-102">此类提供 ASP.NET 服务器控件在向客户端呈现标记时使用的格式化功能。</span><span class="sxs-lookup"><span data-stu-id="09602-102">This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-103"><xref:System.Web.UI.HtmlTextWriter>类用于呈现到桌面浏览器的 HTML 4.0。</span><span class="sxs-lookup"><span data-stu-id="09602-103">The <xref:System.Web.UI.HtmlTextWriter> class is used to render HTML 4.0 to desktop browsers.</span></span> <span data-ttu-id="09602-104"><xref:System.Web.UI.HtmlTextWriter>中的所有标记写入程序也都是基类<xref:System.Web.UI>命名空间，包括<xref:System.Web.UI.ChtmlTextWriter>， <xref:System.Web.UI.Html32TextWriter>，和<xref:System.Web.UI.XhtmlTextWriter>类。</span><span class="sxs-lookup"><span data-stu-id="09602-104">The <xref:System.Web.UI.HtmlTextWriter> is also the base class for all markup writers in the <xref:System.Web.UI> namespace, including the <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, and <xref:System.Web.UI.XhtmlTextWriter> classes.</span></span> <span data-ttu-id="09602-105">这些类用于写入元素、 属性和不同类型的标记的样式和布局信息。</span><span class="sxs-lookup"><span data-stu-id="09602-105">These classes are used to write the elements, attributes, and style and layout information for different types of markup.</span></span> <span data-ttu-id="09602-106">此外，通过与每个标记语言关联的页和控件适配器类使用这些类。</span><span class="sxs-lookup"><span data-stu-id="09602-106">In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</span></span>  
  
 <span data-ttu-id="09602-107">在大多数情况下，ASP.NET 自动使用的合适的编写器发出请求的设备。</span><span class="sxs-lookup"><span data-stu-id="09602-107">In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</span></span> <span data-ttu-id="09602-108">但是，如果你创建的自定义文本编写器，或者你想要指定特定的编写器来呈现特定设备的某页，你必须将编写器映射到中的页`controlAdapters`的应用程序.browser 文件的部分。</span><span class="sxs-lookup"><span data-stu-id="09602-108">However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the `controlAdapters` section of the application .browser file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-109">下面的代码示例演示如何重写<xref:System.Web.UI.Control.Render%2A>方法的自定义控件派生自<xref:System.Web.UI.Control>类。</span><span class="sxs-lookup"><span data-stu-id="09602-109">The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class.</span></span> <span data-ttu-id="09602-110">该代码示例说明如何使用各种<xref:System.Web.UI.HtmlTextWriter>方法、 属性和字段。</span><span class="sxs-lookup"><span data-stu-id="09602-110">The code example illustrates how to use various <xref:System.Web.UI.HtmlTextWriter> methods, properties, and fields.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#1)]
 [!code-vb[MarkupTextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <altmember cref="T:System.Web.UI.Html32TextWriter" />
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
    <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09602-111">初始化 <see cref="T:System.Web.UI.HtmlTextWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="09602-111">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class.</span></span></summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="09602-112">呈现标记内容的 <see cref="T:System.IO.TextWriter" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="09602-112">The <see cref="T:System.IO.TextWriter" /> instance that renders the markup content.</span></span></param>
        <summary><span data-ttu-id="09602-113">初始化使用默认制表符字符串的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="09602-113">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class that uses a default tab string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-114"><xref:System.Web.UI.HtmlTextWriter.%23ctor%2A>重载<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29>构造函数使用<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>常量需要某一行的缩进时。</span><span class="sxs-lookup"><span data-stu-id="09602-114">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant when indentation of a line is necessary.</span></span> <span data-ttu-id="09602-115">它调用<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>重载将初始化新实例。</span><span class="sxs-lookup"><span data-stu-id="09602-115">It calls the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> overload to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-116">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29>构造函数来创建自定义<xref:System.Web.UI.HtmlTextWriter>对象名为`StyledLabelHtmlWriter.`时`MyPage`自定义类，该类派生自<xref:System.Web.UI.Page>类中，客户端请求浏览器，它使用`StyledLabelHtmlWriter`类来显示其内容写入输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-116">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="09602-117">呈现标记内容的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="09602-117">The <see cref="T:System.IO.TextWriter" /> that renders the markup content.</span></span></param>
        <param name="tabString"><span data-ttu-id="09602-118">用于呈现行缩进的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-118">The string to use to render a line indentation.</span></span></param>
        <summary><span data-ttu-id="09602-119">使用指定的制表符字符串字符初始化 <see cref="T:System.Web.UI.HtmlTextWriter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="09602-119">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class with a specified tab string character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-120"><xref:System.Web.UI.HtmlTextWriter.%23ctor%2A>重载<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>构造函数使用`tabString`需要某一行的缩进时。</span><span class="sxs-lookup"><span data-stu-id="09602-120">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor uses `tabString` when indentation of a line is necessary.</span></span> <span data-ttu-id="09602-121">它调用<xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType>基构造函数来初始化新实例。</span><span class="sxs-lookup"><span data-stu-id="09602-121">It calls the <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> base constructor to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-122">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29>构造函数来创建自定义<xref:System.Web.UI.HtmlTextWriter>对象名为`StyledLabelHtmlWriter.`时`MyPage`自定义类，该类派生自<xref:System.Web.UI.Page>类中，客户端请求浏览器，它使用`StyledLabelHtmlWriter`类来显示其内容写入输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-122">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09602-123">将指定的标记属性和值添加到 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象创建的元素的开始标记，随后调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-123">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-124">包含要添加的属性名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-124">A string containing the name of the attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="09602-125">包含要分配给该属性的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-125">A string containing the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="09602-126">将指定的标记属性和值添加到 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象创建的元素的开始标记，随后调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-126">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-127">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>重载<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29>方法如果该属性不是之一<xref:System.Web.UI.HtmlTextWriterAttribute>值，或如果直到运行时才知道该属性。</span><span class="sxs-lookup"><span data-stu-id="09602-127">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time.</span></span>  
  
 <span data-ttu-id="09602-128">实例的任何给定的标记元素，<xref:System.Web.UI.HtmlTextWriter>类维护该元素的属性列表。</span><span class="sxs-lookup"><span data-stu-id="09602-128">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="09602-129">当<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>调用方法时，添加的任何属性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法均会呈现给元素的开始标记。</span><span class="sxs-lookup"><span data-stu-id="09602-129">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="09602-130">然后清除中的属性的列表<xref:System.Web.UI.HtmlTextWriter>对象。</span><span class="sxs-lookup"><span data-stu-id="09602-130">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="09602-131">用于呈现标记元素的编码模式是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="09602-131">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="09602-132">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法将任何属性添加到元素。</span><span class="sxs-lookup"><span data-stu-id="09602-132">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="09602-133">使用 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-133">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="09602-134">根据需要使用其他方法来呈现元素的开始和结束标记之间找到的内容。</span><span class="sxs-lookup"><span data-stu-id="09602-134">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="09602-135">使用 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-135">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-136">下面的代码示例演示如何调用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法之前调用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-136">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="09602-137">该代码调用的两个不同的重载<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>和两个不同重载<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>调用之前<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法呈现`<span>`元素写入输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-137">The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream.</span></span> <span data-ttu-id="09602-138"><xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29>方法用于定义自定义属性名为`CustomAttribute`和名为的自定义值`CustomAttributeValue`为`<span>`此代码将呈现的元素。</span><span class="sxs-lookup"><span data-stu-id="09602-138">The <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09602-139">表示将标记属性添加到输出流的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="09602-139">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="09602-140">包含要分配给该属性的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-140">A string containing the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="09602-141">将标记属性和属性值添加到 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象创建的元素的开始标记，随后调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-141">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-142">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>重载<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>方法呈现标准的标记特性。</span><span class="sxs-lookup"><span data-stu-id="09602-142">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to render a standard markup attribute.</span></span>  
  
 <span data-ttu-id="09602-143">实例的任何给定的标记元素，<xref:System.Web.UI.HtmlTextWriter>类维护该元素的属性列表。</span><span class="sxs-lookup"><span data-stu-id="09602-143">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="09602-144">当<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>调用方法时，通过添加任何属性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法均会呈现给元素的开始标记。</span><span class="sxs-lookup"><span data-stu-id="09602-144">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes that are added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="09602-145">然后清除中的属性的列表<xref:System.Web.UI.HtmlTextWriter>。</span><span class="sxs-lookup"><span data-stu-id="09602-145">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter>.</span></span>  
  
 <span data-ttu-id="09602-146">用于呈现标记元素的编码模式是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="09602-146">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="09602-147">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法将任何属性添加到元素。</span><span class="sxs-lookup"><span data-stu-id="09602-147">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="09602-148">使用 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-148">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="09602-149">根据需要使用其他方法来呈现元素的开始和结束标记之间找到的内容。</span><span class="sxs-lookup"><span data-stu-id="09602-149">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="09602-150">使用 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-150">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-151">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>重载<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>方法将添加`Onclick`特性到标记元素，并将其值设置为以下 ECMAScript 代码：</span><span class="sxs-lookup"><span data-stu-id="09602-151">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:</span></span>  
  
```  
alert('Hello');  
```  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#1)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value, bool fEndode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value, bool fEndode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String, fEndode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, bool fEndode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEndode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-152">包含要添加的属性名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-152">A string containing the name of the attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="09602-153">包含要分配给该属性的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-153">A string containing the value to assign to the attribute.</span></span></param>
        <param name="fEndode">
          <span data-ttu-id="09602-154">若对属性及其值进行编码，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09602-154"><see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="09602-155">将指定的标记属性和值添加到 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象创建的元素的开始标记，随后使用可选编码调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-155">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-156">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>重载<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>方法如果该属性不是之一<xref:System.Web.UI.HtmlTextWriterAttribute>值，或者直到运行的时和编码才知道该属性是否需要。</span><span class="sxs-lookup"><span data-stu-id="09602-156">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time and encoding is needed.</span></span>  
  
 <span data-ttu-id="09602-157">实例的任何给定的标记元素，<xref:System.Web.UI.HtmlTextWriter>类维护该元素的属性列表。</span><span class="sxs-lookup"><span data-stu-id="09602-157">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="09602-158">当<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>调用方法时，添加的任何属性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法均会呈现给元素的开始标记。</span><span class="sxs-lookup"><span data-stu-id="09602-158">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="09602-159">然后清除中的属性的列表<xref:System.Web.UI.HtmlTextWriter>对象。</span><span class="sxs-lookup"><span data-stu-id="09602-159">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="09602-160">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>方法替换`fEncode`设置为`true`，如果属性可能包含引号 （"）、 小于号 (<)，或与号 (&)。</span><span class="sxs-lookup"><span data-stu-id="09602-160">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="09602-161">方法调用将对要满足请求的设备的要求的属性进行编码。</span><span class="sxs-lookup"><span data-stu-id="09602-161">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="09602-162">你可以设置`fEncode`到`false`，如果你知道，将生成无这些字符，或者如果您知道已经属性进行了编码。</span><span class="sxs-lookup"><span data-stu-id="09602-162">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
  
 <span data-ttu-id="09602-163">用于呈现标记元素的编码模式是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="09602-163">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="09602-164">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法将任何属性添加到元素。</span><span class="sxs-lookup"><span data-stu-id="09602-164">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="09602-165">使用 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-165">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="09602-166">根据需要使用其他方法来呈现元素的开始和结束标记之间找到的内容。</span><span class="sxs-lookup"><span data-stu-id="09602-166">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="09602-167">使用 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-167">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-168">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>重载<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>方法来确保名为的自定义特性`myattribute`，并且其值未编码为`<img>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-168">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttribute (name As String, value As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-169">包含要添加的属性名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-169">A string containing the name of the attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="09602-170">包含要分配给该属性的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-170">A string containing the value to assign to the attribute.</span></span></param>
        <param name="key"><span data-ttu-id="09602-171">表示属性的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="09602-171">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the attribute.</span></span></param>
        <summary><span data-ttu-id="09602-172">将指定的标记属性、值以及 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 枚举值添加到 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象创建的元素的开始标记，随后调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-172">Adds the specified markup attribute and value, along with an <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value, to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-173">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>重载<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29>方法从继承时，仅<xref:System.Web.UI.HtmlTextWriter>类。</span><span class="sxs-lookup"><span data-stu-id="09602-173">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="09602-174">它使您能够创建新`name`和`key`对的属性。</span><span class="sxs-lookup"><span data-stu-id="09602-174">It enables you to create new `name` and `key` pairs for attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value, bool fEncode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09602-175">表示将标记属性添加到输出流的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="09602-175">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="09602-176">包含要分配给该属性的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-176">A string containing the value to assign to the attribute.</span></span></param>
        <param name="fEncode">
          <span data-ttu-id="09602-177">若对属性及其值进行编码，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09602-177"><see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="09602-178">将标记属性和属性值添加到 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象创建的元素的开始标记中，随后使用可选编码调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-178">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-179">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>重载<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29>方法呈现标准的标记特性，使用可选的编码。</span><span class="sxs-lookup"><span data-stu-id="09602-179">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to render a standard markup attribute, with optional encoding.</span></span>  
  
 <span data-ttu-id="09602-180">实例的任何给定的标记元素，<xref:System.Web.UI.HtmlTextWriter>类维护该元素的属性列表。</span><span class="sxs-lookup"><span data-stu-id="09602-180">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="09602-181">当<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>调用方法时，添加的任何属性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>均会呈现给元素的开始标记。</span><span class="sxs-lookup"><span data-stu-id="09602-181">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> are rendered to the opening tag of the element.</span></span> <span data-ttu-id="09602-182">然后清除中的属性的列表<xref:System.Web.UI.HtmlTextWriter>对象。</span><span class="sxs-lookup"><span data-stu-id="09602-182">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="09602-183">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29>方法替换`fEncode`设置为`true`，如果属性可能包含引号 （"）、 小于号 (<)，或与号 (&)。</span><span class="sxs-lookup"><span data-stu-id="09602-183">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="09602-184">方法调用将对要满足请求的设备的要求的属性进行编码。</span><span class="sxs-lookup"><span data-stu-id="09602-184">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="09602-185">你可以设置`fEncode`到`false`，如果你知道，将生成无这些字符，或者如果您知道已经属性进行了编码。</span><span class="sxs-lookup"><span data-stu-id="09602-185">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
  
 <span data-ttu-id="09602-186">用于呈现标记元素的编码模式是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="09602-186">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="09602-187">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法将任何属性添加到元素。</span><span class="sxs-lookup"><span data-stu-id="09602-187">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="09602-188">使用 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-188">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="09602-189">根据需要使用其他方法来呈现元素的开始和结束标记之间找到的内容。</span><span class="sxs-lookup"><span data-stu-id="09602-189">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="09602-190">使用 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-190">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-191">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29>方法来确保分配给的字符串值`Alt`属性，则为`<img>`元素编码为请求的设备。</span><span class="sxs-lookup"><span data-stu-id="09602-191">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09602-192">将标记样式属性添加到 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象创建的元素的开始标记，随后调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-192">Adds a markup style attribute to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-193">包含要添加的样式属性的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-193">A string that contains the style attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="09602-194">包含要分配给该属性的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-194">A string that contains the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="09602-195">对于通过对 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法的后续调用创建的开始标记，向其中添加指定的标记样式属性和属性值。</span><span class="sxs-lookup"><span data-stu-id="09602-195">Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-196">使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>重载<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29>方法样式不是的成员时<xref:System.Web.UI.HtmlTextWriterStyle>枚举或直到运行时才知道。</span><span class="sxs-lookup"><span data-stu-id="09602-196">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method when the style is not a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration or is not known until run time.</span></span>  
  
 <span data-ttu-id="09602-197"><xref:System.Web.UI.HtmlTextWriter>类维护它呈现标记元素的样式的列表。</span><span class="sxs-lookup"><span data-stu-id="09602-197">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="09602-198">当<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>调用方法时，通过添加任何样式<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法均会呈现给元素的开始标记。</span><span class="sxs-lookup"><span data-stu-id="09602-198">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles that are added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="09602-199">然后清除样式的列表。</span><span class="sxs-lookup"><span data-stu-id="09602-199">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="09602-200">用于呈现标记元素的编码模式是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="09602-200">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="09602-201">使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法可添加任何样式属性的元素。</span><span class="sxs-lookup"><span data-stu-id="09602-201">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="09602-202">使用 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-202">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="09602-203">根据需要使用其他方法来呈现元素的开始和结束标记之间找到的内容。</span><span class="sxs-lookup"><span data-stu-id="09602-203">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="09602-204">使用 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-204">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-205">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>重载<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29>方法呈现`font-size`和`color`上样式特性`<p>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-205">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method to render `font-size` and `color` style attributes on a `<p>` element.</span></span> <span data-ttu-id="09602-206">此代码示例使用<xref:System.Web.UI.HtmlTextWriter>类来呈现控件的内容。</span><span class="sxs-lookup"><span data-stu-id="09602-206">This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.</span></span>  
  
 [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CPP/htmltextwriter_addstyleattribute.cpp#1)]
 [!code-csharp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CS/htmltextwriter_addstyleattribute.cs#1)]
 [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/VB/htmltextwriter_addstyleattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09602-207">表示将样式属性添加到输出流的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="09602-207">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="09602-208">包含要分配给该属性的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-208">A string that contains the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="09602-209">对于通过对 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 方法的后续调用而创建的开始标记，向其中添加与指定的 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 值相关联的标记样式属性和属性值。</span><span class="sxs-lookup"><span data-stu-id="09602-209">Adds the markup style attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> value and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-210">使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>重载<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29>方法样式时<xref:System.Web.UI.HtmlTextWriterStyle>枚举和在运行时之前已知。</span><span class="sxs-lookup"><span data-stu-id="09602-210">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> method when the style is a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration and is known before run time.</span></span>  
  
 <span data-ttu-id="09602-211"><xref:System.Web.UI.HtmlTextWriter>类维护它呈现标记元素的样式的列表。</span><span class="sxs-lookup"><span data-stu-id="09602-211">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="09602-212">当<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>调用方法时，添加的任何样式<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法均会呈现给元素的开始标记。</span><span class="sxs-lookup"><span data-stu-id="09602-212">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="09602-213">然后清除样式的列表。</span><span class="sxs-lookup"><span data-stu-id="09602-213">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="09602-214">用于呈现标记元素的编码模式是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="09602-214">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="09602-215">使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法可添加任何样式属性的元素。</span><span class="sxs-lookup"><span data-stu-id="09602-215">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="09602-216">使用 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-216">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="09602-217">根据需要使用其他方法来呈现元素的开始和结束标记之间找到的内容。</span><span class="sxs-lookup"><span data-stu-id="09602-217">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="09602-218">使用 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="09602-218">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-219">下面的代码示例演示如何使用的重写的一部分<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>从派生类中的方法<xref:System.Web.UI.HtmlTextWriter>类。</span><span class="sxs-lookup"><span data-stu-id="09602-219">The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="09602-220">代码将检查是否`<Label>`元素呈现。</span><span class="sxs-lookup"><span data-stu-id="09602-220">The code checks whether a `<Label>` element is being rendered.</span></span> <span data-ttu-id="09602-221">如果是这样，<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>方法调用以检查是否`Color`已定义的样式属性`<Label>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-221">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element.</span></span> <span data-ttu-id="09602-222">如果`Color`未定义属性，该代码调用的此重载<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法将添加`Color`到样式属性，属性，然后将其值设置为`red`。</span><span class="sxs-lookup"><span data-stu-id="09602-222">If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddStyleAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddStyleAttribute (name As String, value As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-223">包含要添加的样式属性的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-223">A string that contains the style attribute to be added.</span></span></param>
        <param name="value"><span data-ttu-id="09602-224">包含要分配给该属性的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-224">A string that contains the value to assign to the attribute.</span></span></param>
        <param name="key"><span data-ttu-id="09602-225">表示要添加的样式属性的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="09602-225">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add.</span></span></param>
        <summary><span data-ttu-id="09602-226">对于通过对 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 方法的后续调用而创建的开始标记，向其中添加指定的标记样式属和属性值以及 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="09602-226">Adds the specified markup style attribute and the attribute value, along with an <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value, to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-227">使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>重载<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29>方法从继承时，仅<xref:System.Web.UI.HtmlTextWriter>类。</span><span class="sxs-lookup"><span data-stu-id="09602-227">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="09602-228">它使您能够创建新`name`和`value`对为<xref:System.Web.UI.HtmlTextWriterStyle>属性。</span><span class="sxs-lookup"><span data-stu-id="09602-228">It enables you to create new `name` and `value` pairs for <xref:System.Web.UI.HtmlTextWriterStyle> attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="public virtual void BeginRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginRender();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-229">通知 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象或派生类的对象，将会呈现某个控件。</span><span class="sxs-lookup"><span data-stu-id="09602-229">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control is about to be rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-230"><xref:System.Web.UI.HtmlTextWriter>类实现<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>方法没有任何功能。</span><span class="sxs-lookup"><span data-stu-id="09602-230">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method has no functionality.</span></span> <span data-ttu-id="09602-231">必须重写<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>从派生类中的方法<xref:System.Web.UI.HtmlTextWriter>以提供您自己的呈现功能。</span><span class="sxs-lookup"><span data-stu-id="09602-231">You must override the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method in a class derived from <xref:System.Web.UI.HtmlTextWriter> to provide your own rendering functionality.</span></span> <span data-ttu-id="09602-232">例如，在可能需要的标记语言`<p>`元素靠某控件，但位置之前立即呈现需`<p>`以前确定元素，则可以使用<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>重写。</span><span class="sxs-lookup"><span data-stu-id="09602-232">For example, in a markup language that might require `<p>` elements to be rendered immediately ahead of a control, but where the need for the `<p>` element is determined earlier, you could use the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-233">关闭 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象并释放与之关联的所有系统资源。</span><span class="sxs-lookup"><span data-stu-id="09602-233">Closes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and releases any system resources associated with it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-234">此实现的<xref:System.Web.UI.HtmlTextWriter.Close%2A>方法调用<xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-234">This implementation of the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method calls the <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> base method.</span></span>  
  
 <span data-ttu-id="09602-235">在调用<xref:System.Web.UI.HtmlTextWriter.Close%2A>方法、 任何操作<xref:System.Web.UI.HtmlTextWriter>对象可能会引发异常，因为已发布所有资源。</span><span class="sxs-lookup"><span data-stu-id="09602-235">Following a call to the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method, any operations on the <xref:System.Web.UI.HtmlTextWriter> object might throw exceptions because all its resources have been released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.IO.TextWriter.Close" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTabString">
      <MemberSignature Language="C#" Value="public const string DefaultTabString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTabString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTabString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultTabString;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-236">表示单个制表符。</span><span class="sxs-lookup"><span data-stu-id="09602-236">Represents a single tab character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-237">由 ASCII 9 字符表示单个选项卡。</span><span class="sxs-lookup"><span data-stu-id="09602-237">The single tab is represented by the ASCII 9 character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-238">下面的代码示例演示如何创建的构造函数的<xref:System.IO.TextWriter>对象作为参数，并将<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>字段作为参数传递到构造函数的第二个版本。</span><span class="sxs-lookup"><span data-stu-id="09602-238">The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field as a parameter argument to a second version of the constructor.</span></span> <span data-ttu-id="09602-239">当从代码中，调用此构造函数时<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>字段定义的实例由一个或多个适配器的标记编写的缩进策略。</span><span class="sxs-lookup"><span data-stu-id="09602-239">When this constructor is called from code, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#1)]
 [!code-vb[MarkupTextWriter_Methods3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteChar">
      <MemberSignature Language="C#" Value="public const char DoubleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DoubleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const DoubleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char DoubleQuoteChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-240">表示引号 (") 字符。</span><span class="sxs-lookup"><span data-stu-id="09602-240">Represents the quotation mark (") character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-241"><xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>字段由<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法来关闭属性。</span><span class="sxs-lookup"><span data-stu-id="09602-241">The <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to close an attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-242">下面的代码示例演示如何呈现`border`属性，则为`<table>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-242">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="09602-243">该代码调用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现属性及其值，并使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现<xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>和<xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>字段。</span><span class="sxs-lookup"><span data-stu-id="09602-243">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="09602-244">此代码示例将会呈现以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-244">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.Write" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EncodeAttributeValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09602-245">根据当前上下文的 <see cref="T:System.Web.HttpRequest" /> 对象的要求，对指定标记特性的值进行编码。</span><span class="sxs-lookup"><span data-stu-id="09602-245">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected string EncodeAttributeValue (string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeAttributeValue(string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeAttributeValue (value As String, fEncode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeAttributeValue(System::String ^ value, bool fEncode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-246">包含要编码的特性值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-246">A string containing the attribute value to encode.</span></span></param>
        <param name="fEncode">
          <span data-ttu-id="09602-247">若要对特性值进行编码，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09602-247"><see langword="true" /> to encode the attribute value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="09602-248">根据当前上下文的 <see cref="T:System.Web.HttpRequest" /> 对象的要求，对指定标记特性的值进行编码。</span><span class="sxs-lookup"><span data-stu-id="09602-248">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span></span></summary>
        <returns><span data-ttu-id="09602-249">包含已编码特性值的字符串；如果 <paramref name="value" /> 为空，则为 <see langword="null" />；如果 <paramref name="fEncode" /> 为 <see langword="false" />，则为包含未编码特性值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-249">A string containing the encoded attribute value, <see langword="null" /> if <paramref name="value" /> is empty, or the unencoded attribute value if <paramref name="fEncode" /> is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-250">使用<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>重载<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>方法如果该属性不是<xref:System.Web.UI.HtmlTextWriterAttribute>枚举值或直到运行时才知道。</span><span class="sxs-lookup"><span data-stu-id="09602-250">Use the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method if the attribute is not an <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value or is not known until run time.</span></span>  
  
 <span data-ttu-id="09602-251"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>方法可以删除两个双引号 （"）、 & 号 (&)，并小于无论输入，将不生成符号 (<)，因此该无效标记。</span><span class="sxs-lookup"><span data-stu-id="09602-251">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="09602-252">实际编码由执行<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-252">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-253">下面的代码示例演示如何调用<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>方法中的参数作为<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法调用，并将然后编码`color:blue`样式特性值。</span><span class="sxs-lookup"><span data-stu-id="09602-253">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#5](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#5)]
 [!code-csharp[HtmlTextWriter_Methods#5](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#5)]
 [!code-vb[HtmlTextWriter_Methods#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EncodeAttributeValue(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncodeAttributeValue (attrKey As HtmlTextWriterAttribute, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ EncodeAttributeValue(System::Web::UI::HtmlTextWriterAttribute attrKey, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrKey"><span data-ttu-id="09602-254">表示标记属性的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="09602-254">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> representing the markup attribute.</span></span></param>
        <param name="value"><span data-ttu-id="09602-255">包含要编码的特性值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-255">A string containing the attribute value to encode.</span></span></param>
        <summary><span data-ttu-id="09602-256">根据当前上下文的 <see cref="T:System.Web.HttpRequest" /> 对象的要求，对指定标记特性的值进行编码。</span><span class="sxs-lookup"><span data-stu-id="09602-256">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span></span></summary>
        <returns><span data-ttu-id="09602-257">包含已编码的属性值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-257">A string containing the encoded attribute value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-258"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>方法可以删除两个双引号 （"）、 & 号 (&)，并小于无论输入，将不生成符号 (<)，因此该无效标记。</span><span class="sxs-lookup"><span data-stu-id="09602-258">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="09602-259">实际编码由执行<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-259">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeUrl">
      <MemberSignature Language="C#" Value="protected string EncodeUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeUrl(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="09602-260">包含要进行编码的 URL 的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-260">A string containing the URL to encode.</span></span></param>
        <summary><span data-ttu-id="09602-261">通过将指定的 URL 中的空格转换为字符串“%20”，以执行最小 URL 编码。</span><span class="sxs-lookup"><span data-stu-id="09602-261">Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</span></span></summary>
        <returns><span data-ttu-id="09602-262">包含已编码 URL 的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-262">A string containing the encoded URL.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-263">URL 编码的字符由百分比符号 （%） 后, 跟两位数十六进制表示形式 （不区分大小写） 的字符的 ISO Latin 码位组成。</span><span class="sxs-lookup"><span data-stu-id="09602-263">URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</span></span> <span data-ttu-id="09602-264">空格的十六进制表示为 20。</span><span class="sxs-lookup"><span data-stu-id="09602-264">The hexadecimal representation of a space is 20.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-265">下面的代码示例演示如何调用<xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A>方法将转换为中的参数传递的 URL 中的任何空格<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="09602-265">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#6)]
 [!code-vb[HtmlTextWriter_Methods#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-266">获取 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象用于将内容写入页面的编码。</span><span class="sxs-lookup"><span data-stu-id="09602-266">Gets the encoding that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object uses to write content to the page.</span></span></summary>
        <value><span data-ttu-id="09602-267">将标记写入页中时所采用的 <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="09602-267">The <see cref="T:System.Text.Encoding" /> in which the markup is written to the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-268"><xref:System.Web.UI.HtmlTextWriter.Encoding%2A>属性获得它的值从基<xref:System.IO.TextWriter>对象。</span><span class="sxs-lookup"><span data-stu-id="09602-268">The <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property obtains its value from the base <xref:System.IO.TextWriter> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-269">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.Encoding%2A>编写的自定义控件用于呈现为包含它的页的文本编码类型的属性。</span><span class="sxs-lookup"><span data-stu-id="09602-269">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property to write the type of encoding that a custom control uses to render text to the page that contains it.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#2)]
 [!code-csharp[HtmlTextWriter_Properties#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#2)]
 [!code-vb[HtmlTextWriter_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="public virtual void EndRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EndRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndRender();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-270">通知 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象或某个派生类的对象，某控件已完成呈现。</span><span class="sxs-lookup"><span data-stu-id="09602-270">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control has finished rendering.</span></span> <span data-ttu-id="09602-271">可使用此方法关闭在 <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> 方法中打开的任何标记元素。</span><span class="sxs-lookup"><span data-stu-id="09602-271">You can use this method to close any markup elements opened in the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-272"><xref:System.Web.UI.HtmlTextWriter>类实现<xref:System.Web.UI.HtmlTextWriter.EndRender%2A>方法没有任何功能。</span><span class="sxs-lookup"><span data-stu-id="09602-272">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method has no functionality.</span></span> <span data-ttu-id="09602-273">必须重写<xref:System.Web.UI.HtmlTextWriter.EndRender%2A>从派生类中<xref:System.Web.UI.HtmlTextWriter>类以提供您自己的呈现功能。</span><span class="sxs-lookup"><span data-stu-id="09602-273">You must override <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to provide your own rendering functionality.</span></span>  
  
 <span data-ttu-id="09602-274">你可以使用<xref:System.Web.UI.HtmlTextWriter.EndRender%2A>方法来关闭任何标记元素在中打开<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-274">You can use the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method to close any markup elements opened in the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      </Docs>
    </Member>
    <Member MemberName="EndTagLeftChars">
      <MemberSignature Language="C#" Value="public const string EndTagLeftChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EndTagLeftChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberSignature Language="VB.NET" Value="Public Const EndTagLeftChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EndTagLeftChars;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-275">表示标记元素结束标记的左尖括号和斜线 (&lt;/)。</span><span class="sxs-lookup"><span data-stu-id="09602-275">Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-276"><xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars>字段由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法来构造标记元素结束标记。</span><span class="sxs-lookup"><span data-stu-id="09602-276">The <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to construct markup element end tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-277">下面的代码示例演示如何呈现的结束标记`<table>`标记元素中的使用<xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars>和<xref:System.Web.UI.HtmlTextWriter.TagRightChar>中调用的参数值的字段<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-277">The following code example shows how to render the closing tag of a `<table>` markup element by using the <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 <span data-ttu-id="09602-278">此代码示例将会呈现以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-278">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EnterStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09602-279">写入标记元素的开始标记，该标记元素包含实现指定样式布局和字符格式化的属性。</span><span class="sxs-lookup"><span data-stu-id="09602-279">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="09602-280">一个 <see cref="T:System.Web.UI.WebControls.Style" />，用于指定要开始应用到标记块的布局和格式设置。</span><span class="sxs-lookup"><span data-stu-id="09602-280">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span></span></param>
        <summary><span data-ttu-id="09602-281">写入 <see langword="&lt;span&gt;" /> 元素的开始标记，该元素包含实现指定样式的布局和字符格式化的属性。</span><span class="sxs-lookup"><span data-stu-id="09602-281">Writes the opening tag of a <see langword="&lt;span&gt;" /> element that contains attributes that implement the layout and character formatting of the specified style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-282">使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法将样式，背景颜色的边框宽度，如应用于标记的块。</span><span class="sxs-lookup"><span data-stu-id="09602-282">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="09602-283"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>和<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法允许设备适配器或控件，若要创建使用指定样式的字符格式的标记。</span><span class="sxs-lookup"><span data-stu-id="09602-283">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="09602-284">使用相同的值`style`中<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>使用在相应的方法<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-284">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="09602-285"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>重载<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>方法将呈现的开始标记`<span>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-285">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> method renders the opening tag of a `<span>` element.</span></span> <span data-ttu-id="09602-286">此方法然后将添加必要的特性和样式特性到的开始标记`<span>`元素显示由指定的设置<xref:System.Web.UI.WebControls.Style>对象。</span><span class="sxs-lookup"><span data-stu-id="09602-286">This method then adds the necessary attributes and style attributes to the opening tag of the `<span>` element to display the settings specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="09602-287">如果你想要呈现要包含的特性和样式特性，请使用不同的标记元素<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>重载。</span><span class="sxs-lookup"><span data-stu-id="09602-287">If you want to render a different markup element to contain the attributes and style attributes, use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-288">下面的代码示例演示如何使用一个名为的自定义类`TextSample`派生自<xref:System.Web.UI.WebControls.WebControl>类，使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法以应用<xref:System.Web.UI.WebControls.Style.ForeColor%2A>样式应用到的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-288">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="09602-289"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法上呈现 HTML `<span style="color:Navy;">`。</span><span class="sxs-lookup"><span data-stu-id="09602-289">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="09602-290"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法调用关闭`<span>`元素后呈现的文本。</span><span class="sxs-lookup"><span data-stu-id="09602-290">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="09602-291">一个 <see cref="T:System.Web.UI.WebControls.Style" />，用于指定要开始应用到标记块的布局和格式设置。</span><span class="sxs-lookup"><span data-stu-id="09602-291">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span></span></param>
        <param name="tag"><span data-ttu-id="09602-292">一个 <see cref="T:System.Web.UI.HtmlTextWriterTag" />，用于指定标记元素的开始标记，该标记将包含 <c>style</c> 中指定的样式对象。</span><span class="sxs-lookup"><span data-stu-id="09602-292">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the opening tag of the markup element that will contain the style object specified in <c>style</c>.</span></span></param>
        <summary><span data-ttu-id="09602-293">写入标记元素的开始标记，该标记元素包含实现指定样式布局和字符格式化的属性。</span><span class="sxs-lookup"><span data-stu-id="09602-293">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-294">使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法将样式，背景颜色的边框宽度，如应用于标记的块。</span><span class="sxs-lookup"><span data-stu-id="09602-294">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="09602-295"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>和<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法允许设备适配器或控件，若要创建使用指定样式的字符格式的标记。</span><span class="sxs-lookup"><span data-stu-id="09602-295">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="09602-296">使用相同的值`style`中<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>使用在相应的方法<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-296">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="09602-297"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>重载<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>方法呈现指定的元素的开始标记`tag`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-297">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the opening tag of the element specified by the `tag` parameter.</span></span> <span data-ttu-id="09602-298"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>方法然后将添加必要的特性和样式特性到要显示的设置由指定的元素的开始标记<xref:System.Web.UI.WebControls.Style>对象。</span><span class="sxs-lookup"><span data-stu-id="09602-298">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="09602-299">使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>要呈现的开始标记重载`<span>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-299">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> overload to render the opening tag of a `<span>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-300">下面的代码示例演示如何使用一个名为的自定义类`TextSample`派生自<xref:System.Web.UI.WebControls.WebControl>类，使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法以应用<xref:System.Web.UI.WebControls.Style.ForeColor%2A>样式应用到的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-300">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="09602-301"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法上呈现 HTML`<span style="color:Navy;">`。</span><span class="sxs-lookup"><span data-stu-id="09602-301">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style="color:Navy;">`.</span></span> <span data-ttu-id="09602-302"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法调用关闭`<span>`元素后呈现的文本。</span><span class="sxs-lookup"><span data-stu-id="09602-302">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EqualsChar">
      <MemberSignature Language="C#" Value="public const char EqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char EqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char EqualsChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-303">表示等号 (<see langword="=" />)。</span><span class="sxs-lookup"><span data-stu-id="09602-303">Represents the equal sign (<see langword="=" />).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-304">你可能想要使用<xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>字段而不是<xref:System.Web.UI.HtmlTextWriter.EqualsChar>字段构造的属性值的左分隔符时。</span><span class="sxs-lookup"><span data-stu-id="09602-304">You might want to use the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field instead of the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field when constructing the opening delimiter of an attribute value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-305">下面的代码示例演示如何呈现`src`属性，其值的一部分`<img>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-305">The following code example shows how to render the `src` attribute and part of its value for an `<img>` element.</span></span> <span data-ttu-id="09602-306">该代码使用<xref:System.Web.UI.HtmlTextWriter.EqualsChar>字段<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法调用之间呈现等号 （=）`src`特性，并且其值。</span><span class="sxs-lookup"><span data-stu-id="09602-306">The code uses the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.</span></span>  
  
 <span data-ttu-id="09602-307">此代码示例将会呈现以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-307">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      </Docs>
    </Member>
    <Member MemberName="EqualsDoubleQuoteString">
      <MemberSignature Language="C#" Value="public const string EqualsDoubleQuoteString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EqualsDoubleQuoteString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsDoubleQuoteString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EqualsDoubleQuoteString;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-308">表示字符串 (=") 中合并在一起的等号 (=) 和双引号 (")。</span><span class="sxs-lookup"><span data-stu-id="09602-308">Represents an equal sign (=) and a double quotation mark (") together in a string (=").</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-309"><xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>字段由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>和<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法，用于构造的属性值的左分隔符。</span><span class="sxs-lookup"><span data-stu-id="09602-309">The <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods to construct the opening delimiter of attribute values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-310">下面的代码示例演示如何呈现`border`属性，则为`<table>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-310">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="09602-311">该代码调用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现属性及其值，并使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现<xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>和<xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>字段。</span><span class="sxs-lookup"><span data-stu-id="09602-311">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="09602-312">此代码示例将会呈现以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-312">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExitStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09602-313">写入标记元素的结束标记以结束指定的布局和字符格式设置。</span><span class="sxs-lookup"><span data-stu-id="09602-313">Writes the closing tag of a markup element to end the specified layout and character formatting.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="09602-314">一个 <see cref="T:System.Web.UI.WebControls.Style" />，指定要关闭的布局和格式设置。</span><span class="sxs-lookup"><span data-stu-id="09602-314">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to close.</span></span></param>
        <summary><span data-ttu-id="09602-315">写入 <see langword="&lt;span&gt;" /> 元素的结束标记以结束指定的布局和字符格式设置。</span><span class="sxs-lookup"><span data-stu-id="09602-315">Writes the closing tag of a <see langword="&lt;span&gt;" /> element to end the specified layout and character formatting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-316"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>重载<xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29>方法将呈现的结束标记`<span>`元素的控件的结束标记后面，关闭元素打开相应<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="09602-316">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> method renders the closing tag of a `<span>` element after the closing tag of the control, closing the element opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> call.</span></span>  
  
 <span data-ttu-id="09602-317"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>和<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法允许设备适配器或控件创建的开始和结束块通过使用指定样式的字符格式的标记。</span><span class="sxs-lookup"><span data-stu-id="09602-317">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="09602-318">使用相同的值`style`中<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>使用在相应的方法<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-318">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-319">下面的代码示例演示如何使用一个名为的自定义类`TextSample`派生自<xref:System.Web.UI.WebControls.WebControl>类，使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法以应用<xref:System.Web.UI.WebControls.Style.ForeColor%2A>样式应用到的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-319">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="09602-320"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法上呈现 HTML `<span style="color:Navy;">`。</span><span class="sxs-lookup"><span data-stu-id="09602-320">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="09602-321"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法调用关闭`<span>`元素后呈现的文本。</span><span class="sxs-lookup"><span data-stu-id="09602-321">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="09602-322">一个 <see cref="T:System.Web.UI.WebControls.Style" />，它指定要停止应用到输出文本的布局和格式。</span><span class="sxs-lookup"><span data-stu-id="09602-322">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to stop applying to the output text.</span></span></param>
        <param name="tag"><span data-ttu-id="09602-323">一个 <see cref="T:System.Web.UI.HtmlTextWriterTag" />，它指定标记元素的结束标记，该标记元素包含应用指定样式的属性。</span><span class="sxs-lookup"><span data-stu-id="09602-323">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</span></span> <span data-ttu-id="09602-324">此必须与在相应的 <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> 调用中所传递的密钥相匹配。</span><span class="sxs-lookup"><span data-stu-id="09602-324">This must match the key passed in the corresponding <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> call.</span></span></param>
        <summary><span data-ttu-id="09602-325">写入指定的标记元素的结束标记，以结束指定的布局和字符格式。</span><span class="sxs-lookup"><span data-stu-id="09602-325">Writes the closing tag of the specified markup element to end the specified layout and character formatting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-326"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>重载<xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>方法呈现由指定的元素的结束标记`tag`控件的结束标记之后, 关闭已打开相应的元素<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>方法调用。</span><span class="sxs-lookup"><span data-stu-id="09602-326">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the closing tag of the element that is specified by `tag` after the closing tag of the control, closing the element that was opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method call.</span></span>  
  
 <span data-ttu-id="09602-327"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>和<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法允许设备适配器或控件创建的开始和结束块通过使用指定样式的字符格式的标记。</span><span class="sxs-lookup"><span data-stu-id="09602-327">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="09602-328">使用相同的值`style`中<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>使用在相应的方法<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-328">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-329">下面的代码示例演示如何使用一个名为的自定义类`TextSample`派生自<xref:System.Web.UI.WebControls.WebControl>类，使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法以应用<xref:System.Web.UI.WebControls.Style.ForeColor%2A>样式应用到的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-329">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="09602-330"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法上呈现 HTML `<span style="color:Navy;">`。</span><span class="sxs-lookup"><span data-stu-id="09602-330">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="09602-331"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法调用关闭`<span>`元素后呈现的文本。</span><span class="sxs-lookup"><span data-stu-id="09602-331">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FilterAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FilterAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.FilterAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FilterAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FilterAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-332">移除页面或 Web 服务器控件的所有属性上的所有标记和样式属性。</span><span class="sxs-lookup"><span data-stu-id="09602-332">Removes all the markup and style attributes on all properties of the page or Web server control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-333">上一个标记元素中，呈现特性之前<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="09602-333">Before attributes are rendered on a markup element, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method is called.</span></span> <span data-ttu-id="09602-334">反过来，<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法调用<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>和<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>对于每个属性和样式呈现的方法。</span><span class="sxs-lookup"><span data-stu-id="09602-334">In turn, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> methods for each attribute and style to render.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-335">下面的代码示例演示如何使用自定义类，派生自<xref:System.Web.UI.HtmlTextWriter>类，并重写<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-335">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="09602-336">调用时，<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>替代检查的文本编写器是否呈现任何`<label>`或`<a>`元素：</span><span class="sxs-lookup"><span data-stu-id="09602-336">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements:</span></span>  
  
-   <span data-ttu-id="09602-337">如果`<label>`呈现元素时，<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法检查是否`style`属性呈现在元素上，而且，如果不是，创建`style`属性，并将其设置为`color: blue`。</span><span class="sxs-lookup"><span data-stu-id="09602-337">If a `<label>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.</span></span>  
  
-   <span data-ttu-id="09602-338">如果`<a>`呈现元素时，<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法确定是否`href`属性包含并，如果不是，将添加`href`到 URL http://www.cohowinery.com。</span><span class="sxs-lookup"><span data-stu-id="09602-338">If an `<a>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-339">清理当前 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象的所有缓冲区并使所有缓冲数据写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-339">Clears all buffers for the current <see cref="T:System.Web.UI.HtmlTextWriter" /> object and causes any buffered data to be written to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-340"><xref:System.Web.UI.HtmlTextWriter>类实现<xref:System.Web.UI.HtmlTextWriter.Flush%2A>方法只调用<xref:System.IO.TextWriter.Flush%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-340">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.Flush%2A> method just calls the <xref:System.IO.TextWriter.Flush%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeKey (attrName As String) As HtmlTextWriterAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterAttribute GetAttributeKey(System::String ^ attrName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrName"><span data-ttu-id="09602-341">包含要为其获取 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 的属性的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-341">A string that contains the attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span></span></param>
        <summary><span data-ttu-id="09602-342">获取指定属性的相应 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="09602-342">Obtains the corresponding <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute.</span></span></summary>
        <returns><span data-ttu-id="09602-343">指定属性的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 枚举值；否则，如果该属性不是该枚举的成员，则为无效的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09602-343">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute; otherwise, an invalid <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value if the attribute is not a member of the enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-344">如果`attrName`是`null`或空字符串 ("")，或无法找到表中的属性名称，值为-1，类型化为<xref:System.Web.UI.HtmlTextWriterAttribute>对象，则返回。</span><span class="sxs-lookup"><span data-stu-id="09602-344">If `attrName` is `null` or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <xref:System.Web.UI.HtmlTextWriterAttribute> object, is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-345">下面的代码示例演示如何使用类，派生自<xref:System.Web.UI.HtmlTextWriter>类，并重写<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-345">The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="09602-346">重写检查是否`tagKey`等同于<xref:System.Web.UI.HtmlTextWriterTag.Font>字段，指示`<font>`将呈现标记元素。</span><span class="sxs-lookup"><span data-stu-id="09602-346">The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag.Font> field, which indicates that a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="09602-347">如果是，重写调用<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>方法以确定是否`<font>`元素包含<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性。</span><span class="sxs-lookup"><span data-stu-id="09602-347">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="09602-348">如果<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>返回`false`、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法调用<xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A>方法，后者定义<xref:System.Web.UI.HtmlTextWriterAttribute.Size>并将其值设置为`30pt`。</span><span class="sxs-lookup"><span data-stu-id="09602-348">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.IsAttributeDefined" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetAttributeName(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeName (attrKey As HtmlTextWriterAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetAttributeName(System::Web::UI::HtmlTextWriterAttribute attrKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="attrKey"><span data-ttu-id="09602-349">要获取其标记属性名称的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="09602-349">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> to obtain the markup attribute name for.</span></span></param>
        <summary><span data-ttu-id="09602-350">获取与指定的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 值关联的标记属性名称。</span><span class="sxs-lookup"><span data-stu-id="09602-350">Obtains the name of the markup attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value.</span></span></summary>
        <returns><span data-ttu-id="09602-351">包含标记属性名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-351">A string containing the name of the markup attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-352"><xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A>方法返回一个空字符串 ("")，如果`attrKey`不是有效<xref:System.Web.UI.HtmlTextWriterAttribute>值。</span><span class="sxs-lookup"><span data-stu-id="09602-352">The <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method returns an empty string (""), if `attrKey` is not a valid <xref:System.Web.UI.HtmlTextWriterAttribute> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-353">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A>方法将转换<xref:System.Web.UI.HtmlTextWriterAttribute.Size>为其字符串名称的枚举值。</span><span class="sxs-lookup"><span data-stu-id="09602-353">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> enumeration value to its string name.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#6)]
 [!code-vb[HtmlTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleKey (styleName As String) As HtmlTextWriterStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterStyle GetStyleKey(System::String ^ styleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="styleName"><span data-ttu-id="09602-354">要为其获取 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 的样式属性。</span><span class="sxs-lookup"><span data-stu-id="09602-354">The style attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span></span></param>
        <summary><span data-ttu-id="09602-355">获取指定样式的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="09602-355">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value for the specified style.</span></span></summary>
        <returns><span data-ttu-id="09602-356">与 <paramref name="styleName" /> 相对应的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="09602-356">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value corresponding to <paramref name="styleName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-357"><xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A>方法返回的值为-1 类型化为<xref:System.Web.UI.HtmlTextWriterStyle>值，如果`styleName`与任何不一致<xref:System.Web.UI.HtmlTextWriterStyle>枚举值。</span><span class="sxs-lookup"><span data-stu-id="09602-357">The <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method returns the value -1 typed as a <xref:System.Web.UI.HtmlTextWriterStyle> value, if `styleName` does not correspond to any <xref:System.Web.UI.HtmlTextWriterStyle> enumeration value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-358">下面的代码示例演示如何重写<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>从派生类中的方法<xref:System.Web.UI.HtmlTextWriter>类。</span><span class="sxs-lookup"><span data-stu-id="09602-358">The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="09602-359"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>重写确定是否`<label>`将呈现标记，并且，如果是这样，检查元素的<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性。</span><span class="sxs-lookup"><span data-stu-id="09602-359">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute.</span></span> <span data-ttu-id="09602-360">如果<xref:System.Web.UI.HtmlTextWriterStyle.Color>尚未定义属性，<xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A>方法用作对的调用中的第一个参数<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法将添加<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性设为`<label>`标记元素，并设置<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性`red`.</span><span class="sxs-lookup"><span data-stu-id="09602-360">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#1)]
 [!code-vb[HtmlTextWriter_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleName">
      <MemberSignature Language="C#" Value="protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetStyleName(valuetype System.Web.UI.HtmlTextWriterStyle styleKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleName (styleKey As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetStyleName(System::Web::UI::HtmlTextWriterStyle styleKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleKey" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="styleKey"><span data-ttu-id="09602-361">要获取其样式属性名称的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="09602-361">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> to obtain the style attribute name for.</span></span></param>
        <summary><span data-ttu-id="09602-362">获取与指定的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 枚举值关联的标记样式属性名称。</span><span class="sxs-lookup"><span data-stu-id="09602-362">Obtains the markup style attribute name associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value.</span></span></summary>
        <returns><span data-ttu-id="09602-363">与 <paramref name="styleKey" /> 中指定的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 枚举值相关联的样式属性名称。</span><span class="sxs-lookup"><span data-stu-id="09602-363">The style attribute name associated with the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value specified in <paramref name="styleKey" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-364">如果`styleKey`不是有效<xref:System.Web.UI.HtmlTextWriterStyle>对象，<xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A>方法返回一个空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="09602-364">If `styleKey` is not a valid <xref:System.Web.UI.HtmlTextWriterStyle> object, the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-365">下面的代码示例演示如何检查是否`<label>`元素呈现。</span><span class="sxs-lookup"><span data-stu-id="09602-365">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="09602-366">如果因此，它会检查是否<xref:System.Web.UI.HtmlTextWriterStyle.Color>在元素中定义样式属性。</span><span class="sxs-lookup"><span data-stu-id="09602-366">If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="09602-367">如果未定义的属性，<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>调用方法和<xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A>方法将<xref:System.Web.UI.HtmlTextWriterStyle.Color>枚举成员转换为字符串表示形式要传递给<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-367">If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method converts the <xref:System.Web.UI.HtmlTextWriterStyle.Color> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagKey (tagName As String) As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriterTag GetTagKey(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="09602-368">要为其获取 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 的标记元素。</span><span class="sxs-lookup"><span data-stu-id="09602-368">The markup element for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span></span></param>
        <summary><span data-ttu-id="09602-369">获取与指定标记元素关联的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="09602-369">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value associated with the specified markup element.</span></span></summary>
        <returns><span data-ttu-id="09602-370"><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 枚举值；否则，如果 <paramref name="tagName" /> 不与特定的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值关联，则为 <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />。</span><span class="sxs-lookup"><span data-stu-id="09602-370">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value; otherwise, if <paramref name="tagName" /> is not associated with a specific <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-371">如果`tagName`是`null`，空字符串 ("")，或无法找到表中的标记名称，<xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A>方法返回<xref:System.Web.UI.HtmlTextWriterTag.Unknown>字段。</span><span class="sxs-lookup"><span data-stu-id="09602-371">If `tagName` is `null`, an empty string (""), or cannot be found in the table of markup tag names, the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method returns the <xref:System.Web.UI.HtmlTextWriterTag.Unknown> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-372">下面的代码示例演示如何重写的重载<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>采用字符串作为其参数的方法。</span><span class="sxs-lookup"><span data-stu-id="09602-372">The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter.</span></span> <span data-ttu-id="09602-373">将字符串传递到<xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A>方法，将其转换为相应<xref:System.Web.UI.HtmlTextWriterTag>枚举成员，然后再传递到<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>采用重载<xref:System.Web.UI.HtmlTextWriterTag>作为参数的枚举值。</span><span class="sxs-lookup"><span data-stu-id="09602-373">The string is passed to the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#8](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#8)]
 [!code-csharp[HtmlTextWriter_Methods3#8](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#8)]
 [!code-vb[HtmlTextWriter_Methods3#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey"><span data-ttu-id="09602-374">要获取其标记元素的 <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span><span class="sxs-lookup"><span data-stu-id="09602-374">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> to obtain the markup element for.</span></span></param>
        <summary><span data-ttu-id="09602-375">获取与指定的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 枚举值关联的标记元素。</span><span class="sxs-lookup"><span data-stu-id="09602-375">Obtains the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value.</span></span></summary>
        <returns><span data-ttu-id="09602-376">表示标记元素的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-376">A string representing the markup element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-377">如果`tagKey`不是有效<xref:System.Web.UI.HtmlTextWriterTag>值，<xref:System.Web.UI.HtmlTextWriter.GetTagName%2A>方法返回一个空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="09602-377">If `tagKey` is not a valid <xref:System.Web.UI.HtmlTextWriterTag> value, the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-378">下面的代码示例演示如何关闭`<font>`元素中的使用<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-378">The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method.</span></span> <span data-ttu-id="09602-379"><xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法调用<xref:System.Web.UI.HtmlTextWriter.GetTagName%2A>方法将转换<xref:System.Web.UI.HtmlTextWriterTag.Font>为字符串的值。</span><span class="sxs-lookup"><span data-stu-id="09602-379">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method to convert the <xref:System.Web.UI.HtmlTextWriterTag.Font> value to a string.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods3#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#7)]
 [!code-vb[HtmlTextWriter_Methods3#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-380">获取或设置用以缩进每一行标记的开始位置的制表符位置数。</span><span class="sxs-lookup"><span data-stu-id="09602-380">Gets or sets the number of tab positions to indent the beginning of each line of markup.</span></span></summary>
        <value><span data-ttu-id="09602-381">用于缩进每一行的制表符位置数。</span><span class="sxs-lookup"><span data-stu-id="09602-381">The number of tab positions to indent each line.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-382">通过编写指定的字符串执行缩进`tabString`参数<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>构造函数指定的次数<xref:System.Web.UI.HtmlTextWriter.Indent%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09602-382">Indentation is performed by writing the string that is specified by the `tabString` parameter of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor the number of times that are specified by the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property.</span></span>  
  
 <span data-ttu-id="09602-383">如果<xref:System.Web.UI.HtmlTextWriter.Indent%2A>属性设置为负值，则它将在保存之前更改为 0。</span><span class="sxs-lookup"><span data-stu-id="09602-383">If the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property is set to a negative value, it is changed to 0 before being saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-384">下面的代码示例演示如何递增的值分配给<xref:System.Web.UI.HtmlTextWriter.Indent%2A>当属性已添加到的开始标记时，属性`<span>`元素和<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="09602-384">The following code example demonstrates how to increment the value that is assigned to the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called.</span></span> <span data-ttu-id="09602-385">这会增加内呈现任何标记的缩进`<span>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-385">This increases the indentation for any markup that is rendered inside the `<span>` element.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter InnerWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ InnerWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-386">获取或设置写入标记元素内部内容的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="09602-386">Gets or sets the text writer that writes the inner content of the markup element.</span></span></summary>
        <value><span data-ttu-id="09602-387">写入内部标记内容的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="09602-387">A <see cref="T:System.IO.TextWriter" /> that writes the inner markup content.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-388">内部标记内容是开始标记和结束标记的标记语言元素之间找到的文本。</span><span class="sxs-lookup"><span data-stu-id="09602-388">Inner markup content is the text found between the opening and closing tags of a markup language element.</span></span>  
  
 <span data-ttu-id="09602-389">如果<xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A>属性设置为<xref:System.IO.TextWriter>是的一个实例的对象<xref:System.Web.HttpWriter>类，这一事实记录和保存单独的引用。</span><span class="sxs-lookup"><span data-stu-id="09602-389">If the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property is set to a <xref:System.IO.TextWriter> object that is an instance of the <xref:System.Web.HttpWriter> class, this fact is noted and a separate reference is saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-390">下面的代码示例演示如何使用自定义 Web 服务器控件，派生自<xref:System.Web.UI.WebControls.WebControl>类，并重写<xref:System.Web.UI.Control.Render%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-390">The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method.</span></span> <span data-ttu-id="09602-391">它使用<xref:System.Web.UI.HtmlTextWriter>类编写`<font>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-391">It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element.</span></span> <span data-ttu-id="09602-392">它将元素的开始标记之后，它使用<xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A>属性来将字符串写入`"<br> The time on the server:"`并将连接的值与此字符串<xref:System.DateTime.Now%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="09602-392">After it writes the opening tag of the element, it uses the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property to write the string `"<br> The time on the server:"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#3)]
 [!code-csharp[HtmlTextWriter_Properties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#3)]
 [!code-vb[HtmlTextWriter_Properties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpWriter" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09602-393">确定是否在下一次调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法时呈现指定的标记属性及其值。</span><span class="sxs-lookup"><span data-stu-id="09602-393">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09602-394">与标记属性关联的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="09602-394">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span></span></param>
        <summary><span data-ttu-id="09602-395">确定是否在下一次调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法时呈现指定的标记属性及其值。</span><span class="sxs-lookup"><span data-stu-id="09602-395">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="09602-396">如果下次调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法时呈现该属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09602-396"><see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-397">若要获取的值分配给<xref:System.Web.UI.HtmlTextWriterAttribute>对象，请使用<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29>代替此重载。</span><span class="sxs-lookup"><span data-stu-id="09602-397">To obtain the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object, use the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> overload instead of this one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-398">下面的代码示例演示如何使用的重写<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>继承自的类方法<xref:System.Web.UI.HtmlTextWriter>类。</span><span class="sxs-lookup"><span data-stu-id="09602-398">The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="09602-399"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>重写检查是否`<font>`将呈现标记元素。</span><span class="sxs-lookup"><span data-stu-id="09602-399">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="09602-400">如果是，重写调用<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>方法来检查是否`<font>`元素包含<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性。</span><span class="sxs-lookup"><span data-stu-id="09602-400">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="09602-401">如果没有，则<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法调用<xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A>方法，后者定义<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性并将其值设置为`30pt`。</span><span class="sxs-lookup"><span data-stu-id="09602-401">If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09602-402">与标记属性关联的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="09602-402">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span></span></param>
        <param name="value"><span data-ttu-id="09602-403">要分配给特性的值。</span><span class="sxs-lookup"><span data-stu-id="09602-403">The value assigned to the attribute.</span></span></param>
        <summary><span data-ttu-id="09602-404">确定是否在下一次调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法时呈现指定的标记属性及其值。</span><span class="sxs-lookup"><span data-stu-id="09602-404">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="09602-405">如果下次调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法时呈现该属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09602-405"><see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-406">如果<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>方法返回`true`，值分配给<xref:System.Web.UI.HtmlTextWriterAttribute>中返回对象`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-406">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStyleAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09602-407">确定是否在下一次调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法期间呈现标记样式属性。</span><span class="sxs-lookup"><span data-stu-id="09602-407">Determines whether a markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09602-408">与该属性相关联的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="09602-408">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span></span></param>
        <summary><span data-ttu-id="09602-409">确定下次调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法时指定的标记样式属性是否呈现。</span><span class="sxs-lookup"><span data-stu-id="09602-409">Determines whether the specified markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="09602-410">如果下次调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法时呈现该属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09602-410"><see langword="true" /> if the attribute will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-411">若要获取将呈现使用指定的样式属性的值，请使用<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29>重载<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-411">To get the value that will be rendered with the specified style attribute, use the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> overload of the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-412">下面的代码示例演示如何检查是否`<label>`元素呈现。</span><span class="sxs-lookup"><span data-stu-id="09602-412">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="09602-413">如果是这样，<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>方法检查是否<xref:System.Web.UI.HtmlTextWriterStyle.Color>在元素中定义样式属性。</span><span class="sxs-lookup"><span data-stu-id="09602-413">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="09602-414">如果<xref:System.Web.UI.HtmlTextWriterStyle.Color>尚未定义属性，<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法定义<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性并将其值设置为`red`。</span><span class="sxs-lookup"><span data-stu-id="09602-414">If the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute and sets its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09602-415">与该属性相关联的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="09602-415">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="09602-416">分配给样式属性的值。</span><span class="sxs-lookup"><span data-stu-id="09602-416">The value assigned to the style attribute.</span></span></param>
        <summary><span data-ttu-id="09602-417">确定下次调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法时是否呈现指定的标记样式属性及其值。</span><span class="sxs-lookup"><span data-stu-id="09602-417">Determines whether the specified markup style attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="09602-418">如果下次调用 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法时呈现属性及其值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09602-418"><see langword="true" /> if the attribute and its value will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-419">如果<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>方法返回`true`，值分配给<xref:System.Web.UI.HtmlTextWriterStyle>中返回属性`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-419">If the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterStyle> attribute is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsValidFormAttribute (string attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidFormAttribute(string attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidFormAttribute (attribute As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidFormAttribute(System::String ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="09602-420">包含要检查的属性名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-420">A string that contains the name of the attribute to check.</span></span></param>
        <summary><span data-ttu-id="09602-421">检查属性，确保它可以在 <see langword="&lt;form&gt;" /> 标记元素的开始标记中呈现。</span><span class="sxs-lookup"><span data-stu-id="09602-421">Checks an attribute to ensure that it can be rendered in the opening tag of a <see langword="&lt;form&gt;" /> markup element.</span></span></summary>
        <returns><span data-ttu-id="09602-422">总是为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="09602-422">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-423"><xref:System.Web.UI.HtmlTextWriter>类实现<xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A>方法返回`true`所有特性。</span><span class="sxs-lookup"><span data-stu-id="09602-423">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> method returns `true` for all attributes.</span></span> <span data-ttu-id="09602-424">重写<xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A>要限制可以呈现的开始标记的属性`<form>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-424">Override the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> to limit the attributes that can be rendered in the opening tag of a `<form>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="09602-425">重写<see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />方法以返回<see langword="true" />仅为可以包括在这些属性<see langword="&lt;form&gt;" />元素的类派生自的标记<see cref="T:System.Web.UI.HtmlTextWriter" />类旨在。</span><span class="sxs-lookup"><span data-stu-id="09602-425">Override the <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> method to return <see langword="true" /> only for those attributes that can be included in the <see langword="&lt;form&gt;" /> element of the markup for which the class derived from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class is intended.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public override string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-426">获取或设置 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象使用的行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-426">Gets or sets the line terminator string used by the <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span></span></summary>
        <value><span data-ttu-id="09602-427">由当前 <see cref="T:System.Web.UI.HtmlTextWriter" /> 使用的行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-427">The line terminator string used by the current <see cref="T:System.Web.UI.HtmlTextWriter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-428">默认行结束符字符串是一个回车，跟换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-428">The default line terminator string is a carriage return, followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="09602-429">行结束符字符串写入到输出流每当一个的<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>调用的方法。</span><span class="sxs-lookup"><span data-stu-id="09602-429">The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called.</span></span> <span data-ttu-id="09602-430">如果<xref:System.Web.UI.HtmlTextWriter.NewLine%2A>属性设置为`null`，使用默认的新行字符。</span><span class="sxs-lookup"><span data-stu-id="09602-430">If the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property is set to `null`, the default new line character is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-431">下面的代码示例演示如何使用自定义类，派生自<xref:System.Web.UI.HtmlTextWriter>类，并重写<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-431">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="09602-432">调用时，<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>替代检查的文本编写器是否呈现任何`<label>`或`<a>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-432">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements.</span></span> <span data-ttu-id="09602-433">如果是这样，<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法确定标签是否定义样式特性。</span><span class="sxs-lookup"><span data-stu-id="09602-433">If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label.</span></span> <span data-ttu-id="09602-434">如果没有定义样式，<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法设置的默认值为`style:color`属性为蓝色。</span><span class="sxs-lookup"><span data-stu-id="09602-434">If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue.</span></span> <span data-ttu-id="09602-435"><xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法然后使用<xref:System.Web.UI.HtmlTextWriter.NewLine%2A>属性来插入行中断在标记中，并将写入任何其他定义的属性。</span><span class="sxs-lookup"><span data-stu-id="09602-435">The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property to insert a line break in the markup tag and writes any other defined attributes.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-436">包含要呈现的属性名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-436">A string containing the name of the attribute to render.</span></span></param>
        <param name="value"><span data-ttu-id="09602-437">包含要分配给该属性的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-437">A string containing the value that is assigned to the attribute.</span></span></param>
        <param name="key"><span data-ttu-id="09602-438">与标记属性关联的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="09602-438">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span></span></param>
        <summary><span data-ttu-id="09602-439">确定是否可向当前标记元素呈现指定的标记属性及其值。</span><span class="sxs-lookup"><span data-stu-id="09602-439">Determines whether the specified markup attribute and its value can be rendered to the current markup element.</span></span></summary>
        <returns><span data-ttu-id="09602-440">总是为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="09602-440">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-441"><xref:System.Web.UI.HtmlTextWriter>类实现<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>方法始终返回`true`。</span><span class="sxs-lookup"><span data-stu-id="09602-441">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="09602-442"><xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>替代可以确定属性是否将呈现到页。</span><span class="sxs-lookup"><span data-stu-id="09602-442">The <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> overrides can determine whether an attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-443">下面的代码示例演示如何重写<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-443">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method.</span></span> <span data-ttu-id="09602-444">如果<xref:System.Web.UI.HtmlTextWriterAttribute.Size>呈现属性，但<xref:System.Web.UI.HtmlTextWriterAttribute.Size>值不是`30pt`、<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>重写调用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法将添加<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性，并将其值设置为`30pt`。</span><span class="sxs-lookup"><span data-stu-id="09602-444">If a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> value is not `30pt`, the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `30pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#5)]
 [!code-vb[MarkupTextWriter_Methods3#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="09602-445">如果从继承<see cref="T:System.Web.UI.HtmlTextWriter" />类，可以重写<see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />方法以返回<see langword="false" />以防止在所有呈现，呈现在一个特定的元素，或针对特定标记呈现的属性。</span><span class="sxs-lookup"><span data-stu-id="09602-445">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> method to return <see langword="false" /> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup.</span></span> <span data-ttu-id="09602-446">例如，如果您不希望派生自对象<see cref="T:System.Web.UI.HtmlTextWriter" />呈现<see langword="bgcolor" />属性设为<see langword="&lt;table&gt;" />元素，可以重写<see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />并返回<see langword="false" />时<paramref name="name" />传递<see langword="bgcolor" />和<see cref="P:System.Web.UI.HtmlTextWriter.TagName" />属性值是<see langword="table" />。</span><span class="sxs-lookup"><span data-stu-id="09602-446">For example, if you do not want the object derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="bgcolor" /> attribute to <see langword="&lt;table&gt;" /> elements, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="bgcolor" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="table" />.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-447">包含要呈现的样式属性名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-447">A string containing the name of the style attribute to render.</span></span></param>
        <param name="value"><span data-ttu-id="09602-448">包含要分配给样式属性的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-448">A string containing the value that is assigned to the style attribute.</span></span></param>
        <param name="key"><span data-ttu-id="09602-449">与样式属性关联的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="09602-449">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the style attribute.</span></span></param>
        <summary><span data-ttu-id="09602-450">确定是否可向当前标记元素呈现指定的标记样式属性及其值。</span><span class="sxs-lookup"><span data-stu-id="09602-450">Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</span></span></summary>
        <returns><span data-ttu-id="09602-451">总是为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="09602-451">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-452"><xref:System.Web.UI.HtmlTextWriter>类实现<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>方法始终返回`true`。</span><span class="sxs-lookup"><span data-stu-id="09602-452">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="09602-453"><xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>替代可以确定是否将向页呈现的样式特性。</span><span class="sxs-lookup"><span data-stu-id="09602-453">The <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> overrides can determine whether a style attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-454">下面的代码示例演示如何重写<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-454">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method.</span></span> <span data-ttu-id="09602-455">如果<xref:System.Web.UI.HtmlTextWriterStyle.Color>呈现样式特性，但<xref:System.Web.UI.HtmlTextWriterStyle.Color>值不是`purple`、<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>重写使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法以设置<xref:System.Web.UI.HtmlTextWriterStyle.Color>属性设为`purple`。</span><span class="sxs-lookup"><span data-stu-id="09602-455">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle.Color> value is not `purple`, the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `purple`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#6)]
 [!code-vb[MarkupTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="09602-456">如果从继承<see cref="T:System.Web.UI.HtmlTextWriter" />类，可以重写<see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />方法以返回<see langword="false" />以防止在所有呈现，呈现在一个特定的元素，或针对特定的标记语言呈现的样式属性。</span><span class="sxs-lookup"><span data-stu-id="09602-456">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> method to return <see langword="false" /> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language.</span></span> <span data-ttu-id="09602-457">例如，如果您不希望派生自对象<see cref="T:System.Web.UI.HtmlTextWriter" />呈现<see langword="color" />样式特性应用到<see langword="&lt;p&gt;" />元素，可以重写<see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />并返回<see langword="false" />时<paramref name="name" />传递<see langword="color" />和<see cref="P:System.Web.UI.HtmlTextWriter.TagName" />属性值是<see langword="p" />。</span><span class="sxs-lookup"><span data-stu-id="09602-457">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="color" /> style attribute to a <see langword="&lt;p&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="color" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="p" />.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-458">包含要呈现的元素名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-458">A string containing the name of the element to render.</span></span></param>
        <param name="key"><span data-ttu-id="09602-459">与元素关联的 <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span><span class="sxs-lookup"><span data-stu-id="09602-459">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with the element.</span></span></param>
        <summary><span data-ttu-id="09602-460">确定是否向请求页面呈现指定的标记元素。</span><span class="sxs-lookup"><span data-stu-id="09602-460">Determines whether the specified markup element will be rendered to the requesting page.</span></span></summary>
        <returns><span data-ttu-id="09602-461">总是为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="09602-461">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-462"><xref:System.Web.UI.HtmlTextWriter>类实现<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>方法始终返回`true`。</span><span class="sxs-lookup"><span data-stu-id="09602-462">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method always returns `true`.</span></span> <span data-ttu-id="09602-463"><xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>替代可以确定某元素是否将呈现到页。</span><span class="sxs-lookup"><span data-stu-id="09602-463">The <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> overrides can determine whether an element will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-464">下面的代码示例演示如何重写<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-464">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method.</span></span> <span data-ttu-id="09602-465">如果<xref:System.Web.UI.HtmlTextWriterTag.Font>呈现元素时，<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>重写使用<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>方法来确定是否<xref:System.Web.UI.HtmlTextWriterAttribute.Size>呈现属性。</span><span class="sxs-lookup"><span data-stu-id="09602-465">If a <xref:System.Web.UI.HtmlTextWriterTag.Font> element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is being rendered.</span></span> <span data-ttu-id="09602-466">如果不是，它使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法来创建<xref:System.Web.UI.HtmlTextWriterAttribute.Size>属性，并将其值设置为`20pt`。</span><span class="sxs-lookup"><span data-stu-id="09602-466">If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `20pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#4)]
 [!code-vb[MarkupTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="09602-467">如果从继承<see cref="T:System.Web.UI.HtmlTextWriter" />类，可以重写<see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />方法以返回<see langword="false" />以防止呈现根本或针对特定的标记语言标记元素。</span><span class="sxs-lookup"><span data-stu-id="09602-467">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> to prevent a markup element from being rendered at all or for a particular markup language.</span></span> <span data-ttu-id="09602-468">例如，如果您不希望派生自对象<see cref="T:System.Web.UI.HtmlTextWriter" />呈现<see langword="&lt;font&gt;" />元素，可以重写<see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />方法以返回<see langword="false" />页时请求包含<see langword="&lt;font&gt;" />元素。</span><span class="sxs-lookup"><span data-stu-id="09602-468">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="&lt;font&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> when a page is requested that contains a <see langword="&lt;font&gt;" /> element.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="OutputTabs">
      <MemberSignature Language="C#" Value="protected virtual void OutputTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTabs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTabs();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-469">写入一连串用以表示标记字符行的缩进级别的制表符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-469">Writes a series of tab strings that represent the indentation level for a line of markup characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-470"><xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A>方法使用<xref:System.Web.UI.HtmlTextWriter.Indent%2A>属性来确定如何许多选项卡字符串写入到获取所需的缩进。</span><span class="sxs-lookup"><span data-stu-id="09602-470">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.</span></span>  
  
 <span data-ttu-id="09602-471">使用指定的选项卡字符串<xref:System.Web.UI.HtmlTextWriter.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="09602-471">The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor.</span></span> <span data-ttu-id="09602-472">如果未不指定任何选项卡字符串，<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>常量 (`\t`) 使用。</span><span class="sxs-lookup"><span data-stu-id="09602-472">If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\t`) is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-473">下面的代码示例演示如何重写<xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A>派生自的类方法<xref:System.Web.UI.HtmlTextWriter>类。</span><span class="sxs-lookup"><span data-stu-id="09602-473">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="09602-474"><xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A>重写方法始终使用<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>常量执行缩进。</span><span class="sxs-lookup"><span data-stu-id="09602-474">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#7)]
 [!code-vb[HtmlTextWriter_Methods#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName="PopEndTag">
      <MemberSignature Language="C#" Value="protected string PopEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string PopEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      <MemberSignature Language="VB.NET" Value="Protected Function PopEndTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ PopEndTag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-475">从呈现的元素列表中移除最近保存的标记元素。</span><span class="sxs-lookup"><span data-stu-id="09602-475">Removes the most recently saved markup element from the list of rendered elements.</span></span></summary>
        <returns><span data-ttu-id="09602-476">一个 <see cref="T:System.String" />，包含最新呈现的标记元素。</span><span class="sxs-lookup"><span data-stu-id="09602-476">A <see cref="T:System.String" /> containing the most recently rendered markup element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-477">元素添加到由呈现的标记元素的列表<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-477">Elements are added to the list of rendered markup elements by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="09602-478"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法可以通过调用从列表删除标记元素<xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-478">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list by calling the <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="09602-479">呈现的元素列表为空。</span><span class="sxs-lookup"><span data-stu-id="09602-479">The list of rendered elements is empty.</span></span></exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PushEndTag">
      <MemberSignature Language="C#" Value="protected void PushEndTag (string endTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushEndTag(string endTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushEndTag (endTag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushEndTag(System::String ^ endTag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endTag"><span data-ttu-id="09602-480">标记元素的结束标记。</span><span class="sxs-lookup"><span data-stu-id="09602-480">The closing tag of the markup element.</span></span></param>
        <summary><span data-ttu-id="09602-481">为标记元素生成结束标记时，保存指定的标记元素供以后使用。</span><span class="sxs-lookup"><span data-stu-id="09602-481">Saves the specified markup element for later use when generating the end tag for a markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-482">元素添加到呈现的标记元素的列表时<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法调用<xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-482">Elements are added to the list of rendered markup elements when the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> method.</span></span> <span data-ttu-id="09602-483"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法标记元素从列表中删除后它呈现元素的结束标记。</span><span class="sxs-lookup"><span data-stu-id="09602-483">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list after it renders the end tag for the element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAttribute">
      <MemberSignature Language="C#" Value="protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterAttribute(string name, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterAttribute (name As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterAttribute(System::String ^ name, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-484">包含要注册的标记属性名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-484">A string containing the name of the markup attribute to register.</span></span></param>
        <param name="key"><span data-ttu-id="09602-485">与属性名称对应的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="09602-485">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that corresponds with the attribute name.</span></span></param>
        <summary><span data-ttu-id="09602-486">从源文件注册标记属性（无论是文本还是动态生成的），以便可将其正确呈现给请求的客户端。</span><span class="sxs-lookup"><span data-stu-id="09602-486">Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-487">HTML 标记语言的预定义的属性均由调用注册<xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A>方法时第一个<xref:System.Web.UI.HtmlTextWriter>创建对象。</span><span class="sxs-lookup"><span data-stu-id="09602-487">The predefined attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="09602-488">动态属性可由使用注册<xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A>在其他时候的方法。</span><span class="sxs-lookup"><span data-stu-id="09602-488">Dynamic attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method at other times.</span></span>  
  
 <span data-ttu-id="09602-489">使用的注册表<xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A>方法是`static`，因此特性的注册适用于所有<xref:System.Web.UI.HtmlTextWriter>主机计算机上的对象。</span><span class="sxs-lookup"><span data-stu-id="09602-489">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterStyle(string name, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterStyle (name As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterStyle(System::String ^ name, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-490">从源文件传递的、指定样式名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-490">The string passed from the source file specifying the style name.</span></span></param>
        <param name="key"><span data-ttu-id="09602-491">与指定样式对应的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span><span class="sxs-lookup"><span data-stu-id="09602-491">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that corresponds with the specified style.</span></span></param>
        <summary><span data-ttu-id="09602-492">从源文件注册标记样式属性（无论是文本还是动态生成的），以便可将其正确呈现给请求的客户端。</span><span class="sxs-lookup"><span data-stu-id="09602-492">Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-493">通过调用注册预定义的级联样式表 (CSS) 特性的 HTML 标记语言<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A>方法时第一个<xref:System.Web.UI.HtmlTextWriter>创建对象。</span><span class="sxs-lookup"><span data-stu-id="09602-493">The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="09602-494">可以使用注册动态样式特性<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A>在其他时候的方法。</span><span class="sxs-lookup"><span data-stu-id="09602-494">Dynamic style attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method at other times.</span></span>  
  
 <span data-ttu-id="09602-495">使用的注册表<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A>方法是`static`，因此特性的注册适用于所有<xref:System.Web.UI.HtmlTextWriter>主机计算机上的对象。</span><span class="sxs-lookup"><span data-stu-id="09602-495">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTag">
      <MemberSignature Language="C#" Value="protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterTag(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterTag (name As String, key As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterTag(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-496">包含 HTML 标记的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-496">A string that contains the HTML tag.</span></span></param>
        <param name="key"><span data-ttu-id="09602-497">一个 <see cref="T:System.Web.UI.HtmlTextWriterTag" />，指定要呈现的元素。</span><span class="sxs-lookup"><span data-stu-id="09602-497">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies which element to render.</span></span></param>
        <summary><span data-ttu-id="09602-498">从源文件注册标记标签（无论是文本还是动态生成的），以便可将其正确呈现给请求的客户端。</span><span class="sxs-lookup"><span data-stu-id="09602-498">Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-499">HTML 语言的预定义的标记注册通过调用<xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A>方法时第一个<xref:System.Web.UI.HtmlTextWriter>创建对象。</span><span class="sxs-lookup"><span data-stu-id="09602-499">The predefined markup tags of the HTML language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="09602-500">可以使用注册动态标记标记<xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A>在其他时候的方法。</span><span class="sxs-lookup"><span data-stu-id="09602-500">Dynamic markup tags can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method at other times.</span></span>  
  
 <span data-ttu-id="09602-501">使用的注册表<xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A>方法是`static`，因此标记注册适用于所有<xref:System.Web.UI.HtmlTextWriter>主机计算机上的对象。</span><span class="sxs-lookup"><span data-stu-id="09602-501">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method is `static`, so registration of tags applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-502">写入在标记元素的内容之后、结束标记之前出现的任何文本或间距以呈现给标记输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-502">Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</span></span></summary>
        <returns><span data-ttu-id="09602-503">包含要在元素内容后面写入的间距或文本的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-503">A string that contains the spacing or text to write after the content of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-504"><xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>方法会很有用，如果你想要插入到当前标记元素的子元素。</span><span class="sxs-lookup"><span data-stu-id="09602-504">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method can be useful if you want to insert child elements into the current markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-505">下面的代码示例演示如何重写<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>从派生类中的方法<xref:System.Web.UI.HtmlTextWriter>类以确定是否`<label>`元素呈现。</span><span class="sxs-lookup"><span data-stu-id="09602-505">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="09602-506">如果是这样，<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>替代插入结束标记的`<font>`元素的结束标记前紧跟`<label>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-506">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element.</span></span> <span data-ttu-id="09602-507">如果以外的其他元素`<label>`呈现，<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>使用基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-507">If an element other than `<label>` is being rendered, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#3)]
 [!code-vb[HtmlTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="09602-508"><see cref="T:System.Web.UI.HtmlTextWriter" />类实现<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />方法返回<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="09602-508">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="09602-509">重写<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />如果你想要写入文本或元素内容之后但在结束标记之前的间距。</span><span class="sxs-lookup"><span data-stu-id="09602-509">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> if you want to write text or spacing after the element content but before the closing tag.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterTag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-510">写入在标记元素的结束标记后出现的任何间距或文本。</span><span class="sxs-lookup"><span data-stu-id="09602-510">Writes any spacing or text that occurs after the closing tag for a markup element.</span></span></summary>
        <returns><span data-ttu-id="09602-511">要在元素的结束标记后面写入的间距或文本。</span><span class="sxs-lookup"><span data-stu-id="09602-511">The spacing or text to write after the closing tag of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-512"><xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>方法会很有用，如果你想要在元素标记后呈现附加结束标记。</span><span class="sxs-lookup"><span data-stu-id="09602-512">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method can be useful if you want to render additional closing tags after the element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-513">下面的代码示例演示如何重写<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>方法来确定是否从派生的类<xref:System.Web.UI.HtmlTextWriter>呈现类`<label>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-513">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element.</span></span> <span data-ttu-id="09602-514">如果是这样，<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>替代插入结束标记的`<font>`元素后立即`<label>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-514">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> override inserts the closing tag of a `<font>` element immediately after the `<label>` element.</span></span> <span data-ttu-id="09602-515">如果不是`<label>`元素，<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>使用基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-515">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#2)]
 [!code-vb[HtmlTextWriter_Methods4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="09602-516"><see cref="T:System.Web.UI.HtmlTextWriter" />类实现<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />方法返回<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="09602-516">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="09602-517">重写<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />如果你想要写入文本或结束标记的元素之后的间距。</span><span class="sxs-lookup"><span data-stu-id="09602-517">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> if you want to write text or spacing after the element closing tag.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-518">在标记元素的内容之前、开始标记之后写入任何文本或间距。</span><span class="sxs-lookup"><span data-stu-id="09602-518">Writes any text or spacing before the content and after the opening tag of a markup element.</span></span></summary>
        <returns><span data-ttu-id="09602-519">在元素内容之前写入的文本或间距。</span><span class="sxs-lookup"><span data-stu-id="09602-519">The text or spacing to write prior to the content of the element.</span></span> <span data-ttu-id="09602-520">如果未重写，则 <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> 返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="09602-520">If not overridden, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-521"><xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>方法会很有用，如果你想要将子元素插入到当前标记元素的内部标记之前。</span><span class="sxs-lookup"><span data-stu-id="09602-521">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method can be useful if you want to insert child elements into the current markup element before the inner markup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-522">下面的代码示例演示如何重写<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>方法来确定是否从派生的类<xref:System.Web.UI.HtmlTextWriter>类是用来呈现`<label>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-522">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="09602-523">如果是这样，<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>替代插入的开始标记`<font>`元素的开始标记后立即`<label>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-523">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element.</span></span> <span data-ttu-id="09602-524">如果不是`<label>`元素，<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>使用基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-524">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="09602-525"><see cref="T:System.Web.UI.HtmlTextWriter" />类实现<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />方法返回<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="09602-525">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="09602-526">重写<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />如果你想要写入文本或间距的开始标记之后，但之前的元素内容。</span><span class="sxs-lookup"><span data-stu-id="09602-526">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> if you want to write text or spacing after the opening tag but ahead of the element content.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeTag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-527">写入在标记元素的开始标记之前出现的任何文本或间距。</span><span class="sxs-lookup"><span data-stu-id="09602-527">Writes any text or spacing that occurs before the opening tag of a markup element.</span></span></summary>
        <returns><span data-ttu-id="09602-528">要在标记元素开始标记之前写入的文本或间距。</span><span class="sxs-lookup"><span data-stu-id="09602-528">The text or spacing to write before the markup element opening tag.</span></span> <span data-ttu-id="09602-529">如果未重写，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="09602-529">If not overridden, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-530"><xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>方法会很有用，如果你想要呈现的预期元素的开始标记之前的其他开始标记。</span><span class="sxs-lookup"><span data-stu-id="09602-530">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-531">下面的代码示例演示如何重写<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>方法来确定是否派生自的类<xref:System.Web.UI.HtmlTextWriter>类是用来呈现`<label>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-531">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="09602-532">如果是这样，<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>替代插入的开始标记`<font>`元素紧靠之前`<label>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-532">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> override inserts the opening tag of a `<font>` element immediately before the `<label>` element.</span></span> <span data-ttu-id="09602-533">如果不呈现`<label>`元素，<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>使用基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-533">If it is not rendering a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="09602-534"><see cref="T:System.Web.UI.HtmlTextWriter" />类实现<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />方法返回<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="09602-534">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="09602-535">重写<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />如果你想要写入文本或之前在元素开始标记的间距。</span><span class="sxs-lookup"><span data-stu-id="09602-535">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> if you want to write text or spacing ahead of the element opening tag.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginTag">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09602-536">将标记元素的开始标记写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-536">Writes the opening tag of a markup element to the output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="09602-537">一个字符串，包含要为其呈现开始标记的标记元素的名称。</span><span class="sxs-lookup"><span data-stu-id="09602-537">A string containing the name of the markup element for which to render the opening tag.</span></span></param>
        <summary><span data-ttu-id="09602-538">将指定标记元素的开始标记写入输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-538">Writes the opening tag of the specified markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-539">使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>的重写<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29>方法时，如果标记元素不是一个<xref:System.Web.UI.HtmlTextWriterTag>枚举值。</span><span class="sxs-lookup"><span data-stu-id="09602-539">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> method, if the markup element is not one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="09602-540">要通过使用生成标记元素<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法，请首先调用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>和<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法，根据需要，指定任何元素特性或将显示元素的开始标记中的样式特性。</span><span class="sxs-lookup"><span data-stu-id="09602-540">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="09602-541">在生成的内部标记之后, 调用<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法来生成结束标记。</span><span class="sxs-lookup"><span data-stu-id="09602-541">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-542">下面的代码示例演示如何调用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>自定义控件呈现的非标准的开始标记中的方法`MyTag`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-542">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a custom control to render the opening tag of a non-standard `MyTag` element.</span></span> <span data-ttu-id="09602-543">此代码示例然后调用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现内部标记，然后调用<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法来关闭该元素。</span><span class="sxs-lookup"><span data-stu-id="09602-543">The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.</span></span>  
  
 <span data-ttu-id="09602-544">此代码示例将生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-544">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey"><span data-ttu-id="09602-545"><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值之一，定义要呈现的标记元素的开始标记。</span><span class="sxs-lookup"><span data-stu-id="09602-545">One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> values that defines the opening tag of the markup element to render.</span></span></param>
        <summary><span data-ttu-id="09602-546">将与指定的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 枚举值关联的标记元素的开始标记写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-546">Writes the opening tag of the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-547">使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>重载<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29>方法标记元素是否是已知类型的<xref:System.Web.UI.HtmlTextWriterTag>枚举值。</span><span class="sxs-lookup"><span data-stu-id="09602-547">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> method if the markup element is of a known type that is one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="09602-548">要通过使用生成标记元素<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法，请首先调用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>和<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法，根据需要，指定任何元素特性或将显示元素的开始标记中的样式特性。</span><span class="sxs-lookup"><span data-stu-id="09602-548">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="09602-549">在生成的内部标记之后, 调用<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法来生成结束标记。</span><span class="sxs-lookup"><span data-stu-id="09602-549">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-550">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法输出的开始标记`<img>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-550">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to output the opening tag of an `<img>` element.</span></span> <span data-ttu-id="09602-551">添加到该元素的特性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法将在开始`<img>`标记。</span><span class="sxs-lookup"><span data-stu-id="09602-551">The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag.</span></span> <span data-ttu-id="09602-552"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法用于生成结束标记。</span><span class="sxs-lookup"><span data-stu-id="09602-552">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.</span></span>  
  
 <span data-ttu-id="09602-553">此代码示例将生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-553">This code example generates the following markup:</span></span>  
  
 `<img alt="Encoding &quot;Required&quot;" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-554">将标记元素的结束标记写入输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-554">Writes the end tag of a markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-555">调用<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法之后<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>调用重载和之后已呈现的开始和结束标记 （内部标记） 的元素之间的所有内容。</span><span class="sxs-lookup"><span data-stu-id="09602-555">Call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-556">下面的代码示例演示如何调用<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法之后同时<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>生成的开始标记的方法和<xref:System.Web.UI.HtmlTextWriter.Write%2A>呈现开始和结束标记的自定义之间的内部标记的方法`MyTag`调用了元素。</span><span class="sxs-lookup"><span data-stu-id="09602-556">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.</span></span>  
  
 <span data-ttu-id="09602-557">此代码示例将生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-557">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingChars">
      <MemberSignature Language="C#" Value="public const string SelfClosingChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingChars;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-558">表示空格和标记的自结束斜杠 (/)。</span><span class="sxs-lookup"><span data-stu-id="09602-558">Represents a space and the self-closing slash mark (/) of a markup tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-559"><xref:System.Web.UI.HtmlTextWriter.SelfClosingChars>自结束标记元素中使用字段。</span><span class="sxs-lookup"><span data-stu-id="09602-559">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> field is used in markup elements that are self-closed.</span></span> <span data-ttu-id="09602-560">例如:</span><span class="sxs-lookup"><span data-stu-id="09602-560">For example:</span></span>  
  
 `<input type="submit" value="go"  />`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingTagEnd">
      <MemberSignature Language="C#" Value="public const string SelfClosingTagEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingTagEnd" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingTagEnd As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingTagEnd;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-561">表示自结束标记元素的右斜杠标记和右尖括号 (/&gt;)。</span><span class="sxs-lookup"><span data-stu-id="09602-561">Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-562"><xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>字段由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法构造自结束标记元素时。</span><span class="sxs-lookup"><span data-stu-id="09602-562">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method when constructing self-closing markup elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-563">下面的代码示例演示如何呈现的自定义值`FileName`跟一个引号的属性和所表示的字符<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>字段。</span><span class="sxs-lookup"><span data-stu-id="09602-563">The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field.</span></span> <span data-ttu-id="09602-564">此代码示例调用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法并传递<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>字段作为参数进行传递以关闭元素。</span><span class="sxs-lookup"><span data-stu-id="09602-564">The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field as the parameter argument to close the element.</span></span>  
  
 <span data-ttu-id="09602-565">此代码示例呈现`FileName`属性值，然后选择以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-565">This code example renders the `FileName` property value, and then the following markup:</span></span>  
  
 `" />`  
  
 [!code-csharp[MarkupTextWriter_Constants#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#11)]
 [!code-vb[MarkupTextWriter_Constants#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SemicolonChar">
      <MemberSignature Language="C#" Value="public const char SemicolonChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SemicolonChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SemicolonChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SemicolonChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-566">表示分号 (;)。</span><span class="sxs-lookup"><span data-stu-id="09602-566">Represents the semicolon (;).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-567">传递<xref:System.Web.UI.HtmlTextWriter.SemicolonChar>字段中的参数自变量作为<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法调用，当你想要呈现的自定义控件或适配器从分号。</span><span class="sxs-lookup"><span data-stu-id="09602-567">Pass the <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field as the parameter argument in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call when you want to render a semicolon from a custom control or adapter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-568">下面的代码示例演示如何手动呈现一系列的标记元素的样式。</span><span class="sxs-lookup"><span data-stu-id="09602-568">The following code example demonstrates how to manually render a series of styles on a markup element.</span></span> <span data-ttu-id="09602-569">此代码示例使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现`font-size`和`border-style`样式特性。</span><span class="sxs-lookup"><span data-stu-id="09602-569">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes.</span></span> <span data-ttu-id="09602-570"><xref:System.Web.UI.HtmlTextWriter.SemicolonChar>字段用作参数<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法来分隔的值`font-size`从开始处的属性`border-style`属性。</span><span class="sxs-lookup"><span data-stu-id="09602-570">The <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.</span></span>  
  
 <span data-ttu-id="09602-571">此代码示例将会呈现以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-571">This code example renders the following markup:</span></span>  
  
 `style="font-size:12pt;border-style:ridge"`  
  
 [!code-csharp[MarkupTextWriter_Constants#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simplebutton.cs#7)]
 [!code-vb[MarkupTextWriter_Constants#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simplebutton.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SingleQuoteChar">
      <MemberSignature Language="C#" Value="public const char SingleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SingleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SingleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SingleQuoteChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-572">表示撇号 (')。</span><span class="sxs-lookup"><span data-stu-id="09602-572">Represents an apostrophe (').</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-573">使用<xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar>字段需要呈现撇号时。</span><span class="sxs-lookup"><span data-stu-id="09602-573">Use the <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> field when it is necessary to render an apostrophe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SlashChar">
      <MemberSignature Language="C#" Value="public const char SlashChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SlashChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SlashChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SlashChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-574">表示斜杠 (/)。</span><span class="sxs-lookup"><span data-stu-id="09602-574">Represents the slash mark (/).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-575">使用<xref:System.Web.UI.HtmlTextWriter.SlashChar>字段来呈现斜杠标记当你编写的 URL。</span><span class="sxs-lookup"><span data-stu-id="09602-575">Use the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field to render the slash marks when you write a URL.</span></span> <span data-ttu-id="09602-576"><xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法使用<xref:System.Web.UI.HtmlTextWriter.SlashChar>字段时编写标记元素的结束标记。</span><span class="sxs-lookup"><span data-stu-id="09602-576">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field when writing the closing tag of a markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-577">下面的代码示例演示如何以手动呈现`src`属性`<img>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-577">The following code example demonstrates how to manually render the `src` attribute of an `<img>` element.</span></span> <span data-ttu-id="09602-578">此代码示例使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法替换<xref:System.Web.UI.HtmlTextWriter.SlashChar>作为其参数来呈现斜杠的字段将标记应用到的路径中`src`属性。</span><span class="sxs-lookup"><span data-stu-id="09602-578">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field as its parameter to render slash marks in the path that is applied to the `src` attribute.</span></span>  
  
 <span data-ttu-id="09602-579">此代码示例将会呈现以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-579">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceChar">
      <MemberSignature Language="C#" Value="public const char SpaceChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SpaceChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SpaceChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SpaceChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-580">表示空格 ( ) 字符。</span><span class="sxs-lookup"><span data-stu-id="09602-580">Represents a space ( ) character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-581"><xref:System.Web.UI.HtmlTextWriter.SpaceChar>字段由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>和<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法时编写元素和属性之间的分隔符。</span><span class="sxs-lookup"><span data-stu-id="09602-581">The <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods when writing separators between elements and attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-582">本部分提供两个代码示例。</span><span class="sxs-lookup"><span data-stu-id="09602-582">This section provides two code examples.</span></span> <span data-ttu-id="09602-583">第一个代码示例演示如何创建的字符数组。</span><span class="sxs-lookup"><span data-stu-id="09602-583">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="09602-584">第二个代码示例演示如何使用数组。</span><span class="sxs-lookup"><span data-stu-id="09602-584">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="09602-585">这些代码示例生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-585">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="09602-586">下面的代码示例演示如何创建<xref:System.Char>数组，其中包含<xref:System.Web.UI.HtmlTextWriter.SpaceChar>字段。</span><span class="sxs-lookup"><span data-stu-id="09602-586">The following code example shows how to create a <xref:System.Char> array that contains the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="09602-587">下面的代码示例演示如何使用在前面的代码示例作为参数时创建调用阵列<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-587">The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StyleEqualsChar">
      <MemberSignature Language="C#" Value="public const char StyleEqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char StyleEqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const StyleEqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char StyleEqualsChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-588">表示用于将样式属性设置为等于值的样式等号 (<see langword=":" />) 字符。</span><span class="sxs-lookup"><span data-stu-id="09602-588">Represents the style equals (<see langword=":" />) character used to set style attributes equal to values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-589"><xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar>字段由<xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>方法来分隔样式名称和值。</span><span class="sxs-lookup"><span data-stu-id="09602-589">The <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method to delimit style names and values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-590">下面的代码示例演示如何呈现`FontWeight`属性和值的`bold`给元素的开始标记。</span><span class="sxs-lookup"><span data-stu-id="09602-590">The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element.</span></span> <span data-ttu-id="09602-591">此代码示例使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法替换<xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar>字段作为参数来呈现设置每个样式属性的值的字符。</span><span class="sxs-lookup"><span data-stu-id="09602-591">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field as the parameter to render the character that sets the value of each style attribute.</span></span>  
  
 <span data-ttu-id="09602-592">此代码示例将会呈现以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-592">This code example renders the following markup:</span></span>  
  
 `FontWeight:"bold"`  
  
 [!code-csharp[MarkupTextWriter_Constants#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#5)]
 [!code-vb[MarkupTextWriter_Constants#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); void set(System::Web::UI::HtmlTextWriterTag value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-593">获取或设置指定标记元素的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值。</span><span class="sxs-lookup"><span data-stu-id="09602-593">Gets or sets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the specified markup element.</span></span></summary>
        <value><span data-ttu-id="09602-594">其开始标记要被呈现的标记元素。</span><span class="sxs-lookup"><span data-stu-id="09602-594">The markup element that is having its opening tag rendered.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-595"><xref:System.Web.UI.HtmlTextWriter.TagKey%2A>属性是只对继承的类使用的<xref:System.Web.UI.HtmlTextWriter>类。</span><span class="sxs-lookup"><span data-stu-id="09602-595">The <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="09602-596">应读取或设置<xref:System.Web.UI.HtmlTextWriter.TagKey%2A>属性仅在调用中的<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法; 这是唯一一次设置为一致的值。</span><span class="sxs-lookup"><span data-stu-id="09602-596">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property only in a call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-597">下面的代码示例演示如何重写的版本<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>派生自的类方法<xref:System.Web.UI.HtmlTextWriter>类。</span><span class="sxs-lookup"><span data-stu-id="09602-597">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="09602-598">它使用的值<xref:System.Web.UI.HtmlTextWriter.TagKey%2A>属性以确定是否可以使用自定义的服务器控件<xref:System.Web.UI.HtmlTextWriter>呈现对象`<label>`标记元素。</span><span class="sxs-lookup"><span data-stu-id="09602-598">It uses the value of the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element.</span></span> <span data-ttu-id="09602-599">如果是，`<font>`具有元素`color`属性设置为`red`返回修改的格式`<label>`元素的文本。</span><span class="sxs-lookup"><span data-stu-id="09602-599">If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09602-600">无法设置属性值。</span><span class="sxs-lookup"><span data-stu-id="09602-600">The property value cannot be set.</span></span></exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagLeftChar">
      <MemberSignature Language="C#" Value="public const char TagLeftChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagLeftChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagLeftChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagLeftChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-601">表示标记标签的左尖括号 (&lt;)。</span><span class="sxs-lookup"><span data-stu-id="09602-601">Represents the opening angle bracket (&lt;) of a markup tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-602"><xref:System.Web.UI.HtmlTextWriter.TagLeftChar>字段由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>， <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>， <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>，和<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>时写入标记的方法。</span><span class="sxs-lookup"><span data-stu-id="09602-602">The <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-603">下面的代码示例将呈现的开始标记的第一个字符`<table>`具有元素名称的元素。</span><span class="sxs-lookup"><span data-stu-id="09602-603">The following code example renders the first character of the opening tag of a `<table>` element with the element name.</span></span> <span data-ttu-id="09602-604">此代码示例使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法替换<xref:System.Web.UI.HtmlTextWriter.TagLeftChar>字段作为参数。</span><span class="sxs-lookup"><span data-stu-id="09602-604">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="09602-605">此代码示例将会呈现以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-605">This code example renders the following markup:</span></span>  
  
 `<table`  
  
 [!code-csharp[MarkupTextWriter_Constants#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#9)]
 [!code-vb[MarkupTextWriter_Constants#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-606">获取或设置所呈现的标记元素的标记名称。</span><span class="sxs-lookup"><span data-stu-id="09602-606">Gets or sets the tag name of the markup element being rendered.</span></span></summary>
        <value><span data-ttu-id="09602-607">所呈现的标记元素的标记名称。</span><span class="sxs-lookup"><span data-stu-id="09602-607">The tag name of the markup element being rendered.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-608"><xref:System.Web.UI.HtmlTextWriter.TagName%2A>属性是只对继承的类使用的<xref:System.Web.UI.HtmlTextWriter>类。</span><span class="sxs-lookup"><span data-stu-id="09602-608">The <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="09602-609">应读取或设置<xref:System.Web.UI.HtmlTextWriter.TagName%2A>属性仅在<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法调用异步方法。 这是唯一一次设置为一致的值。</span><span class="sxs-lookup"><span data-stu-id="09602-609">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property only in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-610">下面的代码示例演示如何重写的版本<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>派生自的类方法<xref:System.Web.UI.HtmlTextWriter>类。</span><span class="sxs-lookup"><span data-stu-id="09602-610">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="09602-611">下面的代码示例检查要呈现的元素是否为`<label>`元素通过调用<xref:System.String.Compare%2A?displayProperty=nameWithType>方法，，然后将<xref:System.Web.UI.HtmlTextWriter.TagName%2A>属性值和字符串， `"label"`，作为参数变量。</span><span class="sxs-lookup"><span data-stu-id="09602-611">The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and then passing the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property value and a string, `"label"`, as the parameter arguments.</span></span> <span data-ttu-id="09602-612">如果`<label>`元素将以将呈现的开始标记`<font>`元素，与`color`属性设置为`red`，呈现之前`<label>`元素的开始标记。</span><span class="sxs-lookup"><span data-stu-id="09602-612">If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag.</span></span> <span data-ttu-id="09602-613">如果该元素来呈现不`<label>`元素、 基类的版本、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="09602-613">If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TagRightChar">
      <MemberSignature Language="C#" Value="public const char TagRightChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagRightChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagRightChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagRightChar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09602-614">表示标记标签的右尖括号 (&gt;)。</span><span class="sxs-lookup"><span data-stu-id="09602-614">Represents the closing angle bracket (&gt;) of a markup tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-615"><xref:System.Web.UI.HtmlTextWriter.TagRightChar>字段由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>， <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>，和<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>时写入标记的方法。</span><span class="sxs-lookup"><span data-stu-id="09602-615">The <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-616">下面的代码示例演示如何呈现的结束标记`<table>`元素通过调用的重载<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-616">The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span> <span data-ttu-id="09602-617">若要呈现的标记的最后一个字符，该代码示例，请使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法替换<xref:System.Web.UI.HtmlTextWriter.TagRightChar>字段作为参数。</span><span class="sxs-lookup"><span data-stu-id="09602-617">To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="09602-618">此代码示例将会呈现以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-618">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09602-619">将指定数据类型和任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-619">Writes the specified data type to the output stream, along with any pending tab spacing.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-620">要写入到输出流的 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="09602-620">The <see cref="T:System.Boolean" /> to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-621">将布尔值的文本表示形式和任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-621">Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-622"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法生成任何待定的选项卡，然后调用<xref:System.IO.TextWriter.Write%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-622">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-623">要写入到输出流的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="09602-623">The Unicode character to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-624">将 Unicode 字符的文本表示形式和任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-624">Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-625"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法生成任何待定的选项卡，然后调用<xref:System.IO.TextWriter.Write%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-625">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-626">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法来结束开始标记中的`<img>`元素中的使用<xref:System.Web.UI.HtmlTextWriter.TagRightChar>常量。</span><span class="sxs-lookup"><span data-stu-id="09602-626">The following code example demonstrates using the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.</span></span>  
  
 <span data-ttu-id="09602-627">此代码示例将会呈现以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-627">This code example renders the following markup:</span></span>  
  
 `<img alt="A custom image">`  
  
 `</img>`  
  
 [!code-csharp[MarkupTextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#5)]
 [!code-vb[MarkupTextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="09602-628">要写入到输出流的 Unicode 字符数组。</span><span class="sxs-lookup"><span data-stu-id="09602-628">The array of Unicode characters to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-629">将 Unicode 字符数组的文本表示形式和任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-629">Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-630"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法生成任何待定的选项卡，然后调用<xref:System.IO.TextWriter.Write%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-630">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-631">本部分提供两个代码示例。</span><span class="sxs-lookup"><span data-stu-id="09602-631">This section provides two code examples.</span></span> <span data-ttu-id="09602-632">第一个代码示例演示如何创建字符的数组。</span><span class="sxs-lookup"><span data-stu-id="09602-632">The first one demonstrates how to create an array of characters.</span></span> <span data-ttu-id="09602-633">第二个代码示例演示如何使用数组。</span><span class="sxs-lookup"><span data-stu-id="09602-633">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="09602-634">这些代码示例生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-634">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="09602-635">下面的代码示例演示如何创建拼写出的字符的数组`hello world`。</span><span class="sxs-lookup"><span data-stu-id="09602-635">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="09602-636">包括在数组中是<xref:System.Web.UI.HtmlTextWriter.SpaceChar>字段，这将创建两个词之间留一个空格。</span><span class="sxs-lookup"><span data-stu-id="09602-636">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="09602-637">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现`hello world`时包含在页中包含此示例代码中的控件在到页中，前面的代码示例中创建的字符数组。</span><span class="sxs-lookup"><span data-stu-id="09602-637">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-638">要写入到输出流的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="09602-638">The double-precision floating-point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-639">将双精度浮点数的文本表示形式和任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-639">Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-640"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法生成任何待定的选项卡，然后调用<xref:System.IO.TextWriter.Write%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-640">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-641">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现的值<xref:System.Double.MaxValue?displayProperty=nameWithType>字段。</span><span class="sxs-lookup"><span data-stu-id="09602-641">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="09602-642">此代码示例将生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-642">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#7)]
 [!code-vb[MarkupTextWriter_Methods1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-643">要写入到输出流的 32 字节的带符号整数。</span><span class="sxs-lookup"><span data-stu-id="09602-643">The 32-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-644">将 32 字节的带符号整数的文本表示形式和任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-644">Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-645"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法生成任何待定的选项卡，然后调用<xref:System.IO.TextWriter.Write%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-645">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-646">要写入到输出流的 64 字节的带符号整数。</span><span class="sxs-lookup"><span data-stu-id="09602-646">The 64-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-647">将 64 字节的带符号整数的文本表示形式和任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-647">Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-648"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法生成任何待定的选项卡，然后调用<xref:System.IO.TextWriter.Write%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-648">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-649">要写入到输出流的对象。</span><span class="sxs-lookup"><span data-stu-id="09602-649">The object to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-650">将对象的文本表示形式和任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-650">Writes the text representation of an object to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-651"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法生成任何待定的选项卡，然后调用<xref:System.IO.TextWriter.Write%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-651">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-652">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现的值<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="09602-652">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="09602-653">此代码示例将生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-653">This code example generates the following markup:</span></span>  
  
 `This is a rendered CultureInfo object.`  
  
 `<bold>`  
  
 <span data-ttu-id="09602-654">值<xref:System.Globalization.CultureInfo.CurrentCulture%2A>属性：</span><span class="sxs-lookup"><span data-stu-id="09602-654">The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:</span></span>  
  
 `</bold>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#8)]
 [!code-vb[MarkupTextWriter_Methods1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-655">要写入到输出流的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="09602-655">The single-precision floating-point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-656">将单精度浮点数的文本表示形式和任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-656">Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-657"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法生成任何待定的选项卡，然后调用<xref:System.IO.TextWriter.Write%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-657">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-658">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现的值<xref:System.Single.Epsilon?displayProperty=nameWithType>字段，它是最小可能值的<xref:System.Single>结构。</span><span class="sxs-lookup"><span data-stu-id="09602-658">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="09602-659">此代码示例将生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-659">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#10)]
 [!code-vb[MarkupTextWriter_Methods1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="09602-660">要写入到输出流的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-660">The string to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-661">将指定的字符串和任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-661">Writes the specified string to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-662"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法生成任何待定的选项卡，然后调用<xref:System.IO.TextWriter.Write%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-662">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-663">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现开始和结束标记的自定义标记元素之间的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-663">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a string between the opening and closing tags of a custom markup element.</span></span>  
  
 <span data-ttu-id="09602-664">此代码示例将生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-664">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="09602-665">包含零个或多个格式项的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-665">A string that contains zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="09602-666">要设置其格式的对象。</span><span class="sxs-lookup"><span data-stu-id="09602-666">An object to format.</span></span></param>
        <summary><span data-ttu-id="09602-667">使用与 <see cref="M:System.String.Format(System.String,System.Object)" /> 方法相同的语义，将一个制表符字符串和一个格式化字符串连同任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-667">Writes a tab string and a formatted string to the output stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-668"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法生成任何待定的选项卡，然后调用<xref:System.IO.TextWriter.Write%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-668">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-669">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现的值的格式化的字符串<xref:System.Globalization.CultureInfo.CurrentCulture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09602-669">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#5)]
 [!code-vb[MarkupTextWriter_Methods1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="09602-670">包含零个或多个格式项的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-670">A string that contains zero or more format items.</span></span></param>
        <param name="arg"><span data-ttu-id="09602-671">要格式化的对象数组。</span><span class="sxs-lookup"><span data-stu-id="09602-671">An object array to format.</span></span></param>
        <summary><span data-ttu-id="09602-672">将包含某对象数组的文本表示形式的格式化字符串和任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-672">Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</span></span> <span data-ttu-id="09602-673">该方法使用与 <see cref="M:System.String.Format(System.String,System.Object[])" /> 方法相同的语义。</span><span class="sxs-lookup"><span data-stu-id="09602-673">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-674"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法生成任何待定的选项卡，然后调用<xref:System.IO.TextWriter.Write%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-674">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-675">本部分包含两个代码示例。</span><span class="sxs-lookup"><span data-stu-id="09602-675">This section contains two code examples.</span></span> <span data-ttu-id="09602-676">第一个代码示例演示如何呈现格式化的字符串和数组的内容。</span><span class="sxs-lookup"><span data-stu-id="09602-676">The first one demonstrates how to render a formatted string and the contents of an array.</span></span> <span data-ttu-id="09602-677">第二个代码示例演示如何声明数组。</span><span class="sxs-lookup"><span data-stu-id="09602-677">The second one demonstrates how to declare the array.</span></span>  
  
 <span data-ttu-id="09602-678">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现格式化的字符串和名为一个对象数组的内容`curPriceTime`。</span><span class="sxs-lookup"><span data-stu-id="09602-678">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the contents of an object array, named `curPriceTime`.</span></span> <span data-ttu-id="09602-679">方法调用呈现数组的第二个成员之前呈现的第一个成员。</span><span class="sxs-lookup"><span data-stu-id="09602-679">The method call renders the second member of the array before it renders the first member.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#9)]
 [!code-vb[MarkupTextWriter_Methods2#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#9)]  
  
 <span data-ttu-id="09602-680">下面的代码示例演示如何声明`curPriceTime`对象数组。</span><span class="sxs-lookup"><span data-stu-id="09602-680">The following code example demonstrates declaring the `curPriceTime` object array.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#14](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#14)]
 [!code-vb[MarkupTextWriter_Methods2#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="09602-681">将文本写入输出流的字符数组。</span><span class="sxs-lookup"><span data-stu-id="09602-681">The array of characters from which to write text to the output stream.</span></span></param>
        <param name="index"><span data-ttu-id="09602-682">数组中开始写入的索引位置。</span><span class="sxs-lookup"><span data-stu-id="09602-682">The index location in the array where writing begins.</span></span></param>
        <param name="count"><span data-ttu-id="09602-683">要写入到输出流的字符数。</span><span class="sxs-lookup"><span data-stu-id="09602-683">The number of characters to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-684">将 Unicode 字符子数组的文本表示形式和任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-684">Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-685"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法生成任何待定的选项卡，然后调用<xref:System.IO.TextWriter.Write%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-685">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-686">本部分提供两个代码示例。</span><span class="sxs-lookup"><span data-stu-id="09602-686">This section provides two code examples.</span></span> <span data-ttu-id="09602-687">第一个代码示例演示如何创建的字符数组。</span><span class="sxs-lookup"><span data-stu-id="09602-687">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="09602-688">第二个代码示例演示如何使用数组。</span><span class="sxs-lookup"><span data-stu-id="09602-688">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="09602-689">这些代码示例生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-689">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="09602-690">下面的代码示例演示如何创建拼写出的字符的数组`hello world`。</span><span class="sxs-lookup"><span data-stu-id="09602-690">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="09602-691">包括在数组中是<xref:System.Web.UI.HtmlTextWriter.SpaceChar>字段，这将创建两个词之间留一个空格。</span><span class="sxs-lookup"><span data-stu-id="09602-691">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="09602-692">下面的代码示例的以下部分采用`index`和`count`参数<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现在前面的示例创建的数组的前五个字符。</span><span class="sxs-lookup"><span data-stu-id="09602-692">The following portion of the code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the first five characters of the array created in the preceding example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#11)]
 [!code-vb[MarkupTextWriter_Methods2#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="09602-693">包含零个或多个格式项的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-693">A string that contains zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="09602-694">要设置其格式的对象。</span><span class="sxs-lookup"><span data-stu-id="09602-694">An object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="09602-695">要设置其格式的对象。</span><span class="sxs-lookup"><span data-stu-id="09602-695">An object to format.</span></span></param>
        <summary><span data-ttu-id="09602-696">将包含两个对象的文本表示形式的格式化字符串和任何挂起的制表符间距一起写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-696">Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</span></span> <span data-ttu-id="09602-697">该方法使用与 <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> 方法相同的语义。</span><span class="sxs-lookup"><span data-stu-id="09602-697">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-698"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法生成任何待定的选项卡，然后调用<xref:System.IO.TextWriter.Write%2A>基方法。</span><span class="sxs-lookup"><span data-stu-id="09602-698">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-699">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呈现格式化的字符串和的值<xref:System.Globalization.CultureInfo.CurrentCulture%2A>和<xref:System.DateTime.Today%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09602-699">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#6)]
 [!code-vb[MarkupTextWriter_Methods1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09602-700">将标记属性及其值写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-700">Writes a markup attribute and its value to the output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-701">要写入到输出流的属性。</span><span class="sxs-lookup"><span data-stu-id="09602-701">The attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="09602-702">要分配给特性的值。</span><span class="sxs-lookup"><span data-stu-id="09602-702">The value assigned to the attribute.</span></span></param>
        <summary><span data-ttu-id="09602-703">将指定的标记属性和值写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-703">Writes the specified markup attribute and value to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-704">使用<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法编写标记属性和它们的值没有编码的。</span><span class="sxs-lookup"><span data-stu-id="09602-704">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with no encoding.</span></span> <span data-ttu-id="09602-705"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法将写入括在双引号 （"） 的属性值。</span><span class="sxs-lookup"><span data-stu-id="09602-705">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="09602-706">如果`value`是`null`、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法将写入仅的属性名称。</span><span class="sxs-lookup"><span data-stu-id="09602-706">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-707">下面的代码示例演示呈现`<img>`元素中的哪两种重载<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="09602-707">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="09602-708">此代码示例使用以下过程：</span><span class="sxs-lookup"><span data-stu-id="09602-708">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="09602-709">调用<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法，来呈现元素的开始字符。</span><span class="sxs-lookup"><span data-stu-id="09602-709">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="09602-710">调用<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>重载以将`alt`属性和其值的`<img>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-710">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="09602-711">调用<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>重载来呈现自定义`myattribute`属性，值为`No "encoding" required`，然后将设置`fEncode`到`false`。</span><span class="sxs-lookup"><span data-stu-id="09602-711">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="09602-712">关闭该元素的开始标记，然后调用<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法来关闭`<img>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-712">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="09602-713">此代码示例将生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-713">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="09602-714">在派生类中，您可以重写<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />方法可定义编写属性和它们的值的自定义规则。</span><span class="sxs-lookup"><span data-stu-id="09602-714">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to define custom rules for writing attributes and their values.</span></span> <span data-ttu-id="09602-715">例如，你可以编写使用允许的代码<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />方法写入具有空值的属性。</span><span class="sxs-lookup"><span data-stu-id="09602-715">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to write an attribute with an empty value.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-716">要写入输出流的标记特性。</span><span class="sxs-lookup"><span data-stu-id="09602-716">The markup attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="09602-717">要分配给特性的值。</span><span class="sxs-lookup"><span data-stu-id="09602-717">The value assigned to the attribute.</span></span></param>
        <param name="fEncode">
          <span data-ttu-id="09602-718">若要对特性及其分配值进行编码，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09602-718"><see langword="true" /> to encode the attribute and its assigned value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="09602-719">将指定标记特性和值写入输出流，并且（如果指定）写入经过编码的值。</span><span class="sxs-lookup"><span data-stu-id="09602-719">Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-720">使用<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法编写标记属性和它们的值或无需编码。</span><span class="sxs-lookup"><span data-stu-id="09602-720">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with or without encoding.</span></span> <span data-ttu-id="09602-721"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法使用<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法来执行操作的编码。</span><span class="sxs-lookup"><span data-stu-id="09602-721">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method uses the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method to do the encoding.</span></span>  
  
 <span data-ttu-id="09602-722"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法将写入括在双引号 （"） 的属性值。</span><span class="sxs-lookup"><span data-stu-id="09602-722">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="09602-723">如果`value`是`null`、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法将写入仅的属性名称。</span><span class="sxs-lookup"><span data-stu-id="09602-723">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-724">下面的代码示例演示呈现`<img>`元素中的哪两种重载<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="09602-724">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="09602-725">此代码示例使用以下过程：</span><span class="sxs-lookup"><span data-stu-id="09602-725">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="09602-726">调用<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法，来呈现元素的开始字符。</span><span class="sxs-lookup"><span data-stu-id="09602-726">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="09602-727">调用<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>重载以将`alt`属性和其值的`<img>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-727">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="09602-728">调用<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>重载来呈现自定义`myattribute`属性，值为`No "encoding" required`，然后将设置`fEncode`到`false`。</span><span class="sxs-lookup"><span data-stu-id="09602-728">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="09602-729">关闭该元素的开始标记，然后调用<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法来关闭`<img>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-729">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="09602-730">此代码示例将生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-730">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="09602-731">在派生类中，您可以重写<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />方法可定义编写属性和它们的值的自定义规则。</span><span class="sxs-lookup"><span data-stu-id="09602-731">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to define custom rules for writing attributes and their values.</span></span> <span data-ttu-id="09602-732">例如，你可以编写使用允许的代码<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />方法写入具有空值的属性。</span><span class="sxs-lookup"><span data-stu-id="09602-732">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to write an attribute with an empty value.</span></span></para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBeginTag(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="09602-733">要写入其开始标记的标记元素。</span><span class="sxs-lookup"><span data-stu-id="09602-733">The markup element of which to write the opening tag.</span></span></param>
        <summary><span data-ttu-id="09602-734">将任何制表符间距和指定标记元素的开始标记写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-734">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-735"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法不会写入标记元素的开始标记在右尖括号 (>)。</span><span class="sxs-lookup"><span data-stu-id="09602-735">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method does not write the closing angle bracket (>) of the markup element's opening tag.</span></span> <span data-ttu-id="09602-736">这就可以将写入标记属性指定给元素的开始标记。</span><span class="sxs-lookup"><span data-stu-id="09602-736">This allows the writing of markup attributes to the opening tag of the element.</span></span> <span data-ttu-id="09602-737">使用<xref:System.Web.UI.HtmlTextWriter.TagRightChar>常量，以结束开始标记，在调用时<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-737">Use the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant to close the opening tag when calling the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method.</span></span> <span data-ttu-id="09602-738">使用<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法替换<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>常量时写入标记的自结束的元素。</span><span class="sxs-lookup"><span data-stu-id="09602-738">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constant when you write markup elements that are self-closing.</span></span>  
  
 <span data-ttu-id="09602-739"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法使用的自定义服务器控件所不允许标记或特性的映射，并为每个请求相同的方式呈现标记元素。</span><span class="sxs-lookup"><span data-stu-id="09602-739">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-740">下面的代码示例演示呈现`<img>`元素中的哪两种重载<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="09602-740">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="09602-741">此代码示例使用以下过程：</span><span class="sxs-lookup"><span data-stu-id="09602-741">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="09602-742">调用<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法，来呈现元素的开始字符。</span><span class="sxs-lookup"><span data-stu-id="09602-742">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="09602-743">调用<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>重载以将`alt`属性和其值的`<img>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-743">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="09602-744">调用<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>重载来呈现自定义`myattribute`属性，值为`No "encoding" required`，然后将设置`fEncode`到`false`。</span><span class="sxs-lookup"><span data-stu-id="09602-744">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="09602-745">关闭该元素的开始标记，然后调用<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法来关闭`<img>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-745">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="09602-746">此代码示例将生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-746">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public virtual void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBreak();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-747">将 <see langword="&lt;br /&gt;" /> 标记元素写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-747">Writes a <see langword="&lt;br /&gt;" /> markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-748">使用<xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>方法呈现行在自定义控件或适配器标记中中断。</span><span class="sxs-lookup"><span data-stu-id="09602-748">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to render line breaks in custom control or adapter markup.</span></span> <span data-ttu-id="09602-749"><xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>方法将写入之间留一个空格`br`和`/`为改进了 HTML 兼容性。</span><span class="sxs-lookup"><span data-stu-id="09602-749">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes a space between the `br` and `/` for improved HTML compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-750">下面的代码示例演示如何调用<xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>方法写入`<br />`到之后请求的浏览器的元素<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>方法将写入的编码`&lt;custID&gt; &amp; &lt;invoice#&gt;`标记。</span><span class="sxs-lookup"><span data-stu-id="09602-750">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `&lt;custID&gt; &amp; &lt;invoice#&gt;` markup.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="09602-751">要进行编码并写入到输出流的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-751">The text string to encode and write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-752">对请求设备的指定文本进行编码，然后将其写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-752">Encodes the specified text for the requesting device, and then writes it to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-753">使用<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>方法的字符串包含命令的尖括号 (\<或 >) 或与号 (&)。</span><span class="sxs-lookup"><span data-stu-id="09602-753">Use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method when a string contains angle brackets (\< or >) or an ampersand (&).</span></span>  
  
 <span data-ttu-id="09602-754"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>方法使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法来执行的编码和也将 Unicode 字符转换`00A0`到`&nbsp;`。</span><span class="sxs-lookup"><span data-stu-id="09602-754">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to `&nbsp;`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-755">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>方法写入的编码的标记`&lt;custID&gt; &amp; &lt;invoice#&gt;`写入输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-755">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method to write the encoded markup `&lt;custID&gt; &amp; &lt;invoice#&gt;` to the output stream.</span></span> <span data-ttu-id="09602-756"><xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>方法写入`<br />`。</span><span class="sxs-lookup"><span data-stu-id="09602-756">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="09602-757"><paramref name="text" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="09602-757"><paramref name="text" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrl">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrl (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrl(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="09602-758">要进行编码并写入到输出流的 URL 字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-758">The URL string to encode and write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-759">对指定的 URL 进行编码，然后将它写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-759">Encodes the specified URL, and then writes it to the output stream.</span></span> <span data-ttu-id="09602-760">URL 可以包括参数。</span><span class="sxs-lookup"><span data-stu-id="09602-760">The URL might include parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-761"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>方法对中的字符串进行编码`url`根据 URL 编码的规范的参数。</span><span class="sxs-lookup"><span data-stu-id="09602-761">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method encodes the string in the `url` parameter in accordance with the specification for URL encoding.</span></span> <span data-ttu-id="09602-762">未编码按照问号 （？） 分隔符的参数。</span><span class="sxs-lookup"><span data-stu-id="09602-762">The parameters that follow the question mark (?) delimiter are not encoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-763">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>方法，将生成以下输出：</span><span class="sxs-lookup"><span data-stu-id="09602-763">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method, which generates the following output:</span></span>  
  
 `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#3)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrlParameter">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrlParameter (string urlText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrlParameter(string urlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrlParameter (urlText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrlParameter(System::String ^ urlText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlText"><span data-ttu-id="09602-764">要进行编码并写入到输出流的 URL 参数字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-764">The URL parameter string to encode and write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-765">对请求的设备的指定 URL 参数进行编码，然后将它写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-765">Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-766">URL 的参数部分中的空格被编码为加号 （+） 和等号 （=） 编码为`%3d`。</span><span class="sxs-lookup"><span data-stu-id="09602-766">Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as `%3d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-767">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A>方法，将生成以下输出：</span><span class="sxs-lookup"><span data-stu-id="09602-767">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> method, which generates the following output:</span></span>  
  
 `ID%3dCity+State`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#4)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEndTag">
      <MemberSignature Language="C#" Value="public virtual void WriteEndTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndTag(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="09602-768">要写入其结束标记的元素。</span><span class="sxs-lookup"><span data-stu-id="09602-768">The element to write the closing tag for.</span></span></param>
        <summary><span data-ttu-id="09602-769">写入指定标记元素的任何制表符间距和结束标记。</span><span class="sxs-lookup"><span data-stu-id="09602-769">Writes any tab spacing and the closing tag of the specified markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-770">与不同<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法，<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法具有无法从逻辑上使匹配相应的开始标记的元素结束标记。</span><span class="sxs-lookup"><span data-stu-id="09602-770">Unlike the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method, the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method has no logic to make the element end tag match the corresponding opening tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-771">下面的代码示例演示呈现`<img>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-771">The following code example demonstrates rendering an `<img>` element.</span></span> <span data-ttu-id="09602-772">此代码示例使用以下过程：</span><span class="sxs-lookup"><span data-stu-id="09602-772">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="09602-773">调用<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法来呈现元素的开始字符。</span><span class="sxs-lookup"><span data-stu-id="09602-773">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="09602-774">调用的两个重载<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法写入属性到`<img>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-774">Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="09602-775">调用<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法来关闭`<img>`元素。</span><span class="sxs-lookup"><span data-stu-id="09602-775">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteFullBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteFullBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFullBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFullBeginTag(System::String ^ tagName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="09602-776">要写入到输出流的元素。</span><span class="sxs-lookup"><span data-stu-id="09602-776">The element to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-777">将任何制表符间距和指定标记元素的开始标记写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-777">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-778"><xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>方法自动在右尖括号 (>) 的写入的元素的开始标记与不同<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法，不会写入在右尖括号。</span><span class="sxs-lookup"><span data-stu-id="09602-778">The <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> method automatically writes the closing angle bracket (>) of the opening tag of the element, unlike the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which does not write the closing angle bracket.</span></span> <span data-ttu-id="09602-779">使用<xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>的标记元素没有属性。</span><span class="sxs-lookup"><span data-stu-id="09602-779">Use <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> for markup elements that have no attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09602-780">按照重载参数的指定，将数据写入到 <see cref="T:System.Web.UI.HtmlTextWriter" /> 输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-780">Writes data to an <see cref="T:System.Web.UI.HtmlTextWriter" /> output stream, as specified by the overloaded parameters, followed by a line terminator string.</span></span> <span data-ttu-id="09602-781">此方法的所有版本均将任何挂起的制表符间距写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-781">All versions of this method write any pending tab spacing to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-782">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-782">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-783"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-783">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09602-784">将行结束符字符串写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-784">Writes a line terminator string to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-785">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-785">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-786">有关详情，请参阅<xref:System.IO.TextWriter.WriteLine%2A>。</span><span class="sxs-lookup"><span data-stu-id="09602-786">For more information, see <xref:System.IO.TextWriter.WriteLine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-787">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法来插入行后的`<img>`元素呈现。</span><span class="sxs-lookup"><span data-stu-id="09602-787">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to insert a line after an `<img>` element is rendered.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-788">要写入到输出流的布尔值。</span><span class="sxs-lookup"><span data-stu-id="09602-788">The Boolean to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-789">将任何挂起的制表符间距和一个布尔值的文本表示形式写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-789">Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-790">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-790">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-791"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-791">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(char value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-792">要写入到输出流的字符。</span><span class="sxs-lookup"><span data-stu-id="09602-792">The character to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-793">将任何挂起的制表符间距和一个 Unicode 字符写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-793">Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-794">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-794">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-795"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-795">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="09602-796">要写入到输出流的字符数组。</span><span class="sxs-lookup"><span data-stu-id="09602-796">The character array to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-797">将任何挂起的制表符间距和一个 Unicode 字符数组写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-797">Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-798">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-798">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-799"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-799">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-800">本部分提供两个代码示例。</span><span class="sxs-lookup"><span data-stu-id="09602-800">This section provides two code examples.</span></span> <span data-ttu-id="09602-801">第一个代码示例演示如何创建数组。</span><span class="sxs-lookup"><span data-stu-id="09602-801">The first one demonstrates how to create an array.</span></span> <span data-ttu-id="09602-802">第二个代码示例演示如何使用该数组。</span><span class="sxs-lookup"><span data-stu-id="09602-802">The second one demonstrates how to use that array.</span></span>  
  
 <span data-ttu-id="09602-803">这些代码示例生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-803">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="09602-804">下面的代码示例演示如何创建拼写出的字符的数组`hello world`。</span><span class="sxs-lookup"><span data-stu-id="09602-804">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="09602-805">包括在数组中是<xref:System.Web.UI.HtmlTextWriter.SpaceChar>字段，这将创建两个词之间留一个空格。</span><span class="sxs-lookup"><span data-stu-id="09602-805">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="09602-806">下面的代码示例呈现`hello world`已在前面的示例通过使用的字符数组<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-806">The following code example renders the `hello world` character array that was created in the preceding example by using the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#5)]
 [!code-vb[MarkupTextWriter_Methods2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-807">要写入到输出流的双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="09602-807">The double-precision floating-point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-808">将任何挂起的制表符间距和一个双精度浮点数的文本表示形式写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-808">Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-809">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-809">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-810"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-810">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-811">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法呈现的值<xref:System.Double.MaxValue?displayProperty=nameWithType>字段。</span><span class="sxs-lookup"><span data-stu-id="09602-811">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="09602-812">此代码示例将生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-812">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#3)]
 [!code-vb[MarkupTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-813">要写入到输出流的 32 字节的带符号整数。</span><span class="sxs-lookup"><span data-stu-id="09602-813">The 32-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-814">将任何挂起的制表符间距和一个 32 字节有符号整数的文本表示形式写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-814">Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-815">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-815">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-816"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-816">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-817">要写入到输出流的 64 字节的带符号整数。</span><span class="sxs-lookup"><span data-stu-id="09602-817">The 64-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-818">将任何挂起的制表符间距和一个 64 字节有符号整数的文本表示形式写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-818">Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-819">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-819">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-820"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-820">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-821">要写入到输出流的对象。</span><span class="sxs-lookup"><span data-stu-id="09602-821">The object to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-822">将任何挂起的制表符间距和一个对象的文本表示形式写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-822">Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-823">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-823">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-824"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-824">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-825">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法呈现的值<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>到控件的属性。</span><span class="sxs-lookup"><span data-stu-id="09602-825">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to a control.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#4)]
 [!code-vb[MarkupTextWriter_Methods1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-826">要写入到输出流的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="09602-826">The single-precision floating point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-827">将任何挂起的制表符间距和一个单精度浮点数的文本表示形式写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-827">Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-828">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-828">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-829"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-829">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-830">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法呈现的值<xref:System.Single.Epsilon?displayProperty=nameWithType>字段，它是最小可能值的<xref:System.Single>结构。</span><span class="sxs-lookup"><span data-stu-id="09602-830">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="09602-831">此代码示例将生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-831">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#9)]
 [!code-vb[MarkupTextWriter_Methods1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="09602-832">要写入到输出流的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-832">The string to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-833">将任何挂起的制表符间距和一个文本字符串写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-833">Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-834">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-834">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-835"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-835">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09602-836">要写入到输出流的 4 字节无符号整数。</span><span class="sxs-lookup"><span data-stu-id="09602-836">The 4-byte unsigned integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-837">将任何挂起的制表符间距和一个 4 字节无符号整数的文本表示形式写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-837">Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-838">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-838">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-839"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-839">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="09602-840">包含零个或多个格式项的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-840">A string containing zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="09602-841">要设置其格式的对象。</span><span class="sxs-lookup"><span data-stu-id="09602-841">An object to format.</span></span></param>
        <summary><span data-ttu-id="09602-842">将任何挂起的制表符间距和一个包含一个对象的文本表示形式的格式化字符串写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-842">Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-843">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-843">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-844"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法使用相同的语义<xref:System.String.Format%28System.String%2CSystem.Object%29>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-844">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="09602-845"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-845">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-846">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法呈现的值的格式化的字符串<xref:System.Globalization.CultureInfo.CurrentCulture%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09602-846">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#1)]
 [!code-vb[MarkupTextWriter_Methods1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="09602-847">包含零个或多个格式项的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-847">A string containing zero or more format items.</span></span></param>
        <param name="arg"><span data-ttu-id="09602-848">要格式化的对象数组。</span><span class="sxs-lookup"><span data-stu-id="09602-848">An object array to format.</span></span></param>
        <summary><span data-ttu-id="09602-849">将任何挂起的制表符间距和一个包含对象数组的文本表示形式的格式化字符串写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-849">Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-850">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-850">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-851"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法使用相同的语义<xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-851">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span> <span data-ttu-id="09602-852"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`方法。</span><span class="sxs-lookup"><span data-stu-id="09602-852">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-853">本部分包含两个代码示例。</span><span class="sxs-lookup"><span data-stu-id="09602-853">This section contains two code examples.</span></span> <span data-ttu-id="09602-854">第一个代码示例演示如何呈现字符串和数组写入输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-854">The first one demonstrates how to render a string and an array to the output stream.</span></span> <span data-ttu-id="09602-855">第二个演示如何声明数组。</span><span class="sxs-lookup"><span data-stu-id="09602-855">The second one shows how to declare the array.</span></span>  
  
 <span data-ttu-id="09602-856">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法呈现格式化的字符串和写入输出流对象数组的内容。</span><span class="sxs-lookup"><span data-stu-id="09602-856">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the contents of an object array to the output stream.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#2)]
 [!code-vb[MarkupTextWriter_Methods2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#2)]  
  
 <span data-ttu-id="09602-857">下面的代码示例演示如何声明已在前面的代码示例中呈现的对象数组。</span><span class="sxs-lookup"><span data-stu-id="09602-857">The following code example shows how to declare the object array that was rendered in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#7)]
 [!code-vb[MarkupTextWriter_Methods2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="09602-858">向输出流写入文本所使用的字符数组。</span><span class="sxs-lookup"><span data-stu-id="09602-858">The character array from which to write text to the output stream.</span></span></param>
        <param name="index"><span data-ttu-id="09602-859">字符数组中开始写入的位置。</span><span class="sxs-lookup"><span data-stu-id="09602-859">The location in the character array where writing begins.</span></span></param>
        <param name="count"><span data-ttu-id="09602-860">要写入到输出流的数组中的字符数。</span><span class="sxs-lookup"><span data-stu-id="09602-860">The number of characters in the array to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-861">将任何挂起的制表符间距和一个 Unicode 字符子数组写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-861">Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-862">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-862">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-863"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-863">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-864">本部分包含两个代码示例。</span><span class="sxs-lookup"><span data-stu-id="09602-864">This section contains two code examples.</span></span> <span data-ttu-id="09602-865">第一个代码示例演示如何创建的字符数组。</span><span class="sxs-lookup"><span data-stu-id="09602-865">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="09602-866">第二个代码示例演示如何使用数组。</span><span class="sxs-lookup"><span data-stu-id="09602-866">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="09602-867">这些代码示例生成以下标记：</span><span class="sxs-lookup"><span data-stu-id="09602-867">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="09602-868">下面的代码示例演示如何创建拼写出的字符的数组`hello world`。</span><span class="sxs-lookup"><span data-stu-id="09602-868">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="09602-869">包括在数组中是<xref:System.Web.UI.HtmlTextWriter.SpaceChar>字段，这将创建两个词之间留一个空格。</span><span class="sxs-lookup"><span data-stu-id="09602-869">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="09602-870">下面的代码示例使用`index`和`count`参数<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法呈现在前面的代码示例中创建的数组的前五个字符。</span><span class="sxs-lookup"><span data-stu-id="09602-870">The following code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the first five characters of the array created in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#4)]
 [!code-vb[MarkupTextWriter_Methods2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="09602-871">包含零个或多个格式项的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-871">A string containing zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="09602-872">要设置其格式的对象。</span><span class="sxs-lookup"><span data-stu-id="09602-872">An object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="09602-873">要设置其格式的对象。</span><span class="sxs-lookup"><span data-stu-id="09602-873">An object to format.</span></span></param>
        <summary><span data-ttu-id="09602-874">将任何挂起的制表符间距和包含两个对象的文本表示形式的格式化字符串写入到输出流，并在后面跟上行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-874">Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-875">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-875">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-876"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法使用相同的语义<xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29>方法。</span><span class="sxs-lookup"><span data-stu-id="09602-876">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="09602-877"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-877">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09602-878">下面的代码示例演示如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法呈现格式化的字符串和的值<xref:System.Globalization.CultureInfo.CurrentCulture%2A>属性和<xref:System.DateTime.Today%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="09602-878">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#2)]
 [!code-vb[MarkupTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineNoTabs">
      <MemberSignature Language="C#" Value="public void WriteLineNoTabs (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLineNoTabs(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLineNoTabs (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLineNoTabs(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="09602-879">要写入到输出流的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-879">The string to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="09602-880">将一个字符串写入到输出流，并在后面跟上一个行结束符字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-880">Writes a string, followed by a line terminator string, to the output stream.</span></span> <span data-ttu-id="09602-881">此方法忽略任何指定的制表符间距。</span><span class="sxs-lookup"><span data-stu-id="09602-881">This method ignores any specified tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-882">使用<xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A>方法而不是<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法时不希望呈现在呈现字符串之前任何选项卡间距`s`。</span><span class="sxs-lookup"><span data-stu-id="09602-882">Use the <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.</span></span>  
  
 <span data-ttu-id="09602-883">默认行结束符字符串为回车符后跟一个换行符 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="09602-883">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="09602-884"><xref:System.IO.TextWriter.WriteLine%2A>基方法用于写入`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-884">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09602-885">将样式属性及其值写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-885">Writes a style attribute and its value to the output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-886">要写入到输出流的样式属性。</span><span class="sxs-lookup"><span data-stu-id="09602-886">The style attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="09602-887">分配给样式属性的值。</span><span class="sxs-lookup"><span data-stu-id="09602-887">The value assigned to the style attribute.</span></span></param>
        <summary><span data-ttu-id="09602-888">将指定的样式属性写入到输出流。</span><span class="sxs-lookup"><span data-stu-id="09602-888">Writes the specified style attribute to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-889"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>方法将写入样式属性采用以下形式：</span><span class="sxs-lookup"><span data-stu-id="09602-889">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="09602-890">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="09602-890">`name` `=` `value` `;`</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="09602-891">要写入到输出流的样式属性。</span><span class="sxs-lookup"><span data-stu-id="09602-891">The style attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="09602-892">分配给样式属性的值。</span><span class="sxs-lookup"><span data-stu-id="09602-892">The value assigned to the style attribute.</span></span></param>
        <param name="fEncode">
          <span data-ttu-id="09602-893">若要对样式属性及其赋值进行编码，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09602-893"><see langword="true" /> to encode the style attribute and its assigned value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="09602-894">将指定的样式特性和值写入到输出流，如果指定了值，则还要对值进行编码。</span><span class="sxs-lookup"><span data-stu-id="09602-894">Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-895"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>方法将写入样式属性采用以下形式：</span><span class="sxs-lookup"><span data-stu-id="09602-895">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="09602-896">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="09602-896">`name` `=` `value` `;`</span></span>  
  
 <span data-ttu-id="09602-897"><xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法用于编码`value`参数。</span><span class="sxs-lookup"><span data-stu-id="09602-897">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method is used to encode the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteUrlEncodedString">
      <MemberSignature Language="C#" Value="protected void WriteUrlEncodedString (string text, bool argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUrlEncodedString(string text, bool argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUrlEncodedString (text As String, argument As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUrlEncodedString(System::String ^ text, bool argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="argument" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="09602-898">要进行编码并写入到输出流的字符串。</span><span class="sxs-lookup"><span data-stu-id="09602-898">The string to encode and write to the output stream.</span></span></param>
        <param name="argument">
          <span data-ttu-id="09602-899">如果为 <see langword="true" />，则将字符串编码为 URL 参数部分的一部分；如果为 <see langword="false" />，则将字符串编码为 URL 路径部分的一部分。</span><span class="sxs-lookup"><span data-stu-id="09602-899"><see langword="true" /> to encode the string as a part of the parameter section of the URL; <see langword="false" /> to encode the string as part of the path section of the URL.</span></span></param>
        <summary><span data-ttu-id="09602-900">写入指定的字符串，并根据 URL 要求对它进行编码。</span><span class="sxs-lookup"><span data-stu-id="09602-900">Writes the specified string, encoding it according to URL requirements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09602-901"><xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A>方法对可以将其视为 URL 分隔符的字符进行编码 (依赖于的设置`argument`) 为字符串形式的`%xx`，如果的 ASCII 代码是小于 128; 否则为`%uxxxx`，其中`x`是十六进制数字。</span><span class="sxs-lookup"><span data-stu-id="09602-901">The <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method encodes characters that could be considered URL delimiters (dependent on the setting of `argument`) into strings of the form `%xx`, if the ASCII code is less than 128; otherwise, `%uxxxx`, where `x` is a hexadecimal digit.</span></span>  
  
 <span data-ttu-id="09602-902"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>和<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A>方法使用<xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A>作为实用工具方法的方法。</span><span class="sxs-lookup"><span data-stu-id="09602-902">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> methods use the <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method as a utility method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>