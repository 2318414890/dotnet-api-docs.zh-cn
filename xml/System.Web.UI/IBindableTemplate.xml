<Type Name="IBindableTemplate" FullName="System.Web.UI.IBindableTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e671a0a3bc5d5304607355a02154bfbacb8a32e7" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51872063" /></Metadata><TypeSignature Language="C#" Value="public interface IBindableTemplate : System.Web.UI.ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableTemplate implements class System.Web.UI.ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IBindableTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindableTemplate&#xA;Implements ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindableTemplate : System::Web::UI::ITemplate" />
  <TypeSignature Language="F#" Value="type IBindableTemplate = interface&#xA;    interface ITemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0d83e-101">为 ASP.NET 数据绑定控件（如 <see cref="T:System.Web.UI.WebControls.DetailsView" /> 和 <see cref="T:System.Web.UI.WebControls.FormView" />）提供一种可以自动绑定到模板化内容节中的 ASP.NET 数据源控件的方式。</span><span class="sxs-lookup"><span data-stu-id="0d83e-101">Provides a way for ASP.NET data-bound controls, such as <see cref="T:System.Web.UI.WebControls.DetailsView" /> and <see cref="T:System.Web.UI.WebControls.FormView" />, to automatically bind to an ASP.NET data source control within templated content sections.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d83e-102"><xref:System.Web.UI.IBindableTemplate>接口提供一种 ASP.NET 数据绑定控件，如<xref:System.Web.UI.WebControls.DetailsView>， <xref:System.Web.UI.WebControls.GridView>，和<xref:System.Web.UI.WebControls.FormView>，以将绑定到数据提供由 ASP.NET 数据源控件，例如<xref:System.Web.UI.WebControls.ObjectDataSource>或<xref:System.Web.UI.WebControls.SqlDataSource>，当数据绑定控件包括模板化内容。</span><span class="sxs-lookup"><span data-stu-id="0d83e-102">The <xref:System.Web.UI.IBindableTemplate> interface provides a way for ASP.NET data-bound controls, such as <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.GridView>, and <xref:System.Web.UI.WebControls.FormView>, to bind to data supplied by an ASP.NET data source control, such as <xref:System.Web.UI.WebControls.ObjectDataSource> or <xref:System.Web.UI.WebControls.SqlDataSource>, when the data-bound control includes templated content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0d83e-103">页面开发人员不会实现<xref:System.Web.UI.IBindableTemplate>接口。</span><span class="sxs-lookup"><span data-stu-id="0d83e-103">Page developers do not implement the <xref:System.Web.UI.IBindableTemplate> interface.</span></span> <span data-ttu-id="0d83e-104">创建自定义数据绑定控件的开发人员可能操作<xref:System.Web.UI.IBindableTemplate>的实现中的对象<xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A>并<xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A>方法，但不是会实现其自己<xref:System.Web.UI.IBindableTemplate>对象。</span><span class="sxs-lookup"><span data-stu-id="0d83e-104">Developers creating custom data-bound controls might manipulate <xref:System.Web.UI.IBindableTemplate> objects in implementations of the <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> and <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> methods, but do not implement their own <xref:System.Web.UI.IBindableTemplate> objects.</span></span>  
  
 <span data-ttu-id="0d83e-105">数据绑定控件，如<xref:System.Web.UI.WebControls.GridView>通常意识到及其子控件树，和可以因此将值绑定到它们，以及从中提取值并且每次发生时数据绑定的数据绑定控件和数据源控件之间传递这些值.</span><span class="sxs-lookup"><span data-stu-id="0d83e-105">Data-bound controls such as <xref:System.Web.UI.WebControls.GridView> typically are aware of their child control trees, and can therefore bind values to them, extract values from them, and pass these values between the data-bound control and a data source control whenever data binding occurs.</span></span> <span data-ttu-id="0d83e-106">但是，当页面开发人员定义了数据绑定控件的模板化内容，在模板中的子控件看不到父数据绑定控件： 父级可以呈现子内容 （因为控件可以有效地呈现本身），但它不能提取这些子控件，以传递到关联的数据源控件更新、 插入或删除操作的值。</span><span class="sxs-lookup"><span data-stu-id="0d83e-106">However, when a page developer defines templated content for a data-bound control, the child controls within the template are not visible to the parent data-bound control: the parent can render the child content (because controls effectively render themselves), but it cannot extract the values of these child controls to pass to an associated data source control's update, insert, or delete operation.</span></span> <span data-ttu-id="0d83e-107">在数据绑定方案中，模板化内容是不透明的父数据绑定控件。</span><span class="sxs-lookup"><span data-stu-id="0d83e-107">In data-binding scenarios, templated content is opaque to a parent data-bound control.</span></span> <span data-ttu-id="0d83e-108">`Bind`语法使数据绑定控件内的数据绑定控件中提取值<xref:System.Web.UI.IBindableTemplate>实例。</span><span class="sxs-lookup"><span data-stu-id="0d83e-108">The `Bind` syntax makes it possible for the data-bound control to extract the values from a control data-bound inside an <xref:System.Web.UI.IBindableTemplate> instance.</span></span>  
  
 <span data-ttu-id="0d83e-109">数据绑定可以是单向或双向。</span><span class="sxs-lookup"><span data-stu-id="0d83e-109">The data binding can be one-way or two-way.</span></span> <span data-ttu-id="0d83e-110">(这些绑定方向定义的<xref:System.ComponentModel.BindingDirection>枚举。)单向数据绑定是出站方向，从数据源控件，数据绑定控件，则在执行任何数据绑定例如，任何数据读取方案都涉及单向数据绑定。</span><span class="sxs-lookup"><span data-stu-id="0d83e-110">(These binding directions are defined by the <xref:System.ComponentModel.BindingDirection> enumeration.) One-way data binding is any data binding performed in an outbound direction, from data source control to data-bound control; for example, any data-reading scenario involves one-way data binding.</span></span> <span data-ttu-id="0d83e-111">对于单向数据绑定，您可以使用单向数据绑定语法 (`<%# Eval("fieldname") %>`) 在模板化内容，且不需要使用双向 ASP.NET 数据绑定语法。</span><span class="sxs-lookup"><span data-stu-id="0d83e-111">For one-way data binding, you can use one-way data binding syntax (`<%# Eval("fieldname") %>`) inside templated content, and do not need to use two-way ASP.NET data-binding syntax.</span></span> <span data-ttu-id="0d83e-112">双向数据绑定描述的入站方向，从数据绑定控件绑定到数据源控件中的数据绑定。</span><span class="sxs-lookup"><span data-stu-id="0d83e-112">Two-way data-binding describes data-binding in the inbound direction, from the data-bound control to the data source control.</span></span> <span data-ttu-id="0d83e-113">自动编辑、 插入和删除方案使用 ASP.NET 数据绑定和数据源控件是双向数据绑定方案。</span><span class="sxs-lookup"><span data-stu-id="0d83e-113">Automatic edit, insert, and delete scenarios using ASP.NET data-bound and data source controls are two-way data-binding scenarios.</span></span> <span data-ttu-id="0d83e-114">这些方案使用双向数据绑定表达式 (`<%# Bind("fieldname") %>`)。</span><span class="sxs-lookup"><span data-stu-id="0d83e-114">These scenarios use two-way data-binding expressions (`<%# Bind("fieldname") %>`).</span></span> <span data-ttu-id="0d83e-115"><xref:System.Web.UI.IBindableTemplate>接口和 ASP.NET 基础结构支持 ASP.NET 数据源控件和模板化内容之间的自动、 声明性、 双向数据绑定。</span><span class="sxs-lookup"><span data-stu-id="0d83e-115">The <xref:System.Web.UI.IBindableTemplate> interface and the ASP.NET infrastructure support automatic, declarative, two-way data binding between ASP.NET data source controls and templated content.</span></span> <span data-ttu-id="0d83e-116">有关 ASP.NET 数据绑定表达式和语法的详细信息，请参阅[绑定到数据库](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)并[数据绑定表达式概述](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)。</span><span class="sxs-lookup"><span data-stu-id="0d83e-116">For more information about ASP.NET data-binding expressions and syntax, see [Binding to Databases](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) and [Data-Binding Expressions Overview](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).</span></span>  
  
 <span data-ttu-id="0d83e-117">最常以声明方式定义为数据绑定控件的模板化内容。</span><span class="sxs-lookup"><span data-stu-id="0d83e-117">Templated content for data-bound controls is most often defined declaratively.</span></span> <span data-ttu-id="0d83e-118">下表描述了最常用于将模板化数据绑定到数据绑定控件的过程。</span><span class="sxs-lookup"><span data-stu-id="0d83e-118">The following table describes the processes most commonly used to bind templated data to data-bound controls.</span></span>  
  
|<span data-ttu-id="0d83e-119">数据绑定控件</span><span class="sxs-lookup"><span data-stu-id="0d83e-119">Data-bound control</span></span>|<span data-ttu-id="0d83e-120">进程</span><span class="sxs-lookup"><span data-stu-id="0d83e-120">Process</span></span>|  
|-------------------------|-------------|  
|<xref:System.Web.UI.WebControls.DetailsView>|<span data-ttu-id="0d83e-121">数据绑定控件绑定到数据使用`DataSourceID`中定义的数据源控件，并在模板化内容的属性<xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>，<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>或<xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0d83e-121">The data-bound control is bound to data using the `DataSourceID` property of the data source control, and the templated content is defined in an <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> or <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> property.</span></span>|  
|<xref:System.Web.UI.WebControls.GridView>|<span data-ttu-id="0d83e-122">数据绑定控件绑定到数据使用`DataSourceID`中定义的数据源控件，并在模板化内容的属性<xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>或<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="0d83e-122">The data-bound control is bound to data using the `DataSourceID` property of the data source control, and the templated content is defined in an <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> or <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> property.</span></span> <span data-ttu-id="0d83e-123"><xref:System.Web.UI.WebControls.GridView>控件不支持插入操作。</span><span class="sxs-lookup"><span data-stu-id="0d83e-123">The <xref:System.Web.UI.WebControls.GridView> control does not support an insert operation.</span></span>|  
|<xref:System.Web.UI.WebControls.FormView>|<span data-ttu-id="0d83e-124">数据绑定控件绑定到数据使用`DataSourceID`中定义属性，并在模板化内容<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>， <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>，或<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>属性，或在<xref:System.Web.UI.WebControls.TemplateField>对象。</span><span class="sxs-lookup"><span data-stu-id="0d83e-124">The data-bound control is bound to data using the `DataSourceID` property, and the templated content is defined in an <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>, or <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> property, or in a <xref:System.Web.UI.WebControls.TemplateField> object.</span></span>|  
  
 <span data-ttu-id="0d83e-125"><xref:System.Web.UI.WebControls.DataList>和<xref:System.Web.UI.WebControls.Repeater>控件不支持自动双向数据绑定方案。</span><span class="sxs-lookup"><span data-stu-id="0d83e-125">The <xref:System.Web.UI.WebControls.DataList> and <xref:System.Web.UI.WebControls.Repeater> controls do not support automatic two-way data-binding scenarios.</span></span>  
  
 <span data-ttu-id="0d83e-126">将隐式创建 ASP.NET<xref:System.Web.UI.IBindableTemplate>对象时将绑定到模板中的 ASP.NET 数据源控件的模板化内容被分析。</span><span class="sxs-lookup"><span data-stu-id="0d83e-126">ASP.NET implicitly creates an <xref:System.Web.UI.IBindableTemplate> object when templated content that binds to an ASP.NET data source control within the template is parsed.</span></span> <span data-ttu-id="0d83e-127">具体而言，ASP.NET 分析程序创建的实例<xref:System.Web.UI.CompiledBindableTemplateBuilder>类分析，它使用 ASP.NET 数据绑定语法并包含支持数据绑定的 ASP.NET Web 服务器控件的模板化内容时。</span><span class="sxs-lookup"><span data-stu-id="0d83e-127">Specifically, the ASP.NET parser creates an instance of the <xref:System.Web.UI.CompiledBindableTemplateBuilder> class when it parses templated content that uses ASP.NET data-binding syntax and contains ASP.NET Web server controls that support data binding.</span></span> <span data-ttu-id="0d83e-128">这些 ASP.NET 服务器控件的标记<xref:System.ComponentModel.BindableAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="0d83e-128">These ASP.NET sever controls are marked by the <xref:System.ComponentModel.BindableAttribute> attribute.</span></span>  
  
 <span data-ttu-id="0d83e-129"><xref:System.Web.UI.IBindableTemplate>接口定义了一种方法， <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>。</span><span class="sxs-lookup"><span data-stu-id="0d83e-129">The <xref:System.Web.UI.IBindableTemplate> interface defines one method, <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>.</span></span> <span data-ttu-id="0d83e-130">此方法定义的双向数据绑定，以便数据绑定控件可以自动从模板化内容中提取名称/值对，并在运行时将对传递到数据源控件。</span><span class="sxs-lookup"><span data-stu-id="0d83e-130">This method is defined for two-way data binding, so that a data-bound control can automatically extract name/value pairs from templated content and pass the pairs to a data source control at run time.</span></span> <span data-ttu-id="0d83e-131">为了进行自动数据绑定成功，从通过模板化内容中提取的字段名称<xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>方法必须与关联的数据源控件中的参数名称匹配。</span><span class="sxs-lookup"><span data-stu-id="0d83e-131">For automatic data binding to succeed, the field names extracted from the templated content by the <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> method must match parameter names in an associated data source control.</span></span> <span data-ttu-id="0d83e-132">控制开发人员调用<xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>方法显式仅在其实现的<xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A>或某些其他类似的自定义数据绑定控件的方法。</span><span class="sxs-lookup"><span data-stu-id="0d83e-132">Control developers call the <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> method explicitly only within their implementations of <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> or some other similar method of a custom data-bound control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d83e-133">下面的代码示例演示了如何<xref:System.Web.UI.WebControls.FormView>控件可以以声明方式定义模板化内容，将绑定到提供的数据<xref:System.Web.UI.WebControls.SqlDataSource>控制，并显示和编辑现有记录。</span><span class="sxs-lookup"><span data-stu-id="0d83e-133">The following code example demonstrates how a <xref:System.Web.UI.WebControls.FormView> control can declaratively define templated content, bind to data provided by a <xref:System.Web.UI.WebControls.SqlDataSource> control, and display and edit existing records.</span></span> <span data-ttu-id="0d83e-134">ASP.NET 分析器分析模板化内容，并创建<xref:System.Web.UI.IBindableTemplate>对象在运行时能够将值从绑定<xref:System.Web.UI.WebControls.SqlDataSource>由这两个单向 ASP.NET 数据绑定语法在模板中定义的数据绑定区域的控件 (`<%# Eval("fieldname") %>`) 和双向数据绑定语法 (`<%# Bind("fieldname") %>`)。</span><span class="sxs-lookup"><span data-stu-id="0d83e-134">The ASP.NET parser parses the templated content and creates an <xref:System.Web.UI.IBindableTemplate> object at run time that is able to bind values from the <xref:System.Web.UI.WebControls.SqlDataSource> control to the data-binding areas defined in the template by both one-way ASP.NET data-binding syntax (`<%# Eval("fieldname") %>`) and two-way data-binding syntax (`<%# Bind("fieldname") %>`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0d83e-135">此控件具有接受用户输入，这是潜在的安全威胁的文本框。</span><span class="sxs-lookup"><span data-stu-id="0d83e-135">This control has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="0d83e-136">默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。</span><span class="sxs-lookup"><span data-stu-id="0d83e-136">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="0d83e-137">有关详细信息，请参阅[脚本侵入概述](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)。</span><span class="sxs-lookup"><span data-stu-id="0d83e-137">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
    <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
    <altmember cref="T:System.ComponentModel.BindableAttribute" />
    <altmember cref="T:System.ComponentModel.BindingDirection" />
  </Docs>
  <Members>
    <Member MemberName="ExtractValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.IOrderedDictionary ExtractValues(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExtractValues (container As Control) As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ ExtractValues(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member ExtractValues : System.Web.UI.Control -&gt; System.Collections.Specialized.IOrderedDictionary" Usage="iBindableTemplate.ExtractValues container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="0d83e-138">在双向数据绑定方案中，数据绑定控件将 <see cref="T:System.Web.UI.Control" />（要从中提取名称/值对）传递至关联的数据源控件。</span><span class="sxs-lookup"><span data-stu-id="0d83e-138">The <see cref="T:System.Web.UI.Control" /> from which to extract name/value pairs, which are passed by the data-bound control to an associated data source control in two-way data-binding scenarios.</span></span></param>
        <summary><span data-ttu-id="0d83e-139">通过类来实现时，使用模板化内容中的双向 ASP.NET 数据绑定语法对绑定值的一组名称/值对进行检索。</span><span class="sxs-lookup"><span data-stu-id="0d83e-139">When implemented by a class, retrieves a set of name/value pairs for values bound using two-way ASP.NET data-binding syntax within the templated content.</span></span></summary>
        <returns><span data-ttu-id="0d83e-140">名称/值对的 <see cref="T:System.Collections.Specialized.IOrderedDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="0d83e-140">An <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> of name/value pairs.</span></span> <span data-ttu-id="0d83e-141">名称表示模板化内容中控件的名称，值是使用双向 ASP.NET 数据绑定语法绑定的属性值的当前值。</span><span class="sxs-lookup"><span data-stu-id="0d83e-141">The name represents the name of a control within templated content, and the value is the current value of a property value bound using two-way ASP.NET data-binding syntax.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0d83e-142"><see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />方法必须符合以下规则：</span><span class="sxs-lookup"><span data-stu-id="0d83e-142">An <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> method must conform to the following rules:</span></span> 
<span data-ttu-id="0d83e-143">-如果为给定字段中存在多个绑定，则使用遇到的最后一个绑定。</span><span class="sxs-lookup"><span data-stu-id="0d83e-143">-   If more than one binding exists for a given field, the last binding encountered is used.</span></span>  
  
<span data-ttu-id="0d83e-144">-以便引用中的控件的标识符<see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />方法，该控件还必须具有用户定义的 ID 属性在分析时。</span><span class="sxs-lookup"><span data-stu-id="0d83e-144">-   In order to reference a control's identifier in the <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> method, the control must also have a user-defined ID property at parse time.</span></span> <span data-ttu-id="0d83e-145">如果不存在 ID，这会导致分析错误。</span><span class="sxs-lookup"><span data-stu-id="0d83e-145">If no ID exists, this results in a parse error.</span></span>  
  
<span data-ttu-id="0d83e-146">-双向 ASP.NET 数据绑定语法才有效中<see cref="T:System.Web.UI.ITemplate" />或<see cref="T:System.Web.UI.IBindableTemplate" />数据绑定控件的属性。</span><span class="sxs-lookup"><span data-stu-id="0d83e-146">-   Two-way ASP.NET data-binding syntax is only valid in an <see cref="T:System.Web.UI.ITemplate" /> or <see cref="T:System.Web.UI.IBindableTemplate" /> property of a data-bound control.</span></span></para></block>
        <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
        <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
      </Docs>
    </Member>
  </Members>
</Type>