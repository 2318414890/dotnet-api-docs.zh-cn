<Type Name="IpcClientChannel" FullName="System.Runtime.Remoting.Channels.Ipc.IpcClientChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="124396afb3ea14ed95bc6e46ef09de967bece3fd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class IpcClientChannel : System.Runtime.Remoting.Channels.IChannel, System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IpcClientChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelSender, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class IpcClientChannel&#xA;Implements IChannel, IChannelSender, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class IpcClientChannel : System::Runtime::Remoting::Channels::IChannel, System::Runtime::Remoting::Channels::IChannelSender, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c7e99-101">为远程调用实现使用 IPC 协议传输消息的客户端信道。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c7e99-101">Implements a client channel for remote calls that uses the IPC protocol to transmit messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7e99-102">.Net Framework 远程处理基础结构使用的通道用于传输远程调用。</span><span class="sxs-lookup"><span data-stu-id="c7e99-102">Channels are used by the.NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="c7e99-103">当客户端调用远程对象时，则会将调用序列化到一条消息是由客户端通道发送和接收的服务器信道。</span><span class="sxs-lookup"><span data-stu-id="c7e99-103">When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="c7e99-104">收到的消息后，它是反序列化和处理。</span><span class="sxs-lookup"><span data-stu-id="c7e99-104">After the message is received, it is deserialized and processed.</span></span> <span data-ttu-id="c7e99-105">任何返回的值是由服务器通道传输和接收的客户端通道。</span><span class="sxs-lookup"><span data-stu-id="c7e99-105">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="c7e99-106"><xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>类同一台计算机上的应用程序域之间使用 Windows 进程间通信 (IPC) 将开机传输消息。</span><span class="sxs-lookup"><span data-stu-id="c7e99-106">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> class uses the Windows interprocess communication (IPC) system to transport messages between application domains on the same computer.</span></span> <span data-ttu-id="c7e99-107">同一台计算机上的应用程序域之间进行通信，IPC 通道时，TCP 或 HTTP 通道比快得多。</span><span class="sxs-lookup"><span data-stu-id="c7e99-107">When communicating between application domains on the same computer, the IPC channel is much faster than the TCP or HTTP channels.</span></span>  
  
 <span data-ttu-id="c7e99-108">若要执行其他处理的消息在客户端中，你可以指定的实现<xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider>接口处理的所有消息都可通过<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>对象将被传递。</span><span class="sxs-lookup"><span data-stu-id="c7e99-108">To perform additional processing of messages on the client side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> object will be passed.</span></span>  
  
 <span data-ttu-id="c7e99-109">默认情况下，<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>类使用二进制格式化程序来序列化所有消息。</span><span class="sxs-lookup"><span data-stu-id="c7e99-109">By default, the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> class uses a binary formatter to serialize all messages.</span></span>  
  
 <span data-ttu-id="c7e99-110">A<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel>对象有关联的配置属性，可以在设置配置文件在运行时 (通过调用静态<xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType>方法) 或以编程方式 (通过将传递<xref:System.Collections.IDictionary>集合到<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A>构造函数）。</span><span class="sxs-lookup"><span data-stu-id="c7e99-110">A <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> constructor).</span></span> <span data-ttu-id="c7e99-111">有关这些配置属性的列表，请参阅的文档<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="c7e99-111">For a list of these configuration properties, see the documentation for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7e99-112">下面的代码示例演示如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> 类。</span><span class="sxs-lookup"><span data-stu-id="c7e99-112">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> class.</span></span>  
  
 [!code-cpp[Remoting_Ipc#20](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/client.cpp#20)]
 [!code-csharp[Remoting_Ipc#20](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/client.cs#20)]  
  
 <span data-ttu-id="c7e99-113">前面的代码中使用以下远程对象。</span><span class="sxs-lookup"><span data-stu-id="c7e99-113">The preceding code uses the following remote object.</span></span>  
  
 [!code-cpp[Remoting_Ipc#0](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/counter.cpp#0)]
 [!code-csharp[Remoting_Ipc#0](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/counter.cs#0)]  
  
 <span data-ttu-id="c7e99-114">有关远程公开此对象的服务器的示例，请参阅<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>。</span><span class="sxs-lookup"><span data-stu-id="c7e99-114">For an example of a server that exposes this object remotely, see <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c7e99-115">初始化 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-115">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcClientChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcClientChannel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c7e99-116">初始化 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-116">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7e99-117">配置属性<xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>实例返回此构造函数的所有设置为其默认值。</span><span class="sxs-lookup"><span data-stu-id="c7e99-117">The configuration properties of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> instance returned by this constructor are all set to their default values.</span></span> <span data-ttu-id="c7e99-118">下表显示每个配置属性的默认值。</span><span class="sxs-lookup"><span data-stu-id="c7e99-118">The following table shows the default value for each configuration property.</span></span>  
  
|<span data-ttu-id="c7e99-119">配置属性</span><span class="sxs-lookup"><span data-stu-id="c7e99-119">Configuration property</span></span>|<span data-ttu-id="c7e99-120">描述</span><span class="sxs-lookup"><span data-stu-id="c7e99-120">Description</span></span>|  
|----------------------------|-----------------|  
|`name`|<span data-ttu-id="c7e99-121">默认名称为"ipc 客户端"。</span><span class="sxs-lookup"><span data-stu-id="c7e99-121">The default name is "ipc client".</span></span> <span data-ttu-id="c7e99-122">每个信道都必须有唯一的名称。</span><span class="sxs-lookup"><span data-stu-id="c7e99-122">Each channel must have a unique name.</span></span>|  
|`priority`|<span data-ttu-id="c7e99-123">默认优先级为 1。</span><span class="sxs-lookup"><span data-stu-id="c7e99-123">The default priority is 1.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c7e99-124">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="c7e99-124">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[Remoting_Ipc#21](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/client.cpp#21)]
 [!code-csharp[Remoting_Ipc#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/client.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcClientChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IClientChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcClientChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ sinkProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="c7e99-125">一个 <see cref="T:System.Collections.IDictionary" /> 集合，它为信道要使用的配置属性指定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-125">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</span>
          </span>
        </param>
        <param name="sinkProvider">
          <span data-ttu-id="c7e99-126">信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-126">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7e99-127">使用指定的配置属性和接收器初始化 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-127">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> class with the specified configuration properties and sink.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7e99-128">有关通道配置属性的详细信息，请参阅[通道和格式化程序配置属性](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe)。</span><span class="sxs-lookup"><span data-stu-id="c7e99-128">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).</span></span>  
  
 <span data-ttu-id="c7e99-129">如果不需要接收器功能，设置`sinkProvider`参数`null`。</span><span class="sxs-lookup"><span data-stu-id="c7e99-129">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7e99-130">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="c7e99-130">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#41](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client2.cpp#41)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#41](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client2.cs#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcClientChannel (string name, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, sinkProvider As IClientChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcClientChannel(System::String ^ name, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ sinkProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c7e99-131">信道的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-131">The name of the channel.</span>
          </span>
        </param>
        <param name="sinkProvider">
          <span data-ttu-id="c7e99-132">信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-132">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7e99-133">使用指定的名称和接收器初始化 <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-133">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> class with the specified name and sink.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7e99-134">此构造函数设置<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A>属性使用`name`参数。</span><span class="sxs-lookup"><span data-stu-id="c7e99-134">This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="c7e99-135">如果你想要注册多个通道，每个通道都必须具有唯一的名称。</span><span class="sxs-lookup"><span data-stu-id="c7e99-135">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
 <span data-ttu-id="c7e99-136">如果不需要接收器功能，设置`sinkProvider`参数`null`。</span><span class="sxs-lookup"><span data-stu-id="c7e99-136">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7e99-137">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="c7e99-137">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#42](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client2.cpp#42)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#42](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client2.cs#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7e99-138">获取当前信道的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-138">Gets the name of the current channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7e99-139">包含信道名称的 <see cref="T:System.String" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-139">A <see cref="T:System.String" /> instance that contains the name of the channel.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7e99-140">每个已注册的通道具有一个唯一名称。</span><span class="sxs-lookup"><span data-stu-id="c7e99-140">Every registered channel has a unique name.</span></span> <span data-ttu-id="c7e99-141">该名称用于检索特定通道时调用<xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="c7e99-141">The name is used to retrieve a specific channel when calling the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c7e99-142">默认名称为"ipc 客户端"。</span><span class="sxs-lookup"><span data-stu-id="c7e99-142">The default name is "ipc client".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7e99-143">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="c7e99-143">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#21)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7e99-144">获取当前信道的优先级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-144">Gets the priority of the current channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7e99-145">一个整数，指示分配给此信道的优先级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-145">An integer that indicates the priority assigned to the channel.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7e99-146">优先级控制在其中竞争的客户端连接到给定的终结点; 顺序更高的优先级通道之前较低的优先级通道连接。</span><span class="sxs-lookup"><span data-stu-id="c7e99-146">The priority controls the order in which competing clients connect to a given endpoint; higher priority channels connect before lower priority channels.</span></span> <span data-ttu-id="c7e99-147">默认优先级为 1;允许负的优先级。</span><span class="sxs-lookup"><span data-stu-id="c7e99-147">The default priority is 1; negative priorities are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7e99-148">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="c7e99-148">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#23](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#23)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#23](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSink">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(string url, object remoteChannelData, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(System.String,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMessageSink (url As String, remoteChannelData As Object, ByRef objectURI As String) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageSink ^ CreateMessageSink(System::String ^ url, System::Object ^ remoteChannelData, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c7e99-149">新接收器应将消息传递到的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-149">The URL to which the new sink delivers messages.</span>
          </span>
          <span data-ttu-id="c7e99-150">此参数可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-150">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="remoteChannelData">
          <span data-ttu-id="c7e99-151">新接收器将把消息传送到的远程主机的信道数据对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-151">The channel data object of the remote host to which the new sink will deliver messages.</span>
          </span>
          <span data-ttu-id="c7e99-152">此参数可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-152">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="objectURI">
          <span data-ttu-id="c7e99-153">此方法返回时，包含新信道消息接收器的 URI，该信道消息接收器将消息传送到指定 URL 或信道数据对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-153">When this method returns, contains the URI of the new channel message sink that delivers messages to the specified URL or channel data object.</span>
          </span>
          <span data-ttu-id="c7e99-154">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-154">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7e99-155">返回将消息传送到指定 URL 或信道数据对象的信道消息接收器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-155">Returns a channel message sink that delivers messages to the specified URL or channel data object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7e99-156">将消息传递给指定 URL 或信道数据对象的信道消息接收器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-156">A channel message sink that delivers messages to the specified URL or channel data object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7e99-157"><xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A>方法返回的通道消息接收器将消息传送到指定的 URL 或通道数据对象。</span><span class="sxs-lookup"><span data-stu-id="c7e99-157">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A> method returns a channel message sink that delivers messages to either the specified URL or the channel data object.</span></span> <span data-ttu-id="c7e99-158">如果`uri`参数是`null`，`remoteChannelData`用作接收器的目标。</span><span class="sxs-lookup"><span data-stu-id="c7e99-158">If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink.</span></span> <span data-ttu-id="c7e99-159">请`url`或`remoteChannelData`参数可以是`null`，但不是两者。</span><span class="sxs-lookup"><span data-stu-id="c7e99-159">Either the `url` or `remoteChannelData` parameters can be `null`, but not both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7e99-160">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c7e99-160">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A> method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#22](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#22)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#22](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException">
          <span data-ttu-id="c7e99-161">提供的接收器不实现 <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-161">The provided sink does not implement <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c7e99-162">获取或设置一个布尔值，该值指示当前信道是否安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-162">Gets or sets a Boolean value that indicates whether the current channel is secure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c7e99-163">一个布尔值，指示当前实例是否安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-163">A Boolean value that indicates whether the current instance is secure.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c7e99-164">从中提取对象 URI 的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-164">The URL from which to extract the object URI.</span>
          </span>
        </param>
        <param name="objectURI">
          <span data-ttu-id="c7e99-165">当此方法返回时，包含具有远程已知对象的 URI 的 <see cref="T:System.String" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-165">When this method returns, a <see cref="T:System.String" /> instance that holds the URI of the remote well-known object.</span>
          </span>
          <span data-ttu-id="c7e99-166">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-166">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c7e99-167">从指定 URL 提取信道 URI 和远程已知对象 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-167">Extracts the channel URI and the remote well-known object URI from the specified URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c7e99-168">一个 <see cref="T:System.String" /> 包含信道 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c7e99-168">A <see cref="T:System.String" /> that contains the channel URI.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c7e99-169">下面的代码示例说明如何使用 <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c7e99-169">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#24](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#24)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#24](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>